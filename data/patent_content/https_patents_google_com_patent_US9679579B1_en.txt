US9679579B1 - Systems and methods facilitating selective removal of content from a mixed audio recording - Google Patents
Systems and methods facilitating selective removal of content from a mixed audio recording Download PDFInfo
- Publication number
- US9679579B1 US9679579B1 US15/186,993 US201615186993A US9679579B1 US 9679579 B1 US9679579 B1 US 9679579B1 US 201615186993 A US201615186993 A US 201615186993A US 9679579 B1 US9679579 B1 US 9679579B1
- Authority
- US
- United States
- Prior art keywords
- file
- audio file
- frequency domain
- sound recording
- domain representation
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 title claims abstract description 76
- 230000003595 spectral effect Effects 0.000 claims abstract description 14
- 238000001914 filtration Methods 0.000 claims description 53
- 238000013507 mapping Methods 0.000 claims description 9
- 238000012545 processing Methods 0.000 abstract description 43
- 238000004891 communication Methods 0.000 description 33
- 230000000875 corresponding effect Effects 0.000 description 21
- 230000008569 process Effects 0.000 description 15
- 238000010586 diagram Methods 0.000 description 14
- 230000006870 function Effects 0.000 description 14
- 238000006243 chemical reaction Methods 0.000 description 13
- 230000004048 modification Effects 0.000 description 10
- 238000012986 modification Methods 0.000 description 10
- 238000005516 engineering process Methods 0.000 description 7
- 239000002609 medium Substances 0.000 description 7
- 230000003044 adaptive effect Effects 0.000 description 6
- 230000002238 attenuated effect Effects 0.000 description 6
- 238000009499 grossing Methods 0.000 description 6
- 230000005236 sound signal Effects 0.000 description 6
- 238000013459 approach Methods 0.000 description 5
- 238000001228 spectrum Methods 0.000 description 5
- 238000012546 transfer Methods 0.000 description 5
- 230000004913 activation Effects 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 4
- 230000001413 cellular effect Effects 0.000 description 4
- 238000004422 calculation algorithm Methods 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 238000010606 normalization Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 238000004364 calculation method Methods 0.000 description 2
- 230000001427 coherent effect Effects 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 238000007726 management method Methods 0.000 description 2
- 238000004519 manufacturing process Methods 0.000 description 2
- 230000005055 memory storage Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 230000003252 repetitive effect Effects 0.000 description 2
- 230000004044 response Effects 0.000 description 2
- RYGMFSIKBFXOCR-UHFFFAOYSA-N Copper Chemical compound [Cu] RYGMFSIKBFXOCR-UHFFFAOYSA-N 0.000 description 1
- 230000009471 action Effects 0.000 description 1
- 230000004075 alteration Effects 0.000 description 1
- 230000003321 amplification Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 229910052802 copper Inorganic materials 0.000 description 1
- 239000010949 copper Substances 0.000 description 1
- 230000002596 correlated effect Effects 0.000 description 1
- 238000005314 correlation function Methods 0.000 description 1
- 230000007547 defect Effects 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 230000009977 dual effect Effects 0.000 description 1
- 238000002592 echocardiography Methods 0.000 description 1
- 239000000835 fiber Substances 0.000 description 1
- 238000003780 insertion Methods 0.000 description 1
- 230000037431 insertion Effects 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 238000003199 nucleic acid amplification method Methods 0.000 description 1
- 239000013307 optical fiber Substances 0.000 description 1
- 229920001690 polydopamine Polymers 0.000 description 1
- 238000003672 processing method Methods 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 238000007493 shaping process Methods 0.000 description 1
- 238000011524 similarity measure Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
- 230000002123 temporal effect Effects 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
- 238000000844 transformation Methods 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
- 230000007723 transport mechanism Effects 0.000 description 1
- 239000006163 transport media Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/10—Protecting distributed programs or content, e.g. vending or licensing of copyrighted material ; Digital rights management [DRM]
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/0316—Speech enhancement, e.g. noise reduction or echo cancellation by changing the amplitude
- G10L21/0356—Speech enhancement, e.g. noise reduction or echo cancellation by changing the amplitude for synchronising with other signals, e.g. video signals
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/0272—Voice signal separating
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/0272—Voice signal separating
- G10L21/028—Voice signal separating using properties of sound source
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/0272—Voice signal separating
- G10L21/0308—Voice signal separating characterised by the type of parameter measurement, e.g. correlation techniques, zero crossing techniques or predictive techniques
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/038—Speech enhancement, e.g. noise reduction or echo cancellation using band spreading techniques
- G10L21/0388—Details of processing therefor
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/48—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use
- G10L25/51—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use for comparison or discrimination
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/433—Content storage operation, e.g. storage operation in response to a pause request, caching operations
- H04N21/4334—Recording operations
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/43—Processing of content or additional data, e.g. demultiplexing additional data from a digital video stream; Elementary client operations, e.g. monitoring of home network or synchronising decoder's clock; Client middleware
- H04N21/439—Processing of audio elementary streams
- H04N21/4394—Processing of audio elementary streams involving operations for analysing the audio stream, e.g. detecting features or characteristics in audio streams
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/81—Monomedia components thereof
- H04N21/8106—Monomedia components thereof involving special audio data, e.g. different tracks for different languages
- H04N21/8113—Monomedia components thereof involving special audio data, e.g. different tracks for different languages comprising music, e.g. song in MP3 format
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L21/00—Processing of the speech or voice signal to produce another audible or non-audible signal, e.g. visual or tactile, in order to modify its quality or its intelligibility
- G10L21/02—Speech enhancement, e.g. noise reduction or echo cancellation
- G10L21/0208—Noise filtering
- G10L2021/02087—Noise filtering the noise being separate speech, e.g. cocktail party
Definitions
- This disclosure relates to audio processing that facilitates selective removal of content from mixed audio.
- Audio recordings often include numerous different types of sound recordings. For example, audio recordings often include speech and music. Acoustic capture of sound can be facilitated through use of microphone and audio mixing can be employed to integrate multiple different sound recordings into a single audio recording. However, with conventional devices, systems or methods, it is difficult to selectively remove one or more sound recordings from a mixed audio recording.
- a system includes: a memory storing computer-executable components; and a processor configured to execute computer-executable components stored in the memory.
- the computer-executable components can include a communication component and a processing component.
- the communication component can facilitate display of information indicative of an option to select one or more sound recordings for removal from a first audio file to generate a second audio file, and facilitate display of indicia of the second audio file.
- the processing component can generate the second audio file by removing the selected one or more sound recordings from the first audio file (e.g., based on winner-takes-all (WTA) coding). Hough transforms and filtering in frequency domain can also be employed to generate the second audio file.
- WTA winner-takes-all
- the system can include: a memory storing computer-executable components; and a processor configured to execute computer-executable components stored in the memory.
- the computer-executable components can include an identification component and a processing component.
- the identification component can: identify one or more sound recordings in a first audio file; and identify a reference file having at least a defined level of similarity to at least one of the one or more sound recordings.
- the processing component can remove, from the first audio file, at least one of the identified one or more sound recordings to generate a second audio file.
- the processing component can include an alignment and rate component that determines a first alignment between the reference file and the first audio file by comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file.
- a method can include employing a processor to execute computer-executable components stored within a memory to perform operations.
- the operations can include: identifying one or more sound recordings in a first audio file; and identifying a reference file having at least a defined level of similarity to at least one of the one or more sound recordings.
- the operations can also include processing the first audio file to remove the at least one of the one or more sound recordings from the first audio file and generate a second audio file.
- processing includes determining a first alignment between the reference file and the first audio file based, at least, on comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file.
- an apparatus can include means for identifying one or more sound recordings in a first audio file, and means for identifying a reference file having at least a defined level of similarity to at least one of the one or more sound recordings.
- the apparatus can also include means for processing the first audio file to remove the at least one of the one or more sound recordings from the first audio file and generate a second audio file.
- means for processing includes means for determining a first alignment between the reference file and the first audio file based, at least, on comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file.
- the one or more embodiments include the features hereinafter fully described and particularly pointed out in the claims.
- the following description and the annexed drawings set forth in this disclosure detail certain illustrative aspects of the one or more embodiments. These aspects are indicative, however, of but a few of the various ways in which the principles of various embodiments can be employed, and the described embodiments are intended to include all such aspects and their equivalents.
- FIG. 1 is an illustration of a block diagram of a non-limiting system that facilitates selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- FIG. 2 is an illustration of a block diagram of a non-limiting system that facilitates selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- FIG. 3 is an illustration of a block diagram of a non-limiting media editing system that facilitates selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- FIGS. 4A and 4B are illustrations of non-limiting user interfaces for a media editing system that facilitates selective modification of audio content in a mixed audio recording in accordance with one or more embodiments described herein.
- FIGS. 5, 6, 7, 8, 9, 10 and 11 are illustrations of non-limiting flow diagrams of methods that facilitate selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- FIG. 12 is an illustration of a schematic diagram of a non-limiting operating environment for implementing one or more embodiments described in this disclosure.
- FIG. 13 is an illustration of a schematic diagram of a non-limiting computing environment for implementing one or more embodiments described in this disclosure.
- Current copyright protection schemes can compare uploaded media content to an index of validated and protected content to determine whether copyright rights are implicated.
- the copyright holder can provide copyrighted media content as a reference file.
- Policies for addressing content that match the copyrighted media content can be implemented and action taken to address issues related to the content. For example, if a match between the media content and the reference file is detected, a copyright claim can be generated regarding the uploaded media content.
- uploaded media content may need to be processed in one or more different manners.
- content can be removed, attenuated and/or muted to address copyright issues.
- content in a media file is identified as including copyrighted audio and removed from the media file to mitigate non-acceptance of the media file by the service provider.
- the content can be removed from the media file to also mitigate unauthorized use allegations.
- unwanted audio files in a media file can be removed, attenuated and/or muted to emphasize other audio in the media file.
- unwanted audio files in a media file can be removed, attenuated and/or muted to emphasize other audio in the media file.
- automobile, train or airplane noise or a barking dog can make more important audio in a recording inaudible.
- These types of noise can be removed, attenuated or muted to allow the other audio to be clearly heard.
- audio in a media file can be removed and replaced with other audio.
- an audio track can be removed and replaced with another audio track.
- audio in a media file can be extracted for dubbing.
- audio content can be extracted from a media file and replaced with re-recorded content in a language corresponding to the country in which the media file may be played.
- an audio track within a media file can be selectively attenuated and enhanced to facilitate discernment of speech from a particular user. For example, multiple people may speak concurrently at a cocktail party, and processing can be employed to selectively attenuate one or more speakers or enhance one or more speakers. As another example, one portion of an audio track could be attenuated to allow other audio to be heard clearly while another portion of an audio track (e.g., a later-occurring portion) could be enhanced to allow the enhanced audio to be heard clearly.
- Systems and methods described herein facilitate selective removal of one or more sound recordings from mixed audio.
- the sound recordings to be removed from the mixed audio can be identified and a reference file that is similar to the audio content to be removed can be determined.
- Coarse and fine alignment along with rate adjustment can be performed to align the audio file in which the sound recording is located and the reference file, and to adjust rate of the reference file, for efficient removal of the sound recordings.
- coarse alignment and rate adjustment are performed based on a comparison of WTA-coded spectrograms of the reference and audio files, and mapping of information (e.g., candidate time offset and candidate rate ratio pairs) to Hough space.
- the reference and audio files are then aligned employing the optimal time offset, and the reference file is rate adjusted (e.g., rate stretched) to a rate matching that of the audio file.
- Fine alignment is performed within chunks of signal determine by the coarse alignment and computed based on performing a cross correlation between the reference and audio files.
- a filter is generated in frequency domain based on determining a ratio between the frequency domain representation (FR) of the reference file and the FR of the audio file.
- the reference file is then filtered to result in a filtered version that has increased similarity to the sound recording to be removed.
- a residual, or second audio signal is generated by aligning the reference and audio signal such that the reference signal is aligned with the portion of the audio signal having the sound recording to be removed, and subtracting the filtered version of the FR of the reference file from the FR of the audio signal.
- a second, spectral subtraction can be performed on the residual, or second audio signal, to generate an enhanced signal.
- an inverse transform is performed to obtain a time domain version of the waveform that represents the second audio file.
- the process is repeated for different segments of the reference file and audio file and the segments are overlapped to re-create the entire second audio file.
- the entire second audio file can be embedded in different types of media files in various embodiments.
- One or more embodiments can advantageously provide accurate and efficient alignment of the reference file and first audio file with sample-level accuracy able to cope with drift between the reference file and the first audio file due, for example, to different sample rates.
- One or more embodiments also efficiently perform adaptive filtering in the frequency domain, rather than in the time domain, making use of certain mathematical constraints on the signal type to result in a system that is computationally efficient. Efficient systems and methods facilitating selective removal of sound recordings from mixed audio recordings can result.
- FIG. 1 is an illustration of a block diagram of a non-limiting system that facilitates selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- System 100 can include a user device 102 , reference file repository 104 , media editing system 106 , network 108 and/or media server 110 .
- the term “user” can refer to a person, entity, system, or combination thereof.
- the user device 102 , reference file repository 104 , media editing system 106 and/or media server 110 can be communicatively coupled to one another via network 108 and/or directly coupled to one another.
- system 100 includes the components shown, in some embodiments, system 100 can include media editing system 106 and reference file repository 104 . Additionally, system 100 can be communicatively and/or electrically coupled to a cloud-based video editor (not shown) in some embodiments.
- Media editing system 106 can include hardware and/or software configured to communicate with user device 102 , reference file repository 104 and/or media server 110 .
- Communication can include, but is not limited to, receipt and/or transmission of media files from which sound recordings are to be removed, commands for display of information (e.g., information for selection of the sound recording) via a user interface of user device 102 , transmission of media files having the sound recordings removed and the like.
- Such communication can facilitate selective removal of content (e.g., a selected sound recording) from media content (e.g., audio recording, video recording), which media editing system 106 can perform.
- media editing system 106 can receive and/or access from a remote location a media file including audio content.
- the audio content can include one or more sound recordings interlaced with one another.
- the audio content can include, but is not limited to, music (e.g., soundtracks), songs, speeches, and/or any other suitable audio content.
- the audio content can include a video performance of a cover song uploaded to user device 102 by a user, and media editing system 106 can identify the cover song by evaluating the reference files in reference file repository 104 that are similar to the cover song.
- Cover songs can include, but are not limited to, songs performed that feature different performers, instrumentation, performance conditions, and/or arrangements than the performers, instrumentation, conditions and/or arrangements of the song when originally recorded.
- a cover song can be a live performance of a recorded song featuring the original performer of the recorded song.
- a cover song can be a performance of a song by a performer other than the original performer of the song.
- media editing system 106 can receive and/or access a media file from user device 102 , reference file repository 104 or the like. However, in some embodiments, media editing system 106 can access a media file stored on and/or received from media server 110 , which can be remote from or directly coupled to media editing system 106 . In some embodiments, content can be stored in media editing system 106 prior to processing by media editing system 106 .
- media editing system 106 can receive one or more commands for removal of the sound recordings and identify the one or more sound recordings of interest within the audio content. Media editing system 106 can then perform a number of different signal processing functions to align a reference file that has at least a defined level of similarity with the sound recording with the portion of the audio content at which the selected sound recording is located, match the rate of the reference file to the rate of the audio content, filter the reference file to cause the reference file to more closely approximate the sound recording selected for removal and/or generate a second audio file with the sound recording removed from the mixed audio file (or at least a portion of the sound recording removed from the mixed audio file). In some embodiments, media editing system 106 can generate a new media file having the selected sound recording removed.
- Reference file repository 104 can store one or more reference files that can be accessed and/or employed by media editing system 106 to perform selective removal of one or more sound recordings from audio content.
- the reference files stored in reference file repository 104 can be copyrighted media files (e.g., copyrighted songs or speech).
- Media editing system 106 can search reference files in reference file repository and identify a reference file that has a level of similarity to the sound recording that is at least greater than or approximately equal to a defined value. The value can vary over time and/or be based on type of media file of interest to obtain differing degrees of sound recording removal, e.g., as dictated by a system designer.
- reference file repository 104 can be accessed by user device 102 , media server 110 and/or media editing system 106 for storage or retrieval of one or more files that can serve as reference files for selective removal of audio content from a media file.
- User device 102 can include hardware and/or software configured to enable receipt, transmission and/or processing of media files (e.g., audio and/or video files) to and/or from user device 102 .
- user device 102 can include hardware and/or software configured to receive uploaded media content at user device 102 and/or media content received from media server 110 or any number of other different types of devices configured to transmit media content.
- user device 102 can include, but is not limited to, a cellular telephone, a tablet computer, a laptop computer, a personal digital assistant (PDA), a desktop computer, a television or the like.
- PDA personal digital assistant
- user device 102 includes interface component 112 .
- Interface component 112 can be configured to output graphics and/or audio associated with a video and/or audio received at and/or processed by user device 102 .
- Interface component 112 can also receive inputs configured to cause user device 102 to perform one or more functions associated with transmitting, receiving, processing and/or displaying media files or content within media files.
- interface component 112 can be configured to receive inputs to cause selection of one or more sound recordings integrated with the video and/or audio received at and/or processed by user device 102 as described in more detail with reference to FIG. 2 .
- Media server 110 can include hardware and/or software configured to store and/or transmit media files. Any number of different media files can be stored and/or transmitted including, but not limited to, videos, audio, images or a combination thereof. In some embodiments described herein, media server 110 can store and/or transmit a media file having one or more sound recordings that can be removed by media editing system 106 .
- Network 108 can be or include a wired or wireless channel providing connectivity between two or more points.
- network 108 can communicatively and/or electrically couple one or more of media editing system 106 , media server 110 , user device 102 and/or reference file repository 104 .
- network 108 can be a cellular network, a wide area network (WAN) (e.g., Internet), a local area network (LAN), or a personal area network (PAN).
- WAN wide area network
- LAN local area network
- PAN personal area network
- Network 108 can utilize any number of different types of wired or wireless technology, including, for example, cellular, WAN, wireless fidelity (Wi-Fi), Wi-Max and/or WLAN.
- FIG. 2 is an illustration of a block diagram of a non-limiting system that provides selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- system 200 can include one or more of the structure and/or functionality of system 100 (and vice versa). Repetitive description of like elements employed in other embodiments is omitted for sake of brevity.
- user device 102 includes interface component 112 configured to display a video associated with media file 212 having an embedded audio file.
- the embedded audio file can include one or more sound recordings.
- embedded audio file can include a recording of a copyrighted song playing as background music for the recording of a speech by user of user device 102 .
- interface component 112 can display information identifying or otherwise associated with one or more sound recordings 200 , 202 , 204 included in the first audio file of the media file.
- Interface component 112 can also display regions 206 , 208 , 210 that can be activated to select at least one of the one or more sound recordings 200 , 202 , 204 for removal from the audio file embedded in the media file.
- sound recording 202 is selected for removal upon detection of activation of region 208 by user device 102 .
- Information indicative of the sound recording selected for removal and, in some embodiments, media file 212 can be received by or otherwise accessed by media editing system 106 .
- Media editing system 106 can access a reference file stored in reference file repository 104 to facilitate removal of sound recording 202 from the audio of media file 212 .
- Media editing system 106 can output media file 214 having the selected sound recording removed.
- media file 214 includes sound recordings 200 , 204 and does not include sound recording 202 , which has been removed.
- user device 102 can then play media file 214 having sound recording 202 removed.
- the audio file included in media file 212 can include speech and music
- the sound recording 202 selected for removal can be the music portion of the audio file.
- the audio content of media file 214 can include only speech after processing with media editing system 106 .
- FIG. 3 is a block diagram of a non-limiting media editing system that facilitates selective removal of audio content from a mixed audio recording is shown.
- media editing system 106 ′ can include one or more of the structure and/or functionality of media editing system 106 (and vice versa).
- media editing system 106 ′ can include processing component 300 , communication component 316 , modification component 318 , processor 320 and/or memory 322 .
- processing component 300 , communication component 316 , modification component 318 , processor 320 and/or memory 322 can be communicatively and/or electrically coupled to one another to perform one or more of the functions of media editing system 106 ′.
- Communication component 316 can transmit and/or receive information from and/or at media editing system 106 ′.
- the information can be or include one or more different types of media files (e.g., video, audio), information indicative of a selection of or identification of one or more sound recordings of which the media file is composed (and which is to be removed from the media file and/or information indicative of a new media file generated by media editing system 106 ′ after the selected sound recording has been removed (or substantially removed) by processing component 300 or the like.
- communication component 316 facilitates display of information regarding one or more policies associated with one or more sound recordings of which mixed audio in a media file is composed.
- communication component 316 can receive a media file or information indicative of a media file.
- media editing system 106 ′ can determine one or more policies associated with the sound recording.
- policies related to the sound recording can indicate a preference to mute the sound recording or a preference to delete the sound recording from the mixed audio file.
- Information can be displayed on the user device indicative of the policy.
- Communication component 316 can receive information indicative of one or more inputs at the user device in response to the display of policy information.
- processing component 300 can perform one or more signal processing methods to selectively remove the sound recording.
- processing component 300 can include identification component 302 , alignment and rate component (ARC) 304 , power normalization component 306 , filtering component 308 , first subtraction component 310 , second subtraction component 312 and/or time-frequency conversion component 314 .
- identification component 302 , alignment and rate component (ARC) 304 , power normalization component 306 , filtering component 308 , first subtraction component 310 , second subtraction component 312 and/or time-frequency conversion component 314 can be communicatively and/or electrically coupled to one another to perform one or more functions of processing component 300 .
- Identification component 302 can identify a reference file that has at least a defined level of similarity with the sound recording selected for removal. For example, identification component 302 can determine one or more characteristics of the sound recording selected for removal from the audio file. Identification component 302 can then search a reference file repository that includes reference files (e.g., copyrighted content) for content having a predefined level of similarity with the characteristics from the sound recording. Identification component 302 can select the reference file and employ such file in removal of the sound recording by media editing system 106 ′.
- reference files e.g., copyrighted content
- identification component 302 can identify the reference file to be used for removal based on determination of one or more characteristics of at least a segment of the sound recording, determination of content of at least a segment of the sound recording and/or utilization of one or more hashing schemes.
- identification component 302 can compare an identifier (e.g., fingerprint), or portion of an identifier, for the sound recording to one or more identifiers for reference files, and determine one or more reference files that have a defined level of similarity to the sound recording based on the comparison of the identifiers.
- a fingerprint can include a set of hash values, and identification component 302 can employ the set of hash values to lookup fingerprints in the set of reference files.
- a reference file identified by identification component 302 can be employed for alignment with the mixed audio file at or near a location corresponding to the location of the sound recording to be removed from the mixed audio file. For example, ARC 304 can determine the time offset in the mixed audio file at which the sound recording begins, and align the reference file to begin at such point so that the sound recording can be efficiently subtracted from the mixed audio file.
- ARC 304 can also adjust the rate of the reference file to match (or substantially match) the rate of the mixed audio file (or, in some embodiments, the portion of the mixed audio file corresponding to the sound recording).
- ARC 304 can determine coarse alignment using a Hough transform on WTA-coded smoothed spectrograms of the reference file and the mixed audio file. Using this technique, alignment of the reference file along/within the range of the mixed audio file can be performed with rate mismatches of up to about 2 percent. Fine alignment is then performed employing window-based processing of about 5 to about 10 seconds (s) segments with 500 millisecond (ms) overlap. Fine alignment and rate adjustment within the windows from better than 1 part in 1000 to near-sample-exact alignment can be achieved.
- WTA codes allow efficient determination of similarity matches in a large space of possible alignments between the reference and first audio files without having to exhaustively compute a distance measure between the reference and first audio files. Further, use of WTA codes works well with Hough transform-based alignment since an individual match in the WTA space corresponds to the addition of a single line in the Hough space, and, as such, the Hough map can be built incrementally.
- ARC 304 performs alignment and rate adjustment in a two-stage process.
- the first stage includes coarse alignment and rate determination.
- ARC 304 first computes wideband spectrograms of the reference file and the mixed audio file.
- wideband spectrograms can be spectrograms of high frame rate and a low number of frequency channels or resolution. For example, one frame per 2 ms can be employed with overlapping 4 ms windows on audio that has been downsampled to about 5 kilohertz (kHz). As such, only about 20 samples per window are generated for 10 distinct frequency bands.
- ARC 304 can split the spectrogram for each file into short windows containing a small number of spectrogram slices.
- the window can contain about 7 spectrogram slices.
- ARC 304 can encode the spectrogram slices into WTA codes with a WTA hash function.
- ARC 304 includes a hashing component that employs a hash function to generate a fingerprint using the set of spectrogram slices.
- the fingerprint can include a set of WTA codes corresponding to respective spectrogram slices.
- WTA coding can advantageously summarize the spectrogram short windows in terms of location of relatively large-valued elements. Such pattern descriptors are potentially useful in determining if two short snippets of audio correspond to one another since spectral peak locations are usually robust in the presence of interference.
- Each short window can therefore be converted to a set of a number of small hash codes.
- ARC 304 generates a set of WTA hash codes for each spectrogram frame (e.g., short window center) in the reference file and the mixed audio file.
- ARC 304 can compare the hash codes using a similarity measure.
- ARC 304 can compare the hash codes using bit-wise similarity (e.g., Hamming similarity).
- ARC 304 can compute the similarity of every mixed audio file WTA code with every reference file WTA code and build a two-dimensional graph showing the similarity between the files at each time step.
- a strong line can appear with an axis-intercept determined by the time offset between the two files and a gradient determined by the relative rate (e.g., rate ratio) between the two files at time steps in embodiments in which there is good alignment between the mixed audio file and the reference file.
- the relative rate e.g., rate ratio
- ARC 304 can make use of the WTA hash codes to efficiently find potential locations at which the WTA codes for the files show at least a defined degree or level of similarity. ARC 304 can determine that the locations at which the files have similar WTA codes can correspond to locations at which the spectrograms for the files are similar.
- ARC 304 can employ locality-sensitive hashing (LSH), which relies on tables indexed by hash codes. ARC 304 can make code values that are bigger than 4-bit digits but smaller than 1024-bit full code. In one embodiment, 16-bit codes can be employed. ARC 304 can generate the 16-bit codes by concatenating four 4-bit digits. As used herein, a 16-bit index number can be the address of a location in the index table. Since there can be 1024 bits, the 1024 bits can be divided into 64 16-bit addresses into 64 different tables. ARC 304 can employ the tables to store information indicative of locations in the mixed audio file at which a particular code value was identified since each address maps to zero or more time locations at which that address value appeared in the hash code.
- LSH locality-sensitive hashing
- ARC 304 can generate corresponding code addresses. ARC 304 can determine, by looking in one or more of the 64 tables, whether a short window in the reference file has a time point that matches a time point in the mixed audio file. In some embodiments, whether a time point is adopted as an alignment between the reference file and the mixed audio file can depend on the number of tables in which the match is found. For example, if a match in time points originates from just one table, ARC 304 can forego using the time point as the alignment of the reference file in the mixed audio file. However, if a time point originates from more than one of the 64 tables, ARC 304 can select the time point as the time offset in the mixed audio file at which the reference file should be aligned.
- ARC 304 can determine coarse alignment such that the reference file begins at the time offset selected by ARC 304 based on the number of tables at which the time point match is identified. The number of tables that match a particular time offset can also be determined and correspond to the strength of the time offset.
- ARC 304 can review the table to go directly to locations at which peaks might be present.
- the time point match in a single table can correspond to a zero Hamming distance on one 16-bit part of the code.
- the time point match in two or more tables can correspond to a low Hamming distance overall, as otherwise it would be very unlikely to have two 16-bit pieces of 1024-bit code to match exactly. Low Hamming distance can be akin to high correlation between the portions of the reference and mixed audio files compared to one another.
- more than one time offset can be determined to be a potential time offset for coarse alignment.
- time points having matching in more than a defined number of tables can be considered potential coarse alignment time offsets.
- ARC 304 can assemble one or more candidate coarse alignment time offsets and rate ratios between the mixed audio file and the reference file.
- an image map can have two axes, representing number of spectrogram short window time steps in reference file and first audio files. Then, ARC 304 can start with zeros on both axes and drop in the match strength at the x and y locations of the potentially matching reference file and first audio file time offsets per number of tables at which matches were found.
- Each table lookup would yield zero, one, or a few hits, so a small number of pixels can identify the number of hits as ARC 304 scans along the reference-time dimension. After plotting is complete, random noise and points along a line can be discerned by ARC 304 .
- the line can have a slope near 1 at certain locations and may not have a slope of 1 when rates of the reference and mixed audio files do not match one another.
- ARC 304 can identify the noise and the line through the use of a Hough transform.
- ARC 304 can map time points and rate ratios using the Hough transform. For example, in one embodiment, each pair of first audio file time and reference file time can be transformed into a line in the Hough space. The line connects combinations of time offset and rate ratio that could be consistent with those time points aligning.
- the Hough transform can advantageously be much smaller than the image map described in the previous embodiment since the Hough transform can consider time offsets bounded by information known by the ARC 304 .
- ARC 304 can have information about alignment within 100 ms, so, in some embodiments, ARC 304 can consider time offsets of ⁇ 100 ms, or about 100 points total, rather than the full time range of the songs represented by the reference and mixed audio files.
- the number of points in the other dimension is the number of candidate rate ratios between the reference and mixed audio files.
- the point can be in increments of 0.002 from 0.96 to 1.04, for example, which is approximately 41 points. So lines are drawn, adding them into a, for example, 100 ⁇ 41 Hough transform accumulator picture instead of putting points into a huge picture that is much larger than 100 ⁇ 41.
- each point will correspond to a single line in the big image.
- the line can be characterized by a slope and an offset that specifies a coarse alignment between the mixed audio file and the reference file.
- a high point value in the Hough transform accumulator image can correspond to a large number of table matches along the corresponding line. Building up multiple lines in the Hough transform accumulator for all the matches between the mixed audio file and the reference file can allow a relatively efficient determination of the optimal combination of time offset and rate ratio between the mixed audio file and the reference file.
- ARC 304 can ignore time offset matches from only a single table of the 64 tables and employ tables that utilize large (e.g., 16-bit) addresses.
- ARC 304 After ARC 304 fills the Hough transform accumulator by scanning over the short windows of the reference file, the optimal rate ratio-time offset combination is given by the element in the Hough transform accumulator with the largest value.
- ARC 304 can identify the maximum value in the Hough transform accumulator and the corresponding time offset and rate ratio can corresponding to the time offset within the mixed audio file at which the reference file should be aligned and the rate ratio according to which the reference file should be adjusted. In embodiments in which there is no clear maximum value, ARC 304 can select one of the largest values randomly or by any number of other approaches including, but not limited to, selecting the maximum value (even if there are other values that are very close in value to the maximum value).
- ARC 304 can determine the time offset corresponding to where the sound recording begins in the first audio file.
- the ARC 304 can adjust (e.g., stretch) the rate of the reference file to match (or substantially match) the rate of the sound recording in the first audio file.
- the ARC 304 can then align the reference file to the time in the first audio file corresponding to the location in the first audio file at which the sound recording selected for removal begins.
- the reference file and the sound recording can be aligned to better than 1 ms employing one or more of the embodiments described herein.
- ARC 304 can perform fine alignment by repeating the process on windows of about 5-10 seconds in length. However, fine alignment can be performed to align waveforms (as opposed to alignment of spectrograms, which was performed with coarse alignment).
- the coarse alignment steps are repeated on 5 to 10 second windows of the reference file audio and mixed audio file audio waveforms (fine alignment is performed to align the waveforms representations of reference file and mixed audio file while coarse alignment is performed to align the spectrogram representations of reference file and mixed audio file).
- waveform cross-correlation is performed on the 5 to 10 second windows within coarsely aligned windows to determine fine alignment offsets local to the short windows. These local time-to-time correspondences, are then used as input to a Hough transform as described above with coarse alignment to get a consensus for a final offset-rate adjustment for the small window.
- the reference file audio is rate adjusted (e.g., stretched) to match the rate of the audio in the first audio file audio.
- the start of the reference file audio is aligned with the first audio file audio.
- This two-phase alignment approach employing coarse alignment on the reference file and mixed audio file using WTA-coded smoothed spectrograms, followed by fine alignment using correlation estimates on small windows within segments identified by coarse alignment
- the embodiments for alignment and rate adjustment can be useful for recordings in which the sound recording to be removed is music added to the other audio and originating from a moving video camera with changing delay from the speakers.
- the embodiments for alignment and rate adjustment can be useful for recordings generated while the videographer is walking at different speeds during recording.
- power normalization component 306 can normalize power of the reference file and mixed audio file such that the overall power of the reference file is approximately equal to the overall power of the mixed audio file.
- Filtering component 308 can perform adaptive filtering of the reference file in frequency domain to generate a filtered frequency domain representation (FR) of the reference file that has similarity to the sound recording to be removed greater than similarity between the reference file and the sound recording prior to filtering. For example, filtering component 308 can perform adapting filtering of the FR of the reference file to simulate spectral shaping due to playback, room acoustics, microphones, speakers, echoes, which may be present in the sound recording. Via adaptive filtering, filtering component 308 can learn the best filter coefficients to use to filter the reference file at any given point in time.
- FR frequency domain representation
- the filter coefficients can change slowly over time so as to account for changing conditions including, but not limited to, changes in level of the sound recording playing in the first audio file, a moving video camera, effects applied to video, and the like.
- the FR employed in adaptive filtering is a sequence of complex Discrete Fourier transforms (DFTs) of overlapping windowed segments, and the waveform is reconstructed by performing inverse transforms and overlap-add operations.
- DFTs Discrete Fourier transforms
- the DFT size can be longer than the windowed segment. In some embodiments, the DFT size is longer than the windowed segment by 50%, typically.
- Filtering component 308 can then filter the reference file thereby generating a filtered reference file.
- filtering component 308 can determine the filter coefficients in frequency domain. Specifically, filtering component 308 can compute complex spectrograms of the reference file and mixed audio file, then smooth in both time and frequency the power spectrograms of the mixed audio file and the reference file and the complex product of the mixed audio file spectrogram and the reference file spectrograms. Filtering component can employ these smoothed representations to compute the optimal filter in the complex frequency domain as a function of time.
- filtering component 308 can smooth complex ratios in time and frequency to determine optimal short filter for matching the reference file to the mixed audio file (or matching the reference file to the portion of the mixed audio file at which the sound recording is located). In some embodiments, this process can be mathematically equivalent to adaptive filtering the reference file in the time domain, but can be much more computationally efficient.
- the filtering can be performed on overlapping windowed frames of the reference file, and on overlapping windows of the mixed audio file.
- filtering component 308 can perform the filtering on windows of 20 ms in length, every 10 ms.
- filtering component 308 can taper the waveform with the window and convert the waveform to the complex frequency domain using a fast Fourier transform (FFT).
- FFT fast Fourier transform
- filtering component 308 can then filter the FR of the reference file such that the FR of the reference file approximates the FR of the mixed audio file (or to match the sound recording selected for removal from the mixed audio file).
- filtering component 308 can generate a filter having coefficients equal to the ratio of the mixed audio file to the reference file using values from corresponding FFT frequency bins.
- this approach can result in an exact match between the FR of the reference file and the FR of the mixed audio file and exact cancellation except in locations at which FR of the reference file is 0.
- filtering component 308 can employ ad hoc smoothing of the generated filter. As the amount of filtering component 308 smoothing of the ratio of the FR of the mixed audio file to the FR of the reference file increases, the likelihood increases that the residual signal output from media editing system 106 ′ will include only the desired signal and remove the sound recording. In some embodiments, filtering component 308 can perform the smoothing is performed in frequency domain (FFT bins within a frame) and time domain (e.g., frame to frame).
- FFT bins within a frame frequency domain
- time domain e.g., frame to frame
- Filtering component 308 can determine the optimal amount of smoothing of the filter based on the manner in which the sound recording selected for removal is added to the mixed audio file. For example, in embodiments in which there is echo, filtering component 308 can smooth in a manner resulting in a filter with a frequency domain ripple. However, an echo time longer than an FIR filter will not allow cancellation of the echo in an FIR filter approach while smoothing away the frequency domain ripple will defeat the ability to cancel the echo. As such, filtering component 308 can take such factors into consideration to determine the best filter given the manner in which the sound recording was added.
- Filtering component 308 can filter the FR of the reference file with the generated filter. For example, filtering component 308 can generate the filtered version of the FR of the reference file by multiplying the set of complex numbers representative of the filter components by the complex values associated with the FR of the reference file.
- First subtraction component 310 can compute the residual content by subtracting the filtered version of the FR of the reference file from the FR of the mixed audio file at each FFT bin.
- the residual content includes only the elements of the FR of the mixed audio file audio that are not correlated to the FR of the reference file.
- the residual content can be the FR of a second audio file (or a portion thereof) or an intermediate second audio file (or a portion thereof).
- the residual content can be the second audio file that is then embedded in the media file in place of the mixed audio file.
- the resultant signal is an intermediate second audio file that is further processed by second subtraction component 312 to remove residual remaining in the output from first subtraction component 310 .
- Time-frequency conversion component 314 can convert the FR of the second audio file (or intermediate second audio file) to the time representation of the second audio file (or the intermediate second audio file). For example, in some embodiments, time-frequency conversion component 314 can perform an inverse transform on the FR of the second audio file (or the intermediate second audio file) to generate a time representation of the segment of the second audio file (or the intermediate second audio file) processed by filtering component 308 . Time-frequency conversion component 314 can then re-taper the edges of the second audio file (or the intermediate second audio file) to re-create the original windowed section processed by filtering component 308 . Time-frequency conversion component 314 can then overlap and add the segments to get the cleaned second audio file (or the intermediate second audio file).
- processing component 300 also include second subtraction component 312 .
- second audio file can be considered the intermediate second audio file described with reference to time-frequency conversion component 314 .
- Second subtraction component 312 can perform spectral subtraction in the frequency domain on the FR of the intermediate second audio file to remove to remove additional energy at one or more time-frequency regions at which the reference file energy was removed by first subtraction component 310 .
- the FR employed in spectral subtraction is a sequence of complex DFTs of overlapping windowed segments, and the waveform is reconstructed by performing inverse transforms and overlap-add operations. To minimize edge-wrap sound effects, the DFT size can be longer than the windowed segment.
- second subtraction component 312 can generate an enhanced FR of the second audio file (relative to the version of the FR of the second audio file not processed with second subtraction component 312 ).
- the enhanced FR of the second audio file can have information such as that remaining from the sound recording removed.
- the subtraction performed by second subtraction component 312 can be spectral subtraction implemented employing one or more signal processing algorithms in the frequency domain.
- spectral subtraction can include non-linear or non-coherent subtraction.
- non-coherent subtraction can be based on a power spectrum (e.g., a power spectrum of the intermediate second audio file).
- second subtraction component 312 can determine a spectrogram for the intermediate second audio file. Second subtraction component 312 can compare one or more segments of the sound recording selected for removal with one or more corresponding segments of the intermediate second audio file to generate the second audio file. For example, second subtraction component 312 can find one or more segments of the sound recording selected for removal that are spectrally similar to one or more segments of the intermediate second audio file. In one example, the one or more segments for each can be spectro-temporal segments. As such, the level of individual frequency bands can be modified within a short temporal slice of the sound recording selected for removal and/or the intermediate second audio file to generate the second audio file. Second subtraction component 312 can split the spectrogram into magnitude and phase.
- second subtraction component 312 can adjust and/or reduce a power level of the intermediate second audio file based on a correlation, spectral similarity or the like of the one or more segments of the sound recording selected for removal with the one or more segments of the intermediate second audio file. For example, to generate the second audio file, second subtraction component 312 can adjust and/or reduce a power level of at least one of the one or more segments of the intermediate second audio file based on spectral correlation of the one or more segments of the sound recording selected for removal with the one or more segments of the intermediate second audio file.
- the power level of a particular corresponding segment of the one or more segments of the intermediate second audio file can be reduced to zero in response to a determination that remaining sound in the residual audio of the sound recording selected for removal is not relevant (e.g., remaining sound in the residual audio of the sound recording selected for removal is below a predetermined threshold level).
- the power level of a particular corresponding segment of the one or more segments of the intermediate second audio file can be reduced to zero based on a relevancy level of the particular segment of the sound recording selected for removal.
- Second subtraction component 312 can compare a magnitude of the one or more segments of the sound recording selected for removal with a corresponding magnitude of the one or more corresponding segments of the intermediate second audio file. Therefore, one log magnitude spectrum segment (e.g., slice) of the sound recording selected for removal can be subtracted from one log magnitude spectrum segment (e.g., slice) of the intermediate second audio file to generate the second audio file. Additionally, variance of the remainder (e.g., as a result of the subtraction) can be determined to generate the second audio file. For low-variance segments (e.g., slices), the average level of the remainder can be determined to generate the second audio file.
- one log magnitude spectrum segment e.g., slice
- variance of the remainder e.g., as a result of the subtraction
- the average level of the remainder can be determined to generate the second audio file.
- second subtraction component 312 can compare the one or more segments of the sound recording selected for removal with the one or more corresponding segments of the intermediate second audio file using a short-time Fourier transform (STFT) algorithm. Therefore, the power level of the intermediate second audio file can be selectively reduced as a function of a spectral correlation to generate the second audio file. As such, second subtraction component 312 can reduce a power level for different time frequency bins (e.g., reduce power at different frequencies) of the intermediate second audio file to generate the second audio file. Second subtraction component 312 can re-synthesize the intermediate second audio file using the subtracted magnitude spectrum and the original phase of the intermediate second audio file to generate the second audio file.
- STFT short-time Fourier transform
- the sound recording selected for removal can be removed from the intermediate second audio file (e.g., the intermediate second audio file can be re-processed without the sound recording selected for removal) to generate the second audio file. Therefore, one or more songs can be removed from the first audio file while preserving non-song audio resulting in the second audio file.
- second subtraction component 312 can be implemented by second subtraction component 312 to remove the sound recording selected for removal from the intermediate second audio file thereby resulting in the second audio file.
- other types of signal processing algorithms can be used to remove the sound recording from the intermediate second audio file thereby resulting in the second audio file.
- time-frequency conversion component 314 can generate a time representation of the second audio file.
- Modification component 318 can embed the second audio file in the media file in which first audio file was initially embedded upon receipt at or access by media editing system 106 ′.
- Communication component 316 can output the second audio file and/or a media file having the second audio file embedded in the media file.
- communication component 316 can output the second audio and/or the media file with the second audio file embedded in the media file and transmit the waveform to the user, store the waveform and/or otherwise output the waveform for playback by a user device, such as user device 102 .
- Processor 320 can perform or facilitate performance of one or more of the functions described herein with reference to media editing system 106 ′ or processing component 300 (and/or any components thereof). For example, processor 320 can facilitate signal processing of the reference file and/or the mixed audio file to generate the second audio file, determination of alignment and rate adjustment between the reference file and the mixed audio file, generation of an optimal filter for filtering the reference file, subtraction of the reference file from the first audio file, time-frequency conversion and like.
- Memory 322 can store information transmitted to, received by and/or processed by media editing system 106 ′ and/or processing component 300 .
- memory 322 can store information including, but not limited to, the coefficients for the filter employed for filtering the reference file, coarse alignment information, fine alignment information, Hough space information, WTA code information and the like.
- FIGS. 4A and 4B are illustrations of non-limiting user interfaces for a media editing system that facilitates selective modification of audio content in a mixed audio recording in accordance with one or more embodiments described herein.
- the media editing system for which user interface 400 will be shown and described can be media editing system 106 , 106 ′ in various embodiments. Repetitive description of like elements employed in other embodiments described herein is omitted for sake of brevity.
- user interface 400 can include a first display region 402 that can display information identifying and/or describing one or more detected tracks of a mixed audio recording received at and/or accessed by a media editing system.
- the media editing system can identify and/or describe sound recordings 200 , 202 , 204 embedded in the mixed audio recording.
- the information displayed can be a title and/or author of the sound recording, a type of audio recording (e.g., speech audio, music audio) or any number of other different ways to identify and/or describe sound recordings in a mixed audio recording.
- user interface 400 is a touch screen user interface
- one or more of sound recordings 200 , 202 , 204 can be selected by user activation of a portion of user interface at which the information identifying and/or describing sound recordings 200 , 202 , 204 is located.
- user interface 400 can display information and the media editing system of user interface 400 can receive inputs via keyboard, mouse or the like.
- User interface 400 can also include a second display region 404 that displays information associated with audio editing functionality of the media editing system.
- display regions 406 , 408 , 410 display information identifying removal, replacement and modification functions, respectively.
- users can specify one or more different desired edits to one or more sound recordings.
- sound recording 202 is selected for replacement with another track.
- User interface 400 can provide a text box 412 that can receive alphanumeric information specifying a title, author or other identifying information for a track for which the user is searching for replacement of sound recording 202 in the mixed audio recording.
- the search is commenced upon receipt of the alphanumeric information in text box 412 .
- the search is commenced upon activation of the search activation region 414 after receipt of the alphanumeric information in text box 412 .
- user interface 400 can display one or more featured tracks at display region 416 .
- the featured tracks can be selected for replacement of sound recording.
- user interface 400 can facilitate addressing copyright issues brought to the attention of a user and/or mitigate the likelihood of receipt of an unauthorized use allegation by enabling replacement of various sound recordings with other sound recordings.
- User interface 400 can also facilitate general editing by allowing users to replace unwanted sound recordings with more desirable sound recordings.
- sound recording 202 can be selected and display region 410 can be activated for modification of sound recording 202 .
- user interface 400 can provide display region 412 to enable a user to attenuate or amplify a sound recording and/or display region 414 to enable a user to filter a sound recording.
- the volume of sound recording 202 relative to other sound recordings in the mixed audio recording can be adjusted to diminish or cause sound recording 202 to be more prominent within the mixed audio recording.
- the volume of sound recording 202 can be reduced to a level such that the sound recording is effectively muted in some embodiments, increased to the maximum volume possible for the sound recording in other embodiments, or adjusted to a volume between the two extremes, in other embodiments.
- the media editing system described herein can enable content to be attenuated or amplified as desired by the user of the media editing system.
- sound recording 202 includes airplane or train noise
- the noise can be muted by the media editing system as dictated by the user via user interface 400 .
- display region 414 can facilitate filtering of a sound recording.
- a particular sound recording can be extracted for dubbing.
- a particular sound recording can be process to remove defects that diminish sound quality of the sound recording.
- user interface 400 is described as a user interface for a media editing system, in various embodiments, there can be desktop, laptop, tablet, and mobile device versions of user interface 400 to account for and optimize utilization of the screen for these different devices.
- FIGS. 5, 6, 7, 8, 9, 10 and 11 are illustrations of non-limiting flow diagrams of methods that facilitate selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein.
- One or more of methods 500 , 600 , 700 , 800 , 900 , 1000 , 1100 can be utilized in various systems including, but not limited to, network systems, computer network systems, communication systems, router systems, server systems, high availability server systems (e.g., Telecom server systems), web server systems, file server systems, media server systems, disk array systems, powered insertion board systems and/or cloud-based systems.
- method 500 can include receiving a first audio file, wherein the first audio file is a mixed audio file (e.g., using communication component 316 of media editing system 106 ′).
- the mixed audio file can be received by communication component 316 from a computing device (e.g., user device 102 ), over a network (e.g., network 108 ) from a media server (e.g., media server 110 ) or the like.
- the mixed audio file can be different types of audio files including, but not limited to, speech files, music files or any combination thereof. Further, the mixed audio file can be embedded in any number of different types of media files including, but not limited to, video files. For example, the mixed audio file can be embedded in a video file such that the entirety of the file can include a video having background music and a speech being recited over the background music.
- method 500 can include facilitating displaying information indicative of an option to remove one or more sound recordings from the first audio file to generate a second audio file (e.g., using communication component 316 of media editing system 106 ′).
- the sound recording can be speech information in the mixed audio file or music in the mixed audio file, for example.
- the information indicative of the option to remove one or more sound recordings can be information indicative of options to remove speech or music from the mixed audio file embedded in the media file. The user can select speech or music for removal from the mixed audio file.
- method 500 can include receiving information indicative of an input selecting at least one of the one or more sound recordings for removal from the first audio file to generate the second audio file (e.g., using communication component 316 of processing component 300 ).
- communication component 316 can receive information causing media editing system 106 ′ to remove a copyrighted speech in a video, for example.
- method 500 can include removing the selected at least one of the one or more sound recordings from the first audio file to generate the second audio file (e.g., using media editing system 106 ′).
- the second audio file can include approximately all content from the first audio file with the selected one or more sound recordings removed. For example, if music is selected for removal from a mixed audio file having speech and music, the second audio file can be a file having speech from the first audio file. In some embodiments, some portions of music can remain based on inability to remove all portions of the music with perfect cancellation.
- method 400 can include transmitting the new media file having the second audio file embedded in the media file (e.g., using communication component 316 ).
- the new media file can be transmitted to a user device for playback and/or stored in various embodiments.
- method 600 is a method of processing a first audio file to remove selected content and thereby generate a second audio file.
- method 600 can include identifying one or more sound recordings in a first audio file (e.g., using identification component 302 of processing component 300 ).
- method 600 can include identifying a reference file having at least a defined level of similarity to the identified one or more sound recordings (e.g., using identification component 302 ).
- method 600 can include processing the first audio file to remove the identified one or more sound recordings from the first audio file and generate a second audio file (e.g., using processing component 300 ).
- the processing includes determining alignment and rate adjustment between the reference file and the first audio file based, at least, on comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file (e.g., using ARC 304 of processing component 300 ) and mapping candidate time offsets and candidate rate ratios into Hough space.
- method 700 is a method of performing alignment and rate adjustment to efficiently remove the selected sound recording from the first audio file.
- method 700 can include comparing a WTA-coded spectrogram of a reference file and a WTA-coded spectrogram of a first audio file (e.g., using ARC 304 ).
- method 700 can include selecting a time offset and rate ratio between the reference file and the first audio file from candidate time offsets and candidate rate ratios based on mapping into Hough space (e.g., using ARC 304 ).
- method 800 can include determining a time offset corresponding to a location at which a sound recording selected for removal from a first audio file begins in the first audio file (e.g., using ARC 304 ).
- method 800 can include determining a rate ratio between a reference file matched to the sound recording and the first audio file (e.g., using ARC 304 ).
- the rate ratio can be a numerical value representative of the rate of the reference file compared to the rate of the first audio file. For example, if the reference file and the first audio file have equal rates, the rate ratio can be determined to be 1. The rate ratio can be less than or greater than 1 depending on if the rate of the reference file is less than or greater than the rate of the first audio file, respectively.
- method 800 can include aligning the reference file and the first audio file, and performing a rate adjustment on the reference file to cause the rate of the reference file to be substantially equal to the rate of the first audio file (e.g., ARC 304 ). For example, in some embodiments, once the rate ratio has been determined, the reference file is stretched (or compressed) to match the rate of the first audio file.
- method 900 can include filtering the reference file in frequency domain to generate a filtered FR of the reference file wherein a similarity between the filtered FR of the reference file and an FR of the sound recording selected for removal is greater than a similarity between the FR of the reference file and the FR of the sound recording (e.g., using filtering component 308 ).
- the adaptive filtering attempts to find the optimal filter to apply to the reference file that makes the sound recording reference filter, upon filtering, correspond as closely as possible to the sound recording selected for removal from the first audio file.
- method 900 can include subtracting the filtered FR of the reference file from the FR of the first audio file to generate an FR of the second audio file (e.g., using first subtraction component 310 ).
- the output from first subtraction component 310 e.g., the FR of the second audio file
- the output from first subtraction component 310 is approximately equal to the FR of the corresponding segment of the first audio file with the filtered FR of the reference file removed from the first audio file.
- method 900 can include converting the FR of the second audio file to the second audio file (e.g., using time-frequency conversion component 314 ).
- the time-frequency conversion component 314 can process the FR of the second audio file with an inverse transform to generate one or more segments of the second audio file. Segment edges can be re-tapered and segments can be overlapped and added to re-create an entire second audio file waveform.
- method 1000 can include filtering the reference file in frequency domain to generate a filtered FR of the reference file wherein a similarity between the filtered FR of the reference file and an FR of the sound recording selected for removal is greater than a similarity between the FR of the reference file and the FR of the sound recording (e.g., using filtering component 308 ).
- method 1000 can include subtracting the filtered FR of the reference file from the FR of the first audio file to generate an FR of an intermediate second audio file (e.g., using first subtraction component 310 ).
- the output from the first subtraction component e.g., the FR of the intermediate second audio file
- the output from the first subtraction component is approximately equal to the FR of the corresponding segment of the first audio file with the filtered FR of the reference file removed from the first audio file.
- method 1000 can include performing second subtraction in the frequency domain on the FR of the intermediate second audio file to generate an FR of the second audio file (e.g., using second subtraction component 312 ).
- the second subtraction can be spectral subtraction in one or more embodiments.
- method 1000 can include converting the FR of the second audio file to the second audio file (e.g., using time-frequency conversion component 314 ).
- method 1100 can include determining a ratio of a FR of a portion of the first audio signal to a FR of a corresponding portion of the reference file (e.g., using filtering component 308 ).
- method 1100 can include generating a filter for filtering in the frequency domain based, at least, on smoothing the determined ratio (e.g., using filtering component 308 ).
- method 1100 can include filtering the FR of the reference file, wherein the similarity between the filtered version of the FR of the reference file and the FR of the sound recording selected for removal is greater than the similarity between the reference file and the FR of the sound recording selected for removal (e.g., using filtering component 308 ).
- method 1102 can include performing the filtering for one or more of the FFT bins and for one or more of the windows of the overlapping windows (e.g., using filtering component 308 ).
- FIG. 12 is an illustration of a schematic diagram of a non-limiting operating environment for implementing one or more embodiments described in this disclosure.
- the systems and processes described below can be embodied within hardware, such as a single integrated circuit (IC) chip, multiple ICs, an application specific integrated circuit (ASIC), or the like. Further, the order in which some or all of the process blocks appear in each process should not be deemed limiting. Rather, it should be understood that some of the process blocks can be executed in a variety of orders, not all of which may be explicitly illustrated in this disclosure.
- a suitable environment 1200 for implementing various aspects of the claimed subject matter includes a computer 1202 .
- the computer 1202 includes a processing unit 1204 , a system memory 1206 , a codec 1205 , and a system bus 1208 .
- the system bus 1208 couples system components including, but not limited to, the system memory 1206 to the processing unit 1204 .
- the processing unit 1204 can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit 1204 .
- the system bus 1208 can be any of several types of bus structure(s) including the memory bus or memory controller, a peripheral bus or external bus, and/or a local bus using any variety of available bus architectures including, but not limited to, Industrial Standard Architecture (ISA), Micro-Channel Architecture (MSA), Extended ISA (EISA), Intelligent Drive Electronics (IDE), VESA Local Bus (VLB), Peripheral Component Interconnect (PCI), Card Bus, Universal Serial Bus (USB), Advanced Graphics Port (AGP), Personal Computer Memory Card International Association bus (PCMCIA), Firewire (IEEE 1394), and Small Computer Systems Interface (SCSI).
- ISA Industrial Standard Architecture
- MSA Micro-Channel Architecture
- EISA Extended ISA
- IDE Intelligent Drive Electronics
- VLB VESA Local Bus
- PCI Peripheral Component Interconnect
- Card Bus Universal Serial Bus
- USB Universal Serial Bus
- AGP Advanced Graphics Port
- PCMCIA Personal Computer Memory Card International Association bus
- Firewire IEEE 1394
- SCSI Small Computer Systems Interface
- the system memory 1206 includes volatile memory 1210 and non-volatile memory 1212 .
- the basic input/output system (BIOS) containing the basic routines to transfer information between elements within the computer 1202 , such as during start-up, is stored in non-volatile memory 1212 .
- codec 1205 may include at least one of an encoder or decoder, wherein the at least one of an encoder or decoder may consist of hardware, a combination of hardware and software, or software. Although, codec 1205 is depicted as a separate component, codec 1205 may be contained within non-volatile memory 1212 .
- non-volatile memory 1212 can include read only memory (ROM), programmable ROM (PROM), electrically programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), or flash memory.
- Volatile memory 1210 includes random access memory (RAM), which acts as external cache memory. According to present aspects, the volatile memory may store the write operation retry logic (not shown in FIG. 12 ) and the like.
- RAM is available in many forms such as static RAM (SRAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), double data rate SDRAM (DDR SDRAM), and enhanced SDRAM (ESDRAM.
- Disk storage 1214 includes, but is not limited to, devices like a magnetic disk drive, solid state disk (SSD) floppy disk drive, tape drive, Jaz drive, Zip drive, LS-70 drive, flash memory card, or memory stick.
- disk storage 1214 can include storage medium separately or in combination with other storage medium including, but not limited to, an optical disk drive such as a compact disk ROM device (CD-ROM), CD recordable drive (CD-R Drive), CD rewritable drive (CD-RW Drive) or a digital versatile disk ROM drive (DVD-ROM).
- CD-ROM compact disk ROM
- CD-R Drive CD recordable drive
- CD-RW Drive CD rewritable drive
- DVD-ROM digital versatile disk ROM drive
- a removable or non-removable interface is typically used, such as interface 1216 .
- FIG. 12 describes software that acts as an intermediary between users and the basic computer resources described in the suitable operating environment 1200 .
- Such software includes an operating system 1218 .
- Operating system 1218 which can be stored on disk storage 1214 , acts to control and allocate resources of the computer 1202 .
- Applications 1220 take advantage of the management of resources by operating system 1218 through program modules 1224 , and program data 1226 , such as the boot/shutdown transaction table and the like, stored either in system memory 1206 or on disk storage 1214 . It is to be appreciated that the claimed subject matter can be implemented with various operating systems or combinations of operating systems.
- Input devices 1228 include, but are not limited to, a pointing device such as a mouse, trackball, stylus, touch pad, keyboard, microphone, joystick, game pad, satellite dish, scanner, TV tuner card, digital camera, digital video camera, web camera, and the like.
- These and other input devices connect to the processing unit 1204 through the system bus 1208 via interface port(s) 1230 .
- Interface port(s) 1230 include, for example, a serial port, a parallel port, a game port, and a universal serial bus (USB).
- Output device(s) 1236 use some of the same type of ports as input device(s).
- a USB port may be used to provide input to computer 1202 , and to output information from computer 1202 to an output device 1236 .
- Output adapter 1234 is provided to illustrate that there are some output devices 1236 like monitors, speakers, and printers, among other output devices 1236 , which require special adapters.
- the output adapters 1234 include, by way of illustration and not limitation, video and sound cards that provide a means of connection between the output device 1236 and the system bus 1208 . It should be noted that other devices and/or systems of devices provide both input and output capabilities such as remote computer(s) 1238 .
- Computer 1202 can operate in a networked environment using logical connections to one or more remote computers, such as remote computer(s) 1238 .
- the remote computer(s) 1238 can be a personal computer, a server, a router, a network PC, a workstation, a microprocessor based appliance, a peer device, a smart phone, a tablet, or other network node, and typically includes many of the elements described relative to computer 1202 .
- only a memory storage device 1240 is illustrated with remote computer(s) 1238 .
- Remote computer(s) 1238 is logically connected to computer 1202 through a network interface 1242 and then connected via communication connection(s) 1244 .
- Network interface 1242 encompasses wire and/or wireless communication networks such as local-area networks (LAN) and wide-area networks (WAN) and cellular networks.
- LAN technologies include Fiber Distributed Data Interface (FDDI), Copper Distributed Data Interface (CDDI), Ethernet, Token Ring and the like.
- WAN technologies include, but are not limited to, point-to-point links, circuit switching networks like Integrated Services Digital Networks (ISDN) and variations thereon, packet switching networks, and Digital Subscriber Lines (DSL).
- ISDN Integrated Services Digital Networks
- DSL Digital Subscriber Lines
- Communication connection(s) 1244 refers to the hardware/software employed to connect the network interface 1242 to the bus 1208 . While communication connection 1244 is shown for illustrative clarity inside computer 1202 , it can also be external to computer 1202 .
- the hardware/software necessary for connection to the network interface 1242 includes, for exemplary purposes only, internal and external technologies such as, modems including regular telephone grade modems, cable modems and DSL modems, ISDN adapters, and wired and wireless Ethernet cards, hubs, and routers.
- the system 1300 includes one or more client(s) 1302 (e.g., laptops, smart phones, PDAs, media players, computers, portable electronic devices, tablets, and the like).
- the client(s) 1302 can be hardware and/or software (e.g., threads, processes, computing devices).
- the system 1300 also includes one or more server(s) 1304 .
- the server(s) 1304 can also be hardware or hardware in combination with software (e.g., threads, processes, computing devices).
- the servers 1304 can house threads to perform transformations by employing aspects of this disclosure, for example.
- One possible communication between a client 1302 and a server 1304 can be in the form of a data packet transmitted between two or more computer processes wherein the data packet may include video data.
- the data packet can include a metadata, e.g., associated contextual information, for example.
- the system 1300 includes a communication framework 1308 (e.g., a global communication network such as the Internet, or mobile network(s)) that can be employed to facilitate communications between the client(s) 1302 and the server(s) 1304 .
- a communication framework 1308 e.g., a global communication network such as the Internet, or mobile network(s)
- the client(s) 1302 include or are operatively connected to one or more client data store(s) 1310 that can be employed to store information local to the client(s) 1302 (e.g., associated contextual information).
- the server(s) 1304 are operatively include or are operatively connected to one or more server data store(s) 1310 that can be employed to store information local to the servers 1304 .
- a client 1302 can transfer an encoded file, in accordance with the disclosed subject matter, to server 1304 .
- Server 1304 can store the file, decode the file, or transmit the file to another client 1302 .
- a client 1302 can also transfer uncompressed file to a server 1304 and server 1304 can compress the file in accordance with the disclosed subject matter.
- server 1304 can encode video information and transmit the information via communication framework 1308 to one or more clients 1302 .
- the illustrated aspects of the disclosure may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network.
- program modules can be located in both local and remote memory storage devices.
- various components described in this description can include electrical circuit(s) that can include components and circuitry elements of suitable value in order to implement the one or more of the embodiments described herein.
- many of the various components can be implemented on one or more IC chips.
- a set of components can be implemented in a single IC chip.
- one or more of respective components are fabricated or implemented on separate IC chips.
- a component may be, but is not limited to being, a process running on a processor (e.g., digital signal processor), a processor, an object, an executable, a thread of execution, a program, and/or a computer.
- a processor e.g., digital signal processor
- an application running on a controller and the controller can be a component.
- One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers.
- a “device” can come in the form of specially designed hardware; generalized hardware made specialized by the execution of software thereon that enables the hardware to perform specific function; software stored on a computer readable storage medium; software transmitted on a computer readable transmission medium; or a combination thereof.
- example or “exemplary” are used in this disclosure to mean serving as an example, instance, or illustration. Any aspect or design described in this disclosure as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X employs A or B” is intended to mean any of the natural inclusive permutations.
- Computer-readable storage media can be any available storage media that can be accessed by the computer, is typically of a non-transitory nature, and can include both volatile and nonvolatile media, removable and non-removable media.
- Computer-readable storage media can be implemented in connection with any method or technology for storage of information such as computer-readable instructions, program modules, structured data, or unstructured data.
- Computer-readable storage media can include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or other tangible and/or non-transitory media which can be used to store desired information.
- Computer-readable storage media can be accessed by one or more local or remote computing devices, e.g., via access requests, queries or other data retrieval protocols, for a variety of operations with respect to the information stored by the medium.
- communications media typically embody computer-readable instructions, data structures, program modules or other structured or unstructured data in a data signal that can be transitory such as a modulated data signal, e.g., a carrier wave or other transport mechanism, and includes any information delivery or transport media.
- modulated data signal or signals refers to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in one or more signals.
- communication media include wired media, such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared and other wireless media.
- RF radio frequency
Abstract
Systems and methods facilitating removal of content from audio files are described. A method includes identifying a sound recording in a first audio file, identifying a reference file having at least a defined level of similarity to the sound recording, and processing the first audio file to remove the sound recording and generate a second audio file. In some embodiments, winner-take-all coding and Hough transforms are employed for determining alignment and rate adjustment of the reference file in the first audio file. After alignment, the reference file is filtered in the frequency domain to increase similarity between the reference file and the sound recording. The frequency domain representation (FR) of the filtered version is subtracted from the FR first audio and the result converted to a time representation of the second audio file. In some embodiments, spectral subtraction is also performed to generate a further improved second audio file.
Description
This application is a continuation of U.S. patent application Ser. No. 13/972,262, filed Aug. 21, 2013, which is hereby incorporated by reference herein in its entirety.
This disclosure relates to audio processing that facilitates selective removal of content from mixed audio.
Audio recordings often include numerous different types of sound recordings. For example, audio recordings often include speech and music. Acoustic capture of sound can be facilitated through use of microphone and audio mixing can be employed to integrate multiple different sound recordings into a single audio recording. However, with conventional devices, systems or methods, it is difficult to selectively remove one or more sound recordings from a mixed audio recording.
The following presents a simplified summary of one or more embodiments in order to provide a basic understanding of such embodiments. This summary is not an extensive overview of all contemplated embodiments, and is intended to neither identify key or critical elements of all embodiments nor delineate the scope of any or all embodiments. Its purpose is to present some concepts of one or more embodiments in a simplified form as a prelude to the more detailed description that is presented later.
Systems and methods in this disclosure relate to selective removal of sound recordings from mixed audio. In one embodiment, a system includes: a memory storing computer-executable components; and a processor configured to execute computer-executable components stored in the memory. The computer-executable components can include a communication component and a processing component. The communication component can facilitate display of information indicative of an option to select one or more sound recordings for removal from a first audio file to generate a second audio file, and facilitate display of indicia of the second audio file. The processing component can generate the second audio file by removing the selected one or more sound recordings from the first audio file (e.g., based on winner-takes-all (WTA) coding). Hough transforms and filtering in frequency domain can also be employed to generate the second audio file.
In another embodiment, another system is provided. The system can include: a memory storing computer-executable components; and a processor configured to execute computer-executable components stored in the memory. The computer-executable components can include an identification component and a processing component. The identification component can: identify one or more sound recordings in a first audio file; and identify a reference file having at least a defined level of similarity to at least one of the one or more sound recordings. The processing component can remove, from the first audio file, at least one of the identified one or more sound recordings to generate a second audio file. The processing component can include an alignment and rate component that determines a first alignment between the reference file and the first audio file by comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file.
In another embodiment, a method can include employing a processor to execute computer-executable components stored within a memory to perform operations. The operations can include: identifying one or more sound recordings in a first audio file; and identifying a reference file having at least a defined level of similarity to at least one of the one or more sound recordings. The operations can also include processing the first audio file to remove the at least one of the one or more sound recordings from the first audio file and generate a second audio file. In some embodiments, processing includes determining a first alignment between the reference file and the first audio file based, at least, on comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file.
In another embodiment, an apparatus can include means for identifying one or more sound recordings in a first audio file, and means for identifying a reference file having at least a defined level of similarity to at least one of the one or more sound recordings. The apparatus can also include means for processing the first audio file to remove the at least one of the one or more sound recordings from the first audio file and generate a second audio file. In some embodiments, means for processing includes means for determining a first alignment between the reference file and the first audio file based, at least, on comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file.
Toward the accomplishment of the foregoing and related ends, the one or more embodiments include the features hereinafter fully described and particularly pointed out in the claims. The following description and the annexed drawings set forth in this disclosure detail certain illustrative aspects of the one or more embodiments. These aspects are indicative, however, of but a few of the various ways in which the principles of various embodiments can be employed, and the described embodiments are intended to include all such aspects and their equivalents.
Various embodiments are now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a more thorough understanding of one or more embodiments. It is evident, however, that such embodiments can be practiced without these specific details. In various instances, structures and devices are shown in block diagram form in order to facilitate describing one or more embodiments.
Many service providers allow users to upload media content to a server and/or transfer content to one or more different users. For example, users can upload and/or transfer audio and/or video content. However, typically, such service providers have very limited control over composition of the media content.
Current copyright protection schemes can compare uploaded media content to an index of validated and protected content to determine whether copyright rights are implicated. To facilitate the comparison, the copyright holder can provide copyrighted media content as a reference file. Policies for addressing content that match the copyrighted media content can be implemented and action taken to address issues related to the content. For example, if a match between the media content and the reference file is detected, a copyright claim can be generated regarding the uploaded media content. As such, depending on the policy implemented by the copyright holder, uploaded media content may need to be processed in one or more different manners.
In various different scenarios, content can be removed, attenuated and/or muted to address copyright issues. In one scenario, content in a media file is identified as including copyrighted audio and removed from the media file to mitigate non-acceptance of the media file by the service provider. The content can be removed from the media file to also mitigate unauthorized use allegations.
In another scenario, unwanted audio files in a media file can be removed, attenuated and/or muted to emphasize other audio in the media file. For example, automobile, train or airplane noise or a barking dog can make more important audio in a recording inaudible. These types of noise can be removed, attenuated or muted to allow the other audio to be clearly heard.
In another scenario, audio in a media file can be removed and replaced with other audio. For example, an audio track can be removed and replaced with another audio track. In another scenario, audio in a media file can be extracted for dubbing. For example, audio content can be extracted from a media file and replaced with re-recorded content in a language corresponding to the country in which the media file may be played.
In another scenario, extraneous and/or unwanted audio can be removed from content. In yet another scenario, an audio track within a media file can be selectively attenuated and enhanced to facilitate discernment of speech from a particular user. For example, multiple people may speak concurrently at a cocktail party, and processing can be employed to selectively attenuate one or more speakers or enhance one or more speakers. As another example, one portion of an audio track could be attenuated to allow other audio to be heard clearly while another portion of an audio track (e.g., a later-occurring portion) could be enhanced to allow the enhanced audio to be heard clearly.
Notwithstanding the widespread and numerous usage scenarios of the embodiments described herein, in cases in which the media content is embedded in other content (e.g., music embedded in video), efficient removal, attenuation, amplification and/or modification of the target media can be difficult.
Systems and methods described herein facilitate selective removal of one or more sound recordings from mixed audio. The sound recordings to be removed from the mixed audio can be identified and a reference file that is similar to the audio content to be removed can be determined. Coarse and fine alignment along with rate adjustment can be performed to align the audio file in which the sound recording is located and the reference file, and to adjust rate of the reference file, for efficient removal of the sound recordings. In some embodiments, coarse alignment and rate adjustment are performed based on a comparison of WTA-coded spectrograms of the reference and audio files, and mapping of information (e.g., candidate time offset and candidate rate ratio pairs) to Hough space. The reference and audio files are then aligned employing the optimal time offset, and the reference file is rate adjusted (e.g., rate stretched) to a rate matching that of the audio file. Fine alignment is performed within chunks of signal determine by the coarse alignment and computed based on performing a cross correlation between the reference and audio files.
After alignment and rate adjustment, a filter is generated in frequency domain based on determining a ratio between the frequency domain representation (FR) of the reference file and the FR of the audio file. The reference file is then filtered to result in a filtered version that has increased similarity to the sound recording to be removed. A residual, or second audio signal, is generated by aligning the reference and audio signal such that the reference signal is aligned with the portion of the audio signal having the sound recording to be removed, and subtracting the filtered version of the FR of the reference file from the FR of the audio signal. In some embodiments, a second, spectral subtraction can be performed on the residual, or second audio signal, to generate an enhanced signal. In either embodiment, an inverse transform is performed to obtain a time domain version of the waveform that represents the second audio file. The process is repeated for different segments of the reference file and audio file and the segments are overlapped to re-create the entire second audio file. The entire second audio file can be embedded in different types of media files in various embodiments.
One or more embodiments can advantageously provide accurate and efficient alignment of the reference file and first audio file with sample-level accuracy able to cope with drift between the reference file and the first audio file due, for example, to different sample rates. One or more embodiments also efficiently perform adaptive filtering in the frequency domain, rather than in the time domain, making use of certain mathematical constraints on the signal type to result in a system that is computationally efficient. Efficient systems and methods facilitating selective removal of sound recordings from mixed audio recordings can result.
Turning now to the drawings, FIG. 1 is an illustration of a block diagram of a non-limiting system that facilitates selective removal of audio content from a mixed audio recording in accordance with one or more embodiments described herein. System 100 can include a user device 102, reference file repository 104, media editing system 106, network 108 and/or media server 110. As used in this disclosure, the term “user” can refer to a person, entity, system, or combination thereof. The user device 102, reference file repository 104, media editing system 106 and/or media server 110 can be communicatively coupled to one another via network 108 and/or directly coupled to one another. While system 100 includes the components shown, in some embodiments, system 100 can include media editing system 106 and reference file repository 104. Additionally, system 100 can be communicatively and/or electrically coupled to a cloud-based video editor (not shown) in some embodiments.
In various embodiments, the audio content can include one or more sound recordings interlaced with one another. For example, the audio content can include, but is not limited to, music (e.g., soundtracks), songs, speeches, and/or any other suitable audio content. For example, in one embodiment, the audio content can include a video performance of a cover song uploaded to user device 102 by a user, and media editing system 106 can identify the cover song by evaluating the reference files in reference file repository 104 that are similar to the cover song. Cover songs can include, but are not limited to, songs performed that feature different performers, instrumentation, performance conditions, and/or arrangements than the performers, instrumentation, conditions and/or arrangements of the song when originally recorded. For example, a cover song can be a live performance of a recorded song featuring the original performer of the recorded song. As another example, a cover song can be a performance of a song by a performer other than the original performer of the song.
In various embodiments, media editing system 106 can receive and/or access a media file from user device 102, reference file repository 104 or the like. However, in some embodiments, media editing system 106 can access a media file stored on and/or received from media server 110, which can be remote from or directly coupled to media editing system 106. In some embodiments, content can be stored in media editing system 106 prior to processing by media editing system 106.
For selective removal of one or more sound recordings from audio content, media editing system 106 can receive one or more commands for removal of the sound recordings and identify the one or more sound recordings of interest within the audio content. Media editing system 106 can then perform a number of different signal processing functions to align a reference file that has at least a defined level of similarity with the sound recording with the portion of the audio content at which the selected sound recording is located, match the rate of the reference file to the rate of the audio content, filter the reference file to cause the reference file to more closely approximate the sound recording selected for removal and/or generate a second audio file with the sound recording removed from the mixed audio file (or at least a portion of the sound recording removed from the mixed audio file). In some embodiments, media editing system 106 can generate a new media file having the selected sound recording removed.
User device 102 can include hardware and/or software configured to enable receipt, transmission and/or processing of media files (e.g., audio and/or video files) to and/or from user device 102. For example, user device 102 can include hardware and/or software configured to receive uploaded media content at user device 102 and/or media content received from media server 110 or any number of other different types of devices configured to transmit media content. In various embodiments, user device 102 can include, but is not limited to, a cellular telephone, a tablet computer, a laptop computer, a personal digital assistant (PDA), a desktop computer, a television or the like.
In the embodiment shown, user device 102 includes interface component 112. Interface component 112 can be configured to output graphics and/or audio associated with a video and/or audio received at and/or processed by user device 102.
In system 200, as shown, user device 102 includes interface component 112 configured to display a video associated with media file 212 having an embedded audio file. The embedded audio file can include one or more sound recordings. For example, embedded audio file can include a recording of a copyrighted song playing as background music for the recording of a speech by user of user device 102.
As shown, interface component 112 can display information identifying or otherwise associated with one or more sound recordings 200, 202, 204 included in the first audio file of the media file. Interface component 112 can also display regions 206, 208, 210 that can be activated to select at least one of the one or more sound recordings 200, 202, 204 for removal from the audio file embedded in the media file. In the embodiment shown, sound recording 202 is selected for removal upon detection of activation of region 208 by user device 102.
Information indicative of the sound recording selected for removal and, in some embodiments, media file 212 can be received by or otherwise accessed by media editing system 106. Media editing system 106 can access a reference file stored in reference file repository 104 to facilitate removal of sound recording 202 from the audio of media file 212.
As shown, media editing system 106′ can include processing component 300, communication component 316, modification component 318, processor 320 and/or memory 322. In one or more embodiment, processing component 300, communication component 316, modification component 318, processor 320 and/or memory 322 can be communicatively and/or electrically coupled to one another to perform one or more of the functions of media editing system 106′.
In some embodiments, communication component 316 facilitates display of information regarding one or more policies associated with one or more sound recordings of which mixed audio in a media file is composed. For example, communication component 316 can receive a media file or information indicative of a media file. Based on the sound recording selected for removal, media editing system 106′ can determine one or more policies associated with the sound recording. For example, policies related to the sound recording can indicate a preference to mute the sound recording or a preference to delete the sound recording from the mixed audio file. Information can be displayed on the user device indicative of the policy. Communication component 316 can receive information indicative of one or more inputs at the user device in response to the display of policy information.
In embodiments in which the sound recording is to be removed from the mixed audio file, processing component 300 can perform one or more signal processing methods to selectively remove the sound recording. As shown, processing component 300 can include identification component 302, alignment and rate component (ARC) 304, power normalization component 306, filtering component 308, first subtraction component 310, second subtraction component 312 and/or time-frequency conversion component 314. One or more of identification component 302, alignment and rate component (ARC) 304, power normalization component 306, filtering component 308, first subtraction component 310, second subtraction component 312 and/or time-frequency conversion component 314 can be communicatively and/or electrically coupled to one another to perform one or more functions of processing component 300.
In various embodiments, identification component 302 can identify the reference file to be used for removal based on determination of one or more characteristics of at least a segment of the sound recording, determination of content of at least a segment of the sound recording and/or utilization of one or more hashing schemes. By way of example, but not limitation, identification component 302 can compare an identifier (e.g., fingerprint), or portion of an identifier, for the sound recording to one or more identifiers for reference files, and determine one or more reference files that have a defined level of similarity to the sound recording based on the comparison of the identifiers. In some embodiments, a fingerprint can include a set of hash values, and identification component 302 can employ the set of hash values to lookup fingerprints in the set of reference files.
Turning now to ARC 304, a reference file identified by identification component 302 can be employed for alignment with the mixed audio file at or near a location corresponding to the location of the sound recording to be removed from the mixed audio file. For example, ARC 304 can determine the time offset in the mixed audio file at which the sound recording begins, and align the reference file to begin at such point so that the sound recording can be efficiently subtracted from the mixed audio file.
The advantage of using WTA coding for the initial, coarse alignment is that WTA codes allow efficient determination of similarity matches in a large space of possible alignments between the reference and first audio files without having to exhaustively compute a distance measure between the reference and first audio files. Further, use of WTA codes works well with Hough transform-based alignment since an individual match in the WTA space corresponds to the addition of a single line in the Hough space, and, as such, the Hough map can be built incrementally.
In one embodiment, ARC 304 performs alignment and rate adjustment in a two-stage process. The first stage includes coarse alignment and rate determination. ARC 304 first computes wideband spectrograms of the reference file and the mixed audio file. In these embodiments, wideband spectrograms can be spectrograms of high frame rate and a low number of frequency channels or resolution. For example, one frame per 2 ms can be employed with overlapping 4 ms windows on audio that has been downsampled to about 5 kilohertz (kHz). As such, only about 20 samples per window are generated for 10 distinct frequency bands.
Next, ARC 304 can split the spectrogram for each file into short windows containing a small number of spectrogram slices. For example, the window can contain about 7 spectrogram slices. ARC 304 can encode the spectrogram slices into WTA codes with a WTA hash function. In some embodiments, ARC 304 includes a hashing component that employs a hash function to generate a fingerprint using the set of spectrogram slices. The fingerprint can include a set of WTA codes corresponding to respective spectrogram slices.
WTA coding can advantageously summarize the spectrogram short windows in terms of location of relatively large-valued elements. Such pattern descriptors are potentially useful in determining if two short snippets of audio correspond to one another since spectral peak locations are usually robust in the presence of interference. Each short window can therefore be converted to a set of a number of small hash codes. In one embodiment, the hash codes can be 1024 bits, or 256 4-bit codes with each 4-bit code indicating which point is highest out of a predetermined set of 24=16 points in the short window.
As noted above, ARC 304 generates a set of WTA hash codes for each spectrogram frame (e.g., short window center) in the reference file and the mixed audio file. ARC 304 can compare the hash codes using a similarity measure. In some embodiments, ARC 304 can compare the hash codes using bit-wise similarity (e.g., Hamming similarity).
In one embodiment, to find the optimal alignment between the mixed audio file and the reference file by exhaustive search, ARC 304 can compute the similarity of every mixed audio file WTA code with every reference file WTA code and build a two-dimensional graph showing the similarity between the files at each time step. A strong line can appear with an axis-intercept determined by the time offset between the two files and a gradient determined by the relative rate (e.g., rate ratio) between the two files at time steps in embodiments in which there is good alignment between the mixed audio file and the reference file. However, building this representation exhaustively can be computationally intensive as this approach would be similar to cross-correlation via Hamming distance.
In another embodiment, ARC 304 can make use of the WTA hash codes to efficiently find potential locations at which the WTA codes for the files show at least a defined degree or level of similarity. ARC 304 can determine that the locations at which the files have similar WTA codes can correspond to locations at which the spectrograms for the files are similar.
For example, to determine locations at which similarity between the files is present, ARC 304 can employ locality-sensitive hashing (LSH), which relies on tables indexed by hash codes. ARC 304 can make code values that are bigger than 4-bit digits but smaller than 1024-bit full code. In one embodiment, 16-bit codes can be employed. ARC 304 can generate the 16-bit codes by concatenating four 4-bit digits. As used herein, a 16-bit index number can be the address of a location in the index table. Since there can be 1024 bits, the 1024 bits can be divided into 64 16-bit addresses into 64 different tables. ARC 304 can employ the tables to store information indicative of locations in the mixed audio file at which a particular code value was identified since each address maps to zero or more time locations at which that address value appeared in the hash code.
Based on the reference file short windows, ARC 304 can generate corresponding code addresses. ARC 304 can determine, by looking in one or more of the 64 tables, whether a short window in the reference file has a time point that matches a time point in the mixed audio file. In some embodiments, whether a time point is adopted as an alignment between the reference file and the mixed audio file can depend on the number of tables in which the match is found. For example, if a match in time points originates from just one table, ARC 304 can forego using the time point as the alignment of the reference file in the mixed audio file. However, if a time point originates from more than one of the 64 tables, ARC 304 can select the time point as the time offset in the mixed audio file at which the reference file should be aligned. As such, ARC 304 can determine coarse alignment such that the reference file begins at the time offset selected by ARC 304 based on the number of tables at which the time point match is identified. The number of tables that match a particular time offset can also be determined and correspond to the strength of the time offset.
Accordingly, in lieu of ARC 304 computing numerical distance calculations at all possible time offsets and accumulating the calculations in a correlation function and looking for a peak, ARC 304 can review the table to go directly to locations at which peaks might be present. The time point match in a single table can correspond to a zero Hamming distance on one 16-bit part of the code. The time point match in two or more tables can correspond to a low Hamming distance overall, as otherwise it would be very unlikely to have two 16-bit pieces of 1024-bit code to match exactly. Low Hamming distance can be akin to high correlation between the portions of the reference and mixed audio files compared to one another.
In various embodiments, more than one time offset can be determined to be a potential time offset for coarse alignment. For example, time points having matching in more than a defined number of tables can be considered potential coarse alignment time offsets. To determine rate difference between the reference and mixed audio files, ARC 304 can assemble one or more candidate coarse alignment time offsets and rate ratios between the mixed audio file and the reference file. For example, an image map can have two axes, representing number of spectrogram short window time steps in reference file and first audio files. Then, ARC 304 can start with zeros on both axes and drop in the match strength at the x and y locations of the potentially matching reference file and first audio file time offsets per number of tables at which matches were found. Each table lookup would yield zero, one, or a few hits, so a small number of pixels can identify the number of hits as ARC 304 scans along the reference-time dimension. After plotting is complete, random noise and points along a line can be discerned by ARC 304. The line can have a slope near 1 at certain locations and may not have a slope of 1 when rates of the reference and mixed audio files do not match one another. ARC 304 can identify the noise and the line through the use of a Hough transform.
In still other embodiments, ARC 304 can map time points and rate ratios using the Hough transform. For example, in one embodiment, each pair of first audio file time and reference file time can be transformed into a line in the Hough space. The line connects combinations of time offset and rate ratio that could be consistent with those time points aligning. The Hough transform can advantageously be much smaller than the image map described in the previous embodiment since the Hough transform can consider time offsets bounded by information known by the ARC 304. For example, ARC 304 can have information about alignment within 100 ms, so, in some embodiments, ARC 304 can consider time offsets of ±100 ms, or about 100 points total, rather than the full time range of the songs represented by the reference and mixed audio files. The number of points in the other dimension is the number of candidate rate ratios between the reference and mixed audio files. The point can be in increments of 0.002 from 0.96 to 1.04, for example, which is approximately 41 points. So lines are drawn, adding them into a, for example, 100×41 Hough transform accumulator picture instead of putting points into a huge picture that is much larger than 100×41.
In the resulting Hough transform accumulator image, one or more, or in some embodiments, each point will correspond to a single line in the big image. The line can be characterized by a slope and an offset that specifies a coarse alignment between the mixed audio file and the reference file. A high point value in the Hough transform accumulator image can correspond to a large number of table matches along the corresponding line. Building up multiple lines in the Hough transform accumulator for all the matches between the mixed audio file and the reference file can allow a relatively efficient determination of the optimal combination of time offset and rate ratio between the mixed audio file and the reference file. In one embodiment, to improve the likelihood that the number of matches for consideration remains relatively small, ARC 304 can ignore time offset matches from only a single table of the 64 tables and employ tables that utilize large (e.g., 16-bit) addresses.
After ARC 304 fills the Hough transform accumulator by scanning over the short windows of the reference file, the optimal rate ratio-time offset combination is given by the element in the Hough transform accumulator with the largest value. ARC 304 can identify the maximum value in the Hough transform accumulator and the corresponding time offset and rate ratio can corresponding to the time offset within the mixed audio file at which the reference file should be aligned and the rate ratio according to which the reference file should be adjusted. In embodiments in which there is no clear maximum value, ARC 304 can select one of the largest values randomly or by any number of other approaches including, but not limited to, selecting the maximum value (even if there are other values that are very close in value to the maximum value).
Accordingly, ARC 304 can determine the time offset corresponding to where the sound recording begins in the first audio file. In some embodiments, the rate ratio, a factor near 1 when the rates of the reference file and mixed audio file are an exact match, indicating how much the music in the first audio file has been slowed down or sped up relative to the reference file. Once the ARC 304 has estimated a rate ratio and time offset between the two files, the ARC 304 can adjust (e.g., stretch) the rate of the reference file to match (or substantially match) the rate of the sound recording in the first audio file.
The ARC 304 can then align the reference file to the time in the first audio file corresponding to the location in the first audio file at which the sound recording selected for removal begins. The reference file and the sound recording can be aligned to better than 1 ms employing one or more of the embodiments described herein.
In the second stage, after coarse alignment of reference and mixed audio files, ARC 304 can perform fine alignment by repeating the process on windows of about 5-10 seconds in length. However, fine alignment can be performed to align waveforms (as opposed to alignment of spectrograms, which was performed with coarse alignment).
To perform fine alignment, the coarse alignment steps are repeated on 5 to 10 second windows of the reference file audio and mixed audio file audio waveforms (fine alignment is performed to align the waveforms representations of reference file and mixed audio file while coarse alignment is performed to align the spectrogram representations of reference file and mixed audio file). Specifically, waveform cross-correlation is performed on the 5 to 10 second windows within coarsely aligned windows to determine fine alignment offsets local to the short windows. These local time-to-time correspondences, are then used as input to a Hough transform as described above with coarse alignment to get a consensus for a final offset-rate adjustment for the small window.
Once the rate ratio and time offset are estimated, the reference file audio is rate adjusted (e.g., stretched) to match the rate of the audio in the first audio file audio. The start of the reference file audio is aligned with the first audio file audio.
This two-phase alignment approach, employing coarse alignment on the reference file and mixed audio file using WTA-coded smoothed spectrograms, followed by fine alignment using correlation estimates on small windows within segments identified by coarse alignment) can be useful in recordings having changing delay or other changing conditions. For example, the embodiments for alignment and rate adjustment can be useful for recordings in which the sound recording to be removed is music added to the other audio and originating from a moving video camera with changing delay from the speakers. As another example, the embodiments for alignment and rate adjustment can be useful for recordings generated while the videographer is walking at different speeds during recording.
After alignment by ARC 304, power normalization component 306 can normalize power of the reference file and mixed audio file such that the overall power of the reference file is approximately equal to the overall power of the mixed audio file.
In one embodiment, in lieu of determining filter coefficients in the time domain, filtering component 308 can determine the filter coefficients in frequency domain. Specifically, filtering component 308 can compute complex spectrograms of the reference file and mixed audio file, then smooth in both time and frequency the power spectrograms of the mixed audio file and the reference file and the complex product of the mixed audio file spectrogram and the reference file spectrograms. Filtering component can employ these smoothed representations to compute the optimal filter in the complex frequency domain as a function of time.
As such, filtering component 308 can smooth complex ratios in time and frequency to determine optimal short filter for matching the reference file to the mixed audio file (or matching the reference file to the portion of the mixed audio file at which the sound recording is located). In some embodiments, this process can be mathematically equivalent to adaptive filtering the reference file in the time domain, but can be much more computationally efficient.
The filtering can be performed on overlapping windowed frames of the reference file, and on overlapping windows of the mixed audio file. For example, filtering component 308 can perform the filtering on windows of 20 ms in length, every 10 ms.
For each frame of the aligned reference and mixed audio files, filtering component 308 can taper the waveform with the window and convert the waveform to the complex frequency domain using a fast Fourier transform (FFT). Filtering component 308 can perform this tapering and conversion to complex frequency domain for aligned reference file and mixed audio file frames.
For each frame converted to the frequency domain, filtering component 308 can then filter the FR of the reference file such that the FR of the reference file approximates the FR of the mixed audio file (or to match the sound recording selected for removal from the mixed audio file).
In one embodiment, to minimize the residual from the subtraction of the filtered FR of the reference file from the FR of the mixed audio file, filtering component 308 can generate a filter having coefficients equal to the ratio of the mixed audio file to the reference file using values from corresponding FFT frequency bins. However, this approach can result in an exact match between the FR of the reference file and the FR of the mixed audio file and exact cancellation except in locations at which FR of the reference file is 0.
Accordingly, filtering component 308 can employ ad hoc smoothing of the generated filter. As the amount of filtering component 308 smoothing of the ratio of the FR of the mixed audio file to the FR of the reference file increases, the likelihood increases that the residual signal output from media editing system 106′ will include only the desired signal and remove the sound recording. In some embodiments, filtering component 308 can perform the smoothing is performed in frequency domain (FFT bins within a frame) and time domain (e.g., frame to frame).
Time-frequency conversion component 314 can convert the FR of the second audio file (or intermediate second audio file) to the time representation of the second audio file (or the intermediate second audio file). For example, in some embodiments, time-frequency conversion component 314 can perform an inverse transform on the FR of the second audio file (or the intermediate second audio file) to generate a time representation of the segment of the second audio file (or the intermediate second audio file) processed by filtering component 308. Time-frequency conversion component 314 can then re-taper the edges of the second audio file (or the intermediate second audio file) to re-create the original windowed section processed by filtering component 308. Time-frequency conversion component 314 can then overlap and add the segments to get the cleaned second audio file (or the intermediate second audio file).
In some embodiments, processing component 300 also include second subtraction component 312. In this embodiment, second audio file can be considered the intermediate second audio file described with reference to time-frequency conversion component 314. Second subtraction component 312 can perform spectral subtraction in the frequency domain on the FR of the intermediate second audio file to remove to remove additional energy at one or more time-frequency regions at which the reference file energy was removed by first subtraction component 310. In some embodiments, the FR employed in spectral subtraction is a sequence of complex DFTs of overlapping windowed segments, and the waveform is reconstructed by performing inverse transforms and overlap-add operations. To minimize edge-wrap sound effects, the DFT size can be longer than the windowed segment. The DFT size can be longer than the windowed segment by 50%, typically. Accordingly, second subtraction component 312 can generate an enhanced FR of the second audio file (relative to the version of the FR of the second audio file not processed with second subtraction component 312). The enhanced FR of the second audio file can have information such as that remaining from the sound recording removed.
In some embodiment, the subtraction performed by second subtraction component 312 can be spectral subtraction implemented employing one or more signal processing algorithms in the frequency domain. In various embodiments, spectral subtraction can include non-linear or non-coherent subtraction. For example, non-coherent subtraction can be based on a power spectrum (e.g., a power spectrum of the intermediate second audio file).
In some embodiments, second subtraction component 312 can determine a spectrogram for the intermediate second audio file. Second subtraction component 312 can compare one or more segments of the sound recording selected for removal with one or more corresponding segments of the intermediate second audio file to generate the second audio file. For example, second subtraction component 312 can find one or more segments of the sound recording selected for removal that are spectrally similar to one or more segments of the intermediate second audio file. In one example, the one or more segments for each can be spectro-temporal segments. As such, the level of individual frequency bands can be modified within a short temporal slice of the sound recording selected for removal and/or the intermediate second audio file to generate the second audio file. Second subtraction component 312 can split the spectrogram into magnitude and phase.
To generate the second audio file, second subtraction component 312 can adjust and/or reduce a power level of the intermediate second audio file based on a correlation, spectral similarity or the like of the one or more segments of the sound recording selected for removal with the one or more segments of the intermediate second audio file. For example, to generate the second audio file, second subtraction component 312 can adjust and/or reduce a power level of at least one of the one or more segments of the intermediate second audio file based on spectral correlation of the one or more segments of the sound recording selected for removal with the one or more segments of the intermediate second audio file. In one example, to generate the second audio file, the power level of a particular corresponding segment of the one or more segments of the intermediate second audio file can be reduced to zero in response to a determination that remaining sound in the residual audio of the sound recording selected for removal is not relevant (e.g., remaining sound in the residual audio of the sound recording selected for removal is below a predetermined threshold level). For example, to generate the second audio file, the power level of a particular corresponding segment of the one or more segments of the intermediate second audio file can be reduced to zero based on a relevancy level of the particular segment of the sound recording selected for removal.
In one example, second subtraction component 312 can compare the one or more segments of the sound recording selected for removal with the one or more corresponding segments of the intermediate second audio file using a short-time Fourier transform (STFT) algorithm. Therefore, the power level of the intermediate second audio file can be selectively reduced as a function of a spectral correlation to generate the second audio file. As such, second subtraction component 312 can reduce a power level for different time frequency bins (e.g., reduce power at different frequencies) of the intermediate second audio file to generate the second audio file. Second subtraction component 312 can re-synthesize the intermediate second audio file using the subtracted magnitude spectrum and the original phase of the intermediate second audio file to generate the second audio file. As such, the sound recording selected for removal can be removed from the intermediate second audio file (e.g., the intermediate second audio file can be re-processed without the sound recording selected for removal) to generate the second audio file. Therefore, one or more songs can be removed from the first audio file while preserving non-song audio resulting in the second audio file. It is to be appreciated that another type of correlation or reductions in power level can be implemented by second subtraction component 312 to remove the sound recording selected for removal from the intermediate second audio file thereby resulting in the second audio file. It is also to be appreciated that other types of signal processing algorithms can be used to remove the sound recording from the intermediate second audio file thereby resulting in the second audio file.
As described above, time-frequency conversion component 314 can generate a time representation of the second audio file.
Turning first to FIG. 4A , user interface 400 can include a first display region 402 that can display information identifying and/or describing one or more detected tracks of a mixed audio recording received at and/or accessed by a media editing system. For example, the media editing system can identify and/or describe sound recordings 200, 202, 204 embedded in the mixed audio recording. In various embodiments, the information displayed can be a title and/or author of the sound recording, a type of audio recording (e.g., speech audio, music audio) or any number of other different ways to identify and/or describe sound recordings in a mixed audio recording. In some embodiments, for example, if user interface 400 is a touch screen user interface, one or more of sound recordings 200, 202, 204 can be selected by user activation of a portion of user interface at which the information identifying and/or describing sound recordings 200, 202, 204 is located. In other embodiments, user interface 400 can display information and the media editing system of user interface 400 can receive inputs via keyboard, mouse or the like.
In various embodiments, users can specify one or more different desired edits to one or more sound recordings. For example, in the example shown, sound recording 202 is selected for replacement with another track. User interface 400 can provide a text box 412 that can receive alphanumeric information specifying a title, author or other identifying information for a track for which the user is searching for replacement of sound recording 202 in the mixed audio recording. In some embodiments, the search is commenced upon receipt of the alphanumeric information in text box 412. In other embodiments, the search is commenced upon activation of the search activation region 414 after receipt of the alphanumeric information in text box 412.
In some embodiments, user interface 400 can display one or more featured tracks at display region 416. The featured tracks can be selected for replacement of sound recording.
Accordingly, user interface 400 can facilitate addressing copyright issues brought to the attention of a user and/or mitigate the likelihood of receipt of an unauthorized use allegation by enabling replacement of various sound recordings with other sound recordings. User interface 400 can also facilitate general editing by allowing users to replace unwanted sound recordings with more desirable sound recordings.
Turning now to FIG. 4B , sound recording 202 can be selected and display region 410 can be activated for modification of sound recording 202. In this embodiment, user interface 400 can provide display region 412 to enable a user to attenuate or amplify a sound recording and/or display region 414 to enable a user to filter a sound recording.
In some embodiments, as shown at display region 412, the volume of sound recording 202 relative to other sound recordings in the mixed audio recording can be adjusted to diminish or cause sound recording 202 to be more prominent within the mixed audio recording. As shown, the volume of sound recording 202 can be reduced to a level such that the sound recording is effectively muted in some embodiments, increased to the maximum volume possible for the sound recording in other embodiments, or adjusted to a volume between the two extremes, in other embodiments.
Accordingly, the media editing system described herein can enable content to be attenuated or amplified as desired by the user of the media editing system. For example, if sound recording 202 includes airplane or train noise, the noise can be muted by the media editing system as dictated by the user via user interface 400.
Although not selected, in some embodiments, display region 414 can facilitate filtering of a sound recording. For example, a particular sound recording can be extracted for dubbing. As another example, a particular sound recording can be process to remove defects that diminish sound quality of the sound recording.
Although user interface 400 is described as a user interface for a media editing system, in various embodiments, there can be desktop, laptop, tablet, and mobile device versions of user interface 400 to account for and optimize utilization of the screen for these different devices.
Turning first to FIG. 5 , at 502, method 500 can include receiving a first audio file, wherein the first audio file is a mixed audio file (e.g., using communication component 316 of media editing system 106′). In various embodiments, the mixed audio file can be received by communication component 316 from a computing device (e.g., user device 102), over a network (e.g., network 108) from a media server (e.g., media server 110) or the like.
In various embodiments, the mixed audio file can be different types of audio files including, but not limited to, speech files, music files or any combination thereof. Further, the mixed audio file can be embedded in any number of different types of media files including, but not limited to, video files. For example, the mixed audio file can be embedded in a video file such that the entirety of the file can include a video having background music and a speech being recited over the background music.
At 504, method 500 can include facilitating displaying information indicative of an option to remove one or more sound recordings from the first audio file to generate a second audio file (e.g., using communication component 316 of media editing system 106′). The sound recording can be speech information in the mixed audio file or music in the mixed audio file, for example. The information indicative of the option to remove one or more sound recordings can be information indicative of options to remove speech or music from the mixed audio file embedded in the media file. The user can select speech or music for removal from the mixed audio file.
At 506, method 500 can include receiving information indicative of an input selecting at least one of the one or more sound recordings for removal from the first audio file to generate the second audio file (e.g., using communication component 316 of processing component 300). For example, communication component 316 can receive information causing media editing system 106′ to remove a copyrighted speech in a video, for example.
At 508, method 500 can include removing the selected at least one of the one or more sound recordings from the first audio file to generate the second audio file (e.g., using media editing system 106′). The second audio file can include approximately all content from the first audio file with the selected one or more sound recordings removed. For example, if music is selected for removal from a mixed audio file having speech and music, the second audio file can be a file having speech from the first audio file. In some embodiments, some portions of music can remain based on inability to remove all portions of the music with perfect cancellation.
At 410, method 400 can include transmitting the new media file having the second audio file embedded in the media file (e.g., using communication component 316). The new media file can be transmitted to a user device for playback and/or stored in various embodiments.
Turning now to FIG. 6 , method 600 is a method of processing a first audio file to remove selected content and thereby generate a second audio file. At 602, method 600 can include identifying one or more sound recordings in a first audio file (e.g., using identification component 302 of processing component 300).
At 602, method 600 can include identifying a reference file having at least a defined level of similarity to the identified one or more sound recordings (e.g., using identification component 302).
At 604, method 600 can include processing the first audio file to remove the identified one or more sound recordings from the first audio file and generate a second audio file (e.g., using processing component 300). In some embodiments, the processing includes determining alignment and rate adjustment between the reference file and the first audio file based, at least, on comparing a WTA-coded spectrogram of the reference file and a WTA-coded spectrogram of the first audio file (e.g., using ARC 304 of processing component 300) and mapping candidate time offsets and candidate rate ratios into Hough space.
Turning now to FIG. 7 , method 700 is a method of performing alignment and rate adjustment to efficiently remove the selected sound recording from the first audio file. At 702, method 700 can include comparing a WTA-coded spectrogram of a reference file and a WTA-coded spectrogram of a first audio file (e.g., using ARC 304). At 704, method 700 can include selecting a time offset and rate ratio between the reference file and the first audio file from candidate time offsets and candidate rate ratios based on mapping into Hough space (e.g., using ARC 304).
Turning now to FIG. 8 , at 802, method 800 can include determining a time offset corresponding to a location at which a sound recording selected for removal from a first audio file begins in the first audio file (e.g., using ARC 304).
At 804, method 800 can include determining a rate ratio between a reference file matched to the sound recording and the first audio file (e.g., using ARC 304). The rate ratio can be a numerical value representative of the rate of the reference file compared to the rate of the first audio file. For example, if the reference file and the first audio file have equal rates, the rate ratio can be determined to be 1. The rate ratio can be less than or greater than 1 depending on if the rate of the reference file is less than or greater than the rate of the first audio file, respectively.
At 806, method 800 can include aligning the reference file and the first audio file, and performing a rate adjustment on the reference file to cause the rate of the reference file to be substantially equal to the rate of the first audio file (e.g., ARC 304). For example, in some embodiments, once the rate ratio has been determined, the reference file is stretched (or compressed) to match the rate of the first audio file.
Turning now to FIG. 9 , at 902, method 900 can include filtering the reference file in frequency domain to generate a filtered FR of the reference file wherein a similarity between the filtered FR of the reference file and an FR of the sound recording selected for removal is greater than a similarity between the FR of the reference file and the FR of the sound recording (e.g., using filtering component 308). The adaptive filtering attempts to find the optimal filter to apply to the reference file that makes the sound recording reference filter, upon filtering, correspond as closely as possible to the sound recording selected for removal from the first audio file.
At 904, method 900 can include subtracting the filtered FR of the reference file from the FR of the first audio file to generate an FR of the second audio file (e.g., using first subtraction component 310). In some embodiments, at each FFT bin, the output from first subtraction component 310 (e.g., the FR of the second audio file) is approximately equal to the FR of the corresponding segment of the first audio file with the filtered FR of the reference file removed from the first audio file.
At 906, method 900 can include converting the FR of the second audio file to the second audio file (e.g., using time-frequency conversion component 314). In some embodiments, the time-frequency conversion component 314 can process the FR of the second audio file with an inverse transform to generate one or more segments of the second audio file. Segment edges can be re-tapered and segments can be overlapped and added to re-create an entire second audio file waveform.
Turning now to FIG. 10 , at 1002, method 1000 can include filtering the reference file in frequency domain to generate a filtered FR of the reference file wherein a similarity between the filtered FR of the reference file and an FR of the sound recording selected for removal is greater than a similarity between the FR of the reference file and the FR of the sound recording (e.g., using filtering component 308).
At 1004, method 1000 can include subtracting the filtered FR of the reference file from the FR of the first audio file to generate an FR of an intermediate second audio file (e.g., using first subtraction component 310). In some embodiments, at each FFT bin, the output from the first subtraction component (e.g., the FR of the intermediate second audio file) is approximately equal to the FR of the corresponding segment of the first audio file with the filtered FR of the reference file removed from the first audio file.
At 1006, method 1000 can include performing second subtraction in the frequency domain on the FR of the intermediate second audio file to generate an FR of the second audio file (e.g., using second subtraction component 312). The second subtraction can be spectral subtraction in one or more embodiments.
At 1008, method 1000 can include converting the FR of the second audio file to the second audio file (e.g., using time-frequency conversion component 314).
Turning now to FIG. 11 , at 1102, method 1100 can include determining a ratio of a FR of a portion of the first audio signal to a FR of a corresponding portion of the reference file (e.g., using filtering component 308).
At 1104, method 1100 can include generating a filter for filtering in the frequency domain based, at least, on smoothing the determined ratio (e.g., using filtering component 308).
At 1106, method 1100 can include filtering the FR of the reference file, wherein the similarity between the filtered version of the FR of the reference file and the FR of the sound recording selected for removal is greater than the similarity between the reference file and the FR of the sound recording selected for removal (e.g., using filtering component 308).
At 1108, method 1102 can include performing the filtering for one or more of the FFT bins and for one or more of the windows of the overlapping windows (e.g., using filtering component 308).
Example Operating Environments
With reference to FIG. 12 , a suitable environment 1200 for implementing various aspects of the claimed subject matter includes a computer 1202. The computer 1202 includes a processing unit 1204, a system memory 1206, a codec 1205, and a system bus 1208. The system bus 1208 couples system components including, but not limited to, the system memory 1206 to the processing unit 1204. The processing unit 1204 can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit 1204.
The system bus 1208 can be any of several types of bus structure(s) including the memory bus or memory controller, a peripheral bus or external bus, and/or a local bus using any variety of available bus architectures including, but not limited to, Industrial Standard Architecture (ISA), Micro-Channel Architecture (MSA), Extended ISA (EISA), Intelligent Drive Electronics (IDE), VESA Local Bus (VLB), Peripheral Component Interconnect (PCI), Card Bus, Universal Serial Bus (USB), Advanced Graphics Port (AGP), Personal Computer Memory Card International Association bus (PCMCIA), Firewire (IEEE 1394), and Small Computer Systems Interface (SCSI).
The system memory 1206 includes volatile memory 1210 and non-volatile memory 1212. The basic input/output system (BIOS), containing the basic routines to transfer information between elements within the computer 1202, such as during start-up, is stored in non-volatile memory 1212. In addition, according to one or more embodiments, codec 1205 may include at least one of an encoder or decoder, wherein the at least one of an encoder or decoder may consist of hardware, a combination of hardware and software, or software. Although, codec 1205 is depicted as a separate component, codec 1205 may be contained within non-volatile memory 1212. By way of illustration, and not limitation, non-volatile memory 1212 can include read only memory (ROM), programmable ROM (PROM), electrically programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), or flash memory. Volatile memory 1210 includes random access memory (RAM), which acts as external cache memory. According to present aspects, the volatile memory may store the write operation retry logic (not shown in FIG. 12 ) and the like. By way of illustration and not limitation, RAM is available in many forms such as static RAM (SRAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), double data rate SDRAM (DDR SDRAM), and enhanced SDRAM (ESDRAM.
It is to be appreciated that FIG. 12 describes software that acts as an intermediary between users and the basic computer resources described in the suitable operating environment 1200. Such software includes an operating system 1218. Operating system 1218, which can be stored on disk storage 1214, acts to control and allocate resources of the computer 1202. Applications 1220 take advantage of the management of resources by operating system 1218 through program modules 1224, and program data 1226, such as the boot/shutdown transaction table and the like, stored either in system memory 1206 or on disk storage 1214. It is to be appreciated that the claimed subject matter can be implemented with various operating systems or combinations of operating systems.
A user enters commands or information into the computer 1202 through input device(s) 1228. Input devices 1228 include, but are not limited to, a pointing device such as a mouse, trackball, stylus, touch pad, keyboard, microphone, joystick, game pad, satellite dish, scanner, TV tuner card, digital camera, digital video camera, web camera, and the like. These and other input devices connect to the processing unit 1204 through the system bus 1208 via interface port(s) 1230. Interface port(s) 1230 include, for example, a serial port, a parallel port, a game port, and a universal serial bus (USB). Output device(s) 1236 use some of the same type of ports as input device(s). Thus, for example, a USB port may be used to provide input to computer 1202, and to output information from computer 1202 to an output device 1236. Output adapter 1234 is provided to illustrate that there are some output devices 1236 like monitors, speakers, and printers, among other output devices 1236, which require special adapters. The output adapters 1234 include, by way of illustration and not limitation, video and sound cards that provide a means of connection between the output device 1236 and the system bus 1208. It should be noted that other devices and/or systems of devices provide both input and output capabilities such as remote computer(s) 1238.
Communication connection(s) 1244 refers to the hardware/software employed to connect the network interface 1242 to the bus 1208. While communication connection 1244 is shown for illustrative clarity inside computer 1202, it can also be external to computer 1202. The hardware/software necessary for connection to the network interface 1242 includes, for exemplary purposes only, internal and external technologies such as, modems including regular telephone grade modems, cable modems and DSL modems, ISDN adapters, and wired and wireless Ethernet cards, hubs, and routers.
Referring now to FIG. 13 , there is illustrated a schematic block diagram of a computing environment 1300 for implementation of one or more aspects of the embodiments disclosed. The system 1300 includes one or more client(s) 1302 (e.g., laptops, smart phones, PDAs, media players, computers, portable electronic devices, tablets, and the like). The client(s) 1302 can be hardware and/or software (e.g., threads, processes, computing devices). The system 1300 also includes one or more server(s) 1304. The server(s) 1304 can also be hardware or hardware in combination with software (e.g., threads, processes, computing devices). The servers 1304 can house threads to perform transformations by employing aspects of this disclosure, for example. One possible communication between a client 1302 and a server 1304 can be in the form of a data packet transmitted between two or more computer processes wherein the data packet may include video data. The data packet can include a metadata, e.g., associated contextual information, for example. The system 1300 includes a communication framework 1308 (e.g., a global communication network such as the Internet, or mobile network(s)) that can be employed to facilitate communications between the client(s) 1302 and the server(s) 1304.
Communications can be facilitated via a wired (including optical fiber) and/or wireless technology. The client(s) 1302 include or are operatively connected to one or more client data store(s) 1310 that can be employed to store information local to the client(s) 1302 (e.g., associated contextual information). Similarly, the server(s) 1304 are operatively include or are operatively connected to one or more server data store(s) 1310 that can be employed to store information local to the servers 1304.
In one embodiment, a client 1302 can transfer an encoded file, in accordance with the disclosed subject matter, to server 1304. Server 1304 can store the file, decode the file, or transmit the file to another client 1302. It is to be appreciated, that a client 1302 can also transfer uncompressed file to a server 1304 and server 1304 can compress the file in accordance with the disclosed subject matter. Likewise, server 1304 can encode video information and transmit the information via communication framework 1308 to one or more clients 1302.
The illustrated aspects of the disclosure may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules can be located in both local and remote memory storage devices.
Moreover, it is to be appreciated that various components described in this description can include electrical circuit(s) that can include components and circuitry elements of suitable value in order to implement the one or more of the embodiments described herein. Furthermore, it can be appreciated that many of the various components can be implemented on one or more IC chips. For example, in one embodiment, a set of components can be implemented in a single IC chip. In other embodiments, one or more of respective components are fabricated or implemented on separate IC chips.
What has been described above includes examples of the embodiments of the present invention. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the claimed subject matter, but it is to be appreciated that many further combinations and permutations of the embodiments are possible. Accordingly, the claimed subject matter is intended to embrace all such alterations, modifications, and variations that fall within the spirit and scope of the appended claims. Moreover, the above description of illustrated embodiments of the subject disclosure, including what is described in the Abstract, is not intended to be exhaustive or to limit the embodiments to the precise forms disclosed. While specific embodiments and examples are described in this disclosure for illustrative purposes, various modifications are possible that are considered within the scope of such embodiments and examples, as those skilled in the relevant art can recognize.
In particular and in regard to the various functions performed by the above described components, devices, circuits, systems and the like, the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., a functional equivalent), even though not structurally equivalent to the disclosed structure, which performs the function in the disclosure illustrated exemplary aspects of the claimed subject matter. In this regard, it will also be recognized that one or more embodiments includes a system as well as a computer-readable storage medium having computer-executable instructions for performing the acts and/or events of the various methods of the claimed subject matter.
The aforementioned systems/circuits/modules have been described with respect to interaction between several components/blocks. It can be appreciated that such systems/circuits and components/blocks can include those components or specified sub-components, some of the specified components or sub-components, and/or additional components, and according to various permutations and combinations of the foregoing. Sub-components can also be implemented as components communicatively coupled to other components rather than included within parent components (hierarchical). Additionally, it should be noted that one or more components may be combined into a single component providing aggregate functionality or divided into several separate sub-components, and any one or more middle layers, such as a management layer, may be provided to communicatively couple to such sub-components in order to provide integrated functionality. Any components described in this disclosure may also interact with one or more other components not specifically described in this disclosure but known by those of skill in the art.
In addition, while a particular aspect of an embodiment may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms “includes,” “including,” “has,” “contains,” variants thereof, and other similar words are used in either the detailed description or the claims, these terms are intended to be inclusive in a manner similar to the term “comprising” as an open transition word without precluding any additional or other elements.
As used in this application, the terms “component,” “module,” “system,” or the like are generally intended to refer to a computer-related entity, either hardware (e.g., a circuit), a combination of hardware and software, software, or an entity related to an operational machine with one or more specific functionalities. For example, a component may be, but is not limited to being, a process running on a processor (e.g., digital signal processor), a processor, an object, an executable, a thread of execution, a program, and/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers. Further, a “device” can come in the form of specially designed hardware; generalized hardware made specialized by the execution of software thereon that enables the hardware to perform specific function; software stored on a computer readable storage medium; software transmitted on a computer readable transmission medium; or a combination thereof.
Moreover, the words “example” or “exemplary” are used in this disclosure to mean serving as an example, instance, or illustration. Any aspect or design described in this disclosure as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion. As used in this application, the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X employs A or B” is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then “X employs A or B” is satisfied under any of the foregoing instances. In addition, the articles “a” and “an” as used in this application and the appended claims should generally be construed to mean “one or more” unless specified otherwise or clear from context to be directed to a singular form.
Computing devices typically include a variety of media, which can include computer-readable storage media and/or communications media, in which these two terms are used in this description differently from one another as follows. Computer-readable storage media can be any available storage media that can be accessed by the computer, is typically of a non-transitory nature, and can include both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer-readable storage media can be implemented in connection with any method or technology for storage of information such as computer-readable instructions, program modules, structured data, or unstructured data. Computer-readable storage media can include, but are not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or other tangible and/or non-transitory media which can be used to store desired information. Computer-readable storage media can be accessed by one or more local or remote computing devices, e.g., via access requests, queries or other data retrieval protocols, for a variety of operations with respect to the information stored by the medium.
On the other hand, communications media typically embody computer-readable instructions, data structures, program modules or other structured or unstructured data in a data signal that can be transitory such as a modulated data signal, e.g., a carrier wave or other transport mechanism, and includes any information delivery or transport media. The term “modulated data signal” or signals refers to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in one or more signals. By way of example, and not limitation, communication media include wired media, such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared and other wireless media.
In view of the exemplary systems described above, methodologies that may be implemented in accordance with the described subject matter will be better appreciated with reference to the flowcharts of the various figures. For simplicity of explanation, the methodologies are depicted and described as a series of acts. However, acts in accordance with this disclosure can occur in various orders and/or concurrently, and with other acts not presented and described in this disclosure. Furthermore, not all illustrated acts may be required to implement the methodologies in accordance with certain aspects of this disclosure. In addition, those skilled in the art will understand and appreciate that the methodologies could alternatively be represented as a series of interrelated states via a state diagram or events. Additionally, it should be appreciated that the methodologies disclosed in this disclosure are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computing devices. The term article of manufacture, as used in this disclosure, is intended to encompass a computer program accessible from any computer-readable device or storage media.
Claims (21)
1. A method, comprising:
receiving, using a hardware processor, an audio file;
determining that a plurality of sound recordings are contained in the received audio file;
identifying a reference file that is similar to a sound recording of the plurality of sound recordings;
aligning the reference file with the sound recording contained in the received audio file based on a comparison of a spectrogram of the reference file and a spectrogram of the received audio file; and
generating a modified audio file by removing the sound recording from the received audio file based on the aligning.
2. The method of claim 1 , wherein the reference file is identified as being similar to the sound recording of the plurality of sound records by determining that the reference file has at least a defined level of similarity to the sound recording of the plurality of sound recordings.
3. The method of claim 1 , wherein the reference file is aligned with the sound recording contained in the received audio file by comparing a winter-take-all (WTA)-coded spectrogram of the reference file and a WTA-coded spectrogram of the received audio file.
4. The method of claim 1 , wherein the audio file is embedded in a media file.
5. The method of claim 1 , wherein the reference file is aligned with the sound recording contained in the received audio file by mapping, into Hough space, one or more estimated time offsets between the reference file and the received audio file.
6. The method of claim 1 , further comprising determining a rate adjustment between the reference file and the received audio file by mapping, into Hough space, one or more estimated rate stretch factors between the reference file and the received audio file.
7. The method of claim 6 , further comprising selecting one of the one or more estimated time offsets and one of the one or more estimated rate stretch factors based, at least, on the mapping into the Hough space.
8. The method of claim 1 , further comprising filtering the reference file in frequency domain to generate a filtered frequency domain representation of the reference file, wherein a similarity between the filtered frequency domain representation of the reference file and a frequency domain representation of the sound recording is greater than a similarity between the frequency domain representation of the reference file and the frequency domain representation of the sound recording.
9. The method of claim 8 , further comprising:
subtracting the filtered frequency domain representation of the reference file from the frequency domain representation of the audio file to generate a frequency domain representation of the modified audio file; and
converting the frequency domain representation of the modified audio file to the modified audio file.
10. The method of claim 8 , further comprising:
subtracting the filtered frequency domain representation of the reference file from the frequency domain representation of the audio file to generate a frequency domain representation of an intermediate audio file;
performing spectral subtraction in the frequency domain on the frequency domain representation of the intermediate audio file to generate a frequency domain representation of the modified audio file; and
converting the frequency domain representation of the modified audio file to the modified audio file.
11. A system, comprising:
a hardware processor that is configured to:
receive an audio file;
determine that a plurality of sound recordings are contained in the received audio file;
identify a reference file that is similar to a sound recording of the plurality of sound recordings;
align the reference file with the sound recording contained in the received audio file based on a comparison of a spectrogram of the reference file and a spectrogram of the received audio file; and
generate a modified audio file by removing the sound recording from the received audio file based on the aligning.
12. The system of claim 11 , wherein the reference file is identified as being similar to the sound recording of the plurality of sound records by determining that the reference file has at least a defined level of similarity to the sound recording of the plurality of sound recordings.
13. The system of claim 11 , wherein the reference file is aligned with the sound recording contained in the received audio file by comparing a winter-take-all (WTA)-coded spectrogram of the reference file and a WTA-coded spectrogram of the received audio file.
14. The system of claim 11 , wherein the audio file is embedded in a media file.
15. The system of claim 11 , wherein the reference file is aligned with the sound recording contained in the received audio file by mapping, into Hough space, one or more estimated time offsets between the reference file and the received audio file.
16. The system of claim 11 , wherein the hardware processor is further configured to determine a rate adjustment between the reference file and the received audio file by mapping, into Hough space, one or more estimated rate stretch factors between the reference file and the received audio file.
17. The system of claim 16 , wherein the hardware processor is further configured to select one of the one or more estimated time offsets and one of the one or more estimated rate stretch factors based, at least, on the mapping into the Hough space.
18. The system of claim 11 , wherein the hardware processor is further configured to filter the reference file in frequency domain to generate a filtered frequency domain representation of the reference file, wherein a similarity between the filtered frequency domain representation of the reference file and a frequency domain representation of the sound recording is greater than a similarity between the frequency domain representation of the reference file and the frequency domain representation of the sound recording.
19. The system of claim 18 , wherein the hardware processor is further configured to:
subtract the filtered frequency domain representation of the reference file from the frequency domain representation of the audio file to generate a frequency domain representation of the modified audio file; and
convert the frequency domain representation of the modified audio file to the modified audio file.
20. The system of claim 18 , wherein the hardware processor is further configured to:
subtract the filtered frequency domain representation of the reference file from the frequency domain representation of the audio file to generate a frequency domain representation of an intermediate audio file;
perform spectral subtraction in the frequency domain on the frequency domain representation of the intermediate audio file to generate a frequency domain representation of the modified audio file; and
convert the frequency domain representation of the modified audio file to the modified audio file.
21. A non-transitory computer-readable medium containing computer executable instructions that, when executed by a processor, cause the processor to perform a method for selectively removing audio content from a mixed audio recording, the method comprising:
receiving an audio file;
determining that a plurality of sound recordings are contained in the received audio file;
identifying a reference file that is similar to a sound recording of the plurality of sound recordings;
aligning the reference file with the sound recording contained in the received audio file based on a comparison of a spectrogram of the reference file and a spectrogram of the received audio file; and
generating a modified audio file by removing the sound recording from the received audio file based on the aligning.
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/186,993 US9679579B1 (en) | 2013-08-21 | 2016-06-20 | Systems and methods facilitating selective removal of content from a mixed audio recording |
US15/600,321 US10210884B2 (en) | 2013-08-21 | 2017-05-19 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/972,262 US9373320B1 (en) | 2013-08-21 | 2013-08-21 | Systems and methods facilitating selective removal of content from a mixed audio recording |
US15/186,993 US9679579B1 (en) | 2013-08-21 | 2016-06-20 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/972,262 Continuation US9373320B1 (en) | 2013-08-21 | 2013-08-21 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/600,321 Continuation US10210884B2 (en) | 2013-08-21 | 2017-05-19 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Publications (1)
Publication Number | Publication Date |
---|---|
US9679579B1 true US9679579B1 (en) | 2017-06-13 |
Family
ID=56118316
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/972,262 Active 2034-12-24 US9373320B1 (en) | 2013-08-21 | 2013-08-21 | Systems and methods facilitating selective removal of content from a mixed audio recording |
US15/186,993 Active US9679579B1 (en) | 2013-08-21 | 2016-06-20 | Systems and methods facilitating selective removal of content from a mixed audio recording |
US15/600,321 Active US10210884B2 (en) | 2013-08-21 | 2017-05-19 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/972,262 Active 2034-12-24 US9373320B1 (en) | 2013-08-21 | 2013-08-21 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/600,321 Active US10210884B2 (en) | 2013-08-21 | 2017-05-19 | Systems and methods facilitating selective removal of content from a mixed audio recording |
Country Status (1)
Country | Link |
---|---|
US (3) | US9373320B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190141464A1 (en) * | 2014-09-24 | 2019-05-09 | Electronics And Telecommunications Research Instit Ute | Audio metadata providing apparatus and method, and multichannel audio data playback apparatus and method to support dynamic format conversion |
Families Citing this family (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2015132695A (en) | 2014-01-10 | 2015-07-23 | ヤマハ株式会社 | Performance information transmission method, and performance information transmission system |
JP6326822B2 (en) * | 2014-01-14 | 2018-05-23 | ヤマハ株式会社 | Recording method |
US10325591B1 (en) * | 2014-09-05 | 2019-06-18 | Amazon Technologies, Inc. | Identifying and suppressing interfering audio content |
US10304354B1 (en) * | 2015-06-01 | 2019-05-28 | John Nicholas DuQuette | Production and presentation of aural cloze material |
KR20170027551A (en) * | 2015-09-02 | 2017-03-10 | 삼성전자주식회사 | Electric device and controlling method of thereof |
CN108877815B (en) | 2017-05-16 | 2021-02-23 | 华为技术有限公司 | Stereo signal processing method and device |
KR101927740B1 (en) * | 2017-06-19 | 2018-12-11 | 이재호 | On-site Audio Center system based on Audio over IP |
US10861482B2 (en) * | 2018-10-12 | 2020-12-08 | Avid Technology, Inc. | Foreign language dub validation |
CN109474855A (en) * | 2018-11-08 | 2019-03-15 | 北京微播视界科技有限公司 | Video editing method, device, computer equipment and readable storage medium storing program for executing |
US10937418B1 (en) * | 2019-01-04 | 2021-03-02 | Amazon Technologies, Inc. | Echo cancellation by acoustic playback estimation |
US11017792B2 (en) * | 2019-06-17 | 2021-05-25 | Bose Corporation | Modular echo cancellation unit |
US10777177B1 (en) * | 2019-09-30 | 2020-09-15 | Spotify Ab | Systems and methods for embedding data in media content |
CN110992989B (en) * | 2019-12-06 | 2022-05-27 | 广州国音智能科技有限公司 | Voice acquisition method and device and computer readable storage medium |
US11871184B2 (en) | 2020-01-07 | 2024-01-09 | Ramtrip Ventures, Llc | Hearing improvement system |
WO2021202760A1 (en) * | 2020-03-31 | 2021-10-07 | Aries Adaptive Media, LLC | Processes and systems for mixing audio tracks according to a template |
CN111507437B (en) * | 2020-04-13 | 2023-04-25 | 上海趣威文化发展有限公司 | Recording file storage and calling method and application method thereof |
US11615312B2 (en) | 2020-04-14 | 2023-03-28 | Sony Interactive Entertainment Inc. | Self-supervised AI-assisted sound effect generation for silent video using multimodal clustering |
US11381888B2 (en) * | 2020-04-14 | 2022-07-05 | Sony Interactive Entertainment Inc. | AI-assisted sound effect generation for silent video |
US11694084B2 (en) | 2020-04-14 | 2023-07-04 | Sony Interactive Entertainment Inc. | Self-supervised AI-assisted sound effect recommendation for silent video |
US11227614B2 (en) * | 2020-06-11 | 2022-01-18 | Silicon Laboratories Inc. | End node spectrogram compression for machine learning speech recognition |
US11587591B2 (en) | 2021-04-06 | 2023-02-21 | Ebay Inc. | Identifying and removing restricted information from videos |
US11974012B1 (en) | 2023-11-03 | 2024-04-30 | AVTech Select LLC | Modifying audio and video content based on user input |
Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5140637A (en) | 1989-12-01 | 1992-08-18 | Arnold Kaplan | Device and method for removing vocal signals |
US20020083060A1 (en) | 2000-07-31 | 2002-06-27 | Wang Avery Li-Chun | System and methods for recognizing sound and music signals in high noise and distortion |
US6690799B1 (en) | 1999-06-09 | 2004-02-10 | Koninklijke Philips Electronics N.V. | Stereo signal processing apparatus |
US20060008092A1 (en) | 2004-07-06 | 2006-01-12 | Zoe Interactive Ltd. | Interactive broadcast channel |
US20060204019A1 (en) | 2005-03-11 | 2006-09-14 | Kaoru Suzuki | Acoustic signal processing apparatus, acoustic signal processing method, acoustic signal processing program, and computer-readable recording medium recording acoustic signal processing program |
US20070021959A1 (en) | 2003-05-30 | 2007-01-25 | National Institute Of Advanced Industrial Science And Technology | Method and device for removing known acoustic signal |
US20070076902A1 (en) | 2005-09-30 | 2007-04-05 | Aaron Master | Method and Apparatus for Removing or Isolating Voice or Instruments on Stereo Recordings |
US20080049943A1 (en) * | 2006-05-04 | 2008-02-28 | Lg Electronics, Inc. | Enhancing Audio with Remix Capability |
US20080075292A1 (en) | 2006-09-22 | 2008-03-27 | Hon Hai Precision Industry Co., Ltd. | Audio processing apparatus suitable for singing practice |
US20080134866A1 (en) * | 2006-12-12 | 2008-06-12 | Brown Arnold E | Filter for dynamic creation and use of instrumental musical tracks |
US20090067634A1 (en) * | 2007-08-13 | 2009-03-12 | Lg Electronics, Inc. | Enhancing Audio With Remixing Capability |
US20090185636A1 (en) | 2008-01-23 | 2009-07-23 | Sparsense, Inc. | Parallel and adaptive signal processing |
WO2010003346A1 (en) | 2008-07-09 | 2010-01-14 | Sk Telecom (China) Holding Co., Ltd. | Method and apparatus for creating guide channel and background music |
US7672466B2 (en) | 2004-09-28 | 2010-03-02 | Sony Corporation | Audio signal processing apparatus and method for the same |
US20120185068A1 (en) | 2011-01-13 | 2012-07-19 | Aaron Eppolito | Background Audio Processing |
US20120203719A1 (en) | 2011-02-09 | 2012-08-09 | Yuhki Mitsufuji | Audio signal processing device, audio signal processing method, and program |
US20120300941A1 (en) | 2011-05-25 | 2012-11-29 | Samsung Electronics Co., Ltd. | Apparatus and method for removing vocal signal |
US8370164B2 (en) | 2006-12-27 | 2013-02-05 | Electronics And Telecommunications Research Institute | Apparatus and method for coding and decoding multi-object audio signal with various channel including information bitstream conversion |
US20130226558A1 (en) | 2012-02-29 | 2013-08-29 | Gautham J. Mysore | Language Informed Source Separation |
US9449611B2 (en) * | 2011-09-30 | 2016-09-20 | Audionamix | System and method for extraction of single-channel time domain component from mixture of coherent information |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3818186B2 (en) * | 2002-03-20 | 2006-09-06 | ヤマハ株式会社 | Electronic music apparatus and program for electronic music apparatus |
US8732087B2 (en) * | 2005-07-01 | 2014-05-20 | The Invention Science Fund I, Llc | Authorization for media content alteration |
US8010511B2 (en) * | 2006-08-29 | 2011-08-30 | Attributor Corporation | Content monitoring and compliance enforcement |
US7707224B2 (en) * | 2006-11-03 | 2010-04-27 | Google Inc. | Blocking of unlicensed audio content in video files on a video hosting website |
ES1065953Y (en) * | 2007-07-12 | 2008-03-01 | Eika S Coop | SYSTEM FOR REMOTE CONTROL OF AN APPLIANCES, IN PARTICULAR OF A VITROCERAMIC KITCHEN |
-
2013
- 2013-08-21 US US13/972,262 patent/US9373320B1/en active Active
-
2016
- 2016-06-20 US US15/186,993 patent/US9679579B1/en active Active
-
2017
- 2017-05-19 US US15/600,321 patent/US10210884B2/en active Active
Patent Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5140637A (en) | 1989-12-01 | 1992-08-18 | Arnold Kaplan | Device and method for removing vocal signals |
US6690799B1 (en) | 1999-06-09 | 2004-02-10 | Koninklijke Philips Electronics N.V. | Stereo signal processing apparatus |
US20020083060A1 (en) | 2000-07-31 | 2002-06-27 | Wang Avery Li-Chun | System and methods for recognizing sound and music signals in high noise and distortion |
US20070021959A1 (en) | 2003-05-30 | 2007-01-25 | National Institute Of Advanced Industrial Science And Technology | Method and device for removing known acoustic signal |
US20060008092A1 (en) | 2004-07-06 | 2006-01-12 | Zoe Interactive Ltd. | Interactive broadcast channel |
US7672466B2 (en) | 2004-09-28 | 2010-03-02 | Sony Corporation | Audio signal processing apparatus and method for the same |
US20060204019A1 (en) | 2005-03-11 | 2006-09-14 | Kaoru Suzuki | Acoustic signal processing apparatus, acoustic signal processing method, acoustic signal processing program, and computer-readable recording medium recording acoustic signal processing program |
US20070076902A1 (en) | 2005-09-30 | 2007-04-05 | Aaron Master | Method and Apparatus for Removing or Isolating Voice or Instruments on Stereo Recordings |
US20080049943A1 (en) * | 2006-05-04 | 2008-02-28 | Lg Electronics, Inc. | Enhancing Audio with Remix Capability |
US20080075292A1 (en) | 2006-09-22 | 2008-03-27 | Hon Hai Precision Industry Co., Ltd. | Audio processing apparatus suitable for singing practice |
US20080134866A1 (en) * | 2006-12-12 | 2008-06-12 | Brown Arnold E | Filter for dynamic creation and use of instrumental musical tracks |
US8370164B2 (en) | 2006-12-27 | 2013-02-05 | Electronics And Telecommunications Research Institute | Apparatus and method for coding and decoding multi-object audio signal with various channel including information bitstream conversion |
US20090067634A1 (en) * | 2007-08-13 | 2009-03-12 | Lg Electronics, Inc. | Enhancing Audio With Remixing Capability |
US20090185636A1 (en) | 2008-01-23 | 2009-07-23 | Sparsense, Inc. | Parallel and adaptive signal processing |
WO2010003346A1 (en) | 2008-07-09 | 2010-01-14 | Sk Telecom (China) Holding Co., Ltd. | Method and apparatus for creating guide channel and background music |
US20120185068A1 (en) | 2011-01-13 | 2012-07-19 | Aaron Eppolito | Background Audio Processing |
US20120203719A1 (en) | 2011-02-09 | 2012-08-09 | Yuhki Mitsufuji | Audio signal processing device, audio signal processing method, and program |
US20120300941A1 (en) | 2011-05-25 | 2012-11-29 | Samsung Electronics Co., Ltd. | Apparatus and method for removing vocal signal |
US9449611B2 (en) * | 2011-09-30 | 2016-09-20 | Audionamix | System and method for extraction of single-channel time domain component from mixture of coherent information |
US20130226558A1 (en) | 2012-02-29 | 2013-08-29 | Gautham J. Mysore | Language Informed Source Separation |
Non-Patent Citations (7)
Title |
---|
"Google's Winner Takes All Hashing Implemmentation", pp. 1-2, available at: https://gist.github.com/erogol/6391423/. |
"HAMR" Hacking Audio and Music Research, last updated Jun. 28, 2013, pp. 1-2, available at http://labrosa.ee.columbia.edu/hamr2013/. |
Aucouturier, J.J. and Sandler, M., "Finding Repeating Patterns in Acoustic Musical Signals: Applications for Audio Thumbnailing", In Virtual, Synthetic, and Entertainment Audio: Proceedings of 22nd Audio Engineering Society International Conference, Espoo, FI, Jun. 15-17, 2002, pp. 1-12. |
Dennis, J., et al., "Overlapping Sound Event Recognition Using Local Spectrogram Features and the Generalized Hough Transform", Pattern Recognition Letters, vol. 34, Jul. 2013, pp. 1085-1093. |
Hrebien, M. and Korbicz, J., "Hough Transform in Music Tunes Recognition Systems", In Proceedings of 9th International Conference of Artifical Intelligence and Soft Computing, Zakopane, PL, Jun. 22-Jun. 26, 2008, pp. 588-596. |
Jin, X.C. and Wang, Z.F, "Speech Separation from Background of Music Based on Single-Channel Recording", In Proceedings of 18th International Conference on Pattern Recognition, Hong Kong, CN, 2006, pp. 278-281. |
Raffel et al., "Remixavier", last updated Jul. 2, 2013, pp. 1-3, available at: http://labrosa.ee.columbia.edu/hamr2013/proceedings/doku.php/remixavier. |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190141464A1 (en) * | 2014-09-24 | 2019-05-09 | Electronics And Telecommunications Research Instit Ute | Audio metadata providing apparatus and method, and multichannel audio data playback apparatus and method to support dynamic format conversion |
US10587975B2 (en) * | 2014-09-24 | 2020-03-10 | Electronics And Telecommunications Research Institute | Audio metadata providing apparatus and method, and multichannel audio data playback apparatus and method to support dynamic format conversion |
US10904689B2 (en) | 2014-09-24 | 2021-01-26 | Electronics And Telecommunications Research Institute | Audio metadata providing apparatus and method, and multichannel audio data playback apparatus and method to support dynamic format conversion |
US11671780B2 (en) | 2014-09-24 | 2023-06-06 | Electronics And Telecommunications Research Institute | Audio metadata providing apparatus and method, and multichannel audio data playback apparatus and method to support dynamic format conversion |
Also Published As
Publication number | Publication date |
---|---|
US10210884B2 (en) | 2019-02-19 |
US20170256271A1 (en) | 2017-09-07 |
US9373320B1 (en) | 2016-06-21 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10210884B2 (en) | Systems and methods facilitating selective removal of content from a mixed audio recording | |
US9971832B2 (en) | Methods and apparatus to generate signatures representative of media | |
US7516074B2 (en) | Extraction and matching of characteristic fingerprints from audio signals | |
US9367887B1 (en) | Multi-channel audio video fingerprinting | |
Haitsma et al. | A highly robust audio fingerprinting system with an efficient search strategy | |
US8586847B2 (en) | Musical fingerprinting based on onset intervals | |
KR100896737B1 (en) | Device and method for robustry classifying audio signals, method for establishing and operating audio signal database and a computer program | |
US20140280304A1 (en) | Matching versions of a known song to an unknown song | |
US9317561B2 (en) | Scene change detection around a set of seed points in media data | |
US20120209612A1 (en) | Extraction and Matching of Characteristic Fingerprints from Audio Signals | |
US9659092B2 (en) | Music information searching method and apparatus thereof | |
US20140330556A1 (en) | Low complexity repetition detection in media data | |
US8706276B2 (en) | Systems, methods, and media for identifying matching audio | |
JP2006501498A (en) | Fingerprint extraction | |
Kim et al. | Robust audio fingerprinting using peak-pair-based hash of non-repeating foreground audio in a real environment | |
Wang et al. | Audio fingerprint based on spectral flux for audio retrieval | |
Qian et al. | A novel algorithm for audio information retrieval based on audio fingerprint | |
Kim et al. | TV advertisement search based on audio peak-pair hashing in real environments | |
Htun et al. | Broadcast Monitoring System using MFCC-based Audio Fingerprinting | |
Haitsma et al. | A New Technology To Identify Music | |
Haitsma | Audio Fingerprinting | |
Sinha et al. | Wavelet based speech enhancement technique using median function thresholding | |
Myung et al. | Two‐pass search strategy using accumulated band energy histogram for HMM‐based identification of perceptually identical music | |
Bhat | Toward Using Audio for Matching Transcoded Content | |
WO2007020544A2 (en) | Method and apparatus for extracting feature information from a multimedia file |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
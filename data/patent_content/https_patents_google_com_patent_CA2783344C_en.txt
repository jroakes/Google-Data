CA2783344C - Resource search operations - Google Patents
Resource search operations Download PDFInfo
- Publication number
- CA2783344C CA2783344C CA2783344A CA2783344A CA2783344C CA 2783344 C CA2783344 C CA 2783344C CA 2783344 A CA2783344 A CA 2783344A CA 2783344 A CA2783344 A CA 2783344A CA 2783344 C CA2783344 C CA 2783344C
- Authority
- CA
- Canada
- Prior art keywords
- resource
- search
- tidbit
- query
- client device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 claims abstract description 61
- 230000004044 response Effects 0.000 claims abstract description 54
- 238000012545 processing Methods 0.000 claims description 38
- 238000009877 rendering Methods 0.000 claims description 24
- 238000004891 communication Methods 0.000 claims description 16
- 238000011160 research Methods 0.000 claims description 7
- 238000004590 computer program Methods 0.000 abstract description 12
- 230000008569 process Effects 0.000 description 36
- 238000010586 diagram Methods 0.000 description 27
- 238000013515 script Methods 0.000 description 7
- 238000004883 computer application Methods 0.000 description 4
- 238000013519 translation Methods 0.000 description 4
- 230000003993 interaction Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000012552 review Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 239000003086 colorant Substances 0.000 description 2
- 230000007613 environmental effect Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 239000013598 vector Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/338—Presentation of query results
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for identifying query-relevant content in a resource identified by a search result in response to the query. In one aspect, a method includes identifying resource search tidbits for a resource, each resource search tidbit being eligible for a resource search operation for the resource. The resource search tidbits are provided with search results to a client device. In response to a user selecting a resource identified by a search result, the client device identifies text in the resource matching the query-relevant text of the resource search tidbit and performs a resource search operation on the resource if the identified text meets a search operation threshold condition.
Description
RESOURCE SEARCH OPERATIONS
BACKGROUND
This specification relates to digital information retrieval, and particularly to processing search results to facilitate search operations.
to The Internet provides access to a wide variety of resources, for example, video files, image files, audio files, or Web pages including content for particular subjects, book articles, or news articles. A search system can select one or more resources in response to receiving a search query. A search query is data that a user submits to a search engine to satisfy the user's informational needs. The search system selects and scores resources based on their relevance to the search query and on their importance relative to other resources to provide search results that link to the selected resources.
The search results are typically ordered according to the scores, and provided in a search results page.
The search results page displays a list of search results, and each search result zo includes several lines of text (a "snippet") that are intended to show how the page is relevant to the query. When a user clicks on a search result, the user's client device requests the resource ¨ typically a web page ¨ that the search result references. When the page is received at the client device, however, the user may have to manually search the page to find the relevant content, even if the snippet included the exact content they want. The users often must either scroll through the page to find the relevant content, or perform a manual word search operation by use of a browser word search tool.
SUMMARY
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a query, the query including one or more query terms; receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource; for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result; wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising: rendering the resource referenced by the search result; selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
In another aspect, there is provided a computer-implemented method performed by a client device, the method comprising: receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the qttery, and wherein at least one search result includes resource search tidbits, each of the resource search tidbits being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device; receiving a selection of the at least one search result at the client device; receiving, in response to the selection, the resource specified by the resource locator of the at least one search result; rendering the resource at the
BACKGROUND
This specification relates to digital information retrieval, and particularly to processing search results to facilitate search operations.
to The Internet provides access to a wide variety of resources, for example, video files, image files, audio files, or Web pages including content for particular subjects, book articles, or news articles. A search system can select one or more resources in response to receiving a search query. A search query is data that a user submits to a search engine to satisfy the user's informational needs. The search system selects and scores resources based on their relevance to the search query and on their importance relative to other resources to provide search results that link to the selected resources.
The search results are typically ordered according to the scores, and provided in a search results page.
The search results page displays a list of search results, and each search result zo includes several lines of text (a "snippet") that are intended to show how the page is relevant to the query. When a user clicks on a search result, the user's client device requests the resource ¨ typically a web page ¨ that the search result references. When the page is received at the client device, however, the user may have to manually search the page to find the relevant content, even if the snippet included the exact content they want. The users often must either scroll through the page to find the relevant content, or perform a manual word search operation by use of a browser word search tool.
SUMMARY
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a query, the query including one or more query terms; receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource; for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result; wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising: rendering the resource referenced by the search result; selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
In another aspect, there is provided a computer-implemented method performed by a client device, the method comprising: receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the qttery, and wherein at least one search result includes resource search tidbits, each of the resource search tidbits being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device; receiving a selection of the at least one search result at the client device; receiving, in response to the selection, the resource specified by the resource locator of the at least one search result; rendering the resource at the
2 client device; for each resource search tidbit: identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device;
and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
In another aspect, there is provided a system, comprising: a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising: receiving a query, the query including one or more query terms; receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource; for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result; wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising: rendering the resource referenced by the search result; selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a 2a resource search operation comprising, displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
In another aspect there is provided a system, comprising: a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising: receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device; receiving a selection of the at least one search result at the client device; receiving, in response to the selection, the resource specified by the resource locator of the at least one search result; rendering the resource at the client device; for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
2b In another aspect, there is provided a non-transitory computer readable storage device storing instructions that when executed by a data processing apparatus cause the data processing apparatus to perform operations comprising: receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device; receiving a selection of the at least one search result at the client device; receiving, in response to the selection, the resource specified by the resource locator of the at least one search result; rendering the resource at the client device; for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
2c BRIEF DESCRIPTION OF THE DRAWINGS
Fig. 1 is a block diagram of a search system that facilitates resource search operations on a client device.
Fig. 2 is a block diagram of an example process flow for identifying resource search tidbits in a tidbit processor.
Figs. 3A ¨ 3C arc Venn diagrams illustrating an example eligibility rule for determining whether a tidbit is eligible for a resource search operation.
Fig. 4 is a flow diagram of an example process for identifying resource search tidbits.
Fig. 5 is a flow diagram of an example process for determining whether a tidbit for a resource is eligible for a resource search operation.
Fig. 6 is a block diagram of an example process for associating resource search tidbits with resource locators from a search results page.
Fig. 7A is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does not meet a search operation threshold condition.
Fig. 7B is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does meet a search operation threshold condition.
Fig. 8 is a flow diagram of an example process for performing a resource search operation.
Fig. 9 is a flow diagram of an example process for determining whether a portion of tcxt in a resource matches the query-relevant text of a resource search tidbit.
Fig. 10 is a flow diagram of an example process for navigating to a portion of a resource in response to selecting a resource search tidbit.
Fig. 11 is a flow diagram of performing a resource search operation using an association of resource locators and resource search tidbits.
and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
In another aspect, there is provided a system, comprising: a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising: receiving a query, the query including one or more query terms; receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource; for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result; wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising: rendering the resource referenced by the search result; selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a 2a resource search operation comprising, displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
In another aspect there is provided a system, comprising: a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising: receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device; receiving a selection of the at least one search result at the client device; receiving, in response to the selection, the resource specified by the resource locator of the at least one search result; rendering the resource at the client device; for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
2b In another aspect, there is provided a non-transitory computer readable storage device storing instructions that when executed by a data processing apparatus cause the data processing apparatus to perform operations comprising: receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device; receiving a selection of the at least one search result at the client device; receiving, in response to the selection, the resource specified by the resource locator of the at least one search result; rendering the resource at the client device; for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
2c BRIEF DESCRIPTION OF THE DRAWINGS
Fig. 1 is a block diagram of a search system that facilitates resource search operations on a client device.
Fig. 2 is a block diagram of an example process flow for identifying resource search tidbits in a tidbit processor.
Figs. 3A ¨ 3C arc Venn diagrams illustrating an example eligibility rule for determining whether a tidbit is eligible for a resource search operation.
Fig. 4 is a flow diagram of an example process for identifying resource search tidbits.
Fig. 5 is a flow diagram of an example process for determining whether a tidbit for a resource is eligible for a resource search operation.
Fig. 6 is a block diagram of an example process for associating resource search tidbits with resource locators from a search results page.
Fig. 7A is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does not meet a search operation threshold condition.
Fig. 7B is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does meet a search operation threshold condition.
Fig. 8 is a flow diagram of an example process for performing a resource search operation.
Fig. 9 is a flow diagram of an example process for determining whether a portion of tcxt in a resource matches the query-relevant text of a resource search tidbit.
Fig. 10 is a flow diagram of an example process for navigating to a portion of a resource in response to selecting a resource search tidbit.
Fig. 11 is a flow diagram of performing a resource search operation using an association of resource locators and resource search tidbits.
3 DETAILED DESCRIPTION
Fig. 1 is a block diagram of a search environment 100 that facilitates resource search operations on a client device. The example environment 100 includes a network 102, e.g., a local area network (LAN), wide area network (WAN), the Internet, or a combination of them. The network 102 connects Websites 104, client devices 106, and the search system 110. The environment 100 may include many thousands of publishers 104 and client devices 106.
A Website 104 is one or more resources 105 associated with a domain name and hosted by one or more servers. An example Website is a collection of Web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, e.g., scripts. Each Website 104 is maintained by a publisher, e.g., an entity that manages and/or owns the Website.
A resource 105 is any data that can be provided by a Website 104 over the network 102 and that is associated with a resource address. Resources 105 include HTML pages, word processing documents, and portable document format (PDF) documents, images, video, and feed sources, to name just a few. The resources 105 can include content, e.g., words, phrases, images and sounds and may include embedded information (e.g., meta information and hyperlinks) and/or embedded instructions (e.g., JavaScript scripts).
A client device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources 105 over the network 102.
Example client devices 106 include personal computers, mobile communication devices, and other devices that can send and receive data over the network 102. A client device 106 typically includes a user application, e.g., a web browser, to facilitate the sending and receiving of data over the network 102.
To facilitate searching of resources 105, the search system 110 identifies the resources 105 by crawling and indexing the resources 105 provided on Websites 104.
Data about the resources 105 can be indexed based on the resource to which the data corresponds. The indexed and, optionally, cached copies of the resources 105 are stored in an indexed cache 112.
The client devices 106 submit search queries 109 to the search system 110. For instance, any particular search query 109 can include one or more terms consisting of words, numbers or other characters. As an example, the search query 109 entered by
Fig. 1 is a block diagram of a search environment 100 that facilitates resource search operations on a client device. The example environment 100 includes a network 102, e.g., a local area network (LAN), wide area network (WAN), the Internet, or a combination of them. The network 102 connects Websites 104, client devices 106, and the search system 110. The environment 100 may include many thousands of publishers 104 and client devices 106.
A Website 104 is one or more resources 105 associated with a domain name and hosted by one or more servers. An example Website is a collection of Web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, e.g., scripts. Each Website 104 is maintained by a publisher, e.g., an entity that manages and/or owns the Website.
A resource 105 is any data that can be provided by a Website 104 over the network 102 and that is associated with a resource address. Resources 105 include HTML pages, word processing documents, and portable document format (PDF) documents, images, video, and feed sources, to name just a few. The resources 105 can include content, e.g., words, phrases, images and sounds and may include embedded information (e.g., meta information and hyperlinks) and/or embedded instructions (e.g., JavaScript scripts).
A client device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources 105 over the network 102.
Example client devices 106 include personal computers, mobile communication devices, and other devices that can send and receive data over the network 102. A client device 106 typically includes a user application, e.g., a web browser, to facilitate the sending and receiving of data over the network 102.
To facilitate searching of resources 105, the search system 110 identifies the resources 105 by crawling and indexing the resources 105 provided on Websites 104.
Data about the resources 105 can be indexed based on the resource to which the data corresponds. The indexed and, optionally, cached copies of the resources 105 are stored in an indexed cache 112.
The client devices 106 submit search queries 109 to the search system 110. For instance, any particular search query 109 can include one or more terms consisting of words, numbers or other characters. As an example, the search query 109 entered by
4 the user can be "pachinko 1975 Japan" to search online for information regarding the Japanese upright pinball games. In response, the search system 110 accesses (e.g., using a search engine) the indexed cache 112 to identify resources 105 that are relevant to the search query 109. The search system 110 identifies the resources 105, generates search results 111 that identify the resources 105, and returns the search results 111 to the client devices 106. For example, the search results 111 can include resources 105 corresponding to Web hits related to "1975 Japanese pachinkos" in response to the user's search query 109. A search result 111 is data generated by the search system 110 that identifies a resource 105 that is responsive to a particular search query, and includes a link to the resource 105. An example search result 111 can include a Web page title, a snippet of text or a portion of an image extracted from the Web page, and the URL of the Web page.
For a search of textual content, the search results are ranked based on scores related to the resources 105 identified by the search results 111, such as information retrieval ("IR") scores, and optionally a quality score of each resource relative to other resources. In some implementations, the IR scores are computed from dot products of feature vectors corresponding to a search query 109 and a resource 105, and the ranking of the search results is based on initial relevance scores that are a combination of the IR
scores and page quality scores. The search results 111 are ordered according to these initial relevance scores and provided to the client device 106 according to the order.
The client devices 106 receive the search results 111, e.g., in the form of one or more search result pages 126, and render the search results 111 for presentation to users. In response to the user selecting a link in a search result 111 at a client device 106, the client device 106 requests the resource 105 identified by the link.
The Website 104 hosting the resource 105 receives the request for the resource 105 from the client device 106 and provides the resource 105 to the requesting client device 106.
The search results 111 include the identification of resources 105 that are relevant to the user's search, such as a set of query terms entered by the user into a Web browser on the client device 106. When the resources 105 are identified as relevant to the user's search, the search system 110 identifies one or more tidbits and selects a subset of the tidbits for potential inclusion as a snippet. As used herein, a "tidbit" is query-relevant text that can be included in a snippet. A "snippet" can include one or more tidbits. Each snippet can include query-relevant text extracted from the resource
For a search of textual content, the search results are ranked based on scores related to the resources 105 identified by the search results 111, such as information retrieval ("IR") scores, and optionally a quality score of each resource relative to other resources. In some implementations, the IR scores are computed from dot products of feature vectors corresponding to a search query 109 and a resource 105, and the ranking of the search results is based on initial relevance scores that are a combination of the IR
scores and page quality scores. The search results 111 are ordered according to these initial relevance scores and provided to the client device 106 according to the order.
The client devices 106 receive the search results 111, e.g., in the form of one or more search result pages 126, and render the search results 111 for presentation to users. In response to the user selecting a link in a search result 111 at a client device 106, the client device 106 requests the resource 105 identified by the link.
The Website 104 hosting the resource 105 receives the request for the resource 105 from the client device 106 and provides the resource 105 to the requesting client device 106.
The search results 111 include the identification of resources 105 that are relevant to the user's search, such as a set of query terms entered by the user into a Web browser on the client device 106. When the resources 105 are identified as relevant to the user's search, the search system 110 identifies one or more tidbits and selects a subset of the tidbits for potential inclusion as a snippet. As used herein, a "tidbit" is query-relevant text that can be included in a snippet. A "snippet" can include one or more tidbits. Each snippet can include query-relevant text extracted from the resource
5 105 specified by the resource locator (e.g., the resource's URL) of the search result.
Snippets can be rendered on the client device 106 as part of the search result. In some implementations, a tidbit is a portion of contiguous text in the resource, such as a group of adjacent words in the search result 111 displayed on the user's client device 106.
The search results 111 can also include one or more snippets, each including one or more tidbits.
The search system 110 can provide the query, the resources (or data identifying the resources) and the tidbits for each of the resources to a tidbit processor 113. The tidbit processor 113, which is described in more detail in Fig. 2, determines for each tidbit whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device 106. In response to determining that a particular tidbit is eligible for a resource search operation, the tidbit processor 113 marks the tidbit as a resource search tidbit (RST). The use of resource search tidbits is described in more detail below. For each resource, the tidbit processor 113 informs the search system 110 of the identified resource search tidbits, if any.
Once a search results page 126 is presented to the user, displaying the search results 111, the user can make a selection. For example, the user can review the search results 111, including examining the snippets displayed for each resource 105 corresponding to each individual search result 111. Upon seeing a particular search result of interest, for example, the user can click the URL or other resource locator for the resource 105 to display a page 128 corresponding to the resource 105. The page 128 can be, for example, the rendered resource 105 corresponding to the news story, product review, home page, advertisement, or any other Web page selected by the user from the search results 111. If the information on the page 128 is textual, for example, and does not fit entirely within the viewport of the client device 106, one or more scroll bars 130 within the user interface of the client device 106 can be used to manage the display of the page 128. Upon initial navigation to a page 128, because the first few or "top" paragraphs or sections of the Web site's information are displayed, the scroll bar 130 is scrolled to the top.
Sections of the Web site of most interest to the user (e.g., the Web content portions that correspond to query-relevant tidbits) may not appear in the top, or immediately viewable, portion of the Web page. In other words, the information does
Snippets can be rendered on the client device 106 as part of the search result. In some implementations, a tidbit is a portion of contiguous text in the resource, such as a group of adjacent words in the search result 111 displayed on the user's client device 106.
The search results 111 can also include one or more snippets, each including one or more tidbits.
The search system 110 can provide the query, the resources (or data identifying the resources) and the tidbits for each of the resources to a tidbit processor 113. The tidbit processor 113, which is described in more detail in Fig. 2, determines for each tidbit whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device 106. In response to determining that a particular tidbit is eligible for a resource search operation, the tidbit processor 113 marks the tidbit as a resource search tidbit (RST). The use of resource search tidbits is described in more detail below. For each resource, the tidbit processor 113 informs the search system 110 of the identified resource search tidbits, if any.
Once a search results page 126 is presented to the user, displaying the search results 111, the user can make a selection. For example, the user can review the search results 111, including examining the snippets displayed for each resource 105 corresponding to each individual search result 111. Upon seeing a particular search result of interest, for example, the user can click the URL or other resource locator for the resource 105 to display a page 128 corresponding to the resource 105. The page 128 can be, for example, the rendered resource 105 corresponding to the news story, product review, home page, advertisement, or any other Web page selected by the user from the search results 111. If the information on the page 128 is textual, for example, and does not fit entirely within the viewport of the client device 106, one or more scroll bars 130 within the user interface of the client device 106 can be used to manage the display of the page 128. Upon initial navigation to a page 128, because the first few or "top" paragraphs or sections of the Web site's information are displayed, the scroll bar 130 is scrolled to the top.
Sections of the Web site of most interest to the user (e.g., the Web content portions that correspond to query-relevant tidbits) may not appear in the top, or immediately viewable, portion of the Web page. In other words, the information does
6 not fit entirely within the viewport of the client device 106, or is difficult for the user to find on the screen.
To provide more convenient and faster access to the sections of interest, a selection environment 132 is displayed. The selection environment displays resource search tidbits 134 for the resource, each containing a portion of the query-relevant text of the resource. For example, the selection environment 132 can include one or more resource search tidbits 134 corresponding to text in the resource that matches the user's search terms (e.g., "pachinko 1975 Japan"). The sections of text of most closely matching the user's search terms may be embedded in a portion of the resource 105 that is not initially displayed on the client device 106. Using the selection environment 132, the user can quickly identify and navigate to those corresponding passages of the resource 105. For example, as depicted in Fig. 1, the selection environment includes three user-selectable lines, each a resource search tidbit, the second of which is highlighted to indicate selection by the user.
One advantage of the selection environment 132 is to overcome the problem of limited viewports, such as the viewport on the client device 106. Depending on the web page being displayed and the client device 106, the resource 105 may not be visible to a user of the device because the resource 105 contains too much information to fit entirely within the device's viewport. For example, because of the zoom level of the viewport (e.g., the viewport is zoomed-in), the size of the viewport and/or the dimensions of the web page, not all of the web page's contents can be displayed in the viewport at the same time. For mobile devices, displaying a web page such a scenario is a common occurrence because of the mobile device's relatively small viewport.
The query-relevant text of a resource search tidbit included in the search result can be, in some implementations, a subset of the query-relevant text of the snippet included in the search result. In some implementations, the resource search tidbits are tidbits that need not necessarily be part of the snippet of the search result, meaning that they are not rendered on the client device 106 as part of the search results 111.
Upon selection of a particular resource search tidbit 134 (e.g., the second of three) from the selection environment 132, the state of information displayed in the page 128 can change, as indicated by the arrow 136. In the newly-displayed state of the page 128, the resource 105 has scrolled to the section of page that corresponds to the resource search tidbit selected by the user. Moreover, the query-relevant text
To provide more convenient and faster access to the sections of interest, a selection environment 132 is displayed. The selection environment displays resource search tidbits 134 for the resource, each containing a portion of the query-relevant text of the resource. For example, the selection environment 132 can include one or more resource search tidbits 134 corresponding to text in the resource that matches the user's search terms (e.g., "pachinko 1975 Japan"). The sections of text of most closely matching the user's search terms may be embedded in a portion of the resource 105 that is not initially displayed on the client device 106. Using the selection environment 132, the user can quickly identify and navigate to those corresponding passages of the resource 105. For example, as depicted in Fig. 1, the selection environment includes three user-selectable lines, each a resource search tidbit, the second of which is highlighted to indicate selection by the user.
One advantage of the selection environment 132 is to overcome the problem of limited viewports, such as the viewport on the client device 106. Depending on the web page being displayed and the client device 106, the resource 105 may not be visible to a user of the device because the resource 105 contains too much information to fit entirely within the device's viewport. For example, because of the zoom level of the viewport (e.g., the viewport is zoomed-in), the size of the viewport and/or the dimensions of the web page, not all of the web page's contents can be displayed in the viewport at the same time. For mobile devices, displaying a web page such a scenario is a common occurrence because of the mobile device's relatively small viewport.
The query-relevant text of a resource search tidbit included in the search result can be, in some implementations, a subset of the query-relevant text of the snippet included in the search result. In some implementations, the resource search tidbits are tidbits that need not necessarily be part of the snippet of the search result, meaning that they are not rendered on the client device 106 as part of the search results 111.
Upon selection of a particular resource search tidbit 134 (e.g., the second of three) from the selection environment 132, the state of information displayed in the page 128 can change, as indicated by the arrow 136. In the newly-displayed state of the page 128, the resource 105 has scrolled to the section of page that corresponds to the resource search tidbit selected by the user. Moreover, the query-relevant text
7 associated with the user-selected resource search tidbit 134 is shown highlighted (e.g., highlighted in Fig. 1 by using a box around the text). For example, while the resource 105 may describe "Japan" in general, the query-relevant text that is of interest to the user can be embedded much further down in the document and made more easily locatable using the user-selectable resource search tidbits 134 that are included in the selection environment 132.
Highlighting of query-relevant text can be accomplished using colored highlighting behind the text. In some implementations, "highlighting" can be accomplished by bolding the text, using a different font family, using a different text color, or by various combinations thereof.
Fig. 2 is a block diagram of an example process flow 200 for identifying resource search tidbits 202 in the tidbit processor 114. The tidbit processor 113 can be implemented as a component of the search system 110, or can be a separate system in data communication with the search system 110. The resource search tidbits 202 identified by the tidbit processor 113 are called "resource search tidbits."
Resource search tidbits are tidbits that are eligible to be used on a client device 106 to search a resource for query-relevant text corresponding to the tidbits as part of a resource search operation. The resource search operations, which is described in more detail below, occurs in response to selecting a search result that identifies the resource.
The tidbit processor 113 receives as input the query 109, a resource URL 206 for each resource identified as being relevant to the query 109, one or more tidbits 208 (e.g., tidbiti through tidbit) extracted that the search system 110 has identified as including query-relevant text, and a resource 105 identified by the URL 206 and from which the tidbits 208 are extracted. Depending on these inputs and relationships among them (e.g., comparisons of tidbits with terms in the URL, query terms within the query 109, and portions of titles within the resource 105), the tidbit processor 113 can identify resource search tidbits (RSTs) 202 in addition to the URLs provided to the client device 106 for rendering the resources.
The query 109 can include the one or more user-defined query terms, such as words, numbers, etc. that are input into the search query field of a Web browser executing on the user's client device 106. In some implementations, the search system 110 can generate one or more tidbits 208 that correspond to each resource 105 identified as being responsive to the query 109. Based on the other inputs it receives, the tidbit processor 113 can reduce the list of candidate tidbits 208 to just those tidbits 208 that are appropriate for use as resource search tidbits (RSTs) 202. For example, while several (e.g., several dozen) tidbits related to 1975 Japanese pachinkos can be identified by the search system 110 in response to the query "pachinko 1975 Japan" and provided to the tidbit processor 113, only a handful (e.g., one to ten) may ultimately end up being used to generate resource search tidbits (RSTs) 202.
Specifically, the candidate tidbits not used for resource search tidbits (RSTs) 202 can be those eliminated from consideration (e.g., using eligibility rules) by the tidbit processor 113 when comparing the tidbits 208 to the query 109, the URL 206, and the resource 105.
Figs. 3A ¨ 3C are Venn diagrams illustrating an example eligibility rule for determining whether a tidbit is eligible for a resource search operation. The example Venn regions include a resource region and a tidbit region. The resource region is representative of one or more features associated with a resource and the terms that are included in those features. Example features associated with the resource include the URL of the resource, the title of the resource, and even the resource itself.
The tidbit region is representative of the terms in the tidbit. In some implementations of using tidbit eligibility rules, if a particular tidbit includes at least one query term that is not included in the title of the resource, then the tidbit can be used as a resource search tidbit (RST). In other implementations, if a particular tidbit includes at least one query term that is not included in the title of the resource or in the resource locator (e.g., URL) of the resource, then the tidbit can be used as a resource search tidbit (RST).
Other eligibility rules can also be used, such as rules that take into account the display formatting of query terms in the resource, etc.
In some implementations, rules can also be based on the use of word variants, synonyms, or edit distances. For example, word variants (or words based on word stems) such as "features" and "featured" can trigger a match condition.
Synonym matching, when used in tidbit eligibility rules, can include synonym pairs such as "Eisenhower" and "Ike," "Bill Clinton" and "President Clinton," or "green" and "environmental." In some implementations, synonym matching can depend on the context (e.g., other text in the resource), such as to avoid false matches, for example, of the color green versus the "green" (environmental) movement. Edit distances can measure, for example, the relative number of individual character edits required to change Word A into Word B, and in a sense can be similar to word stemming.
Referring to Fig. 3A, Venn diagram 300 illustrates the use of an example eligibility rule that results in the selection of a resource search tidbitj (RSTj) 302. In this example, a resource region 304 within the Venn diagram includes query terms 1, 2 and 3, meaning that the query terms 1, 2 and 3 are included in the one or more features represented by the region 304, e.g., the resource's title, URL or both. A
tidbitj region 306 includes query terms 3 and 4, meaning that the query terms 3 and 4 are included in the tidbit. The overlap of the regions 304 and 306 is indicated by the intersection 308 that includes the query term 3 that occurs both in the resource feature(s) (e.g., the title and/or URL) and in the tidbit. In this example, because at least one query term (e.g., the query term 4) is not included in the resource, the tidbit is deemed eligible for being a resource search tidbit (e.g., the RSTi 302).
Referring to Fig. 3B, Venn diagram 310 illustrates the use of an example eligibility rule that results in the selection of a resource search tidbitk (RSTk) 312. In this example, a resource region 314 within the Venn diagram includes query terms 1 and 2, meaning that the query terms 1 and 2 are included in the one or more features represented by the region 304, e.g., the resource's title, URL or both. A
tidbitk region 316 includes query term 3, meaning that the query term 3 is included in the tidbitk. The overlap of the regions 314 and 316 is the region 314 itself, as query terms 1 and 2 occur both in the resource feature(s) (e.g., the resource's title and/or URL) and in the tidbitk.
In this example, because at least one query term (e.g., the query term 3) is not included in the resource, the tidbit is deemed eligible for being a resource search tidbit (e.g., the RSTk 312).
Referring to Fig. 3C, Venn diagram 320 illustrates the use of an example eligibility rule that results in not selecting a resource search tidbitm (RSTm) 322. In this example, a resource region 324 within the Venn diagram includes query terms 1, 2, 3 and 4, meaning that the query terms 1, 2, 3 and 4 are included in the features represented by the region 304, e.g., the resource's title, URL or both. A
tidbit813 region 326 includes query terms 3 and 4, meaning that the query terms 3 and 4 are included in the tidbitm. The overlap of the regions 314 and 316 is the region 314 itself, as query terms 3 and 4 occur both in the resource feature(s) (e.g., the title and/or URL) and in the tidbitm. However, in this example, because no query terms included in the tidbitm are absent from the resource feature(s), the tidbit is not eligible for being a resource search tidbit (e.g., the RSTm 322). As a result, the tidbit fails to meet eligibility requirements, for example, for being included in the selection environment 132 described with reference to Fig. 1. In some implementations, determining whether a tidbit is eligible for a resource search operation can result when all of the query terms are included in the tidbit.
Fig. 4 is a flow diagram of an example process 400 for identifying resource search tidbits. The tidbit processor 113, for example, can perform the steps of the process 400.
A query that includes one or more query terms is received (402). As an example, the tidbit processor 113 can receive the query 109, which can originate from the client device 106. For example, a user can enter the query terms (e.g., "pachinko 1975 Japan") of the query 109 in a search box of a Web browser or other user application.
For each of a plurality of resources identified as being relevant to the query, one or more tidbits are received, each tidbit being query-relevant text extracted from the resource (404). As an example, the tidbit processor 113 can receive the tidbits 208 from the search system 110, which can automatically send one or more tidbits with any resource that is responsive to the query processed by the search system 110.
If the query 109, for example, is "pachinko 1975 Japan," then the tidbits 208 can be query-relevant text extracted from resources 105 (e.g., Web pages) that correspond to the query 109 entered by the user on the client device 106. For instance, example tidbits 208 can include "in 1975, tens of thousands of Japanese pachinkos were replaced..." or "Japan sent boatloads of reconditioned pachinkos to the US in 1975," to name a few examples.
The tidbit from the resource is examined (406). Examination can include, for example, text in the tidbit 208 to determine if query terms within the tidbit 208 are contained in the title of the resource 105 and/or embedded within the resource's resource locator (e.g., the resource's URL).
A determination is made whether the tidbit is eligible for a resource search operation (408). For instance, the tidbit processor 113 determines a tidbit 208 to be eligible for a resource search operation if, for example, at least one query term in the tidbit 208 is not contained in the resource 105 title and/or URL.
If the tidbit is eligible for a resource search operation, then the tidbit is marked as being a resource search tidbit (410). For example, the tidbit 208 (e.g., "in 1975, tells of thousands of Japanese pachinkos were replaced...") is marked as a resource search tidbit. As shown in Fig. 2, the "marking" can occur when the tidbit processor outputs or otherwise identifies the tidbit 208 as a resource search tidbit (RST) 202.
A determination is made whether more resources and tidbits remain to be processed (412). For instance, the tidbit processor 113 can process multiple tidbits 208 for each or multiple resources 105.
In some implementations, when the search system 1 1 0 identifies a significant number of resources 105 in response to the query 109, the tidbits 208 provided by the search system 110 can be limited initially to only those tidbits 208 that correspond to a subset of the resources, such as only those resources on the first page of search results.
Later, if the user begins reviewing search results on a subsequent page, the search system 110 can provide tidbits 208 for additional resources 105, as needed.
For each of the plurality of resources, a corresponding search result responsive to the query is provided, with at least one search result including a resource search tidbit (414). At least one search result includes a resource search tidbit when at least one resource search tidbit is identified as being eligible for a resource search operation.
For example, for each resource 105, the search system 110 can provide a search result 109. If the resource search tidbit 202 is, for example, part of the snippet of the search result, the resource search tidbit can be marked by use of HTML <span> tags.
Other ways of marking a resource search tidbit can also be used.
Fig. 5 is a flow diagram of an example process 500 for determining whether a tidbit for a resource is eligible for a resource search operation. The tidbit processor 113, for example, can perform the steps of the process 500.
Query terms in a resource region are identified (502). The resource region can include the resource itself, and/or specific portions of the resource, and/or the URL of the resource, and/or other features of the resource. For example, a resource 105 related to pachinkos can include one or more titles and subtitles within the text of the resource, and can be identified by a corresponding URL. Individual query terms from the user's query 109 can be identified in the title section, and/or the URL of the resource.
Query terms in the tidbit are identified (504). In some implementations, the query terms identified in the tidbit (e.g., one of the tidbits 208) can already have been tagged by the search system 110. If not, the query terms in the tidbit can be identified with reference to those query terms in the query 109.
Query terms in the tidbit are compared to query terms in the resource region (506). In some implementations, synonyms can be used to match query terms to the title section, such as "Ike" (e.g., as a query term) for "Eisenhower" (e.g., as a word in the title section) to name one example. Other term matching techniques can use word stems, such as to match "Japan" with "Japanese" or "featured" with "features"
to name a few examples. In some implementations, query terms can also be compared to the resource locator (e.g., URL).
A determination is made whether at least one query term exists in the tidbit that is not in the resource region (508). For example, in some implementations of using eligibility rules for generating resource search tidbits (RSTs) 202, an RST
will not be created unless at least one query term (e.g., from the query 109) is absent from the corresponding resource 105. Specifically, an RST 202 is eligible to be created if the tidbit 208 includes at least one query term that is not in the title section or the resource locator (e.g., URL) of the resource 105. In the current example, an RST 202 can be created by the tidbit processor 113 if a pachinko-related resource does not "include" all of "pachinko 1975 Japan" somewhere in the resource's title section and/or URL.
Again, in some implementations, "including" can include query term matching using synonyms, word stemming and edit distances.
If at least one query term exists in the tidbit that is not in the resource region, then the tidbit is marked as being eligible as a resource search tidbit (510).
For example, the tidbit processor 113, after comparing one of the tidbits 208 with the title section of the resource 105, can output the tidbit 208 as a resource search tidbit (RST) 202. Generation of the RST 208 can include the tidbit itself plus any additional information needed to place the RST 208 in the selection environment 132 and to enable ultimate selection of the RST 208 by the user and navigation to the corresponding query-relevant text portion in the resource 105.
A determination is made whether more tidbits for the current resource remain to be processed (512). For example, a resource 105 can have more than one tidbit provided for it, and the tidbit processor 113 can process all of the tidbits for the resource to determine which tidbits 208, if any, are candidates for becoming eligible for becoming resource search tidbits (RSTs) 202.
In some implementations, the tidbit processor 113 can stop processing tidbits 208 for a resource 105 when a threshold number (e.g., five RSTs 202) have been identified, so as not to overwhelm the user with too many RSTs 202 in a selection environment of a resource search operation. In some implementations, all tidbits 208 for a resource 105 can be processed by the tidbit processor 113, and the best RSTs 202 can be provided to the user, discarding, for example, RSTs 202 of lower quality as determined by a ranking algorithm. In some implementations, the tidbit processor 113 can generate at least one RST 113 even if not all of the query terms are exact matches to query-relevant text within the resource 105 in order to have at least one RST 113 that the user can use.
If more tidbits for the current resource remain to be processed, then the next tidbit is obtained (514). Processing the next tidbit can resume at step (504) of the process 500. For example, query terms in the tidbit are identified (504), and so on for the next tidbit and for each tidbit processed.
A determination is made whether more resources remain to be processed (516).
For example, in response to the query 109, the search system 110 can provide multiple resources 105. The tidbit processor 113 can process each of the resources 105 and their tidbits 208 in order to determine RSTs 202.
If more resources remain to be processed, then the next resource is obtained (518), and processing the next resource can resume at step (502) of the process 500.
When all resources 105 have been processed by the tidbit processor 113, the process 500 ends (520).
Fig. 6 is a block diagram of an example process for associating resource search tidbits with resource locators from a search results page. An example search results page 602 lists search results 608a-608c that correspond to a search query 604.
For example, a user running a Web browser on the client device 106 can enter the search query 604 (e.g., "new widget features") in order to access Internet information related to widgets having new features. The client device 106 can send the query 109 (e.g., including query terms from the user's search query 604) over the network 102, where it can be handled by a search system 110. In response to the query 109, the search system 110 can return the search results 111.
On the search results page 602, the search results 111 can be displayed as the individual search results 608a-608c. These search results 608a-608c correspond to the resources 105 described with reference to Fig. 1. In the search result 608a, a resource title 610a (e.g., "Product Review for Widget") provides a title-level description of the search result 608a. In this case, the resource title 610a also includes one of the query terms of the search query 604, namely "Widget." The search result 608a also includes a snippet 612a of "Our new widget has new features...If you desire a new full-featured widget...." in which the query terms, or likenesses thereof, are bolded. For example, the likenesses of the query terms of the search query 604 can include synonyms, word stems or variants (e.g., "full-featured"), and words within a threshold edit distance. The search result 608a further includes a resource locator 614a, in this case the URL
"www.examplel 1.com/business/widget.php?p=93" that can be used to access the resource 105. As an example, the user can click on the URL to navigate to the web page associated with the resource locator 614a.
The other search results on the search results page 602, namely the search results 608b and 608c each have their respective titles 610b and 610c, snippets 612b and 612c, and resource locators 614b and 614c. Within the snippets 612b and 612c, terms in the snippets that "match" the query terms of the search query 604 are also bolded. In some implementations, words in titles, snippets and resource locators can be highlighted in various ways, such as with different colors of highlighting (e.g., a different color for each query term), shading, different font colors, different font families, bolding, italics, or any other mechanism for providing a different visible look to the user. In some implementations, hovering over, or clicking on, a query term can cause all instances of that query term to be highlighted in some way.
Resource search tidbit information 622, which identifies resource search tidbits for each search result 608, is also provided with the search results page. The resource search tidbit information 622 need not be displayed as part of the page;
instead, the information can be of the form of marked resource search tidbits for each search result.
For example, a resource search tidbit can be query-relevant text that is independent of the query-relevant text of a snippet for a search result, i.e., the resource search tidbit may be a block of text that is not part of the snippet.
For instance, the resource search tidbit information 622 can include, for each search result (e.g., search results 608a -608c), the search result's resource locator (e.g., URL) and associated resource search tidbit. For the search result 608a, the Web browser executing on the client device 106 can process, in response to a selection of the search result 608a, the two resource search tidbit (as indicated by "URLi:
RSTii, RST12") to determine whether a resource search operation is to be performed.
In some implementations, the associations between resource search tidbits and resource locators can be stored, for example, by processing a document object model (DOM) representation of the search results page. Web browser applications can use various internal representations of the document, such as a document object model (DOM) representation, for managing and rendering documents to be displayed to the user. Any of the representations can be used, for example, to associate resource locators (e.g., URLs) with resource search tidbits (RSTs), such as will be described with respect to the process flow diagram Fig. 11.
The Web browser's rendering module (e.g., part of the Web browser executing on the user's client device 106) can translate a displayed markup language document using some type of translation, such as to a DOM representation. The translation can analyze the internal representation of the current document, extract text from the text nodes of the representation, and send the text to a browser translation module for translation. The page translator module can receive the translated text from the browser translator module and updates the internal representation. The rendering component of the browser can then render the updated internal representation. In general, the term "web browser" when used herein can refer to any web browser application, any browser extension, or any other program running on the client (or server) that facilitates browsing online content.
The DOM representation of a document is in the form a tree of node objects.
Each node corresponds to a part of the document. Nodes can be various types including, for example, root nodes, element nodes, attribute nodes, text nodes and script nodes. A text node is a node corresponding to text in the document, and includes text stored in the node. An element node is a node corresponding to an annotation in the document such as <html> tags or <title> tags. An attribute node is a node corresponding to an attribute of an element node, such as the source for an <image>
tag. A script node includes an executable script. A DOM representation can also include other types of nodes.
By traversing the DOM of the search results page, the browser identifies the resource search tidbits that have been marked for each URL and stores the association in memory. The association is then accessed each time a page is requested by a selection of a search result, and the web browser uses the association to determine which resource search tidbits to search for in a given page. Using the resource search tidbits for the page, the web browser determines whether the resource search tidbits meet a resource search operation threshold condition.
Fig. 7A is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does not meet a search operation threshold condition. The rendering shows an example page 702. For instance, the page 702 displayed represents an example Web Page that can be rendered if the user selects the search result 608a, as described with reference to Fig. 6.
Both the Web page title 704 and the address 706 match the resource locator 614a (e.g., "www.examplell.com/business/widget.php?p=93"). To obtain the resource information needed to render the webpage 702, communication by the client device 106 across the network 102 (e.g., an HTTP get) involves requesting the resource associated with the resource locator 614a.
The page 702 can be rendered, for example, by a Web browser executing on the user's client device 106. When the page 702 is rendered, the Web page content 708 is displayed, including any graphics and text associated with the resource. Query-relevant text may or may not be highlighted, and if so, the highlighted text passages 710 and 712 correspond to the resource search tidbits (e.g., "RSTi I and RST12") that are included in the resource search tidbit information 622 and correspond to the resource locator 614a (e.g., the URL "vvrww.examplell.com/business/widget.php?p=93"). The Web browser on the client device 106 call have the ability to highlight the query-relevant text associated with the resource search tidbits if, for example, the associations between the resource locator (e.g., the resource's URL) and the resource search tidbits are accessible from document object models (DOMs) from the previous search results page stored in computer memory. In this example, the page 702 does not include a selection environment 132 because, in this example, the query-relevant text associated with resource search tidbits (e.g., "RSTii and RSTp") are near enough to the "top"
of the Web page content 708 (e.g., above the "fold") so as not to warrant displaying a control that allows the user to quickly navigate significantly "lower" on the Web page.
Fig. 7B is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does meet a search operation threshold condition. The rendering is of an example page 722. For instance, the page 722 displayed represents an example Web Page that can be rendered if the user selects the search result 608c, as described with reference to Fig. 6.
Specifically, both the Web page title 724 and the address 726 match the resource locator 614c (e.g., " -ww.example1435.comibusiness/classicgadgets.html"). To obtain the resource information needed to render the webpage 722, communication by the client device 106 across the network 102 (e.g., "Get URL3") involves requesting the resource associated with the resource locator 614c.
The page 722 can be rendered, for example, by a Web browser executing on the user's client device 106. When the page 722 is rendered, the Web page content 728 is displayed, including any graphics and text associated with the resource.
In this example, the text corresponding to the resource search tidbits associated with the resource are positioned sufficiently lower within the content of the Web page so as not to be displayed when the Web page appears. Essentially, the text of the resource search tidbits are scrolled off the page. However, the browser executing on the client device 106, for example, can recognize the rendered location of the query-relevant text and automatically display a selection environment 730. A best matches message 732 included in the selection environment 730 can echo the query terms (e.g., "new widget features") that are included in the user's original search query 604, as described with reference to Fig. 6. The selection environment 730 can further include the resource search tidbits (e.g., "R5T31 and RST32") associated with the query-relevant text passages, in this case selection environment options 734 and 736.
Specifically, the option 734 can be selected by the user to navigate to the portion of the web content containing the text 738 matching the resource search tidbit RST31, and the option 736 to navigate to the text 740 matching the resource search tidbit R5T32. The option 734 is depicted in Fig. 7B as containing the text "RST32" in order to make clear the mapping of the RST to its corresponding query-relevant text in the resource. However, the option 736 includes the tidbit "several of our new-featured widgets" which matches the query-relevant passage 740. In some implementations, including the one depicted in Fig. 7B, query terms that appear in tidbits and query-relevant text can be highlighted in any way (e.g., shown here using bolding).
In this example depiction of the web page 722, the query-relevant passages 738 and 740 are displayed in a phantom region 742 used here to indicate and extension of the web page 722 beyond the active viewport.
The query-relevant text is highlighted, and the text passages 710 and 712 correspond to the resource search tidbits (e.g., "RST31 and RST32") that are included in the resource search tidbit information 622 and correspond to the resource locator 614a (e.g., the URL "vvww.examplell.comibusiness/widget.php?p=93"). The Web browser on the client device 106 has accesses associations between the resource locator (e.g., the resource's URL) and the resource search tidbits are accessible from data gathered from document object model (DOM) and stored in computer memory.
Fig. 8 is a flow diagram of an example process 800 for performing a resource search operation. As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 800. More specifically, the process 800 can be executed, for example, by computer applications that are part of, our in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
In response to a query including one or more query terms, a search results page including search results responsive to the query is received (802). Each search result includes a resource locator that specifies the location of a resource identified as being relevant to the query. At least one search result includes a resource search tidbit. The resource search tidbit is query-relevant text extracted from the resource. The resource search tidbit is eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device. Referring to Fig. 1, for example, the search results page can be the web page 126 that displays the search results 111 provided by the search system 110. The search results 111 can include snippets from and links to resources 105 that the search system 110 identifies as responsive to the user's query 109. The search results 111 can be displayed or rendered within a graphical user interface on the screen of the user's client device 106. For example, if the user's query 109 is "pachinko 1975 Japan," then the search results page displayed as the web page 126 can include Web or Internet "hits" related to the query. As result, the user can see, within each of the search results 111, resource locators (e.g., links or URLs) for each resource 105, and snippets that can contain some or all of the individual query terms from the query 109.
A selection of the at least one search result is received at the client device (804).
For example, from the search results 111 displayed on the user's client device 106, the user can select one of the individual search results 111. Continuing with the current example, the user can select a particular search result, such as a search result 111 corresponding to the history of pachinko games in Japan. The user's selection of the particular search result 111, for example, can cause the Web browser application to obtain the URL (or other resource locator) that is associated with or embedded within the search result 111.
In response to the selection, the resource specified by the resource locator of the at least one search result is received (806). For example, using the URL of the selected search result 111, the Web browser application can access the corresponding resource 105. Access can occur, for example, over the network 102, using the URL of the resource 105.
The resource is rendered at the client device (808). As an example, the resource 105 can be displayed within the user's Web browser, such as to display the Web page that provides a history of pachinlco games in Japan.
A portion of text in the resource that matches the query-relevant text of the resource search tidbit is identified (810). As an example, referring to Fig.
1, an application on the client device 106 identifies query-relevant text 138 corresponding to the specific resource search tidbit 134.
The resource search operation is performed only if the identified portion of the text matching the query-relevant text of the resource search tidbit meets a search operation threshold condition (812). For example, in some implementations, certain threshold conditions must exist before the resource search operation is performed.
Specifically, unless the query-relevant text 138 corresponding to a specific resource search tidbit 134 appears below the "fold'. (e.g., a pre-dctcrmined number of pixels from the top of the display or outside of the current view port), the selection environment 132 is not displayed.
In some implementations, the selection environment 132 can display all resource search tidbits 134 no matter how many of the resource search tidbits' corresponding query-relevant text passages appear above or below the fold. In other implementations, the selection environment 132 displays only the resource search tidbits for which corresponding text passages are below the fold.
Fig. 9 is a flow diagram of an example process 900 for determining whether a portion of text in a resource matches the query-relevant text of a resource search tidbit.
As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 900. More specifically, the process 900 can be executed, for example, by computer applications that are part of, or in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
In some implementations, the resources that are processed by the search system 110 are cached resources, and the resources may have been updated by administrators or users after the resource is stored in a cache of the search system 110.
Accordingly, the copy of the resource stored in the cache of the search system 110 may not exactly match the copy of the resource that is provided by the website hosting the resource.
Accordingly, the client device, in some implementations, is configured to search for matching text based on an exact match and a closest match criteria.
A portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit is searched for (902). For example, a Web browser application running on the client device 106 can search for query-relevant text in a resource 105 that matches all of the text in the resource search tidbit.
A determination is made whether an exact match is found (904). If an exact match is found, then the portion of text in the resource that exactly matches the text of the resource search tidbit is identified (906). The identification can be used to highlight the text on some way, such as to highlight the query-relevant text 138 in the resource 105. The query-relevant text 138 in this case can contain all of the query terms (e.g., all of the terms in "pachinko 1975 Japan").
If no exact match is found, then the portion of text in the resource that most closely matches the text of the resource search tidbit is identified (908).
For example, in this case, the text identified in the resource 105 can include exact matches to most of the terms in the query 109 and close matches to the remaining terms. In some implementations, a portion of text with a minimum edit distance from the query-relevant text of the resource search tidbit relative to other portions of the text in the resource is identified as being the closest match. In some implementations, prefix matching can be used, such as to identify terms in the query-relevant text having the longest prefix match to terms in the resource search tidbit. In other implementations, postfix matching can be used, such as to identify terms in the query-relevant text having the longest postfix match to terms in the resource search tidbit. Other types of matching can also be used, e.g., longest string matching, etc.
Fig. 10 is a flow diagram of an example process 1000 for navigating to a portion of a resource in response to selecting a resource search tidbit. As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 1000. More specifically, the process 1000 can be executed, for example, by computer applications that are part of, our in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
A selection environment is displayed with the rendered resource, the selection environment displaying the portion of text in the resource that matches the query-relevant text of the resource search tidbit (1002). For example, referring to Fig. 1, when the Web browser executing on the user's client device 106 displays the page 128 corresponding to the resource 105, the selection environment 132 can also be displayed.
Specifically, the page 128 can be a web page related to pachinko games, and the selection environment 132 can include one or more resource search tidbits 134 corresponding to query-relevant text portions in the resource 105 that are related to the query terms of the query 109 (e.g. "pachinko 1975 Japan").
In response to receiving a selection of the displayed portion of the text, navigation occurs to the portion of the resource that includes the portion of text in the resource that matches the query-relevant text of the resource search tidbit (1004). For example, if the user selects a particular resource search tidbit 134, such as one containing the tidbit "Japan sent boatloads of reconditioned pachinkos to the US in 1975," then the user's Web browser can navigate to that portion of the resource 105 that contains that text. Specifically, the Web page can automatically scroll to the passage of interest as shown in Fig.1 and indicated by an updated display of the page 128 and a new position of the scroll bars 130.
Fig. 11 is a flow diagram of an example process 1100 for performing a resource search operation using an associating of resource locators and resource search tidbits.
As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 1100. More specifically, the process 1100 can be executed, for example, by computer applications that are part of, our in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
From a document object model of the search results page, the resource search tidbit of the at least one search result is associated with the resource locator of the at least one search result (1102). For example, if the DOM representation of a search results page is in the form of a tree of node objects, the nodes of the tree can include the association of the resource search tidbit to a resource locator in a search result.
The association is stored in a computer memory (1104), and the association is accessed in the computer memory in response to a selection of a search result from the search results page (1106). For example, when the user selects one of the search results 111 from the Web page 126, the Web browser executing on the user's client device 106 can access the association of the resource search tidbits and the URL
corresponding to the selected search result.
The portion of text in the resource that matches the query-relevant text of the resource search tidbit associated with the resource locator of the at least one search result that matches the resource locator of the resource is identified (1108).
In some implementations, some of the processing described above as occurring at the client device 106 can instead occur at the server. For example, the search system 110 can perform most or all of the processing needed to determine eligibility of resource search tidbits.
In some implementations, the selection environment 132 can always be displayed regardless of whether the query-relevant text of the resource 105 already appears on the screen.
In some implementations, in order to manage large numbers of (e.g., more than ito 5) resource search tidbits (RSTs) in the selection environment 132, a scroll bar can be added to allow the user to position to an RST of interest, such as one further down the list.
In some implementations, additional tools can be added to the selection environment 132, such as a tool to check off passages that have already been read. In some implementations, the user can be provided with options to hide selected RSTs, such a RSTs most associated with a specific query term in which the user is no longer interested in seeing associated RSTs. In some implementations, user options can be provided to allow the RSTs to be sorted in specific ways (e.g., by one or more query terms). In some implementations, a search feature can be added to the selection environment 132 that allows the user, for example, to search for specific text strings within the collection of RSTs.
In some implementations, automatic highlighting can occur on the portions of text in a resource that match the text of the resource search tidbit, regardless of whether the resource search tidbit meets a search operation threshold condition. For example, the text can be highlighted in light yellow upon initial display of the resource. If a selection environment is displayed, and if the user then selects the RST
associated with the query-relevant text, the highlighting can be changed, for example, to a strong yellow.
In some implementations, once a user is thought to have read or reviewed a particular passage, highlighting can be changed to an off color, such as by changing the initially-highlighted in yellow text to violet or some other non-yellow highlighting color. In this way, the user can be informed of where he or she has already been on the Web page.
Although the examples above describe providing resource search tidbits that include query-relevant text, other types of data can be used to identify text for a resource search operation. For example, in some implementations, the server system 110 can provide a byte offset and byte length tuple that identifies the distance from the start of the resource, in bytes, of a tidbit that is of a size equal to the byte length.
Alternatively, other offset references can also be used, e.g., a paragraph number and/or sentence number. In these implementations, the matching operations at the client side can be changed accordingly.
In other implementations, the client device can request resource search tidbits for a resource from the search system 110 asynchronously, e.g., in response to selecting a resource from a search result. The search system 110 can then perform the resource search tidbit operations described above for only that resource, and provide the identified resource search tidbits to the client device for processing. This implementation reduces processing load on the search system 110.
Although the system above is described in the context of a server and a client device, in some implementations, some of the server operations can be performed on the client device. For example, when receiving search results, the browser application can treat the snippet as a default resource search tidbit, and can perform the eligibility operations, matching operations, highlighting operations, and search environment related operations described above using the snippet as input.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC
(application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
A
computer program may, but need not, correspond to a file in a file system. A
program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both.
The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
What is claimed is:
Highlighting of query-relevant text can be accomplished using colored highlighting behind the text. In some implementations, "highlighting" can be accomplished by bolding the text, using a different font family, using a different text color, or by various combinations thereof.
Fig. 2 is a block diagram of an example process flow 200 for identifying resource search tidbits 202 in the tidbit processor 114. The tidbit processor 113 can be implemented as a component of the search system 110, or can be a separate system in data communication with the search system 110. The resource search tidbits 202 identified by the tidbit processor 113 are called "resource search tidbits."
Resource search tidbits are tidbits that are eligible to be used on a client device 106 to search a resource for query-relevant text corresponding to the tidbits as part of a resource search operation. The resource search operations, which is described in more detail below, occurs in response to selecting a search result that identifies the resource.
The tidbit processor 113 receives as input the query 109, a resource URL 206 for each resource identified as being relevant to the query 109, one or more tidbits 208 (e.g., tidbiti through tidbit) extracted that the search system 110 has identified as including query-relevant text, and a resource 105 identified by the URL 206 and from which the tidbits 208 are extracted. Depending on these inputs and relationships among them (e.g., comparisons of tidbits with terms in the URL, query terms within the query 109, and portions of titles within the resource 105), the tidbit processor 113 can identify resource search tidbits (RSTs) 202 in addition to the URLs provided to the client device 106 for rendering the resources.
The query 109 can include the one or more user-defined query terms, such as words, numbers, etc. that are input into the search query field of a Web browser executing on the user's client device 106. In some implementations, the search system 110 can generate one or more tidbits 208 that correspond to each resource 105 identified as being responsive to the query 109. Based on the other inputs it receives, the tidbit processor 113 can reduce the list of candidate tidbits 208 to just those tidbits 208 that are appropriate for use as resource search tidbits (RSTs) 202. For example, while several (e.g., several dozen) tidbits related to 1975 Japanese pachinkos can be identified by the search system 110 in response to the query "pachinko 1975 Japan" and provided to the tidbit processor 113, only a handful (e.g., one to ten) may ultimately end up being used to generate resource search tidbits (RSTs) 202.
Specifically, the candidate tidbits not used for resource search tidbits (RSTs) 202 can be those eliminated from consideration (e.g., using eligibility rules) by the tidbit processor 113 when comparing the tidbits 208 to the query 109, the URL 206, and the resource 105.
Figs. 3A ¨ 3C are Venn diagrams illustrating an example eligibility rule for determining whether a tidbit is eligible for a resource search operation. The example Venn regions include a resource region and a tidbit region. The resource region is representative of one or more features associated with a resource and the terms that are included in those features. Example features associated with the resource include the URL of the resource, the title of the resource, and even the resource itself.
The tidbit region is representative of the terms in the tidbit. In some implementations of using tidbit eligibility rules, if a particular tidbit includes at least one query term that is not included in the title of the resource, then the tidbit can be used as a resource search tidbit (RST). In other implementations, if a particular tidbit includes at least one query term that is not included in the title of the resource or in the resource locator (e.g., URL) of the resource, then the tidbit can be used as a resource search tidbit (RST).
Other eligibility rules can also be used, such as rules that take into account the display formatting of query terms in the resource, etc.
In some implementations, rules can also be based on the use of word variants, synonyms, or edit distances. For example, word variants (or words based on word stems) such as "features" and "featured" can trigger a match condition.
Synonym matching, when used in tidbit eligibility rules, can include synonym pairs such as "Eisenhower" and "Ike," "Bill Clinton" and "President Clinton," or "green" and "environmental." In some implementations, synonym matching can depend on the context (e.g., other text in the resource), such as to avoid false matches, for example, of the color green versus the "green" (environmental) movement. Edit distances can measure, for example, the relative number of individual character edits required to change Word A into Word B, and in a sense can be similar to word stemming.
Referring to Fig. 3A, Venn diagram 300 illustrates the use of an example eligibility rule that results in the selection of a resource search tidbitj (RSTj) 302. In this example, a resource region 304 within the Venn diagram includes query terms 1, 2 and 3, meaning that the query terms 1, 2 and 3 are included in the one or more features represented by the region 304, e.g., the resource's title, URL or both. A
tidbitj region 306 includes query terms 3 and 4, meaning that the query terms 3 and 4 are included in the tidbit. The overlap of the regions 304 and 306 is indicated by the intersection 308 that includes the query term 3 that occurs both in the resource feature(s) (e.g., the title and/or URL) and in the tidbit. In this example, because at least one query term (e.g., the query term 4) is not included in the resource, the tidbit is deemed eligible for being a resource search tidbit (e.g., the RSTi 302).
Referring to Fig. 3B, Venn diagram 310 illustrates the use of an example eligibility rule that results in the selection of a resource search tidbitk (RSTk) 312. In this example, a resource region 314 within the Venn diagram includes query terms 1 and 2, meaning that the query terms 1 and 2 are included in the one or more features represented by the region 304, e.g., the resource's title, URL or both. A
tidbitk region 316 includes query term 3, meaning that the query term 3 is included in the tidbitk. The overlap of the regions 314 and 316 is the region 314 itself, as query terms 1 and 2 occur both in the resource feature(s) (e.g., the resource's title and/or URL) and in the tidbitk.
In this example, because at least one query term (e.g., the query term 3) is not included in the resource, the tidbit is deemed eligible for being a resource search tidbit (e.g., the RSTk 312).
Referring to Fig. 3C, Venn diagram 320 illustrates the use of an example eligibility rule that results in not selecting a resource search tidbitm (RSTm) 322. In this example, a resource region 324 within the Venn diagram includes query terms 1, 2, 3 and 4, meaning that the query terms 1, 2, 3 and 4 are included in the features represented by the region 304, e.g., the resource's title, URL or both. A
tidbit813 region 326 includes query terms 3 and 4, meaning that the query terms 3 and 4 are included in the tidbitm. The overlap of the regions 314 and 316 is the region 314 itself, as query terms 3 and 4 occur both in the resource feature(s) (e.g., the title and/or URL) and in the tidbitm. However, in this example, because no query terms included in the tidbitm are absent from the resource feature(s), the tidbit is not eligible for being a resource search tidbit (e.g., the RSTm 322). As a result, the tidbit fails to meet eligibility requirements, for example, for being included in the selection environment 132 described with reference to Fig. 1. In some implementations, determining whether a tidbit is eligible for a resource search operation can result when all of the query terms are included in the tidbit.
Fig. 4 is a flow diagram of an example process 400 for identifying resource search tidbits. The tidbit processor 113, for example, can perform the steps of the process 400.
A query that includes one or more query terms is received (402). As an example, the tidbit processor 113 can receive the query 109, which can originate from the client device 106. For example, a user can enter the query terms (e.g., "pachinko 1975 Japan") of the query 109 in a search box of a Web browser or other user application.
For each of a plurality of resources identified as being relevant to the query, one or more tidbits are received, each tidbit being query-relevant text extracted from the resource (404). As an example, the tidbit processor 113 can receive the tidbits 208 from the search system 110, which can automatically send one or more tidbits with any resource that is responsive to the query processed by the search system 110.
If the query 109, for example, is "pachinko 1975 Japan," then the tidbits 208 can be query-relevant text extracted from resources 105 (e.g., Web pages) that correspond to the query 109 entered by the user on the client device 106. For instance, example tidbits 208 can include "in 1975, tens of thousands of Japanese pachinkos were replaced..." or "Japan sent boatloads of reconditioned pachinkos to the US in 1975," to name a few examples.
The tidbit from the resource is examined (406). Examination can include, for example, text in the tidbit 208 to determine if query terms within the tidbit 208 are contained in the title of the resource 105 and/or embedded within the resource's resource locator (e.g., the resource's URL).
A determination is made whether the tidbit is eligible for a resource search operation (408). For instance, the tidbit processor 113 determines a tidbit 208 to be eligible for a resource search operation if, for example, at least one query term in the tidbit 208 is not contained in the resource 105 title and/or URL.
If the tidbit is eligible for a resource search operation, then the tidbit is marked as being a resource search tidbit (410). For example, the tidbit 208 (e.g., "in 1975, tells of thousands of Japanese pachinkos were replaced...") is marked as a resource search tidbit. As shown in Fig. 2, the "marking" can occur when the tidbit processor outputs or otherwise identifies the tidbit 208 as a resource search tidbit (RST) 202.
A determination is made whether more resources and tidbits remain to be processed (412). For instance, the tidbit processor 113 can process multiple tidbits 208 for each or multiple resources 105.
In some implementations, when the search system 1 1 0 identifies a significant number of resources 105 in response to the query 109, the tidbits 208 provided by the search system 110 can be limited initially to only those tidbits 208 that correspond to a subset of the resources, such as only those resources on the first page of search results.
Later, if the user begins reviewing search results on a subsequent page, the search system 110 can provide tidbits 208 for additional resources 105, as needed.
For each of the plurality of resources, a corresponding search result responsive to the query is provided, with at least one search result including a resource search tidbit (414). At least one search result includes a resource search tidbit when at least one resource search tidbit is identified as being eligible for a resource search operation.
For example, for each resource 105, the search system 110 can provide a search result 109. If the resource search tidbit 202 is, for example, part of the snippet of the search result, the resource search tidbit can be marked by use of HTML <span> tags.
Other ways of marking a resource search tidbit can also be used.
Fig. 5 is a flow diagram of an example process 500 for determining whether a tidbit for a resource is eligible for a resource search operation. The tidbit processor 113, for example, can perform the steps of the process 500.
Query terms in a resource region are identified (502). The resource region can include the resource itself, and/or specific portions of the resource, and/or the URL of the resource, and/or other features of the resource. For example, a resource 105 related to pachinkos can include one or more titles and subtitles within the text of the resource, and can be identified by a corresponding URL. Individual query terms from the user's query 109 can be identified in the title section, and/or the URL of the resource.
Query terms in the tidbit are identified (504). In some implementations, the query terms identified in the tidbit (e.g., one of the tidbits 208) can already have been tagged by the search system 110. If not, the query terms in the tidbit can be identified with reference to those query terms in the query 109.
Query terms in the tidbit are compared to query terms in the resource region (506). In some implementations, synonyms can be used to match query terms to the title section, such as "Ike" (e.g., as a query term) for "Eisenhower" (e.g., as a word in the title section) to name one example. Other term matching techniques can use word stems, such as to match "Japan" with "Japanese" or "featured" with "features"
to name a few examples. In some implementations, query terms can also be compared to the resource locator (e.g., URL).
A determination is made whether at least one query term exists in the tidbit that is not in the resource region (508). For example, in some implementations of using eligibility rules for generating resource search tidbits (RSTs) 202, an RST
will not be created unless at least one query term (e.g., from the query 109) is absent from the corresponding resource 105. Specifically, an RST 202 is eligible to be created if the tidbit 208 includes at least one query term that is not in the title section or the resource locator (e.g., URL) of the resource 105. In the current example, an RST 202 can be created by the tidbit processor 113 if a pachinko-related resource does not "include" all of "pachinko 1975 Japan" somewhere in the resource's title section and/or URL.
Again, in some implementations, "including" can include query term matching using synonyms, word stemming and edit distances.
If at least one query term exists in the tidbit that is not in the resource region, then the tidbit is marked as being eligible as a resource search tidbit (510).
For example, the tidbit processor 113, after comparing one of the tidbits 208 with the title section of the resource 105, can output the tidbit 208 as a resource search tidbit (RST) 202. Generation of the RST 208 can include the tidbit itself plus any additional information needed to place the RST 208 in the selection environment 132 and to enable ultimate selection of the RST 208 by the user and navigation to the corresponding query-relevant text portion in the resource 105.
A determination is made whether more tidbits for the current resource remain to be processed (512). For example, a resource 105 can have more than one tidbit provided for it, and the tidbit processor 113 can process all of the tidbits for the resource to determine which tidbits 208, if any, are candidates for becoming eligible for becoming resource search tidbits (RSTs) 202.
In some implementations, the tidbit processor 113 can stop processing tidbits 208 for a resource 105 when a threshold number (e.g., five RSTs 202) have been identified, so as not to overwhelm the user with too many RSTs 202 in a selection environment of a resource search operation. In some implementations, all tidbits 208 for a resource 105 can be processed by the tidbit processor 113, and the best RSTs 202 can be provided to the user, discarding, for example, RSTs 202 of lower quality as determined by a ranking algorithm. In some implementations, the tidbit processor 113 can generate at least one RST 113 even if not all of the query terms are exact matches to query-relevant text within the resource 105 in order to have at least one RST 113 that the user can use.
If more tidbits for the current resource remain to be processed, then the next tidbit is obtained (514). Processing the next tidbit can resume at step (504) of the process 500. For example, query terms in the tidbit are identified (504), and so on for the next tidbit and for each tidbit processed.
A determination is made whether more resources remain to be processed (516).
For example, in response to the query 109, the search system 110 can provide multiple resources 105. The tidbit processor 113 can process each of the resources 105 and their tidbits 208 in order to determine RSTs 202.
If more resources remain to be processed, then the next resource is obtained (518), and processing the next resource can resume at step (502) of the process 500.
When all resources 105 have been processed by the tidbit processor 113, the process 500 ends (520).
Fig. 6 is a block diagram of an example process for associating resource search tidbits with resource locators from a search results page. An example search results page 602 lists search results 608a-608c that correspond to a search query 604.
For example, a user running a Web browser on the client device 106 can enter the search query 604 (e.g., "new widget features") in order to access Internet information related to widgets having new features. The client device 106 can send the query 109 (e.g., including query terms from the user's search query 604) over the network 102, where it can be handled by a search system 110. In response to the query 109, the search system 110 can return the search results 111.
On the search results page 602, the search results 111 can be displayed as the individual search results 608a-608c. These search results 608a-608c correspond to the resources 105 described with reference to Fig. 1. In the search result 608a, a resource title 610a (e.g., "Product Review for Widget") provides a title-level description of the search result 608a. In this case, the resource title 610a also includes one of the query terms of the search query 604, namely "Widget." The search result 608a also includes a snippet 612a of "Our new widget has new features...If you desire a new full-featured widget...." in which the query terms, or likenesses thereof, are bolded. For example, the likenesses of the query terms of the search query 604 can include synonyms, word stems or variants (e.g., "full-featured"), and words within a threshold edit distance. The search result 608a further includes a resource locator 614a, in this case the URL
"www.examplel 1.com/business/widget.php?p=93" that can be used to access the resource 105. As an example, the user can click on the URL to navigate to the web page associated with the resource locator 614a.
The other search results on the search results page 602, namely the search results 608b and 608c each have their respective titles 610b and 610c, snippets 612b and 612c, and resource locators 614b and 614c. Within the snippets 612b and 612c, terms in the snippets that "match" the query terms of the search query 604 are also bolded. In some implementations, words in titles, snippets and resource locators can be highlighted in various ways, such as with different colors of highlighting (e.g., a different color for each query term), shading, different font colors, different font families, bolding, italics, or any other mechanism for providing a different visible look to the user. In some implementations, hovering over, or clicking on, a query term can cause all instances of that query term to be highlighted in some way.
Resource search tidbit information 622, which identifies resource search tidbits for each search result 608, is also provided with the search results page. The resource search tidbit information 622 need not be displayed as part of the page;
instead, the information can be of the form of marked resource search tidbits for each search result.
For example, a resource search tidbit can be query-relevant text that is independent of the query-relevant text of a snippet for a search result, i.e., the resource search tidbit may be a block of text that is not part of the snippet.
For instance, the resource search tidbit information 622 can include, for each search result (e.g., search results 608a -608c), the search result's resource locator (e.g., URL) and associated resource search tidbit. For the search result 608a, the Web browser executing on the client device 106 can process, in response to a selection of the search result 608a, the two resource search tidbit (as indicated by "URLi:
RSTii, RST12") to determine whether a resource search operation is to be performed.
In some implementations, the associations between resource search tidbits and resource locators can be stored, for example, by processing a document object model (DOM) representation of the search results page. Web browser applications can use various internal representations of the document, such as a document object model (DOM) representation, for managing and rendering documents to be displayed to the user. Any of the representations can be used, for example, to associate resource locators (e.g., URLs) with resource search tidbits (RSTs), such as will be described with respect to the process flow diagram Fig. 11.
The Web browser's rendering module (e.g., part of the Web browser executing on the user's client device 106) can translate a displayed markup language document using some type of translation, such as to a DOM representation. The translation can analyze the internal representation of the current document, extract text from the text nodes of the representation, and send the text to a browser translation module for translation. The page translator module can receive the translated text from the browser translator module and updates the internal representation. The rendering component of the browser can then render the updated internal representation. In general, the term "web browser" when used herein can refer to any web browser application, any browser extension, or any other program running on the client (or server) that facilitates browsing online content.
The DOM representation of a document is in the form a tree of node objects.
Each node corresponds to a part of the document. Nodes can be various types including, for example, root nodes, element nodes, attribute nodes, text nodes and script nodes. A text node is a node corresponding to text in the document, and includes text stored in the node. An element node is a node corresponding to an annotation in the document such as <html> tags or <title> tags. An attribute node is a node corresponding to an attribute of an element node, such as the source for an <image>
tag. A script node includes an executable script. A DOM representation can also include other types of nodes.
By traversing the DOM of the search results page, the browser identifies the resource search tidbits that have been marked for each URL and stores the association in memory. The association is then accessed each time a page is requested by a selection of a search result, and the web browser uses the association to determine which resource search tidbits to search for in a given page. Using the resource search tidbits for the page, the web browser determines whether the resource search tidbits meet a resource search operation threshold condition.
Fig. 7A is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does not meet a search operation threshold condition. The rendering shows an example page 702. For instance, the page 702 displayed represents an example Web Page that can be rendered if the user selects the search result 608a, as described with reference to Fig. 6.
Both the Web page title 704 and the address 706 match the resource locator 614a (e.g., "www.examplell.com/business/widget.php?p=93"). To obtain the resource information needed to render the webpage 702, communication by the client device 106 across the network 102 (e.g., an HTTP get) involves requesting the resource associated with the resource locator 614a.
The page 702 can be rendered, for example, by a Web browser executing on the user's client device 106. When the page 702 is rendered, the Web page content 708 is displayed, including any graphics and text associated with the resource. Query-relevant text may or may not be highlighted, and if so, the highlighted text passages 710 and 712 correspond to the resource search tidbits (e.g., "RSTi I and RST12") that are included in the resource search tidbit information 622 and correspond to the resource locator 614a (e.g., the URL "vvrww.examplell.com/business/widget.php?p=93"). The Web browser on the client device 106 call have the ability to highlight the query-relevant text associated with the resource search tidbits if, for example, the associations between the resource locator (e.g., the resource's URL) and the resource search tidbits are accessible from document object models (DOMs) from the previous search results page stored in computer memory. In this example, the page 702 does not include a selection environment 132 because, in this example, the query-relevant text associated with resource search tidbits (e.g., "RSTii and RSTp") are near enough to the "top"
of the Web page content 708 (e.g., above the "fold") so as not to warrant displaying a control that allows the user to quickly navigate significantly "lower" on the Web page.
Fig. 7B is an illustration of an example rendering of a resource for which a portion of text matching the query-relevant text of the resource search tidbit does meet a search operation threshold condition. The rendering is of an example page 722. For instance, the page 722 displayed represents an example Web Page that can be rendered if the user selects the search result 608c, as described with reference to Fig. 6.
Specifically, both the Web page title 724 and the address 726 match the resource locator 614c (e.g., " -ww.example1435.comibusiness/classicgadgets.html"). To obtain the resource information needed to render the webpage 722, communication by the client device 106 across the network 102 (e.g., "Get URL3") involves requesting the resource associated with the resource locator 614c.
The page 722 can be rendered, for example, by a Web browser executing on the user's client device 106. When the page 722 is rendered, the Web page content 728 is displayed, including any graphics and text associated with the resource.
In this example, the text corresponding to the resource search tidbits associated with the resource are positioned sufficiently lower within the content of the Web page so as not to be displayed when the Web page appears. Essentially, the text of the resource search tidbits are scrolled off the page. However, the browser executing on the client device 106, for example, can recognize the rendered location of the query-relevant text and automatically display a selection environment 730. A best matches message 732 included in the selection environment 730 can echo the query terms (e.g., "new widget features") that are included in the user's original search query 604, as described with reference to Fig. 6. The selection environment 730 can further include the resource search tidbits (e.g., "R5T31 and RST32") associated with the query-relevant text passages, in this case selection environment options 734 and 736.
Specifically, the option 734 can be selected by the user to navigate to the portion of the web content containing the text 738 matching the resource search tidbit RST31, and the option 736 to navigate to the text 740 matching the resource search tidbit R5T32. The option 734 is depicted in Fig. 7B as containing the text "RST32" in order to make clear the mapping of the RST to its corresponding query-relevant text in the resource. However, the option 736 includes the tidbit "several of our new-featured widgets" which matches the query-relevant passage 740. In some implementations, including the one depicted in Fig. 7B, query terms that appear in tidbits and query-relevant text can be highlighted in any way (e.g., shown here using bolding).
In this example depiction of the web page 722, the query-relevant passages 738 and 740 are displayed in a phantom region 742 used here to indicate and extension of the web page 722 beyond the active viewport.
The query-relevant text is highlighted, and the text passages 710 and 712 correspond to the resource search tidbits (e.g., "RST31 and RST32") that are included in the resource search tidbit information 622 and correspond to the resource locator 614a (e.g., the URL "vvww.examplell.comibusiness/widget.php?p=93"). The Web browser on the client device 106 has accesses associations between the resource locator (e.g., the resource's URL) and the resource search tidbits are accessible from data gathered from document object model (DOM) and stored in computer memory.
Fig. 8 is a flow diagram of an example process 800 for performing a resource search operation. As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 800. More specifically, the process 800 can be executed, for example, by computer applications that are part of, our in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
In response to a query including one or more query terms, a search results page including search results responsive to the query is received (802). Each search result includes a resource locator that specifies the location of a resource identified as being relevant to the query. At least one search result includes a resource search tidbit. The resource search tidbit is query-relevant text extracted from the resource. The resource search tidbit is eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device. Referring to Fig. 1, for example, the search results page can be the web page 126 that displays the search results 111 provided by the search system 110. The search results 111 can include snippets from and links to resources 105 that the search system 110 identifies as responsive to the user's query 109. The search results 111 can be displayed or rendered within a graphical user interface on the screen of the user's client device 106. For example, if the user's query 109 is "pachinko 1975 Japan," then the search results page displayed as the web page 126 can include Web or Internet "hits" related to the query. As result, the user can see, within each of the search results 111, resource locators (e.g., links or URLs) for each resource 105, and snippets that can contain some or all of the individual query terms from the query 109.
A selection of the at least one search result is received at the client device (804).
For example, from the search results 111 displayed on the user's client device 106, the user can select one of the individual search results 111. Continuing with the current example, the user can select a particular search result, such as a search result 111 corresponding to the history of pachinko games in Japan. The user's selection of the particular search result 111, for example, can cause the Web browser application to obtain the URL (or other resource locator) that is associated with or embedded within the search result 111.
In response to the selection, the resource specified by the resource locator of the at least one search result is received (806). For example, using the URL of the selected search result 111, the Web browser application can access the corresponding resource 105. Access can occur, for example, over the network 102, using the URL of the resource 105.
The resource is rendered at the client device (808). As an example, the resource 105 can be displayed within the user's Web browser, such as to display the Web page that provides a history of pachinlco games in Japan.
A portion of text in the resource that matches the query-relevant text of the resource search tidbit is identified (810). As an example, referring to Fig.
1, an application on the client device 106 identifies query-relevant text 138 corresponding to the specific resource search tidbit 134.
The resource search operation is performed only if the identified portion of the text matching the query-relevant text of the resource search tidbit meets a search operation threshold condition (812). For example, in some implementations, certain threshold conditions must exist before the resource search operation is performed.
Specifically, unless the query-relevant text 138 corresponding to a specific resource search tidbit 134 appears below the "fold'. (e.g., a pre-dctcrmined number of pixels from the top of the display or outside of the current view port), the selection environment 132 is not displayed.
In some implementations, the selection environment 132 can display all resource search tidbits 134 no matter how many of the resource search tidbits' corresponding query-relevant text passages appear above or below the fold. In other implementations, the selection environment 132 displays only the resource search tidbits for which corresponding text passages are below the fold.
Fig. 9 is a flow diagram of an example process 900 for determining whether a portion of text in a resource matches the query-relevant text of a resource search tidbit.
As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 900. More specifically, the process 900 can be executed, for example, by computer applications that are part of, or in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
In some implementations, the resources that are processed by the search system 110 are cached resources, and the resources may have been updated by administrators or users after the resource is stored in a cache of the search system 110.
Accordingly, the copy of the resource stored in the cache of the search system 110 may not exactly match the copy of the resource that is provided by the website hosting the resource.
Accordingly, the client device, in some implementations, is configured to search for matching text based on an exact match and a closest match criteria.
A portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit is searched for (902). For example, a Web browser application running on the client device 106 can search for query-relevant text in a resource 105 that matches all of the text in the resource search tidbit.
A determination is made whether an exact match is found (904). If an exact match is found, then the portion of text in the resource that exactly matches the text of the resource search tidbit is identified (906). The identification can be used to highlight the text on some way, such as to highlight the query-relevant text 138 in the resource 105. The query-relevant text 138 in this case can contain all of the query terms (e.g., all of the terms in "pachinko 1975 Japan").
If no exact match is found, then the portion of text in the resource that most closely matches the text of the resource search tidbit is identified (908).
For example, in this case, the text identified in the resource 105 can include exact matches to most of the terms in the query 109 and close matches to the remaining terms. In some implementations, a portion of text with a minimum edit distance from the query-relevant text of the resource search tidbit relative to other portions of the text in the resource is identified as being the closest match. In some implementations, prefix matching can be used, such as to identify terms in the query-relevant text having the longest prefix match to terms in the resource search tidbit. In other implementations, postfix matching can be used, such as to identify terms in the query-relevant text having the longest postfix match to terms in the resource search tidbit. Other types of matching can also be used, e.g., longest string matching, etc.
Fig. 10 is a flow diagram of an example process 1000 for navigating to a portion of a resource in response to selecting a resource search tidbit. As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 1000. More specifically, the process 1000 can be executed, for example, by computer applications that are part of, our in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
A selection environment is displayed with the rendered resource, the selection environment displaying the portion of text in the resource that matches the query-relevant text of the resource search tidbit (1002). For example, referring to Fig. 1, when the Web browser executing on the user's client device 106 displays the page 128 corresponding to the resource 105, the selection environment 132 can also be displayed.
Specifically, the page 128 can be a web page related to pachinko games, and the selection environment 132 can include one or more resource search tidbits 134 corresponding to query-relevant text portions in the resource 105 that are related to the query terms of the query 109 (e.g. "pachinko 1975 Japan").
In response to receiving a selection of the displayed portion of the text, navigation occurs to the portion of the resource that includes the portion of text in the resource that matches the query-relevant text of the resource search tidbit (1004). For example, if the user selects a particular resource search tidbit 134, such as one containing the tidbit "Japan sent boatloads of reconditioned pachinkos to the US in 1975," then the user's Web browser can navigate to that portion of the resource 105 that contains that text. Specifically, the Web page can automatically scroll to the passage of interest as shown in Fig.1 and indicated by an updated display of the page 128 and a new position of the scroll bars 130.
Fig. 11 is a flow diagram of an example process 1100 for performing a resource search operation using an associating of resource locators and resource search tidbits.
As an example, the client device 106 (described with reference to Fig. 1) can perform the steps of the process 1100. More specifically, the process 1100 can be executed, for example, by computer applications that are part of, our in communication with, Web browser applications or other Web search and content rendering applications running on a user's client device 106.
From a document object model of the search results page, the resource search tidbit of the at least one search result is associated with the resource locator of the at least one search result (1102). For example, if the DOM representation of a search results page is in the form of a tree of node objects, the nodes of the tree can include the association of the resource search tidbit to a resource locator in a search result.
The association is stored in a computer memory (1104), and the association is accessed in the computer memory in response to a selection of a search result from the search results page (1106). For example, when the user selects one of the search results 111 from the Web page 126, the Web browser executing on the user's client device 106 can access the association of the resource search tidbits and the URL
corresponding to the selected search result.
The portion of text in the resource that matches the query-relevant text of the resource search tidbit associated with the resource locator of the at least one search result that matches the resource locator of the resource is identified (1108).
In some implementations, some of the processing described above as occurring at the client device 106 can instead occur at the server. For example, the search system 110 can perform most or all of the processing needed to determine eligibility of resource search tidbits.
In some implementations, the selection environment 132 can always be displayed regardless of whether the query-relevant text of the resource 105 already appears on the screen.
In some implementations, in order to manage large numbers of (e.g., more than ito 5) resource search tidbits (RSTs) in the selection environment 132, a scroll bar can be added to allow the user to position to an RST of interest, such as one further down the list.
In some implementations, additional tools can be added to the selection environment 132, such as a tool to check off passages that have already been read. In some implementations, the user can be provided with options to hide selected RSTs, such a RSTs most associated with a specific query term in which the user is no longer interested in seeing associated RSTs. In some implementations, user options can be provided to allow the RSTs to be sorted in specific ways (e.g., by one or more query terms). In some implementations, a search feature can be added to the selection environment 132 that allows the user, for example, to search for specific text strings within the collection of RSTs.
In some implementations, automatic highlighting can occur on the portions of text in a resource that match the text of the resource search tidbit, regardless of whether the resource search tidbit meets a search operation threshold condition. For example, the text can be highlighted in light yellow upon initial display of the resource. If a selection environment is displayed, and if the user then selects the RST
associated with the query-relevant text, the highlighting can be changed, for example, to a strong yellow.
In some implementations, once a user is thought to have read or reviewed a particular passage, highlighting can be changed to an off color, such as by changing the initially-highlighted in yellow text to violet or some other non-yellow highlighting color. In this way, the user can be informed of where he or she has already been on the Web page.
Although the examples above describe providing resource search tidbits that include query-relevant text, other types of data can be used to identify text for a resource search operation. For example, in some implementations, the server system 110 can provide a byte offset and byte length tuple that identifies the distance from the start of the resource, in bytes, of a tidbit that is of a size equal to the byte length.
Alternatively, other offset references can also be used, e.g., a paragraph number and/or sentence number. In these implementations, the matching operations at the client side can be changed accordingly.
In other implementations, the client device can request resource search tidbits for a resource from the search system 110 asynchronously, e.g., in response to selecting a resource from a search result. The search system 110 can then perform the resource search tidbit operations described above for only that resource, and provide the identified resource search tidbits to the client device for processing. This implementation reduces processing load on the search system 110.
Although the system above is described in the context of a server and a client device, in some implementations, some of the server operations can be performed on the client device. For example, when receiving search results, the browser application can treat the snippet as a default resource search tidbit, and can perform the eligibility operations, matching operations, highlighting operations, and search environment related operations described above using the snippet as input.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC
(application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
A
computer program may, but need not, correspond to a file in a file system. A
program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both.
The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
What is claimed is:
Claims (20)
1. A computer-implemented method performed by data processing apparatus, the method comprising:
receiving a query, the query including one or more query terms;
receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource;
for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result;
wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising:
rendering the resource referenced by the search result;
selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
receiving a query, the query including one or more query terms;
receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource;
for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result;
wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising:
rendering the resource referenced by the search result;
selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
2. The method of claim 1, wherein:
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result; and the query-relevant text of the resource search tidbit included in the search result is a subset of the query-relevant text of the snippet included in the search result.
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result; and the query-relevant text of the resource search tidbit included in the search result is a subset of the query-relevant text of the snippet included in the search result.
3. The method of claim 1, wherein:
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result;
the query-relevant text of the resource search tidbit included in the search result is independent of the query-relevant text of the snippet included in the search result.
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result;
the query-relevant text of the resource search tidbit included in the search result is independent of the query-relevant text of the snippet included in the search result.
4. The method of claim 1, wherein determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device comprises:
identifying query terms in a title section of the resource;
identifying query terms in the tidbit; and determining that the tidbit is eligible for the resource search operation if there is at least one query term identified in the tidbit that is not identified in the title section of the resource.
identifying query terms in a title section of the resource;
identifying query terms in the tidbit; and determining that the tidbit is eligible for the resource search operation if there is at least one query term identified in the tidbit that is not identified in the title section of the resource.
5. The method of claim 4, wherein:
identifying query terms in a title section of the resource comprises identifying query terms in the title section of the resources and synonyms of the query terms identified in the title section;
identifying query terms in the tidbit comprises identifying query terms in the tidbit and synonyms of the query terms in the tidbit as identified query terms; and determining that the tidbit is eligible for the resource search operation comprises determining that the tidbit is eligible for the resource search operation if there is at least one identified query term in the tidbit that is not identified in the title section of the resource.
identifying query terms in a title section of the resource comprises identifying query terms in the title section of the resources and synonyms of the query terms identified in the title section;
identifying query terms in the tidbit comprises identifying query terms in the tidbit and synonyms of the query terms in the tidbit as identified query terms; and determining that the tidbit is eligible for the resource search operation comprises determining that the tidbit is eligible for the resource search operation if there is at least one identified query term in the tidbit that is not identified in the title section of the resource.
6. The method of claim 1, wherein determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device comprises:
identifying query terms in a title section of the resource and the resource locator specifying the location of the resource;
identifying query terms in the tidbit; and determining that the tidbit is eligible for the resource search operation if there is at least one query term identified in the tidbit that is not identified in either of the title section of the resource and the resource locator specifying the location of the resource.
identifying query terms in a title section of the resource and the resource locator specifying the location of the resource;
identifying query terms in the tidbit; and determining that the tidbit is eligible for the resource search operation if there is at least one query term identified in the tidbit that is not identified in either of the title section of the resource and the resource locator specifying the location of the resource.
7. The method of claim 1, wherein determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device comprises determining that the tidbit is eligible for the resource search operation if all of the query terms are included in the tidbit.
8. The method of claim 1, wherein the query-relevant text of each tidbit is a contiguous portion of text extracted from the resource.
9. A computer-implemented method performed by a client device, the method comprising:
receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes resource search tidbits, each of the resource search tidbits being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device;
receiving a selection of the at least one search result at the client device;
receiving, in response to the selection, the resource specified by the resource locator of the at least one search result;
rendering the resource at the client device;
for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes resource search tidbits, each of the resource search tidbits being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device;
receiving a selection of the at least one search result at the client device;
receiving, in response to the selection, the resource specified by the resource locator of the at least one search result;
rendering the resource at the client device;
for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
10. The method of claim 9, wherein identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit comprises:
searching for a portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit;
if a portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit is found from the search, identifying the portion of text as matching the query-relevant text of the resource search tidbit; and if no portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit is found from the search, identifying a portion of text in the resource that most closely matches the query-relevant text of the resource tidbit as matching the query-relevant text of the resource search tidbit.
searching for a portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit;
if a portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit is found from the search, identifying the portion of text as matching the query-relevant text of the resource search tidbit; and if no portion of text in the resource that exactly matches the query-relevant text of the resource search tidbit is found from the search, identifying a portion of text in the resource that most closely matches the query-relevant text of the resource tidbit as matching the query-relevant text of the resource search tidbit.
11. The method of claim 10, wherein identifying the portion of text in the resource that most closely matches the query-relevant text of the resource tidbit comprises identifying the portion of the text in the resource that has a minimum edit distance from the query-relevant text of the resource search tidbit relative to other portions of the text in the resource.
12. The method of claim 9, wherein each resource search tidbit includes at least one query term that is not included in a title section of the resource.
13. The method of claim 9, wherein each resource search tidbit includes at least one query term that is not included in either of a title section of the resource and the resource locator specifying the location of the resource.
14. The method of claim 9, further comprising automatically highlighting the portion of text in the resource that matches the query-relevant text of the resource search tidbit in response to navigating to the portion of the text.
15. The method of claim 9, further comprising:
associating, from a document object model of the search results page, the resource search tidbit of the at least one search result with the resource locator of the at least one search result;
storing the association in a computer memory; and accessing the association in the computer memory in response to a selection of a search result from the search results page;
wherein identifying the portion of text in the resource that matches the query-relevant text of the resource search tidbit comprises identifying the portion of text in the resource that matches the query-relevant text of the resource search tidbit associated with the resource locator of the at least one search result that matches the resource locator of the resource.
associating, from a document object model of the search results page, the resource search tidbit of the at least one search result with the resource locator of the at least one search result;
storing the association in a computer memory; and accessing the association in the computer memory in response to a selection of a search result from the search results page;
wherein identifying the portion of text in the resource that matches the query-relevant text of the resource search tidbit comprises identifying the portion of text in the resource that matches the query-relevant text of the resource search tidbit associated with the resource locator of the at least one search result that matches the resource locator of the resource.
16. The method of claim 9, wherein:
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result; and the query-relevant text of the resource search tidbit included in the at least one search result is a subset of the query-relevant text of the snippet included in the at least one search result.
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result; and the query-relevant text of the resource search tidbit included in the at least one search result is a subset of the query-relevant text of the snippet included in the at least one search result.
17. The method of claim 9, wherein:
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result;
the query-relevant text of the resource search tidbit included in the at least one search result is independent of the query-relevant text of the snippet included in the at least one search result.
each search result includes a snippet, the snippet being query-relevant text extracted from the resource specified by the resource locator of the search result, and the snippet is rendered on the client device as part of the search result;
the query-relevant text of the resource search tidbit included in the at least one search result is independent of the query-relevant text of the snippet included in the at least one search result.
18. A system, comprising:
a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising:
receiving a query, the query including one or more query terms;
receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource;
for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result;
wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising:
rendering the resource referenced by the search result;
selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a resource search operation comprising, displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising:
receiving a query, the query including one or more query terms;
receiving, for each of a plurality of resources identified as being relevant to the query, one or more tidbits, each tidbit being query-relevant text extracted from the resource;
for each tidbit extracted from each resource:
determining whether the tidbit is eligible for a resource search operation that occurs in response to the resource being rendered on a client device; and in response to determining that the tidbit is eligible for a resource search operation, marking the tidbit as being a resource search tidbit;
providing to a client device, for each of the plurality of resources, a corresponding search result responsive to the query, each search result including a resource locator that specifies the location of the resource, wherein at least one search result includes resource search tidbits, each of which are not rendered on the client device as part of the search result;
wherein a selection of the at least one search result at the client device causes the client device to perform operations comprising:
rendering the resource referenced by the search result;
selecting only resource search tidbits for which a portion of text in the resource that matches query-relevant text of a resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for the selected resource search tidbits performing a resource search operation comprising, displaying with the rendered resource a selection environment that includes a respective selection environment option for each selected resource search tidbit, and wherein a selection of each respective selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the respectively selected resource search tidbit.
19. A system, comprising:
a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising:
receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device;
receiving a selection of the at least one search result at the client device;
receiving, in response to the selection, the resource specified by the resource locator of the at least one search result;
rendering the resource at the client device;
for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
a data processing apparatus comprising one or more computers; and a data store in data communication with the data processing apparatus and storing instructions executable by a data processing apparatus and that upon execution cause the data processing apparatus to perform operations comprising:
receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device;
receiving a selection of the at least one search result at the client device;
receiving, in response to the selection, the resource specified by the resource locator of the at least one search result;
rendering the resource at the client device;
for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
20. A non-transitory computer readable storage device storing instructions that when executed by a data processing apparatus cause the data processing apparatus to perform operations comprising:
receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device;
receiving a selection of the at least one search result at the client device;
receiving, in response to the selection, the resource specified by the resource locator of the at least one search result;
rendering the resource at the client device;
for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
receiving, in response to a query including one or more query terms, a search results page including search results responsive to the query, each search result including a resource locator that specifies the location of a resource identified as being relevant to the query, and wherein at least one search result includes a resource search tidbit, the resource search tidbit being query-relevant text extracted from the resource and eligible for a research search operation in response to the resource specified by the resource locator of the at least one search result being rendered on the client device;
receiving a selection of the at least one search result at the client device;
receiving, in response to the selection, the resource specified by the resource locator of the at least one search result;
rendering the resource at the client device;
for each resource search tidbit:
identifying a portion of text in the resource that matches the query-relevant text of the resource search tidbit; and determining whether the identified portion of the text matching the query-relevant text of the resource search tidbit is not within a viewport of the client device when the resource is initially rendered on the client device; and only for each resource search tidbit determined to not be within the viewport of the client device when the resource is initially rendered on the client device, performing a resource search operation comprising displaying with the rendered resource a selection environment that includes a selection environment option that corresponds to the resource search tidbit, and wherein a selection of the selection environment option causes the client device to navigate to a portion of resource that includes the identified portion of the text matching the resource search tidbit.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US26768109P | 2009-12-08 | 2009-12-08 | |
US61/267,681 | 2009-12-08 | ||
US12/839,721 US8392449B2 (en) | 2009-12-08 | 2010-07-20 | Resource search operations |
US12/839,721 | 2010-07-20 | ||
PCT/US2010/059415 WO2011071990A2 (en) | 2009-12-08 | 2010-12-08 | Resource search operations |
Publications (2)
Publication Number | Publication Date |
---|---|
CA2783344A1 CA2783344A1 (en) | 2011-06-16 |
CA2783344C true CA2783344C (en) | 2018-01-16 |
Family
ID=44083043
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CA2783344A Active CA2783344C (en) | 2009-12-08 | 2010-12-08 | Resource search operations |
Country Status (5)
Country | Link |
---|---|
US (2) | US8392449B2 (en) |
EP (1) | EP2510463A2 (en) |
AU (1) | AU2010328181B2 (en) |
CA (1) | CA2783344C (en) |
WO (1) | WO2011071990A2 (en) |
Families Citing this family (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2494598A (en) | 2010-06-11 | 2013-03-13 | Doat Media Ltd | A system and methods thereof for enhancing a user's search experience |
US10713312B2 (en) | 2010-06-11 | 2020-07-14 | Doat Media Ltd. | System and method for context-launching of applications |
US9529918B2 (en) | 2010-06-11 | 2016-12-27 | Doat Media Ltd. | System and methods thereof for downloading applications via a communication network |
US9141702B2 (en) | 2010-06-11 | 2015-09-22 | Doat Media Ltd. | Method for dynamically displaying a personalized home screen on a device |
US9552422B2 (en) | 2010-06-11 | 2017-01-24 | Doat Media Ltd. | System and method for detecting a search intent |
US20120226676A1 (en) * | 2010-06-11 | 2012-09-06 | Doat Media Ltd. | System and methods thereof for adaptation of a free text query to a customized query set |
US9372885B2 (en) | 2010-06-11 | 2016-06-21 | Doat Media Ltd. | System and methods thereof for dynamically updating the contents of a folder on a device |
US9069443B2 (en) | 2010-06-11 | 2015-06-30 | Doat Media Ltd. | Method for dynamically displaying a personalized home screen on a user device |
KR101741698B1 (en) * | 2010-10-18 | 2017-05-31 | 삼성전자주식회사 | Method for providing search service and display apparatus applying the same |
KR101842457B1 (en) * | 2011-03-09 | 2018-03-27 | 엘지전자 주식회사 | Mobile twrminal and text cusor operating method thereof |
US8655913B1 (en) * | 2012-03-26 | 2014-02-18 | Google Inc. | Method for locating web elements comprising of fuzzy matching on attributes and relative location/position of element |
US11157570B2 (en) * | 2012-05-24 | 2021-10-26 | Evernote Corporation | Related notes and multi-layer search in personal and shared content |
US9348846B2 (en) | 2012-07-02 | 2016-05-24 | Google Inc. | User-navigable resource representations |
US9235858B1 (en) * | 2012-07-25 | 2016-01-12 | Amazon Technologies, Inc. | Local search of network content |
US8965880B2 (en) * | 2012-10-05 | 2015-02-24 | Google Inc. | Transcoding and serving resources |
US20150169701A1 (en) * | 2013-01-25 | 2015-06-18 | Google Inc. | Providing customized content in knowledge panels |
US9300760B2 (en) * | 2013-01-28 | 2016-03-29 | Google Inc. | Machine-specific instruction set translation |
WO2014146230A1 (en) * | 2013-03-18 | 2014-09-25 | Nokia Corporation | Method and apparatus for querying resources through search field |
US9230023B2 (en) * | 2013-04-16 | 2016-01-05 | Google Inc. | Search suggestion and display environment |
WO2015187126A1 (en) * | 2014-06-02 | 2015-12-10 | Hewlett-Packard Development Company, L.P. | Identifying relevant topics for recommending a resource |
CN105138697B (en) * | 2015-09-25 | 2018-11-13 | 百度在线网络技术（北京）有限公司 | A kind of search result shows method, apparatus and system |
US11157493B2 (en) * | 2015-12-30 | 2021-10-26 | Facebook, Inc. | Optimistic data fetching and rendering |
US10621237B1 (en) * | 2016-08-01 | 2020-04-14 | Amazon Technologies, Inc. | Contextual overlay for documents |
US11816135B2 (en) * | 2019-02-26 | 2023-11-14 | Greyb Research Private Limited | Method, system, and computer program product for retrieving relevant documents |
Family Cites Families (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5946678A (en) * | 1995-01-11 | 1999-08-31 | Philips Electronics North America Corporation | User interface for document retrieval |
US6895430B1 (en) * | 1999-10-01 | 2005-05-17 | Eric Schneider | Method and apparatus for integrating resolution services, registration services, and search services |
US5991739A (en) * | 1997-11-24 | 1999-11-23 | Food.Com | Internet online order method and apparatus |
US6154738A (en) * | 1998-03-27 | 2000-11-28 | Call; Charles Gainor | Methods and apparatus for disseminating product information via the internet using universal product codes |
US6772139B1 (en) * | 1998-10-05 | 2004-08-03 | Smith, Iii Julius O. | Method and apparatus for facilitating use of hypertext links on the world wide web |
US6763496B1 (en) * | 1999-03-31 | 2004-07-13 | Microsoft Corporation | Method for promoting contextual information to display pages containing hyperlinks |
US6785671B1 (en) * | 1999-12-08 | 2004-08-31 | Amazon.Com, Inc. | System and method for locating web-based product offerings |
US7325201B2 (en) * | 2000-05-18 | 2008-01-29 | Endeca Technologies, Inc. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US6704024B2 (en) * | 2000-08-07 | 2004-03-09 | Zframe, Inc. | Visual content browsing using rasterized representations |
US20020103920A1 (en) * | 2000-11-21 | 2002-08-01 | Berkun Ken Alan | Interpretive stream metadata extraction |
US6701311B2 (en) * | 2001-02-07 | 2004-03-02 | International Business Machines Corporation | Customer self service system for resource search and selection |
US7404142B1 (en) * | 2001-06-29 | 2008-07-22 | At&T Delaware Intellectual Property, Inc. | Systems and method for rapid presentation of structured digital content items |
US20030055812A1 (en) * | 2001-09-14 | 2003-03-20 | Xccelerator Technologies, Inc. | Vehicle parts monitoring system and associated method |
US7143362B2 (en) * | 2001-12-28 | 2006-11-28 | International Business Machines Corporation | System and method for visualizing and navigating content in a graphical user interface |
US20030154221A1 (en) * | 2002-02-13 | 2003-08-14 | Sun Microsystems, Inc. | System and method for accessing file system entities |
US7333991B2 (en) * | 2002-08-05 | 2008-02-19 | Todd E. Vander Hill | Digital design and maintenance system and method |
GB0316806D0 (en) * | 2003-07-17 | 2003-08-20 | Ivis Group Ltd | Improved search engine |
US8150824B2 (en) * | 2003-12-31 | 2012-04-03 | Google Inc. | Systems and methods for direct navigation to specific portion of target document |
US8370342B1 (en) * | 2005-09-27 | 2013-02-05 | Google Inc. | Display of relevant results |
WO2007084616A2 (en) * | 2006-01-18 | 2007-07-26 | Ilial, Inc. | System and method for context-based knowledge search, tagging, collaboration, management and advertisement |
US20080235209A1 (en) * | 2007-03-20 | 2008-09-25 | Samsung Electronics Co., Ltd. | Method and apparatus for search result snippet analysis for query expansion and result filtering |
US7805432B2 (en) * | 2006-06-15 | 2010-09-28 | University College Dublin National University Of Ireland, Dublin | Meta search engine |
US7698344B2 (en) * | 2007-04-02 | 2010-04-13 | Microsoft Corporation | Search macro suggestions relevant to search queries |
US7672938B2 (en) * | 2007-10-05 | 2010-03-02 | Microsoft Corporation | Creating search enabled web pages |
US8364694B2 (en) * | 2007-10-26 | 2013-01-29 | Apple Inc. | Search assistant for digital media assets |
US7853587B2 (en) * | 2008-01-31 | 2010-12-14 | Microsoft Corporation | Generating search result summaries |
US20090204602A1 (en) * | 2008-02-13 | 2009-08-13 | Yahoo! Inc. | Apparatus and methods for presenting linking abstracts for search results |
US7937395B2 (en) * | 2008-02-22 | 2011-05-03 | Tigerlogic Corporation | Systems and methods of displaying and re-using document chunks in a document development application |
US9195754B2 (en) * | 2008-06-13 | 2015-11-24 | International Business Machines Corporation | Expansion of search result information |
TWI393018B (en) * | 2009-02-06 | 2013-04-11 | Inst Information Industry | Method and system for instantly expanding keyterm and computer readable and writable recording medium for storing program for instantly expanding keyterm |
US8250053B2 (en) * | 2009-02-24 | 2012-08-21 | Microsoft Corporation | Intelligent enhancement of a search result snippet |
US8214357B2 (en) * | 2009-02-27 | 2012-07-03 | Research In Motion Limited | System and method for linking ad tagged words |
US8316039B2 (en) * | 2009-05-18 | 2012-11-20 | Microsoft Corporation | Identifying conceptually related terms in search query results |
US8694505B2 (en) * | 2009-09-04 | 2014-04-08 | Microsoft Corporation | Table of contents for search query refinement |
US8725717B2 (en) * | 2009-12-23 | 2014-05-13 | Palo Alto Research Center Incorporated | System and method for identifying topics for short text communications |
US20120030013A1 (en) * | 2010-07-27 | 2012-02-02 | Caroline Tsay | Slideshows in search |
US8639680B1 (en) * | 2012-05-07 | 2014-01-28 | Google Inc. | Hidden text detection for search result scoring |
-
2010
- 2010-07-20 US US12/839,721 patent/US8392449B2/en active Active
- 2010-12-08 WO PCT/US2010/059415 patent/WO2011071990A2/en active Application Filing
- 2010-12-08 AU AU2010328181A patent/AU2010328181B2/en active Active
- 2010-12-08 CA CA2783344A patent/CA2783344C/en active Active
- 2010-12-08 EP EP10795516A patent/EP2510463A2/en not_active Ceased
-
2013
- 2013-02-22 US US13/773,952 patent/US20130179437A1/en not_active Abandoned
Also Published As
Publication number | Publication date |
---|---|
WO2011071990A3 (en) | 2011-08-04 |
CA2783344A1 (en) | 2011-06-16 |
EP2510463A2 (en) | 2012-10-17 |
US20130179437A1 (en) | 2013-07-11 |
US8392449B2 (en) | 2013-03-05 |
AU2010328181B2 (en) | 2015-04-09 |
WO2011071990A2 (en) | 2011-06-16 |
AU2010328181A1 (en) | 2012-06-28 |
US20110137933A1 (en) | 2011-06-09 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CA2783344C (en) | Resource search operations | |
US9280588B2 (en) | Search result previews | |
US9355185B2 (en) | Infinite browse | |
US8538989B1 (en) | Assigning weights to parts of a document | |
US8898583B2 (en) | Systems and methods for providing information regarding semantic entities included in a page of content | |
US9323808B1 (en) | Predictive query suggestion caching | |
US9798820B1 (en) | Classification of keywords | |
KR101060594B1 (en) | Keyword Extraction and Association Network Configuration for Document Data | |
RU2696305C2 (en) | Browsing images through intellectually analyzed hyperlinked fragments of text | |
US20090144240A1 (en) | Method and systems for using community bookmark data to supplement internet search results | |
US20140372873A1 (en) | Detecting Main Page Content | |
US20100146012A1 (en) | Previewing search results for suggested refinement terms and vertical searches | |
US9116992B2 (en) | Providing time series information with search results | |
US11580177B2 (en) | Identifying information using referenced text | |
EP3053063B1 (en) | Transition from first search results environment to second search results environment | |
US7698329B2 (en) | Method for improving quality of search results by avoiding indexing sections of pages | |
JP2007334502A (en) | Retrieving device, method, and program | |
US20150161279A1 (en) | Displaying Local Site Name Information with Search Results | |
US20140201614A1 (en) | Annotating search results with images | |
US9697281B1 (en) | Autocomplete search methods | |
KR101421819B1 (en) | Method for providing keyword search result using balloon in an online environment | |
JP2008262442A (en) | Method for displaying retrieval key data, and server |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
EEER | Examination request |
Effective date: 20151208 |
US7421432B1 - Hypertext browser assistant - Google Patents
Hypertext browser assistant Download PDFInfo
- Publication number
- US7421432B1 US7421432B1 US09/734,886 US73488600A US7421432B1 US 7421432 B1 US7421432 B1 US 7421432B1 US 73488600 A US73488600 A US 73488600A US 7421432 B1 US7421432 B1 US 7421432B1
- Authority
- US
- United States
- Prior art keywords
- document
- links
- documents
- linked
- determining
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
- G06F16/24534—Query rewriting; Transformation
- G06F16/24542—Plan optimisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/954—Navigation, e.g. using categorised browsing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99932—Access augmentation or optimizing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99934—Query formulation, input preparation, or translation
Definitions
- the present invention relates generally to information retrieval systems and, more particularly, to a hypertext browsing assistant that improves search-related activities.
- the hypertext browser assistant may permit a user to use a search engine or hierarchical directory without leaving a current document; may prefetch certain documents to reduce the waiting time for the user; and may provide links to documents relating to information in a retrieved document.
- a method prefetches documents associated with a search.
- the method includes identifying a document that includes one or more links, where each of the links corresponds to a linked document; analyzing each of the links in the document; and prefetching the linked documents corresponding to a number of the links.
- a method supplements a document with links to related documents.
- the method includes analyzing a document to identify one or more pieces of information; determining a link to a related document for each of the identified pieces of information; and embedding the links in the document.
- FIG. 1 is a diagram of an exemplary network in which systems and methods consistent with the present invention may be implemented
- FIG. 2 is an exemplary diagram of a client of FIG. 1 in an implementation consistent with the present invention
- FIG. 3 is a diagram of an exemplary computer-readable medium used by the clients of FIG. 1 according to an implementation consistent with the present invention
- FIG. 5 is an exemplary diagram of a server of FIG. 1 according to an implementation consistent with the present invention.
- FIG. 7 illustrates possible search results provided by a search engine in response to an exemplary paragraph selection
- FIG. 10 illustrates a document modified to include additional links in a manner consistent with the present invention.
- FIG. 1 is an exemplary diagram of a network 100 in which systems and methods consistent with the present invention may be implemented.
- the network 100 may include multiple clients 110 connected to multiple servers 120 - 130 via a network 140 .
- the network 140 may include a local area network (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the Internet, a similar or dissimilar network, or a combination of networks.
- PSTN Public Switched Telephone Network
- An intranet such as the Public Switched Telephone Network
- the Internet a similar or dissimilar network
- FIG. 1 is an exemplary diagram of a network 100 in which systems and methods consistent with the present invention may be implemented.
- the network 100 may include multiple clients 110 connected to multiple servers 120 - 130 via a network 140 .
- the network 140 may include a local area network (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the Internet, a
- the clients 110 may include devices, such as wireless telephones, personal computers, personal digital assistants (PDAs), lap tops, etc., threads or processes running on these devices, and/or objects executable by these devices.
- the servers 120 - 130 may include server devices, threads, and/or objects that operate upon, search, or maintain documents in a manner consistent with the present invention.
- the clients 110 and servers 120 - 130 may connect to the network 140 via wired, wireless, or optical connections.
- the server 120 may include a search engine 125 usable by the clients 110 .
- the servers 130 may store documents accessible by the clients 110 .
- FIG. 2 is an exemplary diagram of a client 110 in an implementation consistent with the present invention.
- the client 110 may include a bus 210 , a processor 220 , a main memory 230 , a read only memory (ROM) 240 , a storage device 250 , one or more input devices 260 , one or more output devices 270 , and a communication interface 280 .
- the bus 210 may include one or more conductors that permit communication among the components of the client 110 .
- the processor 220 may include any type of conventional processor or microprocessor that interprets and executes instructions.
- the main memory 230 may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by the processor 220 .
- the ROM 240 may include a conventional ROM device or another type of static storage device that stores static information and instructions for use by the processor 220 .
- the storage device 250 may include a magnetic and/or optical recording medium and its corresponding drive.
- the input devices 260 may include one or more conventional mechanisms that permit a user to input information to the client 110 , such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc.
- the output devices 270 may include one or more conventional mechanisms that output information to the user, including a display, a printer, a speaker, etc.
- the communication interface 280 may include any transceiver-like mechanism that enables the client 110 to communicate with other devices and/or systems.
- the communication interface 280 may include mechanisms for communicating with another device or system via a network, such as network 140 .
- the clients 110 perform certain search-related operations.
- the clients 110 may perform these operations in response to processor 220 executing software instructions contained in a computer-readable medium, such as memory 230 .
- a computer-readable medium may be defined as one or more memory devices and/or carrier waves.
- the software instructions may be read into memory 230 from another computer-readable medium, such as the data storage device 250 , or from another device via the communication interface 280 .
- the software instructions contained in memory 230 causes processor 220 to perform processes that will be described later.
- hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the present invention.
- the present invention is not limited to any specific combination of hardware circuitry and software.
- FIG. 3 is a diagram of an exemplary computer-readable medium used by the clients 110 according to an implementation consistent with the present invention.
- the computer-readable medium includes memory 230 .
- the memory 230 may include an operating system 310 , browser software 320 , browser assistant software 330 , miscellaneous other software 340 , and miscellaneous data 350 .
- the browser assistant 330 may perform many search-related functions to enhance a user's search experience.
- the browser assistant 330 may attach to the browser 320 to provide additional functionality to the user.
- FIG. 5 is an exemplary diagram of the server 120 according to an implementation consistent with the present invention.
- the servers 130 may be similarly configured.
- the server 120 may include a bus 510 , a processor 520 , a memory 530 , one or more input devices 540 , one or more output devices 550 , and a communication interface 560 .
- the bus 510 permits communication among the components of the server 120 .
- the processor 520 may include any type of conventional processor or microprocessor that interprets and executes instructions.
- the memory 530 may include a RAM or another type of dynamic storage device that stores information and instructions for execution by the processor 520 ; a ROM or another type of static storage device that stores static information and instructions for use by the processor 520 ; and/or some other type of magnetic or optical recording medium and its corresponding drive.
- the server 120 performs certain search-related operations.
- the server 120 may perform these operations in response to processor 520 executing software instructions contained in a computer-readable medium, such as memory 530 .
- the software instructions may be read into memory 530 from another computer-readable medium or from another device via the communication interface 560 .
- the software instructions contained in memory 530 causes processor 520 to perform processes that will be described later.
- hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the present invention.
- the present invention is not limited to any specific combination of hardware circuitry and software.
- FIG. 6 is a flowchart of exemplary processing for initiating a search in accordance with an implementation consistent with the present invention. Processing may begin with a user activating web browser software, such as browser 320 ( FIG. 3 ), on a client, such as client 110 ( FIG. 1 ). The user may then provide an address, such as a Uniform Resource Locator (URL), of a document to the browser 320 or a query that the browser 320 may use to obtain one or more documents using a hierarchical directory or search engine, such as the search engine 125 maintained by the server 120 .
- URL Uniform Resource Locator
- the user may click on the word, position a pointer, such as a cursor, over the word, or highlight the word in a conventional manner. If selecting a phrase or paragraph, the user may highlight the words forming the phrase or paragraph. If selecting an entire document, the user may select a software button or menu item provided, for example, by the browser assistant 330 .
- the browser assistant 330 may detect the selection by the user, automatically or in response to an action by the user [act 620 ]. If the user selected a word or phrase, the browser assistant 330 may analyze the document to identify the word or phrase selected. In the case of a word selection, the browser assistant 330 may treat the selected word as a search term for a query to the search engine 125 . In the case of a phrase selection, the browser assistant 330 may treat the entire phrase or the words making up the phrase as one or more search terms for a query. For example, the browser assistant 330 may treat the entire phrase as a single search term. Alternatively, the browser assistant 330 may combine, such as by ANDing, the words of the phrase together for the query. In the latter case, the browser assistant 330 may also analyze the words making up the phrase and discard stop words, such as “the,” “a,” “an,” “of,” etc.
- the browser assistant 330 may analyze the paragraph or document to determine the main textual concepts.
- the browser assistant 330 may use different conventional techniques to determine the main textual concepts.
- the browser assistant 330 may use a summarization technique, such as the one described in M. Dyer, “In-Depth Understanding,” Cambridge, Mass.: MIT Press, 1983, to determine the main textual concepts.
- the browser assistant 330 may use a vector space model, such as the one described in G. Salton, “The SMART Environment for Retrieval System Evaluation—Advantages and Problem Areas,” Information Retrieval Experiment, K. Sparck Jones (ed.) London, Butterworth, pp.
- the browser assistant 330 may generate a search query based on one or more search terms from the selected word, phrase, paragraph, or document [act 630 ].
- the browser assistant 330 may generate a request to query the search engine 125 using the search query and send the request to the search engine 125 [act 640 ].
- the search engine 125 may generate data that contains the search results and send the search results to the browser assistant 330 [act 650 ].
- the search engine 125 provides the search results as a HyperText Markup Language (HTML) document, similar to search results provided by conventional search engines.
- the search engine 125 may provide the search results according to a protocol agreed upon by the search engine 125 and the browser assistant 330 .
- the search results include links to documents (e.g., web pages) and possibly a textual description of the links.
- the search results include links to directory nodes within a hierarchical directory and possibly textual descriptions for the directory nodes.
- the search results include a combination of these links.
- the browser assistant 330 receives the list of result links from the search engine 125 [act 660 ]. If the list of result links takes the form of an HTML document, then the browser assistant 330 may parse the document to determine the links that are search results. The browser assistant 330 may then present the result links to the user [act 670 ]. For example, the browser assistant 330 may present the result links as a web page in a browser window. Alternatively, the browser assistant 330 may present the result links as a list of selectable items within a user interface of the browser assistant 330 . In one instance, the user interface of the browser assistant 330 includes a pull-down or pop-up menu. In another instance, the user interface includes a side-bar or a scrolling list. The browser assistant 330 may also provide a select-box next to each of the result links to facilitate selection of one or more links by the user. The browser assistant 330 may then retrieve documents corresponding to the selected links.
- the browser assistant 330 may also present links related to the result links, either in conjunction to or separately from the result links.
- the browser assistant 330 may query a server, such as the server 120 or 130 , that includes a related-links finder that identifies related links.
- the browser assistant 330 may send a query to the server 120 / 130 for each link individually or for all links collectively.
- the server 120 / 130 may then identify related links and return them to the browser assistant 330 .
- the browser assistant 330 may identify the related links itself.
- FIG. 8 is a flowchart of exemplary processing for prefetching documents in accordance with an implementation consistent with the present invention. Processing may begin with a user activating web browser software, such as browser 320 ( FIG. 3 ), on a client, such as client 110 ( FIG. 1 ). The user may then provide an address, such as a URL, of a document to the browser 320 or a query that the browser 320 may use to obtain one or more documents using a hierarchical directory or search engine, such as the search engine 125 maintained by the server 120 .
- a hierarchical directory or search engine such as the search engine 125 maintained by the server 120 .
- the score of a document may be determined as a function of its clickthrough rate (i.e., the number of times users clicked on the document over a period of time).
- the clickthrough rate may be obtained in a conventional manner by redirecting user clicks through the server hosting the document. Clickthrough measurements are commonplace in many current web sites, such as advertising web sites.
- the score of a document may be determined based on input received before or at the time the document is accessed.
- the input might include the user query that resulted in the document being accessed.
- the score of a document may be based on the match between the query and the contents of the document.
- the input may include a user profile.
- the user profile may include a set of words that have appeared in documents that the user has previously accessed, along with a score for each word denoting its estimated importance.
- the score of a document may be determined by considering the user profile to be a weighted query and evaluating the match between the user profile and the contents of the document.
- scoring techniques are meant to be examples. Other scoring techniques or combinations of scoring techniques may be used in other implementations consistent with the present invention.
- the browser assistant 330 may determine the scores itself. For example, the browser assistant 330 may record information regarding the documents that a user previously accessed and determine the scores based on this information. Alternatively, the browser assistant 330 may interact with a server, such as the server 120 . In this case, the server 120 may maintain information regarding the scores of documents maintained by other servers in the network 140 . The server 120 may obtain information regarding the documents in the network 140 using, for example, a spider (i.e., a program that prowls a network to locate publicly accessible resources, such as documents). The browser assistant 330 may identify to the server 120 the document currently being accessed by the user. The server 120 may then inform the browser assistant 330 of the scores of the linked documents.
- a spider i.e., a program that prowls a network to locate publicly accessible resources, such as documents.
- the browser assistant 330 may perform the DNS lookup for k links with the highest scores, where k is an integer. Alternatively, the browser assistant 330 may perform the DNS lookup for links with scores above a predetermined threshold.
- the browser assistant 330 may use the results of the DNS lookup to prefetch one or more documents corresponding to the links [act 840 ].
- the browser assistant 330 may use conventional techniques to prefetch the documents and may store the documents in local memory (e.g., memory 230 or storage device 250 ).
- the actual number of documents that the browser assistant 330 prefetches may vary based on performance considerations. For example, the browser assistant 330 may prefetch documents corresponding to all or some of the links, as described above.
- the browser 320 may use the address or query to obtain a document maintained by a server, such as server 130 , in the network 140 and may present the document to the user [act 910 ].
- the browser assistant 330 may analyze the document to identify information, such as names of people, companies, or organizations, products, publications, and/or key phrases [act 920 ]. If the document takes the form of an HTML document, then the browser assistant 330 may parse the document to identify the information.
- the browser assistant 330 may embed a link into the document [act 930 ].
- the browser assistant 330 may embed into the document a link to a document whose incoming (i.e., linking) anchor text contains the name (e.g., the homepage corresponding to the name).
- the browser assistant 330 may embed into the document a link to the producers, sellers, and/or reviews of the product.
- the browser assistant 330 may embed into the document a link to the URL where the publication can be found.
- the browser assistant 330 may embed into the document a link to a high quality document containing the key phrase.
- the browser assistant 330 may generate a query containing the name, product, publication title, or key phrase.
- the browser assistant 330 may send the query to a search engine, such as the search engine 125 .
- the search engine 125 may return a document containing the search results.
- the search results may take the form of a list of links.
- the browser assistant 330 may parse the document, extract one of the links, and use the URL corresponding to the link as the link for the name, product, publication title, or key phrase.
- the browser assistant 330 may then modify the document to add the links [act 940 ].
- the browser assistant 330 may add the links next to the corresponding name(s), product(s), publication(s), or key phrase(s) in the document or may list the links at another portion of the document.
- the browser assistant 330 may use other techniques to add the links. For example, the browser assistant 330 may convert a name, product, publication, and/or key phrase already present in the document into a hyperlink.
- the browser assistant 330 may then present the modified document to the user [act 950 ]. For example, the browser assistant 330 may present the modified document as a web page in a browser window.
Abstract
A system facilitates a search by a user. The system detects selection of one or more words in a document currently accessed by the user, generates a search query using the selected word(s), and retrieves a document based on the search query. When the document includes one or more links corresponding to a linked document, the system analyzes each of the links, prefetches the linked documents corresponding to a number of the links, and presents the document to the user. The system receives selection of one of the links and retrieves the linked document corresponding to the selected link. The system identifies one or more pieces of information in the retrieved document, determines a link to a related document for each of the identified pieces of information, and provides the determined links with the related document to the user.
Description
This application claims priority under 35 U.S.C. § 119(e) based on U.S. Provisional Application Ser. No. 60/171,019, filed Dec. 15, 1999, the disclosure of which is incorporated herein by reference.
A. Field of the Invention
The present invention relates generally to information retrieval systems and, more particularly, to a hypertext browsing assistant that improves search-related activities.
B. Description of Related Art
Conventional techniques for searching a hypertext medium, such as the World Wide Web (“web”), are replete with deficiencies. For example, a user typically uses a web browser, such as Netscape Navigator or Microsoft Internet Explorer, to perform a search on the web. Many conventional techniques for searching the web require that the user leave the document the user is currently viewing. To perform the search, the user typically must access a search engine or hierarchical web directory and enter one or more keywords. This a time-consuming and cumbersome process.
Also, conventional web-searching techniques are slow because the user must wait for the desired document to load into the web browser. This can be a time consuming process that often depends on the speed of the user's connection to the web.
The documents, such as web pages, that result from these searches frequently do not contain links to all of the topics discussed in the documents and the links they do contain often include insufficient information regarding the link. As a result, it is often difficult to distinguish which links point to high quality and relevant content and which do not.
Therefore, there exists a need for overcoming the deficiencies of conventional searching techniques.
Systems and methods consistent with the present invention address this and other needs by providing a hypertext browser assistant that provides additional functionality to conventional web browsers. For example, the hypertext browser assistant may permit a user to use a search engine or hierarchical directory without leaving a current document; may prefetch certain documents to reduce the waiting time for the user; and may provide links to documents relating to information in a retrieved document.
In accordance with the purpose of the invention as embodied and broadly described herein, a method facilitates the performance of a search. The method includes obtaining selection of one or more words in a document currently accessed by a user; generating a search query using the selected word(s); retrieving search results based on the search query; and presenting the search results to the user.
In another implementation consistent with the present invention, a method prefetches documents associated with a search. The method includes identifying a document that includes one or more links, where each of the links corresponds to a linked document; analyzing each of the links in the document; and prefetching the linked documents corresponding to a number of the links.
In a further implementation consistent with the present invention, a method supplements a document with links to related documents. The method includes analyzing a document to identify one or more pieces of information; determining a link to a related document for each of the identified pieces of information; and embedding the links in the document.
The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate an embodiment of the invention and, together with the description, explain the invention. In the drawings,
The following detailed description of the invention refers to the accompanying drawings. The same reference numbers in different drawings identify the same or similar elements. Also, the following detailed description does not limit the invention. Instead, the scope of the invention is defined by the appended claims and equivalents.
Systems and methods consistent with the present invention provide a browser assistant that provides additional search-related functionality to a web browser to improve a user's searching experience. For example, the browser assistant may facilitate a search by permitting the user to use a search engine or hierarchical directory without leaving a current document; may expedite a search by prefetching certain documents; and may improve search results by providing links to documents related to information in the current document.
The clients 110 may include devices, such as wireless telephones, personal computers, personal digital assistants (PDAs), lap tops, etc., threads or processes running on these devices, and/or objects executable by these devices. The servers 120-130 may include server devices, threads, and/or objects that operate upon, search, or maintain documents in a manner consistent with the present invention. The clients 110 and servers 120-130 may connect to the network 140 via wired, wireless, or optical connections.
In an implementation consistent with the present invention, the server 120 may include a search engine 125 usable by the clients 110. The servers 130 may store documents accessible by the clients 110.
The processor 220 may include any type of conventional processor or microprocessor that interprets and executes instructions. The main memory 230 may include a random access memory (RAM) or another type of dynamic storage device that stores information and instructions for execution by the processor 220. The ROM 240 may include a conventional ROM device or another type of static storage device that stores static information and instructions for use by the processor 220. The storage device 250 may include a magnetic and/or optical recording medium and its corresponding drive.
The input devices 260 may include one or more conventional mechanisms that permit a user to input information to the client 110, such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc. The output devices 270 may include one or more conventional mechanisms that output information to the user, including a display, a printer, a speaker, etc. The communication interface 280 may include any transceiver-like mechanism that enables the client 110 to communicate with other devices and/or systems. For example, the communication interface 280 may include mechanisms for communicating with another device or system via a network, such as network 140.
As will be described in detail below, the clients 110, consistent with the present invention, perform certain search-related operations. The clients 110 may perform these operations in response to processor 220 executing software instructions contained in a computer-readable medium, such as memory 230. A computer-readable medium may be defined as one or more memory devices and/or carrier waves.
The software instructions may be read into memory 230 from another computer-readable medium, such as the data storage device 250, or from another device via the communication interface 280. The software instructions contained in memory 230 causes processor 220 to perform processes that will be described later. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the present invention. Thus, the present invention is not limited to any specific combination of hardware circuitry and software.
The operating system 310 may include conventional operating system software, such as the Windows, Unix, or Linux operating systems. The browser software 320 may include conventional web browser software, such as the Microsoft Internet Explorer or Netscape Navigator browsers.
The browser assistant software 330 may include a plug-in, an applet, a dynamic link library (DLL), or a similar executable object or process. The client 110 may obtain the plug-in from the server 120 or from a third party, such as a third party server, disk, tape, network, CD-ROM, etc. Alternatively, the plug-in may be pre-installed on the client 110.
In another implementation consistent with the present invention, the browser assistant 330 is part of the browser 320. In this implementation, the browser 320 performs the functions of the browser assistant 330. In yet another implementation, the browser assistant 330 is a process separate from and runs concurrently with the browser 320. In this implementation, the browser assistant 330 may interface between the browser 320 and the network 140.
The browser assistant 330 may be automatically activated upon initiation of the browser 320. Alternatively, the browser assistant 330 may be activated when instructed by a user. In either case, the browser assistant 330 may take the form of a graphical user interface, such as a tool bar, software button, or menu, that provides an extension to the browser 320.
The tool bar 410 includes software buttons and/or menus selectable by a user to initiate different operations by the browser assistant 330. In this case, a user may activate the browser assistant 330 by selecting one of the software buttons and/or menus. The software button 420 may be selectable by a user to initiate the browser assistant 330 functionality. In this case, a user may activate the browser assistant 330 by selecting the button using, for example, a mouse. The menu 430 may provide a list of functions that the browser assistant 330 is capable of performing. A user may select from the list to activate the browser assistant 330 and instruct the browser assistant 330 to perform the desired function.
As described in more detail below, the browser assistant 330 may perform many search-related functions to enhance a user's search experience. The browser assistant 330 may attach to the browser 320 to provide additional functionality to the user.
Returning to FIG. 3 , the miscellaneous other software 340 and miscellaneous data 350 may include programs and data used by the client 110 to perform search-related and non-search-related operations.
The server 120 may include a bus 510, a processor 520, a memory 530, one or more input devices 540, one or more output devices 550, and a communication interface 560. The bus 510 permits communication among the components of the server 120. The processor 520 may include any type of conventional processor or microprocessor that interprets and executes instructions. The memory 530 may include a RAM or another type of dynamic storage device that stores information and instructions for execution by the processor 520; a ROM or another type of static storage device that stores static information and instructions for use by the processor 520; and/or some other type of magnetic or optical recording medium and its corresponding drive.
The input devices 540 may include one or more conventional mechanisms that permit an operator to input information into the server 120, such as a keyboard, mouse, pen, etc. The output devices 550 may include one or more conventional mechanisms that output information to the operator, including a display, a printer, a speaker, etc. The communication interface 560 may include any transceiver-like mechanism that enables the server 120 to communicate with other devices and systems via a network, such as the network 140.
As will be described in detail below, the server 120, consistent with the present invention, performs certain search-related operations. The server 120 may perform these operations in response to processor 520 executing software instructions contained in a computer-readable medium, such as memory 530. The software instructions may be read into memory 530 from another computer-readable medium or from another device via the communication interface 560. The software instructions contained in memory 530 causes processor 520 to perform processes that will be described later. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the present invention. Thus, the present invention is not limited to any specific combination of hardware circuitry and software.
The browser 320 may use the address or query to obtain a document maintained by a server, such as server 130, in the network 140 [act 610]. The browser 320 may then display the document to the user. If the user then desires to use, for example, a search engine, such as the search engine 125, to perform a search, the user need not leave the document currently displayed by the browser 320.
The user may select a word, phrase, or paragraph in the document or select the entire document for a search. A phrase may be defined as a collection of two or more words (e.g., vacations in Hawaii) or a quoted phrase (i.e., two or more words that are treated as a single unit (e.g., “vacations in Hawaii”)).
If selecting a word, the user may click on the word, position a pointer, such as a cursor, over the word, or highlight the word in a conventional manner. If selecting a phrase or paragraph, the user may highlight the words forming the phrase or paragraph. If selecting an entire document, the user may select a software button or menu item provided, for example, by the browser assistant 330.
The browser assistant 330 may detect the selection by the user, automatically or in response to an action by the user [act 620]. If the user selected a word or phrase, the browser assistant 330 may analyze the document to identify the word or phrase selected. In the case of a word selection, the browser assistant 330 may treat the selected word as a search term for a query to the search engine 125. In the case of a phrase selection, the browser assistant 330 may treat the entire phrase or the words making up the phrase as one or more search terms for a query. For example, the browser assistant 330 may treat the entire phrase as a single search term. Alternatively, the browser assistant 330 may combine, such as by ANDing, the words of the phrase together for the query. In the latter case, the browser assistant 330 may also analyze the words making up the phrase and discard stop words, such as “the,” “a,” “an,” “of,” etc.
If the user selected a paragraph or the entire document, the browser assistant 330 may analyze the paragraph or document to determine the main textual concepts. The browser assistant 330 may use different conventional techniques to determine the main textual concepts. For example, the browser assistant 330 may use a summarization technique, such as the one described in M. Dyer, “In-Depth Understanding,” Cambridge, Mass.: MIT Press, 1983, to determine the main textual concepts. In another implementation, the browser assistant 330 may use a vector space model, such as the one described in G. Salton, “The SMART Environment for Retrieval System Evaluation—Advantages and Problem Areas,” Information Retrieval Experiment, K. Sparck Jones (ed.) London, Butterworth, pp. 316-329, 1981, to determine the main textual concepts. In yet another implementation, the browser assistant 330 may use all of the text in the paragraph or document as the main textual concepts. In this case, the browser assistant 330 may ignore stop words, such as “the,” “a,” “an,” “of,” etc., from the main textual concepts. The browser assistant 330 may use the determined concepts as one or more search terms for a query to the search engine 125.
In any event, the browser assistant 330 may generate a search query based on one or more search terms from the selected word, phrase, paragraph, or document [act 630]. The browser assistant 330 may generate a request to query the search engine 125 using the search query and send the request to the search engine 125 [act 640].
In response to the request, the search engine 125 may generate data that contains the search results and send the search results to the browser assistant 330 [act 650]. In an implementation consistent with the present invention, the search engine 125 provides the search results as a HyperText Markup Language (HTML) document, similar to search results provided by conventional search engines. Alternatively, the search engine 125 may provide the search results according to a protocol agreed upon by the search engine 125 and the browser assistant 330.
In an implementation consistent with the present invention, the search results include links to documents (e.g., web pages) and possibly a textual description of the links. In another implementation, the search results include links to directory nodes within a hierarchical directory and possibly textual descriptions for the directory nodes. In other implementations, the search results include a combination of these links.
The browser assistant 330 receives the list of result links from the search engine 125 [act 660]. If the list of result links takes the form of an HTML document, then the browser assistant 330 may parse the document to determine the links that are search results. The browser assistant 330 may then present the result links to the user [act 670]. For example, the browser assistant 330 may present the result links as a web page in a browser window. Alternatively, the browser assistant 330 may present the result links as a list of selectable items within a user interface of the browser assistant 330. In one instance, the user interface of the browser assistant 330 includes a pull-down or pop-up menu. In another instance, the user interface includes a side-bar or a scrolling list. The browser assistant 330 may also provide a select-box next to each of the result links to facilitate selection of one or more links by the user. The browser assistant 330 may then retrieve documents corresponding to the selected links.
The browser assistant 330 may also present links related to the result links, either in conjunction to or separately from the result links. In this case, the browser assistant 330 may query a server, such as the server 120 or 130, that includes a related-links finder that identifies related links. The browser assistant 330 may send a query to the server 120/130 for each link individually or for all links collectively. The server 120/130 may then identify related links and return them to the browser assistant 330. Alternatively, the browser assistant 330 may identify the related links itself.
If the search engine 125 implements a hierarchical directory, the results of the search may consist of a list of highly ranked directory hierarchy nodes or categories. In this case, the browser assistant 330 may download information regarding the highly ranked directory hierarchy nodes or categories and display a list of the highly ranked directory hierarchy nodes or categories (e.g., “Recreation: Travel”), a list of the actual documents and/or links within the highly ranked directory nodes or categories (e.g., the actual documents and/or links under “Recreation: Travel”), or a list of both the highly ranked directory hierarchy nodes or categories and the actual documents and/or links within the highly ranked directory nodes or categories.
Once the result links and the related links, if any, are identified, the browser assistant 330 may rank them in some manner, such as by assigning scores to the links or by alphabetizing them. Alternatively, the browser assistant 330 may rank them in the same order as provided by the server 120 or 130.
To illustrate the above processing, assume that the user selects the following paragraph for a search:
-
- Google performs “and” queries by default, so it only returns those pages that include all of the search terms. To restrict a search further, just include more terms. Google also automatically prefers pages in which the query terms are in close proximity. For example, to plan a vacation to Hawaii, simply enter Hawaii vacation into the search field and click on Google Search.
Thebrowser assistant 330 may use one of the techniques described above to determine the main textual concepts. For example, thebrowser assistant 330 may identify the following key concepts: Search, automatic “and” queries, prefers close proximity. Thebrowser assistant 330 may use these key concepts to generate a search query and send the search query to a search engine.FIG. 7 illustrates possible search results provided by the search engine in response to an exemplary paragraph selection. As illustrated, the search results include a set of links to documents that include the key concepts from the selected paragraph.
- Google performs “and” queries by default, so it only returns those pages that include all of the search terms. To restrict a search further, just include more terms. Google also automatically prefers pages in which the query terms are in close proximity. For example, to plan a vacation to Hawaii, simply enter Hawaii vacation into the search field and click on Google Search.
The browser 320 may use the address or query to obtain a document maintained by a server, such as server 130, in the network 140 [act 810]. In one implementation consistent with the present invention, the document takes the form of a web page. In other implementations, the document may take the form of a list of links or topics from a hierarchical directory. The browser 320 may then display the document to the user. The browser assistant 330 may analyze the document to identify the links contained therein [act 820]. If the document takes the form of an HTML, document, then the browser assistant 330 may parse the document to identify the links.
The browser assistant 330 may then perform a Domain Name Service (DNS) lookup for one or more of the links [act 830]. The browser assistant 330 may use conventional techniques to determine the Internet Protocol (IP) address and other information corresponding to the links. The actual number of links for which the browser assistant 330 performs the lookup operation may vary based on performance considerations. In one implementation consistent with the present invention, the browser assistant 330 performs the lookup operation for all of the links in the document. In another implementation, the browser assistant 330 performs the lookup operation for the first k links in the document, where k is an integer.
In yet another implementation, the browser assistant 330 determines a score for each of the links in the document. The score for a link may be related to, derived from, or the same as the score of the document to which the link points. The browser assistant 330 may use a number of different techniques to determine the score of a document. For example, each of the documents may be scored based on the scores of the documents that point to (i.e., link to) the current document. This technique is described in detail in S. Brin et al., “The Anatomy of a Large-Scale Hypertextual Web Search Engine,” In Proceedings of the Seventh International World Wide Web Conference, pp. 107-117, 1998, which is hereby incorporated by reference.
In another technique, the score of a document may be determined as a function of its clickthrough rate (i.e., the number of times users clicked on the document over a period of time). The clickthrough rate may be obtained in a conventional manner by redirecting user clicks through the server hosting the document. Clickthrough measurements are commonplace in many current web sites, such as advertising web sites.
In yet another technique, the score of a document may be determined as a function of the popularity of the document or the web site containing the document. The popularity of a document may be obtained from traffic data published by various Internet traffic analysis companies (e.g., Media Metrix) or by analyzing HyperText Transfer Protocol (HTTP) traffic of a representative subset of users (e.g., from a web proxy log).
In a further technique, the score of a document may be determined based on input received before or at the time the document is accessed. The input might include the user query that resulted in the document being accessed. In this case, the score of a document may be based on the match between the query and the contents of the document. Alternatively, the input may include a user profile. For example, the user profile may include a set of words that have appeared in documents that the user has previously accessed, along with a score for each word denoting its estimated importance. In this case, the score of a document may be determined by considering the user profile to be a weighted query and evaluating the match between the user profile and the contents of the document.
These scoring techniques are meant to be examples. Other scoring techniques or combinations of scoring techniques may be used in other implementations consistent with the present invention.
The browser assistant 330 may determine the scores itself. For example, the browser assistant 330 may record information regarding the documents that a user previously accessed and determine the scores based on this information. Alternatively, the browser assistant 330 may interact with a server, such as the server 120. In this case, the server 120 may maintain information regarding the scores of documents maintained by other servers in the network 140. The server 120 may obtain information regarding the documents in the network 140 using, for example, a spider (i.e., a program that prowls a network to locate publicly accessible resources, such as documents). The browser assistant 330 may identify to the server 120 the document currently being accessed by the user. The server 120 may then inform the browser assistant 330 of the scores of the linked documents.
Once the scores of the links have been determined, the browser assistant 330 may perform the DNS lookup for k links with the highest scores, where k is an integer. Alternatively, the browser assistant 330 may perform the DNS lookup for links with scores above a predetermined threshold.
The browser assistant 330 may use the results of the DNS lookup to prefetch one or more documents corresponding to the links [act 840]. The browser assistant 330 may use conventional techniques to prefetch the documents and may store the documents in local memory (e.g., memory 230 or storage device 250). The actual number of documents that the browser assistant 330 prefetches may vary based on performance considerations. For example, the browser assistant 330 may prefetch documents corresponding to all or some of the links, as described above.
The user may select one or more of the links in the document in a conventional manner, such as by clicking on the link or highlighting the link [act 850]. The browser assistant 330 detects the selection. If the selected link corresponds to a link for which the browser assistant 330 prefetched the document, then the browser assistant 330 retrieves the prefetched document from memory and presents it to the user [act 860]. If the selected link corresponds to a link for which the browser assistant 330 failed to prefetch the document, then the browser assistant 330 may obtain the document from a server in the network 140 in a conventional manner and present the document to the user.
The browser 320 may use the address or query to obtain a document maintained by a server, such as server 130, in the network 140 and may present the document to the user [act 910]. The browser assistant 330 may analyze the document to identify information, such as names of people, companies, or organizations, products, publications, and/or key phrases [act 920]. If the document takes the form of an HTML document, then the browser assistant 330 may parse the document to identify the information.
For the name(s), product(s), publication(s), and/or key phrase(s) identified, the browser assistant 330 may embed a link into the document [act 930]. For the name(s) identified, for example, the browser assistant 330 may embed into the document a link to a document whose incoming (i.e., linking) anchor text contains the name (e.g., the homepage corresponding to the name). For the product(s) identified, the browser assistant 330 may embed into the document a link to the producers, sellers, and/or reviews of the product. For the publication(s) identified, the browser assistant 330 may embed into the document a link to the URL where the publication can be found. For the key phrase(s) identified, the browser assistant 330 may embed into the document a link to a high quality document containing the key phrase.
The browser assistant 330 may use different techniques to determine the links. For example, the browser assistant 330 may send the name, product, publication title, or key phrase to a server, such as a server 130, in the network 140. The server 130 may maintain a database of names, products, publications, and key phrases. The server 130 may use the name, product, publication title, or key phrase as a query into the database to identify a link to a corresponding document.
In another implementation, the browser assistant 330 may generate a query containing the name, product, publication title, or key phrase. The browser assistant 330 may send the query to a search engine, such as the search engine 125. The search engine 125 may return a document containing the search results. The search results may take the form of a list of links. The browser assistant 330 may parse the document, extract one of the links, and use the URL corresponding to the link as the link for the name, product, publication title, or key phrase.
The browser assistant 330 may then modify the document to add the links [act 940]. The browser assistant 330 may add the links next to the corresponding name(s), product(s), publication(s), or key phrase(s) in the document or may list the links at another portion of the document. The browser assistant 330 may use other techniques to add the links. For example, the browser assistant 330 may convert a name, product, publication, and/or key phrase already present in the document into a hyperlink. The browser assistant 330 may then present the modified document to the user [act 950]. For example, the browser assistant 330 may present the modified document as a web page in a browser window.
In another implementation consistent with the present invention, the browser assistant 330 may present the links separately from the document, such as in a web page in a browser window or a pop-up window. Alternatively, the browser assistant 330 may present the links as a list of selectable items within a user interface of the browser assistant 330. In one instance, the user interface of the browser assistant 330 includes a pull-down or pop-up menu. In another instance, the user interface includes a side-bar or a scrolling list.
To illustrate the above processing, assume that a document contains a single paragraph as follows:
-
- Google performs “and” queries by default, so it only returns those pages that include all of the search terms. To restrict a search further, just include more terms. Google also automatically prefers pages in which the query terms are in close proximity. For example, to plan a vacation to Hawaii, simply enter Hawaii vacation into the search field and click on Google Search.
Thebrowser assistant 330 may identify the company name “Google,” the state name “Hawaii,” and the key phrase “Hawaii vacation.” For the name “Google,” thebrowser assistant 330 may add a link to the Google web site (www.google.com). For the name “Hawaii,” thebrowser assistant 330 may add a link to the web site of the state government of Hawaii (www.hawaii.gov). For the key phrase “Hawaii vacation,” thebrowser assistant 330 may add a link to the web site for a Hawaii State Vacation Planner (www.hshawaii.com).FIG. 10 illustrates a modified document that includes the links described above. As illustrated, the links may be located next to the identified names and key phrase.
- Google performs “and” queries by default, so it only returns those pages that include all of the search terms. To restrict a search further, just include more terms. Google also automatically prefers pages in which the query terms are in close proximity. For example, to plan a vacation to Hawaii, simply enter Hawaii vacation into the search field and click on Google Search.
Systems and methods consistent with the present invention provide a browser assistant that provides additional search-related functionality to a web browser to improve a user's search experience. For example, the browser assistant may permit a user to initiate a search by selecting a word, phrase, or paragraph in a document or the entire document itself; prefetch documents corresponding to links in a current document; and supplement the current document with links to related information.
The foregoing description of preferred embodiments of the present invention provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. For example, while series of acts have been described with regard to FIGS. 6 , 8, and 9, the order of the acts may be modified in other implementations consistent with the present invention.
Also, while processes consistent with the present invention have been described as acts performed by the browser assistant 330 or browser 320, at least some of the acts may be performed by a server, such as the server 120.
The scope of the invention is defined by the claims and their equivalents.
Claims (37)
1. A method for prefetching documents associated with a search, comprising:
identifying a document that includes one or more links, each of the links corresponding to a linked document;
analyzing each of the links in the document;
determining a score for each of the links; and
prefetching a number of the linked documents corresponding to a number of the links based on the determined scores.
2. The method of claim 1 , wherein the document includes a web page.
3. The method of claim 1 , wherein the document includes a list of links or a hierarchical directory.
4. The method of claim 1 , further comprising:
receiving selection of one of the links in the document;
determining whether the selected link corresponds to one of the prefetched documents, and
providing the one prefetched document when the selected link corresponds to the one prefetched document.
5. The method of claim 4 , further comprising:
retrieving the linked document corresponding to the selected link from a server when the selected link does not correspond to one of the prefetched documents.
6. The method of claim 1 , further comprising:
performing an address lookup for a number of the links.
7. The method of claim 6 , wherein the prefetching includes:
using the address lookup to prefetch the linked documents corresponding to the number of the links.
8. The method of claim 1 , wherein the prefetching includes:
prefetching the linked documents corresponding to all of the links in the document.
9. The method of claim 1 , wherein the determining a score includes:
for each of the linked documents, determining scores for one or more linking documents that contain links to the linked document,
determining a score for each of the linked documents based on the scores of the one or more linking documents, and
associating the determined scores for the linked documents with the corresponding links.
10. The method of claim 1 , wherein the determining a score includes:
determining a clickthrough rate for each of the linked documents,
determining a score for each of the linked documents based on the determined clickthrough rates, and
associating the determined scores for the linked documents with the corresponding links.
11. The method of claim 1 , wherein the determining a score includes:
determining a popularity of each of the linked documents,
determining a score for each of the linked documents based on the determined popularity, and
associating the determined scores for the linked documents with the corresponding links.
12. The method of claim 11 , wherein the determining a popularity includes:
for each of the linked documents, determining a popularity of a web site containing the linked document, and
associating the popularity of the web site to the linked document.
13. The method of claim 1 , wherein the determining a score includes:
receiving a query from a user,
determining a score for each of the linked documents using the received query, and
associating the determined scores for the linked documents with the corresponding links.
14. The method of claim 13 , wherein the determining a score for each of the linked documents includes:
for each of the linked documents, comparing the query with contents of the linked document, and
determining a score for the linked document based on a degree of match between the query and the contents of the linked document.
15. The method of claim 1 , wherein the determining a score includes:
receiving input from a user,
determining a score for each of the linked documents based on the received input, and
associating the determined scores for the linked documents with the corresponding links.
16. The method of claim 15 , wherein the determining a score for each of the linked documents includes:
for each of the linked documents, comparing one or more words of the received input with contents of the linked document, and
determining a score for the linked document based on a degree of match between the one or more words and the contents of the linked document.
17. The method of claim 1 , wherein the prefetching includes:
retrieving the linked documents with scores of the corresponding links above a predetermined threshold.
18. A system, implemented within a computer device, for prefetching documents associated with a search, comprising:
a browser configured to retrieve a document that includes one or more links, each of the links corresponding to a linked document; and
a browser assistant configured to identify each of the links in the document,
determine a score for each of the identified links, and prefetch a number of the linked documents corresponding to a number of the identified links based on the determined scores.
19. A web browser embodied in a computer-readable memory device, comprising:
instructions for identifying a document that includes one or more links, each of the links corresponding to a linked document;
instructions for identifying each of the links in the document;
instructions for determining a score for each of the identified links; and
instructions for prefetching the linked documents corresponding to a number of the identified links based on the determined scores.
20. A computer-readable memory device that stores instructions executable by at least one processor to perform a method for prefetching documents associated with a search, comprising:
instructions for obtaining search results that include one or more links, each of the links corresponding to a linked document;
instructions for analyzing each of the links;
instructions for determining a score for each of the links; and
instructions for prefetching the linked documents corresponding to a number of the links based on the determined scores.
21. A method for prefetching documents associated with a search in a network that includes a client and a plurality of servers, comprising:
requesting, by the client, a document that includes one or more links, each of the links corresponding to a linked document;
providing, by one of the servers, the requested document to the client;
analyzing, by the client, each of the links in the requested document;
determining, by the client, a score for each of the links;
requesting, by the client, a number of the linked documents corresponding to a number of the links based on the determined scores; and
providing, by one or more of the servers, the requested linked documents to the client.
22. A computer-implemented method for supplementing a document with links to related documents, comprising:
analyzing a document to identify one or more pieces of information;
determining a link to a related document for each of the identified pieces of information by performing a search of a set of documents based on each of the identified pieces of information; and
adding the links to the document.
23. The method of claim 22 , wherein the pieces of information include at least one of a name, a product, a publication, or a key phrase.
24. The method of claim 23 , wherein when the pieces of information include one or more names, the determining a link includes:
for each of the names, identifying one or more related documents that include a link associated with the name, and
determining one or more links corresponding to the identified documents.
25. The method of claim 23 , wherein when the pieces of information include information regarding one or more products, the determining a link includes:
for each of the products, identifying one or more related documents associated with at least one of a producer, a seller, or a review of the product, and
determining one or more links corresponding to the identified documents.
26. The method of claim 23 , wherein when the pieces of information include information regarding one or more publications, the determining a link includes:
for each of the publications, identifying one or more related documents that include the publication, and
determining one or more links corresponding to the identified documents.
27. The method of claim 23 , wherein when the pieces of information include one or more key phrases, the determining a link includes:
for each of the key phrases, identifying one or more related documents that include the key phrase, and
determining one or more links corresponding to the identified documents.
28. The method of claim 22 , wherein the determining a link includes:
sending each of the identified pieces of information to a server, and
receiving a link corresponding to each of the identified pieces of information from the server.
29. The method of claim 22 , wherein the search is performed using one of a search engine or a hierarchical directory.
30. The method of claim 22 , wherein the adding the links includes:
modifying the document to include the links.
31. The method of claim 22 , wherein the adding the links includes:
providing a separate document that includes the links.
32. A system, implemented within a computer device, for supplementing a document with links to related documents, comprising:
a browser configured to identify a document; and
a browser assistant configured to
analyze the document to identify one or more pieces of information,
determine a link to a related document for each of the identified pieces of information by performing a search of a set of documents based on each of the identified pieces of information, and
provide the determined links with the document.
33. A web browser embodied in a computer-readable memory device, comprising:
instructions for identifying a document;
instructions for analyzing the document to identify one or more pieces of information;
instructions for determining a link to a related document for each of the identified pieces of information by performing a search of a set of documents based on each of the identified pieces of information;
instructions for presenting the document with the determined links to a user.
34. A computer-readable memory device that stores instructions executable by at least one processor to perform a method for supplementing a document with links to related documents, comprising:
instructions for identifying one or more pieces of information in the document;
instructions for determining a link to a related document for each of the identified pieces of information by performing a search of a set of documents using each of the identified pieces of information; and
instructions for providing the determined links with the document.
35. A method for supplementing a document with links to related documents in a network that includes a client and a server, comprising:
requesting, by the client, a document;
providing, by the server, the requested document to the client;
analyzing, by the client, the requested document to identify one or more pieces of information;
determining, by the client, a link to a related document for each of the identified pieces of information by performing a search of a set of documents based on each of the identified pieces of information; and
modifying, by the client, the requested document to include the links.
36. A hypertext browser assistant embodied in a computer-readable memory device, comprising:
instructions for detecting selection of one or more words in a document currently accessed by a user;
instructions for generating a search query using the selected one or more words;
instructions for retrieving a document based on the search query;
instructions for identifying one or more pieces of information in the document;
instructions for determining a link to a related document for each of the identified pieces of information by performing a search of a set of documents based on each of the identified pieces of information;
instructions for adding the links to the document;
instructions for prefetching a number of the related documents corresponding to a number of the links; and
instructions for presenting the document to the user.
37. A method for facilitating a search, comprising:
detecting selection of one or more words in a document currently accessed by a user;
generating a search query using the selected one or more words;
retrieving a document based on the search query, the document including one or more links corresponding to a linked document;
analyzing each of the links;
prefetching a number of the linked documents corresponding to a number of the links;
presenting the document to the user;
receiving selection of one of the links;
retrieving the linked document corresponding to the selected link;
identifying one or more pieces of information in the retrieved document;
determining a link to a related document for each of the identified pieces of information by performing a search of a set of documents based on each of the identified pieces of information; and
providing the determined links with the related document to the user.
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/734,886 US7421432B1 (en) | 1999-12-15 | 2000-12-13 | Hypertext browser assistant |
US12/178,748 US8560564B1 (en) | 1999-12-15 | 2008-07-24 | Hypertext browser assistant |
US13/244,887 US8316016B1 (en) | 1999-12-15 | 2011-09-26 | Hypertext browser assistant |
US13/615,896 US8688687B1 (en) | 1999-12-15 | 2012-09-14 | Hypertext browser assistant |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17101999P | 1999-12-15 | 1999-12-15 | |
US09/734,886 US7421432B1 (en) | 1999-12-15 | 2000-12-13 | Hypertext browser assistant |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/178,748 Continuation US8560564B1 (en) | 1999-12-15 | 2008-07-24 | Hypertext browser assistant |
Publications (1)
Publication Number | Publication Date |
---|---|
US7421432B1 true US7421432B1 (en) | 2008-09-02 |
Family
ID=39718467
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/734,886 Active 2025-07-05 US7421432B1 (en) | 1999-12-15 | 2000-12-13 | Hypertext browser assistant |
US12/178,748 Expired - Lifetime US8560564B1 (en) | 1999-12-15 | 2008-07-24 | Hypertext browser assistant |
US13/244,887 Expired - Lifetime US8316016B1 (en) | 1999-12-15 | 2011-09-26 | Hypertext browser assistant |
US13/615,896 Expired - Fee Related US8688687B1 (en) | 1999-12-15 | 2012-09-14 | Hypertext browser assistant |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/178,748 Expired - Lifetime US8560564B1 (en) | 1999-12-15 | 2008-07-24 | Hypertext browser assistant |
US13/244,887 Expired - Lifetime US8316016B1 (en) | 1999-12-15 | 2011-09-26 | Hypertext browser assistant |
US13/615,896 Expired - Fee Related US8688687B1 (en) | 1999-12-15 | 2012-09-14 | Hypertext browser assistant |
Country Status (1)
Country | Link |
---|---|
US (4) | US7421432B1 (en) |
Cited By (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050234979A1 (en) * | 2004-04-16 | 2005-10-20 | Alcatel | Map navigation with breadcrumb buttons |
US20060172267A1 (en) * | 2005-01-31 | 2006-08-03 | Microsoft Corporation | Input device training and automatic assignment |
US20070192510A1 (en) * | 2000-12-27 | 2007-08-16 | Piccionelli Gregory A | Method and apparatus for generating linking means and updating text files on a wide area network |
US20070198480A1 (en) * | 2006-02-17 | 2007-08-23 | Hogue Andrew W | Query language |
US20080016101A1 (en) * | 2003-12-30 | 2008-01-17 | Shopping.Com | Systems and methods for dynamically updating relevance of a selected item |
US20080104073A1 (en) * | 1998-07-10 | 2008-05-01 | Half.Com, Inc. | Automatically inserting relevant hyperlinks into a webpage |
US20090327283A1 (en) * | 2000-05-08 | 2009-12-31 | Verizon Laboratories Inc. | Techniques for web site integration |
US7716225B1 (en) * | 2004-06-17 | 2010-05-11 | Google Inc. | Ranking documents based on user behavior and/or feature data |
EP2194471A1 (en) * | 2008-12-05 | 2010-06-09 | Vestel Elektronik Sanayi ve Ticaret A.S. | Dynamic prefetching method and system for metadata |
US20110022426A1 (en) * | 2009-07-22 | 2011-01-27 | Eijdenberg Adam | Graphical user interface based airline travel planning |
US20110145138A1 (en) * | 2009-12-15 | 2011-06-16 | Martin Fitzgerald Bradley | Browser extension that processes text to facilitate commerce on social media |
US8073866B2 (en) | 2005-03-17 | 2011-12-06 | Claria Innovations, Llc | Method for providing content to an internet user based on the user's demonstrated content preferences |
US8078602B2 (en) | 2004-12-17 | 2011-12-13 | Claria Innovations, Llc | Search engine for a computer network |
US8086697B2 (en) | 2005-06-28 | 2011-12-27 | Claria Innovations, Llc | Techniques for displaying impressions in documents delivered over a computer network |
US20120042232A1 (en) * | 2010-08-16 | 2012-02-16 | Perfect Sense Digital Llc | Placement of Hyperlinks in Documents |
US8170912B2 (en) | 2003-11-25 | 2012-05-01 | Carhamm Ltd., Llc | Database structure and front end |
WO2012069803A1 (en) * | 2010-11-01 | 2012-05-31 | Como Ip Limited | Methods and apparatus of accessing related content on a web-page |
US8255413B2 (en) | 2004-08-19 | 2012-08-28 | Carhamm Ltd., Llc | Method and apparatus for responding to request for information-personalization |
US8316003B2 (en) | 2002-11-05 | 2012-11-20 | Carhamm Ltd., Llc | Updating content of presentation vehicle in a computer network |
US8316016B1 (en) | 1999-12-15 | 2012-11-20 | Google Inc. | Hypertext browser assistant |
CN103119588A (en) * | 2010-09-17 | 2013-05-22 | 甲骨文国际公司 | Method and apparatus for pre-rendering expected system response |
US8577900B2 (en) | 2010-06-30 | 2013-11-05 | International Business Machines Corporation | Method and apparatus for enhancing webpage browsing |
US8620952B2 (en) | 2007-01-03 | 2013-12-31 | Carhamm Ltd., Llc | System for database reporting |
US8645941B2 (en) | 2005-03-07 | 2014-02-04 | Carhamm Ltd., Llc | Method for attributing and allocating revenue related to embedded software |
US8689238B2 (en) | 2000-05-18 | 2014-04-01 | Carhamm Ltd., Llc | Techniques for displaying impressions in documents delivered over a computer network |
US8762368B1 (en) | 2012-04-30 | 2014-06-24 | Google Inc. | Context-based filtering of search results |
US20140280288A1 (en) * | 2013-03-13 | 2014-09-18 | Samsung Electronics Co., Ltd. | Method and apparatus for managing conversation messages |
US8924850B1 (en) | 2013-11-21 | 2014-12-30 | Google Inc. | Speeding up document loading |
US8954412B1 (en) | 2006-09-28 | 2015-02-10 | Google Inc. | Corroborating facts in electronic documents |
US8965880B2 (en) | 2012-10-05 | 2015-02-24 | Google Inc. | Transcoding and serving resources |
US9152718B2 (en) | 2002-09-24 | 2015-10-06 | Google Inc. | Serving advertisements based on content |
US9495446B2 (en) | 2004-12-20 | 2016-11-15 | Gula Consulting Limited Liability Company | Method and device for publishing cross-network user behavioral data |
US9530229B2 (en) | 2006-01-27 | 2016-12-27 | Google Inc. | Data object visualization using graphs |
US9817800B2 (en) | 2014-08-25 | 2017-11-14 | Samsung Electronics Co., Ltd. | Method and apparatus for reducing page load time in communication system |
Families Citing this family (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020002563A1 (en) * | 1999-08-23 | 2002-01-03 | Mary M. Bendik | Document management systems and methods |
US8473506B2 (en) * | 2009-05-20 | 2013-06-25 | Oracle International Corporation | Type system for building extensible business applications |
US8938668B2 (en) | 2011-08-30 | 2015-01-20 | Oracle International Corporation | Validation based on decentralized schemas |
US9146909B2 (en) * | 2011-07-27 | 2015-09-29 | Qualcomm Incorporated | Web browsing enhanced by cloud computing |
US10489493B2 (en) | 2012-09-13 | 2019-11-26 | Oracle International Corporation | Metadata reuse for validation against decentralized schemas |
CN106855748A (en) | 2015-12-08 | 2017-06-16 | 阿里巴巴集团控股有限公司 | A kind of data inputting method, device and intelligent terminal |
CN105573667B (en) * | 2015-12-10 | 2019-07-23 | 华为技术有限公司 | A kind of method for reading data and storage server |
US10503818B2 (en) | 2016-01-14 | 2019-12-10 | Microsoft Technology Licensing, Llc. | Content authoring inline commands |
US11188710B2 (en) * | 2016-12-30 | 2021-11-30 | Dropbox, Inc. | Inline content item editor commands |
US10782986B2 (en) | 2018-04-20 | 2020-09-22 | Facebook, Inc. | Assisting users with personalized and contextual communication content |
US11886473B2 (en) | 2018-04-20 | 2024-01-30 | Meta Platforms, Inc. | Intent identification for agent matching by assistant systems |
US11715042B1 (en) | 2018-04-20 | 2023-08-01 | Meta Platforms Technologies, Llc | Interpretability of deep reinforcement learning models in assistant systems |
US11115410B1 (en) | 2018-04-20 | 2021-09-07 | Facebook, Inc. | Secure authentication for assistant systems |
US10978056B1 (en) | 2018-04-20 | 2021-04-13 | Facebook, Inc. | Grammaticality classification for natural language generation in assistant systems |
US10949616B1 (en) | 2018-08-21 | 2021-03-16 | Facebook, Inc. | Automatically detecting and storing entity information for assistant systems |
US10896295B1 (en) | 2018-08-21 | 2021-01-19 | Facebook, Inc. | Providing additional information for identified named-entities for assistant systems |
US11657094B2 (en) | 2019-06-28 | 2023-05-23 | Meta Platforms Technologies, Llc | Memory grounded conversational reasoning and question answering for assistant systems |
US11442992B1 (en) | 2019-06-28 | 2022-09-13 | Meta Platforms Technologies, Llc | Conversational reasoning with knowledge graph paths for assistant systems |
US11636438B1 (en) | 2019-10-18 | 2023-04-25 | Meta Platforms Technologies, Llc | Generating smart reminders by assistant systems |
US11567788B1 (en) | 2019-10-18 | 2023-01-31 | Meta Platforms, Inc. | Generating proactive reminders for assistant systems |
US11562744B1 (en) | 2020-02-13 | 2023-01-24 | Meta Platforms Technologies, Llc | Stylizing text-to-speech (TTS) voice response for assistant systems |
US11159767B1 (en) | 2020-04-07 | 2021-10-26 | Facebook Technologies, Llc | Proactive in-call content recommendations for assistant systems |
US11658835B2 (en) | 2020-06-29 | 2023-05-23 | Meta Platforms, Inc. | Using a single request for multi-person calling in assistant systems |
US11563706B2 (en) | 2020-12-29 | 2023-01-24 | Meta Platforms, Inc. | Generating context-aware rendering of media contents for assistant systems |
US11809480B1 (en) | 2020-12-31 | 2023-11-07 | Meta Platforms, Inc. | Generating dynamic knowledge graph of media contents for assistant systems |
US11861315B2 (en) | 2021-04-21 | 2024-01-02 | Meta Platforms, Inc. | Continuous learning for natural-language understanding models for assistant systems |
Citations (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5220625A (en) * | 1989-06-14 | 1993-06-15 | Hitachi, Ltd. | Information search terminal and system |
US5241671A (en) * | 1989-10-26 | 1993-08-31 | Encyclopaedia Britannica, Inc. | Multimedia search system using a plurality of entry path means which indicate interrelatedness of information |
US5295243A (en) * | 1989-12-29 | 1994-03-15 | Xerox Corporation | Display of hierarchical three-dimensional structures with rotating substructures |
US5350303A (en) * | 1991-10-24 | 1994-09-27 | At&T Bell Laboratories | Method for accessing information in a computer |
US5471382A (en) * | 1994-01-10 | 1995-11-28 | Informed Access Systems, Inc. | Medical network management system and process |
US5584024A (en) * | 1994-03-24 | 1996-12-10 | Software Ag | Interactive database query system and method for prohibiting the selection of semantically incorrect query parameters |
US5619688A (en) * | 1993-09-02 | 1997-04-08 | Microsoft Corporation | Method and system for constructing database queries using a field selection grid |
US5623679A (en) * | 1993-11-19 | 1997-04-22 | Waverley Holdings, Inc. | System and method for creating and manipulating notes each containing multiple sub-notes, and linking the sub-notes to portions of data objects |
US5727129A (en) | 1996-06-04 | 1998-03-10 | International Business Machines Corporation | Network system for profiling and actively facilitating user activities |
US5761655A (en) * | 1990-06-06 | 1998-06-02 | Alphatronix, Inc. | Image file storage and retrieval system |
US5768581A (en) * | 1996-05-07 | 1998-06-16 | Cochran; Nancy Pauline | Apparatus and method for selecting records from a computer database by repeatedly displaying search terms from multiple list identifiers before either a list identifier or a search term is selected |
US5822539A (en) * | 1995-12-08 | 1998-10-13 | Sun Microsystems, Inc. | System for adding requested document cross references to a document by annotation proxy configured to merge and a directory generator and annotation server |
US5826025A (en) * | 1995-09-08 | 1998-10-20 | Sun Microsystems, Inc. | System for annotation overlay proxy configured to retrieve associated overlays associated with a document request from annotation directory created from list of overlay groups |
US5907837A (en) * | 1995-07-17 | 1999-05-25 | Microsoft Corporation | Information retrieval system in an on-line network including separate content and layout of published titles |
US5950190A (en) * | 1997-05-13 | 1999-09-07 | Aptek, Inc. | Dynamic, self-modifying graphical user interface for relational database applications |
US5963940A (en) * | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6011537A (en) * | 1997-01-27 | 2000-01-04 | Slotznick; Benjamin | System for delivering and simultaneously displaying primary and secondary information, and for displaying only the secondary information during interstitial space |
US6012055A (en) * | 1996-04-09 | 2000-01-04 | Silicon Graphics, Inc. | Mechanism for integrated information search and retrieval from diverse sources using multiple navigation methods |
US6026409A (en) * | 1996-09-26 | 2000-02-15 | Blumenthal; Joshua O. | System and method for search and retrieval of digital information by making and scaled viewing |
US6112202A (en) * | 1997-03-07 | 2000-08-29 | International Business Machines Corporation | Method and system for identifying authoritative information resources in an environment with content-based links between information resources |
US6112203A (en) * | 1998-04-09 | 2000-08-29 | Altavista Company | Method for ranking documents in a hyperlinked environment using connectivity and selective content analysis |
US6134532A (en) * | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6223145B1 (en) * | 1997-11-26 | 2001-04-24 | Zerox Corporation | Interactive interface for specifying searches |
US6226648B1 (en) * | 1997-02-07 | 2001-05-01 | About.Com, Inc. | System and method for modification of included files used in a automatic web page generation system |
US6356899B1 (en) * | 1998-08-29 | 2002-03-12 | International Business Machines Corporation | Method for interactively creating an information database including preferred information elements, such as preferred-authority, world wide web pages |
US6418433B1 (en) * | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US20020130891A1 (en) * | 1999-12-08 | 2002-09-19 | Michael Singer | Text display with user-defined appearance and automatic scrolling |
US6493702B1 (en) * | 1999-05-05 | 2002-12-10 | Xerox Corporation | System and method for searching and recommending documents in a collection using share bookmarks |
US6523022B1 (en) * | 1997-06-09 | 2003-02-18 | Allen Hobbs | Method and apparatus for selectively augmenting retrieved information from a network resource |
US6564202B1 (en) * | 1999-01-26 | 2003-05-13 | Xerox Corporation | System and method for visually representing the contents of a multiple data object cluster |
US6631522B1 (en) * | 1998-01-20 | 2003-10-07 | David Erdelyi | Method and system for indexing, sorting, and displaying a video database |
US6704722B2 (en) * | 1999-11-17 | 2004-03-09 | Xerox Corporation | Systems and methods for performing crawl searches and index searches |
US6728752B1 (en) * | 1999-01-26 | 2004-04-27 | Xerox Corporation | System and method for information browsing using multi-modal features |
US6741967B1 (en) * | 1998-11-02 | 2004-05-25 | Vividence Corporation | Full service research bureau and test center method and apparatus |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5278980A (en) * | 1991-08-16 | 1994-01-11 | Xerox Corporation | Iterative technique for phrase query formation and an information retrieval system employing same |
US5920859A (en) * | 1997-02-05 | 1999-07-06 | Idd Enterprises, L.P. | Hypertext document retrieval system and method |
US6154757A (en) | 1997-01-29 | 2000-11-28 | Krause; Philip R. | Electronic text reading environment enhancement method and apparatus |
US6549897B1 (en) * | 1998-10-09 | 2003-04-15 | Microsoft Corporation | Method and system for calculating phrase-document importance |
US7421432B1 (en) | 1999-12-15 | 2008-09-02 | Google Inc. | Hypertext browser assistant |
-
2000
- 2000-12-13 US US09/734,886 patent/US7421432B1/en active Active
-
2008
- 2008-07-24 US US12/178,748 patent/US8560564B1/en not_active Expired - Lifetime
-
2011
- 2011-09-26 US US13/244,887 patent/US8316016B1/en not_active Expired - Lifetime
-
2012
- 2012-09-14 US US13/615,896 patent/US8688687B1/en not_active Expired - Fee Related
Patent Citations (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5220625A (en) * | 1989-06-14 | 1993-06-15 | Hitachi, Ltd. | Information search terminal and system |
US5241671A (en) * | 1989-10-26 | 1993-08-31 | Encyclopaedia Britannica, Inc. | Multimedia search system using a plurality of entry path means which indicate interrelatedness of information |
US5241671C1 (en) * | 1989-10-26 | 2002-07-02 | Encyclopaedia Britannica Educa | Multimedia search system using a plurality of entry path means which indicate interrelatedness of information |
US5295243A (en) * | 1989-12-29 | 1994-03-15 | Xerox Corporation | Display of hierarchical three-dimensional structures with rotating substructures |
US5761655A (en) * | 1990-06-06 | 1998-06-02 | Alphatronix, Inc. | Image file storage and retrieval system |
US5350303A (en) * | 1991-10-24 | 1994-09-27 | At&T Bell Laboratories | Method for accessing information in a computer |
US5619688A (en) * | 1993-09-02 | 1997-04-08 | Microsoft Corporation | Method and system for constructing database queries using a field selection grid |
US5623679A (en) * | 1993-11-19 | 1997-04-22 | Waverley Holdings, Inc. | System and method for creating and manipulating notes each containing multiple sub-notes, and linking the sub-notes to portions of data objects |
US5471382A (en) * | 1994-01-10 | 1995-11-28 | Informed Access Systems, Inc. | Medical network management system and process |
US5584024A (en) * | 1994-03-24 | 1996-12-10 | Software Ag | Interactive database query system and method for prohibiting the selection of semantically incorrect query parameters |
US5907837A (en) * | 1995-07-17 | 1999-05-25 | Microsoft Corporation | Information retrieval system in an on-line network including separate content and layout of published titles |
US5963940A (en) * | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US5826025A (en) * | 1995-09-08 | 1998-10-20 | Sun Microsystems, Inc. | System for annotation overlay proxy configured to retrieve associated overlays associated with a document request from annotation directory created from list of overlay groups |
US5822539A (en) * | 1995-12-08 | 1998-10-13 | Sun Microsystems, Inc. | System for adding requested document cross references to a document by annotation proxy configured to merge and a directory generator and annotation server |
US6012055A (en) * | 1996-04-09 | 2000-01-04 | Silicon Graphics, Inc. | Mechanism for integrated information search and retrieval from diverse sources using multiple navigation methods |
US5768581A (en) * | 1996-05-07 | 1998-06-16 | Cochran; Nancy Pauline | Apparatus and method for selecting records from a computer database by repeatedly displaying search terms from multiple list identifiers before either a list identifier or a search term is selected |
US5727129A (en) | 1996-06-04 | 1998-03-10 | International Business Machines Corporation | Network system for profiling and actively facilitating user activities |
US6026409A (en) * | 1996-09-26 | 2000-02-15 | Blumenthal; Joshua O. | System and method for search and retrieval of digital information by making and scaled viewing |
US6011537A (en) * | 1997-01-27 | 2000-01-04 | Slotznick; Benjamin | System for delivering and simultaneously displaying primary and secondary information, and for displaying only the secondary information during interstitial space |
US6226648B1 (en) * | 1997-02-07 | 2001-05-01 | About.Com, Inc. | System and method for modification of included files used in a automatic web page generation system |
US6112202A (en) * | 1997-03-07 | 2000-08-29 | International Business Machines Corporation | Method and system for identifying authoritative information resources in an environment with content-based links between information resources |
US5950190A (en) * | 1997-05-13 | 1999-09-07 | Aptek, Inc. | Dynamic, self-modifying graphical user interface for relational database applications |
US6523022B1 (en) * | 1997-06-09 | 2003-02-18 | Allen Hobbs | Method and apparatus for selectively augmenting retrieved information from a network resource |
US6134532A (en) * | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6223145B1 (en) * | 1997-11-26 | 2001-04-24 | Zerox Corporation | Interactive interface for specifying searches |
US6631522B1 (en) * | 1998-01-20 | 2003-10-07 | David Erdelyi | Method and system for indexing, sorting, and displaying a video database |
US6112203A (en) * | 1998-04-09 | 2000-08-29 | Altavista Company | Method for ranking documents in a hyperlinked environment using connectivity and selective content analysis |
US6356899B1 (en) * | 1998-08-29 | 2002-03-12 | International Business Machines Corporation | Method for interactively creating an information database including preferred information elements, such as preferred-authority, world wide web pages |
US6741967B1 (en) * | 1998-11-02 | 2004-05-25 | Vividence Corporation | Full service research bureau and test center method and apparatus |
US6564202B1 (en) * | 1999-01-26 | 2003-05-13 | Xerox Corporation | System and method for visually representing the contents of a multiple data object cluster |
US6728752B1 (en) * | 1999-01-26 | 2004-04-27 | Xerox Corporation | System and method for information browsing using multi-modal features |
US6418433B1 (en) * | 1999-01-28 | 2002-07-09 | International Business Machines Corporation | System and method for focussed web crawling |
US6493702B1 (en) * | 1999-05-05 | 2002-12-10 | Xerox Corporation | System and method for searching and recommending documents in a collection using share bookmarks |
US6704722B2 (en) * | 1999-11-17 | 2004-03-09 | Xerox Corporation | Systems and methods for performing crawl searches and index searches |
US20020130891A1 (en) * | 1999-12-08 | 2002-09-19 | Michael Singer | Text display with user-defined appearance and automatic scrolling |
Non-Patent Citations (16)
Title |
---|
Barrett, R. & Maglio, P.P., "Intermediaries: An approach to manipulating information streams," IBM Systems Journal, vol. 38, pp. 629-641 (1999). |
Barrett, R. & Maglio, P.P., "Intermediaries: New places for producing and manipulating web content," In Proceedings of the Seventh International World Wide Web Conference (WWW7), Brisbane, Australia (1998); 14 pages. |
Barrett, R., Maglio, P.P., & Kellem, D.C., "How to personalize the web," In Proceedings of the ACM Conference on Human Factors in Computing Systems (CHI'97), Atlanta, GA (1997); 16 pages. |
Barrett, R., Maglio, P.P., & Kellem, D.C., "WBI: A confederation of agents that personalize the web," In Proceedings of the First International Conference on Autonomous Agents, Marina Del Rey, CA (1997); 4 pages. |
Campbell, C.S. & Maglio, P.P., "Facilitating navigation in information spaces: Road signs on the World Wide Web," International Journal of Human-Computer Studies, vol. 50, pp. 309-327 (1999). |
Ihde, S., Maglio, P.P., Meyer, J., & Barrett, R., "Intermediary-based transcoding framework," IBM Systems Journal, vol. 40, No. 1 (2001); 14 pages. |
M. Dyer, "In-Depth Understanding," Cambridge, MA, MIT Press, 1983, 474 pages. |
Maglio, P.P. & Barrett, R., "How to build modeling agents to support web searchers," In Proceedings of the Sixth International Conference on User Modeling, Sardinia, Italy (1997); 12 pages. |
Maglio, P.P. & Barrett, R., "WebPlaces: Adding people to the web," In Poster Proceedings of the Eighth International World Wide Web Conference, Toronto, Canada (1999); 5 pages. |
Meyer, Jörg, "How to manage, negotiate, and transfer personal information on the Web," Diploma thesis, University of Applied Sciences, Hamburg, Germany (1999); 126 pages. |
P. Maglio et al., "Intermediaries personalize information streams," Communications of the ACM, 43(8), Aug. 2000, pp. 96-101. |
S. Brin et al., "The Anatomy of a Large-Scale Hypertextual Web Search Engine," In Proceedings of the Seventh International World Wide Web Conference, pp. 107-117, 1998. |
S. Kelin, "Digital Persona: A gateway to personal information," M.Eng. thesis, MIT, Cambridge, MA, Feb. 1999, 104 pages. |
Salton, G., "The Smart Environment for Retrieval System Evaluation-Advantages and Problem Areas," Information Retrieval Experiment, K. Sparck Jones (ed.) London, Butterworth, pp. 316-329, 1981. |
Underwood, G.M., Maglio, P.P. & Barrett, R., "User-centered push for timely information delivery," In Proceedings of the Seventh International World Wide Web Conference (WWW7), Brisbane, Australia (1998); 12 pages. |
Yahoo.com home page, Oct. 17, 1996 and typical search (3 pages). * |
Cited By (60)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080104073A1 (en) * | 1998-07-10 | 2008-05-01 | Half.Com, Inc. | Automatically inserting relevant hyperlinks into a webpage |
US8688687B1 (en) | 1999-12-15 | 2014-04-01 | Google Inc. | Hypertext browser assistant |
US8316016B1 (en) | 1999-12-15 | 2012-11-20 | Google Inc. | Hypertext browser assistant |
US8756212B2 (en) * | 2000-05-08 | 2014-06-17 | Google Inc. | Techniques for web site integration |
US8862565B1 (en) | 2000-05-08 | 2014-10-14 | Google Inc. | Techniques for web site integration |
US20090327283A1 (en) * | 2000-05-08 | 2009-12-31 | Verizon Laboratories Inc. | Techniques for web site integration |
US8689238B2 (en) | 2000-05-18 | 2014-04-01 | Carhamm Ltd., Llc | Techniques for displaying impressions in documents delivered over a computer network |
US20110197115A1 (en) * | 2000-12-12 | 2011-08-11 | Half.Com, Inc. | Method and system to automatically insert a relevant hyperlink into a webpage |
US9606974B2 (en) * | 2000-12-12 | 2017-03-28 | Ebay Inc. | Automatically inserting relevant hyperlinks into a webpage |
US9524280B2 (en) * | 2000-12-12 | 2016-12-20 | Ebay Inc. | Method and system to automatically insert a relevant hyperlink into a webpage |
US20110196738A1 (en) * | 2000-12-12 | 2011-08-11 | Half.Com, Inc. | Method and system to communicate hyperlinks associated with text contained in a webpage |
US8554870B2 (en) * | 2000-12-27 | 2013-10-08 | Gregory A. Piccionelli | Method and apparatus for generating linking means and updating text files on a wide area network |
US20070192510A1 (en) * | 2000-12-27 | 2007-08-16 | Piccionelli Gregory A | Method and apparatus for generating linking means and updating text files on a wide area network |
US9152718B2 (en) | 2002-09-24 | 2015-10-06 | Google Inc. | Serving advertisements based on content |
US8316003B2 (en) | 2002-11-05 | 2012-11-20 | Carhamm Ltd., Llc | Updating content of presentation vehicle in a computer network |
US8170912B2 (en) | 2003-11-25 | 2012-05-01 | Carhamm Ltd., Llc | Database structure and front end |
US8065301B2 (en) * | 2003-12-30 | 2011-11-22 | Shopping.Com | Systems and methods for dynamically updating relevance of a selected item |
US20080016101A1 (en) * | 2003-12-30 | 2008-01-17 | Shopping.Com | Systems and methods for dynamically updating relevance of a selected item |
US20050234979A1 (en) * | 2004-04-16 | 2005-10-20 | Alcatel | Map navigation with breadcrumb buttons |
US7716225B1 (en) * | 2004-06-17 | 2010-05-11 | Google Inc. | Ranking documents based on user behavior and/or feature data |
US8117209B1 (en) | 2004-06-17 | 2012-02-14 | Google Inc. | Ranking documents based on user behavior and/or feature data |
US9305099B1 (en) | 2004-06-17 | 2016-04-05 | Google Inc. | Ranking documents based on user behavior and/or feature data |
US10152520B1 (en) | 2004-06-17 | 2018-12-11 | Google Llc | Ranking documents based on user behavior and/or feature data |
US8255413B2 (en) | 2004-08-19 | 2012-08-28 | Carhamm Ltd., Llc | Method and apparatus for responding to request for information-personalization |
US8078602B2 (en) | 2004-12-17 | 2011-12-13 | Claria Innovations, Llc | Search engine for a computer network |
US9495446B2 (en) | 2004-12-20 | 2016-11-15 | Gula Consulting Limited Liability Company | Method and device for publishing cross-network user behavioral data |
US20060172267A1 (en) * | 2005-01-31 | 2006-08-03 | Microsoft Corporation | Input device training and automatic assignment |
US8645941B2 (en) | 2005-03-07 | 2014-02-04 | Carhamm Ltd., Llc | Method for attributing and allocating revenue related to embedded software |
US8073866B2 (en) | 2005-03-17 | 2011-12-06 | Claria Innovations, Llc | Method for providing content to an internet user based on the user's demonstrated content preferences |
US8086697B2 (en) | 2005-06-28 | 2011-12-27 | Claria Innovations, Llc | Techniques for displaying impressions in documents delivered over a computer network |
US9530229B2 (en) | 2006-01-27 | 2016-12-27 | Google Inc. | Data object visualization using graphs |
US8954426B2 (en) * | 2006-02-17 | 2015-02-10 | Google Inc. | Query language |
US20070198480A1 (en) * | 2006-02-17 | 2007-08-23 | Hogue Andrew W | Query language |
US9785686B2 (en) | 2006-09-28 | 2017-10-10 | Google Inc. | Corroborating facts in electronic documents |
US8954412B1 (en) | 2006-09-28 | 2015-02-10 | Google Inc. | Corroborating facts in electronic documents |
US8620952B2 (en) | 2007-01-03 | 2013-12-31 | Carhamm Ltd., Llc | System for database reporting |
EP2194471A1 (en) * | 2008-12-05 | 2010-06-09 | Vestel Elektronik Sanayi ve Ticaret A.S. | Dynamic prefetching method and system for metadata |
US10592998B2 (en) | 2009-07-22 | 2020-03-17 | Google Llc | Graphical user interface based airline travel planning |
US20110022426A1 (en) * | 2009-07-22 | 2011-01-27 | Eijdenberg Adam | Graphical user interface based airline travel planning |
US20110145138A1 (en) * | 2009-12-15 | 2011-06-16 | Martin Fitzgerald Bradley | Browser extension that processes text to facilitate commerce on social media |
US8577900B2 (en) | 2010-06-30 | 2013-11-05 | International Business Machines Corporation | Method and apparatus for enhancing webpage browsing |
US10963520B2 (en) | 2010-08-16 | 2021-03-30 | Perfect Sense, Inc. | Automatic placement of hyperlinks on words and phrases in documents |
US20120042232A1 (en) * | 2010-08-16 | 2012-02-16 | Perfect Sense Digital Llc | Placement of Hyperlinks in Documents |
US9697204B2 (en) * | 2010-08-16 | 2017-07-04 | Perfect Sense, Inc. | Automatic placement of hyperlinks on words and phrases in documents |
CN103119588B (en) * | 2010-09-17 | 2017-04-05 | 甲骨文国际公司 | For the method and apparatus for wishing system response is pre-rendered |
CN103119588A (en) * | 2010-09-17 | 2013-05-22 | 甲骨文国际公司 | Method and apparatus for pre-rendering expected system response |
WO2012069803A1 (en) * | 2010-11-01 | 2012-05-31 | Como Ip Limited | Methods and apparatus of accessing related content on a web-page |
US9779139B1 (en) | 2012-04-30 | 2017-10-03 | Google Inc. | Context-based filtering of search results |
US8762368B1 (en) | 2012-04-30 | 2014-06-24 | Google Inc. | Context-based filtering of search results |
US11580175B2 (en) | 2012-10-05 | 2023-02-14 | Google Llc | Transcoding and serving resources |
US9767199B2 (en) | 2012-10-05 | 2017-09-19 | Google Inc. | Transcoding and serving resources |
US10599727B2 (en) | 2012-10-05 | 2020-03-24 | Google Llc | Transcoding and serving resources |
US8965880B2 (en) | 2012-10-05 | 2015-02-24 | Google Inc. | Transcoding and serving resources |
US20140280288A1 (en) * | 2013-03-13 | 2014-09-18 | Samsung Electronics Co., Ltd. | Method and apparatus for managing conversation messages |
US9454598B2 (en) * | 2013-03-13 | 2016-09-27 | Samsung Electronics Co., Ltd. | Method and apparatus for managing conversation messages |
US10296654B2 (en) | 2013-11-21 | 2019-05-21 | Google Llc | Speeding up document loading |
US10909207B2 (en) | 2013-11-21 | 2021-02-02 | Google Llc | Speeding up document loading |
US8924850B1 (en) | 2013-11-21 | 2014-12-30 | Google Inc. | Speeding up document loading |
US11809511B2 (en) | 2013-11-21 | 2023-11-07 | Google Llc | Speeding up document loading |
US9817800B2 (en) | 2014-08-25 | 2017-11-14 | Samsung Electronics Co., Ltd. | Method and apparatus for reducing page load time in communication system |
Also Published As
Publication number | Publication date |
---|---|
US8560564B1 (en) | 2013-10-15 |
US8688687B1 (en) | 2014-04-01 |
US8316016B1 (en) | 2012-11-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7421432B1 (en) | Hypertext browser assistant | |
US9569548B2 (en) | Systems and methods for highlighting search results | |
US9665650B1 (en) | In-context searching | |
US6009459A (en) | Intelligent automatic searching for resources in a distributed environment | |
US8086604B2 (en) | Universal interface for retrieval of information in a computer system | |
KR101303488B1 (en) | Search systems and methods using in-line contextual queries | |
US8522128B1 (en) | Systems and methods for modifying the order of links presented in a document | |
KR101016683B1 (en) | Systems and methods for providing search results | |
US8255541B2 (en) | Method and apparatus for utilizing user feedback to improve signifier mapping | |
KR101393839B1 (en) | Search system presenting active abstracts including linked terms | |
JP2001510607A (en) | Intelligent network browser using indexing method based on proliferation concept | |
US8626757B1 (en) | Systems and methods for detecting network resource interaction and improved search result reporting | |
US20060101012A1 (en) | Search system presenting active abstracts including linked terms | |
GB2331166A (en) | Database search engine | |
US7296016B1 (en) | Systems and methods for performing point-of-view searching | |
US7975238B2 (en) | Identifying previously bookmarked hyperlinks in a received Web page in a World Wide Web network browser system for searching | |
US6928429B2 (en) | Simplifying browser search requests | |
US7831541B2 (en) | System and method for implementing browser milestone navigation in a data processing system | |
US20030172126A1 (en) | Method and system for displaying condensed web page information in response to a user query | |
US7490082B2 (en) | System and method for searching internet domains |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
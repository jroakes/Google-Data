US8688716B1 - Recommending pairwise video comparisons to improve ranking - Google Patents
Recommending pairwise video comparisons to improve ranking Download PDFInfo
- Publication number
- US8688716B1 US8688716B1 US13/525,219 US201213525219A US8688716B1 US 8688716 B1 US8688716 B1 US 8688716B1 US 201213525219 A US201213525219 A US 201213525219A US 8688716 B1 US8688716 B1 US 8688716B1
- Authority
- US
- United States
- Prior art keywords
- video
- videos
- comparison
- quality
- comparisons
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000009826 distribution Methods 0.000 claims abstract description 105
- 239000003607 modifier Substances 0.000 claims abstract description 16
- 238000000034 method Methods 0.000 claims description 34
- 230000008859 change Effects 0.000 claims description 7
- 230000015654 memory Effects 0.000 claims description 4
- 230000006870 function Effects 0.000 description 8
- 239000013598 vector Substances 0.000 description 6
- 230000001186 cumulative effect Effects 0.000 description 5
- 238000003860 storage Methods 0.000 description 5
- 238000004422 calculation algorithm Methods 0.000 description 4
- 230000004044 response Effects 0.000 description 4
- 238000012549 training Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 238000004590 computer program Methods 0.000 description 3
- 238000010586 diagram Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000009471 action Effects 0.000 description 2
- 238000013459 approach Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 238000007726 management method Methods 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000007728 cost analysis Methods 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 238000005457 optimization Methods 0.000 description 1
- 238000000513 principal component analysis Methods 0.000 description 1
- 230000008569 process Effects 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 238000010187 selection method Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 230000001052 transient effect Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 238000005303 weighing Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/98—Detection or correction of errors, e.g. by rescanning the pattern or by human intervention; Evaluation of the quality of the acquired patterns
- G06V10/987—Detection or correction of errors, e.g. by rescanning the pattern or by human intervention; Evaluation of the quality of the acquired patterns with the intervention of an operator
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/98—Detection or correction of errors, e.g. by rescanning the pattern or by human intervention; Evaluation of the quality of the acquired patterns
- G06V10/993—Evaluation of the quality of the acquired pattern
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/41—Higher-level, semantic clustering, classification or understanding of video scenes, e.g. detection, labelling or Markovian modelling of sport events or news items
Definitions
- the present disclosure generally relates to a system for ranking items and identifying individual item comparisons to improve item rankings.
- a video ranking module in one embodiment is provided for improving ranking of videos using a quality distribution histogram.
- Videos in a plurality of videos are associated with quality distribution histograms.
- the videos are ranked.
- a cost is calculated for pairwise video comparisons, the cost based on a cost if the ranking is incorrect and the probability that the ranking is incorrect.
- a comparison pair is provided to a user for the user to compare the videos.
- the video ranking module receives a comparison result for a pair of videos and updates the quality distribution to reflect the comparison.
- a method accesses a plurality of quality distributions associated with items in a corpus. Next, the method calculates a ranking of the items using the quality distributions, and determines error probabilities associated with the rankings Using the ranking error probabilities, a sequence of pairwise comparisons of items in the corpus is calculated and comparisons are provided to a comparison entity. A comparison result is used to update the quality distribution of the compared items in the pairwise comparison.
- FIG. 1 is a block diagram of a video hosting service in which video ranking is used according to one embodiment.
- FIG. 2 illustrates the various components of a video ranking module according to an embodiment.
- FIG. 3 shows a conceptual example of the quality distribution and effects of video comparisons according to one embodiment.
- FIG. 4 provides a conceptual flow of data objects in the video ranking module 119 .
- FIG. 1 is a block diagram of a video hosting service 100 in which video ranking is used according to one embodiment.
- the video hosting service 100 represents a system such as that of YOUTUBETM or GOOGLE VIDEOSTM that stores and provides videos to clients such as the client device 135 .
- the video hosting site 100 communicates with a plurality of content providers 130 and client devices 135 via a network 140 to facilitate sharing of video content between users.
- the video hosting service 100 additionally includes a front end interface 102 , a video serving module 104 , a video comparison module 106 , an upload server 108 , a user database 114 , and a video repository 116 .
- video hosting site 100 can be implemented as single or multiple components of software or hardware.
- functions described in one embodiment as being performed by one component can also be performed by other components in other embodiments, or by a combination of components.
- functions described in one embodiment as being performed by components of the video hosting website 100 can also be performed by one or more client devices 135 in other embodiments if appropriate.
- Client devices 135 are computing devices that execute client software, e.g., a web browser or built-in client application, to connect to the front end interface 102 of the video hosting service 100 via a network 140 and to display videos.
- client software e.g., a web browser or built-in client application
- the client device 135 might be, for example, a personal computer, a personal digital assistant, a cellular, mobile, or smart phone, or a laptop computer, digital television, digital set-top box, or the like.
- the network 140 is typically the Internet, but may be any network, including but not limited to a LAN, a MAN, a WAN, a mobile wired or wireless network, a private network, or a virtual private network.
- the content provider 130 provides video content to the video hosting service 100 , which in turns stores and then hosts the video content, and the client 135 views that content, typically receiving the video content in streaming format.
- a content provider may also be a content viewer (e.g., viewers who generate content and upload it to the video hosting service 100 ). Additionally, a content provider 130 may be the same entity that operates the video hosting site 100 .
- a content provider 130 operates a computer system configured to perform various content provider functions; the computer system may be operated by a client 135 as well.
- Content provider functions may include, for example, uploading a video file to the video hosting website 100 , editing a video file stored by the video hosting website 100 , or editing content provider preferences associated with a video file.
- the video hosting website 100 exposes various application programming interfaces, as well as client tools (e.g., Java or HTML5 based video editor), to support this functionality.
- a client 135 is used to view video content stored by the video hosting site 100 .
- Clients 135 may also be used to configure viewer preferences related to video content, accessing these preferences on the video hosting website 100 through provided user interfaces.
- the client 135 includes an embedded video player such as, for example, the FLASH player from Adobe Systems, Inc. or any other player adapted for the video file formats used in the video hosting website 100 .
- client and content provider refer the particular apparatus resulting from the execution of software (providing respective client and content functionality) by general purpose hardware on which the software executes. It is further understood that the various operations and methods described herein are necessarily performed by one or more of these devices, and cannot be performed simply in the human mind.
- the upload server 108 of the video hosting service 100 receives video content from a client device 135 or a content provider 130 . Received content is stored in the video repository 116 .
- a video serving module 104 provides video data from the video repository 116 to the client. Clients 135 may also search for videos of interest stored in the video repository 116 such as by entering textual queries containing keywords of interest.
- Front end interface 102 provides the interface between client 135 and the various components of the video hosting site 100 .
- the user database 114 is responsible for maintaining a record of registered users of the video hosting server 100 .
- Registered users include content providers 130 as well as users who simply view videos on the video hosting website 100 .
- Each content provider 130 and/or individual user registers account information including login name, electronic mail (e-mail) address and password with the video hosting server 100 , and is provided with a unique user ID.
- This account information is stored in the user database 114 .
- the user account also includes privacy settings associated with the user account. The privacy settings allow a user to control the amount of data retained by the system about the user, such as the user's video viewing history and other actions performed by the user on the video repository. The privacy settings allow the user to opt out of data collection by the video hosting website 100 .
- the video repository 116 contains a set of videos 117 submitted by content providers and other users.
- the video repository 116 can contain any number of videos 117 , such as tens of thousands or hundreds of millions.
- Each of the videos 117 has a unique video identifier that distinguishes it from each of the other videos, such as a textual name (e.g., the string “a91 qrx8”), an integer, or any other way of uniquely naming a video.
- the videos 117 can be packaged in various containers such as AV1, MP4, or MOV, and can be encoded using video codecs such as MPEG-2, MPEG-4, WebM, WMV, H.263, and the like.
- the videos 117 further have associated metadata 117 A, e.g., textual metadata such as a title, description, and/or tags.
- the video hosting service 100 further comprises a video ranking module 119 that ranks the videos according to particular categories.
- the video ranking module 119 can use various types of information (e.g., server logs, user interactions) to rank videos in various categories, such as “dance,” “music,” or with respect to various keywords such as “cute” or “funny” or “scary.”
- the rankings are derived using the results of comparisons made by users of videos selected for comparison by the video comparison module 106 . More specifically, the video comparison module 106 provides a pair of videos for a user of a client 135 to view and to select one of the two videos as the preferred video, given to the video category or keyword(s). This form of comparison is called a pairwise comparison.
- the video comparison module 106 may provide two videos to be ranked in the “dance” category to the user and receive a selection from the user as to the preferred video from the pair.
- the selection of which two videos from the video repository 116 are included in any particular pair of videos is determined by the video ranking module 119 .
- the comparison of videos by users necessarily has a cost to the user, in terms of the time spent, in reviewing the video and in determining which video is the preferred video. Similarly, there is a cost to the video hosting website 100 in terms of consumption of bandwidth and computing power for selecting and serving the comparisons.
- it is desirable to schedule the selection of the comparisons so as to obtain the final ranking using the fewest number of comparisons for any given level of confidence in the ranking.
- the video ranking module 119 selectively provides pairs of videos to the users so as to minimize the number of comparisons necessary to obtain a final ranking with a given level of confidence.
- This approach has the benefit of obtaining the final ranking more quickly (i.e., fewer comparisons) than other selection methods (e.g., random selection), and thus reduces the consumption of resources of both the video hosting website 100 and of the users.
- Another way of understanding the approach is that it maximizes the information value of each user's vote, by iteratively using the results of the comparisons to determine which videos to include in subsequent comparisons.
- the videos to be ranked in a particular category are selected by users, for example in a contest to identify the “best” videos in the category.
- the video ranking module 119 is now described in greater detail.
- FIG. 2 illustrates the various components of the video ranking module 119 according to an embodiment.
- the video ranking module 119 manages the ranking data associated with the videos, ranks the videos, and selects video pairs to include in each pairwise comparison.
- the video ranking module 119 includes a quality distribution updater 210 , a ranker 220 , and a comparison scheduler 230 .
- the video ranking module 119 also maintains a record of video quality distributions 240 and a video ranking 250 .
- the video quality distributions 240 are records of a quality distribution of each video modeled by a histogram or equivalent data structure for storing distributional data. Each video is associated with a corresponding quality distribution 240 .
- the quality of each video is not treated as a static number, rather the histogram allows the quality of each video to be represented as the probability that the video belongs to a particular quality level. Since the histograms represent probabilities, the sum of the bins of the histogram equal one.
- the quality distribution updater 210 updates the video quality distributions 240 associated with two videos, when a comparison of the two videos has been made by a user.
- the quality distribution updater 210 receives a comparison result made by a user from the video comparison module 106 , which indicates which videos were compared and which video was preferred.
- a comparison result can be represent by the tuple (i, j), indicating that two videos, i and j where compared, and the user selected i as the preferred video.
- the video selected by the user as the preferred video is also called the “winning” video, and the video which is not selected is also called the “losing” video.
- the quality distribution updater 210 modifies the histograms associated with each video using the current iteration of its corresponding video quality distribution.
- the histogram is represented as f i (x), where x is a bin of the histogram ranging from 0 to n.
- each of the winning video's histogram bins is set to their prior value multiplied by the cumulative distribution of the losing video's histogram bins.
- each of the losing video's histogram bins is set to their prior value multiplied by the inverse of the cumulative distribution of the winning video's histogram bins.
- the ranker 220 uses the video quality distributions 240 for all videos to compute a video ranking 250 .
- the video ranking 250 is computed using a sorting methodology and using the quality distributions to determine rank order.
- the probability that V i ranks higher than V 2 is the sum over the range of histogram bins of V i 's histogram bin multiplied by the cumulative distribution of V 2 's histogram.
- the calculated probability P(V 1 , V k ) is determined for pairs of videos V 1 , V k .
- pairs of videos can be compared and sorted to determine a ranking
- Other methods of comparing the videos can also be used in other embodiments, such as by using the mean, median, mode, or other calculation on the quality distribution.
- the videos have previously been directly compared by a user or plurality of users with sufficient confidence, the previous comparisons can be used.
- the comparison scheduler 230 selects video pairs (i, j) to be compared in a pairwise comparison. Each selected pair is provided to user by the video hosting website 100 to review the videos and select a one of the videos as the winning video.
- the scheduler 230 selects videos in order to improve the expected return on the user's comparison. That is, because there are a limited number of users who are making comparisons, the videos selected for a given comparison are selected as to maximize the information value of the user's ranking of the two videos.
- the information value here is represented by the quantity K.
- an expected cost function is used. The cost is based on the assumption that as between two videos, there is a “correct” ranking of the two videos that would result if all user selections were known at the given moment, that is, as between these two videos, which video is most preferred by the population of users. Thus, a cost of an incorrect ranking of a pair of videos is calculated. The cost is then adjusted by the probability of its occurrence.
- the cost E is determined by the absolute value of the inverse of the rating of the video i minus the inverse of the rating of video j.
- the ranking terms can be modified by an exponent to reduce or increase the rating error distribution across the rankings This equation indicates the cost of a potential user ranking of a given pair of videos i and j being incorrect.
- the information value K of comparing two items in the list is computed by multiplying the cost E that two items are in the wrong order by the probability that the losing item is in fact better than the winning item. For example, consider two items which are ranked highly, such as the top two videos in a given category. Because these are highly ranked items, there is a high cost E if the two items are incorrectly ranked, however, there may be a very low probability P of being mistakenly ranked based on the quality distributions of the items. Accordingly, the information value K may be relatively low, so that the scheduler need not provide this pair of videos to a user for a comparison. Instead, the scheduler may select for comparison another pair whose cost is lower but whose error probability is significantly higher, and therefore has a much higher information value K.
- the comparison scheduler By computing the value K of a comparison within the videos, the comparison scheduler identifies the comparisons to be made by a user which will best reduce the likelihood of a ranking error cost.
- the value K can be computed for adjacent videos, among all possible videos, or can be computed for a range of videos around a video. As a result, the videos which have a broader quality distribution are more likely to be compared as these videos are relatively unknown in the actual rankings. This also allows new videos (presumably initialized to a broader distribution) to be compared with higher ranked videos to quickly determine if the new video is high quality, without needing a high number of user comparisons.
- the selection of videos to compare can also be scheduled in other ways.
- One method is to schedule comparisons for videos which have adjacent rankings. For example videos ranked 5 and 6, or videos ranked 23 and 24 would be compared rather than 5 and 7 or 22 and 24.
- Another method for scheduling comparisons is to schedule adjacently ranked videos and adjust the comparison frequency for adjacently ranked videos according to the videos' ranking For example, videos 1 and 2 would be compared more frequently than videos 50 and 51.
- a modification to the adjacent ranking scheduling method is to weigh comparison frequency using the spread of the quality distribution.
- a measure of the spread of the quality distribution for the videos is determined for each video, such as a standard deviation. The measure indicates the extent to which a quality distribution has been well-defined as a result of comparisons. For those videos with a higher measure of the quality spread, e.g. a high standard deviation, the actual quality of the video is not well known.
- the comparisons for adjacently ranked videos are scheduled with a frequency emphasizing comparisons where at least one video in the ranking has a higher measure of quality distribution spread. In this way the videos whose quality is less-well known are more likely to be compared and the videos' true quality distribution can be more quickly determined.
- the video ranking module 119 determines the relative ranking of videos, updates the video quality distributions, and schedules video comparisons to improve the ranking of the videos.
- FIG. 3 shows an illustrative example of the quality distribution and effects of video comparisons according to one embodiment.
- video A and video B each has a corresponding quality distribution histogram, each bin reflecting the likelihood the video is the quality associated with the bin.
- the quality distribution histograms vary in shape and distribution. Histogram A is broadly distributed and does not strongly indicate any particular quality level of video A. As a result, the actual quality of video A is not well-defined. Histogram B is more narrowly distributed and shows video B is more likely to be an above average video, but unlikely to be exceptional or below average.
- the quality distribution histograms A, B are updated to reflect the results of the comparison and provide updated quality distribution histogram A′, B′.
- the updating is performed using the update function above.
- the quality distribution histogram A′ reflects that video A which was not expected to win has been selected over the expected winner. Since the video that it beat was a known above-average quality, the likelihood that video A is low quality is now reduced. Similarly, the quality distribution histogram B′ is not significantly changed, since the prior quality distribution B was very likely to be an above average video.
- the loss of video B against a video with a relatively wide quality distribution does increases the likelihood that video B is a lower quality video, but the distribution is not changed as significantly as the quality distribution of video A.
- the quality distribution may be modified without a comparison to other videos.
- the video quality distribution may degenerate into a single histogram bin, or, if represented by a Gaussian distribution, may have a standard deviation approaching zero.
- the distribution may be adjusted without a comparison to other videos to prevent the video from achieving a degenerate quality distribution. This may be accomplished by increasing the histogram bins of adjacent bins to the degenerate single histogram bin, or by increasing the standard distribution of a Gaussian distribution. This ensures the quality distribution of the videos remains flexible and subject to change.
- FIG. 4 illustrates a flow diagram of data objects in the video ranking module 119 .
- each new video is initialized 400 with a video quality distribution.
- the video quality distribution can be initialized 400 as a curve around a mean (e.g., a Gaussian distribution) or may be initialized to be equally probable to be any quality level.
- the initialized quality distribution for the new video can be added to the video quality distribution 410 .
- the videos are ranked to form video rankings 420 .
- the video rankings are used to determine the error cost E and the ranking error probabilities P ( 430 ) as described above.
- the error cost is used to determine the information value K for each pair of videos of a comparison.
- the information values K are used to schedule a video comparison sequence 440 .
- the video scheduling is selected to increase the information in the system as a whole by selecting videos to compare with higher information values K. Serving the comparison to a user and receiving a comparison result 450 will yield an update to the quality distributions 410 as a result of the comparison. Since the comparison changes the quality distributions the rankings and the information values of the videos will change as videos are compared. As a result, the video scheduling order is recalculated periodically in view of the comparisons.
- the video comparison sequence can be determined for the system as a whole, or may be determined on a per-user basis. That is, individual users may be provided the same sequence of videos to rate, or individual users may be served pairs of videos from a central sequence of videos.
- the determination of whether a video is better than another video is not typically an objective measure.
- the votes of users for the “better” video with respect to any particular category often provide a noisy data set.
- Many users will have differing views on which video should win a comparison.
- some users may intentionally seek to distort the results of the contest.
- some users may be better arbiters of the rank than other users. That is, some users may more frequently and more consistently vote similarly to other users, and therefore are more trustworthy in their comparisons.
- the modifier ⁇ is used to determine the trustworthiness or “strength” of the comparison result and can range from zero to one.
- This modifier a can be a constant, or it can vary on a per-user basis; that is, each user is associated with a trustworthiness value, and as such, when the user provides a ranking of two videos, the updates to the videos quality histograms for the two videos are scaled by the user's trustworthiness. In this fashion, users who are determined to not be trustworthy only modestly influence the quality histograms. Over time, the per-user variable can change. More specifically, a user's trustworthiness can be incrementally increased each time the user's ranking of a pair of item coincides with an expected ranking (e.g., the most likely ranking of the items).
- new users may be provided several comparisons with an “expected” winner having a very high known quality, and the user's modifier is adjusted according to the user's judgment in relation to popular opinion.
- the modifier can change on a per-comparison basis. For example, a user may provide a response to a pair of videos in a time frame shorter than the time to review the videos. This suggests the viewer failed to view the videos or failed to view the videos to completion. As a result, the rating provided by the comparison relative to that video pair is treated with reduced confidence by adjusting the modifier ⁇ (possibly to 0).
- the system can identify the placement of a new video in the ranking using the new video's similarity to the videos which have been ranked.
- the system can identify an initial quality distribution for the new video.
- features of the new video can be compared to features of the other videos using machine learning techniques.
- a set of videos is selected to use as a positive and negative training sets.
- the selection of videos into each set can be performed using a threshold rank, such as selecting the top third and bottom third of the ranked videos.
- a threshold rank such as selecting the top third and bottom third of the ranked videos.
- features are extracted from the videos for training by a classifier.
- the features extracted in one embodiment are visual low-level frame-based features.
- one embodiment uses a color histogram and one embodiment uses histogram of oriented gradients to extract features from frames in a video, though other frame-based features can be used.
- the features extracted are collected on a per-frame basis and could comprise other frame-based features such as an identified number of faces or a histogram of oriented optical flow, and may comprise a combination of extracted features.
- Further features are extracted in other embodiments, such as a Laplacian-of-Gaussian (LoG) or Scale Invariant Feature Transform (SIFT) feature extractor, a color histogram computed using hue and saturation in HSV color space, motion rigidity features, texture features, filter responses (e.g.
- LoG Laplacian-of-Gaussian
- SIFT Scale Invariant Feature Transform
- SURF speeded-up robust features
- Additional audio features can also be used, such as volume, an audio spectrogram, or a stabilized auditory image.
- the feature reduction is performed in one embodiment using a learned linear projection using principal component analysis to reduce the dimensionality of the feature vectors to 50, or some other suitable number less than 100. Other embodiments can use additional techniques to reduce the number of dimensions in the feature vectors.
- the feature vector of each video also includes the quality distribution and the ranking of the video.
- a classifier learns the features associated with the videos in the positive training set. In this way, a classifier is developed to identify the features and quality distributions characteristic of highly-ranked videos.
- the classifier is next used to assist in initializing the quality distribution of newly-added videos.
- the frame and audio features are extracted from the newly-added video, and the classifier is used to analyze the newly-added video and determine a quality distribution for the new video. For example, a new video may be identified to have similar features to the videos in the first-third of the ranked videos, and the quality distribution can be initialized for that video higher on the histogram range. As a result, the initial quality distributions can be determined to more closely resemble the quality distributions of the existing well-ranked videos. Assuming the video actually is a higher quality video, the classification reduces the number of votes required to determine the proper ranking of the newly-added video.
- the comparison scheduler can also be weighted to preferentially select pairwise comparisons within a subgenre of video.
- a subgenre of video such as “dance,” it is difficult for users to fairly compare two different types of dance videos. After identifying highly ranked videos for each type of dance video, the goal may still be to identify the “best” dance video, such that a comparison is ultimately made between various genres.
- the different video subgenres can be determined in a variety of ways.
- One method is to identify subgenres based on keywords associated with each video. Keywords can be associated with each video using keywords uploaded with the video. Further sources of keywords include comments made by other users about a video. The keywords can be compared against a defined vocabulary for each of the subgenres, or the keywords may be clustered to determine groups of videos associated with similar keywords.
- the videos may also be placed into subgenres using manual methods.
- a video When a video is uploaded by a user, the user may be prompted to select a subgenre associated with the video.
- a video's subgenre can be determined by a system operator of the video hosting service.
- the video subgenres may also be determined with user input, such as by providing users who are making a comparison an opportunity to select a subgenre.
- Another method for selecting video subgenres is identifying features from the videos and determining groupings of videos using these features.
- the features can be extracted from the videos using the methods as described above to create a feature vector.
- the feature vectors for videos can be grouped together. These groupings can be performed, for example, using a clustering methodology to identify latent similarities between the features vectors of the various videos.
- the clusters can be used to identify subgenres for the videos.
- Each latent cluster of video features is treated as a distinct subgenre, though there may not be any express information about the video indicating the videos actually belong to the distinct subgenres.
- comparisons within the subgenre can be performed to enable users to compare videos for each subgenre.
- the comparison scheduler preferentially compares one hip-hop video to another hip-hop video, rather than compare a hip-hop video to a ballroom dance video.
- the comparison of similar types of videos may be more important within the lower and medium-quality rankings.
- Encouraging comparisons between videos of similar subgenres can be performed in several ways.
- One method is to provide two rankings for each video; one ranking among the videos of the genre as a whole, and one ranking among the videos within the subgenre.
- Comparisons across subgenres can be thresholded such that no comparisons are made across subgenres unless one of the videos has ranked higher than the threshold in that subgenre. For example, a threshold can be placed at the fifth-ranked video in the subgenre, at which point the video would be eligible to be compared with other videos from other genres
- a system incorporating a distribution update module, a ranker, and a scheduler are not limited to videos and may be employed by other systems.
- these techniques can be used for any system using pairwise comparisons between items, which comparisons reveal latent qualities between the items.
- the techniques could be used to schedule individuals to compete in competitions, such as chess, or to select articles for inclusion in a publication.
- a ranker 220 is used to rank search result items.
- the user selection of a particular item relative to other items can indicate a preference of the user for one item relative to the other items, and the quality distribution for the items is adjusted accordingly. For example, assume a user searches for a set of search results, relevant to a search term. A typical search returns a set of search pages with a number of search results which places the highest ranked results on the first page. However, users may find items of interest on second and subsequent pages. Using these ranking, the selection of an item from a second page of search results can be interpreted as being mildly preferential to the other items on the second page, but can be interpreted as strongly preferential to the items on the first page. The “mild” and “strong” preferences can be quantified by adjusting ⁇ in Equations 6 and 7.
- Certain aspects of the present disclosure include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present disclosure could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present disclosure also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of non-transient computer-readable storage medium suitable for storing electronic instructions.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present disclosure is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
Abstract
Description
∀×ε[0,n]→f i(x):=f i(x)C j(x) Eq. (1)
∀×ε[0,n]→f j(x):=f j(x)(1−C i(x)) Eq. (2)
P(V 1 ,V 2)=Σx=0 n f 1(x)C 2(x) Eq. 3
K(i,j)=E(i,j)P(i,j) Eq. 4
where E(i,j) is the cost factor, and P(i,j) is the expectation (probability) value. These values are now described.
K(i,j)=E(i,j)P(i,j) Eq. 6
∀×ε[0,n]→f i(x):=α(f i(x)C j(x))+(1−α)f i(x) Eq. 7
∀×ε[0,n]→f j(x):=α(f j(x)(1−C i(x)))+(1−α)f j(x) Eq. 8
The modifier α is used to determine the trustworthiness or “strength” of the comparison result and can range from zero to one. This modifier a can be a constant, or it can vary on a per-user basis; that is, each user is associated with a trustworthiness value, and as such, when the user provides a ranking of two videos, the updates to the videos quality histograms for the two videos are scaled by the user's trustworthiness. In this fashion, users who are determined to not be trustworthy only modestly influence the quality histograms. Over time, the per-user variable can change. More specifically, a user's trustworthiness can be incrementally increased each time the user's ranking of a pair of item coincides with an expected ranking (e.g., the most likely ranking of the items). For example, new users may be provided several comparisons with an “expected” winner having a very high known quality, and the user's modifier is adjusted according to the user's judgment in relation to popular opinion. In addition, the modifier can change on a per-comparison basis. For example, a user may provide a response to a pair of videos in a time frame shorter than the time to review the videos. This suggests the viewer failed to view the videos or failed to view the videos to completion. As a result, the rating provided by the comparison relative to that video pair is treated with reduced confidence by adjusting the modifier α (possibly to 0).
Ranking Classifier
Claims (18)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/525,219 US8688716B1 (en) | 2012-06-15 | 2012-06-15 | Recommending pairwise video comparisons to improve ranking |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/525,219 US8688716B1 (en) | 2012-06-15 | 2012-06-15 | Recommending pairwise video comparisons to improve ranking |
Publications (1)
Publication Number | Publication Date |
---|---|
US8688716B1 true US8688716B1 (en) | 2014-04-01 |
Family
ID=50348987
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/525,219 Active 2032-08-21 US8688716B1 (en) | 2012-06-15 | 2012-06-15 | Recommending pairwise video comparisons to improve ranking |
Country Status (1)
Country | Link |
---|---|
US (1) | US8688716B1 (en) |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150178373A1 (en) * | 2013-12-23 | 2015-06-25 | International Business Machines Corporation | Mapping relationships using electronic communications data |
US10984035B2 (en) * | 2016-06-09 | 2021-04-20 | Spotify Ab | Identifying media content |
US11048748B2 (en) | 2015-05-19 | 2021-06-29 | Spotify Ab | Search media content based upon tempo |
US11113346B2 (en) | 2016-06-09 | 2021-09-07 | Spotify Ab | Search media content based upon tempo |
US11153652B2 (en) * | 2018-05-28 | 2021-10-19 | Guangzhou Huya Information Technology Co., Ltd. | Method for displaying live broadcast room, apparatus, device, and storage medium |
US20230016086A1 (en) * | 2020-11-12 | 2023-01-19 | Ambarella International Lp | Unsupervised multi-scale disparity/optical flow fusion |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070174385A1 (en) * | 2005-12-02 | 2007-07-26 | Dufour Remi | Computer system, method and software for establishing, managing, evaluating, classifying and storing on a server a set of server client digital media files under direct control of server client for delivery to third parties |
US20080154889A1 (en) * | 2006-12-22 | 2008-06-26 | Pfeiffer Silvia | Video searching engine and methods |
US20110246440A1 (en) * | 2010-03-12 | 2011-10-06 | Kocks Peter F | Systems And Methods For Organizing And Displaying Electronic Media Content |
-
2012
- 2012-06-15 US US13/525,219 patent/US8688716B1/en active Active
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070174385A1 (en) * | 2005-12-02 | 2007-07-26 | Dufour Remi | Computer system, method and software for establishing, managing, evaluating, classifying and storing on a server a set of server client digital media files under direct control of server client for delivery to third parties |
US20080154889A1 (en) * | 2006-12-22 | 2008-06-26 | Pfeiffer Silvia | Video searching engine and methods |
US20110246440A1 (en) * | 2010-03-12 | 2011-10-06 | Kocks Peter F | Systems And Methods For Organizing And Displaying Electronic Media Content |
Non-Patent Citations (2)
Title |
---|
Youtube, LLC, "Introducing YouTube Slam," Dec. 27, 2011, 4 pages, [online] [retrieved on Jan. 8, 2013] Retrieved from the internet . |
Youtube, LLC, "Introducing YouTube Slam," Dec. 27, 2011, 4 pages, [online] [retrieved on Jan. 8, 2013] Retrieved from the internet <URL:http://youtube-global.blogspot.com/2011/12/introducing-youtube-slam.html>. |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150178373A1 (en) * | 2013-12-23 | 2015-06-25 | International Business Machines Corporation | Mapping relationships using electronic communications data |
US10127300B2 (en) * | 2013-12-23 | 2018-11-13 | International Business Machines Corporation | Mapping relationships using electronic communications data |
US10282460B2 (en) | 2013-12-23 | 2019-05-07 | International Business Machines Corporation | Mapping relationships using electronic communications data |
US11048748B2 (en) | 2015-05-19 | 2021-06-29 | Spotify Ab | Search media content based upon tempo |
US10984035B2 (en) * | 2016-06-09 | 2021-04-20 | Spotify Ab | Identifying media content |
US11113346B2 (en) | 2016-06-09 | 2021-09-07 | Spotify Ab | Search media content based upon tempo |
US11153652B2 (en) * | 2018-05-28 | 2021-10-19 | Guangzhou Huya Information Technology Co., Ltd. | Method for displaying live broadcast room, apparatus, device, and storage medium |
US20230016086A1 (en) * | 2020-11-12 | 2023-01-19 | Ambarella International Lp | Unsupervised multi-scale disparity/optical flow fusion |
US11775614B2 (en) * | 2020-11-12 | 2023-10-03 | Ambarella International Lp | Unsupervised multi-scale disparity/optical flow fusion |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11151145B2 (en) | Tag selection and recommendation to a user of a content hosting service | |
CA2817103C (en) | Learning tags for video annotation using latent subtags | |
US10055411B2 (en) | Music recommendation engine | |
US9552555B1 (en) | Methods, systems, and media for recommending content items based on topics | |
CN110532479A (en) | A kind of information recommendation method, device and equipment | |
US8688716B1 (en) | Recommending pairwise video comparisons to improve ranking | |
CN104317835B (en) | The new user of video terminal recommends method | |
US11763145B2 (en) | Article recommendation method and apparatus, computer device, and storage medium | |
CN107766360B (en) | Video heat prediction method and device | |
CN109241203B (en) | Clustering method for user preference and distance weighting by fusing time factors | |
US20110047163A1 (en) | Relevance-Based Image Selection | |
US20130218905A1 (en) | Content recommendation for groups | |
US11301528B2 (en) | Selecting content objects for recommendation based on content object collections | |
US8706655B1 (en) | Machine learned classifiers for rating the content quality in videos using panels of human viewers | |
EP3510496A1 (en) | Compiling documents into a timeline per event | |
WO2013121181A1 (en) | Method of machine learning classes of search queries | |
CN111259192A (en) | Audio recommendation method and device | |
US20210200799A1 (en) | System and method for improved content discovery | |
US20160132771A1 (en) | Application Complexity Computation | |
Zhang et al. | Exploit latent dirichlet allocation for one-class collaborative filtering | |
CN110709833B (en) | Identifying video with inappropriate content by processing search logs | |
CN110929528A (en) | Statement emotion analysis method, device, server and storage medium | |
Kjekstad et al. | Semantic user behaviour prediction in online news-applying topic modeling, community detection, and user modeling for news recommendation | |
CN114356979A (en) | Query method and related equipment thereof |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DU HADWAY, CHARLES;DE ALFARO, LUCA;SIGNING DATES FROM 20120613 TO 20120821;REEL/FRAME:028823/0588 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
CN106462395A - Thread waiting in a multithreaded processor architecture - Google Patents
Thread waiting in a multithreaded processor architecture Download PDFInfo
- Publication number
- CN106462395A CN106462395A CN201580023351.7A CN201580023351A CN106462395A CN 106462395 A CN106462395 A CN 106462395A CN 201580023351 A CN201580023351 A CN 201580023351A CN 106462395 A CN106462395 A CN 106462395A
- Authority
- CN
- China
- Prior art keywords
- thread
- memory
- address
- processor
- instruction
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000003860 storage Methods 0.000 claims abstract description 110
- 238000012545 processing Methods 0.000 claims abstract description 61
- 238000000034 method Methods 0.000 claims abstract description 49
- 230000008569 process Effects 0.000 claims description 29
- 238000007689 inspection Methods 0.000 claims description 5
- 238000004590 computer program Methods 0.000 abstract description 14
- 230000000977 initiatory effect Effects 0.000 abstract description 3
- 230000009471 action Effects 0.000 description 9
- 230000005540 biological transmission Effects 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 230000002349 favourable effect Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 239000003795 chemical substances by application Substances 0.000 description 2
- 238000004891 communication Methods 0.000 description 2
- 238000000151 deposition Methods 0.000 description 2
- 230000005611 electricity Effects 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 241001269238 Data Species 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 239000012141 concentrate Substances 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 235000013399 edible fruits Nutrition 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000007717 exclusion Effects 0.000 description 1
- 238000002372 labelling Methods 0.000 description 1
- 230000014759 maintenance of location Effects 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000001693 membrane extraction with a sorbent interface Methods 0.000 description 1
- 238000012544 monitoring process Methods 0.000 description 1
- 239000012466 permeate Substances 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 239000000047 product Substances 0.000 description 1
- 238000011084 recovery Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 241000894007 species Species 0.000 description 1
- 238000009987 spinning Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
- 230000001052 transient effect Effects 0.000 description 1
- 239000002699 waste material Substances 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/466—Transaction processing
- G06F9/467—Transactional memory
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F13/00—Interconnection of, or transfer of information or other signals between, memories, input/output devices or central processing units
- G06F13/14—Handling requests for interconnection or transfer
- G06F13/20—Handling requests for interconnection or transfer for access to input/output bus
- G06F13/24—Handling requests for interconnection or transfer for access to input/output bus using interrupt
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/0802—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches
- G06F12/0806—Multiuser, multiprocessor or multiprocessing cache systems
- G06F12/0813—Multiuser, multiprocessor or multiprocessing cache systems with a network or matrix configuration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/0802—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches
- G06F12/0806—Multiuser, multiprocessor or multiprocessing cache systems
- G06F12/0842—Multiuser, multiprocessor or multiprocessing cache systems for multiprocessing or multitasking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3824—Operand accessing
- G06F9/3834—Maintaining memory consistency
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3836—Instruction issuing, e.g. dynamic instruction scheduling or out of order instruction execution
- G06F9/3851—Instruction issuing, e.g. dynamic instruction scheduling or out of order instruction execution from multiple instruction streams, e.g. multistreaming
Abstract
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for thread waiting. One of the methods includes starting, by a first thread on a processing core, a task by starting to execute a plurality of task instructions; initiating, by the first thread, an atomic memory transaction using a transactional memory system, including: specifying, to the transactional memory system, at least a first memory address for the atomic memory transaction and temporarily ceasing the task by not proceeding to execute the task instructions; receiving, by the first thread, a signal as a consequence of a second thread accessing the first memory address specified for the atomic memory transaction; and as a consequence of receiving the signal, resuming the task, by the first thread, and continuing to execute the task instructions.
Description
Technical field
This specification is related to processor architecture.
Background technology
Some processor architectures can perform multiple separate threads, such as multithreading.In some cases, make thread just defeated
Enter/export (IO) or simultaneously operating is waited rather than by another thread on context handoff processor core by this line
It is desirable that journey is amortized to processor core.In order to realize this purpose, software can be realized busy to one or more storage address
Poll or spin poll, the such as synchronization based on spin lock.Although can be by avoiding up and down to the busy poll of storage address
Civilian handover overhead is producing favourable delay, but it inevitably leads to the execution resource wasting.For example, for single thread
Process cores or the hyperthread process cores not having any hardware thread switching capability, process cores may be for reality during busy poll
Border work becomes to be not used by, and this may waste the resource of other hyperthreads in process cores.In addition, if polled memorizer
The quantity of address is a lot, then this may result in additional delay.
Content of the invention
Present specification describes monitor multiple storage address, quick in waiting thread using atomic memory transaction
Ground recovers the skill waiting thread and minimizing the impact waiting other concurrent thread to shared multiline procedure processor framework for the thread
Art.
Usually, a novelty aspect of the theme described in this specification can be embodied in the side including following actions
Method：By the first thread in process cores by execution multiple tasks instruct beginning a task with；Affairs are utilized by first thread
Property accumulator system initiating atomic memory transaction, including：Specify for atomic memory thing to transactional memory system
Business at least first memory address and temporarily cease task by not continuing executing with assignment instructions；Visit as the second thread
Ask the result specifying the first memory address for atomic memory transaction by first thread receipt signal；And as reception
To the result of signal, by first thread recovery tasks and continue executing with assignment instructions.
In another general embodiments, a kind of method includes following actions：When executing the second thread in first thread
Initiate atomic memory transaction；Specify at least one storage address for described affairs as determining by non-first thread
The result of thread accesses and terminate described affairs；And task is executed in first thread as the result terminating described affairs
Instruction.
The other embodiments of present aspect include corresponding computer system, device and record and deposit in one or more computers
Computer program on storage equipment, is each configured to execute the action of methods described.For being configured to execute specific behaviour
Make or action one or more system for computer for it is meant that described system have mounted thereto operation when make
Obtain software, firmware, hardware or the combinations thereof of the described operation of described system execution or action.Specific for being configured to execute
It is meant that one or more of program includes instructing for one or more computer programs of operation or action, described finger
Order makes the described operation of described device execution or action when being executed by data processing equipment.
Aforementioned and other embodiments each can alternatively include alone or in combination one of following characteristics or
Multiple.For example it is intended that the first memory address for atomic memory transaction includes specifying for atomic memory transaction
Multiple storage address, multiple caches of the plurality of storage address and the cache memory being coupled to process cores
Line corresponds to.The multiple storage address for atomic memory transaction are specified to include execution in the plurality of storage address
Each storage address loading instruction.Described feature further includes：For each in the plurality of storage address
At storage address, the head pointer of multiple head pointers is stored at described storage address, each head pointer specifies multiple teams
Respective queue in row, and described signal includes being stored in specific head pointer in particular memory address more for updating
New signal.
Described feature further includes at specifies for executing institute after the first memory address of atomic memory transaction
State the instruction of one or more of affairs, and the instruction inclusion of one or more of described affairs is configured to for executing consumption
The circulation of the few resource of process cores.The task of temporarily ceasing includes executing low output and instructing once or be repeatedly carried out low output referring to
Order.Low output instruction includes one or more of following：The instruction of memorizer fence, no operation (NOP) instruction or time stamp inspection
Instruction.Transactional memory system includes hardware transactional memorizer (hardware transactional memory, HTM)
System, described HTM system configuration is any thread interrupting specifying the transaction memory address being accessed by different threads.Described
Signal is to receive from the second different equipment executing the second thread, and process cores and this second equipment be coupled to including
The shared memory of first memory address.Process cores are coupled to the first main storage in the first processing system, and first
Storage address specifies the memory location in the first main storage, and receipt signal is included from different second processing systems
Receipt signal, described different second processing system configuration is direct the second different main storage from second processing system
Read data and write the data directly into the first memory address in the first main storage.
The specific embodiment of the theme described in achievable this specification is to obtain one or more advantages.First, user
Lightweight user model can be built notify, so that equipment or thread recover during multithreading or reactivate using affairs
Treat thread；Second, can rapidly place the thread in waiting state using affairs and rapidly recover to wait thread to be executed；
3rd, affairs can minimize the impact waiting other concurrent thread to shared same treatment core for the thread；4th, affairs can be simultaneously
Ground monitor for example application (for example, mutual exclusion code, direct distance input and output (remote direct memory access,
RDMA), OS bypass, NIC unloading or non-volatile byte-addressable storage control) the middle multiple storages waiting thread interested
Device address (for example, multiple cache lines or queue)；5th, in a processing system, the wait thread of execution can be remotely
(for example, reactivating) is controlled by another processing system；6th, the device driver of operating system can be using affairs Lai excellent
Change the spinning cycle on multiple high-performance queues or optimize the personal code work in complicated multi-threaded system.
Elaborate the thin of one or more embodiments of theme described in this specification in the the accompanying drawings and the following description
Section.According to description, drawings and claims, the further feature of this theme, aspect and advantage will be apparent from.
Brief description
Fig. 1 is the block diagram of the example multithreaded processing system with transactional memory system.
Fig. 2A is performed for the block diagram of the example multithreaded processing system of multiple threads.
Fig. 2 B is depicted and is executed multiple threads by the multithreaded processing system of Fig. 2A.
Fig. 3 depicts two processing systems by main storage direct interaction.
Fig. 4 is the flow chart of the instantiation procedure of multithreaded processing system execution.
Identical label and labelling instruction identical element in various figures.
Specific embodiment
Fig. 1 is the block diagram of example multithreaded processing system 100.Multithreaded processing system 100 can be executed concurrently multiple lines
Journey.Wait thread can execute atomic memory transaction during waiting period and can rapidly again be swashed by other threads or equipment
Live to be executed.
Multithreaded processing system 100 includes processor 102.Processor 102 can be for being configured to execute computer program instructions
Physically or logically process cores.It is (for example, one or more random that processor 102 is coupled to main storage 104 via interconnection 106
Access memorizer (RAM) chip).Interconnection 106 may include shared system bus or the point to point network in various topological structure.
In some implementations, multithreaded processing system 100 includes being coupled to main storage 104 via interconnection 106
One or more of the other processor 108.Processor 108 can be physically or logically process cores.Processor 102 and processor 108 can
There is shared memory (for example, main storage 104) to carry out multithreading (for example, simultaneous multi-threading (simultaneous
Multithreading, SMT)).In some implementations, processor 102 and processor 108 are on special chip.At some
In implementation, processor 102 and processor 108 and can be connected by on-chip network on processor chip.
Processor 102 may include one or more local caches 110.Cache 110 is cacheable next autonomous
The data (for example, storage is stored in the local replica of the value in main storage 104) of memorizer 104, so that processor 102 is fast
Speed accesses.In some implementations, processor 102 includes one or more cache hierarchy.Each cache hierarchy can
To arrange by different level, such as L1 cache, L2 cache and L3 cache.In particular example, processor 102 includes
The cache (for example, eight road L1 cache) of lower-level and the higher levels by sharing with other processors 108
Cache (for example, L3 cache) be coupled to main storage 104.In some implementations, processor 102 is coupled to
Cache 110.
Multithreaded processing system 100 includes transactional memory system 112.In some implementations, transactional storage
Device system 112 is the assembly of processor 102, as illustrated in fig. 1.Each of processor 108 may also comprise and affairs
Property accumulator system 112 has the transactional memory system of essentially identical attribute.In some implementations, transactional is deposited
Reservoir system 112 is for example coupled to processor 102 and processor 108 via interconnection 106.In some implementations, transactional
Accumulator system 112 is included in cache 110.
Transactional memory system 112 can be with hardware transactional memorizer (hardware transactional
Memory, HTM), software transactional memory (software transactional memory, STM) or a combination thereof come real
Existing.In some implementations, transactional memory system 112 is implemented as one or more physical memory devices or and is
Column processor executable instruction.For example, processor 102 can be for supporting the Haswell of the Intel (INTEL) of limited hardware affairs
Processor micro-architecture.
Transactional memory system can be configured to and for the block of code to be detected as atom and/or isolated affairs and/or configuration
It is that the block of code to be executed as atom and/or isolated affairs.For example, by transactional memory system 112, programmer
One group of instruction can be claimed as a part for block and transactional memory system 112 can ensure the instruction in described block
To be executed as atom and/or isolated affairs.With respect in one or more of the other process cores (for example, multiple threads system
Processor 108 in system 100) the upper all other concurrent thread executing, all instructions of affairs can as processor (for example,
Processor 102) on single atomic block executing.In some cases, it may not be able to the intermediate result of affairs is exposed to system 100
Other parts, until affairs complete.
Atomic memory transaction may include specific instruction, and for example memory access is (for example, to shared shared memory
The reading of (such as main storage 104) and/or some other memory areas and/or write operation).Main storage 104 can quilt
One or more of system 100 other thread concomitantly accesses.During affairs, in main storage 104, processor 102 has been
The storage address being read from or loading data can be described as reading collection, and in main storage 104, processor 102 is to it
The storage address writing or storing data can be described as write collection.Cache 110 in processor 102 can be used for keeping coming
Collect from reading and/or to the data writing collection and there is and read collection and/or write the corresponding memory area of collection.
In the affairs term of execution, which memory area transactional memory system 112 can follow the tracks of from for example reading
Collection and/or write collection read and/or are written to and for example read collection and/or write collection.In some implementations, transactional is deposited
The whole cache line of resident data wherein can be labeled as being to concentrate in the reading of affairs or write by reservoir system 112.
Cache line can keep multiple different addressable data.
As long as maintaining the condition for affairs, transactional memory system 112 allows for atomic memory transaction to run.As
Fruit has run counter to one or more conditions of affairs, and affairs just terminate.In some instances, due to the competition of other processors,
The execution that remote control transmission (those for example being led to by interruption and fault), explicit software ABORT (termination) instruct, hardware provide
The specific condition of the inadequate and other implementation in source, can terminate affairs in any point.
Transactional memory system 112 can provide one or more instructions to specify for affairs to protect to system 100
One or more storage address or cache line.Transactional memory system 112 guarantees the visit to Guared memory
Ask and atomically occur with respect to the thread being performed in parallel all other in system 100.In some implementations, transactional is deposited
Reservoir system 112 includes extension (for example, the thing of one or more of cache to system (for example, cache 110)
The synchronous extension (transactional synchronization extension, TSX) of business property) so that indicated which cache
Line is protected.
Transactional memory system 112 can be followed the tracks of and specify the storage address for affairs in thread (for example, to be protected
Cache line address) and determine for whether affairs upset (violation).In some instances, transactional
Whether accumulator system 112 determines specifies the one or more storage address for affairs by external agent (for example, to be
Different processor or the different disposal system of another thread is executed in system 100) access.
If transactional memory system 112 determines that the storage address specified is accessed by external agent, affairs
Property accumulator system 112 can determine that affairs to be terminated.In some instances, transactional memory system 112 can receive instruction right
The signal of the access of the storage address specified as the result receiving described signal, for example, automatically determine thing to be terminated
Business.Transactional memory system 112 can be configured to any line specifying the transaction memory address being accessed by different threads
Journey takes action (for example, redirecting).
In particular example, thread executes atomic transaction on the processor 102.Have specified that the reading collection for affairs
And/or write collection.If one of processor 108 processor writes data into reading collection or reads from write collection or write
Data determines, to write collection, then transactional memory system 112, reading collection or the write specified for the affairs on processor 102
Collection was accessed by that processor in processor 108, and further determined that affairs to be terminated.
Transactional memory system 112 may include interconnection processor (for example, processor 102 and processor 108) it
Between cache coherency communications agreement, with guarantee the value in the cache be included in each processor be stored in shared
Value in memorizer (for example, main storage 106) is consistent.Each processor may include various cache coherence mechanism, institute
State cache coherence mechanism may include with other process cores switching cache concordance message (such as MESIF (modification,
Exclusive, shared, invalid and forward) protocol message, MESI protocol message) and/or execution synchronizing function instrument.
In some instances, when the thread accesses on one of processor 108 processor are used for the line on processor 102
During one or more storage address of journey, the transactional memory system on that processor in processor 108 can be to
Transactional memory system 112 sending signal.After receiving described signal, transactional memory system 112 can determine that will be eventually
The only thread on processor 102.In some cases, equipment (for example, non-nuclear equipment) can be to transactional memory system 112
Make arrangements for his funeral stop signal.
In some instances, after the affairs in thread are terminated, transactional memory system 112 can allow processor
102 continue executing with thread.For example, processor 102 can jump to instruction address (the such as cache 110 specified for affairs
In cache line), and continue executing with the instruction (and non-transactional) in thread.As indicated above and further below
Discuss in detail, this can be used for rapidly retracting or recover to wait thread to the pipeline of processor.
In some implementations, the processor (example in multithreaded processing system (for example, multithreaded processing system 100)
As processor 102) just executing multiple threads.First thread includes the instruction of task and atomic memory transaction.Processor can lead to
Cross and start to execute multiple tasks and instruct to start the task in first thread.In first time point, first thread can enter wait
State and/or the second thread can execute on the processor.Described processor can by do not continue executing with assignment instructions
Temporarily cease task.
Processor can initiate atomic memory transaction in first thread.Described processor can give transactional memory system
(for example, the transactional memory system 112 in system 100) specifies at least one the memorizer ground for atomic memory transaction
Location.In some cases, described processor can perform the multiple storage address for atomic memory transaction.The plurality of deposit
Memory address can be coupled to processor or include in cache memory (for example, cache 110) multiple high
Fast cache lines correspond to.
In some implementations, after specifying for one or more storage address of affairs, processor can be held
Act one or more of business instruction.In some instances, affairs include being configured to consuming processor for execution and/or are
The circulation of system few resource.In some instances, processor can perform few money execution being consumed to processor and/or system
The low output instruction (for example, execution once or is repeatedly carried out) in source.Low output instruction can be no operation (NOP) instruction, storage
One or more of grid hurdle (fence) instruction or time stamp inspection instruction.
For example, memorizer fence job sequence can be：
while(1)
mfence()；
Time stamp inspection instructs：
In some implementations, for example pass through to change the instruction set architecture in transactional memory system
(instruction set architecture, ISA), affairs may include mwait instruction.Mwait instruction can be concentrated reading
One of multiple cache lines place specify.When first thread executes mwait instruction during waiting period, processor
Can deallocate from first thread or reschedule execution resource and allow other concurrent thread (for example, the second thread) use institute
State resource.
In some implementations, affairs can be strengthened to indicate target power state.Low output instruction in affairs can be
Lower bound degree ground includes both overtime and specified power ratings.In some cases, low output instruction may include power rating at any time
Between elapse entrance sequence instruction.For example, thread can rest on high power state and continues 10 microseconds so that quick arrive
Event can quickly be disposed, and and then is found more preferably by going to mid power state and continuing 100 microseconds again
Integral energy trade off, and and then persistent period length event pass through system permeate (percolate) when be ultimately destined for relatively
The sleep state of depth is to save energy.
The second time point after first time point, system can be recovered or reactivate first thread.As outside generation
Reason (for example, one of other processors 108 processor or non-nuclear equipment) accesses and specifies depositing for atomic memory transaction
The result of one of memory address, processor can receipt signal (for example, event signal or termination signal).As receiving described letter
Number result, processor can recover the task in first thread and/or the execution completing assignment instructions.In some cases, institute
State that signal can terminate affairs at once and processor can rapidly recover first thread to be executed.
In some instances, the affairs in first thread may include amortize execution resource continuous specifying and limited quantity
The instruction in cycle.The described cycle may include instruction fetch and executes (fetch-and-execute) cycle or instruction fetch-decode-hold
Line period (fetch-decode-execute cycles, FDX).No matter remaining is amortized the cycle, to the reading specified for affairs
Any write of collection can terminate affairs at once.In this case, affairs can minimize first thread to shared described process
The impact of other concurrent thread (for example, the second thread) of device, and also can retain quickly reactivating for first thread
Speed.
In some instances, multiple head pointers (for example, the h of multiple respective queue) are stored in multiple storage address (examples
As H, H ', H " etc.) in.Each head pointer is stored in corresponding storage address.Processor may perform to from multiple memorizeies
The loading instruction of each storage address in address.In this case, affairs can be used for monitoring multiple queues.Described letter
Number may include and to be stored in, for updating, the more new signal specified for the specific head pointer in the storage address of affairs.
In particular example, the code of wait thread can be：
Spin instruction may include low output instruction as noted above.Instruction at abort_label can be as connecing
Receive the result of service termination signal and instruction to be executed.
Fig. 2A is performed for the block diagram of the example multithreaded processing system 200 of multiple threads.Multithreaded processing system 200
It can be the multithreaded processing system 100 of Fig. 1.System 200 may include processor 202 (for example, the processor 102 of Fig. 1) to execute
Multiple thread 202a, 202b ..., 202n.Processor 202 may include cache 206 (for example, the cache 110 of Fig. 1).
Processor 202 is coupled to main storage 204 (for example, the main storage 104 of Fig. 1).
When processor 202 execution thread, processor 202 can be from one or more of main storage 204 memorizer ground
Location is read or loading data data high-speed is buffered in the corresponding storage address of one or more of cache 206
In 208.Data from one or more of cache 206 storage address 208 can be write or store by processor 202
To one or more of main storage 204 corresponding storage address.In some instances, cache line is (for example, at a high speed
Cache line 206 in caching 206) can be used for or specify for described thread.Cache line may include multiple memorizeies
Address 208.
In some cases, processor 202 may specify different cache line (for example, cache line 206a,
206b ..., 206n) for different thread (for example, 202a, 202b ..., 202n).In some cases, processor 202 can
For example identical cache line is specified to be used for the thread of two order execution in the different time periods.
Fig. 2 B depicts and executes multiple threads in the multithreaded processing system 200 of Fig. 2A.Thread 252 and thread 254 can
It is executed concurrently on processor 202 along timeline 256.Utilization rate 258 shows the utilization of the execution resource of processor 202
Rate.The mark " E " of Fig. 2 B represents that thread just executes on processor 202, and the mark " W " of Fig. 2 B represent thread waiting or
It is waited for.
Thread 254 just executes on processor 202.In time point T1, processor 202 can be by starting the finger of execution task
Order carrys out the task in execution thread 252.Execution resource using processor 202 executes assignment instructions.In time point T2, thread
254 can obtain the execution priority higher than thread 252.Thread 252 can send request for example to pass through by being to processor 202
Transactional memory system in system 200 starts atomic memory transaction to enter waiting state.Described transactional memory system
System can be the transactional memory system 112 of Fig. 1.Processor 202 can specify one or more depositing to transactional memory system
Memory address (for example, one or more of cache 206 cache line) is used for atomic memory transaction.In some feelings
Under condition, the storage address specified for affairs can be thread 252 storage address interested.Processor 202 can use
The storage address specified is used for execution thread 252 (for example, remaining instruction in thread 252).Processor 202 can be by not continuing
Continue execution tasks carrying to temporarily cease task.
Execution resource from thread 252 can be reassigned to thread 254 by processor.From time point T2 to time point
T3, processor 202 can perform thread 254.During the time period from T2 to T3, thread 252 is waited for.For minimum
Change and the competition of thread 254, as described in detail above, the low output that thread 252 executes in affairs during waiting state refers to
Order.
Time point T3 or in T3 any suitable time point not long ago or before T3, processor 202 can receipt signal.
In some cases, system 200 (for example, transactional memory system of system 200) monitors the state of thread 254.In the time
Point T3, system 200 can be for example because access be specified for one of storage address of affairs in thread 252 to processor
202 sending signals.In some instances, system 200 may include other processors (for example, the processor 108 of Fig. 1).Processor
108 executable instructions are to access the storage address specified for affairs.In some cases, such as detailed further in figure 3
Discuss, described signal can send from external system.
As the result receiving described signal (for example, service termination signal), processor 202 can terminate affairs and recover
Task in thread 252.Execution resource from thread 254 can be reassigned to thread 252 by processor 202.Processor 202
The assignment instructions in thread 252 can be continued executing with.
By executing atomic memory transaction in thread 252, thread 252 rapidly can be placed in wait by processor 202
State, minimize the consumption of thread 252 and the competition with thread 254 during waiting period and rapidly reactivate line
Journey 252.As illustrated in utilization rate 258 in fig. 2b, the execution resource of processor 202 can be utilized completely without in thread
Context handover overhead between 252 and thread 254.
Fig. 3 depicts two processing systems 310 and 320 by main storage direct interaction.Processing system 310 includes coupling
Close the processor 312 of main storage 314.Processing system 320 includes processor 322 or the non-core being coupled to main storage 324
Equipment.In some implementations, processing system 310, processor 312 and main storage 314 can be respectively at the multithreading of Fig. 1
Reason system 100, processor 102 and main storage 104.
Processing system 310 is communicated with processing system 320 by network 330.Network 330 may include any suitable network
(for example, cable network or wireless network).In some implementations, for example by using direct distance input and output
(remote direct memory access, RDMA), processing system 310 and processing system 320 are being not related to processor (example
As the operating system in processor 312 and processor 322, cache or two operating systems) in the case of exchange primary storage
Data in device 314 and main storage 324.In this case, the computing resource in processing system 310 and 320 can be liberated.
Achievable high-throughput and performance (for example, fast message transmission rate).
In some instances, processor 312 is executed concurrently multiple threads.During waiting period, wait thread execution
Atomic memory transaction.One or more of main storage 314 storage address is specified for atomic memory transaction.?
Time point during waiting period, processing system 320 can directly be write direct from main storage 324 reading data and by data
To the one or more storage address specified in main storage 314 for affairs, this can generate signal for processor 312.
As the result receiving described signal, processor 312 can terminate affairs and recover to wait thread to be executed.Such
In the case of, the multithreading execution in (for example, reactivating) processing system 310 can be remotely controlled by processing system 320.
Fig. 4 is the flow chart of the instantiation procedure of multithreaded processing system execution.Multithreaded processing system can be the multi-thread of Fig. 1
System 200 in journey processing system 100, Fig. 2A and 2 or the processing system 310 of Fig. 3.Multithreaded processing system includes processor
(for example, the processor 312 of the processor 102 of Fig. 1, the processor 202 of Fig. 2A and 2B or Fig. 3).Multithreaded processing system can be wrapped
Include transactional memory system (for example, the transactional memory system 112 of Fig. 1).The multiple thread of computing device, the plurality of
Thread includes first thread and the second thread.
Second thread just executes (402) on a processor.In first time point, processor begins a task with first thread
(404).Processor can start the multiple instruction of execution task.In the second time point, first thread can send request to processor
To enter waiting state.For example, in the second time point, the second thread can obtain the execution priority higher than first thread.
The atomic memory transaction (406) for first thread initiated by processor.First thread may include beginning atom and deposits
The instruction of memory transaction or code.First thread can be placed in waiting state by initiating atomic memory transaction by processor.
As being discussed in detail above, processor may specify the one or more storage address (408) for affairs.The storage specified
Device address can be including one or more of cache within a processor cache line and/or to be coupled to processor
One or more of main storage corresponding storage address or queue.
After specifying for the storage address of affairs, one or more instructions (410) of computing device affairs.As
It is discussed in detail above, in order to minimize the execution consumption of resource and the competition with other concurrent thread on a processor,
Transaction instruction is configured as low output instruction.In suitable time point, the execution resource (example of processor redistributed by processor
As from first thread to the second thread).Processor can in any suitable time point (for example, before designated memory address not
Long, after designated memory address immediately or start transaction instruction execution after soon) redistribute execution resource.Right
Redistributing of resource of execution can be dynamic or static.Some resources (for example, resequencing buffer) by static Ground Split,
And can be reallocated during low yield does well or can not be reallocated with to simultaneously during low yield does well
Hair line journey concedes space.Some resources (for example, arithmetic logic unit (ALU)) Cycle by Cycle is dynamically redistributed and can not
It is included in low output instruction.
Processor continues executing with the second thread.The 3rd time point after the second time point, processor receipt signal (example
As service termination signal) (412).Processor can be from the other processors (for example, the processor 108 of Fig. 1) identical systems
Or external treatment system (for example, processing system 320 of Fig. 3) receives described signal.Described signal can be used as specifying for affairs
At least one of storage address be accessed for result and generate.As the result receiving described signal, processor is eventually
Stop affairs (414) and recover the task (416) in first thread.Processor can redistribute the execution resource of processor to execute
First thread (for example, until task completes).
The embodiment of the theme described in this specification and functional performance can be with Fundamental Digital Circuit, with visibly body
Existing computer software or firmware, with computer hardware (including the structure disclosed in this specification and its structural equivalents) or
To be realized with one or more of above-mentioned combination.The embodiment of the theme described in this specification can achieve as one or many
Individual computer program, i.e. for being executed by data processing equipment or the coding of operation of control data processing meanss is having
One or more modules of the computer program instructions on the non-transient program carrier of shape.Alternately or additionally, programmed instruction can
On manually generated transmitting signal (electricity, light or electromagnetic signal that for example, machine generates), it is generated to compile to information coding
Code for transmission to suitable acceptor device, for be executed by data processing equipment.Computer-readable storage medium can for machine
Read storage device, machine readable storage substrate, random or serial access memory equipment or above-mentioned in one or more combination.
Term " data processing equipment " refer to data processing hardware and cover the device of all kinds for processing data,
Equipment and machine, by way of example for include programmable processor, computer or multiple processor or computer.Described dress
Put and can be also or further include dedicated logic circuit, for example, FPGA (field programmable gate array) or ASIC (special integrated electricity
Road).Described device can alternatively include creating the code of the performing environment of computer program, for example, structure in addition to hardware
Become processor firmware, protocol stack, data base management system, operating system or above-mentioned in one or more combination code.
Computer program (its alternatively referred to as or be described as program, software, software application, module, software module, script or
Code) (inclusion compilation or interpreted languages, or statement formula or process-type language can be write by programming language in any form
Speech), and it can dispose in any form, including as stand-alone program or as module, assembly, subroutine or be suitable for making
With other units in a computing environment.Computer program can but need not be corresponding with the file in file system.Program can be deposited
In keeping a part for file for other programs or data, for example, one or more scripts are stored in marking language document for storage
In, be exclusively used in discuss in program single file in or in the file of multiple coordinations, for example, store one or more moulds
The file of the part of block, subprogram or code.Computer program can be deployed in a computer or hold on multiple computers
OK, the plurality of computer can be located at one place or is distributed on multiple places and passes through interconnection of telecommunication network.
Process described in this specification and logic flow can be one or more by the one or more computer programs of execution
Programmable calculator executing, with by being operated to input data and being generated output come perform function.Process and logic flow
Also can be executed by dedicated logic circuit (for example, FPGA (field programmable gate array) or ASIC (special IC)), and
And device also can achieve as described dedicated logic circuit.
Be suitable for computer program execution computer by way of example for can based on general purpose microprocessor or
Special microprocessor or both or any other species CPU.Usually, CPU will be from only
Read memorizer or random access memory or both receives instruction and data.The primary element of computer is for executing or transporting
The CPU of row instruction and the one or more memory devices for store instruction data.Usually, computer
Also the one or more mass-memory units (for example, disk, magneto-optic disk or CD) for data storage will be included, or meter
Calculation machine also by operatively coupled with from one or more of mass-memory unit receiving datas or to its transmission data, or
Both persons all may be used.However, computer need not have such equipment.In addition, (for example, computer can be embedded in another equipment
Only enumerate several：Mobile phone, personal digital assistant (PDA), Mobile audio frequency or video player, game console, the whole world are fixed
Position system (GPS) receptor or portable memory apparatus (for example, USB (universal serial bus) (USB) flash drive)) in.
The computer-readable medium being suitable for storing computer program instructions data includes the non-volatile of form of ownership
Property memorizer, medium and memory devices, include by way of example：Semiconductor memory devices (for example, EPROM, EEPROM
And flash memory device)；Disk (for example, internal hard drive or removable disk)；Magneto-optic disk；And CD-ROM and DVD-ROM disk.
Can be may be incorporated in dedicated logic circuit with supplemented processor and memorizer or processor and memorizer.
Computing system may include client and server.Client and server is generally remote from each other and typically passes through logical
Communication network is interacting.The relation of client and server is due to operating on corresponding computer and having client each other
The computer program of end-relationship server and produce.
Although this specification comprises the details of many specific implementations, it is right that these details should not be read as
The scope of any invention or the restriction to claimed scope, but as to can be specific to the specific embodiment of specific invention
Feature description.In this specification, some features described in the context of single embodiment can also be in single enforcement
Combine in example realization.In turn, the various features described in the context of single embodiment can also be discretely many
Realize in individual embodiment or in any suitable sub-portfolio.In addition although feature can be described as above with some combinations
To act on and to be also even initially so to claim, but can delete from claimed combination in some cases
Except one or more of this combination feature, and claimed combination can be for the modification of sub-portfolio or sub-portfolio.
Similarly, although depicting operation with particular order in the accompanying drawings, this is understood not to obtain
Desirable result and require such operation to execute or require all figures with the particular order that illustrates or in a subsequent order
The operation shown will be performed.In some cases, multitask and parallel processing can be favourable.In addition, in above-described embodiment
In the separation of various system modules and assembly is understood not to require such separation in all embodiments, and
It should be appreciated that program assembly and the system of description can typically together be integrated in single software product or be packaged in multiple softwares and produce
In product.
So it has been described that the specific embodiment of theme.Other embodiments are in the range of appended claims.Example
As theme is described in the context of scientific paper.This theme is applicable to increase other of depth aspect to search
The work of tape index.In some cases, record action in the claims can be executed in different order and still
Obtain desirable result.In addition, in order to obtain desirable result, the process described in accompanying drawing is without requiring the particular order illustrating
Or order in succession.In some implementations, multitask and parallel processing can be favourable.
Claims (21)
1. a kind of device, including：
Process cores, are configured to execute multiple threads；And
Transactional memory system, for executing atomic memory transaction,
Wherein said process cores are configured to execute operation, and described operation includes：
By first thread by execution multiple tasks instruct beginning a task with；
Atomic memory transaction is initiated using described transactional memory system by described first thread, including：
Specify at least first memory address for described atomic memory transaction to described transactional memory system；
And temporarily cease described task by not continuing executing with described assignment instructions；
Specify the result of the first memory address for described atomic memory transaction as the second thread accesses, by described
One thread receipt signal；And
As the result receiving described signal, recovered described task and continued executing with described task and refer to by described first thread
Order.
2. device according to claim 1, wherein specifies the described first memory for described atomic memory transaction
Address includes specifying the multiple storage address for described atomic memory transaction, the plurality of storage address be coupled to
Multiple cache lines of the cache memory of described process cores correspond to.
3. device according to claim 2, wherein specifies the multiple storage address for described atomic memory transaction
Loading instruction including each storage address in the plurality of storage address for the execution.
4. device according to claim 3, described operation further includes：For every in the plurality of storage address
Individual storage address, the head pointer of multiple head pointers is stored at described storage address, each head pointer specifies multiple teams
Respective queue in row, and wherein said signal includes being stored in specific head pointer in particular memory address for updating
More new signal.
5. device according to claim 1, further includes at described specifying for described atomic memory transaction
The instruction of one or more of described affairs is executed after one storage address, one or more of in wherein said affairs
Instruction includes the circulation being configured to few resource execution being consumed to described process cores.
6. device according to claim 1, wherein temporarily ceases described task and includes executing low output instruction once or again
Execute low output instruction again.
7. device according to claim 6, wherein said low output instruction includes one or more of following：Memorizer
Fence instruction, no operation (NOP) instruction or time stamp inspection instruction.
8. device according to claim 1, wherein said transactional memory system includes hardware transactional memorizer
(HTM) system, described HTM system configuration is any line interrupting specifying the transaction memory address being accessed by different threads
Journey.
9. device according to claim 1, wherein said signal is to set from different second executing described second thread
For receive, and wherein said process cores and the second equipment are coupled to the shared storage including described first memory address
Device.
10. device according to claim 1, wherein said process cores are coupled to the first primary storage in the first processing system
Device, and the memory location in described first main storage is specified in described first memory address, and
Wherein receipt signal includes receiving described signal from different second processing systems, and described different second processing system is joined
It is set to directly the second different main storage from second processing system to read data and directly write to described data
Described first memory address in described first main storage.
A kind of 11. methods being executed by multithreaded processing system, described multithreaded processing system includes process cores and transactional is deposited
Reservoir system, methods described includes：
By the first thread in described process cores by execution multiple tasks instruct beginning a task with；
Atomic memory transaction is initiated using described transactional memory system by described first thread, including：
Specify at least first memory address for described atomic memory transaction to described transactional memory system；And
Temporarily cease described task by not continuing executing with described assignment instructions；
Specify the result of the described first memory address for described atomic memory transaction as the second thread accesses, by institute
State first thread receipt signal；And
As the result receiving described signal, recovered described task and continued executing with described task and refer to by described first thread
Order.
12. methods according to claim 11, wherein specify described first storage for described atomic memory transaction
Device address includes specifying the multiple storage address for described atomic memory transaction, the plurality of storage address with couple
Multiple cache lines to the cache memory of described process cores correspond to.
13. methods according to claim 12, wherein specify the multiple memorizer ground for described atomic memory transaction
Location includes the loading instruction executing each storage address in the plurality of storage address.
14. methods according to claim 13, further include：For each storage in the plurality of storage address
Device address, the head pointer of multiple head pointers is stored at described storage address, each head pointer is specified in multiple queues
Respective queue, wherein said signal includes the renewal letter for updating the specific head pointer being stored in particular memory address
Number.
15. methods according to claim 11, further include at and specify for described in described atomic memory transaction
The instruction of one or more of described affairs is executed after first memory address, one or many in wherein said affairs
Individual instruction includes the circulation being configured to few resource execution being consumed to described process cores.
16. methods according to claim 11, wherein temporarily cease described task include execute low output instruction once or
It is repeatedly carried out low output instruction.
17. methods according to claim 16, wherein said low output instruction includes one or more of following：Storage
The instruction of grid hurdle, no operation (NOP) instruction or time stamp inspection instruction.
18. methods according to claim 11, wherein said transactional memory system includes hardware transactional memorizer
(HTM) system, described hardware transactional memory system configuration is to interrupt specifying the transaction memory being accessed by different threads
Any thread of address.
19. methods according to claim 11, wherein said signal is from different second executing described second thread
Equipment receives, and wherein said process cores and described second equipment are coupled to being total to including described first memory address
Enjoy memorizer.
20. methods according to claim 11, wherein said process cores are coupled to the first main memory in the first processing system
Reservoir, and the memory location in described first main storage is specified in described first memory address, and
Wherein receipt signal includes receiving described signal from different second processing systems, and described different second processing system is joined
It is set to directly the second different main storage from second processing system to read data and directly write to described data
Described first memory address in described first main storage.
A kind of 21. systems, including：
Processor, is configured to execute multiple threads, and the plurality of thread includes at least first thread and the second thread；And
Accumulator system, for executing atomic memory transaction,
Wherein said system configuration is to execute operation, and described operation includes：
Atomic memory transaction is initiated when executing described second thread in described first thread；
Specify at least one storage address for described affairs as determining by the thread accesses of non-described first thread
Result and terminate described affairs；And
Assignment instructions are executed as the result terminating described affairs in described first thread.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/269,779 US9778949B2 (en) | 2014-05-05 | 2014-05-05 | Thread waiting in a multithreaded processor architecture |
US14/269,779 | 2014-05-05 | ||
PCT/US2015/029051 WO2015171498A1 (en) | 2014-05-05 | 2015-05-04 | Thread waiting in a multithreaded processor architecture |
Publications (2)
Publication Number | Publication Date |
---|---|
CN106462395A true CN106462395A (en) | 2017-02-22 |
CN106462395B CN106462395B (en) | 2019-04-16 |
Family
ID=53274800
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201580023351.7A Active CN106462395B (en) | 2014-05-05 | 2015-05-04 | Thread in multiline procedure processor framework waits |
Country Status (4)
Country | Link |
---|---|
US (1) | US9778949B2 (en) |
EP (1) | EP3140729B1 (en) |
CN (1) | CN106462395B (en) |
WO (1) | WO2015171498A1 (en) |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN108694057A (en) * | 2017-03-31 | 2018-10-23 | 英特尔公司 | It is communicated to equipment to obtain memory write-back of the heavy duty detergent based on range of optimal power and performance for improving host |
CN109086124A (en) * | 2017-06-13 | 2018-12-25 | 龙芯中科技术有限公司 | Method, apparatus, electronic equipment and the storage medium of adjustment time |
CN110569131A (en) * | 2019-08-22 | 2019-12-13 | 北京华捷艾米科技有限公司 | semaphore management system and semaphore management method |
CN111373385A (en) * | 2018-06-06 | 2020-07-03 | 西部数据技术公司 | Processor for improved process switching and method thereof |
CN111796949A (en) * | 2020-07-07 | 2020-10-20 | 深圳市元征科技股份有限公司 | Communication task processing method, device, equipment and storage medium |
CN111857591A (en) * | 2020-07-20 | 2020-10-30 | 北京百度网讯科技有限公司 | Method, apparatus, device and computer-readable storage medium for executing instructions |
CN113168328A (en) * | 2018-12-11 | 2021-07-23 | 三垦电气株式会社 | Processor and pipeline processing method |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102393742B1 (en) * | 2014-09-30 | 2022-05-02 | 마이크로소프트 테크놀로지 라이센싱, 엘엘씨 | Displaying content on a display in power save mode |
CN105404546A (en) * | 2015-11-10 | 2016-03-16 | 上海交通大学 | RDMA and HTM based distributed concurrency control method |
CN107025064B (en) * | 2016-01-30 | 2019-12-03 | 北京忆恒创源科技有限公司 | A kind of data access method of the high IOPS of low latency |
US11055150B2 (en) * | 2018-04-12 | 2021-07-06 | Advanced Micro Devices, Inc. | Fast thread wake-up through early lock release |
US10929293B2 (en) | 2018-04-30 | 2021-02-23 | Hewlett Packard Enterprise Development Lp | Atomic operations for fabric shared memories |
US10691490B2 (en) | 2018-07-06 | 2020-06-23 | Apple Inc. | System for scheduling threads for execution |
US11947994B2 (en) * | 2019-03-28 | 2024-04-02 | Sap Se | Adaptive hardware transactional memory based concurrency control |
CN115328720B (en) * | 2022-10-13 | 2023-01-17 | 深圳市楠菲微电子有限公司 | SoC (System on chip) verification method, device, equipment and storage medium |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040117604A1 (en) * | 2000-01-21 | 2004-06-17 | Marr Deborah T. | Method and apparatus for pausing execution in a processor or the like |
US20040187123A1 (en) * | 2003-02-13 | 2004-09-23 | Marc Tremblay | Selectively unmarking load-marked cache lines during transactional program execution |
CN1610906A (en) * | 2001-11-01 | 2005-04-27 | 弗里塞恩公司 | Transactional memory manager |
CN1688974A (en) * | 2001-12-31 | 2005-10-26 | 英特尔公司 | Method and apparatus for suspending execution of a thread until a specified memory access occurs |
US20100332753A1 (en) * | 2009-06-26 | 2010-12-30 | Microsoft Corporation | Wait loss synchronization |
US20110296148A1 (en) * | 2010-05-27 | 2011-12-01 | International Business Machines Corporation | Transactional Memory System Supporting Unbroken Suspended Execution |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7930695B2 (en) * | 2006-04-06 | 2011-04-19 | Oracle America, Inc. | Method and apparatus for synchronizing threads on a processor that supports transactional memory |
CN102144218A (en) | 2008-07-28 | 2011-08-03 | 超威半导体公司 | Virtualizable advanced synchronization facility |
US20100162247A1 (en) * | 2008-12-19 | 2010-06-24 | Adam Welc | Methods and systems for transactional nested parallelism |
US8627017B2 (en) | 2008-12-30 | 2014-01-07 | Intel Corporation | Read and write monitoring attributes in transactional memory (TM) systems |
US8539168B2 (en) | 2009-06-26 | 2013-09-17 | Oracle America, Inc. | Concurrency control using slotted read-write locks |
US8375175B2 (en) | 2009-12-09 | 2013-02-12 | Oracle America, Inc. | Fast and efficient reacquisition of locks for transactional memory systems |
US8799583B2 (en) | 2010-05-25 | 2014-08-05 | International Business Machines Corporation | Atomic execution over accesses to multiple memory locations in a multiprocessor system |
US8352688B2 (en) | 2010-11-15 | 2013-01-08 | Advanced Micro Devices, Inc. | Preventing unintended loss of transactional data in hardware transactional memory systems |
US9411595B2 (en) | 2012-05-31 | 2016-08-09 | Nvidia Corporation | Multi-threaded transactional memory coherence |
US8914586B2 (en) | 2012-07-31 | 2014-12-16 | Advanced Micro Devices, Inc. | TLB-walk controlled abort policy for hardware transactional memory |
-
2014
- 2014-05-05 US US14/269,779 patent/US9778949B2/en active Active
-
2015
- 2015-05-04 WO PCT/US2015/029051 patent/WO2015171498A1/en active Application Filing
- 2015-05-04 EP EP15725919.3A patent/EP3140729B1/en active Active
- 2015-05-04 CN CN201580023351.7A patent/CN106462395B/en active Active
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040117604A1 (en) * | 2000-01-21 | 2004-06-17 | Marr Deborah T. | Method and apparatus for pausing execution in a processor or the like |
CN1610906A (en) * | 2001-11-01 | 2005-04-27 | 弗里塞恩公司 | Transactional memory manager |
CN1688974A (en) * | 2001-12-31 | 2005-10-26 | 英特尔公司 | Method and apparatus for suspending execution of a thread until a specified memory access occurs |
US20040187123A1 (en) * | 2003-02-13 | 2004-09-23 | Marc Tremblay | Selectively unmarking load-marked cache lines during transactional program execution |
US20100332753A1 (en) * | 2009-06-26 | 2010-12-30 | Microsoft Corporation | Wait loss synchronization |
US20110296148A1 (en) * | 2010-05-27 | 2011-12-01 | International Business Machines Corporation | Transactional Memory System Supporting Unbroken Suspended Execution |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN108694057A (en) * | 2017-03-31 | 2018-10-23 | 英特尔公司 | It is communicated to equipment to obtain memory write-back of the heavy duty detergent based on range of optimal power and performance for improving host |
CN109086124A (en) * | 2017-06-13 | 2018-12-25 | 龙芯中科技术有限公司 | Method, apparatus, electronic equipment and the storage medium of adjustment time |
CN109086124B (en) * | 2017-06-13 | 2021-08-20 | 龙芯中科技术股份有限公司 | Method and device for adjusting time, electronic equipment and storage medium |
CN111373385A (en) * | 2018-06-06 | 2020-07-03 | 西部数据技术公司 | Processor for improved process switching and method thereof |
CN111373385B (en) * | 2018-06-06 | 2023-03-14 | 西部数据技术公司 | Processor for improved process switching and method thereof |
CN113168328A (en) * | 2018-12-11 | 2021-07-23 | 三垦电气株式会社 | Processor and pipeline processing method |
CN113168328B (en) * | 2018-12-11 | 2024-01-26 | 三垦电气株式会社 | Processor and pipeline processing method |
CN110569131A (en) * | 2019-08-22 | 2019-12-13 | 北京华捷艾米科技有限公司 | semaphore management system and semaphore management method |
CN110569131B (en) * | 2019-08-22 | 2022-03-15 | 北京华捷艾米科技有限公司 | Semaphore management system and semaphore management method |
CN111796949A (en) * | 2020-07-07 | 2020-10-20 | 深圳市元征科技股份有限公司 | Communication task processing method, device, equipment and storage medium |
CN111857591A (en) * | 2020-07-20 | 2020-10-30 | 北京百度网讯科技有限公司 | Method, apparatus, device and computer-readable storage medium for executing instructions |
Also Published As
Publication number | Publication date |
---|---|
US9778949B2 (en) | 2017-10-03 |
EP3140729A1 (en) | 2017-03-15 |
EP3140729B1 (en) | 2020-08-19 |
CN106462395B (en) | 2019-04-16 |
US20150317182A1 (en) | 2015-11-05 |
WO2015171498A1 (en) | 2015-11-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN106462395B (en) | Thread in multiline procedure processor framework waits | |
US20230185607A1 (en) | Hardware accelerated dynamic work creation on a graphics processing unit | |
TWI628594B (en) | User-level fork and join processors, methods, systems, and instructions | |
Mukherjee et al. | A comprehensive performance analysis of HSA and OpenCL 2.0 | |
US20070150895A1 (en) | Methods and apparatus for multi-core processing with dedicated thread management | |
CN108268386A (en) | Memory order in accelerating hardware | |
TW201734758A (en) | Multi-core communication acceleration using hardware queue device | |
US9389675B2 (en) | Power management for in-memory computer systems | |
CN108027769A (en) | Instructed using register access and initiate instruction block execution | |
CN108701040A (en) | Method, equipment and the instruction of user class thread pause | |
US20130179486A1 (en) | Cluster system based on parallel computing framework, and hose node, computing node and method for executing application therein | |
US9229715B2 (en) | Method and apparatus for efficient inter-thread synchronization for helper threads | |
EP3350697A1 (en) | Out of order commit | |
CN105786448B (en) | A kind of instruction dispatching method and device | |
EP3314401A1 (en) | Block-based architecture with parallel execution of successive blocks | |
CN102566979A (en) | Method, device and multi-core processor system for realizing self-adaptive lock | |
CN107667358A (en) | For the coherent structure interconnection used in multiple topological structures | |
US20110296431A1 (en) | Method and apparatus for efficient helper thread state initialization using inter-thread register copy | |
US20160371082A1 (en) | Instruction context switching | |
CN100489830C (en) | 64 bit stream processor chip system structure oriented to scientific computing | |
CN103970511A (en) | Processor capable of supporting multimode and multimode supporting method thereof | |
CN109656868B (en) | Memory data transfer method between CPU and GPU | |
Duţu et al. | Independent forward progress of work-groups | |
CN105378652A (en) | Method and apparatus for allocating thread shared resource | |
CN105786758B (en) | A kind of processor device with data buffer storage function |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
C06 | Publication | ||
PB01 | Publication | ||
C10 | Entry into substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
CB02 | Change of applicant information | ||
CB02 | Change of applicant information |
Address after: American CaliforniaApplicant after: Google limited liability companyAddress before: American CaliforniaApplicant before: Google Inc. |
|
GR01 | Patent grant | ||
GR01 | Patent grant |
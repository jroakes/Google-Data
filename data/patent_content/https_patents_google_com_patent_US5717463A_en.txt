US5717463A - Method and system for estimating motion within a video sequence - Google Patents
Method and system for estimating motion within a video sequence Download PDFInfo
- Publication number
- US5717463A US5717463A US08/505,992 US50599295A US5717463A US 5717463 A US5717463 A US 5717463A US 50599295 A US50599295 A US 50599295A US 5717463 A US5717463 A US 5717463A
- Authority
- US
- United States
- Prior art keywords
- estimate
- dvf
- motion
- estimator
- object boundary
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/537—Motion estimation other than block-based
- H04N19/543—Motion estimation other than block-based using regions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/20—Analysis of motion
Definitions
- the present invention relates generally to video coding, and more particularly to using motion estimation in video coding.
- a video sequence consists of temporally sampled projections of a three dimensional, 3-D, scene onto the two dimensional, 2-D, image plane.
- the 3-D motion that occurs within this scene is captured as 2-D displacements of these projections.
- the displacement of a particular picture element, pixel, in the current 2-D image plane may be represented by a vector which points to the location of the particular pixel in a previous image plane.
- the displacement vector field, DVF describes the motion of all pixels between a given set of image planes, and therefore represents the 3-D motion of objects projected onto the image plane.
- VLBR bit rate
- Kbps kilo-bits per second
- this new information is transformed into the frequency domain using the DCT.
- the DCT has the property of compacting the energy of this new information into a few low frequency components. Further compression of the video sequence is obtained by limiting the amount of high frequency information encoded.
- the motion estimation and compensation algorithm The majority of the compression provided by this approach to video encoding is obtained by the motion estimation and compensation algorithm. That is, it is much more efficient to transmit information regarding the motion that exists in a video sequence, as opposed to information about the intensity and color.
- the motion information is represented using vectors which point from a particular location in the current intensity frame to where that same location originated in the previous intensity frame.
- the locations are predetermined non-overlapping blocks of equal size. All pixels contained in these blocks are assumed to have the same motion.
- the motion vector associated with a particular block in the present frame of a video sequence is found by searching over a predetermined search area, in the previous temporally adjacent frame for a best match.
- This best match is generally determined using the mean-squared-error (MSE) or mean-absolute-difference (MAD) between the two blocks.
- MSE mean-squared-error
- MAD mean-absolute-difference
- a copy of the previous frame is altered by each vector to produce a prediction of the current frame.
- This operation is referred to as motion compensation.
- the predicted frame is subtracted from the current frame to produce a difference frame which is transformed into the spatial frequency domain by the DCT.
- These spatial frequency coefficients are quantized and entropy encoded providing further compression of the original video sequence.
- Both the motion vectors and the DCT coefficients are transmitted to the decoder, where the inverse operations are performed to produce the decode video sequence.
- the estimation of the DVF within a video sequence is an extremely difficult problem.
- the two main sources of the difficulties in obtaining accurate estimates are the nonstationarity of the DVF and the ill-posed nature of the problem.
- the ill-posedness results from the violation of Hadamard's definition of a well-posed problem, which is characterized by the existence of a solution, the uniqueness of a solution, and the continuity of a solution.
- the problem of estimating the displacement field violates all three of these properties. Objects moving in an image sequence will occlude certain areas and uncover others; at these locations the DVF is undefined and no solution exists. Object deformation and changes in the camera's depth of field can also result in regions where the DVF is undefined.
- the nonstationarity of the DVF results from objects moving along different trajectories within the scene that causes discontinuities to occur at the object boundaries, as well as from regions where the motion is undefined due to covered or uncovered pans of the moving scene.
- the nonstationarity of the DVF implies that any approach used in its estimation, must be adaptable. That is, approaches which assume stationarity will result in estimates of the DVF that distort the boundaries between differently moving objects. These distortions in the motion boundaries result directly in distorted objects, and therefore an increase in the entropy of the difference image.
- Another approach for estimating the DVF which has recently gained in popularity is the spario-temporal gradient approach.
- Spatio-temporal gradient-based motion estimation algorithms are derived by minimizing the displaced frame difference, DFD, at each pixel using a temporal gradient and spatial gradient in the previous frame, based on an initial estimate of the DVF.
- One common approach to carry out this minimization is that of first linearizing the DFD using a prediction of the DVF. By assuming that all the pixels in a neighborhood of the working point undergo the same motion, a set of linear equations results, instead of a single equation. If the neighborhood allows recursive computability, then algorithms resulting from this approach are generally referred to as pixel recursive, PR, motion estimators.
- PR algorithms are generally faster than BM algorithms, and do not require spatial interpolation for subpixel accuracy, although PR algorithms may require spatial interpolation to compute the spatial gradients in the previous frame along the direction of motion. Furthermore, PR algorithms can be extended to handle more complicated types of motion than the purely translational type.
- the method and system are required to regularize the estimation of the displacement vector field, DVF, to combat ill-posedness and estimate the boundaries or discontinuities that exist within the DVF.
- FIG. 1 is a diagram of a preferred embodiment of a system for estimating motion in accordance with the present invention.
- FIG. 2 is a diagram of a preferred embodiment of a preprocessor in accordance with the present invention.
- FIG. 3 is a diagram of a preferred embodiment of a spatially adaptive motion estimator in accordance with the present invention.
- FIG. 4 is a diagram of a preferred embodiment of a first DVF update circuit in accordance with the present invention.
- FIG. 5 is a diagram of a preferred embodiment of a motion boundary estimator in accordance with the present invention.
- FIG. 6 is a diagram of a preferred embodiment of a motion analyzer in accordance with the present invention.
- FIG. 7 is a flow diagram of steps for implementing a preferred embodiment of a method for estimating motion in accordance with the present invention.
- FIG. 8 is a flow diagram of steps for implementing a preferred embodiment of a method for segmenting in accordance with the present invention.
- FIG. 9 is a flow diagram of steps for implementing a preferred embodiment of a method for adaptively estimating motion in accordance with the present invention.
- FIG. 10 is a flow diagram of steps for implementing a preferred embodiment of a method for estimating motion boundaries in accordance with the present invention.
- FIG. 11 is a flow diagram of steps for implementing a preferred embodiment of a method for analyzing motion in accordance with the present invention.
- the present invention provides a method for obtaining very accurate estimates of both the displacement, as well as, the boundaries of the moving objects within a video sequence. Therefore, the problems of ill-posedness and nonstationarity of the boundaries are solved simultaneously.
- An estimate of the object boundaries within a video sequence is obtained through the segmentation of the present image frame into regions of similar intensity. The boundaries separating these regions are considered to be the boundaries of the objects within the sequence. This object boundary information is used to determine a first estimate of the DVF.
- a first estimate of the object boundaries is obtained with the accuracy of the location of each boundary improved, as well as, the removal of any boundary found in the estimate to be non-moving.
- a second and improved estimate of the DVF is also determined.
- the second estimate of the DVF and the estimated moving object boundaries are further refined based on a predetermined model of the DVF.
- Such models typically take into account complicated types of motion, such as object rotations in the field of view and apparent object motion due to changes in the camera focal length or position.
- the third estimate of the DVF and the second estimate of the moving object boundaries are the result of fitting such a model to the second estimate of the DVF and the moving object boundary estimate.
- FIG. 1, numeral 100 is a diagram of a preferred embodiment of a system for estimating motion in accordance with the present invention.
- the system includes a preprocessor (102), a spatially adaptive motion estimator (104), a motion boundary estimator (106), and a motion analyzer (108).
- the preprocessing section (102) provides a object boundary estimate (112) of a current intensity frame (110), f k , at time instant k. Based on this object boundary estimate (112), the current intensity frame (110), f k , and a previous intensity frame (114), f k-1 , the spatially adaptive motion estimator (104) provides a first DVF estimate (116), d k .
- the DVF characterizes the motion within the scene that occurs during the time separating frames f k and f k-1 .
- Both the first DVF estimate (116) and the object boundary estimate (112) are further refined in the motion boundary estimator (106) and motion analyzer (108). Specifically, using the first DVF estimate (116), d k , the motion boundary estimator (106) refines the object boundary estimate (112), eliminating the intensity boundaries which do not correspond to motion boundaries.
- the output of the motion boundary estimator (106) is the first moving object boundary estimate (118), l k , and represents only the boundaries of objects that are moving within the video sequence.
- inaccuracies in the first DVF estimate (116) are removed in the motion boundary estimator (106) resulting in the second DVF estimate (120), d k . These inaccuracies are generally due to the corruption of the input video sequence with noise.
- the motion analyzer (108) further refines both estimates, d k and l k , using modeling approaches based on the principles of object motion.
- the third DVF estimate (122), d k , and the second moving object boundary estimate (124), l k represent extremely accurate estimates of the DVF and the moving object boundaries, respectively.
- FIG. 2 numeral 200, s a diagram of a preferred embodiment of a preprocessor in accordance with the present invention.
- the system includes an order statistics filter (202) and an object boundary estimator which is comprised of a object grower (206), and a object merger (206).
- the major function of the preprocessing step is to provide the spatially adaptive motion estimator (104) with an accurate segmentation of the current intensity frame (210) into regions or objects.
- a copy of the current intensity frame f k (210) is first filtered separately using an order statistics filter (202). This operation is performed to remove any small objects from the sequence prior to segmentation.
- These smaller objects which are in general the result of illumination changes in the video sequence and not a true object, can degrade the spatially adaptive motion estimator's (104) ability to accurately estimate the motion in that object.
- a filter which is typically used to remove smaller objects from an image frame is a 7 ⁇ 7 median filter. This filter is described by the following operation
- y k (i,j) is the filtered version of f k (i,j).
- the filtered output (212), y k (i,j), is the median value of f k (i,j) (210) and its 49 nearest spatial neighbors. Any objects with a spatial support, or size, that is less than 7 ⁇ 7 are removed by this filter. As discussed in the paragraph above, these smaller objects must be removed prior to the segmentation of the image frame to avoid degradation to the accuracy of the resulting segmentation.
- the object boundaries contained in the filtered output (212) are estimated using a two-step process (204).
- the first step (206) is called object growing, wherein each pixel is compared to its neighbors. Based on this comparison, the pixel is classified as either belonging to the same object as its neighbors, or to a new object.
- the test used to determine the classification of pixel (i,j) is given by
- the threshold T is used to determine whether y k (i,j) is a member of the same object as y k (i-m, j-n). If the absolute value of the difference between two neighboring pixels,
- the threshold T is typically fixed to a predetermined value.
- a drawback of this approach is that this value is dependent upon the particular image to be segmented.
- An approach which removes this dependency is described by the following expression ##EQU1## where MIN and MAX are the maximum and minimum intensity values contained within Obj(i-m,i-n) and T 1 is again a predetermined parameter. After each pixel is classified as belonging to a specific object, the maximum and minimum values of that object are tested to determine if an adjustment is needed. The tests and adjustments are the following
- This operation has the effect of providing an adjustable window for each object that can adapt to any particular intensity frame.
- the predetermined value for the threshold T 1 is 25. This method for adjusting the window, i.e. thresholds, is extremely effective at proving a consistent segmentation over a wide variety of video sequences.
- each object is tested to determine whether it should be merged with a neighboring object or not.
- the pixels residing along the border of an object are compared with the pixels on the borders of the neighboring objects. If the difference between these border pixels is small, then the objects are merged. Specifically, the following test is conducted on the border pixels of two neighboring objects
- T 2 is a predetermined parameter typically set to a value of 30.
- a second comparison is also performed in an attempt to again guard against the creation of small objects.
- These smaller objects are generally the result of gradually varying illumination changes which the object growing algorithm interprets as object boundaries.
- This test compares the size of an object, i.e. the number of pixels contained in an object, to a third predetermined threshold. If the number of pixels is less than this predetermined threshold, than the object is merged with a neighboring object.
- This merging operation is performed using the neighboring object which is the most similar to the current object. The amount of similarity between two neighboring objects is measured using the border differences described in Equation (4).
- the size threshold is set at 256 pixels.
- the object merging operation (208) is effective at removing smaller objects which may have been formed during object growing operation.
- An advantage of this two-step object boundary estimation approach (204), as opposed to other segmentation approaches, is that it is guaranteed to provide boundaries that are continuous and closed. For the application of motion estimation and analysis this is a very important result, since we know that in general the objects within a video sequence are defined by a continuous and closed boundary. Furthermore, the boundaries contained in an intensity frame are a super-set of the corresponding DVF boundaries. Therefore, the boundaries or discontinuities present in the DVF are also continuous, closed, and well defined.
- the output of the preprocessing unit (102) is the object boundary estimate (216) S k .
- the object boundary estimate (216) S k assigns each pixel in y k (i,j) (212) a value corresponding to the object it is a member of.
- the boundary is retrieved from (216) S k by determining where the object numbering changes.
- the object boundary S k (216) combined with the present intensity frame f k (110) and the previous intensity frame f k-1 (114), are used by the spatially adaptive motion estimation unit (104) to determine the first estimate of the DVF d k (116).
- the object boundary estimate S k (112) contains the discontinuities of the DVF d k , and therefore, is considered as the first estimate of the boundaries between differently moving objects.
- the first or initial estimate of the line process, S k is used as the mechanism by which the spatially adaptive motion estimation algorithm adapts to these discontinuities.
- FIG. 3 is a diagram of a preferred embodiment of a spatially adaptive motion estimator in accordance with the present invention.
- the spatially adaptive motion estimation unit (104) comprises a causal look-up table (312), a DVF predictor device (318), and an update circuit (320).
- the inputs to the spatially adaptive motion estimation unit are the estimate object boundaries S k (304), a predetermined causal local neighborhood of past displacement estimates d k (306), the previous intensity frame f k-1 (308), and a current intensity frame f k (310).
- the causal look-up causal look-up table device (312) stores a set of predetermined autoregressive, AR, prediction coefficients (314), and corresponding prediction uncertainties (316).
- the predetermined set of causal AR prediction coefficients (314) and corresponding uncertainty terms (316) are typically found empirically. Generally, a least squares estimation approach is used on either a prototype or previously estimated DVF. Based on the object boundary estimation S k (304) a subset of the predetermined AR prediction coefficients (314), a(m,n
- d k (i,j) is the prediction of the motion occurring at pixel location r ⁇ (i,j) in the current image frame
- S k ) are the AR prediction coefficients with a local support R.
- the local neighborhood R consists of the following pixel locations: the pixel in the column directly to the left (i,j-1), the pixel in the row above and the column to the left (i-1; d-1), the pixel in the row above (i-1,j), and the pixel in the row above and the column to the right (i-l ,j+1). It should be noted that the choice of R is made at the time of implementation and is dependent on the method used to navigate through the two dimensional data sets used to represent the image and displacement information at a particular time instant. For this particular R, it is assumed that the data is access from left to right across each row, starting with the top row. Other methods for navigating through the image and displacement data can also be used. This would require a slight modification to the local neighborhood R, however the operations would remain the same.
- S k ) (314) are adapted so as not to include in the prediction any displacement vectors belonging to another object.
- the non-stationary assumption on which the above equation is based is valid throughout the DVF and results in consistently accurate predictions.
- S k ) (316), the previous intensity frame f k-1 (308), and current intensity frame f k (310) are inputs to the first DVF update circuit (320).
- the first DVF update circuit updates the predicted displacement vector d k (i,j) (324) resulting in the first DVF estimate (322).
- FIG. 4, numeral 400 is a diagram of a preferred embodiment of a first DVF update determiner in accordance with the present invention.
- the first update circuit comprises a motion compensation unit (402) and a gain calculator unit (404).
- the motion compensation operation performed by the motion compensation unit (402) is a nonlinear operation which is described by the following equation
- f k (r) (422) is the motion compensated previous frame.
- the value f k-1 (r-d k (r)) (422) is found by taking the intensity value of the pixel located spatially at r-d k (r) in the previous frame f k-1 (408).
- the motion compensated value f k (r) (422) is subtracted from the value of the pixel at location (r) in the current frame f k (r)(412) resulting in the displaced frame difference, DFD, signal (424), e k (i,j).
- the DFD (424) signal is an error signal which is related to the accuracy of the predicted displacement vector d k (i,j).
- the DFD signal e k (i,j) (424) is multiplied by a gain term (426) and added to the DVF prediction (406) resulting in the first estimate DVF estimate (414).
- the gain determined by the gain calculator unit (404) is used to scale the DFD signal e k (r) (424) prior to updating the DVF prediction (406) d k (r).
- the expression used to calculate the gain is found by linearizing the motion compensated frame about the spatial location (r-d k (r)-u(r)), where u(r) is the error in the prediction d k (r), (406) and solving for the best linear estimate of u(r).
- the resulting expression for the gain, K(i,j), (426) is given by
- G(i,j) is a n ⁇ 2 matrix of spatial gradients evaluated in the motion compensated previous frame (422) for each pixel in the local neighborhood R.
- G(i,j) is given by ##EQU3## is the two dimensional spatial gradient evaluated at pixel location (i,j) in the motion compensated previous frame (422) f k-1 (r-d k (r)).
- the gain K(i,j) (426) determined by the gain calculator is used to the scale the DFD signal (424).
- This scaled DFD signal is added to the predicted displacement vector (406), d k (i,j), resulting in the first estimate of the DVF (414),d k (i,j).
- the operation used to update d k (i,j) is described in more detail in the following equation
- E(i,j) is the DFD evaluated for each pixel in the local neighborhood R.
- FIG. 5, numeral 500 is a diagram of a preferred embodiment of a motion boundary estimator in accordance with the present invention.
- the motion boundary estimation unit (106) comprises a noncausal look-up table (510), a moving object boundary estimator (506), a DVF estimator (508), a noncausal local neighborhood of the DVF (502), and a moving object boundary estimator (506).
- the inputs to the moving boundary estimator are the object boundary estimate S k (526), the first DVF estimate d k (524), the previous intensity frame f k-1 (528), and a current intensity frame f k (530).
- the moving object boundary unit (504) stores the current estimate of the moving object boundary for possible use in an iterative solution. Specifically, the solution provided by the moving object boundary estimator (506) can be used as an initial condition for an improved solution. A method for carrying out this iteration is discussed below.
- the moving object boundary estimator (506) is initialized with the object boundary estimate (526).
- the moving object boundary estimator (506) provides an estimate of the moving object boundaries l k (546) based on the object boundary S k (526) and the corresponding first estimate of the DVF (524).
- the moving object boundary estimator (506) is comprised of a moving edge determiner unit (514), edge continuity unit (516), and a moving object update unit (518).
- the estimate of the moving object boundaries, l k (546), is determined by adjusting the first estimate S k . These adjustments, which are based on known statistical properties of these boundaries and characterized through the use of confidence measures, result in the removal of boundaries that do not belong to a moving object. The particular confidence measures used are described in detail below.
- the moving object boundary estimator (506) is initialized with the object boundary estimate (526).
- the moving edge determiner unit (514) evaluates whether or not pixel (i,j) is part of a moving object boundary and assigns a confidence measure to the current estimate l k (i,j). This evaluation is performed by comparing adjacent displacement vectors. More specifically, the evaluation and corresponding confidence measure (540) are given by
- the edge continuity unit (516) Similar to the moving edge determiner unit (514), the edge continuity unit (516) also assigns a confidence measure (542) to the current estimate of the moving object boundary at pixel (i,j). This confidence measurement (542) however, is a function of the values of the neighboring boundary elements. Based on the assumption that objects within a video scene have boundaries that lie on a closed continuous curve, a pixel (i,j) is a boundary element, if and only if, it lies on such a curve. In other words, if pixel (i,j) is determined to be a moving boundary element, than the adjacent pixels in a particular direction most also be boundary elements. The above characterization is captured in the following expression
- the moving object update determiner adjusts the moving object boundary estimate l k (i,j), at pixel (i,j), based on the current estimate of the moving object boundary, which is initially the object boundary estimate (526) S k (i,j), and the confidence measure D(i,j) (5 4)and C(i,j) (542).
- the expression which characterizes the moving object boundary update determiner is given by ##EQU4## where
- the coefficients ⁇ and ⁇ are predetermined parameters used to control the amount that each confidence measure can influence the estimate l k .
- the parameter ⁇ (556) is used to control the response of the update determiner. If ⁇ is small, then the effect of the confidence measures on the adjusted l k (i,j) is also small. If on the other hand ⁇ is large, then the adjusted l k (i,j) is dominated by the confidence measure.
- the estimation of l k and d k is done iteratively, with ⁇ being initialized to a small value and increased slowly at the beginning of each new iteration.
- the decision to increase ⁇ and to refine the estimates of l k (i,j) and d d (i,j) is made in the estimation terminator (516).
- the estimation termination circuit (514) is discussed in more detail below.
- the DVF estimation determiner (508) is comprised of an advanced prediction determiner (520) and a second DVF update determiner (522). Similar to the DVF predictor (318) described above, the advanced predictor (520) provides a prediction of the DVF based on the moving object boundary estimate (536). Utilizing this moving object boundary estimate (546) l k (i,j), a subset of the predetermined noncausal AR prediction coefficients, b(m,n
- the advanced predictor (520) determines a prediction of the DVF based on the subset of AR prediction coefficients (548) and a local neighborhood of displacement vectors . It should be noted that the local neighborhood is different from the R used by the DVF predictor (318). This difference comes from the fact that a complete estimate of the DVF already exists. Therefore, the dependence on the scan that exists for the DVF predictor is not an issue for the advanced predictor. In other words, the restriction to use a neighborhood that contains only previously estimated displacement vectors is no longer necessary.
- the local neighborhood includes the nearest neighbor pixels surrounding (i,j). Specifically, includes the following pixels, (i,j-1), (i,j+1), (i-1,j), (i+1,j).
- the advanced predictor also utilizes a rigid body assumption to further constrain the prediction.
- the rigid body assumption specifies that all pixels within an object undergo similar motion.
- the advantage of combining this additional constraint with the AR model described in Equation. (5), is that a probabilistic characterization of the DVF can be derived in the form of an A Posterjori probability density function.
- the advanced prediction unit determines a prediction of the displacement vector d k (i,j) that maximizes the A Posteriori function.
- this maximization process is performed using the following iterative algorithm ##EQU5## where
- ⁇ is the correction step size, i.e., it is equivalent to a steepest descent minimization step, and n is the iteration number.
- the prediction d k (i,j) provided by the advanced prediction unit (520) is updated by the second DVF update determiner (522) to produce the second DVF estimate d k (534).
- the second DVF update determiner (522) the same update method as described for the first DVF update circuit (320).
- the coupled solution for d k (534) and l k (532) is typically solved using an iterative process. That is, steps used to obtain both l k and d k are repeated using the previous results as the initial conditions. Furthermore, ⁇ is increased after each iteration providing more weight to the confidence measures. By iterating the overall accuracy of both l k and d k is improved.
- the decision whether to perform another iteration or not, is determined in the iteration terminator (516).
- the iteration terminator utilizes a termination criteria similar the one used by the second DVF estimator (510). That is, the number of iterations set to a fixed number or it can determined based on the percent change between iterations. Typically, a maximum number of 3 iterations is set. However, if the percent change between iterations is below a threshold the iteration is terminated. The specific, if the following is true ##EQU7## the iteration is terminated.
- FIG. 6, numeral 600 is a diagram of a preferred embodiment of a motion analyzer in accordance with the present invention.
- the motion analyzer which provides a parameterized representation of the DVF using d k and l k as inputs.
- the motion analyzer comprises a memory device (614), translational motion estimator (604), zoom estimator (606), rotation estimator (608), and a object labeler and center determiner (612).
- the second estimates of the DVF d k and line process l k are the inputs to the motion analyzer unit. Based on these inputs and a four parameter motion model, a third and final set of estimates of the DVF and line process is determined.
- the four parameter motion model characterizes the DVF by utilizing, as rigid bodies, the objects defined by the line process. Specifically, the displacement of each pixel contained within a particular object is characterized by the following the expression
- T is a vector representing the translational motion component of d k (i,j)
- Z(Obj(i,j) and ⁇ (Obj(i,j)) represent the zoom and rotation components. It is important to note that four parameters four parameters is dependent upon the object, Obj(i,j), assigned.
- Obj(i,j)) represents the distance from the center of Obj(i,j) to the pixel (i,j).
- each object's center is located by the object center determiner (612). Based on the estimate l k , the center of each object is determined to be the intersection of the two lines which contain the maximum and minimum horizontal and vertical pixel locations in Obj(i,j).
- the translational motion estimator determines the translational motion component for each object. This is accomplished by averaging the horizontal and vertical displacement components over each object. Specifically, the translational components t x ,k and t y ,k are calculated using the following expressions ##EQU8## where N is the total number of pixels contained within Obj(i,j) .
- the zoom estimator (606) estimates the zoom parameter Z(Obj(i,j)). This parameter is used to characterized any changes that may occur in an object's focal length. These changes may be caused by the camera or by the motion of the object closer to or away from the camera location.
- the rotation estimator (608) estimates the rotation parameter ⁇ (Obj(i,j)) for each object.
- the rotation parameter is used to characterize any rotation that may occur in an object. These rotations are generally the result of object motion and are estimated in a manner similar to that used to determine Z(Obj(i,j)). Specifically, the rotation parameter ⁇ (Obj(i,j)) is estimated using the following expression ##EQU10##
- the parameterized representation of the DVF is used to refine estimate of the line process l k .
- each object is compared with its neighboring objects. If an object is determined to be similar to a neighboring region they are merged to form a single region. Two regions are determine to be similar if the following four conditions are met:
- FIG. 7, numeral 700 is a flow diagram of steps for implementing a preferred embodiment of a method for estimating motion in accordance with the present invention.
- the current intensity frame is segmented (702) using a preprocessor to determine the boundaries of the objects contained in the scene captured by the video sequence. These boundaries are used by the spatially adaptive motion estimator (704) to adapt to objects that are moving differently in the video sequence.
- a first estimate of the DVF is provided by the spatially adaptive motion estimator (704). Based on the estimator of the object boundaries and the first estimate of the DVF, a first estimate of the moving object boundaries and a second estimate of the DVF are obtained (706). Analyzing and modelling the first estimate of the moving object boundaries and the second estimate of the DVF provides a third estimate of the DVF and a second estimate of the moving object boundaries.
- FIG. 8, numeral 800 is a flow diagram of steps for implementing a preferred embodiment of a method for segmenting in accordance with the present invention.
- the first step is to remove noise from the image frame by filtering using an order statistics filter (802).
- Next pixels are grouped into objects using a region grower (804).
- the final step includes merging small objects into larger ones using a region merger and a predetermined comparison test (806).
- FIG. 9, numeral 900 is a flow diagram of steps for implementing a preferred embodiment of a method for adaplively estimating motion in accordance with the present invention.
- a causal look-up table is accessed to provide at least one causal prediction coefficient and a causal uncertainty parameter (902).
- a causal local neighborhood is set to a predetermined initialization (904).
- a prediction of the current displacement vector is determined next, based on the previously estimated displacement vectors and at least one causal prediction coefficient (906).
- the predicted displacement vector is updated to become the first displacement estimate and is stored in the causal local neighborhood (908).
- the process is repeated for the entire current intensity frame (910) resulting in the first estimate of the DVF.
- FIG. 10, numeral 1000 is a flow diagram of steps for implementing a preferred embodiment of a method for estimating motion boundaries in accordance with the present invention.
- the first estimate of the DVF and the previously estimated displacement vectors of the second estimated DVF are stored in the noncausal local neighborhood memory (1002).
- the previously estimated object boundaries are stored in the moving object boundary determiner (1004). Utilizing the object boundaries and the previously estimated displacement vectors a first estimate of the moving object boundaries is determined (1006). Based on the first estimate of the moving object boundaries, a noncausal look-up table is accessed to provide at least one noncausal prediction coefficient and a noncausal uncertainty parameter (1008).
- a second estimate of the current displacement vector is determined next, based on the previously estimated displacement vectors, at least one noncausal prediction coefficient and the DVF update determiner (1010). This estimation process is repeated until all pixels in the current intensity frame have a displacement vector associated with them (1012). The process is terminated when the percent total change in the second estimate of the DVF and the moving boundary estimate are below a set of thresholds (1014).
- FIG. 11, numeral 1100 is a flow diagram of steps for implementing a preferred embodiment of a method for analyzing motion in accordance with the present invention.
- First a center for each object is determined (1102).
- an estimate of the translational motion is determined for each object (1104).
- an estimate of a zoom parameter for each object is determined for each object (1106).
- An estimate of a rotation parameter is also determined for each object (1108).
- the translation, rotation, and zoom parameters are used in fitting a model to the estimated DVF (1110).
- FIGS. 1 through 6 may be implemented in various embodiments, such as Application Specific Integrated Circuit, ASIC, Digital Signal Processor, DSP, Gate Array, GA, and any tangible medium of/for a computer.
- ASIC Application Specific Integrated Circuit
- DSP Digital Signal Processor
- GA Gate Array
Abstract
Description
y.sub.k (i,j)=median{f.sub.k (i-3, j-3),f.sub.k (i-3, j-2), . . . , f.sub.k (i+3, j+2),f.sub.k (i+3, j+3)}
|y.sub.k (i,j)-y.sub.k (i-m,j-n)|≦T(1)
if(y.sub.k (i,j)≦MIN),→MIN=y.sub.k (i,j),
if(y.sub.k (i,,j)≧MAX),→MAX=y.sub.k (i,j). (3)
if(|y.sub.k (i,j)-y.sub.k (i-m,j-n)|≦T.sub.2)→merge(Obj(i,j)& Obj(i-n,j-m)),(4)
f.sub.k (r)=f.sub.k-1 (r-d.sub.k (r)), (2)
K(i,j)= G.sup.T (i,j)G(i,j)+w(i,j)!.sup.-1 G(i,j)
d.sub.k (i,j)=d.sub.k (i,j)+K(i,j)·E(i,j),
D(i,j)=(d.sub.k (i,j)-d.sub.k (i, j-1)).sup.2 +(d.sub.k (i,j)-d.sub.k (i-1,j)).sup.2,
C(i,j)=0.5(l(i,j)+l(i-1, j)+l(i, j-1)).
L(i,j)=β(α (1-ε·C(i,j))+(1-S.sub.h (i,j))!-λ.sup.2 D(i,j)),
Δ=-μ D(i,j)(1-l(i,j))+D(i+1,j)(1-l(i+1,j))!,
d.sub.k (i,j)=t.sub.k (i, j|Obj(i,j))+Z(Obj(i,j)·cp(i, j|Obj(i,j))+θ(Obj(i,j)·cp(i, j|Obj(i,j))
(t.sub.x,k (i, j|Region(i,j))-t.sub.x,k (i+n,j+m|Region(i+n,j+m))).sup.2 ≦P.sub.1,Condition 1.
(t.sub.y,k (i, j|Region(i,j))-t.sub.y,k (i+n,j+m|Region(i+n,j+m))).sup.2 ≦P.sub.2,Condition 2.
(Z(i, j|Region(i,j))-Z(i+n,j+m|Region(i+n,j+m)))≦P.sub.3Condition 3.
(θ(i, j|Region(i,j))-θ(i+n,j+m|Region(i+n,j+m)))≦P.sub.4, Condition 4.
Claims (23)
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/505,992 US5717463A (en) | 1995-07-24 | 1995-07-24 | Method and system for estimating motion within a video sequence |
CN96190799A CN1159276A (en) | 1995-07-24 | 1996-06-12 | Method and system for estimating motion within video sequence |
EP96921552A EP0783821A4 (en) | 1995-07-24 | 1996-06-12 | Method and system for estimating motion within a video sequence |
AU62755/96A AU682135C (en) | 1995-07-24 | 1996-06-12 | Method and system for estimating motion within a video sequence |
KR1019970701899A KR100256194B1 (en) | 1995-07-24 | 1996-06-12 | Method and system for estimating motion within a video sequence |
CA002200732A CA2200732A1 (en) | 1995-07-24 | 1996-06-12 | Method and system for estimating motion within a video sequence |
PCT/US1996/010141 WO1997004600A1 (en) | 1995-07-24 | 1996-06-12 | Method and system for estimating motion within a video sequence |
TW085107710A TW299553B (en) | 1995-07-24 | 1996-06-26 |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/505,992 US5717463A (en) | 1995-07-24 | 1995-07-24 | Method and system for estimating motion within a video sequence |
Publications (1)
Publication Number | Publication Date |
---|---|
US5717463A true US5717463A (en) | 1998-02-10 |
Family
ID=24012729
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/505,992 Expired - Lifetime US5717463A (en) | 1995-07-24 | 1995-07-24 | Method and system for estimating motion within a video sequence |
Country Status (7)
Country | Link |
---|---|
US (1) | US5717463A (en) |
EP (1) | EP0783821A4 (en) |
KR (1) | KR100256194B1 (en) |
CN (1) | CN1159276A (en) |
CA (1) | CA2200732A1 (en) |
TW (1) | TW299553B (en) |
WO (1) | WO1997004600A1 (en) |
Cited By (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5940538A (en) * | 1995-08-04 | 1999-08-17 | Spiegel; Ehud | Apparatus and methods for object border tracking |
WO2000016563A1 (en) * | 1998-09-10 | 2000-03-23 | Microsoft Corporation | Tracking semantic objects in vector image sequences |
US6130964A (en) * | 1997-02-06 | 2000-10-10 | U.S. Philips Corporation | Image segmentation and object tracking method and corresponding system |
US6154519A (en) * | 1998-02-17 | 2000-11-28 | U.S. Philips Corporation | Image processing method for motion estimation in a sequence of images, noise filtering method and medical imaging apparatus utilizing such methods |
EP1058208A2 (en) * | 1999-06-04 | 2000-12-06 | Mitsubishi Denki Kabushiki Kaisha | Method for ordering image spaces to search for object surfaces |
JP2001005981A (en) * | 1999-06-04 | 2001-01-12 | Mitsubishi Electric Inf Technol Center America Inc | Method for space expressing object shape |
US6192079B1 (en) * | 1998-05-07 | 2001-02-20 | Intel Corporation | Method and apparatus for increasing video frame rate |
US6400831B2 (en) | 1998-04-02 | 2002-06-04 | Microsoft Corporation | Semantic video object segmentation and tracking |
US6487313B1 (en) * | 1998-08-21 | 2002-11-26 | Koninklijke Philips Electronics N.V. | Problem area location in an image signal |
US20030072374A1 (en) * | 2001-09-10 | 2003-04-17 | Sohm Oliver P. | Method for motion vector estimation |
WO2003036557A1 (en) * | 2001-10-22 | 2003-05-01 | Intel Zao | Method and apparatus for background segmentation based on motion localization |
US6731799B1 (en) * | 2000-06-01 | 2004-05-04 | University Of Washington | Object segmentation with background extraction and moving boundary techniques |
US6750900B1 (en) * | 1998-07-23 | 2004-06-15 | Eastman Kodak Company | Method and apparatus for computing motion tracking parameters |
US20040131117A1 (en) * | 2003-01-07 | 2004-07-08 | Sheraizin Vitaly S. | Method and apparatus for improving MPEG picture compression |
US20040146213A1 (en) * | 2003-01-29 | 2004-07-29 | Samsung Electronics Co., Ltd. | System and method for video data compression |
US20040146108A1 (en) * | 2003-01-23 | 2004-07-29 | Shih-Chang Hsia | MPEG-II video encoder chip design |
US20050094852A1 (en) * | 2003-09-05 | 2005-05-05 | The Regents Of The University Of California | Global motion estimation image coding and processing |
US20050119801A1 (en) * | 2001-12-27 | 2005-06-02 | Itzhak Florentin | Method and system for guiding a remote vehicle via lagged communication channel |
US20060017773A1 (en) * | 2004-07-26 | 2006-01-26 | Sheraizin Semion M | Adaptive image improvement |
US20060188168A1 (en) * | 2005-02-22 | 2006-08-24 | Sheraizin Vitaly S | Enhancement of decompressed video |
US20070223808A1 (en) * | 2006-03-23 | 2007-09-27 | Canon Information Systems Research Australia Pty Ltd | Motion characterisation |
US20080212675A1 (en) * | 2004-08-05 | 2008-09-04 | Matsushita Electric Industrial Co., Ltd. | Motion Vector Estimating Device, and Motion Vector Estimating Method |
US20090141802A1 (en) * | 2007-11-29 | 2009-06-04 | Sony Corporation | Motion vector detecting apparatus, motion vector detecting method, and program |
US20090324121A1 (en) * | 2006-09-29 | 2009-12-31 | Thomson Licensing | Automatic parameter estimation for adaptive pixel-based filtering |
US7742108B2 (en) | 2000-06-28 | 2010-06-22 | Sheraizin Semion M | Method and system for real time motion picture segmentation and superposition |
US20100232646A1 (en) * | 2009-02-26 | 2010-09-16 | Nikon Corporation | Subject tracking apparatus, imaging apparatus and subject tracking method |
USRE42148E1 (en) | 2000-01-23 | 2011-02-15 | Semion Sheraizin | Method and apparatus for visual lossless image syntactic encoding |
US7903902B2 (en) | 2004-07-26 | 2011-03-08 | Sheraizin Semion M | Adaptive image improvement |
CN102346571A (en) * | 2010-07-29 | 2012-02-08 | 原相科技股份有限公司 | Displacement estimation method and displacement estimation device applying same |
US8204334B2 (en) | 2006-06-29 | 2012-06-19 | Thomson Licensing | Adaptive pixel-based filtering |
US20130108129A1 (en) * | 2011-08-31 | 2013-05-02 | Sony Corporation | Image processing device and method, recording medium and program |
RU2534827C2 (en) * | 2013-04-12 | 2014-12-10 | Закрытое акционерное общество "НТК" | Method for video surveillance of open space with fire hazard monitoring |
US20150294178A1 (en) * | 2014-04-14 | 2015-10-15 | Samsung Electronics Co., Ltd. | Method and apparatus for processing image based on motion of object |
US9288369B2 (en) | 2010-07-23 | 2016-03-15 | Pixart Imaging Inc. | Displacement estimation method and displacement estimation device using the same |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6137544A (en) * | 1997-06-02 | 2000-10-24 | Philips Electronics North America Corporation | Significant scene detection and frame filtering for a visual indexing system |
US7123745B1 (en) | 1999-11-24 | 2006-10-17 | Koninklijke Philips Electronics N.V. | Method and apparatus for detecting moving objects in video conferencing and other applications |
CN102075757B (en) * | 2011-02-10 | 2013-08-28 | 北京航空航天大学 | Video foreground object coding method by taking boundary detection as motion estimation reference |
US9046627B2 (en) | 2012-05-30 | 2015-06-02 | Massachusetts Institute Of Technology | Generating a forecast by field coalescence |
CN104680504B (en) * | 2013-11-26 | 2018-06-08 | 杭州海康威视数字技术股份有限公司 | Scene-change detecting method and its device |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4727422A (en) * | 1985-06-03 | 1988-02-23 | Picturetel Corporation | Method and apparatus for efficiently communicating image sequence having improved motion compensation |
US4771331A (en) * | 1986-03-08 | 1988-09-13 | Ant Nachrichtentechnik Gmbh | Motion compensating field interpolation method using a hierarchically structured displacement estimator |
US4989087A (en) * | 1987-12-16 | 1991-01-29 | Telediffusion De France | Multi-predictive method to estimate the motion of the points of an electronic picture |
US5351095A (en) * | 1989-08-29 | 1994-09-27 | Thomson Consumer Electronics | Method and device for estimating and hierarchically coding the motion of sequences of images |
US5500685A (en) * | 1993-10-15 | 1996-03-19 | Avt Communications Limited | Wiener filter for filtering noise from a video signal |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4661849A (en) * | 1985-06-03 | 1987-04-28 | Pictel Corporation | Method and apparatus for providing motion estimation signals for communicating image sequences |
ATE74219T1 (en) * | 1987-06-02 | 1992-04-15 | Siemens Ag | METHOD FOR DETERMINING MOTION VECTOR FIELDS FROM DIGITAL IMAGE SEQUENCES. |
-
1995
- 1995-07-24 US US08/505,992 patent/US5717463A/en not_active Expired - Lifetime
-
1996
- 1996-06-12 WO PCT/US1996/010141 patent/WO1997004600A1/en not_active Application Discontinuation
- 1996-06-12 CN CN96190799A patent/CN1159276A/en active Pending
- 1996-06-12 KR KR1019970701899A patent/KR100256194B1/en not_active IP Right Cessation
- 1996-06-12 EP EP96921552A patent/EP0783821A4/en not_active Ceased
- 1996-06-12 CA CA002200732A patent/CA2200732A1/en not_active Abandoned
- 1996-06-26 TW TW085107710A patent/TW299553B/zh active
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4727422A (en) * | 1985-06-03 | 1988-02-23 | Picturetel Corporation | Method and apparatus for efficiently communicating image sequence having improved motion compensation |
US4771331A (en) * | 1986-03-08 | 1988-09-13 | Ant Nachrichtentechnik Gmbh | Motion compensating field interpolation method using a hierarchically structured displacement estimator |
US4989087A (en) * | 1987-12-16 | 1991-01-29 | Telediffusion De France | Multi-predictive method to estimate the motion of the points of an electronic picture |
US5351095A (en) * | 1989-08-29 | 1994-09-27 | Thomson Consumer Electronics | Method and device for estimating and hierarchically coding the motion of sequences of images |
US5500685A (en) * | 1993-10-15 | 1996-03-19 | Avt Communications Limited | Wiener filter for filtering noise from a video signal |
Non-Patent Citations (24)
Title |
---|
":Object-Oriented Motion Estimation and Segmentation in Image Sequences" Norbert Diehl, Signal Processing: Image Communications 3 (1990) pp. 23-56. |
"An Asaptive Regularize Recursive Displacement Estimation Algorithm", Serafim N. Efstratiadis, Aggelos K. Katsaggelos, IEEE Transactions on Image Procesing, vol. 2, No. 3, Jul., 1993, pp. 341-352. |
"Comparison of Stochastic and Deterministic Solution Methods in Bayesian Estimation of 2D Motion", Janusz Konrad and Eric Dubois, INRS-Telecommunications, vol. 9, No.4, Aug., 1991,pp. 215-228. |
"Gradient-Based Algorithms for Block-Oriented MAP Estimation of Motion and Appplication to Motion-Compensated Temporatl Interpolation" Claude Bergeron and Eric Dubois, IEEE Transactions on Circuits and Systems for Video Technology, vol. 1, No. 1, Mar., '91 pp. 72-85. |
"Image Segmentation Based on Object Oriented Mapping Parameter Extimation" Michael Hotter and Robert Thoma, Signal Processing 15 (1988) pp. 315-344. |
"Image Sequence Compression Using a Pel-Recursive Motion-Compensated Technique" Robert J. Moorhead II, Sarah a. Rajala, and Lawrence W. Cook, IEEE Journal on Selected Areas in Communications, vol., SAC-5, No. 7, Aug., 1987, pp. 1100-1114. |
"Improvements of Transform Coding Algorithm for Motion-Compensated Interframe Prediction Errors--DCT/SQ Coding" Masahide Kaneko, Yosinori Hatori and Atsushi Koike, IEEE Journal on Selected Areas in Communications, vol. SAC-5, No. 7 Aug., 1987. |
"Low Bit Rate Video Coding Using Robust Motion Vector Regeneration in the Decoder" Mark R. Banham, James C. Brailean, Cheuk L. Chan, Aggelos K. Katsaggelos, IEEE Transactions on Immage Processing, vol. 3, No. 5, Sep., 1994, pp. 652-665. |
"Motion-Compensated Filtering of Time-Varying Images" Eric Dubois, INRS-Telecommuincations, May, 1991, pp. 103-131. |
"Object-Oriented Analysis-Synthesis coding of Moving Images" Hans Georg Musmann, Michael Hotter and Jorn Ostermann, Signal Processing, Image Communications (1980) 117-135. |
"The Efficiency of Motion-Compensating Prediction for Hybid Coding of Video Sequences" Bernd Girod, IEEE Journal on Selected Areas in Communications, vol. SAC-5, No. 7, Aug., 1987, pp. 1140-1154 |
"Use of Colour Information in Bayesian Estimation of 2-D Motion" Janusz Konrad and Eric Dubois, INRS-Telecommunications, M17.23, pp. 2205-2208. |
:Object Oriented Motion Estimation and Segmentation in Image Sequences Norbert Diehl, Signal Processing: Image Communications 3 (1990) pp. 23 56. * |
An Asaptive Regularize Recursive Displacement Estimation Algorithm , Serafim N. Efstratiadis, Aggelos K. Katsaggelos, IEEE Transactions on Image Procesing, vol. 2, No. 3, Jul., 1993, pp. 341 352. * |
Comparison of Stochastic and Deterministic Solution Methods in Bayesian Estimation of 2D Motion , Janusz Konrad and Eric Dubois, INRS Telecommunications, vol. 9, No.4, Aug., 1991,pp. 215 228. * |
Gradient Based Algorithms for Block Oriented MAP Estimation of Motion and Appplication to Motion Compensated Temporatl Interpolation Claude Bergeron and Eric Dubois, IEEE Transactions on Circuits and Systems for Video Technology, vol. 1, No. 1, Mar., 91 pp. 72 85. * |
Image Segmentation Based on Object Oriented Mapping Parameter Extimation Michael Hotter and Robert Thoma, Signal Processing 15 (1988) pp. 315 344. * |
Image Sequence Compression Using a Pel Recursive Motion Compensated Technique Robert J. Moorhead II, Sarah a. Rajala, and Lawrence W. Cook, IEEE Journal on Selected Areas in Communications, vol., SAC 5, No. 7, Aug., 1987, pp. 1100 1114. * |
Improvements of Transform Coding Algorithm for Motion Compensated Interframe Prediction Errors DCT/SQ Coding Masahide Kaneko, Yosinori Hatori and Atsushi Koike, IEEE Journal on Selected Areas in Communications, vol. SAC 5, No. 7 Aug., 1987. * |
Low Bit Rate Video Coding Using Robust Motion Vector Regeneration in the Decoder Mark R. Banham, James C. Brailean, Cheuk L. Chan, Aggelos K. Katsaggelos, IEEE Transactions on Immage Processing, vol. 3, No. 5, Sep., 1994, pp. 652 665. * |
Motion Compensated Filtering of Time Varying Images Eric Dubois, INRS Telecommuincations, May, 1991, pp. 103 131. * |
Object Oriented Analysis Synthesis coding of Moving Images Hans Georg Musmann, Michael Hotter and Jorn Ostermann, Signal Processing, Image Communications (1980) 117 135. * |
The Efficiency of Motion Compensating Prediction for Hybid Coding of Video Sequences Bernd Girod, IEEE Journal on Selected Areas in Communications, vol. SAC 5, No. 7, Aug., 1987, pp. 1140 1154 * |
Use of Colour Information in Bayesian Estimation of 2 D Motion Janusz Konrad and Eric Dubois, INRS Telecommunications, M17.23, pp. 2205 2208. * |
Cited By (61)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5940538A (en) * | 1995-08-04 | 1999-08-17 | Spiegel; Ehud | Apparatus and methods for object border tracking |
US6130964A (en) * | 1997-02-06 | 2000-10-10 | U.S. Philips Corporation | Image segmentation and object tracking method and corresponding system |
US6154519A (en) * | 1998-02-17 | 2000-11-28 | U.S. Philips Corporation | Image processing method for motion estimation in a sequence of images, noise filtering method and medical imaging apparatus utilizing such methods |
US6400831B2 (en) | 1998-04-02 | 2002-06-04 | Microsoft Corporation | Semantic video object segmentation and tracking |
US6192079B1 (en) * | 1998-05-07 | 2001-02-20 | Intel Corporation | Method and apparatus for increasing video frame rate |
US6750900B1 (en) * | 1998-07-23 | 2004-06-15 | Eastman Kodak Company | Method and apparatus for computing motion tracking parameters |
US6487313B1 (en) * | 1998-08-21 | 2002-11-26 | Koninklijke Philips Electronics N.V. | Problem area location in an image signal |
US7058227B2 (en) | 1998-08-21 | 2006-06-06 | Koninklijke Philips Electronics N.V. | Problem area location in an image signal |
US7162055B2 (en) | 1998-09-10 | 2007-01-09 | Microsoft Corporation | Tracking semantic objects in vector image sequences |
US6711278B1 (en) | 1998-09-10 | 2004-03-23 | Microsoft Corporation | Tracking semantic objects in vector image sequences |
WO2000016563A1 (en) * | 1998-09-10 | 2000-03-23 | Microsoft Corporation | Tracking semantic objects in vector image sequences |
US7088845B2 (en) | 1998-09-10 | 2006-08-08 | Microsoft Corporation | Region extraction in vector images |
US20040189863A1 (en) * | 1998-09-10 | 2004-09-30 | Microsoft Corporation | Tracking semantic objects in vector image sequences |
US6400846B1 (en) * | 1999-06-04 | 2002-06-04 | Mitsubishi Electric Research Laboratories, Inc. | Method for ordering image spaces to search for object surfaces |
JP2001005981A (en) * | 1999-06-04 | 2001-01-12 | Mitsubishi Electric Inf Technol Center America Inc | Method for space expressing object shape |
JP4545277B2 (en) * | 1999-06-04 | 2010-09-15 | ミツビシ・エレクトリック・リサーチ・ラボラトリーズ・インコーポレイテッド | A method for ordering image spaces representing object shapes |
EP1058208A3 (en) * | 1999-06-04 | 2003-02-05 | Mitsubishi Denki Kabushiki Kaisha | Method for ordering image spaces to search for object surfaces |
EP1058208A2 (en) * | 1999-06-04 | 2000-12-06 | Mitsubishi Denki Kabushiki Kaisha | Method for ordering image spaces to search for object surfaces |
USRE42148E1 (en) | 2000-01-23 | 2011-02-15 | Semion Sheraizin | Method and apparatus for visual lossless image syntactic encoding |
US6731799B1 (en) * | 2000-06-01 | 2004-05-04 | University Of Washington | Object segmentation with background extraction and moving boundary techniques |
US8098332B2 (en) | 2000-06-28 | 2012-01-17 | Somle Development, L.L.C. | Real time motion picture segmentation and superposition |
US20100225817A1 (en) * | 2000-06-28 | 2010-09-09 | Sheraizin Semion M | Real Time Motion Picture Segmentation and Superposition |
US7742108B2 (en) | 2000-06-28 | 2010-06-22 | Sheraizin Semion M | Method and system for real time motion picture segmentation and superposition |
US20030072374A1 (en) * | 2001-09-10 | 2003-04-17 | Sohm Oliver P. | Method for motion vector estimation |
US7260148B2 (en) * | 2001-09-10 | 2007-08-21 | Texas Instruments Incorporated | Method for motion vector estimation |
US20050104964A1 (en) * | 2001-10-22 | 2005-05-19 | Bovyrin Alexandr V. | Method and apparatus for background segmentation based on motion localization |
WO2003036557A1 (en) * | 2001-10-22 | 2003-05-01 | Intel Zao | Method and apparatus for background segmentation based on motion localization |
US20050119801A1 (en) * | 2001-12-27 | 2005-06-02 | Itzhak Florentin | Method and system for guiding a remote vehicle via lagged communication channel |
US7620483B2 (en) * | 2001-12-27 | 2009-11-17 | Rafael-Armament Development Authority Ltd. | Method for guiding a remote vehicle via lagged communication channel |
US20040131117A1 (en) * | 2003-01-07 | 2004-07-08 | Sheraizin Vitaly S. | Method and apparatus for improving MPEG picture compression |
US20040146108A1 (en) * | 2003-01-23 | 2004-07-29 | Shih-Chang Hsia | MPEG-II video encoder chip design |
US7330595B2 (en) * | 2003-01-29 | 2008-02-12 | Samsung Electronics Co., Ltd. | System and method for video data compression |
US20040146213A1 (en) * | 2003-01-29 | 2004-07-29 | Samsung Electronics Co., Ltd. | System and method for video data compression |
US7349583B2 (en) * | 2003-09-05 | 2008-03-25 | The Regents Of The University Of California | Global motion estimation image coding and processing |
US20050094852A1 (en) * | 2003-09-05 | 2005-05-05 | The Regents Of The University Of California | Global motion estimation image coding and processing |
US20060017773A1 (en) * | 2004-07-26 | 2006-01-26 | Sheraizin Semion M | Adaptive image improvement |
US7639892B2 (en) | 2004-07-26 | 2009-12-29 | Sheraizin Semion M | Adaptive image improvement |
US7903902B2 (en) | 2004-07-26 | 2011-03-08 | Sheraizin Semion M | Adaptive image improvement |
US20080212675A1 (en) * | 2004-08-05 | 2008-09-04 | Matsushita Electric Industrial Co., Ltd. | Motion Vector Estimating Device, and Motion Vector Estimating Method |
US8073057B2 (en) * | 2004-08-05 | 2011-12-06 | Panasonic Corporation | Motion vector estimating device, and motion vector estimating method |
US20090161754A1 (en) * | 2005-02-22 | 2009-06-25 | Somle Development, L.L.C. | Enhancement of decompressed video |
US7526142B2 (en) | 2005-02-22 | 2009-04-28 | Sheraizin Vitaly S | Enhancement of decompressed video |
US20060188168A1 (en) * | 2005-02-22 | 2006-08-24 | Sheraizin Vitaly S | Enhancement of decompressed video |
US7805019B2 (en) | 2005-02-22 | 2010-09-28 | Sheraizin Vitaly S | Enhancement of decompressed video |
US20070223808A1 (en) * | 2006-03-23 | 2007-09-27 | Canon Information Systems Research Australia Pty Ltd | Motion characterisation |
US7860272B2 (en) * | 2006-03-23 | 2010-12-28 | Canon Information Systems Research Australia Pty. Ltd. | Motion characterisation |
US8204334B2 (en) | 2006-06-29 | 2012-06-19 | Thomson Licensing | Adaptive pixel-based filtering |
US20090324121A1 (en) * | 2006-09-29 | 2009-12-31 | Thomson Licensing | Automatic parameter estimation for adaptive pixel-based filtering |
US8467626B2 (en) | 2006-09-29 | 2013-06-18 | Thomson Licensing | Automatic parameter estimation for adaptive pixel-based filtering |
US20090141802A1 (en) * | 2007-11-29 | 2009-06-04 | Sony Corporation | Motion vector detecting apparatus, motion vector detecting method, and program |
US8605942B2 (en) * | 2009-02-26 | 2013-12-10 | Nikon Corporation | Subject tracking apparatus, imaging apparatus and subject tracking method |
US20100232646A1 (en) * | 2009-02-26 | 2010-09-16 | Nikon Corporation | Subject tracking apparatus, imaging apparatus and subject tracking method |
US9288369B2 (en) | 2010-07-23 | 2016-03-15 | Pixart Imaging Inc. | Displacement estimation method and displacement estimation device using the same |
CN102346571A (en) * | 2010-07-29 | 2012-02-08 | 原相科技股份有限公司 | Displacement estimation method and displacement estimation device applying same |
CN102346571B (en) * | 2010-07-29 | 2014-03-19 | 原相科技股份有限公司 | Displacement estimation method and displacement estimation device applying same |
US9224209B2 (en) * | 2011-08-31 | 2015-12-29 | Sony Corporation | Image processing device and method, recording medium and program |
US20130108129A1 (en) * | 2011-08-31 | 2013-05-02 | Sony Corporation | Image processing device and method, recording medium and program |
US10762379B2 (en) | 2011-08-31 | 2020-09-01 | Sony Corporation | Image processing device, method, and recording medium |
RU2534827C2 (en) * | 2013-04-12 | 2014-12-10 | Закрытое акционерное общество "НТК" | Method for video surveillance of open space with fire hazard monitoring |
US20150294178A1 (en) * | 2014-04-14 | 2015-10-15 | Samsung Electronics Co., Ltd. | Method and apparatus for processing image based on motion of object |
US9582856B2 (en) * | 2014-04-14 | 2017-02-28 | Samsung Electronics Co., Ltd. | Method and apparatus for processing image based on motion of object |
Also Published As
Publication number | Publication date |
---|---|
CA2200732A1 (en) | 1997-02-06 |
EP0783821A1 (en) | 1997-07-16 |
KR100256194B1 (en) | 2000-05-15 |
WO1997004600A1 (en) | 1997-02-06 |
TW299553B (en) | 1997-03-01 |
AU682135B2 (en) | 1997-09-18 |
EP0783821A4 (en) | 1998-05-20 |
CN1159276A (en) | 1997-09-10 |
AU6275596A (en) | 1997-02-18 |
KR970706697A (en) | 1997-11-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5717463A (en) | Method and system for estimating motion within a video sequence | |
US6625216B1 (en) | Motion estimation using orthogonal transform-domain block matching | |
EP0512422B1 (en) | Method for temporally adaptive filtering of noisy image sequences | |
EP1404135B1 (en) | A motion estimation method and a system for a video coder | |
US5832115A (en) | Ternary image templates for improved semantic compression | |
Coban et al. | A fast exhaustive search algorithm for rate-constrained motion estimation | |
Chan et al. | Edge oriented block motion estimation for video coding | |
Yang et al. | A low-complexity region-based video coder using backward morphological motion field segmentation | |
AU682135C (en) | Method and system for estimating motion within a video sequence | |
Soongsathitanon et al. | Fast search algorithms for video coding using orthogonal logarithmic search algorithm | |
US6088397A (en) | Method of estimation of motion between images | |
Chen et al. | A joint motion-image inpainting method for error concealment in video coding | |
Csillag et al. | Frame-rate conversion based on acceleration and motion-based segmentation | |
LeQuang et al. | Object-oriented coding using successive motion field segmentation and estimation | |
Ahmad et al. | Motion vector estimation using edge oriented block matching algorithm for video sequences | |
Alparone et al. | An improved H. 263 video coder relying on weighted median filtering of motion vectors | |
Chan et al. | A novel predictive global motion estimation for video coding | |
Csillag et al. | Motion-compensated frame interpolation for low bit rate video coding considering accelerated motion | |
KR0159301B1 (en) | Motion estimation method in a subband coding system | |
Arora et al. | A new fast motion estimation algorithm using adaptive size diamond pattern search with early search termination | |
Efstratiadis et al. | Distributed detection methods for displacement estimation | |
Lin et al. | Fast motion estimation algorithm with adjustable search area | |
Chen et al. | A logarithmic-time adaptive block-matching algorithm for estimating large-displacement motion vectors | |
LeQuang et al. | A new object-oriented approach for video compression at very low bit rate | |
Heijden et al. | Strategies for fast true motion block matching |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: (ASSIGNMENT OF ASSIGNOR'S INTEREST) RE-RECORD TO CORRECT SERIAL NUMBER 08-505981 TO READ 08-505992 ON A DOCUMENT PREVIOUSLY RECORDED ON REEL 7731 FRAME 0874.;ASSIGNORS:BRAILEAN, JAMES C.;OZECHIK, TANER;KATSAGGELOS, AGGELOS K.;REEL/FRAME:008859/0728;SIGNING DATES FROM 19951027 TO 19970604Owner name: NORTHWESTERN UNIVERSITY, ILLINOISFree format text: (ASSIGNMENT OF ASSIGNOR'S INTEREST) RE-RECORD TO CORRECT SERIAL NUMBER 08-505981 TO READ 08-505992 ON A DOCUMENT PREVIOUSLY RECORDED ON REEL 7731 FRAME 0874.;ASSIGNORS:BRAILEAN, JAMES C.;OZECHIK, TANER;KATSAGGELOS, AGGELOS K.;REEL/FRAME:008859/0728;SIGNING DATES FROM 19951027 TO 19970604Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:OZCELIK, TANER;BRAILEAN, JAMES C.;KATSAGGELOS, AGGELOS K.;REEL/FRAME:008618/0265Effective date: 19970604 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC.;REEL/FRAME:027935/0808Effective date: 20120302 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034422/0001Effective date: 20141028 |
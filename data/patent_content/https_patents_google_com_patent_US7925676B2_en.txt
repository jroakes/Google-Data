US7925676B2 - Data object visualization using maps - Google Patents
Data object visualization using maps Download PDFInfo
- Publication number
- US7925676B2 US7925676B2 US11/342,293 US34229306A US7925676B2 US 7925676 B2 US7925676 B2 US 7925676B2 US 34229306 A US34229306 A US 34229306A US 7925676 B2 US7925676 B2 US 7925676B2
- Authority
- US
- United States
- Prior art keywords
- objects
- facts
- fact
- user
- repository
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/904—Browsing; Visualisation therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/912—Applications of a database
- Y10S707/918—Location
- Y10S707/919—Geographic
Definitions
- This invention pertains in general to data visualization on a computer and, in particular, to ways of representing data obtained from web pages and other sources.
- the World Wide Web and other information storage and retrieval systems contain a great deal of information. With the advent of search engines and other similar tools it has become relatively easy for an end-user to locate particular information. For example, one can obtain a wealth of information about the atomic elements by simply searching for the terms “atomic elements” on the Web.
- a web site that describes the atomic elements might display the periodic table and provide information like the atomic weights, melting points, and densities of the elements, but the site is unlikely to provide a graph of, say, atomic weights versus melting points. As a result, a person who desires to view such a graph must manually copy the information into another program that provides graphing capabilities.
- Some web sites like sites providing stock prices and other financial information, provide limited amounts of dynamic content. For example, a person can interact with such sites to create and manipulate graphs showing stock prices over time. Even on these sites, however, the person is restricted to a limited set of graphing options. Further, there is no way for a person to graphically manipulate data contained on multiple web sites short of copying the desired information into separate graphing program.
- an object access module establishes a set of objects, each object having a set of facts, each fact having an attribute and a corresponding value, where at least one value of at least one fact describes a geographic location.
- An interface module provides a user interface for identifying one or more facts of the objects in the set to present.
- a presentation module presents on the user interface a representation of the identified facts of the objects in the set, where the representation describes the attributes and corresponding values of the identified facts.
- FIG. 1 shows a network, in accordance with a preferred embodiment of the invention.
- FIGS. 2( a )- 2 ( d ) are block diagrams illustrating a data structure for facts within a repository of FIG. 1 in accordance with preferred embodiments of the invention.
- FIG. 2( e ) is a block diagram illustrating an alternate data structure for facts and objects in accordance with preferred embodiments of the invention.
- FIG. 3 is a high-level block diagram illustrating modules within a presentation engine according to one embodiment.
- FIG. 4 illustrates a user interface (UI) contained on a web page generated by the UI generation module according to one embodiment.
- UI user interface
- FIG. 5 illustrates a UI including a tabular view of objects and facts according to one embodiment.
- FIG. 6 illustrates a UI including a graphical view of objects and facts according to one embodiment.
- FIG. 7 illustrates an example of a map produced by the graphical presentation module and map presentation module according to one embodiment.
- FIG. 8 illustrates an example of a timeline produced by the graphical presentation module according to one embodiment.
- FIG. 9 is a flow chart illustrates steps performed by the presentation engine according to one embodiment.
- FIG. 1 shows a system architecture 100 adapted to support one embodiment of the invention.
- FIG. 1 shows components used to add facts into, and retrieve facts from a repository 115 .
- the system architecture 100 includes a network 104 , through which any number of document hosts 102 communicate with a data processing system 106 , along with any number of object requesters 152 , 154 .
- Document hosts 102 store documents and provide access to documents.
- a document is comprised of any machine-readable data including any combination of text, graphics, multimedia content, etc.
- a document may be encoded in a markup language, such as Hypertext Markup Language (HTML), i.e., a web page, in an interpreted language (e.g., JavaScript) or in any other computer readable or executable format.
- HTML Hypertext Markup Language
- a document can include one or more hyperlinks to other documents.
- a typical document will include one or more facts within its content.
- a document stored in a document host 102 may be located and/or identified by a Uniform Resource Locator (URL), or Web address, or any other appropriate form of identification and/or location.
- URL Uniform Resource Locator
- a document host 102 is implemented by a computer system, and typically includes a server adapted to communicate over the network 104 via networking protocols (e.g., TCP/IP), as well as application and presentation protocols (e.g., HTTP, HTML, SOAP, D-HTML, Java).
- networking protocols e.g., TCP/IP
- application and presentation protocols e.g., HTTP, HTML, SOAP, D-HTML, Java.
- the documents stored by a host 102 are typically held in a file directory, a database, or other data repository.
- a host 102 can be implemented in any computing device (e.g., from a PDA or personal computer, a workstation, mini-computer, or mainframe, to a cluster or grid of computers), as well as in any processor architecture or operating system.
- FIG. 1 shows components used to manage facts in a fact repository 115 .
- Data processing system 106 includes one or more importers 108 , one or more janitors 110 , a build engine 112 , a service engine 114 , and a fact repository 115 (also called simply a “repository”).
- Importers 108 operate to process documents received from the document hosts, read the data content of documents, and extract facts (as operationally and programmatically defined within the data processing system 106 ) from such documents.
- the importers 108 also determine the subject or subjects with which the facts are associated, and extract such facts into individual items of data, for storage in the fact repository 115 .
- there are different types of importers 108 for different types of documents for example, dependent on the format or document type.
- Janitors 110 operate to process facts extracted by importer 108 .
- This processing can include but is not limited to, data cleansing, object merging, and fact induction.
- Other types of janitors 110 may be implemented, depending on the types of data management functions desired, such as translation, compression, spelling or grammar correction, and the like.
- Various janitors 110 act on facts to normalize attribute names, and values and delete duplicate and near-duplicate facts so an object does not have redundant information. For example, we might find on one page that Britney Spears' birthday is “Dec. 2, 1981” while on another page that her date of birth is “Dec. 2, 1981.” Birthday and Date of Birth might both be rewritten as Birthdate by one janitor and then another janitor might notice that Dec. 2, 1981 and Dec. 2, 1981 are different forms of the same date. It would choose the preferred form, remove the other fact and combine the source lists for the two facts. As a result when you look at the source pages for this fact, on some you'll find an exact match of the fact and on others text that is considered to be synonymous with the fact.
- Build engine 112 builds and manages the repository 115 .
- Service engine 114 is an interface for querying the repository 115 .
- Service engine 114 's main function is to process queries, score matching objects, and return them to the caller but it is also used by janitor 110 .
- Repository 115 stores factual information extracted from a plurality of documents that are located on document hosts 102 .
- a document from which a particular fact may be extracted is a source document (or “source”) of that particular fact.
- source a source of a fact includes that fact (or a synonymous fact) within its contents.
- Repository 115 contains one or more facts.
- each fact is associated with exactly one object.
- One implementation for this association includes in each fact an object ID that uniquely identifies the object of the association.
- any number of facts may be associated with an individual object, by including the object ID for that object in the facts.
- objects themselves are not physically stored in the repository 115 , but rather are defined by the set or group of facts with the same associated object ID, as described below. Further details about facts in repository 115 are described below, in relation to FIGS. 2( a )- 2 ( d ).
- the components of the data processing system 106 will be distributed over multiple computers, communicating over a network.
- repository 115 may be deployed over multiple servers.
- the janitors 110 may be located on any number of different computers. For convenience of explanation, however, the components of the data processing system 106 are discussed as though they were implemented on a single computer.
- document hosts 102 are located on data processing system 106 instead of being coupled to data processing system 106 by a network.
- importer 108 may import facts from a database that is a part of or associated with data processing system 106 .
- FIG. 1 also includes components to access repository 115 on behalf of one or more object requesters 152 , 154 .
- Object requesters are entities that request objects from repository 115 .
- Object requesters 152 , 154 may be understood as clients of the system 106 , and can be implemented in any computer device or architecture.
- a first object requester 152 is located remotely from system 106
- a second object requester 154 is located in data processing system 106 .
- the blog may include a reference to an object whose facts are in repository 115 .
- An object requester 152 such as a browser displaying the blog will access data processing system 106 so that the information of the facts associated with the object can be displayed as part of the blog web page.
- janitor 110 or other entity considered to be part of data processing system 106 can function as object requester 154 , requesting the facts of objects from repository 115 .
- FIG. 1 shows that data processing system 106 includes a memory 107 and one or more processors 116 .
- Memory 107 includes importers 108 , janitors 110 , build engine 112 , service engine 114 , and requester 154 , each of which are preferably implemented as instructions stored in memory 107 and executable by processor 116 .
- Memory 107 also includes repository 115 .
- Repository 115 can be stored in a memory of one or more computer systems or in a type of memory such as a disk.
- FIG. 1 also includes a computer readable medium 118 containing, for example, at least one of importers 108 , janitors 110 , build engine 112 , service engine 114 , requester 154 , and at least some portions of repository 115 .
- FIG. 1 also includes a computer readable medium 118 containing, for example, at least one of importers 108 , janitors 110 , build engine 112 , service engine 114 , requester 154 ,
- data processing system 106 also includes one or more input/output devices 120 that allow data to be input and output to and from data processing system 106 .
- data processing system 106 preferably also includes standard software components such as operating systems and the like and further preferably includes standard hardware components not shown in the figure for clarity of example.
- FIG. 2( a ) shows an example format of a data structure for facts within repository 115 , according to some embodiments of the invention.
- the repository 115 includes facts 204 .
- Each fact 204 includes a unique identifier for that fact, such as a fact ID 210 .
- Each fact 204 includes at least an attribute 212 and a value 214 .
- a fact associated with an object representing George Washington may include an attribute of “date of birth” and a value of “Feb. 22, 1732.”
- all facts are stored as alphanumeric characters since they are extracted from web pages.
- facts also can store binary data values.
- Other embodiments, however, may store fact values as mixed types, or in encoded formats.
- each fact is associated with an object ID 209 that identifies the object that the fact describes.
- object ID 209 identifies the object that the fact describes.
- objects are not stored as separate data entities in memory.
- the facts associated with an object contain the same object ID, but no physical object exists.
- objects are stored as data entities in memory, and include references (for example, pointers or IDs) to the facts associated with the object.
- the logical data structure of a fact can take various forms; in general, a fact is represented by a tuple that includes a fact ID, an attribute, a value, and an object ID.
- the storage implementation of a fact can be in any underlying physical data structure.
- FIG. 2( b ) shows an example of facts having respective fact IDs of 10 , 20 , and 30 in repository 115 .
- Facts 10 and 20 are associated with an object identified by object ID “ 1 .”
- Fact 10 has an attribute of “Name” and a value of “China.”
- Fact 20 has an attribute of “Category” and a value of “Country.”
- the object identified by object ID “ 1 ” has a name fact 205 with a value of “China” and a category fact 206 with a value of “Country.”
- Fact 30 208 has an attribute of “Property” and a value of “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- the object identified by object ID “2” has a property fact with a fact ID of 30 and a value of “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- each fact has one attribute and one value.
- the number of facts associated with an object is not limited; thus while only two facts are shown for the “China” object, in practice there may be dozens, even hundreds of facts associated with a given object.
- the value fields of a fact need not be limited in size or content. For example, a fact about the economy of “China” with an attribute of “Economy” would have a value including several paragraphs of text, numbers, perhaps even tables of figures. This content can be formatted, for example, in a markup language. For example, a fact having an attribute “original html” might have a value of the original html text taken from the source web page.
- FIG. 2( b ) shows the explicit coding of object ID, fact ID, attribute, and value
- content of the fact can be implicitly coded as well (e.g., the first field being the object ID, the second field being the fact ID, the third field being the attribute, and the fourth field being the value).
- Other fields include but are not limited to: the language used to state the fact (English, etc.), how important the fact is, the source of the fact, a confidence value for the fact, and so on.
- FIG. 2( c ) shows an example object reference table 210 that is used in some embodiments. Not all embodiments include an object reference table.
- the object reference table 210 functions to efficiently maintain the associations between object IDs and fact IDs. In the absence of an object reference table 210 , it is also possible to find all facts for a given object ID by querying the repository to find all facts with a particular object ID. While FIGS. 2( b ) and 2 ( c ) illustrate the object reference table 210 with explicit coding of object and fact IDs, the table also may contain just the ID values themselves in column or pair-wise arrangements.
- FIG. 2( d ) shows an example of a data structure for facts within repository 115 , according to some embodiments of the invention showing an extended format of facts.
- the fields include an object reference link 216 to another object.
- the object reference link 216 can be an object ID of another object in the repository 115 , or a reference to the location (e.g., table row) for the object in the object reference table 210 .
- the object reference link 216 allows facts to have as values other objects. For example, for an object “United States,” there may be a fact with the attribute of “president” and the value of “George W. Bush,” with “George W. Bush” being an object having its own facts in repository 115 .
- the value field 214 stores the name of the linked object and the link 216 stores the object identifier of the linked object.
- this “president” fact would include the value 214 of “George W. Bush”, and object reference link 216 that contains the object ID for the for “George W. Bush” object.
- facts 204 do not include a link field 216 because the value 214 of a fact 204 may store a link to another object.
- Each fact 204 also may include one or more metrics 218 .
- a metric provides an indication of the some quality of the fact.
- the metrics include a confidence level and an importance level.
- the confidence level indicates the likelihood that the fact is correct.
- the importance level indicates the relevance of the fact to the object, compared to other facts for the same object.
- the importance level may optionally be viewed as a measure of how vital a fact is to an understanding of the entity or concept represented by the object.
- Each fact 204 includes a list of one or more sources 220 that include the fact and from which the fact was extracted.
- Each source may be identified by a Uniform Resource Locator (URL), or Web address, or any other appropriate form of identification and/or location, such as a unique document identifier.
- URL Uniform Resource Locator
- the facts illustrated in FIG. 2( d ) include an agent field 222 that identifies the importer 108 that extracted the fact.
- the importer 108 may be a specialized importer that extracts facts from a specific source (e.g., the pages of a particular web site, or family of web sites) or type of source (e.g., web pages that present factual information in tabular form), or an importer 108 that extracts facts from free text in documents throughout the Web, and so forth.
- a name fact 207 is a fact that conveys a name for the entity or concept represented by the object ID.
- a name fact 207 includes an attribute 224 of “name” and a value, which is the name of the object. For example, for an object representing the country Spain, a name fact would have the value “Spain.”
- a name fact 207 being a special instance of a general fact 204 , includes the same fields as any other fact 204 ; it has an attribute, a value, a fact ID, metrics, sources, etc.
- the attribute 224 of a name fact 207 indicates that the fact is a name fact, and the value is the actual name.
- the name may be a string of characters.
- An object ID may have one or more associated name facts, as many entities or concepts can have more than one name. For example, an object ID representing Spain may have associated name facts conveying the country's common name “Spain” and the official name “Kingdom of Spain.” As another example, an object ID representing the U.S. Patent and Trademark Office may have associated name facts conveying the agency's acronyms “PTO” and “USPTO” as well as the official name “United States Patent and Trademark Office.” If an object does have more than one associated name fact, one of the name facts may be designated as a primary name and other name facts may be designated as secondary names, either implicitly or explicitly.
- a property fact 208 is a fact that conveys a statement about the entity or concept represented by the object ID.
- Property facts are generally used for summary information about an object.
- a property fact 208 being a special instance of a general fact 204 , also includes the same parameters (such as attribute, value, fact ID, etc.) as other facts 204 .
- the attribute field 226 of a property fact 208 indicates that the fact is a property fact (e.g., attribute is “property”) and the value is a string of text that conveys the statement of interest.
- the value of a property fact may be the text string “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- Some object IDs may have one or more associated property facts while other objects may have no associated property facts.
- the data structure of the repository 115 may take on other forms. Other fields may be included in facts and some of the fields described above may be omitted.
- each object ID may have additional special facts aside from name facts and property facts, such as facts conveying a type or category (for example, person, place, movie, actor, organization, etc.) for categorizing the entity or concept represented by the object ID.
- an object's name(s) and/or properties may be represented by special records that have a different format than the general facts records 204 .
- null object As described previously, a collection of facts is associated with an object ID of an object.
- An object may become a null or empty object when facts are disassociated from the object.
- a null object can arise in a number of different ways.
- One type of null object is an object that has had all of its facts (including name facts) removed, leaving no facts associated with its object ID.
- Another type of null object is an object that has all of its associated facts other than name facts removed, leaving only its name fact(s).
- the object may be a null object only if all of its associated name facts are removed.
- a null object represents an entity or concept for which the data processing system 106 has no factual information and, as far as the data processing system 106 is concerned, does not exist.
- facts of a null object may be left in the repository 115 , but have their object ID values cleared (or have their importance to a negative value). However, the facts of the null object are treated as if they were removed from the repository 115 . In some other embodiments, facts of null objects are physically removed from repository 115 .
- FIG. 2( e ) is a block diagram illustrating an alternate data structure 290 for facts and objects in accordance with preferred embodiments of the invention.
- an object 290 contains an object ID 292 and references or points to facts 294 .
- Each fact includes a fact ID 295 , an attribute 297 , and a value 299 .
- an object 290 actually exists in memory 107 .
- FIG. 3 is a high-level block diagram illustrating modules within a presentation engine 300 according to one embodiment.
- module refers to computer program logic and/or data for providing the specified functionality.
- a module can be implemented in hardware, firmware, and/or software. Some embodiments have different and/or additional modules than those shown in FIG. 3 . Moreover, the functionalities can be distributed among the modules in a different manner than described here.
- a presentation engine 300 presents objects and facts in a customizable manner. That is, the presentation engine 300 provides flexible tools that enable an end-user to view the facts of one or more objects in ways desired by the end-user. The presentation engine 300 thus allows the end-user to view information in a way that is more comprehensible to the end-user.
- the modules of the presentation engine 300 are implemented as a JavaScript program that executes on client devices such as personal computers, cellular telephones, personal digital assistants (PDAs), etc.
- the JavaScript program interfaces with the data processing system 106 to access data and functionalities provided by it.
- the JavaScript program itself is controlled by a web browser, operating system, or other entity executing on the client device.
- the presentation engine 300 is implemented using different coding techniques, relies solely on client-side data, and/or executes on the server.
- An object access module 310 receives objects from the fact repository 115 and/or another source.
- the objects are received in response to end-user interactions with a search engine or other object requestor 152 that provides access to the fact repository 115 .
- a search engine or other object requestor 152 that provides access to the fact repository 115 .
- an end-user can utilize a search engine to search the fact repository 115 for objects matching a particular query.
- the object requestor 152 returns a set of matching objects.
- a user interface provided by the object access module 310 and/or another module allows the end-user to select particular objects and designate the objects for further analysis. In this manner, the end-user can execute multiple different searches on the fact repository 115 and designate objects from the different searches for further analysis.
- the fact repository 115 stores a set of objects of type “atomic element,” including at least one object for each of the atomic elements.
- the end-user executes a query for objects that match the phrase “atomic elements.”
- the results of this query include all of the objects of type “atomic element” may also produce other objects depending upon the information in the objects and/or the search algorithms.
- the end-user can select one or more of these objects and designate the selected object for further analysis. For purposes of this example, assume that the end-user designates each one object for each atomic element.
- the object access module 310 receives the objects from the end-user.
- the end-user can supply user defined objects for use with the presentation engine 300 .
- the end-user can encounter objects on the network 104 at locations other than the fact repository 115 , such as on web pages not associated with the repository, and cause the object access module 310 to supply those objects to the presentation engine 300 .
- a collection module 312 receives the objects designated for further analysis by the end-user.
- the collection module 312 stores multiple collections, and each collection stores zero or more objects.
- the end-user specifies the collection in which the collection module 312 stores the designated objects.
- the collection module 312 stores designated objects in a default collection if the end-user does not specify a particular collection.
- the collection module 312 provides an interface allowing the end-user to manipulate the collections and the objects within the collections. For example, the end-user can view the objects within different collections, and add and remove objects.
- a collection can hold arbitrary and heterogeneous objects.
- a collection can contain objects for the atomic elements, the actor M. Emmet Walsh, and the country China.
- Some heterogeneous objects may have attributes in common, while other objects might not have any common attributes.
- a storage module 314 stores the collections and/or other data utilized by the presentation engine 300 for its operation.
- the storage module 314 acts as a place where other modules in the presentation engine 300 can store and retrieve information.
- the storage module 314 is a logical construct that uses storage allocated from virtual memory on the client device on which the presentation engine 300 is executing.
- some or all of the storage provided by the storage module 314 is located on a server connected to the client via the network 104 .
- the collection module 312 can store collections in the storage module 314 .
- the storage module 314 stores the data describing the collections and references to the objects within the collections in a memory on the client. However, the objects themselves are stored on a server accessible via the network 104 and retrieved from the server when necessary or desired.
- a user interface (UI) generation module 316 generates a UI for the end-user.
- the UI allows the end-user to view and manipulate the objects and the facts within the objects.
- the UI allows the end-user to control other aspects of the presentation engine 300 , such as executing a search for new objects and designating objects for storage in a collection.
- the UI is displayed on a display device of the client and contains buttons, list boxes, text boxes, images, hyperlinks, and/or other tools with which the end-user can control the presentation engine.
- the UI generation module 316 includes other modules for generating specific UI elements. These modules include a tabular presentation module 318 that generates UI elements displaying objects and facts in tables. Further, the UI generation module 316 includes a graphical presentation module 320 for displaying objects and facts in graphs. Additionally, the UI generation module includes a map presentation module 322 that displays objects and facts in combination with maps. The UI elements provided by these modules are described in more detail below.
- a scoring module 324 evaluates objects, attributes, and values and outputs corresponding scores. These scores can be used to produce ranked lists of objects and/or facts. The factors utilized for the evaluations and scores depend upon the embodiment and the objects, attributes, and/or values being evaluated. In one embodiment, the presentation engine 300 uses the scores produced by the scoring module 324 to establish facts to show in certain UIs. The operation of the scoring module 324 is described in more detail below.
- FIG. 4 illustrates a UI 400 contained on a web page generated by the UI generation module 316 according to one embodiment.
- User interfaces generated by other embodiments have different and/or additional elements than the interface of FIG. 4 .
- the UI elements can be arranged in a different manner than is shown in the figure.
- many of the elements of the UI are hyperlinks that the end-user can select to access additional information.
- FIG. 4 and the other figures illustrating UIs show exemplary interfaces where the end-user has searched for, and is viewing, objects for the atomic elements.
- the UI 400 of FIG. 4 is utilized by the end-user to search for facts and/or objects matching a particular search query and to save designated objects in a collection.
- the end-user can use the UI 400 to view facts about the objects.
- the top of the UI 400 contains a text input box in which the end-user can provide a textual description of the search query (e.g., keywords to search) and a button 412 the end-user can select to execute the search.
- a results area 414 below the search text input box 410 displays objects that match the search query.
- the results area 414 displays the names of the objects and a few facts about each object.
- the UI 400 includes a scroll bar 416 with which the end-user can view objects that are lower on the page.
- the results area 414 shows the objects for the elements Actinium, Polonium, and Chromium.
- the names 418 of the elements are displayed, along with images 420 that illustrate the respective elements. Beneath each name 418 is a set of facts 422 about the element.
- the illustrated UI shows four facts 422 about each element, although other embodiments can show fewer or more facts. For example, for the element Actinium the displayed facts 422 are:
- each displayed fact includes a URL that links to the source page from which the fact was derived.
- the initial facts displayed for an object are determined based on scores produced by the scoring module 324 .
- the scoring module 324 calculates scores for the facts of the object based on the metric (e.g., the importance and confidence levels) and outputs a ranked list. Facts having high importance and confidence are generally ranked higher than facts having low importance and/or confidence.
- the rankings produced by the scoring module 324 are influenced by the search query utilized to produce the list of objects.
- the scoring module 324 can increase the importance component of a fact if that fact matches a search term. For example, a search query for “atomic element weight” will produce an increased importance for the “atomic weight” fact of an object, and likely result in the atomic weight fact being ranked high enough to appear on the UI 400 .
- Each displayed object 418 includes a button 424 that the end-user can select to save the object to a collection.
- buttons 426 on the UI 400 provide the end-user with the options of saving all search results to a collection or saving only visible results to the collection.
- the collection 428 itself is displayed in a column on the left side of the UI 400 .
- the names of the objects 430 in the collection are displayed, along with a check box with which the end-user can remove the objects from the collection 428 .
- the illustrated UI 400 includes a “table” button 434 near the collection display.
- this button 434 is selected by the end-user, the UI 400 presents a tabular view of the objects in the collection. This tabular view is produced by the tabular presentation module 318 .
- Other embodiments of the presentation engine 300 provide other ways to access the table functionality.
- FIG. 5 illustrates a UI 500 including a tabular view 510 of objects and facts according to one embodiment.
- the illustrated table 510 contains four columns and a row for every object.
- the leftmost column 512 lists the names of the objects, which in this case are the atomic elements (Actinium, Polonium, Chromium . . . ).
- the columns to the right 514 display attributes of the objects.
- the attributes displayed are the atomic masses, densities, and boiling points of the respective elements.
- the tabular presentation module 318 uses the scoring module 324 to select the initial attributes for the right-side columns 514 of the table 510 .
- the scoring module 324 identifies the most common attributes of the objects in the collection 428 , and produces a list of the attributes sorted by commonality. Thus, an attribute shared by all of the objects in the collection 428 is ranked first in the list, while an attribute possessed by only one of the objects is ranked last.
- the metrics associated with the attributes' facts are used to break ties.
- the tabular presentation module 318 shows the highest ranked attributes in the initial columns 514 of the table 510 .
- a drop down selection box 516 displayed near the top of the table 510 allows the end-user to select additional facts to include in the table.
- the selection box 516 contains every unique attribute from the objects in the collection 428 .
- the end-user can select one of the attributes, and in response the UI 500 adds a column to the table showing the values of the objects for the selected attribute.
- the new column is made the rightmost column of the table 510 . If an object lacks the attribute displayed in the table 510 , one embodiment displays a blank space, text indicating that the attribute is not applicable, or another indicator that the object lacks the attribute.
- the columns 514 of the table 500 displaying facts contain additional buttons allowing the end-user to manipulate the table.
- each column contains buttons 518 labeled “Remove,” “Sort,” and “Graph.”
- the “Remove” button when selected, removes the specified column from the table 510 . If the “Sort” button is selected, the table is resorted based on the values of the attribute represented by the specified column. For example, choosing the “Sort” button of the “Density” column causes the table 510 to resort the atomic elements based on their densities.
- the UI 500 presents a graphical view of the objects in the collection. This graphical view is produced by the graphical presentation module 320 . Specifically, the UI 500 presents a graph showing the objects' values for the attribute of the column selected by the end-user.
- the graphical presentation module 320 determines the type of graph that best facilitates interpretation of the facts by the end-user and automatically generates a graph of that type. In one embodiment, graphical presentation module 320 considers the type of facts being graphed in determining the initial graph type. One consideration is the format of the value for the fact being graphed, e.g., whether the value is represented by a number, text, graphic, sound, etc. Another consideration is the meaning of the fact, e.g., is it a date, name, location, quantity, temperature, etc. In one embodiment, the graphical presentation module 320 determines the meaning of a fact from data within the object. For example, the meaning can be explicitly specified by meta-data within the object or can be derived from the name of the attribute associated with the fact.
- the specific types of graphs that the graphical presentation module 320 produces can vary depending upon the embodiment and/or the values being graphed.
- the module 320 graphs facts that are dates on a timeline.
- a timeline facilitates the interpretation of dates such as dates of births, deaths, disasters, discoveries and the like.
- the graphical presentation module 320 uses maps to graph facts that are locations because maps represent a good way to facilitate the understanding of such facts.
- the graphical presentation module 320 interacts with a map presentation module 322 to produce the maps.
- the map presentation module 322 holds maps of geographic regions.
- the facts of objects specify geographic locations, such as countries, places of births and death, etc. either explicitly (e.g., latitude/longitude) or implicitly (e.g., by name).
- the graphical presentation module 320 uses the maps and facts to produce maps that illustrate the locations specified by the facts. For example, an end-user can execute a search on “volcanoes” and create a collection that stores objects representing volcanoes.
- Each of these volcano objects includes a fact that describes the volcano's location.
- the end-user can use the graphical presentation module 320 and map presentation module 322 to create a map that shows the locations of the volcanoes using push pins or other icons.
- the end-user can create a collection of NBA basketball players, and then create a map showing the place of birth of each one.
- the graphical presentation module 320 graph other types of facts using other specialized graphs.
- the graphical presentation module 320 if the values of the attributes are numeric and are not of a type having a specialized graph, the graphical presentation module 320 produces a bar graph showing the value of the attribute for each object. If the values are not numeric, the graphical presentation module 320 produces a histogram grouping objects having the same value for the attribute. In either case, the graph shows the attribute along the X-axis. In one embodiment, the graphical presentation module 320 shows the graph as a scatter plot if two attributes are being graphed simultaneously.
- FIG. 6 illustrates a UI 600 including a graphical view 610 of objects and facts according to one embodiment. Specifically, FIG. 6 illustrates the graph 610 produced by the graphical presentation module 320 when the end-user selects the “graph” button for the “Atomic Mass” attribute.
- the graph 610 is a bar graph, with each bar representing one object (i.e., atomic element) and the height of the bar representing the value of that object's “Atomic Mass” attribute.
- the UI 600 illustrates the table 510 of objects in addition to the graph 610 .
- the end-user can use the “Sort” and “Graph” buttons to update the graph. If the end-user selects the “Sort” button for a column, the graphical presentation module 320 resorts the graph (if necessary), based on the selected attribute. The end-user can sort the graph based on an attribute that is not displayed in the graph. For example, the end-user can select the “Sort” button for the “Density” field and sort the graph of atomic masses by the objects' densities, so that the leftmost bar on the X-axis of the graph shows the atomic mass of the element having the lowest (or highest) density.
- the end-user can use the “Graph” buttons to add or remove attributes from the graph 610 .
- “Graph” button When an attribute is shown in the graph 610 , its corresponding “Graph” button becomes a “No Graph” button. The end-user selects the “No Graph” button to remove the attribute from the graph. If an attribute shown in the table 510 is not displayed on the graph 610 , the end-user can select that attribute's “Graph” button and cause the attribute to be graphed.
- FIG. 7 illustrates an example of a map 700 produced by the graphical presentation module 320 and map presentation module 322 according to one embodiment.
- the map 700 shows potentially active volcanoes in the state of Oregon.
- the map illustrates the border 710 of the state, and shows five push pins 712 representing the locations of the volcanoes within Oregon.
- the end-user can obtain additional information about a graphed object by using a mouse or other pointing device to move a cursor over the graphical representation of the object. For example, if the end-user moves the cursor over a particular bar of a bar graph, the graphical presentation module 320 displays additional facts about the object. Similarly, the end-user can move the cursor over a push pin icon on a map to view additional facts about the object having the location identified by the push pin.
- FIG. 8 illustrates an example of a timeline 800 produced by the graphical presentation module 320 according to one embodiment.
- the timeline 800 illustrates the period between 1775 and 1785 and shows the atomic elements discovered within that period.
- the timeline 800 shows that molybdenum was discovered in 1778, tungsten was discovered in 1783, and tellurium was discovered in 1782.
- FIG. 9 is a flow chart illustrating steps performed by the presentation engine 300 according to one embodiment. Other embodiments perform the steps in different orders and/or perform different or additional steps than the ones shown in FIG. 9 . This description describes the steps as occurring through interactions with an end-user. In other embodiments, the steps can be performed through automated processes.
- the presentation engine 300 establishes 910 a collection of objects. This collection is typically established when an end-user interacts with the presentation engine 300 , a search engine, and/or other entities to view a list of objects. The end-user selects certain objects and designates them for further analysis.
- the presentation engine 300 stores the designated objects in a collection or other logical grouping.
- the end-user interacts with the presentation engine 300 to generate 912 a visual representation of the designated objects.
- the end-user can use a UI presented by the presentation engine 300 to generate a table showing facts of the objects.
- the end-user can cause the presentation engine 300 to generate graphs, timelines, and maps showing facts of the objects.
- the end-user can manipulate 914 the visual representation by adding columns to a table, sorting the values shown by a graph, moving a cursor over a push pin icon on a map, etc.
- the end-user can thus view the facts of the objects in a manner that is beneficial to the end-user, rather than being forced to use the presentation selected by the entity that initially provided the objects and/or facts.
Abstract
Description
- U.S. application Ser. No. 11/342,290, entitled “Data Object Visualization”, filed concurrently herewith, by Andrew W. Hogue, David Vespe, Alex Kehlenbeck, Mike Gordon, Jeffrey C. Reynar, David Alpert;
- U.S. application Ser. No. 11/341,069, entitled “Object Categorization for Information Extraction”, filed concurrently herewith, by Jonathan T. Betz;
- U.S. application Ser. No. 11/341,907, entitled “Designating Data Objects for Analysis”, filed concurrently herewith, by Andrew W. Hogue, David Vespe, Alex Kehlenbeck, Mike Gordon, Jeffrey C. Reynar, David Alpert;
- U.S. application Ser. No. 11/342,277, entitled “Data Object Visualization Using Graphs”, filed concurrently herewith, by Andrew W. Hogue, David Vespe, Alex Kehlenbeck, Mike Gordon, Jeffrey C. Reynar, David Alpert.
Obtained From: | extremely rare | ||
Uses: | No uses known | ||
Discoverer: | Andre Debierne | ||
Color: | Silvery | ||
In addition, each displayed fact includes a URL that links to the source page from which the fact was derived.
Claims (20)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/342,293 US7925676B2 (en) | 2006-01-27 | 2006-01-27 | Data object visualization using maps |
PCT/US2007/061156 WO2007090063A2 (en) | 2006-01-27 | 2007-01-26 | Data object visualization using maps |
US14/194,534 US9092495B2 (en) | 2006-01-27 | 2014-02-28 | Automatic object reference identification and linking in a browseable fact repository |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/342,293 US7925676B2 (en) | 2006-01-27 | 2006-01-27 | Data object visualization using maps |
Publications (2)
Publication Number | Publication Date |
---|---|
US20070185895A1 US20070185895A1 (en) | 2007-08-09 |
US7925676B2 true US7925676B2 (en) | 2011-04-12 |
Family
ID=38328107
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/342,293 Expired - Fee Related US7925676B2 (en) | 2006-01-27 | 2006-01-27 | Data object visualization using maps |
Country Status (2)
Country | Link |
---|---|
US (1) | US7925676B2 (en) |
WO (1) | WO2007090063A2 (en) |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140032532A1 (en) * | 2012-07-25 | 2014-01-30 | Ebay Inc. | Spell check using column cursor |
US20140189557A1 (en) * | 2010-09-29 | 2014-07-03 | Open Text S.A. | System and method for managing objects using an object map |
US8862646B1 (en) | 2014-03-25 | 2014-10-14 | PlusAmp, Inc. | Data file discovery, visualization, and importing |
US9158768B2 (en) | 2012-07-25 | 2015-10-13 | Paypal, Inc. | System and methods to configure a query language using an operator dictionary |
US9372942B1 (en) | 2013-03-15 | 2016-06-21 | Dell Software Inc. | System and method for facilitating data visualization via a map-reduce framework |
US10108731B2 (en) * | 2010-09-29 | 2018-10-23 | Open Text Sa Ulc | System and method for timeline management of objects |
US10977748B2 (en) | 2015-09-24 | 2021-04-13 | International Business Machines Corporation | Predictive analytics for event mapping |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8584013B1 (en) | 2007-03-20 | 2013-11-12 | Google Inc. | Temporal layers for presenting personalization markers on imagery |
US20090076959A1 (en) * | 2007-09-11 | 2009-03-19 | Patrick Devaney | System and method for brokering ad hoc personal identification transactions between two consenting parties |
FR2931275A1 (en) * | 2008-05-14 | 2009-11-20 | Airbus France Sas | METHOD FOR TRACEABILITY OF DATA IN WORKSHOP ORIENTED COLLABORATIVE SERVICE |
US8560468B1 (en) * | 2011-02-10 | 2013-10-15 | Google Inc. | Learning expected values for facts |
US10061480B1 (en) * | 2015-07-28 | 2018-08-28 | Rockwell Collins, Inc. | Navigation chart information generating and presenting system, device, and method |
US10083206B2 (en) * | 2015-11-19 | 2018-09-25 | Business Objects Software Limited | Visualization of combined table data |
EP3559819B1 (en) * | 2018-12-29 | 2022-03-09 | Advanced New Technologies Co., Ltd. | Visual blockchain browser |
Citations (122)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4888690A (en) | 1985-01-11 | 1989-12-19 | Wang Laboratories, Inc. | Interactive error handling means in database management |
US4899292A (en) | 1988-03-02 | 1990-02-06 | Image Storage/Retrieval Systems, Inc. | System for storing and retrieving text and associated graphics |
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5544051A (en) | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5778378A (en) * | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US5815415A (en) | 1996-01-19 | 1998-09-29 | Bentley Systems, Incorporated | Computer system for portable persistent modeling |
US5832479A (en) | 1992-12-08 | 1998-11-03 | Microsoft Corporation | Method for compressing full text indexes with document identifiers and location offsets |
US5870739A (en) | 1996-09-20 | 1999-02-09 | Novell, Inc. | Hybrid query apparatus and method |
US5905980A (en) | 1996-10-31 | 1999-05-18 | Fuji Xerox Co., Ltd. | Document processing apparatus, word extracting apparatus, word extracting method and storage medium for storing word extracting program |
US5946692A (en) | 1997-05-08 | 1999-08-31 | At & T Corp | Compressed representation of a data base that permits AD HOC querying |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US6014661A (en) | 1996-05-06 | 2000-01-11 | Ivee Development Ab | System and method for automatic analysis of data bases and for user-controlled dynamic querying |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6101515A (en) | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US6105020A (en) | 1999-10-11 | 2000-08-15 | International Business Machines Corporation | System and method for identifying and constructing star joins for execution by bitmap ANDing |
US6105030A (en) | 1998-02-27 | 2000-08-15 | Oracle Corporation | Method and apparatus for copying data that resides in a database |
WO2000049526A1 (en) | 1999-02-16 | 2000-08-24 | Hewlett-Packard Company | Similarity searching by combination of different data-types |
US6216138B1 (en) | 1994-04-22 | 2001-04-10 | Brooks Automation Inc. | Computer interface system for automatically generating graphical representations of computer operations linked together according to functional relationships |
US6222540B1 (en) | 1997-11-21 | 2001-04-24 | Portola Dimensional Systems, Inc. | User-friendly graphics generator including automatic correlation |
US6263335B1 (en) | 1996-02-09 | 2001-07-17 | Textwise Llc | Information extraction system and method using concept-relation-concept (CRC) triples |
US6263328B1 (en) * | 1999-04-09 | 2001-07-17 | International Business Machines Corporation | Object oriented query model and process for complex heterogeneous database queries |
US6304864B1 (en) | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
US6311189B1 (en) | 1998-03-11 | 2001-10-30 | Altavista Company | Technique for matching a query to a portion of media |
US6327574B1 (en) * | 1998-07-07 | 2001-12-04 | Encirq Corporation | Hierarchical models of consumer attributes for targeting content in a privacy-preserving manner |
US6326962B1 (en) | 1996-12-23 | 2001-12-04 | Doubleagent Llc | Graphic user interface for database system |
US6363179B1 (en) | 1997-07-25 | 2002-03-26 | Claritech Corporation | Methodology for displaying search results using character recognition |
US6377943B1 (en) * | 1999-01-20 | 2002-04-23 | Oracle Corp. | Initial ordering of tables for database queries |
US20020055954A1 (en) | 2000-08-01 | 2002-05-09 | Matthias Breuer | Methods and systems for inputting data into spreadsheet documents |
US20020065815A1 (en) | 2000-10-04 | 2002-05-30 | Xcelerix, Inc. | Systems and methods for searching a database |
US20020065814A1 (en) | 1997-07-01 | 2002-05-30 | Hitachi, Ltd. | Method and apparatus for searching and displaying structured document |
US20020128818A1 (en) | 1996-12-02 | 2002-09-12 | Ho Chi Fai | Method and system to answer a natural-language question |
US20020154175A1 (en) * | 2001-01-04 | 2002-10-24 | James Abello | System and method for visualizing massive multi-digraphs |
US6480194B1 (en) | 1996-11-12 | 2002-11-12 | Silicon Graphics, Inc. | Computer-related method, system, and program product for controlling data visualization in external dimension(s) |
US20020173984A1 (en) | 2000-05-22 | 2002-11-21 | Robertson James A. | Method and system for implementing improved containers in a global ecosystem of interrelated services |
US20030005036A1 (en) | 2001-04-06 | 2003-01-02 | Michael Mitzenmacher | Distributed, compressed Bloom filter Web cache server |
US6519631B1 (en) | 1999-08-13 | 2003-02-11 | Atomica Corporation | Web-based information retrieval |
US6529900B1 (en) | 1999-01-14 | 2003-03-04 | International Business Machines Corporation | Method and apparatus for data visualization |
US20030069880A1 (en) | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20030097357A1 (en) | 2000-05-18 | 2003-05-22 | Ferrari Adam J. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US20030115485A1 (en) | 2001-12-14 | 2003-06-19 | Milliken Walter Clark | Hash-based systems and methods for detecting, preventing, and tracing network worms and viruses |
US6584464B1 (en) | 1999-03-19 | 2003-06-24 | Ask Jeeves, Inc. | Grammar template query system |
US20030120659A1 (en) | 2000-03-20 | 2003-06-26 | Sridhar Mandayam Anandampillai | Systems for developing websites and methods therefor |
US20030120373A1 (en) | 2001-12-26 | 2003-06-26 | Eames John D. | System and method for analyzing controlling forming sections of a paper machine in operation |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US20030120644A1 (en) | 2001-12-17 | 2003-06-26 | International Business Machines Corporation | Method, apparatus, and computer program product for locating data in large datasets |
US6606659B1 (en) * | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20030154071A1 (en) * | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US6609123B1 (en) * | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US6629097B1 (en) | 1999-04-28 | 2003-09-30 | Douglas K. Keith | Displaying implicit associations among items in loosely-structured data sets |
US20030195872A1 (en) | 1999-04-12 | 2003-10-16 | Paul Senn | Web-based information content analyzer and information dimension dictionary |
US6643641B1 (en) | 2000-04-27 | 2003-11-04 | Russell Snyder | Web search engine with graphic snapshots |
US20030208665A1 (en) | 2002-05-01 | 2003-11-06 | Jih-Kwon Peir | Reducing data speculation penalty with early cache hit/miss prediction |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US20040030731A1 (en) | 2002-04-03 | 2004-02-12 | Liviu Iftode | System and method for accessing files in a network |
DE10245900A1 (en) | 2002-09-30 | 2004-04-08 | Neven jun., Hartmut, Prof.Dr. | Image based query system for search engines or databases of mobile telephone, portable computer uses image recognition to access more information about objects in image |
US20040107125A1 (en) * | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US20040122844A1 (en) * | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20040125137A1 (en) | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
US20040167909A1 (en) | 2002-12-06 | 2004-08-26 | Attensity Corporation | Methods and products for integrating mixed format data |
US20040220904A1 (en) | 2003-04-30 | 2004-11-04 | International Business Machines Corporation | Information retrieval system and method using index ANDing for improving performance |
US20040236655A1 (en) | 2003-05-19 | 2004-11-25 | Pacific Edge Software, Inc. | Method and system for object-oriented management of multi-dimensional data |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20040255237A1 (en) | 2003-06-10 | 2004-12-16 | Simon Tong | Document search engine including highlighting of confident results |
WO2004114163A2 (en) | 2003-02-19 | 2004-12-29 | Insightful Corporation | Method and system for enhanced data searching |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050022009A1 (en) | 2003-06-05 | 2005-01-27 | Aguilera Macros K. | System and method for preventing replay attacks |
US6850896B1 (en) | 1999-10-28 | 2005-02-01 | Market-Touch Corporation | Method and system for managing and providing sales data using world wide web |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050039033A1 (en) * | 2003-07-25 | 2005-02-17 | Activeviews, Inc. | Method and system for building a report for execution against a data store |
US20050050016A1 (en) | 2003-09-02 | 2005-03-03 | International Business Machines Corporation | Selective path signatures for query processing over a hierarchical tagged data structure |
US20050055327A1 (en) | 2003-09-08 | 2005-03-10 | International Business Machines Corporation | Uniform search system and method for selectively sharing distributed access-controlled documents |
US20050057566A1 (en) | 2003-09-11 | 2005-03-17 | International Business Machines Corporation | Rich graphic visualization generation from abstract data representation |
US20050060277A1 (en) * | 2003-09-15 | 2005-03-17 | Zlatanov Teodore Zlatkov | Computer systems and methods for platform independent presentation design |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050076012A1 (en) * | 2003-09-23 | 2005-04-07 | Udi Manber | Personalized searchable library with highlighting capabilities |
US20050083413A1 (en) | 2003-10-20 | 2005-04-21 | Logicalis | Method, system, apparatus, and machine-readable medium for use in connection with a server that uses images or audio for initiating remote function calls |
US20050086520A1 (en) | 2003-08-14 | 2005-04-21 | Sarang Dharmapurikar | Method and apparatus for detecting predefined signatures in packet payload using bloom filters |
US6885990B1 (en) * | 1999-05-31 | 2005-04-26 | Nippon Telegraph And Telephone Company | Speech recognition based on interactive information retrieval scheme using dialogue control to reduce user stress |
US20050120004A1 (en) | 2003-10-17 | 2005-06-02 | Stata Raymond P. | Systems and methods for indexing content for fast and scalable retrieval |
US6928436B2 (en) | 2002-02-28 | 2005-08-09 | Ilog Sa | Interactive generation of graphical visualizations of large data structures |
US20050187898A1 (en) | 2004-02-05 | 2005-08-25 | Nec Laboratories America, Inc. | Data Lookup architecture |
US20050216464A1 (en) | 2004-03-27 | 2005-09-29 | Microsoft Corporation | Automated authoring tool and method to facilitate inclusion of maps and other geographical data into travelogues |
US20050219929A1 (en) | 2004-03-30 | 2005-10-06 | Navas Julio C | Method and apparatus achieving memory and transmission overhead reductions in a content routing network |
US6961723B2 (en) | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20050256825A1 (en) * | 2003-06-20 | 2005-11-17 | International Business Machines Corporation | Viewing annotations across multiple applications |
US6968343B2 (en) | 2000-09-01 | 2005-11-22 | Borland Software Corporation | Methods and systems for integrating process modeling and project planning |
US20050268212A1 (en) | 2004-05-28 | 2005-12-01 | Michael Dagel | System, apparatus, and method for desktop-based creation and publication of a periodic community newsletter |
US20060004851A1 (en) | 2004-07-02 | 2006-01-05 | Graphlogic Inc. | Object process graph relational database interface |
US20060020582A1 (en) | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | Method and system for processing abstract derived entities defined in a data abstraction model |
US20060047838A1 (en) * | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US7013308B1 (en) | 2000-11-28 | 2006-03-14 | Semscript Ltd. | Knowledge storage and retrieval system and method |
US7031955B1 (en) | 2001-04-27 | 2006-04-18 | I2 Technologies Us, Inc. | Optimization using a multi-dimensional data model |
US20060085465A1 (en) * | 2004-10-15 | 2006-04-20 | Oracle International Corporation | Method(s) for updating database object metadata |
US20060085386A1 (en) | 2004-10-19 | 2006-04-20 | Microsoft Corporation | Two pass calculation to optimize formula calculations for a spreadsheet |
US7043521B2 (en) | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
US20060149700A1 (en) | 2004-11-11 | 2006-07-06 | Gladish Randolph J | System and method for automatic geospatial web network generation via metadata transformation |
US20060173824A1 (en) | 2005-02-01 | 2006-08-03 | Metalincs Corporation | Electronic communication analysis and visualization |
US7100083B2 (en) | 2000-08-04 | 2006-08-29 | Sun Microsystems, Inc. | Checks for product knowledge management |
US20060206508A1 (en) | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20060224582A1 (en) | 2005-03-31 | 2006-10-05 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US20060253491A1 (en) | 2005-05-09 | 2006-11-09 | Gokturk Salih B | System and method for enabling search and retrieval from image files based on recognized information |
US7146538B2 (en) | 2003-03-28 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Bus interface module |
US7158983B2 (en) | 2002-09-23 | 2007-01-02 | Battelle Memorial Institute | Text analysis technique |
US20070022085A1 (en) | 2005-07-22 | 2007-01-25 | Parashuram Kulkarni | Techniques for unsupervised web content discovery and automated query generation for crawling the hidden web |
US20070055656A1 (en) | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
US20070067108A1 (en) | 2005-03-03 | 2007-03-22 | Buhler Jeremy D | Method and apparatus for performing biosequence similarity searching |
US20070179965A1 (en) * | 2006-01-27 | 2007-08-02 | Hogue Andrew W | Designating data objects for analysis |
US20070203867A1 (en) * | 2006-01-27 | 2007-08-30 | Hogue Andrew W | Data object visualization |
US20070203868A1 (en) * | 2006-01-27 | 2007-08-30 | Betz Jonathan T | Object categorization for information extraction |
US20070271249A1 (en) | 2003-06-20 | 2007-11-22 | Cragun Brian J | Heterogeneous multi-level extendable indexing for general purpose annotation systems |
US20080005064A1 (en) | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20080097958A1 (en) | 2004-06-17 | 2008-04-24 | The Regents Of The University Of California | Method and Apparatus for Retrieving and Indexing Hidden Pages |
WO2008097051A1 (en) | 2007-02-08 | 2008-08-14 | Olaworks, Inc. | Method for searching specific person included in digital data, and method and apparatus for producing copyright report for the specific person |
US20080209444A1 (en) | 2007-02-27 | 2008-08-28 | Garrett Andrew J | Method, system and program product for defining imports into and exports out from a database system using spread sheets by use of a control language |
US20080267504A1 (en) | 2007-04-24 | 2008-10-30 | Nokia Corporation | Method, device and computer program product for integrating code-based and optical character recognition technologies into a mobile visual search |
US20090100048A1 (en) | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Mixed Media Reality Retrieval of Differentially-weighted Links |
US7669115B2 (en) | 2000-05-30 | 2010-02-23 | Outlooksoft Corporation | Method and system for facilitating information exchange |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US606659A (en) * | 1898-07-05 | Door-hanger |
-
2006
- 2006-01-27 US US11/342,293 patent/US7925676B2/en not_active Expired - Fee Related
-
2007
- 2007-01-26 WO PCT/US2007/061156 patent/WO2007090063A2/en active Application Filing
Patent Citations (123)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4888690A (en) | 1985-01-11 | 1989-12-19 | Wang Laboratories, Inc. | Interactive error handling means in database management |
US4899292A (en) | 1988-03-02 | 1990-02-06 | Image Storage/Retrieval Systems, Inc. | System for storing and retrieving text and associated graphics |
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5832479A (en) | 1992-12-08 | 1998-11-03 | Microsoft Corporation | Method for compressing full text indexes with document identifiers and location offsets |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5544051A (en) | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US6216138B1 (en) | 1994-04-22 | 2001-04-10 | Brooks Automation Inc. | Computer interface system for automatically generating graphical representations of computer operations linked together according to functional relationships |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US5815415A (en) | 1996-01-19 | 1998-09-29 | Bentley Systems, Incorporated | Computer system for portable persistent modeling |
US6263335B1 (en) | 1996-02-09 | 2001-07-17 | Textwise Llc | Information extraction system and method using concept-relation-concept (CRC) triples |
US5778378A (en) * | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US6014661A (en) | 1996-05-06 | 2000-01-11 | Ivee Development Ab | System and method for automatic analysis of data bases and for user-controlled dynamic querying |
US6101515A (en) | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US5870739A (en) | 1996-09-20 | 1999-02-09 | Novell, Inc. | Hybrid query apparatus and method |
US5905980A (en) | 1996-10-31 | 1999-05-18 | Fuji Xerox Co., Ltd. | Document processing apparatus, word extracting apparatus, word extracting method and storage medium for storing word extracting program |
US6480194B1 (en) | 1996-11-12 | 2002-11-12 | Silicon Graphics, Inc. | Computer-related method, system, and program product for controlling data visualization in external dimension(s) |
US20020128818A1 (en) | 1996-12-02 | 2002-09-12 | Ho Chi Fai | Method and system to answer a natural-language question |
US6326962B1 (en) | 1996-12-23 | 2001-12-04 | Doubleagent Llc | Graphic user interface for database system |
US5946692A (en) | 1997-05-08 | 1999-08-31 | At & T Corp | Compressed representation of a data base that permits AD HOC querying |
US20020065814A1 (en) | 1997-07-01 | 2002-05-30 | Hitachi, Ltd. | Method and apparatus for searching and displaying structured document |
US6363179B1 (en) | 1997-07-25 | 2002-03-26 | Claritech Corporation | Methodology for displaying search results using character recognition |
US6222540B1 (en) | 1997-11-21 | 2001-04-24 | Portola Dimensional Systems, Inc. | User-friendly graphics generator including automatic correlation |
US6105030A (en) | 1998-02-27 | 2000-08-15 | Oracle Corporation | Method and apparatus for copying data that resides in a database |
US6311189B1 (en) | 1998-03-11 | 2001-10-30 | Altavista Company | Technique for matching a query to a portion of media |
US6327574B1 (en) * | 1998-07-07 | 2001-12-04 | Encirq Corporation | Hierarchical models of consumer attributes for targeting content in a privacy-preserving manner |
US6529900B1 (en) | 1999-01-14 | 2003-03-04 | International Business Machines Corporation | Method and apparatus for data visualization |
US6377943B1 (en) * | 1999-01-20 | 2002-04-23 | Oracle Corp. | Initial ordering of tables for database queries |
WO2000049526A1 (en) | 1999-02-16 | 2000-08-24 | Hewlett-Packard Company | Similarity searching by combination of different data-types |
US6584464B1 (en) | 1999-03-19 | 2003-06-24 | Ask Jeeves, Inc. | Grammar template query system |
US6263328B1 (en) * | 1999-04-09 | 2001-07-17 | International Business Machines Corporation | Object oriented query model and process for complex heterogeneous database queries |
US20030195872A1 (en) | 1999-04-12 | 2003-10-16 | Paul Senn | Web-based information content analyzer and information dimension dictionary |
US6304864B1 (en) | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
US6629097B1 (en) | 1999-04-28 | 2003-09-30 | Douglas K. Keith | Displaying implicit associations among items in loosely-structured data sets |
US20040107125A1 (en) * | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US6885990B1 (en) * | 1999-05-31 | 2005-04-26 | Nippon Telegraph And Telephone Company | Speech recognition based on interactive information retrieval scheme using dialogue control to reduce user stress |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US6519631B1 (en) | 1999-08-13 | 2003-02-11 | Atomica Corporation | Web-based information retrieval |
US6609123B1 (en) * | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US6105020A (en) | 1999-10-11 | 2000-08-15 | International Business Machines Corporation | System and method for identifying and constructing star joins for execution by bitmap ANDing |
US6850896B1 (en) | 1999-10-28 | 2005-02-01 | Market-Touch Corporation | Method and system for managing and providing sales data using world wide web |
US6718324B2 (en) | 2000-01-14 | 2004-04-06 | International Business Machines Corporation | Metadata search results ranking system |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US6606659B1 (en) * | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20030120659A1 (en) | 2000-03-20 | 2003-06-26 | Sridhar Mandayam Anandampillai | Systems for developing websites and methods therefor |
US6643641B1 (en) | 2000-04-27 | 2003-11-04 | Russell Snyder | Web search engine with graphic snapshots |
US20030097357A1 (en) | 2000-05-18 | 2003-05-22 | Ferrari Adam J. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US20020173984A1 (en) | 2000-05-22 | 2002-11-21 | Robertson James A. | Method and system for implementing improved containers in a global ecosystem of interrelated services |
US7669115B2 (en) | 2000-05-30 | 2010-02-23 | Outlooksoft Corporation | Method and system for facilitating information exchange |
US20020055954A1 (en) | 2000-08-01 | 2002-05-09 | Matthias Breuer | Methods and systems for inputting data into spreadsheet documents |
US7100083B2 (en) | 2000-08-04 | 2006-08-29 | Sun Microsystems, Inc. | Checks for product knowledge management |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US6968343B2 (en) | 2000-09-01 | 2005-11-22 | Borland Software Corporation | Methods and systems for integrating process modeling and project planning |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20020065815A1 (en) | 2000-10-04 | 2002-05-30 | Xcelerix, Inc. | Systems and methods for searching a database |
US7013308B1 (en) | 2000-11-28 | 2006-03-14 | Semscript Ltd. | Knowledge storage and retrieval system and method |
US20020154175A1 (en) * | 2001-01-04 | 2002-10-24 | James Abello | System and method for visualizing massive multi-digraphs |
US20030005036A1 (en) | 2001-04-06 | 2003-01-02 | Michael Mitzenmacher | Distributed, compressed Bloom filter Web cache server |
US7031955B1 (en) | 2001-04-27 | 2006-04-18 | I2 Technologies Us, Inc. | Optimization using a multi-dimensional data model |
US6961723B2 (en) | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20030069880A1 (en) | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20060206508A1 (en) | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20030115485A1 (en) | 2001-12-14 | 2003-06-19 | Milliken Walter Clark | Hash-based systems and methods for detecting, preventing, and tracing network worms and viruses |
US20030120644A1 (en) | 2001-12-17 | 2003-06-26 | International Business Machines Corporation | Method, apparatus, and computer program product for locating data in large datasets |
US20030120373A1 (en) | 2001-12-26 | 2003-06-26 | Eames John D. | System and method for analyzing controlling forming sections of a paper machine in operation |
US20030154071A1 (en) * | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US6928436B2 (en) | 2002-02-28 | 2005-08-09 | Ilog Sa | Interactive generation of graphical visualizations of large data structures |
US7043521B2 (en) | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
US20040030731A1 (en) | 2002-04-03 | 2004-02-12 | Liviu Iftode | System and method for accessing files in a network |
US20030208665A1 (en) | 2002-05-01 | 2003-11-06 | Jih-Kwon Peir | Reducing data speculation penalty with early cache hit/miss prediction |
US7158983B2 (en) | 2002-09-23 | 2007-01-02 | Battelle Memorial Institute | Text analysis technique |
DE10245900A1 (en) | 2002-09-30 | 2004-04-08 | Neven jun., Hartmut, Prof.Dr. | Image based query system for search engines or databases of mobile telephone, portable computer uses image recognition to access more information about objects in image |
US20040167909A1 (en) | 2002-12-06 | 2004-08-26 | Attensity Corporation | Methods and products for integrating mixed format data |
US20040122844A1 (en) * | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20040125137A1 (en) | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
WO2004114163A2 (en) | 2003-02-19 | 2004-12-29 | Insightful Corporation | Method and system for enhanced data searching |
US7146538B2 (en) | 2003-03-28 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Bus interface module |
US20040220904A1 (en) | 2003-04-30 | 2004-11-04 | International Business Machines Corporation | Information retrieval system and method using index ANDing for improving performance |
US20040236655A1 (en) | 2003-05-19 | 2004-11-25 | Pacific Edge Software, Inc. | Method and system for object-oriented management of multi-dimensional data |
US20050022009A1 (en) | 2003-06-05 | 2005-01-27 | Aguilera Macros K. | System and method for preventing replay attacks |
US20040255237A1 (en) | 2003-06-10 | 2004-12-16 | Simon Tong | Document search engine including highlighting of confident results |
US20070271249A1 (en) | 2003-06-20 | 2007-11-22 | Cragun Brian J | Heterogeneous multi-level extendable indexing for general purpose annotation systems |
US20050256825A1 (en) * | 2003-06-20 | 2005-11-17 | International Business Machines Corporation | Viewing annotations across multiple applications |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050039033A1 (en) * | 2003-07-25 | 2005-02-17 | Activeviews, Inc. | Method and system for building a report for execution against a data store |
US20050086520A1 (en) | 2003-08-14 | 2005-04-21 | Sarang Dharmapurikar | Method and apparatus for detecting predefined signatures in packet payload using bloom filters |
US20050050016A1 (en) | 2003-09-02 | 2005-03-03 | International Business Machines Corporation | Selective path signatures for query processing over a hierarchical tagged data structure |
US20050055327A1 (en) | 2003-09-08 | 2005-03-10 | International Business Machines Corporation | Uniform search system and method for selectively sharing distributed access-controlled documents |
US20050057566A1 (en) | 2003-09-11 | 2005-03-17 | International Business Machines Corporation | Rich graphic visualization generation from abstract data representation |
US20050060277A1 (en) * | 2003-09-15 | 2005-03-17 | Zlatanov Teodore Zlatkov | Computer systems and methods for platform independent presentation design |
US20050076012A1 (en) * | 2003-09-23 | 2005-04-07 | Udi Manber | Personalized searchable library with highlighting capabilities |
US20050120004A1 (en) | 2003-10-17 | 2005-06-02 | Stata Raymond P. | Systems and methods for indexing content for fast and scalable retrieval |
US20050083413A1 (en) | 2003-10-20 | 2005-04-21 | Logicalis | Method, system, apparatus, and machine-readable medium for use in connection with a server that uses images or audio for initiating remote function calls |
US20050187898A1 (en) | 2004-02-05 | 2005-08-25 | Nec Laboratories America, Inc. | Data Lookup architecture |
US20050216464A1 (en) | 2004-03-27 | 2005-09-29 | Microsoft Corporation | Automated authoring tool and method to facilitate inclusion of maps and other geographical data into travelogues |
US20050219929A1 (en) | 2004-03-30 | 2005-10-06 | Navas Julio C | Method and apparatus achieving memory and transmission overhead reductions in a content routing network |
US20050268212A1 (en) | 2004-05-28 | 2005-12-01 | Michael Dagel | System, apparatus, and method for desktop-based creation and publication of a periodic community newsletter |
US20080097958A1 (en) | 2004-06-17 | 2008-04-24 | The Regents Of The University Of California | Method and Apparatus for Retrieving and Indexing Hidden Pages |
US20060047838A1 (en) * | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US20060004851A1 (en) | 2004-07-02 | 2006-01-05 | Graphlogic Inc. | Object process graph relational database interface |
US20060020582A1 (en) | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | Method and system for processing abstract derived entities defined in a data abstraction model |
US20060085465A1 (en) * | 2004-10-15 | 2006-04-20 | Oracle International Corporation | Method(s) for updating database object metadata |
US20060085386A1 (en) | 2004-10-19 | 2006-04-20 | Microsoft Corporation | Two pass calculation to optimize formula calculations for a spreadsheet |
US20060149700A1 (en) | 2004-11-11 | 2006-07-06 | Gladish Randolph J | System and method for automatic geospatial web network generation via metadata transformation |
US20060173824A1 (en) | 2005-02-01 | 2006-08-03 | Metalincs Corporation | Electronic communication analysis and visualization |
US20070067108A1 (en) | 2005-03-03 | 2007-03-22 | Buhler Jeremy D | Method and apparatus for performing biosequence similarity searching |
US20060224582A1 (en) | 2005-03-31 | 2006-10-05 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US20060253491A1 (en) | 2005-05-09 | 2006-11-09 | Gokturk Salih B | System and method for enabling search and retrieval from image files based on recognized information |
US20080005064A1 (en) | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20070022085A1 (en) | 2005-07-22 | 2007-01-25 | Parashuram Kulkarni | Techniques for unsupervised web content discovery and automated query generation for crawling the hidden web |
US20070055656A1 (en) | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
US20070203867A1 (en) * | 2006-01-27 | 2007-08-30 | Hogue Andrew W | Data object visualization |
US20070203868A1 (en) * | 2006-01-27 | 2007-08-30 | Betz Jonathan T | Object categorization for information extraction |
US20070179965A1 (en) * | 2006-01-27 | 2007-08-02 | Hogue Andrew W | Designating data objects for analysis |
US20090100048A1 (en) | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Mixed Media Reality Retrieval of Differentially-weighted Links |
WO2008097051A1 (en) | 2007-02-08 | 2008-08-14 | Olaworks, Inc. | Method for searching specific person included in digital data, and method and apparatus for producing copyright report for the specific person |
US20080209444A1 (en) | 2007-02-27 | 2008-08-28 | Garrett Andrew J | Method, system and program product for defining imports into and exports out from a database system using spread sheets by use of a control language |
US20080267504A1 (en) | 2007-04-24 | 2008-10-30 | Nokia Corporation | Method, device and computer program product for integrating code-based and optical character recognition technologies into a mobile visual search |
Non-Patent Citations (52)
Title |
---|
"Information Entropy-Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet. |
"Information Entropy—Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet<URL:http://en.wikipedia.org/wiki/Information—entropy>. |
"Information Theory-Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet. |
"Information Theory—Wikipedia, the free encyclopedia," [online] [Retrieved on May 3, 2006] Retrieved from the Internet<URL:http://en.wikipedia.org/wiki/Information—theory>. |
A. W. Hogue, Tree-Pattern Inference and Matching for Wrapper Induction on the World Wide Web, Massachusetts Institute of Technology, Master's Thesis, Jun. 2004, pp. 43-50, 57-74. * |
Anagnostopoulos, I et al., "Information Fusion Meta-Search Interface for Precise Photo Acquisition on the Web," 25th International Conference on Information Technology Interfaces, ITI 2003, Jun. 16-19, 2003, Cavtat, Croatia, pp. 375-381. |
Anonymous, Wie erstelle ich bei StudiVZ eine Bilder-Verlinkung? (How do I create an image with StudiVZ-linking?), www .limillimil.de/wie-erstelle-ich-bei-studivz-eine-bilder-verlinkung-758.html, 2008, 10 pages. |
Bharat, Personalized, Interactive News on the Web, Georgia Institute of Technology, Atlanta, GA, May 5, 1997, pp. 1-22. |
Bloom filter, Wikipedia, en.wikipedia.org/wiki/Bloom-filter (last modified Feb. 13, 2005), pp. 1-4. |
Bloom, Space/Time Trade-offs in Hash Coding with Allowable Errors, Communications of the ACM, vol. 13, No. 7, Jul. 1970, pp. 422-426. |
Brill, E. et al., "An Analysis of the AskMSR Question-Answering System," Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP), Jul. 2002, pp. 257-264. |
Brin, S., "Extracting Patterns and Relations from the World Wide Web," 12 pages. |
Brin, The Anatomy of a Large-Scale Hypertextual Web Search Engine, 7th International World Wide Web Conference, Brisbane, Australia, Apr. 14-18, 1998, pp. 1-26. |
Cao, Bloom Filters-the math, www.cs.wisc.edu/~cao/papers/summary-cache/node8.html, Jul. 5, 1998, pp. 1-6. |
Cao, Bloom Filters—the math, www.cs.wisc.edu/˜cao/papers/summary-cache/node8.html, Jul. 5, 1998, pp. 1-6. |
Castro, iPhoto's new Faces feature really does work!, www.pigsgourdandwikis.com/2009/02/iphotos-new-faces-geature-really-does.html, Feb. 17, 2009, 8 pages. |
Chang, C. et al., "IEPAD: Information Extraction Based on Pattern Discovery," WWW10 '01, ACM, May 1-5, 2001, pp. 681-688. |
Chesnais, The Fishwrap Personalized News System, Community Networking, Integrated Multimedia Services to the Home, Proceedings of the Second International Workshop on, Jun. 20-22, 1995, pp. 275-282. |
Chu-Carroll, J. et al., "A Multi-Strategy with Multi-Source Approach to Question Answering," 8 pages. |
Clarke, FrontPage 2002 Tutorials-Adding Functionality to your Website with FrontPage 2002 Part II-Navigation, ABC-All 'Bout Computers, Apr. 2002, vol. 11, accessfp.net/fronpagenavigation.htm, 8 pages. |
Cowie, MOQA: Meaning-Oriented Question Answering, Proceedings of RIAO 2004, 15 pages. |
Dean, J. et al., "MapReduce: Simplified Data Processing on Large Clusters," To appear in OSDI 2004, pp. 1-13. |
Etzioni, O. et al., "Web-scale Information Extraction in KnowItAll (Preliminary Results)," WWW2004, ACM, May 17-20, 2004, 11 pages. |
Freitag, D. et al., "Boosted Wrapper Induction," American Association for Artificial Intelligence, 2000, 7 pages. |
Guha, R. et al., "Disambiguating People in Search," WWW2004, ACM, May 17-22, 2004, 9 pages. |
Guha, R., "Object Co-identification on the Semantic Web," WWW2004, ACM, May 17-22, 2004, 9 pages. |
Hogue, A.W., "Tree Pattern Inference and Matching for Wrapper Induction on the World Wide Web," Master of Engineering in Electrical Engineering and Computer Science, Massachusetts Institute of Technology, Jun. 2004, pp. 1-106. |
Ilyas, Rank-Aware Query Optimization, ACM SIGMOD 2004, Paris, France, Jun. 13-18, 2004, 12 pages. |
International Search Report and Written Opinion for PCT/US2007/61158 dated Feb. 28, 2008. |
International Search Report and Written Opinion for PCT/US2010/044604 dated Oct. 6, 2010. |
International Search Report/Written Opinion, PCT/US07/061157, Feb.15, 2008, 10 pages. |
International Search Report/Written Opinion, PCT/US2006/010965, Jul. 5, 2006, 9 pages. |
International Search Report/Written Opinion, PCT/US2010/044603, Nov. 17, 2010, 11 pages. |
Jones, R. et al., "Bootstrapping for Text Learning Tasks," 12 pages. |
Kamba, The Krakatoa Chronicle, An interactive, Personalized, Newspaper on the Web, w3.ord/conferences/www4/papers/93, 1993, pp. 1-12. |
Kosseim, L, et al., "Answer Formulation for Question-Answering," 11 pages. |
Lin, Question Answering from the Web Using Knowledge Annotation and Knowledge Mining Techniques, CIKM'03, New Orleans, LA, Nov. 3-8, 2003, pp. 116-123. |
Liu, B. et al., "Mining Data Records in Web Pages," Conference '00, ACM, 2000, pp. 1-10. |
McCallum, A. et al., "Object Consolodation by Graph Partitioning with a Conditionally-Trained Distance Metric," SIGKDD '03, ACM, Aug. 24-27, 2003, 6 pages. |
Mihalcea, R. et al., "PageRank on Semantic Networks, with Application to Word Sense Disambiguation," 7 pages. |
Mihalcea, R. et al., "TextRank: Bringing Order into Texts," 8 pages. |
Nyberg, The JAVELIN Question-Answering System at TREC2003: A Multi Strategy Approach With Dynamic Planning, TREC2003, Nov. 18-21, 2003, 9 pages. |
Ogden, Improving Cross-Language Text Retrieval with Human Interactions, Proc. of the 33rd Hawaii International Conference on System Sciences, IEEE 2000, pp. 1-9. |
PCT International Search Report and Written Opinion, PCT/US06/07639, Sep. 13, 2006, 6 pages. |
PCT International Search Report and Written Opinion, PCT/US07/61156, Feb. 11, 2008, 7 pages. |
Prager, J. et al., "IBM's PIQUANT in TREC2003," 10 pages. |
Prager, J. et al., "Question Answering using Constraint Satisfaction: QA-by-Dossier-with-Constraints," 8 pages. |
Ramakrishnan, G. et al., "Is Question Answering an Acquired Skill?", WWW2004, ACM, May 17, 2004, pp. 111-120. |
The MathWorks, Using Matlab Graphics, Version 5, Dec. 1996, Title Page, Preface and Chapters 1, 2, 5, 8 and 10. * |
The MathWorks, Using Matlab Graphics, Version 5, Dec. 1996, Title Page, Preface and Chapters 1, 8 and 10. * |
The MathWorks, Using Matlab Graphics, Version 5, Dec. 1996, Title Page, Preface and Chapters 5 and 8. * |
Thompson, Freshman Publishing Experiment Offers Made-to-Order Newspapers, MIT News Office, http://web.mit.edu/newsoffice/1994/newspaper-0309.html, 1994, pp. 1-4. |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140189557A1 (en) * | 2010-09-29 | 2014-07-03 | Open Text S.A. | System and method for managing objects using an object map |
US10108731B2 (en) * | 2010-09-29 | 2018-10-23 | Open Text Sa Ulc | System and method for timeline management of objects |
US10387524B2 (en) * | 2010-09-29 | 2019-08-20 | Open Text Sa Ulc | System and method for managing objects using an object map |
US20140032532A1 (en) * | 2012-07-25 | 2014-01-30 | Ebay Inc. | Spell check using column cursor |
US9081821B2 (en) * | 2012-07-25 | 2015-07-14 | Ebay Inc. | Spell check using column cursor |
US9158768B2 (en) | 2012-07-25 | 2015-10-13 | Paypal, Inc. | System and methods to configure a query language using an operator dictionary |
US9460151B2 (en) | 2012-07-25 | 2016-10-04 | Paypal, Inc. | System and methods to configure a query language using an operator dictionary |
US9607049B2 (en) | 2012-07-25 | 2017-03-28 | Ebay Inc. | Systems and methods to build and utilize a search infrastructure |
US10482113B2 (en) | 2012-07-25 | 2019-11-19 | Ebay Inc. | Systems and methods to build and utilize a search infrastructure |
US9372942B1 (en) | 2013-03-15 | 2016-06-21 | Dell Software Inc. | System and method for facilitating data visualization via a map-reduce framework |
US8862646B1 (en) | 2014-03-25 | 2014-10-14 | PlusAmp, Inc. | Data file discovery, visualization, and importing |
US10977748B2 (en) | 2015-09-24 | 2021-04-13 | International Business Machines Corporation | Predictive analytics for event mapping |
Also Published As
Publication number | Publication date |
---|---|
WO2007090063A3 (en) | 2008-04-24 |
WO2007090063A2 (en) | 2007-08-09 |
US20070185895A1 (en) | 2007-08-09 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7555471B2 (en) | Data object visualization | |
US9530229B2 (en) | Data object visualization using graphs | |
US7925676B2 (en) | Data object visualization using maps | |
US20070179965A1 (en) | Designating data objects for analysis | |
US7778952B2 (en) | Displaying facts on a linear graph | |
US10223406B2 (en) | Entity normalization via name normalization | |
US8055674B2 (en) | Annotation framework | |
US9558186B2 (en) | Unsupervised extraction of facts | |
US8954426B2 (en) | Query language | |
US7774328B2 (en) | Browseable fact repository | |
US7454398B2 (en) | Support for object search | |
US8280878B2 (en) | Method and apparatus for real time text analysis and text navigation | |
US8041709B2 (en) | Domain collapsing of search results | |
US20070198597A1 (en) | Attribute entropy as a signal in object normalization | |
US7707265B2 (en) | System, method, and service for interactively presenting a summary of a web site | |
US7590628B2 (en) | Determining document subject by using title and anchor text of related documents | |
US7991797B2 (en) | ID persistence through normalization | |
US20100005087A1 (en) | Facilitating collaborative searching using semantic contexts associated with information | |
JP5187313B2 (en) | Document importance calculation system, document importance calculation method, and program | |
US20120059822A1 (en) | Knowledge management tool | |
US8954412B1 (en) | Corroborating facts in electronic documents | |
US20200142911A1 (en) | Hierarchical Search Folders for a Document Repository | |
Scime | Web page extension of data warehouses |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HOGUE, ANDREW W.;VESPE, DAVID J.;KEHLENBECK, ALEXANDER;AND OTHERS;SIGNING DATES FROM 20060405 TO 20060503;REEL/FRAME:017591/0862Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HOGUE, ANDREW W.;VESPE, DAVID J.;KEHLENBECK, ALEXANDER;AND OTHERS;REEL/FRAME:017591/0862;SIGNING DATES FROM 20060405 TO 20060503 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20190412 |
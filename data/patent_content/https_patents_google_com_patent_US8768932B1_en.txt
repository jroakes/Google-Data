US8768932B1 - Method and apparatus for ranking search results - Google Patents
Method and apparatus for ranking search results Download PDFInfo
- Publication number
- US8768932B1 US8768932B1 US11/803,580 US80358007A US8768932B1 US 8768932 B1 US8768932 B1 US 8768932B1 US 80358007 A US80358007 A US 80358007A US 8768932 B1 US8768932 B1 US 8768932B1
- Authority
- US
- United States
- Prior art keywords
- search results
- search
- ranked
- subset
- attribute
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G06F17/30864—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G06F17/30675—
-
- G06F17/30867—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0623—Item investigation
- G06Q30/0625—Directed, with specific intent or strategy
- G06Q30/0627—Directed, with specific intent or strategy using item specifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9558—Details of hyperlinks; Management of linked annotations
-
- G06F17/30882—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
Definitions
- the present invention relates to search-engines. More specifically, the present invention relates to a method and apparatus for ranking search-results produced by a search-engine.
- a search-engine Upon receiving a query from a user, a search-engine will typically identify a set of search-results that are related to terms in the query. In most cases, the search-engine will present the search-results to a user in an ordering based on a relevance measure. However, often a user desires to rank the search-results by a specific attribute, such as price or date. To do so, the user specifies the desired attribute, and the search-engine subsequently re-ranks the search-results based on the desired attribute.
- the search-engine may list less relevant search-results before more relevant search-results. Consequently, the user may have to browse through several pages of less relevant search-results before finding more relevant search-results. This problem is often exacerbated by people who adjust a specific attribute to affect the ranking of specific search-results. For example, a merchant may reduce the price of a product by a nominal value to ensure that a search-engine lists the product first. This often causes the search-engine to list less relevant products before more relevant products.
- One embodiment of the present invention provides a system for ranking search-results.
- the system receives a query, wherein the query includes one or more terms.
- the system subsequently searches a dataset using the one or more terms to obtain search-results.
- the system receives an attribute-identifier, which identifies an attribute for the obtained search-results.
- the system calculates a combined score based on an attribute-value for the identified attribute, and a relevance-score for the search-result.
- the system ranks the search-results based on combined scores associated with the search-results.
- the system presents the ranked search-results to a user.
- the query can include the attribute-identifier.
- the attribute can be: a price, a rating, an image size, an image resolution, a video length, an audio length, a text length, a file size, a date, a time, an expiration date, and a quantity.
- calculating the combined score can include normalizing the combined score.
- calculating the combined score includes applying weights to the relevance-score and the attribute-value.
- the system divides the ranked search-results into subsets of ranked search-results. Then, for each subset, the system re-ranks the search-results based on the attribute-value to obtain re-ranked search-results. The system then presents the re-ranked search-results to the user.
- One embodiment of the present invention provides a system for ranking search-results.
- the system receives a query from a client at a search-engine, wherein the query includes one or more terms.
- the system subsequently searches a dataset using the one or more terms to obtain search-results.
- the system receives an attribute-identifier, which identifies an attribute associated with the obtained search-results.
- the system determines if the search-result has a relevance-score which is above a threshold-value. If not, the system discards the search-result. If so, the system includes the search-result in a set of relevant search-results.
- the system ranks the set of relevant search-results based on an attribute-value for the identified attribute to obtain ranked relevant search-results.
- the system presents the ranked relevant search-results to a user.
- the system calculates a combined score based on the attribute-value and the relevance-score associated with the relevant search-result. The system then ranks the relevant search-results based on combined scores associated with the relevant search-results to obtain the ranked relevant search-results.
- the system divides the ranked relevant search-results into subsets of ranked relevant search-results. Then, for each subset of ranked relevant search-results, the system re-ranks the search-results based on the attribute-value to obtain re-ranked relevant search-results. The system then presents the re-ranked relevant search-results to the user.
- FIG. 1 illustrates a computing environment in accordance with an embodiment of the present invention.
- FIG. 2 presents a flow chart illustrating a process for ranking search-results in accordance with an embodiment of the present invention.
- FIG. 3 presents a flow chart illustrating a process for ranking subsets of search-results in accordance with an embodiment of the present invention.
- FIG. 4 presents a flow chart illustrating a second process for ranking search-results in accordance with an embodiment of the present invention.
- FIG. 5A illustrates a web-page in accordance with an embodiment of the present invention.
- FIG. 5B illustrates a second web-page in accordance with an embodiment of the present invention.
- FIG. 5C illustrates a third web-page in accordance with an embodiment of the present invention.
- Table 1 illustrates examples of formulas for combining an attribute-value with a relevance-score in accordance with an embodiment of the present invention.
- a computer-readable storage medium which may be any device or medium that can store code and/or data for use by a computer system.
- One embodiment of the present invention provides a search-engine that can rank search-results based on an attribute which is orthogonal to the relevancy of the search-results. Hence, for each search-result, this search-engine can calculate a combined score based on both the relevance-score of the search-result and an attribute-value associated with the search-result. The search-engine can then rank the search-results based on their combined scores and can then present the ranked search-results to a user.
- the search-engine can calculate the combined score based on multiple attribute-values associated with the search-result.
- the search-engine can calculate the combined score based on any orthogonal factors associated with the search-results.
- the search-engine is not limited to using a relevance-score to calculate the combined score.
- the search-engine could use a quality-factor in combination with an attribute-value to calculate the combined score. This quality-factor may or may not be based on the relevance of the search-result to the query, but may instead, for example, relate to the reliability of a source associated with the search-result.
- the search-engine by ranking the search-results by their combined score, the search-engine is able to rank search-results with a higher degree of relevancy, but a lower attribute-value above search-results with a lower-degree of relevancy, but a higher attribute-value. For example, suppose that a user searches for a digital camera and desires that the search-engine rank the search-results in ascending order of price. Note that, in this example, because the user desires to rank the search-results in ascending order of price, a low price correlates to a high attribute-value and vice-versa.
- the search-results include a camera case, which has a price that is significantly lower than any digital camera. Because the search-engine ranks the search-results based on a combined score that includes both the relevance-score and the attribute-value, the search-engine can rank, and thus present, the camera case after the digital cameras. Note that this ranking is dependent on the formula that the search-engine uses to calculate the combined score. Thus, a search-result that has a relevance-score that is only slightly higher than the relevance-score of a second search-result may still rank below the second search-result even if the second search-result is less relevant than the search-result.
- the search-engine can divide the search-results into subsets. During this process, the search-engine maintains the relative ranking between the search-results. The search-engine can then re-rank these subsets based on the attribute-values associated with the search-results. This enables the search-engine to fine-tune the rankings to help prevent search-results associated with a given attribute-value from ranking above search-results with a higher attribute-value.
- search-engine can also use this embodiment to help prevent search-results associated with a given attribute-value from ranking above search-results with a lower attribute-value, wherein the search-engine ranks search-results in ascending order based on attribute-values associated with the search-results.
- the search-engine before ranking the search-results, can discard search-results associated with a relevance-score that is below a given threshold. This enables the search-engine to rank search-results based on an attribute without including search-results that have a particularly low relevance-score that can skew the rankings.
- FIG. 1 illustrates a computing environment 100 in accordance with an embodiment of the present invention.
- Computing environment 100 includes a number of computer systems, which can generally include any type of computer system based on: a microprocessor, a mainframe computer, a digital signal processor, a portable computing device, a personal organizer, a device controller, or a computational engine within an appliance. More specifically, computing environment 100 includes: client 110 ; network 120 ; server 130 ; and search-engine 140 .
- Client 110 can generally include any node on a network including computational capability and including a mechanism for communicating across the network.
- Network 120 can generally include any type of wired or wireless communication channel capable of coupling together computing nodes. This includes, but is not limited to, a local area network, a wide area network, or a combination of networks. In one embodiment of the present invention, network 120 comprises the Internet.
- Server 130 can generally include any computational node including a mechanism for servicing requests from a client for computational and/or data storage resources.
- Search-engine 140 can generally include any system capable of searching a dataset for an occurrence of one or more terms.
- the dataset can include any type of data, including: images, text, video, audio, etc.
- search-engine 140 can comprise hardware, software, or a combination of hardware and software.
- server 130 hosts search-engine 140 .
- client 110 hosts search-engine 140 .
- search-engine 140 is a stand-alone system.
- User 112 can generally include: an individual; a group of individuals; an organization; a group of organizations; a computing system; a group of computing systems; or any other entity that can interact with computing environment 100 .
- user 112 can be a client.
- FIG. 2 presents a flow chart illustrating a process for ranking search-results in accordance with an embodiment of the present invention.
- the process begins when search-engine 140 receives a query from user 112 via client 110 (operation 202 ).
- the query can include one or more terms that user 112 desires to search for.
- Search-engine 140 searches a dataset using the one or more terms to obtain search-results (operation 204 ).
- the dataset can include: web-pages, data files, video files, audio files, image files, and any other type of searchable-content.
- search-engine 140 receives an attribute-identifier from user 112 via client 110 (operation 206 ).
- the attribute-identifier specifies an attribute that may be associated with the search-results.
- This attribute can include: a price, a rating, an image size, an image resolution, a video length, a video resolution, an audio length, an audio bit-rate, a text length, a file size, a date, a time, an expiration date, a quantity, and any other attribute that can be associated with the search-results.
- the query can include the attribute-identifier.
- the attribute-identifier is pre-determined.
- search-engine 140 may be pre-configured to rank search-results by a creation-date associated with each search-result.
- search-engine 140 calculates a combined score based on an attribute-value for the identified attribute and a relevance-score for the search-result (operation 208 ).
- the relevance-score can be any value that indicates how relevant a search-result is to a search. This value may be determined a priori, or may be determined during a search.
- search-engine 140 can calculate the relevance-score using any method for determining a web-page quality metric, or for determining the relevancy of a search-result to a query.
- search-engine 140 can use PageRank® to determine the relevance-score of a search-result.
- PageRank computes and assigns a PageRank score to each web-page it encounters on the web, wherein the PageRank score serves as a measure of the relative quality of a given web-page with respect to other web-pages.
- PageRank generally ensures that important and high-quality web-pages receive high PageRank scores, which enables a search engine to efficiently rank the search results based on their associated PageRank scores. (see U.S. Pat. No. 6,285,999, entitled “Method for Node Ranking in a Linked Database,” by inventor Lawrence Page).
- the relevance-score indicates the quality of a source that provides the search-result.
- the relevance-score may or may not indicate the quality of the search-result.
- the relevance-score may be an indicator of the quality of the search-result.
- search-engine 140 can use any formula for combining the attribute-value and the relevance-score.
- Table 1 illustrates examples of formulas for combining an attribute-value with a relevance-score in accordance with an embodiment of the present invention.
- the variable ‘R’ represents the relevance-score and the variable ‘A’ represents the attribute-value.
- the attribute-value can be a value associated with an identified attribute, or a value derived from the identified attribute or multiple identified attributes.
- the variables ‘x 1 ’ and ‘x 2 ’ represent scaling factors or weights. Note that search-engine 140 is not limited to using the formulas illustrated in Table 1.
- search-engine 140 is not limited to using formulas that include an attribute-value, a relevance-score, and scaling factors, but can use formulas that combine any number of values associated with a search-result, search-engine 140 , or a set of user-preferences.
- attribute-value and the relevance score can be scaled using different techniques as illustrated by Formula 4.
- search-engine 140 can apply weights to the relevance-score and the attribute-value. This enables search-engine 140 to adjust the relative contributions of the relevance-score and the attribute-value to the combined score.
- search-engine 140 normalizes the combined score, for example using Formula 2. (Note that normalizing the combined score can involve scaling the combined score by a reference-value). This can facilitate sorting the combined scores, which helps in ranking the search-results.
- search-engine 140 ranks the search-results based on the combined scores (operation 210 ). Search-engine 140 then presents the ranked search-results to user 112 (operation 212 ).
- FIG. 5A illustrates a web-page 500 in accordance with an embodiment of the present invention.
- Web-page 500 contains search-results obtained in response to a query relating to digital cameras. More specifically, web-page 500 includes: search-results 505 ; ranking-type 510 ; product rating 520 ; and price 530 .
- Search-results 505 contains a subset of the search-results that search-engine 140 identified in response to the query.
- Ranking-type 510 specifies an attribute and an order that user 112 desires search-engine 140 to use to rank search-results 505 .
- user 112 desires search-engine 140 to rank search-results 505 in descending order by price.
- Product rating 520 specifies a rating associated with each search-result.
- product rating 520 represents a relevance-score.
- the relevance-score is a hidden value that search-engine 140 calculates and does not present to user 112 .
- search-engine 140 presents the relevance-score to user 112 .
- product rating 520 represents a secondary attribute, which is separate from the relevance-score.
- search-engine 140 may or may not use product rating 520 in addition to the relevance-score and to price 530 to determine the rank of search-results 505 .
- search-engine 140 uses multiple attributes to rank search-results 505 .
- search-engine 140 may or may not use a relevance-score in addition to the multiple attributes to rank search-results 505 .
- Price 530 specifies the price associated with each search-result. Note that in this example, because user 112 selected descending order of price for ranking type 510 , search-engine 140 ranks search-results 505 based on descending order of price. Furthermore, note that, because search-engine 140 uses product rating 520 as the relevance-score, search-engine 140 ranks search-results with the same price, such as search-result 514 and search-result 512 , in descending order of product rating.
- FIG. 3 presents a flow chart illustrating a process for ranking subsets of search-results in accordance with an embodiment of the present invention. Note that this process typically occurs after the completion of the process described in the previous section with respect to FIG. 2 .
- the process begins when search-engine 140 divides the ranked search-results into subsets of ranked search-results (operation 302 ). Note that, when performing operation 302 , search-engine 140 maintains the relative ranking of the search-results. For example, suppose that a search-result ranks above a second search-result. After search-engine 140 performs operation 302 , the search-result will still rank above the second search-result.
- search-engine 140 re-ranks the search-results based on the attribute-value (operation 304 ). Search-engine 140 then presents the re-ranked search-results to user 112 (operation 306 ).
- search-engine 140 can use this process to decrease the probability that user 112 will see a search-result associated with an attribute-value ranked above a search-result associated with a higher attribute-value.
- search-engine 140 can use threshold-ranges to determine which subset of ranked search-results includes a given search-result. This embodiment can help prevent search-engine 140 from ranking a search-result which has a given relevance-score above a second search-result which has a significantly higher relevance-score regardless of the relationship between the attribute-values of the two search-results.
- search-engine 140 may reshuffle search-results which are associated with a subset of search-results based on a threshold-value. This embodiment can help prevent search-engine 140 from including a search-result with a given subset of search-results that are each associated with a significantly greater or lesser relevance-score or attribute-value than the search-result.
- FIG. 5B illustrates a second web-page 550 in accordance with an embodiment of the present invention.
- Web-page 550 illustrates a second exemplary page of search-results for the same query associated with web-page 500 in FIG. 5A , wherein web-page 550 is generated after search-engine 140 executes the process described with reference to FIG. 3 .
- each web-page represents a subset of search-results.
- search-results 505 represent one subset of search-results
- search-results 555 represent a second subset of search-results.
- search-result 562 has a higher price than several other search-results, such as search-result 522 , on web-page 500 .
- search-result 562 is included with search-results 555 because the low product rating associated with search-result 562 significantly decreases the combined attribute-value and relevance-score associated with search-result 562 , and thus search-engine 140 includes search-result 562 with the second subset of search-results.
- search-engine 140 does not use product rating 520 to determining ranking. In this embodiment, search-engine 140 ranks search-result 562 above search-result 514 .
- search-engine 140 does not divide the ranked search-results. In this embodiment, search-engine 140 ranks search-result 562 above search-result 514 .
- FIG. 4 presents a flow chart illustrating a second process for ranking search-results in accordance with an embodiment of the present invention.
- the process begins when search-engine 140 receives a query from user 112 via client 110 (operation 402 ).
- the query can include one or more terms.
- Search-engine 140 searches a dataset using the one or more terms to obtain search-results (operation 404 ).
- the dataset can include: web-pages; data files; video files; audio files; image files; and any other type of searchable-content.
- search-engine 140 receives an attribute-identifier from user 112 via client 110 (operation 406 ).
- the attribute-identifier specifies an attribute that may be associated with the search-results.
- This attribute can include: a price, a rating, an image size, an image resolution, a video length, a video resolution, an audio length, an audio bit-rate, a text length, a file size, a date, a time, an expiration date, a quantity, and any other attribute that can be associated with the search-results.
- the query can include the attribute-identifier.
- the attribute-identifier is pre-determined.
- search-engine 140 may be pre-configured to rank search-results by a creation-date associated with each search-result.
- Search-engine 140 determines if a given search-result has a relevance-score above a threshold-value (operation 408 ). If so, search-engine 140 includes the given search-result in a set of relevant search-results (operation 412 ). If not, search-engine 140 discards the given search-result (operation 410 ).
- search-engine 140 can determine the threshold-value by analyzing historical-data related to searches. This may involve analyzing all historical-data or historical-data related to searches which are similar to the query. Note that a similar search may be a search that: includes one or more terms in common with the query; includes the same attribute-identifier as the query; or shares any other feature in common with the query.
- user 112 can select the threshold-value.
- the threshold-value can be associated with the number of search-results for the query.
- search-engine 140 determines if more search-results exist (operation 414 ). If so, search-engine 140 returns to operation 408 . If not, search-engine 140 ranks the set of relevant search-results based on an attribute-value associated with the attribute (operation 416 ). Search-engine 140 then presents the ranked relevant search-results to user 112 (operation 418 ).
- discarding search-results that are not highly relevant to a query before ranking the remaining search-results helps prevent irrelevant search-results from appearing near the top of the rankings. For example, suppose that user 112 is searching for a digital camera to purchase and suppose that user 112 desires to see the search-results presented from lowest price to highest price. By first discarding irrelevant search-results, search-engine 140 does not present search-results that relate to digital cameras, but that are not currently of interest to user 112 , such as search-results relating to digital camera cases.
- search-engine 140 can calculate a combined score for each relevant search-result. Search-engine 140 can calculate this combined score based on a combination of the attribute-value and the relevance-score associated with the search-result. Table 1 illustrates examples of formulas for combining the attribute-value with the relevance-score in accordance with an embodiment of the present invention. Search-engine 140 can then rank the relevant search-results based on the combined scores associated with the relevant search-results.
- search-engine 140 can re-rank subsets of the relevant search-results using a process similar to that described in the previous section with respect to FIG. 3 .
- FIG. 5C illustrates a third web-page 575 in accordance with an embodiment of the present invention.
- Web-page 575 illustrates an exemplary page of search-results for the same query associated with web-page 500 in FIG. 5A , wherein web-page 575 is generated after search-engine 140 executes the process described with reference to FIG. 4 .
- ranking-type 580 specifies that search-engine 140 rank the search-results in ascending order by price. Observe that web-page 575 only includes digital cameras as part of the search-results.
- search-engine 140 can use the process illustrated in FIG. 4 to remove the search-results which are not highly relevant to the “Digital Cameras” query.
Abstract
Description
TABLE 1 |
Example Formulas |
Formula 1 | f(R, A) = x1R + x2A | |
Formula 2 | f(R, A) = (x1R + x2A)/(x1 + x2) | |
Formula 3 | f(R, A) = x1R * x2A | |
Formula 4 | f(R, A) = x1R + AX2 | |
Formula 5 | f(R, A) = RX1 + AX2 | |
Claims (19)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/803,580 US8768932B1 (en) | 2007-05-14 | 2007-05-14 | Method and apparatus for ranking search results |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/803,580 US8768932B1 (en) | 2007-05-14 | 2007-05-14 | Method and apparatus for ranking search results |
Publications (1)
Publication Number | Publication Date |
---|---|
US8768932B1 true US8768932B1 (en) | 2014-07-01 |
Family
ID=50982216
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/803,580 Active 2029-04-28 US8768932B1 (en) | 2007-05-14 | 2007-05-14 | Method and apparatus for ranking search results |
Country Status (1)
Country | Link |
---|---|
US (1) | US8768932B1 (en) |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120310954A1 (en) * | 2011-06-03 | 2012-12-06 | Ebay Inc. | Method and system to narrow generic searches using related search terms |
US20140236942A1 (en) * | 2012-02-22 | 2014-08-21 | Alibaba Group Holding Limited | Determining search result rankings based on trust level values associated with sellers |
US20160253600A1 (en) * | 2015-02-26 | 2016-09-01 | Hipmunk, Inc. | Travel search machine with shareable trip objects |
US20160335261A1 (en) * | 2015-05-11 | 2016-11-17 | Microsoft Technology Licensing, Llc | Ranking for efficient factual question answering |
WO2018039014A1 (en) * | 2016-08-26 | 2018-03-01 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
US10198762B1 (en) | 2014-12-23 | 2019-02-05 | Staples, Inc. | Ordering search results to maximize financial gain |
US10198153B1 (en) * | 2014-07-30 | 2019-02-05 | Google Llc | Ordering items for switching |
US11275807B2 (en) * | 2017-11-07 | 2022-03-15 | Google Llc | React to location changes on web pages |
US11308099B2 (en) | 2019-09-05 | 2022-04-19 | Yandex Europe Ag | Method of and system for ranking digital objects based on objective characteristic associated therewith |
US11354359B2 (en) * | 2019-12-03 | 2022-06-07 | International Business Machines Corporation | Ordering archived search results |
US11367119B2 (en) | 2020-01-24 | 2022-06-21 | Walmart Apollo, Llc | Methods and apparatuses for evaluating substitutions made during order fulfillment processes |
Citations (54)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5913208A (en) * | 1996-07-09 | 1999-06-15 | International Business Machines Corporation | Identifying duplicate documents from search results without comparing document content |
US6029195A (en) * | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6185558B1 (en) * | 1998-03-03 | 2001-02-06 | Amazon.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6385602B1 (en) * | 1998-11-03 | 2002-05-07 | E-Centives, Inc. | Presentation of search results using dynamic categorization |
US6499051B1 (en) * | 1996-08-28 | 2002-12-24 | Toyota Jidosha Kabushiki Kaisha | Information transmission method and device |
US20020198875A1 (en) * | 2001-06-20 | 2002-12-26 | Masters Graham S. | System and method for optimizing search results |
US20030105682A1 (en) * | 1998-09-18 | 2003-06-05 | Dicker Russell A. | User interface and methods for recommending items to users |
US20030145277A1 (en) * | 2002-01-31 | 2003-07-31 | Neal Michael Renn | Interactively comparing records in a database |
US20030195877A1 (en) * | 1999-12-08 | 2003-10-16 | Ford James L. | Search query processing to provide category-ranked presentation of search results |
US20040002973A1 (en) * | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Automatically ranking answers to database queries |
US20040143600A1 (en) * | 1993-06-18 | 2004-07-22 | Musgrove Timothy Allen | Content aggregation method and apparatus for on-line purchasing system |
US20040230440A1 (en) * | 2002-06-21 | 2004-11-18 | Anil Malhotra | System for automating purchase recommendations |
US20040254932A1 (en) * | 2003-06-16 | 2004-12-16 | Vineet Gupta | System and method for providing preferred country biasing of search results |
US20050086215A1 (en) * | 2002-06-14 | 2005-04-21 | Igor Perisic | System and method for harmonizing content relevancy across structured and unstructured data |
US20050091245A1 (en) * | 2001-05-24 | 2005-04-28 | Microsoft Corporation | System and process for automatically explaining probabilistic predictions |
US20050120006A1 (en) * | 2003-05-30 | 2005-06-02 | Geosign Corporation | Systems and methods for enhancing web-based searching |
US20050165753A1 (en) * | 2004-01-23 | 2005-07-28 | Harr Chen | Building and using subwebs for focused search |
US20050256833A1 (en) * | 2004-05-14 | 2005-11-17 | Microsoft Corporation | Method and system for determining similarity of objects based on heterogeneous relationships |
US20050278328A1 (en) * | 2004-06-04 | 2005-12-15 | Marston Michael J | Sorting and filtering techniques for products, namely posters and artwork |
US20060004717A1 (en) * | 2004-07-01 | 2006-01-05 | Microsoft Corporation | Dispersing search engine results by using page category information |
US20060036593A1 (en) * | 2004-08-13 | 2006-02-16 | Dean Jeffrey A | Multi-stage query processing system and method for use with tokenspace repository |
US20060195440A1 (en) * | 2005-02-25 | 2006-08-31 | Microsoft Corporation | Ranking results using multiple nested ranking |
US20060218156A1 (en) * | 2005-02-22 | 2006-09-28 | Diane Schechinger | Schechinger/Fennell System and method for filtering search results by utilizing user-selected parametric values from a self-defined drop-down list on a website" |
US20060265400A1 (en) * | 2002-05-24 | 2006-11-23 | Fain Daniel C | Method and apparatus for categorizing and presenting documents of a distributed database |
US20070174257A1 (en) * | 2006-01-18 | 2007-07-26 | Bruce Thomas Howard | Systems and methods for providing sorted search results |
US20070192306A1 (en) * | 2004-08-27 | 2007-08-16 | Yannis Papakonstantinou | Searching digital information and databases |
US20070198503A1 (en) * | 2006-02-17 | 2007-08-23 | Hogue Andrew W | Browseable fact repository |
US20070244854A1 (en) * | 2004-01-26 | 2007-10-18 | Craig Nevill-Manning | Methods and systems for output of search results |
US20070250488A1 (en) * | 2006-04-21 | 2007-10-25 | Nhn Corporation | Method and system for creating search result list |
US7299222B1 (en) * | 2003-12-30 | 2007-11-20 | Aol Llc | Enhanced search results |
US20070276803A1 (en) * | 2006-05-24 | 2007-11-29 | Microsoft Corporation | Inline search results from user-created search verticals |
US20080005118A1 (en) * | 2006-06-29 | 2008-01-03 | Microsoft Corporation | Presentation of structured search results |
US20080010264A1 (en) * | 2006-07-05 | 2008-01-10 | John Morton | Relevance ranked faceted metadata search method |
US20080033939A1 (en) * | 2006-08-04 | 2008-02-07 | Thefind, Inc. | Method for relevancy ranking of products in online shopping |
US20080033915A1 (en) * | 2006-08-03 | 2008-02-07 | Microsoft Corporation | Group-by attribute value in search results |
US20080077558A1 (en) * | 2004-03-31 | 2008-03-27 | Lawrence Stephen R | Systems and methods for generating multiple implicit search queries |
US20080091670A1 (en) * | 2006-10-11 | 2008-04-17 | Collarity, Inc. | Search phrase refinement by search term replacement |
US20080147644A1 (en) * | 2000-05-31 | 2008-06-19 | Yariv Aridor | Information search using knowledge agents |
US20080154878A1 (en) * | 2006-12-20 | 2008-06-26 | Rose Daniel E | Diversifying a set of items |
US20080215563A1 (en) * | 2007-03-02 | 2008-09-04 | Microsoft Corporation | Pseudo-Anchor Text Extraction for Vertical Search |
US20080244429A1 (en) * | 2007-03-30 | 2008-10-02 | Tyron Jerrod Stading | System and method of presenting search results |
US7437382B2 (en) * | 2004-05-14 | 2008-10-14 | Microsoft Corporation | Method and system for ranking messages of discussion threads |
US20080263026A1 (en) * | 2007-04-20 | 2008-10-23 | Amit Sasturkar | Techniques for detecting duplicate web pages |
US20080275859A1 (en) * | 2007-05-02 | 2008-11-06 | Thomson Corporation | Method and system for disambiguating informational objects |
US7505964B2 (en) * | 2003-09-12 | 2009-03-17 | Google Inc. | Methods and systems for improving a search ranking using related queries |
US7536413B1 (en) * | 2001-05-07 | 2009-05-19 | Ixreveal, Inc. | Concept-based categorization of unstructured objects |
US7542920B1 (en) * | 1999-07-30 | 2009-06-02 | Catherine Lin-Hendel | System for interactive computer-assisted on-line auctions |
US20100268598A1 (en) * | 2003-05-07 | 2010-10-21 | Cbs Interactive, Inc. | System and method for generating an alternative product recommendation |
USRE42262E1 (en) * | 1999-08-30 | 2011-03-29 | Frederick Monocacy Llc | Method and apparatus for representing and navigating search results |
US7933818B1 (en) * | 2004-07-13 | 2011-04-26 | Amazon Technologies, Inc. | Service for automatically detecting and responding to transition events that occur during browsing of an electronic catalog |
US8260786B2 (en) * | 2002-05-24 | 2012-09-04 | Yahoo! Inc. | Method and apparatus for categorizing and presenting documents of a distributed database |
US20120323953A1 (en) * | 2005-07-22 | 2012-12-20 | Ortega Ruben E | Predictive selection of item attributes likely to be useful in refining a search |
US8423536B2 (en) * | 2008-08-05 | 2013-04-16 | Yellowpages.Com Llc | Systems and methods to sort information related to entities having different locations |
US8484208B1 (en) * | 2012-02-16 | 2013-07-09 | Oracle International Corporation | Displaying results of keyword search over enterprise data |
-
2007
- 2007-05-14 US US11/803,580 patent/US8768932B1/en active Active
Patent Citations (54)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040143600A1 (en) * | 1993-06-18 | 2004-07-22 | Musgrove Timothy Allen | Content aggregation method and apparatus for on-line purchasing system |
US6029195A (en) * | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US5913208A (en) * | 1996-07-09 | 1999-06-15 | International Business Machines Corporation | Identifying duplicate documents from search results without comparing document content |
US6499051B1 (en) * | 1996-08-28 | 2002-12-24 | Toyota Jidosha Kabushiki Kaisha | Information transmission method and device |
US6185558B1 (en) * | 1998-03-03 | 2001-02-06 | Amazon.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US20030105682A1 (en) * | 1998-09-18 | 2003-06-05 | Dicker Russell A. | User interface and methods for recommending items to users |
US6385602B1 (en) * | 1998-11-03 | 2002-05-07 | E-Centives, Inc. | Presentation of search results using dynamic categorization |
US7542920B1 (en) * | 1999-07-30 | 2009-06-02 | Catherine Lin-Hendel | System for interactive computer-assisted on-line auctions |
USRE42262E1 (en) * | 1999-08-30 | 2011-03-29 | Frederick Monocacy Llc | Method and apparatus for representing and navigating search results |
US20030195877A1 (en) * | 1999-12-08 | 2003-10-16 | Ford James L. | Search query processing to provide category-ranked presentation of search results |
US20080147644A1 (en) * | 2000-05-31 | 2008-06-19 | Yariv Aridor | Information search using knowledge agents |
US7536413B1 (en) * | 2001-05-07 | 2009-05-19 | Ixreveal, Inc. | Concept-based categorization of unstructured objects |
US20050091245A1 (en) * | 2001-05-24 | 2005-04-28 | Microsoft Corporation | System and process for automatically explaining probabilistic predictions |
US20020198875A1 (en) * | 2001-06-20 | 2002-12-26 | Masters Graham S. | System and method for optimizing search results |
US20030145277A1 (en) * | 2002-01-31 | 2003-07-31 | Neal Michael Renn | Interactively comparing records in a database |
US20060265400A1 (en) * | 2002-05-24 | 2006-11-23 | Fain Daniel C | Method and apparatus for categorizing and presenting documents of a distributed database |
US8260786B2 (en) * | 2002-05-24 | 2012-09-04 | Yahoo! Inc. | Method and apparatus for categorizing and presenting documents of a distributed database |
US20050086215A1 (en) * | 2002-06-14 | 2005-04-21 | Igor Perisic | System and method for harmonizing content relevancy across structured and unstructured data |
US20040230440A1 (en) * | 2002-06-21 | 2004-11-18 | Anil Malhotra | System for automating purchase recommendations |
US20040002973A1 (en) * | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Automatically ranking answers to database queries |
US20100268598A1 (en) * | 2003-05-07 | 2010-10-21 | Cbs Interactive, Inc. | System and method for generating an alternative product recommendation |
US20050120006A1 (en) * | 2003-05-30 | 2005-06-02 | Geosign Corporation | Systems and methods for enhancing web-based searching |
US20040254932A1 (en) * | 2003-06-16 | 2004-12-16 | Vineet Gupta | System and method for providing preferred country biasing of search results |
US7505964B2 (en) * | 2003-09-12 | 2009-03-17 | Google Inc. | Methods and systems for improving a search ranking using related queries |
US7299222B1 (en) * | 2003-12-30 | 2007-11-20 | Aol Llc | Enhanced search results |
US20050165753A1 (en) * | 2004-01-23 | 2005-07-28 | Harr Chen | Building and using subwebs for focused search |
US20070244854A1 (en) * | 2004-01-26 | 2007-10-18 | Craig Nevill-Manning | Methods and systems for output of search results |
US20080077558A1 (en) * | 2004-03-31 | 2008-03-27 | Lawrence Stephen R | Systems and methods for generating multiple implicit search queries |
US7437382B2 (en) * | 2004-05-14 | 2008-10-14 | Microsoft Corporation | Method and system for ranking messages of discussion threads |
US20050256833A1 (en) * | 2004-05-14 | 2005-11-17 | Microsoft Corporation | Method and system for determining similarity of objects based on heterogeneous relationships |
US20050278328A1 (en) * | 2004-06-04 | 2005-12-15 | Marston Michael J | Sorting and filtering techniques for products, namely posters and artwork |
US20060004717A1 (en) * | 2004-07-01 | 2006-01-05 | Microsoft Corporation | Dispersing search engine results by using page category information |
US7933818B1 (en) * | 2004-07-13 | 2011-04-26 | Amazon Technologies, Inc. | Service for automatically detecting and responding to transition events that occur during browsing of an electronic catalog |
US20060036593A1 (en) * | 2004-08-13 | 2006-02-16 | Dean Jeffrey A | Multi-stage query processing system and method for use with tokenspace repository |
US20070192306A1 (en) * | 2004-08-27 | 2007-08-16 | Yannis Papakonstantinou | Searching digital information and databases |
US20060218156A1 (en) * | 2005-02-22 | 2006-09-28 | Diane Schechinger | Schechinger/Fennell System and method for filtering search results by utilizing user-selected parametric values from a self-defined drop-down list on a website" |
US20060195440A1 (en) * | 2005-02-25 | 2006-08-31 | Microsoft Corporation | Ranking results using multiple nested ranking |
US20120323953A1 (en) * | 2005-07-22 | 2012-12-20 | Ortega Ruben E | Predictive selection of item attributes likely to be useful in refining a search |
US20070174257A1 (en) * | 2006-01-18 | 2007-07-26 | Bruce Thomas Howard | Systems and methods for providing sorted search results |
US20070198503A1 (en) * | 2006-02-17 | 2007-08-23 | Hogue Andrew W | Browseable fact repository |
US20070250488A1 (en) * | 2006-04-21 | 2007-10-25 | Nhn Corporation | Method and system for creating search result list |
US20070276803A1 (en) * | 2006-05-24 | 2007-11-29 | Microsoft Corporation | Inline search results from user-created search verticals |
US20080005118A1 (en) * | 2006-06-29 | 2008-01-03 | Microsoft Corporation | Presentation of structured search results |
US20080010264A1 (en) * | 2006-07-05 | 2008-01-10 | John Morton | Relevance ranked faceted metadata search method |
US20080033915A1 (en) * | 2006-08-03 | 2008-02-07 | Microsoft Corporation | Group-by attribute value in search results |
US20080033939A1 (en) * | 2006-08-04 | 2008-02-07 | Thefind, Inc. | Method for relevancy ranking of products in online shopping |
US20080091670A1 (en) * | 2006-10-11 | 2008-04-17 | Collarity, Inc. | Search phrase refinement by search term replacement |
US20080154878A1 (en) * | 2006-12-20 | 2008-06-26 | Rose Daniel E | Diversifying a set of items |
US20080215563A1 (en) * | 2007-03-02 | 2008-09-04 | Microsoft Corporation | Pseudo-Anchor Text Extraction for Vertical Search |
US20080244429A1 (en) * | 2007-03-30 | 2008-10-02 | Tyron Jerrod Stading | System and method of presenting search results |
US20080263026A1 (en) * | 2007-04-20 | 2008-10-23 | Amit Sasturkar | Techniques for detecting duplicate web pages |
US20080275859A1 (en) * | 2007-05-02 | 2008-11-06 | Thomson Corporation | Method and system for disambiguating informational objects |
US8423536B2 (en) * | 2008-08-05 | 2013-04-16 | Yellowpages.Com Llc | Systems and methods to sort information related to entities having different locations |
US8484208B1 (en) * | 2012-02-16 | 2013-07-09 | Oracle International Corporation | Displaying results of keyword search over enterprise data |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120310954A1 (en) * | 2011-06-03 | 2012-12-06 | Ebay Inc. | Method and system to narrow generic searches using related search terms |
US10452662B2 (en) | 2012-02-22 | 2019-10-22 | Alibaba Group Holding Limited | Determining search result rankings based on trust level values associated with sellers |
US20140236942A1 (en) * | 2012-02-22 | 2014-08-21 | Alibaba Group Holding Limited | Determining search result rankings based on trust level values associated with sellers |
US9311650B2 (en) * | 2012-02-22 | 2016-04-12 | Alibaba Group Holding Limited | Determining search result rankings based on trust level values associated with sellers |
US10198153B1 (en) * | 2014-07-30 | 2019-02-05 | Google Llc | Ordering items for switching |
US10198762B1 (en) | 2014-12-23 | 2019-02-05 | Staples, Inc. | Ordering search results to maximize financial gain |
US20160253600A1 (en) * | 2015-02-26 | 2016-09-01 | Hipmunk, Inc. | Travel search machine with shareable trip objects |
US11132627B2 (en) | 2015-02-26 | 2021-09-28 | Hipmunk Inc. | Travel search machine with shareable trip objects |
US10366353B2 (en) * | 2015-02-26 | 2019-07-30 | Hipmunk, Inc. | Travel search machine with shareable trip objects |
US20160335261A1 (en) * | 2015-05-11 | 2016-11-17 | Microsoft Technology Licensing, Llc | Ranking for efficient factual question answering |
US10769156B2 (en) | 2016-08-26 | 2020-09-08 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
WO2018039014A1 (en) * | 2016-08-26 | 2018-03-01 | Microsoft Technology Licensing, Llc | Rank query results for relevance utilizing external context |
US11275807B2 (en) * | 2017-11-07 | 2022-03-15 | Google Llc | React to location changes on web pages |
US11308099B2 (en) | 2019-09-05 | 2022-04-19 | Yandex Europe Ag | Method of and system for ranking digital objects based on objective characteristic associated therewith |
US11354359B2 (en) * | 2019-12-03 | 2022-06-07 | International Business Machines Corporation | Ordering archived search results |
US11367119B2 (en) | 2020-01-24 | 2022-06-21 | Walmart Apollo, Llc | Methods and apparatuses for evaluating substitutions made during order fulfillment processes |
US11756101B2 (en) | 2020-01-24 | 2023-09-12 | Walmart Apollo, Llc | Methods and apparatuses for evaluating substitutions made during order fulfillment processes |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8768932B1 (en) | Method and apparatus for ranking search results | |
AU2010234452B2 (en) | Generating improved document classification data using historical search results | |
US8429173B1 (en) | Method, system, and computer readable medium for identifying result images based on an image query | |
US9830390B2 (en) | Related entities | |
JP5736469B2 (en) | Search keyword recommendation based on user intention | |
JP5860456B2 (en) | Determination and use of search term weighting | |
US9507804B2 (en) | Similar search queries and images | |
US8051072B2 (en) | Learning ranking functions incorporating boosted ranking in a regression framework for information retrieval and ranking | |
US9519685B1 (en) | Tag selection, clustering, and recommendation for content hosting services | |
US8909625B1 (en) | Image search | |
US8135721B2 (en) | Discovering query intent from search queries and concept networks | |
US11301528B2 (en) | Selecting content objects for recommendation based on content object collections | |
US20060173556A1 (en) | Methods and apparatus for using user gender and/or age group to improve the organization of documents retrieved in response to a search query | |
US20110145226A1 (en) | Product similarity measure | |
US8732187B1 (en) | Link-based ranking of objects that do not include explicitly defined links | |
US10007732B2 (en) | Ranking content items based on preference scores | |
US20130159291A1 (en) | Ranking search results using weighted topologies |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KACHOLIA, VARUN;GARG, ASHUTOSH;REEL/FRAME:019369/0376Effective date: 20070427 |
|
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
EP3161682A1 - Search results for native applications - Google Patents
Search results for native applicationsInfo
- Publication number
- EP3161682A1 EP3161682A1 EP15736352.4A EP15736352A EP3161682A1 EP 3161682 A1 EP3161682 A1 EP 3161682A1 EP 15736352 A EP15736352 A EP 15736352A EP 3161682 A1 EP3161682 A1 EP 3161682A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- application
- native
- page
- name
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
Definitions
- the Internet provides access to a wide variety of information.
- digital image files, video and/or audio files, as well as web page resources for particular subjects or particular news articles are accessible over the Internet.
- web page resources many of these resources are designed to facilitate the performing of particular functions, such as banking, booking hotel reservations, shopping, etc., or to provide structured information, such as on-line encyclopedias, movie databases, etc.
- search engines are available for identifying particular resources accessible over the Internet. These search engines crawl and index the various web page resources. The search engine then uses the index to determine which resources are most responsive to a search query and provides search results that link to the resources in response to the query.
- search engines do not crawl or index information from within a native application environment. Instead, metadata regarding the native application are indexed and then accessed when processing search queries.
- the present disclosure relates to app deep linking, and more specifically to systems and methods for deep link processing to automatically generate and provide concise and accurate deep link identifying string.
- the information stored in the application page index of native application pages is taken from actual application page data and the application package, and may thus provide a more comprehensive description of application content than is provided by other data that describes the native application but is not otherwise part of the native application package.
- Fig. 1 is a block diagram of an example environment in which application pages for native applications are indexed, searched, and identified by native application search results.
- Fig. 2 is a flow diagram of an example process for indexing application page data of native applications.
- Fig. 3 is a flow diagram of an example process for generating a native application search result.
- FIG. 4 is an illustration of a native application search result. Like reference numbers and designations in the various drawings indicate like elements.
- Internet search engines provide the ability to search an indexed collection of web pages that exist on the Internet.
- the typical search engine provides, in response to a query, a list of results relevant to the query, often with hyperlinks allowing a user to quickly navigate to a result of interest.
- a user may select a linked result and thereby be provided with a web page(s) containing content about a celebrity, product, business, etc.
- the links may be to a site's "home page” (e.g., a welcome and search page for a site aggregating cooking information such as recipes) or may be a "content page" that a user can access when navigating from a site's home page (e.g., a specific recipe at the cooking information site).
- links to content pages, as opposed to home pages are referred to as “deep links” (and the process for crawling, indexing, and serving these content pages is similarly referred to as "deep linking").
- a search for documents may currently be performed "within an app" or for content specific to an app (i.e., a native application). For instance, when properly configured to process a uniform resource identifier (URI), a browser may launch a native application and present to a user a specific content page within the native application.
- URI uniform resource identifier
- a typical search engine can develop a string of identifying text that assists a user in determining relevance of an individual search result. This is the text often presented to a user in bold, underlined, and often in a highlighting color, to indicate what the linked to content is about. This is similar to anchor text, although that term often is associated with text a user assigns to a link, whereas the search result text is text identified and assembled by the search engine to provide some indication as to the content of the target page.
- search engines can use a document title, phrases containing the search string, and other cues from a search result document to generate an identifying string for a search result.
- a system provides native application search results.
- a native application operates independent of a browser application on the user device.
- a native application is an application specifically designed to run on a particular user device operating system and machine firmware and not within a browser. Native applications thus differ from browsers, browser-based applications and browser-rendered resources. The latter require all, or at least some, elements or instructions downloaded from a web server each time they are instantiated or rendered.
- browser-based applications and browser-rendered resources can be processed by all web-capable mobile devices within the browser and thus are not operating system specific as are native applications.
- a native application search result is a search result that corresponds to a particular native application and that, when selected, invokes the particular native application.
- the system instantiates a virtual machine that emulates an operating system operating on a user device.
- the system instantiates a native application specific to the operation system.
- the native application generates application pages for display on a user device within the native application, and operates independent of a browser application on a user device.
- the system accesses, within the virtual machine, application pages of the native application.
- the system can access the pages by an automated process that explores various menus and selection options for each application page and each subsequent application page. Alternatively, the system can access the pages that are specified by a publisher of the native application.
- the system For each of the application pages, the system generates application page data describing content of the application page and an application page title.
- the content described by the application page data may, for example, include: text that a user device displays on the application page when the user device displays the application page, including title text; image data that defines an image of the application page as would be rendered in the native application; listing/menu data that describes various lists and menus of the application page; and other data that describes other features of the application page.
- the system also accesses the application package for the native application.
- the application package is, in some implementations, a collection of files that are used to distribute and install the native application software and middleware on a device.
- the system decompresses and interprets the application package file, identifies application icons for the native application, identifies for each application icon a text string which shows below the application icon when the application is installed.
- multiple strings exist such as based on locale (county and language); each can be indexed and associated with a corresponding luggage.
- the names defined by the text strings are referred to herein as "application display names.”
- the application icons, text strings and other data collected from the application package are also indexed as part of the application page data.
- Generating a native application search result may involve building the result title as a combined string of the "page title” and the "application display name.”
- the application icon may also be added to the title for a native application search result. Variations of order and content can also be used, such as
- the present disclosure provides a method for obtaining search results for a native application deep link search in which each result is concisely and accurately represented by an identifying string including a title (app identifier), a snippet of text (page title), and a link to the content. Additional details such as an icon for the relevant app may also be provided.
- FIG. 1 is a block diagram of an example environment 100 in which application pages for native applications are indexed and searched.
- a computer network 102 such as the Internet, connects resource publisher web sites 104, application publishers 106, user devices 108 and a search engine 110.
- a resource publisher website 104 includes one or more web resources 105 associated with a domain and hosted by one or more servers in one or more locations.
- a resource publisher website is a collection of web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements.
- HTML hypertext markup language
- Each website 104 is maintained by a content publisher, which is an entity that controls, manages and/or owns the website 104.
- a web page resource is any data that can be provided by a publisher website 104 over the network 102 and that has a resource address, e.g., a uniform resource locator (URL).
- Web resources may be HTML pages, images files, video files, audio files, and feed sources, to name just a few.
- the resources may include embedded information, e.g., meta information and hyperlinks, and/or embedded instructions, e.g., client- side scripts.
- An application publisher website 106 may also include one or more web resources 105, and also provides native applications 107.
- a native application 107 is an application specifically designed to run on a particular user device operating system and machine firmware.
- an "application page" is a particular display environment within a native application and in which is displayed content, such as text, images, and the like.
- An application page is specific to the particular native application, and the native application is specific to the particular operating system of the user device 108.
- An application page differs from a rendered web resource in that the application page is generated within and specific to the native application, while a web resource may be rendered in any browser for which the web page resource is compatible, and is independent of the operating system of the user device.
- a user device 108 is typically capable of requesting and receiving web page resources 105 and native applications 107 over the network 102.
- Example user devices 108 include personal computers, mobile communication devices, and tablet computers.
- the search engine 110 accesses a web index 112 and an application index 114.
- the web index 112 is an index of web resources 105 that has, for example, been built from crawling the publisher web sites 104.
- the application index 114 is an index of application pages for native applications 107, and is constructed using a virtual machine 120 and an indexing process that is described in more detail below. Although shown as separate indexes, the web index 112 and the application index 114 can be combined in a single index.
- the user devices 108 submit search queries to the search engine 110.
- the search engine 110 accesses the web index 112 and the application index 114 to identify content that is relevant to the query.
- the search engine 110 may, for example, identify the resources and applications in the form of web resource search results and native application search results, respectively, by use of a search result generator 116. Once generated, the search results are provided to the user device 108 from which the query was received.
- a web resource search result is data generated by the search engine 110 that identifies a web resource and provides information that satisfies a particular search query.
- a web resource search result for a resource can include a web page title, a snippet of text extracted from the resource, and a resource locator for the resource, e.g., the URL of a web page.
- a native application search result specifies a native application and is generated in response to a search of the application index 114 and the web index 112, as described in more detail below.
- the native application search result causes the native application installed on the user device to request the synchronized content. Once the native application receives the requested content, the native application displays the content in a user interface of the native application. Such a function is referred to as "deep linking" within the application search result.
- Fig. 1 is a flow diagram of an example process 200 for indexing application page data of native applications.
- the process 200 can be implemented in a data processing apparatus of one or more computers in data communication.
- the process is described as using a virtual machine for gathering some of the application page data, but the processes and devices can also be used.
- the process 200 instantiates a virtual machine 120 emulating an operating system for a user device (202).
- the virtual machine 120 may, in some
- implementations be a modified version of the operating system and includes extractors that extract data from application pages as described in more detail below.
- the process 200 instantiates, within the virtual machine 120, a native application 107 that generates application pages for display on a user device within the native application 107.
- the virtual machine 120 may, for each application in a set of native applications 107 to be processed, launch an instance of the native application 107.
- the process 200 accesses, within the virtual machine 120, application pages of the native application (206).
- the virtual machine accesses the pages by an automated process that explores various menus and selection options for each application page and each subsequent application page.
- Such an automated process can be accomplished by sequentially selecting menu options and links according to a deterministic routine that results in the selection of each application page provided by the native application 107.
- the virtual machine 120 can access the application pages that are specified by a publisher of the native application.
- an application publisher may provide a list of application page identifiers 108 in the form of uniform resource identifiers (U Is) that the publisher desires to be crawled and indexed in the application index 114, and only those application pages referenced by the URIs for the particular native application 107 are accessed and indexed.
- U Is uniform resource identifiers
- the process 200 For each application page, the process 200 generates application page data describing content of the application page (208).
- the content of the page may include, for example, text displayed on the application page; images displayed on the application page; links on the application page to other application pages or other web resources; and other content that is appropriate for indexing.
- the virtual machine 120 includes extractors that extract content data for indexing.
- the extracted content data is, for example, data that is provided to a rendering process of the native application.
- the rendering process renders content based on the data for display on a user device.
- Use of extractors allows for more accurate identification of the various content of an application page.
- the text extractor 122 extracts text data provided to a rendering process of the native application.
- the text data specifies the text that is to be rendered in the application page.
- the text may be formatted, labeled or otherwise distinguishable as title text, header text, article content, and the like.
- the virtual machine 120 receives the actual text that is to be rendered in the environment of the native application 107.
- extractors can likewise be used, such as an image extractor 124 and a list extractor 126.
- the image extractor 124 provides image data of an image that is to be rendered in the environment of the native application 107
- the list extractor 126 provides list data of a list of scrollable items that is rendered in the environment of the native application 107.
- Other data can also be extracted, such as application page link data describing links within the application page that link to another application page; web page link data describing links within the application page that link to a web resource referenced by a uniform resource locator and that, when selected, instantiate a browser application that renders the resource in a browser environment separate from the native application; etc.
- the extractors 122, 124 and 126, and other appropriate data extractors can be implemented using appropriate data handlers for a particular operating system.
- the extractors 122, 124 and 126 may be implemented using TextView objects, ImageView objects, and ListView objects, respectively.
- the virtual machine 120 processes the objects to extract the
- corresponding data e.g., by including instructions that cause the virtual machine to store for indexing the corresponding data that is provided for rendering.
- the process 200 processes the application package file (210).
- a package processor 130 such as a computer device configured to decompress and analyze the application package, can process the application package.
- the virtual machine 120 can process the application package.
- a variety of native application related data can be collected and indexed from the application package file. For example, an application icon is identified, such as the icon that is displayed when an application is installed. A text string that displays below the icon is identified, and the application display name is set to this text string. The application display name may be different than the actual application name.
- the language or locale is associated with the text string.
- the language or locale can be used to select a text string based on a language or locale associated with a query when generating a native application search result for the query.
- Other information from the application package file can be detected and stored in the index. For example, a listing of files in the application package can be generated; file sizes, version levels, and other descriptive data can also be detected.
- the process 200 indexes the application page data for the native application in an index that is searchable by the search engine (212).
- an indexer 140 indexes, for each application page U I and native application 107 identifier, the application page data describing the content for the application page.
- the indexed data are stored in the application index 114.
- a variety of appropriate indexing processes can be used to index the data.
- the application index 114 can include, for each native application 107 and URI pair, a row of data describing the application page data.
- the particular database and indexing scheme used may, for example, depend on the search engine algorithms utilized within the search engine.
- a particular native application page may have different URIs that correspond to different content.
- a stock quote application may have a first portion of a URI that is the same for all stock quotes, and a second portion of the URI, such as a query parameter, that includes a name-value pair for a specific quote or quotes to be displayed on the application page.
- each specific instance of a unique URI constitutes an entry in the application index 114.
- Fig. 3 is a flow diagram of an example process 300 for generating a native application search result, and is implemented in the search results generator 116 of the search engine 110.
- the process 300 receives data identifying an application page of a native application as being responsive to a query (302).
- the search engine 110 may provide data indicating that it determined a particular application page for a particular native application to be responsive to a query, and that a native application search result for the application page is to be generated.
- the data may reference a row or entry in the index 114 that contains the data for the native application page.
- the process 300 selects, from the index, the application name, application icon, application page title, and content of the application page (304).
- the search results generator using data from the search engine, accesses the indexed application name, application icon, application page title, and content of the application page.
- the data selected may depend on the search query, and particular data that may be specified by the search engine 110.
- the process 300 generates a native application search result with selected data (306).
- Fig. 4 is an illustration of a native application search result 400 generated by the process 300.
- the search results generator included the application icon 402 for the native application as a first image descriptor in the native application search result 400.
- Other images could also be selected, e.g., such as a thumbnail of a screen shot, for example.
- the search result includes, for example, a URI 403 of the application page.
- the URI may be visible, or may be embedded in the search result 400.
- an application display name 404 is also included in an application display name 404 as a first textual descriptor in a native application search result 400.
- the application display name may be the name, for example, that is displayed with an icon 402 when the application is installed on a user device.
- the application page name 406 of the application page name referenced by the URI 403 as a second textual descriptor in the native application search result can be concatenated or combined with the application display name 404, as shown in Fig. 4.
- the display formatting the first textual descriptor and the second textual description can be different to emphasize the different descriptor types.
- the process 300 provides the native application search result to the user device (308). Once received at the user device, the user device displays the native application search result 400 to the user.
- selection of the search result 400 causes the native application to launch and generate an instance of the application page that includes content that is relevant to the search query. For example, provided the native application Example App Title is installed on the user device, selecting the search result 400 causes the native application to launch and generate the application page that corresponds to the page title 406 and content 408.
- example native application search result 400 includes an icon 402, application display name 404, and page title 406 not all of these elements need to be included in a native application search result.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal
- a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Devices suitable for storing computer program instructions and data include all forms of non- volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM,
- EEPROM electrically erasable programmable read-only memory
- flash memory devices magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include users and servers.
- a user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device).
- Data generated at the user device e.g., a result of the user interaction
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462016645P | 2014-06-24 | 2014-06-24 | |
PCT/US2015/037111 WO2015200277A1 (en) | 2014-06-24 | 2015-06-23 | Search results for native applications |
Publications (1)
Publication Number | Publication Date |
---|---|
EP3161682A1 true EP3161682A1 (en) | 2017-05-03 |
Family
ID=53540858
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP15736352.4A Ceased EP3161682A1 (en) | 2014-06-24 | 2015-06-23 | Search results for native applications |
Country Status (6)
Country | Link |
---|---|
US (2) | US9881095B2 (en) |
EP (1) | EP3161682A1 (en) |
JP (1) | JP6363738B2 (en) |
CN (2) | CN112417243A (en) |
RU (2) | RU2710293C2 (en) |
WO (1) | WO2015200277A1 (en) |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6505123B1 (en) * | 2000-07-24 | 2003-01-07 | Weatherbank, Inc. | Interactive weather advisory system |
US10303802B2 (en) * | 2013-03-15 | 2019-05-28 | Gadget Software, Inc. | System for mobile application search |
RU2710293C2 (en) * | 2014-06-24 | 2019-12-25 | Гугл Инк. | Search results for native applications |
US10095794B2 (en) * | 2014-09-05 | 2018-10-09 | Samsung Electronics Co., Ltd. | Augmenting search results with device and application history |
US20160132596A1 (en) * | 2014-11-12 | 2016-05-12 | Quixey, Inc. | Generating Search Results Based On Software Application Installation Status |
US10296641B2 (en) * | 2014-12-23 | 2019-05-21 | Samsung Electronics Co., Ltd. | Techniques for efficient access of software application functionality in search |
US10650067B2 (en) | 2015-08-13 | 2020-05-12 | Samsung Electronics Co., Ltd. | Cloud-enabled architecture for on-demand native application crawling |
US10120954B2 (en) | 2015-12-31 | 2018-11-06 | Samsung Electronics Co., Ltd. | Transformation and presentation of on-demand native application crawling results |
WO2017120360A1 (en) * | 2016-01-05 | 2017-07-13 | Quixey, Inc. | Computer-automated generation of application deep links |
US11269961B2 (en) * | 2016-10-28 | 2022-03-08 | Microsoft Technology Licensing, Llc | Systems and methods for App query driven results |
CN107203397B (en) * | 2017-05-24 | 2021-02-05 | 广州四三九九信息科技有限公司 | Method and device for running mobile application |
CN109862096A (en) * | 2019-01-31 | 2019-06-07 | 网宿科技股份有限公司 | A kind of application configuration method, configuration management system and terminal |
CN117130981A (en) * | 2023-01-04 | 2023-11-28 | 荣耀终端有限公司 | Application content searching method and electronic equipment |
Family Cites Families (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2003042871A2 (en) * | 2001-11-14 | 2003-05-22 | Brian Mervyn Morrow | Systems and methods for indexing data in a network environment |
US20040030882A1 (en) | 2002-08-08 | 2004-02-12 | Forman George Henry | Managed application pre-launching |
US7076616B2 (en) | 2003-03-24 | 2006-07-11 | Sony Corporation | Application pre-launch to reduce user interface latency |
US7136851B2 (en) * | 2004-05-14 | 2006-11-14 | Microsoft Corporation | Method and system for indexing and searching databases |
US7730012B2 (en) | 2004-06-25 | 2010-06-01 | Apple Inc. | Methods and systems for managing data |
EP1831796A4 (en) * | 2004-11-22 | 2010-01-27 | Truveo Inc | Method and apparatus for an application crawler |
US20070011739A1 (en) | 2005-06-28 | 2007-01-11 | Shay Zamir | Method for increasing the security level of a user machine browsing web pages |
US8707451B2 (en) | 2006-03-01 | 2014-04-22 | Oracle International Corporation | Search hit URL modification for secure application integration |
JP5018536B2 (en) * | 2008-02-15 | 2012-09-05 | 日本電気株式会社 | Information service search system, patrol collection method, and information service patrol collection program |
US8086957B2 (en) | 2008-05-21 | 2011-12-27 | International Business Machines Corporation | Method and system to selectively secure the display of advertisements on web browsers |
US8909925B2 (en) * | 2008-11-17 | 2014-12-09 | Prakash Baskaran | System to secure electronic content, enforce usage policies and provide configurable functionalities |
US20100257466A1 (en) | 2009-04-01 | 2010-10-07 | Yahoo! Inc. | Method and system for generating a mini-software application corresponding to a web site |
CN102483753A (en) | 2009-05-27 | 2012-05-30 | 谷歌公司 | Computer Application Data In Search Results |
US8396857B2 (en) * | 2009-08-31 | 2013-03-12 | Accenture Global Services Limited | System to modify websites for organic search optimization |
US8458384B2 (en) | 2010-02-03 | 2013-06-04 | National Instruments Corporation | Automatically launching a measurement application in response to measurement device connection |
US9098363B2 (en) | 2010-04-07 | 2015-08-04 | Apple Inc. | Search extensibility to third party applications |
US8515979B2 (en) | 2010-06-18 | 2013-08-20 | Verizon Patent And Licensing, Inc. | Cross application execution service |
US20120124061A1 (en) | 2010-11-12 | 2012-05-17 | Microsoft Corporation | Rich Search Over and Deep Integration with Applications |
US8909697B2 (en) | 2010-11-29 | 2014-12-09 | Hughes Network Systems, Llc | Computer networking system and method with javascript execution for pre-fetching content from dynamically-generated URL and javascript injection to modify date or random number calculation |
US9858092B2 (en) | 2011-01-06 | 2018-01-02 | Mitel Networks Corporation | Contextual application launch via search query |
US9317621B2 (en) | 2011-01-06 | 2016-04-19 | Microsoft Technology Licensing, Llc | Providing deep links in association with toolbars |
CN102043656A (en) * | 2011-01-20 | 2011-05-04 | 宇龙计算机通信科技(深圳)有限公司 | Software management method and software management server |
US20120316955A1 (en) | 2011-04-06 | 2012-12-13 | Yahoo! Inc. | System and Method for Mobile Application Search |
EP2712442A1 (en) | 2011-05-09 | 2014-04-02 | Google, Inc. | Recommending applications for mobile devices based on installation histories |
US9519726B2 (en) | 2011-06-16 | 2016-12-13 | Amit Kumar | Surfacing applications based on browsing activity |
US8650139B2 (en) | 2011-07-01 | 2014-02-11 | Google Inc. | Predicting user navigation events |
US8930940B2 (en) * | 2011-08-19 | 2015-01-06 | Yongyong Xu | Online software execution platform |
KR101491878B1 (en) | 2011-08-31 | 2015-02-09 | 라인 가부시키가이샤 | System and method for providing ranking information of mobile application using information obtained from user terminal |
US9672355B2 (en) * | 2011-09-16 | 2017-06-06 | Veracode, Inc. | Automated behavioral and static analysis using an instrumented sandbox and machine learning classification for mobile security |
US9043480B2 (en) * | 2011-10-11 | 2015-05-26 | Citrix Systems, Inc. | Policy-based application management |
US20130110815A1 (en) | 2011-10-28 | 2013-05-02 | Microsoft Corporation | Generating and presenting deep links |
CA2854142A1 (en) | 2011-11-01 | 2013-05-10 | Google Inc. | Launching applications from webpages |
US8554345B2 (en) | 2011-11-10 | 2013-10-08 | Cbs Interactive, Inc. | APP rating system |
KR101295644B1 (en) | 2011-11-11 | 2013-09-16 | 한국전자통신연구원 | System and method for verifying smart phone application |
US20130124606A1 (en) | 2011-11-14 | 2013-05-16 | Boopsie, Inc. | Automatic personalization of downloadable mobile apps |
US8793235B2 (en) | 2012-01-19 | 2014-07-29 | Google Inc. | System and method for improving access to search results |
JP5712150B2 (en) * | 2012-02-22 | 2015-05-07 | 株式会社ゼンリンデータコム | Search server device, information search method, and information search program |
GB2501276A (en) | 2012-04-18 | 2013-10-23 | Ibm | Determining web page loading at a client |
US8756432B1 (en) * | 2012-05-22 | 2014-06-17 | Symantec Corporation | Systems and methods for detecting malicious digitally-signed applications |
US9510141B2 (en) | 2012-06-04 | 2016-11-29 | Apple Inc. | App recommendation using crowd-sourced localized app usage data |
US20140040231A1 (en) * | 2012-08-06 | 2014-02-06 | Hsiu-Ping Lin | Methods and systems for searching software applications |
CN102831243A (en) * | 2012-09-12 | 2012-12-19 | 北京播思软件技术有限公司 | Method for flexibly deploying and searching |
US9069735B2 (en) * | 2012-10-15 | 2015-06-30 | Sweetlabs, Inc. | Systems and methods for integrated application platforms |
CN103778156A (en) * | 2012-10-24 | 2014-05-07 | 阿里巴巴集团控股有限公司 | Method and device for searching for data and server for data search |
US8510764B1 (en) | 2012-11-02 | 2013-08-13 | Google Inc. | Method and system for deep links in application contexts |
CN102968469B (en) * | 2012-11-09 | 2016-05-18 | 小米科技有限责任公司 | A kind of application references method for building up and system, application search method and system |
US9558275B2 (en) * | 2012-12-13 | 2017-01-31 | Microsoft Technology Licensing, Llc | Action broker |
CN103020253A (en) * | 2012-12-20 | 2013-04-03 | 北京奇虎科技有限公司 | Application search method and equipment |
CN103064595A (en) * | 2012-12-24 | 2013-04-24 | 北京百度网讯科技有限公司 | Method and system for searching mobile application, and mobile terminal |
US9002821B2 (en) * | 2013-01-16 | 2015-04-07 | Google Inc. | Indexing application pages of native applications |
US20140250147A1 (en) * | 2013-03-01 | 2014-09-04 | Quixey, Inc. | Generating Search Results Containing State Links to Applications |
CN103488490A (en) * | 2013-10-08 | 2014-01-01 | 深圳市金立通信设备有限公司 | Method and device for determining application corresponding to pop-up window and terminal |
CN103713931B (en) * | 2014-01-02 | 2016-10-12 | 广州恒业软件科技有限公司 | A kind of mobile terminal desktop realization method and system of full frame panel |
US9608870B1 (en) * | 2014-02-28 | 2017-03-28 | Google Inc. | Deep link verification for native applications |
US9524347B1 (en) * | 2014-04-01 | 2016-12-20 | Google Inc. | Automatically implementing an application in response to a search query |
RU2710293C2 (en) * | 2014-06-24 | 2019-12-25 | Гугл Инк. | Search results for native applications |
-
2015
- 2015-06-23 RU RU2018128787A patent/RU2710293C2/en active
- 2015-06-23 WO PCT/US2015/037111 patent/WO2015200277A1/en active Application Filing
- 2015-06-23 EP EP15736352.4A patent/EP3161682A1/en not_active Ceased
- 2015-06-23 US US14/747,804 patent/US9881095B2/en active Active
- 2015-06-23 RU RU2016152161A patent/RU2665888C2/en active
- 2015-06-23 JP JP2016574943A patent/JP6363738B2/en active Active
- 2015-06-23 CN CN202011246129.2A patent/CN112417243A/en active Pending
- 2015-06-23 CN CN201580034086.2A patent/CN106687949B/en active Active
-
2017
- 2017-12-21 US US15/851,114 patent/US10713324B2/en active Active
Non-Patent Citations (2)
Title |
---|
None * |
See also references of WO2015200277A1 * |
Also Published As
Publication number | Publication date |
---|---|
RU2016152161A3 (en) | 2018-07-24 |
WO2015200277A1 (en) | 2015-12-30 |
US20180121449A1 (en) | 2018-05-03 |
RU2018128787A (en) | 2018-10-01 |
RU2665888C2 (en) | 2018-09-04 |
CN112417243A (en) | 2021-02-26 |
JP2017527006A (en) | 2017-09-14 |
RU2710293C2 (en) | 2019-12-25 |
US20150370812A1 (en) | 2015-12-24 |
RU2018128787A3 (en) | 2019-09-09 |
US9881095B2 (en) | 2018-01-30 |
CN106687949B (en) | 2020-11-17 |
US10713324B2 (en) | 2020-07-14 |
JP6363738B2 (en) | 2018-07-25 |
CN106687949A (en) | 2017-05-17 |
RU2016152161A (en) | 2018-07-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10713324B2 (en) | Search results for native applications | |
US9652550B2 (en) | Indexing application pages of native applications | |
US10073911B2 (en) | Deep links for native applications | |
US9547721B2 (en) | Native application search results | |
US20230106266A1 (en) | Indexing Access Limited Native Applications | |
KR102023147B1 (en) | Application partial deep link to the corresponding resource | |
US11003728B1 (en) | Native application search results | |
RU2774319C2 (en) | Deep links for native applications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE INTERNATIONAL PUBLICATION HAS BEEN MADE |
|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20161202 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAV | Request for validation of the european patent (deleted) | ||
DAX | Request for extension of the european patent (deleted) | ||
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20200123 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20211014 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
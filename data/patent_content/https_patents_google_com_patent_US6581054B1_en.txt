US6581054B1 - Dynamic query model and method - Google Patents
Dynamic query model and method Download PDFInfo
- Publication number
- US6581054B1 US6581054B1 US09/364,596 US36459699A US6581054B1 US 6581054 B1 US6581054 B1 US 6581054B1 US 36459699 A US36459699 A US 36459699A US 6581054 B1 US6581054 B1 US 6581054B1
- Authority
- US
- United States
- Prior art keywords
- query model
- user
- predefined
- predefined query
- database
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6227—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database where protection concerns the structure of data, e.g. records, types, queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
- G06F16/2425—Iterative querying; Query formulation based on the results of a preceding query
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
- G06F16/2428—Query predicate definition using graphical user interfaces, including menus and forms
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/28—Databases characterised by their database models, e.g. relational or object models
- G06F16/283—Multi-dimensional databases or data warehouses, e.g. MOLAP or ROLAP
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99934—Query formulation, input preparation, or translation
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99935—Query augmenting and refining, e.g. inexact access
Definitions
- This invention relates generally to the field of analytical data processing, and more particularly to a dynamic query model and method for performing customized database queries.
- DSS decision support systems
- EIS executive information systems
- DSS decision support system
- EIS executive information system
- OLAP on-line analytical processing
- the present invention provides a dynamic query model and method that substantially eliminates or reduces disadvantages and problems associated with previous systems and methods.
- predefined query models are provided to users for customization. This allows users to quickly and easily adapt predefined queries to their particular needs.
- a method for generating database queries includes storing a predefined query model for querying a database. An accessible portion of the predefined query model is displayed to a user upon request. User edits to the accessible portion of the predefined query model are received and used to generate a user-adapted query model. A query is then initiated based on the user-adapted query model.
- the display is a graphical view of accessible data elements defining the predefined query model.
- a graphical view of accessible data elements includes accessible tables, columns and tables, and joins between tables.
- a user-adapted query model may include database tables, database columns, and table joints absent or modified from the predefined query model.
- Technical advantages of the present invention include providing an improved business intelligence portal that allows query models to be more intelligently generated and used within an organization.
- the business intelligence portal allows default query models to be constructed and altered using a graphical view of data elements.
- specified data within a query model is automatically linked.
- queries can be easily defined and later altered by users without specialized database knowledge.
- Another technical advantage of the present invention includes providing a query model and method that allows users to easily obtain and analyze meaningful information.
- the predefined query models are provided to users for adaptation and customization.
- novice users and other information consumers can alter queries to suit their particular needs. This facilitates robust data analysis by all users and allows novice users to effectively use available information to improve operations within their organization.
- FIG. 1 is a block diagram illustrating a business intelligence portal in accordance with one embodiment of the present invention
- FIG. 2 is a flow diagram illustrating a method for initializing the business intelligence portal of FIG. 1 in accordance with one embodiment of the present invention
- FIG. 3 is a flow diagram illustrating a method for generating predefined query models in the business intelligence portal of FIG. 1 in accordance with one embodiment of the present invention
- FIG. 4 is a flow diagram illustrating a method for deploying and maintaining client applications in the business intelligence portal of FIG. 1 in accordance with one embodiment of the present invention
- FIG. 5 is a flow diagram illustrating a method for generating and executing a query model based on a predefined query model in accordance with one embodiment of the present invention
- FIG. 6 is a block diagram illustrating operation of the modular query engine of FIG. 1 in accordance with one embodiment of the present invention
- FIG. 7 is a flow diagram illustrating operation of the modular query engine of FIG. 6 in accordance with one embodiment of the present invention.
- FIG. 8 is a block diagram illustrating a multidimensional storage model in accordance with one embodiment of the present invention.
- FIG. 9 is a block diagram illustrating exemplary data for the multidimensional storage model of FIG. 8;
- FIG. 10 is a flow diagram illustrating a method for generating the multidimensional storage model of FIG. 8 in accordance with one embodiment of the present invention.
- FIG. 11 is a screen diagram illustrating a display of related views in the portfolio of FIG. 1 in accordance with one embodiment of the present invention.
- FIG. 12 is a screen diagram illustrating window tabs for navigating between related views in accordance with one embodiment of the present invention.
- FIG. 1 illustrates a business intelligence portal 10 in accordance with one embodiment of the present invention.
- the business intelligence portal 10 provides integrated data access and information sharing across an enterprise, as well as sophisticated multidimensional analysis tools.
- the analysis tools are highly automated and intuitive to allow a wide range of users to utilize stored information in making strategic decisions. In this way, the business intelligence portal 10 maximizes decision support benefits users receive from their data, while minimizing the cost of implementing and administrating the system.
- the business intelligence portal 10 implements a three-tier distributed architecture comprising a database tier 12 , a server tier 14 , and a client tier 16 connected by one or more networks 18 .
- the server and client tiers 14 and 16 are Java-based to support the Internet communication protocol (TCP/IP), multiple client and server platforms, pooled connections to a wide variety of data sources, and complete scalability of the portal 10 across an enterprise.
- TCP/IP Internet communication protocol
- the Java-based server and client tiers 14 and 16 provide an open API architecture that is highly adaptable and functional for processing structured data in databases as well as unstructured data.
- the client/server network 18 comprises a company Intranet while the server/database network 18 includes portions of public and private networks. It will be understood that the business intelligence portal 10 may be implemented using other suitable architectures, programming languages, and links.
- the database tier 12 includes one or more databases 20 .
- the databases 20 are each exposed as an alias that contains all the information necessary to connect to the database 20 , including the database login.
- the use of database aliases prevents direct user access to the native database in order to maintain the integrity in the database 20 .
- the databases 20 may each be any Java database connection (JDBC) or object database connection (ODBC) compliant database, as well as a suitable data warehouse or datamart.
- JDBC Java database connection
- ODBC object database connection
- the server tier 14 includes one or more servers 30 .
- the servers 30 each comprise a set of Java-based applications that can operate on different platforms. As described in more detail below, the servers 30 provide hierarchical security, centralized administration, fast multithreaded pooled data access, and multidimensional data analysis for the business intelligence portal 10 .
- the server 30 includes a catalog 32 , a catalog manager 34 , a security manager 36 , a query generator 38 , a database access system 40 , a cache manager 42 , a multidimensional model manager 44 , and a client administrator 46 .
- the catalog 32 stores all configurations, documents, and work products created by administrators and users of the business intelligence portal 10 . This centralizes management of documents, eliminates redundant and outdated copies residing on client systems, allows documents to be shared across an enterprise, and provides continual security for the documents.
- the catalog manager 34 manages all shared information within the server 30 . It will be understood that such configurations, documents, and work products may be otherwise suitably stored and managed within the business intelligence portal 10 .
- the catalog 32 includes one or more database aliases 50 , user profiles 52 , security groups 54 , and predefined query models 56 configured by a system administrator.
- the catalog 32 also includes one or more portfolios 58 that store related views 60 created by a system user.
- the database aliases 50 contain all information necessary to connect to the databases 20 .
- the use of the database aliases 50 prevents direct user database access to maintain data integrity in the native databases 20 and makes it possible for non-technical users to safely access corporate data without fear of corruption.
- the database aliases 50 also serve to pool connections to the physical databases 20 and thereby reduce the number of database connections required to support a large number of clients.
- the user profiles 52 each define a specific range of privileges for a user and one or more security groups 54 to which a user has access.
- the user profiles 52 are generated and maintained by a system administrator.
- the security groups 54 implement a hierarchical security model with security rights and privileges assigned to each group 54 by a system administrator.
- An administrator security group is provided to allow administrators full access to the system, including permissions to add, modify, and delete security groups 54 and user profiles 52 in the system.
- the final security rights and privileges that a user inherits are the union of his or her individual rights as defined in the user profiles 52 and the rights of each security group 54 to which he or she belongs.
- the predefined query models 56 are self-contained logical models of particular databases that are established to make query creation by less technical users easily and intuitive.
- the predefined query models 56 further abstract data from a database 20 , exposing only those portions of the database 20 that is relevant to the group or groups of users who will use the particular query model 56 .
- the predefined query models 56 include relevant tables from a database, fields within the database tables, and links between the database tables that together define a query.
- the predefined query models 56 form the basis for all queries created by users. In this way, the predefined query model 56 controls the elements in any database 20 to which any particular set of users will have access.
- the predefined query models 56 establish. mechanisms that may restrict the type of queries that can be made by any group of users. In particular, the mechanisms define the maximum computer resources, or governors, that can be used to execute the queries, and allowable joins between tables to prevent run-away or malicious queries that could impact the integrity of the business intelligence portal 10 .
- the portfolios 58 provide a file system for storing user created or obtained views 60 .
- the portfolios 58 may include, for example, views 60 of word processing documents, spread sheet documents, and web pages.
- the portfolios 58 are each a compound file capable of restoring a collection of views 60 or other related sets of data.
- the views 60 may be stored directly within the portfolio 58 or linked to each other in the portfolio 58 .
- Access to the portfolios 58 is determined by established security parameters for users and additionally by the creators of the views 60 in the portfolio 58 . In one embodiment, users never see portfolios 58 to which they do not have access privileges. In addition, the portfolios 58 may be customized to provide automatic notification to associated users when views 60 within the portfolio 58 have been updated or otherwise modified. In this way, security is made integral to the operation of the system which facilitates collaboration and information sharing within an enterprise.
- the views 60 provide data for displaying a wide variety of formats, such as, for example, tables, graphs, reports, pivots, and web pages.
- the views 60 may be either live views representing current data or snapshot views of data at a particular point in time.
- live views 60 may be scheduled to be updated automatically at regular intervals, updated when first opened, and the like.
- Snapshot views 60 may be set to overwrite prior snapshots or to create a sequence of snapshot or rollover views 60 for historical analysis.
- the views 60 and portfolios 58 can be saved privately by a user or may be distributed or shared among one or more security groups 54 to facilitate collaboration and decision making.
- the security manager 36 manages security in the business intelligence portal 10 .
- the security manager 36 includes predefined security tasks for generating and maintaining user profiles 52 and security groups 54 .
- the security manager 36 also provides a security hierarchy that allows user profiles 62 and security groups 54 to inherit privileges from parent classes. In this way, a system administrator can easily establish and maintain security for the business intelligence portal 10 .
- the query generator 38 provides graphical views of database elements to assist system administrators and power users in defining the query models 56 .
- the predefined query models 56 each define the database connection, the family of tables and columns exposed from the database, the allowable join types and combinations, metadata, execution governors, and aliases for the query.
- the predefined query models 56 can be later adapted and used by a large range of users to perform safe, secure queries.
- the database access system 40 includes functionality and software for accessing and querying the databases 20 and for returning query results to the server 30 for manipulation, analysis, and reporting by users.
- the database access system 40 includes a query scheduler 72 , an SQL generator 74 , a connection manager 76 , and a Java database connection(JDBC) 78 .
- the query scheduler 72 initiates scheduled queries.
- any view 60 including the data and calculations contained in the view 60
- snapshot views 60 can be automatically scheduled to create an historical repository of snapshot views 60 based on the same query. Thus, for example, a view 60 may be scheduled for updates at 10:00 p.m. every Monday, Wednesday, and Friday and automatically distributed to a group of users via a shared portfolio 58 .
- the SQL generator 74 receives user-adapted or unadapted query models from a user and generates a textual SQL query for execution by the connection manager 76 .
- query models which are graphically displayed and edited by users are automatically converted to executable database instructions and thereafter executed. This allows novice users and other information consumers with little or no programming knowledge to fully use and benefit from the business intelligence portal 10 .
- the SQL generator 74 includes dialog specific generators and an SQL parse tree to generate the textual SQL.
- the dialog specific generators correspond to the different types of databases 20 accessed by or used in connection with the business intelligence portal 10 .
- the dialog-specific generators may include, for example, Oracle, Sybase, DB 2 , and MS SQL generators.
- connection manager 76 receives textual SQL query requests from the SQL generator 74 and communicates with the databases 20 to perform the requested queries through the Java database connection (JDBC) 78 .
- the connection manager includes a modular query engine 80 including an intelligent dataset 82 and a library of data drivers 84 .
- the data drivers 84 each execute a predefined database operation.
- the intelligent dataset 82 selects and orders data drivers 84 from the library as necessary to perform a query request. As a result, database access methods are standardized and the dataset need not be customized for each application.
- the cache manager 42 includes a cache 90 having a plurality of pages 92 and a process thread 94 .
- the cache manager 42 receives data extracted from the databases 20 in response to query requests and feeds them into the pages 92 .
- the cache manager 42 runs asynchronously with the process thread 94 driving the cache 90 to feed data into the pages 92 . It will be understood that data may be otherwise suitably received, stored, and initially processed by the server 30 .
- the multidimensional model manager 44 generates and manipulates multidimensional storage models 100 .
- the multidimensional storage model 100 utilizes a non-sparse architecture to minimize the size of the model 100 .
- the reduced size of the model 100 improves processing times and allows efficient pivot and drill operations during data analysis.
- the model 100 uses an open architecture to allow calculations to be dynamically performed after the model has been constructed. As a result, users can create new calculations to analyze data intersections that were not anticipated during the original definition of the models 100 . This reduces time and resources needed to support pivot and drill operations.
- the client administrator 46 provides a central point from which the portal 10 manages client administration.
- the client administrator 46 provides a zero-administration architecture that automatically manages deployment of client applications to maximize user performance and minimize network traffic, while assuring the latest applications are always used by the clients.
- the client tier 16 includes a plurality of clients 110 .
- the clients 110 may be local to or remote from each other and the server 30 .
- the clients 110 provide all access, including system administration, to the server 30 .
- all client 110 functions are controlled by a robust set of permissions stored on the server 30 . Permissions are granted to both individual users and security groups of users. In this way, the robust functionality of the business intelligence portal 10 is appropriately controlled and metered out to all users across the enterprise without seeming overcomplex to less technical users.
- the client 110 includes a client API 112 and a graphical user interface (GUI) 114 .
- GUI graphical user interface
- the client 110 is designed with all components being Java pieces, or Java beans.
- the client 110 identifies its components when establishing a connection with the server 30 . This allows efficient administration of the client 110 and integration of additional functionality into the client 110 .
- the client API 112 comprises a set of Java classes that define how the client 110 communicates with the server 30 . Because the client API 112 allows any Java program to communicate with the server 30 , an enterprise may efficiently add additional, custom capabilities for its clients 110 .
- the graphical user interface 114 includes a set of administration panels 116 , a set of user panels 118 , a set of wizards 120 , a query composer 122 , a set of viewers 124 , and a property inspector 126 .
- the administrative and user panels 116 and 118 provide graphical displays for guiding administrators and users through their respective operations.
- the wizards 120 divide creation processes into one or more logical steps and guide administrations and users through the creation process. This assists novice users and other information consumers without detailed programming knowledge in performing queries and analyzing results. In this way, all users within an enterprise are able to efficiently use the business intelligence portal 10 to extract meaningful data and thereby improve their area of operation within an enterprise.
- the query composer 122 specifies where data comes from, what substantive data to display, and how it is to be stored.
- the query composer 122 provides a graphical view of predefined query models 56 to allow users to intuitively understand and alter the models 56 to suit their particular needs.
- the query composer 122 allows users to only see those data elements in a model 56 to which they have privileges.
- the query composer 122 saves user edits of a predefined query model 56 as a user-adapted query model 128 that can be uploaded to and executed by the server 30 .
- the viewer 124 creates a combination of data views for tables, graphs, reports, pivots, web pages, and the like.
- the viewer 124 allows users to easily switch from any view 60 of data to any other and to sort and filter data.
- the views 60 can also be exported to HTML for publication on a web server or for sharing in the catalog 32 .
- data views 60 may be live or snapshots.
- Views 60 or portfolios 58 of views 60 can be saved privately within an individual user's own catalog area or may be distributed and shared among one or more security groups 54 to facilitate collaboration and decision making.
- a table viewer 130 displays information as a series of columns and rows.
- a table view typically serves as a starting point for developing ideas because it provides an overall idea of how information is organized.
- users can add filters, add calculated fields, and add summary and subtotal information.
- Columns can be rearranged, hidden, and otherwise modified.
- Content can be sorted and viewed at different levels.
- a report viewer 132 displays data in a report format.
- a report view provides a robust, banded report format and facilitates automatic report generation and distribution. Users can freely arrange fields and columns in an interactive graphical design view of a report while adding calculations, subtotals, groupings, headers, footers, titles, and graphics.
- a graph viewer 134 displays graph views of data in a wide variety of 2-D and 3-D formats. These formats may include, for example, bar, pie, line, scatter, and radar graphs. While working with a graph, users can change the graph type or contents by filtering data, using a subset of the original data, and draw multidimensional data. The graph view can also be changed on the fly, by sorting the records in a different order, as well as changing the graph properties.
- a pivot viewer 136 provides pivot views displaying multidimensional, or cubed, data along multiple dimensions. This allows users to slice and dice information along disparate dimensions to gain different perspectives on the activities and performance of an enterprise.
- the pivot view supports hierarchies in the multiple dimensions which allows users to perform drill-down, drill-up and drill-through analysis. As described in more detail below, the multidimensional views are generated from the multidimensional storage model 100 .
- a browser viewer 138 provides a built-in, cross-platform web browser. This allows users to access work products and web-based Internet or Intranet environments. Reports or objects created in other views can be exported to HTML for posting to websites or display through the browser interface.
- the property inspector 126 allows users to change display properties of a particular view.
- the property inspector 126 is modeless.
- the property inspector 126 applies the changes while on the screen to allow users to experiment with different configurations and attributes before closing the property inspector 122 .
- the client 110 and server 30 of the business intelligence portal 10 add a strategic layer to an enterprise information structure and provides a single point of entry for integrated query, reporting, and analysis which are inherently extensible for a wide range of users. Because the business intelligence portal 10 may be fully integrated across an enterprise, the portal 10 facilitates routine enterprise-wide analysis delivery and sharing of information. As a result, far more people within an enterprise will be able to make regular and productive use of data that already exists for the enterprise.
- FIG. 2 is a flow diagram illustrating a method for initializing the business intelligence portal 10 in accordance with one embodiment of the present invention.
- the method begins at step 200 in which a system administrator defines the user profiles 52 .
- the user profiles 52 provide permissions for users to utilize features within the system.
- the system administrator defines security groups 54 .
- final security rights and privileges that a user inherits are the union of his or her individual rights as defined in the user profiles 52 and the rights of each security group 54 to which he or she belongs.
- the system administrator generates a database alias 50 for each of the databases 20 .
- the database aliases 50 prevent direct user access to the databases in order to maintain data integrity and to make it possible for non-technical users to safely access corporate data without fear of corruption.
- the database aliases also serve to pool connections to the physical databases 20 and thereby reduce the number of database connections required to support a large number of clients 110 .
- the system administrator generates the predefined query models 56 using the query generator 38 .
- the predefined query models 56 control the elements in a database 20 to which any particular set of users will have access.
- the predefined query models 56 restrict the types of queries that can be executed and define the maximum computer resources that can be used to execute the queries and the allowable joins between tables to prevent run-away or malicious queries.
- Step 206 leads to the end of the process by which the system administrator sets up the business intelligence portal 10 for use within an enterprise.
- permissions and queries for users have been defined in order to control access and distribution of data within the system.
- FIG. 3 is a flow diagram illustrating a method for generating the predefined query models 56 in accordance with one embodiment of the present invention.
- specified data within the model is automatically linked to the extent possible.
- database elements are graphically displayed to the system administrator to facilitate generation of the query model 56 .
- the method begins at step 220 in which the query generator 38 automatically identifies and displays to a system administrator the tables and columns of a database 20 for which a query is to be generated.
- the system administrator selects a subset of the tables and columns for a predefined query model 56 .
- the query generator 38 determines whether the database 20 has full foreign key (FK)/primary key (PK) information.
- Full foreign key/primary key information allows data in disparate tables to be automatically linked. Accordingly, if the database 20 includes full foreign key/primary key information, the Yes branch of decisional step 224 leads to step 226 in which child tables are automatically linked to parent tables in the predefined query model 56 using the foreign key/primary key information. Step 226 leads to the end of the process. At this point, the predefined query model 56 can be saved or further edits can be made by the system administrator.
- the query generator 38 determines whether full primary key information is available from the database 20 . Provision of full primary key information allows parent and child tables to be determined by a database table search. Accordingly, if full primary key information is available, the Yes branch of decisional step 228 leads to step 226 where the database table search is performed to determine parent and child tables. After the parent and child tables are determined, they are automatically linked to generate the predefined query model 56 . The predefined query model may then be saved or further edited by the system administrator.
- decisional step 230 the query generator determines whether unique index information capable of identifying parent and child tables is available from the database 20 . If such unique index information is available, the Yes branch of decisional step 230 leads to step 226 . At step 226 , the unique index information is used to search the database for parent and child tables. The query generator 38 then automatically links child and parent tables to generate the predefined query model 56 . The predefined query model may then be saved or further edited by the system administrator.
- step 232 the system administrator manually identifies and links child and parent tables to generate the predefined query model 56 .
- the predefined query models 56 are to the extent possible, automatically generated with minimal administrator interaction. It will be understood that database tables and other elements may be otherwise suitably linked.
- FIG. 4 is a flow diagram illustrating a method for deploying and maintaining client applications in accordance with one embodiment of the present invention.
- client applications are centrally deployed and maintained from the server 30 using a thin boot strap applet that is initially used to download Java classes forming the client applications to the client 110 .
- all upgrades to the client software are done automatically by the server 30 upon initiation of a new session by the client 110 .
- Part of the installation/update procedure includes downloading a manifest file listing all names and versions of all modules and resources on a client 110 .
- the method begins at step 250 in which a new connection to the server 30 is made by the client 110 .
- the boot strap agent on the client 110 transmits the user's manifest file to the server 30 .
- the server 30 compares the versions of all modules and resources listed in the manifest file to current versions of the corresponding files in the server 30 .
- the server 30 determines whether some or all of the modules or resources are outdated based on the comparison. If some or all of the modules or resources are outdated, the Yes branch of decisional step 256 leads to step 258 .
- the server 30 generates an incremental update for the client 110 .
- the incremental update includes only the modules that need to be updated.
- the server transmits the incremental update to the client 110 .
- the client 110 updates the client side applications based on the incremental update.
- a new session is then launched for the update-to-date client 110 .
- the No branch of decisional step 256 also leads to step 264 in which a new session is launched.
- the server 30 determines what, if any, modules (or Java classes) are out-of-date, missing, or obsolete and then selectively pushes the correct modules to the user's machine along with an updated manifest.
- client 110 executes quickly and is always up-to-date while administration is centrally maintained and network traffic is minimized.
- FIG. 5 is a flow diagram illustrating a method for adapting and executing a query model based on a predefined query model 56 in accordance with one embodiment of the present invention.
- predefined query models 56 are generated and maintained on the server 30 by an administrator and provided to users upon request and verification of access privileges.
- the method begins at step 280 in which the server 30 receives a request from a user for a predefined query model 56 .
- the server determines an accessible portion of the predefined query model 56 based on the user's privileges.
- the accessible portion is a portion of the query model 56 that may be viewed by the user.
- the accessible portion of the predefined query model 56 may also be the portion of the query model editable by the user. Determination of the accessible portion of the predefined query model 56 may be accomplished by determining the user's privileges to the query model and then determining the accessible portion based on the user's privileges.
- the server 30 may also determine a protected portion of the predefined query model 56 .
- the protective portion is the remaining or other suitable portion of the predefined query model 56 .
- the query composer 122 may conceal the protective portion of the predefined query model or otherwise prohibit edits to the protected portion of the predefined query model.
- the server 30 downloads the predefined query model 56 to the client 110 .
- the query composer 122 displays the accessible portion of the predefined query model 56 to the user.
- the query composer 122 displays a graphical view of accessible data elements defining the predefined query model 56 .
- the query composer 122 may conceal the protected portion of the predefined query model 56 to prevent editing and/or viewing of that portion.
- the query composer 122 receives user edits to the predefined query model 56 .
- User edits may include the selection or deselection of database tables, columns in the database tables, and joins between the database tables.
- the query composer 122 generates a user-adapted query model 128 based on user edits to the accessible portion of the predefined query model 56 .
- the user-adapted query model 128 is uploaded to the server 30 for execution.
- the SQL generator 74 automatically generates a database query based on the user-adapted query model 128 .
- the database query comprises textual SQL that can be executed by the connection manager 76 to perform the query.
- the server 30 receives the results of the query. As previously described, the query results are initially stored in the server 30 by the cache manager 42 .
- step 300 a multidimensional storage model 100 is generated based on the results.
- the multidimensional storage model 100 is used to generate pivot, drill through, and other views as requested by the user.
- step 304 in which requested single dimensional views are generated based on the query results.
- steps 302 and 304 each lead to decisional step 306 .
- the server 30 determines whether the user-adapted query model 128 will be stored for later reuse. If the user desires to save the query model 128 , the Yes branch of decisional step 306 leads to step 308 in which the query model is saved to a selected portfolio 58 of the user or a security group 58 to which the user has access. Step 308 and the No branch of decisional step 306 each lead to decisional step 310 .
- the server 30 determines whether the query results are to be stored as an historical snapshot. If a user selects to store the results as a snapshot, the Yes branch of decisional step 310 leads to step 312 in which the query results are stored to a selected portfolio 58 . Step 312 leads to the end of the process by which a predefined query model 56 is provided to a user for adaptation and customization. The predefined query model 56 is displayed and altered using a graphical view of data elements. This facilitates robust data analysis by all users and allows novice users to effectively use available information to improve operations within their organization.
- FIG. 6 is a block diagram illustrating details of the query engine 80 in accordance with one embodiment of the present invention.
- the query engine 80 includes a library of data drivers 84 and an intelligent dataset 82 operable in response to a query request to identify from the library necessary data drivers 84 to perform the request.
- the intelligent dataset 82 is further operable to determine the necessary order of the data drivers 84 to perform the request, to generate a driver chain comprising the necessary data drivers 84 in the necessary order, and to execute in order the data drivers 84 in the driver chain.
- the intelligent dataset 82 generates a driver chain 320 in response to a query request.
- the driver chain 320 includes data drivers 322 necessary to perform the requested query.
- the data drivers 322 are dynamically selected from the library of available data drivers 84 and ordered by the intelligent dataset 82 based on the query request.
- the data drivers 84 in the library are derived from a base class for which all interface methods call the next driver in the chain.
- each data driver has a chain priority for placement in a same relative position within the chain 320 .
- each means every one of at least a subset of the identified items.
- the driver chain 320 includes data drivers D 1 , D 2 , D 3 , and D 4 .
- Data driver D 1 performs a fetch database operation which returns requested records. The returned records are next sorted by data driver D 2 and indexed by data driver D 3 .
- Data driver D 4 then performs the requested search on the sorted and indexed data records.
- the modular query engine 80 employs standardized access methods to perform database queries. As a result, the portal 10 need not be customized for particular database queries and the cost to provide and maintain the business intelligence portal 10 is reduced.
- FIG. 7 is a flow diagram illustrating operation of the modular query engine 80 in accordance with one embodiment of the present invention.
- the method begins at step 340 in which a query request is received by the intelligent dataset 82 .
- the intelligent dataset 82 dynamically selects data drivers 84 from the library necessary to perform the query request.
- the intelligent dataset 82 determines the order of data drivers 84 necessary to perform the request.
- the intelligent dataset 82 dynamically constructs a driver chain comprising the necessary data drivers in the necessary order to perform the query request.
- the intelligent dataset executes the driver chain to perform the query request.
- the datasets 82 are executed in order with each calling a next driver 84 in the chain upon completion of its own execution.
- the query engine 80 and dataset 82 are application independent and can be easily modified to support new functionality by adding data drivers 84 to the library and programming the intelligent dataset 82 as to their functionality.
- FIG. 8 is a block diagram illustrating details of a multidimensional storage model 100 in accordance with one embodiment of the present invention.
- the storage model 100 utilizes a non-sparse architecture to minimize the size of the model 100 .
- the storage model 100 uses an open architecture to allow calculations to be dynamically performed after the model 100 is constructed.
- the multidimensional storage model 100 comprises a slot 360 for each dimension and a slot 362 for a calculated dimension.
- the dimensional slots 360 contain entries and associated data values extracted from a database while the calculated dimension slots 362 contain data calculated based on the extracted data.
- each dimension slot 360 includes an entry storage 370 and a dimension storage 372 .
- the entry storage 370 contains a set of non-sparse entries 374 for the corresponding dimension. Preferably, only non-sparse entries are included.
- the entries 374 represent combinatric dimensional values and each identify an associated data value 376 .
- each entry 374 includes a pointer to the associated data value 376 .
- the data values 376 can be stored along with the entries 374 in the entry storage 370 . Use of the pointers and separate storage of the data value 376 , however, improves efficiency and processing speed of the multidimensional storage model 100 .
- the dimension storage 372 includes the data values 376 associated with entries 374 in the entry storage 370 .
- the data values 376 represent unique dimensional values for each dimension.
- a set of interdimensional links 380 is provided for each non-sparse entry 374 .
- Each interdimensional link identifies an intersection between non-sparse entries 374 in different dimensional slots 360 .
- the set of interdimensional links 380 includes one or more interdimensional links.
- the interdimensional links 380 are bi-directional to allow efficient traversal between the dimensional slots 360 in either direction from an entry point.
- the interdimensional links 380 collectively identify all intersections between non-sparse entries 374 in the dimensional slots 360 . Accordingly, all intersections, including non stored empty intersections, can be determined from the non-sparse entries 374 and traversal of the interdimensional links 380 . In particular, a null intersection between database entries in a first and a second dimension is determined by the lack of the database entries in the model or the lack of interdimensional links 380 connecting the entry 374 in the first dimension to the entry in the second dimension.
- Non-sparse intersections between entries 374 in a first and second dimension are determined by traversing the interdimensional links 380 from the specified entry in the first dimension to the specified entry in the second dimension and then obtaining the data value 376 associated with the entry 374 in the second dimension.
- Data and information obtained by traversal of the interdimensional storage model 100 is output for further processing as described in more detail below.
- the calculated dimension 362 includes a set of calculated values 382 .
- the calculated values 382 are values derived from predefined calculations requested by a user contemporaneously with the multidimensional storage model 100 .
- the multidimensional storage model 100 provides an open architecture to allow calculations after its creation, contemporaneous calculations requested by the user with the model are precalculated and stored to minimize processing after creation of the model 100 and to improve the speed of multidimensional analysis.
- FIG. 9 is a block diagram illustrating exemplary data 400 and an exemplary multidimensional storage model 402 for the exemplary data 400 .
- the exemplary data 400 includes dimensions C 1 and C 2 and calculated dimension C 3 .
- Dimension C 1 includes unique entry values A, B, and C while dimension C 2 includes unique entry values D, E, F, G, and H.
- the calculated dimension C 3 includes calculated data values 1 , 2 , 3 , 4 , 5 , and 6 corresponding to different predefined calculations.
- the exemplary storage model 402 includes dimensional slots 404 for dimensions C 1 and C 2 and calculated dimensional slot 406 for calculated dimension C 3 .
- the dimensional storage 410 includes unique dimensional values A, B, and C.
- the entry storage 412 includes entries with which the data values are associated and pointers to the data values.
- the C 2 dimensional slot 404 includes unique data values D, E, F, G, and H in dimensional storage 414 .
- Entry storage 416 includes entries associated with the data values and pointers to the data values.
- Interdimensional links 420 identify intersections between entries, and thus data, in the C 1 and C 2 dimensions.
- the calculated dimension 406 includes calculated data values 1 , 2 , 3 , 4 , 5 , and 6 associated with predefined intersections of data in the C 1 and C 2 dimensions.
- entry values A and D in the C 1 and C 2 dimensions intersect in that they are connected by interdimensional links 420 . It can be further determined that entry values C and D do no intersect in that they are not connected by interdimensional links 420 . Entries are connected by interdimensional links if any one or a series of interdimensional links connect the entries.
- FIG. 10 is a flow diagram illustrating a method for generating and using the multidimensional storage model 100 in accordance with one embodiment of the present invention.
- the method begins at step 440 in which the multidimensional storage model 100 is generated by the multidimensional model manager 44 in response to a query request and is based on results of the query request.
- the query request specifies the dimensions and data dimensions for the multidimensional storage model 100 .
- the multidimensional model manager 44 generates the multidimensional storage model 100 by first fetching data records from the source. For each data record, the dimensional values and data values are then fetched. Thereafter, for each dimensional value of a data record the multidimensional model manager 44 determines if the dimensional value is present in entry storage 370 , in which case it may be used. If the dimensional value is not present in the entry storage 370 , an entry 374 is created for the dimensional value in entry storage 370 and the corresponding data value 376 stored in dimension storage 372 . In either case, the dimensions are next traversed from left to right to create interdimensional links 380 for the entries 374 in entry storage 370 . Existing links are reused while links that are missing are created. In addition, for the right-most dimension, data values fetched for the record are added by the multidimensional model manager 44 . It will be understood that the multidimensional storage model 100 may be otherwise suitably generated.
- step 440 proceeds to step 442 .
- the multidimensional model manager 44 receives a view request for a subset of the specified dimensions and/or data dimensions.
- step 444 the multidimensional model manager 44 determines traversals necessary to generate the view from the storage model 100 and a starting point for each traversal. The traversals are defined by the specified dimensions and the starting point on entry determined based on how the model 100 is organized.
- the multidimensional model manager 44 retrieves a first and a next record from the multidimensional storage model 100 using a bottom-up, right-to-left recursive movement.
- the multidimensional model manager 44 positions a first dimension selected for display to the first entry storage value.
- all parent entries which are those to the left of the first entry, are positioned to their first entry storage value.
- Child entries which are those to the right of the selected dimension, are also positioned to their first entry storage value.
- the multidimensional model manager 44 then retrieves values for dimensional entries at these positions.
- the multidimensional manager 44 attempts to move the right-most child in the view.
- the multidimensional model manager 44 attempts to move the parent of that child, which is the entry immediately to the left of the child. If the parent is movable, it is repositioned and the data values fetched at their current positions in the multidimensional storage model 100 . If the parent cannot be moved, an attempt is made to move the parent of that parent, which is the entry immediately to the left of the first parent, and the process repeated until no parents remain. At this point, the end of the process is reached. It will be understood that the traversals and starting points within the multidimensional storage model 100 may be otherwise suitably determined.
- the multidimensional model manager 44 traverses the multidimensional storage model 100 from the entry point across connecting multidimensional links 380 to determine the existence and/or value at a specified intersection.
- the multidimensional storage model 100 determines any value at the specified intersection.
- the multidimensional model manager 44 determines whether additional traversals exist for the model 100 . If additional traversals exist, the Yes branch of decisional step 450 returns to step 446 and the remaining traversals are performed and intersectional values calculated until all traversals have been completed. The No branch of decisional step 450 then leads to step 452 .
- step 452 data and information output from the multidimensional storage model 100 is summarized and sorted. It will be understood that the multidimensional storage model 100 may be otherwise configured to presort and summarize data. However, by separating the traversal operation from the summarizing and sorting operations, processing efficiency is improved.
- step 454 information output from the multidimensional storage model 100 is graphically displayed to the user in a requested view by the viewers 124 on the client 110 .
- decisional step 456 if additional views are requested, the Yes branch returns to step 442 in which the view request and specified dimensions are received and the process repeated until all requested views have been completed and displayed to the user.
- the No branch of decisional step 456 leads to the end of the process.
- the business intelligence portal 10 provides a multidimensional storage model 100 of reduced size and improved processing speeds that support efficient pivot and drill operations during data analysis.
- a user can create new calculations to analyze data intersections that were not anticipated during the original definition of the model.
- the additional views may include pivot views and data drilling for high and low level analysis.
- FIG. 11 is a screen diagram illustrating a display of related window 480 in accordance with one embodiment of the present invention.
- the display window 480 includes a menu bar 486 with a variety of pull down menus 488 disposed along a top edge of the display window 480 .
- a tool bar 490 is disposed immediately below the menu bar 486 .
- the display window 480 further includes a catalog window 492 and a portfolio window 494 adjacent the catalog window 492 .
- the catalog window 492 displays a file hierarchy within the catalog 32 .
- the portfolio window 494 displays the views linked by the action portfolio.
- each of the views is separately displayed in a discrete view window 496 .
- Storage of the views in discrete files linked by the portfolio and display of the related views within the portfolio window 494 allows related documents to be easily organized together and efficiently displayed to a user.
- the portfolio window 494 provides a common window with a single data interface (SDI).
- SDI single data interface
- MDI multiple data interface
- FIG. 12 is a screen diagram illustrating a display window 500 including view buttons for navigating between related views in a portfolio in accordance with one embodiment of the present invention.
- the display window 500 includes a menu bar 502 with a variety of pull down menus 504 disposed along a top edge of the display window 500 .
- a tool bar 506 is disposed immediately below the menu bar 502 .
- the display window 500 includes a catalog window 508 and a portfolio window 510 as previously described in connection with catalog window 492 and portfolio window 494 .
- view windows 512 are maximized with the portfolio window 510 to provide optimized viewing.
- view buttons 514 are provided in response to maximization of a window 512 and displayed as tabs along a top edge of the portfolio window 510 .
- the view buttons 514 are each operable to display an associated window 512 as the active window in response to activation. This allows users to quickly and easily navigate between the windows. As a result, users need to constantly move, close, open, and resize windows to view related data stored in disparate files.
- the view buttons may be otherwise displayed or generated in response to other suitable events. For example, the view buttons may be generated any time a first window becomes at least substantially hidden from display by an overlying window.
- a view button 514 may be generated for the window to be covered.
- the view buttons 514 may be positioned independently of a corresponding window. Thus, they may be displayed adjacent to or remote from a corresponding window.
Abstract
Description
Claims (48)
Priority Applications (13)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/364,596 US6581054B1 (en) | 1999-07-30 | 1999-07-30 | Dynamic query model and method |
AU65016/00A AU768084B2 (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
CA002380040A CA2380040A1 (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
DE60036303T DE60036303T2 (en) | 1999-07-30 | 2000-07-28 | METHOD AND MODEL FOR DYNAMIC REQUEST |
CN00812609A CN1399746A (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
AT00952290T ATE372556T1 (en) | 1999-07-30 | 2000-07-28 | METHOD AND MODEL FOR DYNAMIC INQUIRIES |
EP00952290A EP1228448B1 (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
BR0012826-0A BR0012826A (en) | 1999-07-30 | 2000-07-28 | Dynamic Query Template and Method |
JP2001514705A JP2003519418A (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
IL14783300A IL147833A0 (en) | 1999-07-30 | 2000-07-28 | Dinamic query model and method |
KR1020027001295A KR20020039329A (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
PCT/US2000/020692 WO2001009768A2 (en) | 1999-07-30 | 2000-07-28 | Dynamic query model and method |
ZA200200533A ZA200200533B (en) | 1999-07-30 | 2002-01-22 | Dynamic query model and method. Dynamic query model and method. |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/364,596 US6581054B1 (en) | 1999-07-30 | 1999-07-30 | Dynamic query model and method |
Publications (1)
Publication Number | Publication Date |
---|---|
US6581054B1 true US6581054B1 (en) | 2003-06-17 |
Family
ID=23435231
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/364,596 Expired - Lifetime US6581054B1 (en) | 1999-07-30 | 1999-07-30 | Dynamic query model and method |
Country Status (13)
Country | Link |
---|---|
US (1) | US6581054B1 (en) |
EP (1) | EP1228448B1 (en) |
JP (1) | JP2003519418A (en) |
KR (1) | KR20020039329A (en) |
CN (1) | CN1399746A (en) |
AT (1) | ATE372556T1 (en) |
AU (1) | AU768084B2 (en) |
BR (1) | BR0012826A (en) |
CA (1) | CA2380040A1 (en) |
DE (1) | DE60036303T2 (en) |
IL (1) | IL147833A0 (en) |
WO (1) | WO2001009768A2 (en) |
ZA (1) | ZA200200533B (en) |
Cited By (110)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010047387A1 (en) * | 2000-03-27 | 2001-11-29 | Exoplex, Inc. | Systems and methods for providing distributed cross-enterprise portals |
US20020016924A1 (en) * | 2000-04-27 | 2002-02-07 | Arun Shah | Database security |
US20030009448A1 (en) * | 2001-06-14 | 2003-01-09 | Covington Robert C. | Method and apparatus for providing user-specific response |
US20030018634A1 (en) * | 2001-07-16 | 2003-01-23 | Sanjatha Shringeri | Value-chained queries in analytic applications |
US20030033289A1 (en) * | 2001-05-24 | 2003-02-13 | Brinker Brian L. | Method and system for systematically diagnosing data problems in a database |
US20030105974A1 (en) * | 2001-10-24 | 2003-06-05 | Philip B. Griffin | System and method for rule-based entitlements |
US20030120638A1 (en) * | 2001-12-24 | 2003-06-26 | Joong Ki Park | Method and apparatus for caching multiple Java-database connectivity |
US20030167274A1 (en) * | 2002-02-26 | 2003-09-04 | International Business Machines Corporation | Modification of a data repository based on an abstract data representation |
US20030200221A1 (en) * | 1999-08-04 | 2003-10-23 | Reuven Bakalash | Stand-alone cartridge-style data aggregation server |
US20030212667A1 (en) * | 2002-05-10 | 2003-11-13 | International Business Machines Corporation | Systems, methods, and computer program products to browse database query information |
US20030217332A1 (en) * | 2001-04-16 | 2003-11-20 | Greg Smith | System and method for web-based personalization and ecommerce management |
US20030229652A1 (en) * | 2000-02-28 | 2003-12-11 | Reuven Bakalash | Enterprise-wide data-warehouse with integrated data aggregation engine |
US6704740B1 (en) * | 2000-08-10 | 2004-03-09 | Ford Motor Company | Method for analyzing product performance data |
US20040122646A1 (en) * | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | System and method for automatically building an OLAP model in a relational database |
US20040139061A1 (en) * | 2003-01-13 | 2004-07-15 | International Business Machines Corporation | Method, system, and program for specifying multidimensional calculations for a relational OLAP engine |
US20040162906A1 (en) * | 2003-02-14 | 2004-08-19 | Griffin Philip B. | System and method for hierarchical role-based entitlements |
US20040167868A1 (en) * | 2003-02-20 | 2004-08-26 | Bea Systems, Inc. | System and method for a virtual content repository |
US20040230679A1 (en) * | 2003-02-28 | 2004-11-18 | Bales Christopher E. | Systems and methods for portal and web server administration |
US20040230947A1 (en) * | 2003-02-28 | 2004-11-18 | Bales Christopher E. | Systems and methods for personalizing a portal |
US20050015361A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Model content provider with reusable components for supporting a plurality of GUI API's |
US20050015364A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Query model tool and method for visually grouping and ungrouping predicates |
US20050015368A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Query modelling tool having a dynamically adaptive interface |
US20050015363A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Method and structure for representing complex query elements in a modelling tool |
US20050060326A1 (en) * | 1999-08-04 | 2005-03-17 | Reuven Bakalash | Stand-alone cartridge-style data aggregation server and method of and system for managing multi-dimensional databases using the same |
US20050071341A1 (en) * | 2003-09-26 | 2005-03-31 | Microsoft Corporation | Method for maintaining information about multiple instances of an activity |
US20050081062A1 (en) * | 2003-10-10 | 2005-04-14 | Bea Systems, Inc. | Distributed enterprise security system |
US20050120051A1 (en) * | 2003-12-01 | 2005-06-02 | Gerd Danner | Operational reporting architecture |
US20050216451A1 (en) * | 2004-02-19 | 2005-09-29 | Urs Enzler | Generation of database queries from predefined query strings |
US20050257245A1 (en) * | 2003-10-10 | 2005-11-17 | Bea Systems, Inc. | Distributed security system with dynamic roles |
US20050256906A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | Interface for portal and webserver administration-efficient updates |
US20050257154A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | Graphical association of elements for portal and webserver administration |
US20050256899A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | System and method for representing hierarchical data structures |
US20050257172A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | Interface for filtering for portal and webserver administration |
US20050262048A1 (en) * | 2004-05-05 | 2005-11-24 | International Business Machines Corporation | Dynamic database access via standard query language and abstraction technology |
US20050278290A1 (en) * | 2004-06-14 | 2005-12-15 | International Business Machines Corporation | Systems, methods, and computer program products that automatically discover metadata objects and generate multidimensional models |
US20060004731A1 (en) * | 2000-05-24 | 2006-01-05 | Seibel John C | Text mining system for web-based business intelligence |
US20060074934A1 (en) * | 2004-09-30 | 2006-04-06 | International Business Machines Corporation | Utilization of display profiles with abstract queries |
US7043531B1 (en) | 2000-10-04 | 2006-05-09 | Inetprofit, Inc. | Web-based customer lead generator system with pre-emptive profiling |
US20060116999A1 (en) * | 2004-11-30 | 2006-06-01 | International Business Machines Corporation | Sequential stepwise query condition building |
US20060123026A1 (en) * | 2004-11-18 | 2006-06-08 | Bea Systems, Inc. | Client server conversion for representing hierarchical data structures |
US7080066B1 (en) | 2001-08-09 | 2006-07-18 | Ncr Corporation | Systems and methods for refining a decision-making process via executable sequences |
US20060161522A1 (en) * | 2005-01-14 | 2006-07-20 | International Business Machines Corporation | Context insensitive model entity searching |
US20060161556A1 (en) * | 2005-01-14 | 2006-07-20 | International Business Machines Corporation | Abstract record timeline rendering/display |
US20060161521A1 (en) * | 2005-01-14 | 2006-07-20 | International Business Machines Corporation | Abstract records |
US7082427B1 (en) | 2000-05-24 | 2006-07-25 | Reachforce, Inc. | Text indexing system to index, query the archive database document by keyword data representing the content of the documents and by contact data associated with the participant who generated the document |
US7096220B1 (en) | 2000-05-24 | 2006-08-22 | Reachforce, Inc. | Web-based customer prospects harvester system |
US20060212418A1 (en) * | 2005-03-17 | 2006-09-21 | International Business Machines Corporation | Sequence support operators for an abstract database |
US7120629B1 (en) | 2000-05-24 | 2006-10-10 | Reachforce, Inc. | Prospects harvester system for providing contact data about customers of product or service offered by business enterprise extracting text documents selected from newsgroups, discussion forums, mailing lists, querying such data to provide customers who confirm to business profile data |
US7174342B1 (en) * | 2001-08-09 | 2007-02-06 | Ncr Corp. | Systems and methods for defining executable sequences to process information from a data collection |
US20070061291A1 (en) * | 2005-09-13 | 2007-03-15 | Cognos Incorporated | System and method of providing relational set operations for OLAP data sources |
US20070150562A1 (en) * | 2001-10-12 | 2007-06-28 | Stull Edward L | System and method for data quality management and control of heterogeneous data sources |
US20070157297A1 (en) * | 2001-06-11 | 2007-07-05 | Bea Systems, Inc. | System and method for server security and entitlement processing |
US20070192304A1 (en) * | 2001-11-15 | 2007-08-16 | Iyer Arjun C | Method and System for an Operation Capable of Updating and Inserting Information in a Database |
US20070214271A1 (en) * | 2002-05-01 | 2007-09-13 | Bea Systems, Inc. | Enterprise application platform |
US7330850B1 (en) | 2000-10-04 | 2008-02-12 | Reachforce, Inc. | Text mining system for web-based business intelligence applied to web site server logs |
US20080077982A1 (en) * | 2006-09-22 | 2008-03-27 | Bea Systems, Inc. | Credential vault encryption |
US20080082493A1 (en) * | 2006-09-29 | 2008-04-03 | Business Objects, S.A. | Apparatus and method for receiving a report |
US20080082494A1 (en) * | 2006-09-29 | 2008-04-03 | Business Objects, S.A. | Apparatus and method for generating queries and reports |
US20080082495A1 (en) * | 2006-09-29 | 2008-04-03 | Business Objects, S.A. | Apparatus and method for searching reports |
US20080099831A1 (en) * | 2006-10-31 | 2008-05-01 | Oki Electric Industry Co., Ltd. | Semiconductor memory device and method for the same |
US20080155682A1 (en) * | 2006-12-20 | 2008-06-26 | International Business Machines Corporation | Method of handling user groups in desktop and web based applications in a heterogeneous authentication environment |
US20080168042A1 (en) * | 2007-01-09 | 2008-07-10 | Dettinger Richard D | Generating summaries for query results based on field definitions |
US20080301108A1 (en) * | 2005-11-10 | 2008-12-04 | Dettinger Richard D | Dynamic discovery of abstract rule set required inputs |
US20090006352A1 (en) * | 2005-09-14 | 2009-01-01 | Dettinger Richard D | Composing abstract queries for delegated user roles |
US20090019022A1 (en) * | 2007-07-15 | 2009-01-15 | Dawning Technologies, Inc. | Rules-based data mining |
US7480663B2 (en) | 2004-06-22 | 2009-01-20 | International Business Machines Corporation | Model based optimization with focus regions |
US7483904B2 (en) | 2003-02-20 | 2009-01-27 | Bea Systems, Inc. | Virtual repository content model |
US20090043788A1 (en) * | 2007-08-06 | 2009-02-12 | Panorama Software Inc. | Proactive business intelligence |
US20090055438A1 (en) * | 2005-11-10 | 2009-02-26 | Dettinger Richard D | Strict validation of inference rule based on abstraction environment |
US20090063490A1 (en) * | 2007-08-27 | 2009-03-05 | Karl Fuerst | Authorization controlled searching |
US7653930B2 (en) | 2003-02-14 | 2010-01-26 | Bea Systems, Inc. | Method for role and resource policy management optimization |
US7672924B1 (en) | 2001-08-09 | 2010-03-02 | Teradata Us, Inc. | Systems and methods for generating information from a data collection to support decision-making |
US7725560B2 (en) | 2002-05-01 | 2010-05-25 | Bea Systems Inc. | Web service-enabled portlet wizard |
US7752205B2 (en) | 2005-09-26 | 2010-07-06 | Bea Systems, Inc. | Method and system for interacting with a virtual content repository |
US20100185678A1 (en) * | 2004-07-22 | 2010-07-22 | International Business Machines Corporation | Query conditions-based security |
US7774601B2 (en) | 2004-04-06 | 2010-08-10 | Bea Systems, Inc. | Method for delegated administration |
US20100211962A1 (en) * | 2009-02-18 | 2010-08-19 | Microsoft Corporation | Input/output broker model |
US7818344B2 (en) | 2005-09-26 | 2010-10-19 | Bea Systems, Inc. | System and method for providing nested types for content management |
US7840614B2 (en) | 2003-02-20 | 2010-11-23 | Bea Systems, Inc. | Virtual content repository application program interface |
US20100312884A1 (en) * | 2009-05-26 | 2010-12-09 | Sagnik Nandy | System and method for aggregating analytics data |
US20100318527A1 (en) * | 2009-05-26 | 2010-12-16 | Sagnik Nandy | Dynamically generating aggregate tables |
US7895191B2 (en) | 2003-04-09 | 2011-02-22 | International Business Machines Corporation | Improving performance of database queries |
US20110055250A1 (en) * | 2009-09-02 | 2011-03-03 | Sagnik Nandy | Method and system for generating and sharing dataset segmentation schemes |
US20110055214A1 (en) * | 2009-09-02 | 2011-03-03 | Lik Mui | Method and System for Pivoting a Multidimensional Dataset |
US20110072411A1 (en) * | 2009-09-22 | 2011-03-24 | International Business Machines Corporation | User customizable queries to populate model diagrams |
US7917537B2 (en) | 2005-09-26 | 2011-03-29 | Oracle International Corporation | System and method for providing link property types for content management |
US20110119100A1 (en) * | 2009-10-20 | 2011-05-19 | Jan Matthias Ruhl | Method and System for Displaying Anomalies in Time Series Data |
US20110119226A1 (en) * | 2009-10-20 | 2011-05-19 | Jan Matthias Ruhl | Method and System for Detecting Anomalies in Web Analytics Data |
US7953734B2 (en) | 2005-09-26 | 2011-05-31 | Oracle International Corporation | System and method for providing SPI extensions for content management system |
US20110264665A1 (en) * | 2010-04-26 | 2011-10-27 | Microsoft Corporation | Information retrieval system with customization |
US8099779B2 (en) | 2003-02-20 | 2012-01-17 | Oracle International Corporation | Federated management of content repositories |
US8140557B2 (en) | 2007-05-15 | 2012-03-20 | International Business Machines Corporation | Ontological translation of abstract rules |
US20120110002A1 (en) * | 2010-11-02 | 2012-05-03 | Microsoft Corporation | Data Rendering Optimization |
US8180789B1 (en) * | 2005-12-05 | 2012-05-15 | Teradata Us, Inc. | Techniques for query generation, population, and management |
US8180787B2 (en) | 2002-02-26 | 2012-05-15 | International Business Machines Corporation | Application portability and extensibility through database schema and query abstraction |
US8463852B2 (en) | 2006-10-06 | 2013-06-11 | Oracle International Corporation | Groupware portlets for integrating a portal with groupware systems |
US20130159831A1 (en) * | 2011-12-19 | 2013-06-20 | Tobias Weller | Converting reports between disparate report formats |
US20140046975A1 (en) * | 2012-08-10 | 2014-02-13 | Arris Enterprises, Inc. | Aggregate data streams in relational database systems |
US20140081994A1 (en) * | 2012-08-10 | 2014-03-20 | The Trustees Of Columbia University In The City Of New York | Identifying Content for Planned Events Across Social Media Sites |
US8831966B2 (en) | 2003-02-14 | 2014-09-09 | Oracle International Corporation | Method for delegated administration |
US20160004754A1 (en) * | 2014-07-01 | 2016-01-07 | Verizon Patent And Licensing Inc. | Generic API |
US20160140241A1 (en) * | 2014-11-13 | 2016-05-19 | Christoph Weyerhaeuser | Decoupling filter injection and evalulation by forced pushdown of filter attributes in calculation models |
US9785987B2 (en) | 2010-04-22 | 2017-10-10 | Microsoft Technology Licensing, Llc | User interface for information presentation system |
US9811513B2 (en) | 2003-12-09 | 2017-11-07 | International Business Machines Corporation | Annotation structure type determination |
US20180253677A1 (en) * | 2017-03-01 | 2018-09-06 | Gregory James Foster | Method for Performing Dynamic Data Analytics |
US10331899B2 (en) | 2015-10-24 | 2019-06-25 | Oracle International Corporation | Display of dynamic contextual pivot grid analytics |
US20200051127A1 (en) * | 2015-03-06 | 2020-02-13 | Amazon Technologies, Inc. | Enhanced permissions management |
US10585892B2 (en) | 2014-07-10 | 2020-03-10 | Oracle International Corporation | Hierarchical dimension analysis in multi-dimensional pivot grids |
US10606855B2 (en) | 2014-07-10 | 2020-03-31 | Oracle International Corporation | Embedding analytics within transaction search |
US10628504B2 (en) | 2010-07-30 | 2020-04-21 | Microsoft Technology Licensing, Llc | System of providing suggestions based on accessible and contextual information |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3578266B2 (en) * | 2000-01-06 | 2004-10-20 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Application launch method, software product for application launch |
AUPR894801A0 (en) * | 2001-11-20 | 2001-12-13 | Unisearch Limited | A system and method for searching data sources |
KR100514139B1 (en) * | 2002-11-30 | 2005-09-08 | 삼성에스디에스 주식회사 | Querying method of applying security function to ODBC and apparatus thereof |
US7181450B2 (en) | 2002-12-18 | 2007-02-20 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20130138683A1 (en) * | 2011-11-24 | 2013-05-30 | Yakov Faitelson | Systems and methods of automatic generation and execution of database queries |
CN105912603B (en) * | 2016-04-06 | 2020-05-29 | 百度在线网络技术（北京）有限公司 | Service query method and device for network space |
CN109284435B (en) * | 2018-03-28 | 2020-05-26 | 北京航空航天大学 | Internet-oriented user interaction trace capturing, storing and retrieving system and method |
Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP0450825A2 (en) | 1990-04-05 | 1991-10-09 | Wesley C. Sampson | Method and apparatus for the classification of data |
WO1992008199A1 (en) | 1990-10-31 | 1992-05-14 | Go Corporation | Computer documents as compound documents in a notebook metaphor |
EP0490465A2 (en) | 1990-12-07 | 1992-06-17 | Digital Equipment Corporation | Methods and apparatus for accessing non-relational data files using relational queries |
US5359724A (en) | 1992-03-30 | 1994-10-25 | Arbor Software Corporation | Method and apparatus for storing and retrieving multi-dimensional data in computer memory |
US5410693A (en) | 1994-01-26 | 1995-04-25 | Wall Data Incorporated | Method and apparatus for accessing a database |
US5481700A (en) | 1991-09-27 | 1996-01-02 | The Mitre Corporation | Apparatus for design of a multilevel secure database management system based on a multilevel logic programming system |
US5548769A (en) | 1990-03-27 | 1996-08-20 | International Business Machines Corporation | Database engine |
US5588109A (en) | 1995-01-23 | 1996-12-24 | Hewlett-Packard Company | User interface for a remote diagnostic device |
US5671379A (en) | 1993-01-29 | 1997-09-23 | International Business Machines Corporation | System and method for managing windows |
US5701453A (en) | 1993-07-01 | 1997-12-23 | Informix Software, Inc. | Logical schema to allow access to a relational database without using knowledge of the database structure |
US5721903A (en) | 1995-10-12 | 1998-02-24 | Ncr Corporation | System and method for generating reports from a computer database |
US5734380A (en) | 1996-09-27 | 1998-03-31 | Adams; James S. | Method for controlling the presentation of displays in a multi-window computer environment |
US5801701A (en) | 1992-12-01 | 1998-09-01 | Microsoft Corporation | Method and system for in-place interaction with contained objects |
US5812394A (en) | 1995-07-21 | 1998-09-22 | Control Systems International | Object-oriented computer program, system, and method for developing control schemes for facilities |
US5831617A (en) | 1995-11-27 | 1998-11-03 | Bhukhanwala; Saumil A. | Browsing and manipulating objects using movie like icons |
US5842199A (en) | 1996-10-18 | 1998-11-24 | Regents Of The University Of Minnesota | System, method and article of manufacture for using receiver operating curves to evaluate predictive utility |
US5852818A (en) | 1996-12-23 | 1998-12-22 | Oracle Corporation | Non-recursive method for parameter evaluation within an information management system |
US5864857A (en) | 1996-03-29 | 1999-01-26 | Hitachi, Ltd. | Method for processing multi-dimensional data |
US5870756A (en) | 1996-04-26 | 1999-02-09 | Fujitsu Limited | Interchangeable storage medium containing program for processing data files thereupon to match a data file format to a computer system |
US5917483A (en) | 1995-09-18 | 1999-06-29 | Oracle Corporation | Advanced windows management for a computer system |
US5920316A (en) | 1994-12-13 | 1999-07-06 | Microsoft Corporation | Taskbar with start menu |
WO1999040510A1 (en) | 1998-02-09 | 1999-08-12 | Reuters, Ltd. | Method and system for layout of objects within a perimeter using constrained interactive search |
US5943677A (en) | 1997-10-31 | 1999-08-24 | Oracle Corporation | Sparsity management system for multi-dimensional databases |
US5978796A (en) | 1997-06-30 | 1999-11-02 | International Business Machines Corporation | Accessing multi-dimensional data by mapping dense data blocks to rows in a relational database |
US6026399A (en) | 1997-05-30 | 2000-02-15 | Silicon Graphics, Inc. | System and method for selection of important attributes |
US6047280A (en) | 1996-10-25 | 2000-04-04 | Navigation Technologies Corporation | Interface layer for navigation system |
US6122628A (en) | 1997-10-31 | 2000-09-19 | International Business Machines Corporation | Multidimensional data clustering and dimension reduction for indexing and searching |
US6134541A (en) | 1997-10-31 | 2000-10-17 | International Business Machines Corporation | Searching multidimensional indexes using associated clustering and dimension reduction information |
US6152601A (en) * | 1996-07-24 | 2000-11-28 | Illinois Tool Works Inc. | Fastener tape material, bag utilizing fastener tape material, and method of manufacture thereof |
US6160549A (en) * | 1994-07-29 | 2000-12-12 | Oracle Corporation | Method and apparatus for generating reports using declarative tools |
US6198487B1 (en) | 1995-01-23 | 2001-03-06 | Intergraph Corporation | Ole for design and modeling |
US6205447B1 (en) | 1997-06-30 | 2001-03-20 | International Business Machines Corporation | Relational database management of multi-dimensional data |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
DE4334336A1 (en) * | 1993-10-08 | 1995-05-04 | Mannesmann Ag | Gas analyser with controlled supply of gas to be measured and dynamic sample dilutions |
US5555367A (en) * | 1994-09-30 | 1996-09-10 | General Electric Company | Method and system for generating computer programs for queries formed by manipulating object-oriented diagrams |
-
1999
- 1999-07-30 US US09/364,596 patent/US6581054B1/en not_active Expired - Lifetime
-
2000
- 2000-07-28 KR KR1020027001295A patent/KR20020039329A/en not_active Application Discontinuation
- 2000-07-28 WO PCT/US2000/020692 patent/WO2001009768A2/en active IP Right Grant
- 2000-07-28 IL IL14783300A patent/IL147833A0/en unknown
- 2000-07-28 DE DE60036303T patent/DE60036303T2/en not_active Expired - Lifetime
- 2000-07-28 AU AU65016/00A patent/AU768084B2/en not_active Ceased
- 2000-07-28 JP JP2001514705A patent/JP2003519418A/en active Pending
- 2000-07-28 AT AT00952290T patent/ATE372556T1/en not_active IP Right Cessation
- 2000-07-28 BR BR0012826-0A patent/BR0012826A/en not_active IP Right Cessation
- 2000-07-28 CA CA002380040A patent/CA2380040A1/en not_active Abandoned
- 2000-07-28 EP EP00952290A patent/EP1228448B1/en not_active Expired - Lifetime
- 2000-07-28 CN CN00812609A patent/CN1399746A/en active Pending
-
2002
- 2002-01-22 ZA ZA200200533A patent/ZA200200533B/en unknown
Patent Citations (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5548769A (en) | 1990-03-27 | 1996-08-20 | International Business Machines Corporation | Database engine |
EP0450825A2 (en) | 1990-04-05 | 1991-10-09 | Wesley C. Sampson | Method and apparatus for the classification of data |
WO1992008199A1 (en) | 1990-10-31 | 1992-05-14 | Go Corporation | Computer documents as compound documents in a notebook metaphor |
EP0490465A2 (en) | 1990-12-07 | 1992-06-17 | Digital Equipment Corporation | Methods and apparatus for accessing non-relational data files using relational queries |
US5379419A (en) | 1990-12-07 | 1995-01-03 | Digital Equipment Corporation | Methods and apparatus for accesssing non-relational data files using relational queries |
US5481700A (en) | 1991-09-27 | 1996-01-02 | The Mitre Corporation | Apparatus for design of a multilevel secure database management system based on a multilevel logic programming system |
US5359724A (en) | 1992-03-30 | 1994-10-25 | Arbor Software Corporation | Method and apparatus for storing and retrieving multi-dimensional data in computer memory |
US5801701A (en) | 1992-12-01 | 1998-09-01 | Microsoft Corporation | Method and system for in-place interaction with contained objects |
US5671379A (en) | 1993-01-29 | 1997-09-23 | International Business Machines Corporation | System and method for managing windows |
US5701453A (en) | 1993-07-01 | 1997-12-23 | Informix Software, Inc. | Logical schema to allow access to a relational database without using knowledge of the database structure |
US5410693A (en) | 1994-01-26 | 1995-04-25 | Wall Data Incorporated | Method and apparatus for accessing a database |
US6160549A (en) * | 1994-07-29 | 2000-12-12 | Oracle Corporation | Method and apparatus for generating reports using declarative tools |
US5920316A (en) | 1994-12-13 | 1999-07-06 | Microsoft Corporation | Taskbar with start menu |
US5588109A (en) | 1995-01-23 | 1996-12-24 | Hewlett-Packard Company | User interface for a remote diagnostic device |
US6198487B1 (en) | 1995-01-23 | 2001-03-06 | Intergraph Corporation | Ole for design and modeling |
US5812394A (en) | 1995-07-21 | 1998-09-22 | Control Systems International | Object-oriented computer program, system, and method for developing control schemes for facilities |
US5917483A (en) | 1995-09-18 | 1999-06-29 | Oracle Corporation | Advanced windows management for a computer system |
US5721903A (en) | 1995-10-12 | 1998-02-24 | Ncr Corporation | System and method for generating reports from a computer database |
US5831617A (en) | 1995-11-27 | 1998-11-03 | Bhukhanwala; Saumil A. | Browsing and manipulating objects using movie like icons |
US5864857A (en) | 1996-03-29 | 1999-01-26 | Hitachi, Ltd. | Method for processing multi-dimensional data |
US5870756A (en) | 1996-04-26 | 1999-02-09 | Fujitsu Limited | Interchangeable storage medium containing program for processing data files thereupon to match a data file format to a computer system |
US6152601A (en) * | 1996-07-24 | 2000-11-28 | Illinois Tool Works Inc. | Fastener tape material, bag utilizing fastener tape material, and method of manufacture thereof |
US5734380A (en) | 1996-09-27 | 1998-03-31 | Adams; James S. | Method for controlling the presentation of displays in a multi-window computer environment |
US5842199A (en) | 1996-10-18 | 1998-11-24 | Regents Of The University Of Minnesota | System, method and article of manufacture for using receiver operating curves to evaluate predictive utility |
US6047280A (en) | 1996-10-25 | 2000-04-04 | Navigation Technologies Corporation | Interface layer for navigation system |
US5852818A (en) | 1996-12-23 | 1998-12-22 | Oracle Corporation | Non-recursive method for parameter evaluation within an information management system |
US6026399A (en) | 1997-05-30 | 2000-02-15 | Silicon Graphics, Inc. | System and method for selection of important attributes |
US5978796A (en) | 1997-06-30 | 1999-11-02 | International Business Machines Corporation | Accessing multi-dimensional data by mapping dense data blocks to rows in a relational database |
US6205447B1 (en) | 1997-06-30 | 2001-03-20 | International Business Machines Corporation | Relational database management of multi-dimensional data |
US6122628A (en) | 1997-10-31 | 2000-09-19 | International Business Machines Corporation | Multidimensional data clustering and dimension reduction for indexing and searching |
US6134541A (en) | 1997-10-31 | 2000-10-17 | International Business Machines Corporation | Searching multidimensional indexes using associated clustering and dimension reduction information |
US5943677A (en) | 1997-10-31 | 1999-08-24 | Oracle Corporation | Sparsity management system for multi-dimensional databases |
WO1999040510A1 (en) | 1998-02-09 | 1999-08-12 | Reuters, Ltd. | Method and system for layout of objects within a perimeter using constrained interactive search |
Non-Patent Citations (26)
Cited By (216)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8799209B2 (en) | 1999-08-04 | 2014-08-05 | Yanicklo Technology Limited Liability Company | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US8041670B2 (en) | 1999-08-04 | 2011-10-18 | Yanicklo Technology Limited Liability Company | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US20050060326A1 (en) * | 1999-08-04 | 2005-03-17 | Reuven Bakalash | Stand-alone cartridge-style data aggregation server and method of and system for managing multi-dimensional databases using the same |
US8463736B2 (en) | 1999-08-04 | 2013-06-11 | Yanicklo Technology Limited Liability Company | Relational database management system having integrated non-relational multi-dimensional data store of aggregated data elements |
US8788453B2 (en) | 1999-08-04 | 2014-07-22 | Yanicklo Technology Limited Liability Company | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US20030200221A1 (en) * | 1999-08-04 | 2003-10-23 | Reuven Bakalash | Stand-alone cartridge-style data aggregation server |
US8452804B2 (en) | 2000-02-28 | 2013-05-28 | Yanicklo Technology Limited Liability Company | Database management system (DBMS) employing a relational datastore and a multi-dimensional database (MDDB) for servicing query statements in a manner transparent to client machine |
US8321373B2 (en) | 2000-02-28 | 2012-11-27 | Yanicklo Technology Limited Liability | Method of servicing query statements from a client machine using a database management system (DBMS) employing a relational datastore and a multi-dimensional database (MDDB) |
US20050149491A1 (en) * | 2000-02-28 | 2005-07-07 | Reuven Bakalash | Database management system having data aggregation module integrated therein |
US20070233644A1 (en) * | 2000-02-28 | 2007-10-04 | Reuven Bakalash | System with a data aggregation module generating aggregated data for responding to OLAP analysis queries in a user transparent manner |
US8170984B2 (en) | 2000-02-28 | 2012-05-01 | Yanicklo Technology Limited Liability Company | System with a data aggregation module generating aggregated data for responding to OLAP analysis queries in a user transparent manner |
US8195602B2 (en) | 2000-02-28 | 2012-06-05 | Yanicklo Technology Limited Liability Company | Relational database management system (RDBMS) employing a relational datastore and a multi-dimensional database (MDDB) for serving query statements from client machines |
US8473450B2 (en) | 2000-02-28 | 2013-06-25 | Yanicklo Technology Limited Liability Company | Relational database management system (RDBMS) employing multi-dimensional database (MDDB) for servicing query statements through one or more client machines |
US20030229652A1 (en) * | 2000-02-28 | 2003-12-11 | Reuven Bakalash | Enterprise-wide data-warehouse with integrated data aggregation engine |
US7315849B2 (en) | 2000-02-28 | 2008-01-01 | Hyperroll Israel, Ltd. | Enterprise-wide data-warehouse with integrated data aggregation engine |
US20080021864A1 (en) * | 2000-02-28 | 2008-01-24 | Reuven Bakalash | Database management system (DBMS) employing a relational datastore and a multi-dimensional database (MDDB) for servicing query statements in a manner transparent to client machine |
US20010047387A1 (en) * | 2000-03-27 | 2001-11-29 | Exoplex, Inc. | Systems and methods for providing distributed cross-enterprise portals |
US7167859B2 (en) * | 2000-04-27 | 2007-01-23 | Hyperion Solutions Corporation | Database security |
US20020016924A1 (en) * | 2000-04-27 | 2002-02-07 | Arun Shah | Database security |
US20060004731A1 (en) * | 2000-05-24 | 2006-01-05 | Seibel John C | Text mining system for web-based business intelligence |
US7120629B1 (en) | 2000-05-24 | 2006-10-10 | Reachforce, Inc. | Prospects harvester system for providing contact data about customers of product or service offered by business enterprise extracting text documents selected from newsgroups, discussion forums, mailing lists, querying such data to provide customers who confirm to business profile data |
US7315861B2 (en) | 2000-05-24 | 2008-01-01 | Reachforce, Inc. | Text mining system for web-based business intelligence |
US7096220B1 (en) | 2000-05-24 | 2006-08-22 | Reachforce, Inc. | Web-based customer prospects harvester system |
US7082427B1 (en) | 2000-05-24 | 2006-07-25 | Reachforce, Inc. | Text indexing system to index, query the archive database document by keyword data representing the content of the documents and by contact data associated with the participant who generated the document |
US7003517B1 (en) | 2000-05-24 | 2006-02-21 | Inetprofit, Inc. | Web-based system and method for archiving and searching participant-based internet text sources for customer lead data |
US6704740B1 (en) * | 2000-08-10 | 2004-03-09 | Ford Motor Company | Method for analyzing product performance data |
US7275083B1 (en) | 2000-10-04 | 2007-09-25 | Reachforce, Inc. | Web-based customer lead generator system with pre-emptive profiling |
US7043531B1 (en) | 2000-10-04 | 2006-05-09 | Inetprofit, Inc. | Web-based customer lead generator system with pre-emptive profiling |
USRE42870E1 (en) | 2000-10-04 | 2011-10-25 | Dafineais Protocol Data B.V., Llc | Text mining system for web-based business intelligence applied to web site server logs |
US7330850B1 (en) | 2000-10-04 | 2008-02-12 | Reachforce, Inc. | Text mining system for web-based business intelligence applied to web site server logs |
US20030217332A1 (en) * | 2001-04-16 | 2003-11-20 | Greg Smith | System and method for web-based personalization and ecommerce management |
US20030033289A1 (en) * | 2001-05-24 | 2003-02-13 | Brinker Brian L. | Method and system for systematically diagnosing data problems in a database |
US6993518B2 (en) * | 2001-05-24 | 2006-01-31 | International Business Machines Corporation | Method and system for systematically diagnosing data problems in a database |
US7823189B2 (en) | 2001-06-11 | 2010-10-26 | Bea Systems, Inc. | System and method for dynamic role association |
US20070157297A1 (en) * | 2001-06-11 | 2007-07-05 | Bea Systems, Inc. | System and method for server security and entitlement processing |
US20030009448A1 (en) * | 2001-06-14 | 2003-01-09 | Covington Robert C. | Method and apparatus for providing user-specific response |
US7720842B2 (en) * | 2001-07-16 | 2010-05-18 | Informatica Corporation | Value-chained queries in analytic applications |
US20030018634A1 (en) * | 2001-07-16 | 2003-01-23 | Sanjatha Shringeri | Value-chained queries in analytic applications |
US7672924B1 (en) | 2001-08-09 | 2010-03-02 | Teradata Us, Inc. | Systems and methods for generating information from a data collection to support decision-making |
US7174342B1 (en) * | 2001-08-09 | 2007-02-06 | Ncr Corp. | Systems and methods for defining executable sequences to process information from a data collection |
US7080066B1 (en) | 2001-08-09 | 2006-07-18 | Ncr Corporation | Systems and methods for refining a decision-making process via executable sequences |
US20070150562A1 (en) * | 2001-10-12 | 2007-06-28 | Stull Edward L | System and method for data quality management and control of heterogeneous data sources |
US7251693B2 (en) * | 2001-10-12 | 2007-07-31 | Direct Computer Resources, Inc. | System and method for data quality management and control of heterogeneous data sources |
US7451477B2 (en) * | 2001-10-24 | 2008-11-11 | Bea Systems, Inc. | System and method for rule-based entitlements |
US20030126558A1 (en) * | 2001-10-24 | 2003-07-03 | Griffin Philip B. | System and method for XML data representation of portlets |
US20030117437A1 (en) * | 2001-10-24 | 2003-06-26 | Cook Thomas A. | Portal administration tool |
US20030105974A1 (en) * | 2001-10-24 | 2003-06-05 | Philip B. Griffin | System and method for rule-based entitlements |
US20050187978A1 (en) * | 2001-10-24 | 2005-08-25 | Bea Systems, Inc. | System and method for portal rendering |
US20080294613A1 (en) * | 2001-11-15 | 2008-11-27 | Arjun Chandrasekar Iyer | SQL adapter business service |
US20070192304A1 (en) * | 2001-11-15 | 2007-08-16 | Iyer Arjun C | Method and System for an Operation Capable of Updating and Inserting Information in a Database |
US20070192336A1 (en) * | 2001-11-15 | 2007-08-16 | Iyer Arjun C | SQL adapter business service |
US20070192337A1 (en) * | 2001-11-15 | 2007-08-16 | Siebel Systems, Inc. | SQL adapter business service |
US8489579B2 (en) | 2001-11-15 | 2013-07-16 | Siebel Systems, Inc. | SQL adapter business service |
US7373357B2 (en) | 2001-11-15 | 2008-05-13 | Oracle International Corporation | Method and system for an operation capable of updating and inserting information in a database |
US7552135B2 (en) | 2001-11-15 | 2009-06-23 | Siebel Systems, Inc. | SQL adapter business service |
US8117184B2 (en) * | 2001-11-15 | 2012-02-14 | Siebel Systems, Inc. | SQL adapter business service |
US20030120638A1 (en) * | 2001-12-24 | 2003-06-26 | Joong Ki Park | Method and apparatus for caching multiple Java-database connectivity |
US8180787B2 (en) | 2002-02-26 | 2012-05-15 | International Business Machines Corporation | Application portability and extensibility through database schema and query abstraction |
US20030167274A1 (en) * | 2002-02-26 | 2003-09-04 | International Business Machines Corporation | Modification of a data repository based on an abstract data representation |
US8244702B2 (en) | 2002-02-26 | 2012-08-14 | International Business Machines Corporation | Modification of a data repository based on an abstract data representation |
US20070214271A1 (en) * | 2002-05-01 | 2007-09-13 | Bea Systems, Inc. | Enterprise application platform |
US7725560B2 (en) | 2002-05-01 | 2010-05-25 | Bea Systems Inc. | Web service-enabled portlet wizard |
US7426548B2 (en) | 2002-05-01 | 2008-09-16 | Bea Systems, Inc. | Enterprise application platform |
US7873664B2 (en) | 2002-05-10 | 2011-01-18 | International Business Machines Corporation | Systems and computer program products to browse database query information |
US7447687B2 (en) | 2002-05-10 | 2008-11-04 | International Business Machines Corporation | Methods to browse database query information |
US20030212667A1 (en) * | 2002-05-10 | 2003-11-13 | International Business Machines Corporation | Systems, methods, and computer program products to browse database query information |
US7716167B2 (en) | 2002-12-18 | 2010-05-11 | International Business Machines Corporation | System and method for automatically building an OLAP model in a relational database |
US20040122646A1 (en) * | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | System and method for automatically building an OLAP model in a relational database |
US7953694B2 (en) | 2003-01-13 | 2011-05-31 | International Business Machines Corporation | Method, system, and program for specifying multidimensional calculations for a relational OLAP engine |
US20040139061A1 (en) * | 2003-01-13 | 2004-07-15 | International Business Machines Corporation | Method, system, and program for specifying multidimensional calculations for a relational OLAP engine |
US20040162906A1 (en) * | 2003-02-14 | 2004-08-19 | Griffin Philip B. | System and method for hierarchical role-based entitlements |
US7992189B2 (en) | 2003-02-14 | 2011-08-02 | Oracle International Corporation | System and method for hierarchical role-based entitlements |
US8831966B2 (en) | 2003-02-14 | 2014-09-09 | Oracle International Corporation | Method for delegated administration |
US7653930B2 (en) | 2003-02-14 | 2010-01-26 | Bea Systems, Inc. | Method for role and resource policy management optimization |
US7483904B2 (en) | 2003-02-20 | 2009-01-27 | Bea Systems, Inc. | Virtual repository content model |
US20040167868A1 (en) * | 2003-02-20 | 2004-08-26 | Bea Systems, Inc. | System and method for a virtual content repository |
US8099779B2 (en) | 2003-02-20 | 2012-01-17 | Oracle International Corporation | Federated management of content repositories |
US7840614B2 (en) | 2003-02-20 | 2010-11-23 | Bea Systems, Inc. | Virtual content repository application program interface |
US20040230679A1 (en) * | 2003-02-28 | 2004-11-18 | Bales Christopher E. | Systems and methods for portal and web server administration |
US20040230947A1 (en) * | 2003-02-28 | 2004-11-18 | Bales Christopher E. | Systems and methods for personalizing a portal |
US7810036B2 (en) | 2003-02-28 | 2010-10-05 | Bea Systems, Inc. | Systems and methods for personalizing a portal |
US7895191B2 (en) | 2003-04-09 | 2011-02-22 | International Business Machines Corporation | Improving performance of database queries |
US20050015363A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Method and structure for representing complex query elements in a modelling tool |
US8458164B2 (en) | 2003-07-15 | 2013-06-04 | International Business Machines Corporation | Query model tool and method for visually grouping and ungrouping predicates |
US20050015368A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Query modelling tool having a dynamically adaptive interface |
US7984060B2 (en) | 2003-07-15 | 2011-07-19 | International Business Machines Corporation | Model content provider with reusable components for supporting a plurality of GUI API's |
US20050015361A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Model content provider with reusable components for supporting a plurality of GUI API's |
US20050015364A1 (en) * | 2003-07-15 | 2005-01-20 | International Business Machines Corporation | Query model tool and method for visually grouping and ungrouping predicates |
US20080288465A1 (en) * | 2003-07-15 | 2008-11-20 | International Business Machines Corporation | Model content provider with reusable components for supporting a plurality of gui api's |
US20050071341A1 (en) * | 2003-09-26 | 2005-03-31 | Microsoft Corporation | Method for maintaining information about multiple instances of an activity |
US8315972B2 (en) * | 2003-09-26 | 2012-11-20 | Microsoft Corporation | Method for maintaining databases information about multiple instances of an activity generating, updating virtual OLAP cube based on modified star-schema |
US20050081062A1 (en) * | 2003-10-10 | 2005-04-14 | Bea Systems, Inc. | Distributed enterprise security system |
US20050257245A1 (en) * | 2003-10-10 | 2005-11-17 | Bea Systems, Inc. | Distributed security system with dynamic roles |
US20050120051A1 (en) * | 2003-12-01 | 2005-06-02 | Gerd Danner | Operational reporting architecture |
US7756822B2 (en) * | 2003-12-01 | 2010-07-13 | Sap Ag | Operational reporting architecture |
US9811513B2 (en) | 2003-12-09 | 2017-11-07 | International Business Machines Corporation | Annotation structure type determination |
US20050216451A1 (en) * | 2004-02-19 | 2005-09-29 | Urs Enzler | Generation of database queries from predefined query strings |
US7774601B2 (en) | 2004-04-06 | 2010-08-10 | Bea Systems, Inc. | Method for delegated administration |
US7310637B2 (en) * | 2004-05-05 | 2007-12-18 | International Business Machines Corporation | Dynamic database access via standard query language and abstraction technology |
US20050262048A1 (en) * | 2004-05-05 | 2005-11-24 | International Business Machines Corporation | Dynamic database access via standard query language and abstraction technology |
US20070294234A1 (en) * | 2004-05-05 | 2007-12-20 | International Business Machines Corporation | Dynamic database access via standard query language and abstraction technology |
US7890524B2 (en) | 2004-05-05 | 2011-02-15 | International Business Machines Corporation | Dynamic database access via standard query language and abstraction technology |
US7475066B2 (en) * | 2004-05-05 | 2009-01-06 | International Business Machines Corporation | Dynamic database access via standard query language and abstraction technology |
US20080235195A1 (en) * | 2004-05-05 | 2008-09-25 | Dettinger Richard D | Dynamic database access via standard query language and abstraction technology |
US20050257172A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | Interface for filtering for portal and webserver administration |
US20050257154A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | Graphical association of elements for portal and webserver administration |
US20050256899A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | System and method for representing hierarchical data structures |
US20050256906A1 (en) * | 2004-05-14 | 2005-11-17 | Bea Systems, Inc. | Interface for portal and webserver administration-efficient updates |
US20050278290A1 (en) * | 2004-06-14 | 2005-12-15 | International Business Machines Corporation | Systems, methods, and computer program products that automatically discover metadata objects and generate multidimensional models |
US7707143B2 (en) * | 2004-06-14 | 2010-04-27 | International Business Machines Corporation | Systems, methods, and computer program products that automatically discover metadata objects and generate multidimensional models |
US7480663B2 (en) | 2004-06-22 | 2009-01-20 | International Business Machines Corporation | Model based optimization with focus regions |
US9607099B2 (en) * | 2004-07-22 | 2017-03-28 | International Business Machines Corporation | Query conditions-based security |
US20100185678A1 (en) * | 2004-07-22 | 2010-07-22 | International Business Machines Corporation | Query conditions-based security |
US10108813B2 (en) * | 2004-07-22 | 2018-10-23 | International Business Machines Corporation | Query conditions-based security |
US8041728B2 (en) * | 2004-09-30 | 2011-10-18 | International Business Machines Corporation | Utilization of display profiles with abstract queries |
US20060074934A1 (en) * | 2004-09-30 | 2006-04-06 | International Business Machines Corporation | Utilization of display profiles with abstract queries |
US7783670B2 (en) | 2004-11-18 | 2010-08-24 | Bea Systems, Inc. | Client server conversion for representing hierarchical data structures |
US20060123026A1 (en) * | 2004-11-18 | 2006-06-08 | Bea Systems, Inc. | Client server conversion for representing hierarchical data structures |
US20060116999A1 (en) * | 2004-11-30 | 2006-06-01 | International Business Machines Corporation | Sequential stepwise query condition building |
US20060161522A1 (en) * | 2005-01-14 | 2006-07-20 | International Business Machines Corporation | Context insensitive model entity searching |
US7689555B2 (en) * | 2005-01-14 | 2010-03-30 | International Business Machines Corporation | Context insensitive model entity searching |
US7624097B2 (en) * | 2005-01-14 | 2009-11-24 | International Business Machines Corporation | Abstract records |
US20060161521A1 (en) * | 2005-01-14 | 2006-07-20 | International Business Machines Corporation | Abstract records |
US8195647B2 (en) | 2005-01-14 | 2012-06-05 | International Business Machines Corporation | Abstract records |
US8122012B2 (en) | 2005-01-14 | 2012-02-21 | International Business Machines Corporation | Abstract record timeline rendering/display |
US20060161556A1 (en) * | 2005-01-14 | 2006-07-20 | International Business Machines Corporation | Abstract record timeline rendering/display |
US8095553B2 (en) | 2005-03-17 | 2012-01-10 | International Business Machines Corporation | Sequence support operators for an abstract database |
US20060212418A1 (en) * | 2005-03-17 | 2006-09-21 | International Business Machines Corporation | Sequence support operators for an abstract database |
US7647315B2 (en) * | 2005-09-13 | 2010-01-12 | International Business Machines Corporation | System and method of providing relational set operations for multidimensional data sources |
US20070061291A1 (en) * | 2005-09-13 | 2007-03-15 | Cognos Incorporated | System and method of providing relational set operations for OLAP data sources |
US20090006352A1 (en) * | 2005-09-14 | 2009-01-01 | Dettinger Richard D | Composing abstract queries for delegated user roles |
US9679031B2 (en) * | 2005-09-14 | 2017-06-13 | International Business Machines Corporation | Composing abstract queries for delegated user roles |
US7917537B2 (en) | 2005-09-26 | 2011-03-29 | Oracle International Corporation | System and method for providing link property types for content management |
US7818344B2 (en) | 2005-09-26 | 2010-10-19 | Bea Systems, Inc. | System and method for providing nested types for content management |
US7752205B2 (en) | 2005-09-26 | 2010-07-06 | Bea Systems, Inc. | Method and system for interacting with a virtual content repository |
US7953734B2 (en) | 2005-09-26 | 2011-05-31 | Oracle International Corporation | System and method for providing SPI extensions for content management system |
US8316025B2 (en) | 2005-09-26 | 2012-11-20 | Oracle International Corporation | System and method for providing SPI extensions for content management system |
US8140571B2 (en) | 2005-11-10 | 2012-03-20 | International Business Machines Corporation | Dynamic discovery of abstract rule set required inputs |
US20090055438A1 (en) * | 2005-11-10 | 2009-02-26 | Dettinger Richard D | Strict validation of inference rule based on abstraction environment |
US20080301108A1 (en) * | 2005-11-10 | 2008-12-04 | Dettinger Richard D | Dynamic discovery of abstract rule set required inputs |
US8145628B2 (en) | 2005-11-10 | 2012-03-27 | International Business Machines Corporation | Strict validation of inference rule based on abstraction environment |
US8180789B1 (en) * | 2005-12-05 | 2012-05-15 | Teradata Us, Inc. | Techniques for query generation, population, and management |
US7886352B2 (en) | 2006-09-22 | 2011-02-08 | Oracle International Corporation | Interstitial pages |
US20080313728A1 (en) * | 2006-09-22 | 2008-12-18 | Bea Systems, Inc. | Interstitial pages |
US20080077981A1 (en) * | 2006-09-22 | 2008-03-27 | Bea Systems, Inc. | Pagelets in adaptive tags in non-portal reverse proxy |
US8397283B2 (en) | 2006-09-22 | 2013-03-12 | Oracle International Corporation | User role mapping in web applications |
US20080250388A1 (en) * | 2006-09-22 | 2008-10-09 | Bea Systems, Inc. | Pagelets in adaptive tags |
US20080077809A1 (en) * | 2006-09-22 | 2008-03-27 | Bea Systems, Inc. | Credential Vault Encryption |
US20080077983A1 (en) * | 2006-09-22 | 2008-03-27 | Bea Systems, Inc. | Non-invasive insertion of pagelets |
US20080077982A1 (en) * | 2006-09-22 | 2008-03-27 | Bea Systems, Inc. | Credential vault encryption |
US20080077980A1 (en) * | 2006-09-22 | 2008-03-27 | Bea Systems, Inc. | Pagelets |
US7904953B2 (en) | 2006-09-22 | 2011-03-08 | Bea Systems, Inc. | Pagelets |
US20110047611A1 (en) * | 2006-09-22 | 2011-02-24 | Bea Systems, Inc. | User Role Mapping in Web Applications |
US7865943B2 (en) | 2006-09-22 | 2011-01-04 | Oracle International Corporation | Credential vault encryption |
US8136150B2 (en) | 2006-09-22 | 2012-03-13 | Oracle International Corporation | User role mapping in web applications |
US7861289B2 (en) | 2006-09-22 | 2010-12-28 | Oracle International Corporation | Pagelets in adaptive tags in non-portal reverse proxy |
US7861290B2 (en) | 2006-09-22 | 2010-12-28 | Oracle International Corporation | Non-invasive insertion of pagelets |
US20080082493A1 (en) * | 2006-09-29 | 2008-04-03 | Business Objects, S.A. | Apparatus and method for receiving a report |
US20080082495A1 (en) * | 2006-09-29 | 2008-04-03 | Business Objects, S.A. | Apparatus and method for searching reports |
US7899837B2 (en) * | 2006-09-29 | 2011-03-01 | Business Objects Software Ltd. | Apparatus and method for generating queries and reports |
US20080082494A1 (en) * | 2006-09-29 | 2008-04-03 | Business Objects, S.A. | Apparatus and method for generating queries and reports |
US8204895B2 (en) | 2006-09-29 | 2012-06-19 | Business Objects Software Ltd. | Apparatus and method for receiving a report |
US8126887B2 (en) | 2006-09-29 | 2012-02-28 | Business Objects Software Ltd. | Apparatus and method for searching reports |
US8463852B2 (en) | 2006-10-06 | 2013-06-11 | Oracle International Corporation | Groupware portlets for integrating a portal with groupware systems |
US20080099831A1 (en) * | 2006-10-31 | 2008-05-01 | Oki Electric Industry Co., Ltd. | Semiconductor memory device and method for the same |
US8185951B2 (en) * | 2006-12-20 | 2012-05-22 | International Business Machines Corporation | Method of handling user groups in desktop and web based applications in a heterogeneous authentication environment |
US20080155682A1 (en) * | 2006-12-20 | 2008-06-26 | International Business Machines Corporation | Method of handling user groups in desktop and web based applications in a heterogeneous authentication environment |
US20080168042A1 (en) * | 2007-01-09 | 2008-07-10 | Dettinger Richard D | Generating summaries for query results based on field definitions |
US8140557B2 (en) | 2007-05-15 | 2012-03-20 | International Business Machines Corporation | Ontological translation of abstract rules |
US20090019022A1 (en) * | 2007-07-15 | 2009-01-15 | Dawning Technologies, Inc. | Rules-based data mining |
US20090043788A1 (en) * | 2007-08-06 | 2009-02-12 | Panorama Software Inc. | Proactive business intelligence |
US20090063490A1 (en) * | 2007-08-27 | 2009-03-05 | Karl Fuerst | Authorization controlled searching |
US7809751B2 (en) * | 2007-08-27 | 2010-10-05 | Sap Ag | Authorization controlled searching |
US8316384B2 (en) * | 2009-02-18 | 2012-11-20 | Microsoft Corporation | Input/output broker model |
US20100211962A1 (en) * | 2009-02-18 | 2010-08-19 | Microsoft Corporation | Input/output broker model |
US20100312884A1 (en) * | 2009-05-26 | 2010-12-09 | Sagnik Nandy | System and method for aggregating analytics data |
US20100318527A1 (en) * | 2009-05-26 | 2010-12-16 | Sagnik Nandy | Dynamically generating aggregate tables |
US8549019B2 (en) | 2009-05-26 | 2013-10-01 | Google Inc. | Dynamically generating aggregate tables |
US9305105B2 (en) | 2009-05-26 | 2016-04-05 | Google Inc. | System and method for aggregating analytics data |
US8543591B2 (en) | 2009-09-02 | 2013-09-24 | Google Inc. | Method and system for generating and sharing dataset segmentation schemes |
US8412719B1 (en) | 2009-09-02 | 2013-04-02 | Google Inc. | Method and system for segmenting a multidimensional dataset |
US20110055250A1 (en) * | 2009-09-02 | 2011-03-03 | Sagnik Nandy | Method and system for generating and sharing dataset segmentation schemes |
US20110055214A1 (en) * | 2009-09-02 | 2011-03-03 | Lik Mui | Method and System for Pivoting a Multidimensional Dataset |
US8751544B2 (en) * | 2009-09-02 | 2014-06-10 | Google Inc. | Method and system for pivoting a multidimensional dataset |
US9003359B2 (en) * | 2009-09-22 | 2015-04-07 | International Business Machines Corporation | User customizable queries to populate model diagrams |
US8997037B2 (en) * | 2009-09-22 | 2015-03-31 | International Business Machines Corporation | User customizable queries to populate model diagrams |
US20120282586A1 (en) * | 2009-09-22 | 2012-11-08 | International Business Machines Corporation | User customizable queries to populate model diagrams |
US20110072411A1 (en) * | 2009-09-22 | 2011-03-24 | International Business Machines Corporation | User customizable queries to populate model diagrams |
US20110119374A1 (en) * | 2009-10-20 | 2011-05-19 | Jan Matthias Ruhl | Method and System for Detecting Anomalies in Time Series Data |
US20110119100A1 (en) * | 2009-10-20 | 2011-05-19 | Jan Matthias Ruhl | Method and System for Displaying Anomalies in Time Series Data |
US8682816B2 (en) | 2009-10-20 | 2014-03-25 | Google Inc. | Method and system for detecting anomalies in time series data |
US8972332B2 (en) | 2009-10-20 | 2015-03-03 | Google Inc. | Method and system for detecting anomalies in web analytics data |
US8583584B2 (en) | 2009-10-20 | 2013-11-12 | Google Inc. | Method and system for using web analytics data for detecting anomalies |
US8554699B2 (en) | 2009-10-20 | 2013-10-08 | Google Inc. | Method and system for detecting anomalies in time series data |
US20110119226A1 (en) * | 2009-10-20 | 2011-05-19 | Jan Matthias Ruhl | Method and System for Detecting Anomalies in Web Analytics Data |
US9785987B2 (en) | 2010-04-22 | 2017-10-10 | Microsoft Technology Licensing, Llc | User interface for information presentation system |
US20110264665A1 (en) * | 2010-04-26 | 2011-10-27 | Microsoft Corporation | Information retrieval system with customization |
US10628504B2 (en) | 2010-07-30 | 2020-04-21 | Microsoft Technology Licensing, Llc | System of providing suggestions based on accessible and contextual information |
US20120110002A1 (en) * | 2010-11-02 | 2012-05-03 | Microsoft Corporation | Data Rendering Optimization |
US9946768B2 (en) * | 2010-11-02 | 2018-04-17 | Microsoft Technology Licensing, Llc | Data rendering optimization |
US10007711B2 (en) | 2010-11-02 | 2018-06-26 | Microsoft Technology Licensing, Llc | Data rendering optimization |
US20130159831A1 (en) * | 2011-12-19 | 2013-06-20 | Tobias Weller | Converting reports between disparate report formats |
US9128908B2 (en) * | 2011-12-19 | 2015-09-08 | Sap Se | Converting reports between disparate report formats |
US20140046975A1 (en) * | 2012-08-10 | 2014-02-13 | Arris Enterprises, Inc. | Aggregate data streams in relational database systems |
US9824121B2 (en) * | 2012-08-10 | 2017-11-21 | Arris Enterprises Llc | Aggregate data streams in relational database systems |
US20140081994A1 (en) * | 2012-08-10 | 2014-03-20 | The Trustees Of Columbia University In The City Of New York | Identifying Content for Planned Events Across Social Media Sites |
US20160004754A1 (en) * | 2014-07-01 | 2016-01-07 | Verizon Patent And Licensing Inc. | Generic API |
US10915541B2 (en) * | 2014-07-01 | 2021-02-09 | Verizon Patent And Licensing Inc. | Generic API |
US10585892B2 (en) | 2014-07-10 | 2020-03-10 | Oracle International Corporation | Hierarchical dimension analysis in multi-dimensional pivot grids |
US10606855B2 (en) | 2014-07-10 | 2020-03-31 | Oracle International Corporation | Embedding analytics within transaction search |
US20160140241A1 (en) * | 2014-11-13 | 2016-05-19 | Christoph Weyerhaeuser | Decoupling filter injection and evalulation by forced pushdown of filter attributes in calculation models |
US10303726B2 (en) * | 2014-11-13 | 2019-05-28 | Sap Se | Decoupling filter injection and evaluation by forced pushdown of filter attributes in calculation models |
US20200051127A1 (en) * | 2015-03-06 | 2020-02-13 | Amazon Technologies, Inc. | Enhanced permissions management |
US10331899B2 (en) | 2015-10-24 | 2019-06-25 | Oracle International Corporation | Display of dynamic contextual pivot grid analytics |
US10642990B2 (en) | 2015-10-24 | 2020-05-05 | Oracle International Corporation | Generation of dynamic contextual pivot grid analytics |
US20180253677A1 (en) * | 2017-03-01 | 2018-09-06 | Gregory James Foster | Method for Performing Dynamic Data Analytics |
Also Published As
Publication number | Publication date |
---|---|
WO2001009768A3 (en) | 2002-05-30 |
DE60036303T2 (en) | 2008-05-29 |
EP1228448B1 (en) | 2007-09-05 |
EP1228448A2 (en) | 2002-08-07 |
CN1399746A (en) | 2003-02-26 |
KR20020039329A (en) | 2002-05-25 |
BR0012826A (en) | 2004-06-29 |
ZA200200533B (en) | 2003-01-16 |
AU6501600A (en) | 2001-02-19 |
ATE372556T1 (en) | 2007-09-15 |
IL147833A0 (en) | 2002-08-14 |
DE60036303D1 (en) | 2007-10-18 |
JP2003519418A (en) | 2003-06-17 |
CA2380040A1 (en) | 2001-02-08 |
WO2001009768A2 (en) | 2001-02-08 |
AU768084B2 (en) | 2003-12-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6581054B1 (en) | Dynamic query model and method | |
US6842758B1 (en) | Modular method and system for performing database queries | |
US6691140B1 (en) | Method and system for multidimensional storage model with interdimensional links | |
US8091040B2 (en) | Method and system for displaying a plurality of discrete files in a compound file | |
US10592705B2 (en) | System and method for network user interface report formatting | |
US7233940B2 (en) | System for processing at least partially structured data | |
US6279033B1 (en) | System and method for asynchronous control of report generation using a network interface | |
US6675299B2 (en) | Method and apparatus for document management utilizing a messaging system | |
Al_layla | Designing a Hybrid Relational Database Management System (HRDBMS) |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: STERLING SOFTWARE, INC., TEXASFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BOGRETT, STEVEN W.;REEL/FRAME:010146/0325Effective date: 19990729 |
|
AS | Assignment |
Owner name: COMPUTER ASSOCIATES THINK, INC., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:STERLING SOFTWARE, INC.;REEL/FRAME:012935/0312Effective date: 20020521 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:COMPUTER ASSOCIATES THINK, INC.;REEL/FRAME:028801/0049Effective date: 20120330 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044213/0313Effective date: 20170929 |
CN114730325A - Determining dynamic interaction conditions for triggering provision of related content interface notifications - Google Patents
Determining dynamic interaction conditions for triggering provision of related content interface notifications Download PDFInfo
- Publication number
- CN114730325A CN114730325A CN201980100684.3A CN201980100684A CN114730325A CN 114730325 A CN114730325 A CN 114730325A CN 201980100684 A CN201980100684 A CN 201980100684A CN 114730325 A CN114730325 A CN 114730325A
- Authority
- CN
- China
- Prior art keywords
- internet resource
- interaction
- attributes
- client device
- content interface
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/954—Navigation, e.g. using categorised browsing
Abstract
The implementation determines attributes of the internet resources; processing the attributes to generate a prediction output; determining, based on the predicted output, an interaction condition for triggering provision of a relevant content interface notification for the internet resource; and in response to a given client device's access to the internet resource, and in response to determining the interaction condition: responsive to determining that access to the internet resource satisfies the interaction condition, causing the given client device to present the relevant content interface notification. In some implementations, the interaction conditions vary by internet resource, and/or may vary for a single internet resource (e.g., based on a navigation path used in accessing the internet resource and/or a client device used in accessing the internet resource).
Description
Background
Related content interface notifications have been proposed that are selectable during access to a given web page and, when selected, present a segment of related internet resources. For example, when viewing a web page for a kentucky racehorse, a related interface notification may be selected and, when selected, a snippet and link of the web page may be presented, where the web page is determined to be related to the web page for the kentucky racehorse. For example, the related web pages may include web pages related to kentucky tournaments, and the like. Various techniques may be used to determine that two web pages (or other internet resources) are relevant, such as many users accessing the two web pages (optionally in close temporal proximity), content overlapping (e.g., the subject matter of the web pages), frequent simultaneous occurrence of the two web pages in the search results, and/or other techniques.
However, current relevant content interface notifications are typically presented in a static manner. For example, the underlying web pages may be presented once they are accessed, or after certain fixed conditions are met, such as scrolling through a fixed percentage of the web pages. Statically presenting the relevant content interface notifications in a static manner may result in the notifications being presented too early or too late (or not at all) during the visit of the underlying web page. When rendered too early, related content interface notifications may occupy a generally limited screen space and/or cause distraction to a user's viewing of a web page, both of which may extend the amount of time a user spends viewing the relevant portion of the web page, resulting in increased use of client device resources in rendering the web page. When rendered too late or not rendered at all, the user may ignore the notification or even not be rendered, but rather find the relevant content through more computer resources and/or network intensive means (e.g., performing an internet search).
Disclosure of Invention
Implementations disclosed herein relate to determining dynamic interaction conditions for triggering the provision of related content interface notifications to internet resources (e.g., web pages, images, videos, Portable Document Format (PDF) documents, status of applications and/or documents, etc.). The interaction conditions are dynamic in that they may vary with the internet resource and/or may even vary for a single internet resource. For example, they may vary for a single internet resource depending on the navigation path taken when accessing the internet resource and/or depending on the client device used when accessing the internet resource and/or the user account associated with the user accessing the internet resource. The interaction condition for a given internet resource may include, for example, a duration of access to the given internet resource (e.g., an elapsed time since the given internet resource was requested, retrieved, or presented) and/or a scrolling condition (e.g., whether scrolling has occurred, a degree of scrolling, a speed of scrolling, and/or a direction of scrolling).
As one example, for a first web page, the interaction condition may include a specified percentage of fifteen seconds duration to access or scroll the first web page, while for a second web page, the interaction condition may include a different specified percentage of ten seconds duration to access or scroll the second web page. As another example, the interaction condition may include an access duration of twenty seconds for the third web page and for accesses to the third web page via the first navigation path, and the interaction condition may include an access duration of fifteen seconds for the third web page and for accesses to the third web page via the second navigation path. Note that when multiple interaction conditions are determined for a given resource, satisfaction of a condition (which would result in the provision of a relevant content interface notification) may be determined when any one interaction condition is satisfied, or alternatively, when a combination of one or more (e.g., all) interaction conditions are satisfied.
Various implementations of determining dynamic interaction conditions may mitigate the occurrence of late-arrival and/or early-arrival offers of related content interface notifications, thereby mitigating the technical drawbacks of late-arrival and/or early-arrival. This mitigation is particularly effective when considering the large number of interactions of a user population. Moreover, as described herein, various implementations use machine learning models trained based on user interaction (or lack thereof) with previously provided related content interface notifications to determine dynamic interaction conditions, ensuring that late-arriving and/or early-arriving technical deficiencies are mitigated in general, at least in a population of users.
Some implementations disclosed herein additionally or alternatively relate to determining whether to even generate and/or provide any relevant content interface notifications for a given internet resource. Like the interaction conditions, whether to determine to provide a relevant interface notification may vary from internet resource to internet resource, and/or may even vary for a single internet resource. For example, the relevant interface notifications that determine whether to provide the internet resource may vary according to the navigation path when accessing the internet resource and/or according to the client device used when accessing the internet resource and/or the user account associated with the user accessing the internet resource. When related content interface notifications are not relevant, various implementations of determining whether to provide any related content interface notifications can prevent waste of network and/or client device resources while ensuring that related content interface notifications are presented when relevant (thereby enabling more efficient access to corresponding related content). In some implementations of determining whether to even provide any relevant content interface notifications, using a machine learning model trained based on user interactions (or no interactions) with previously provided relevant content interface notifications ensures that the distinction between relevant and irrelevant is meaningful at least in the population of users as a whole. In some of these implementations, the same machine learning model may be used to determine whether to provide any relevant content interface notifications and to determine interaction conditions for any provision of relevant content interface notifications.
Various implementations of determining whether to generate any relevant content interface notifications for internet resources may also prevent wasting network and/or server resources utilized in determining relevant resources related to internet resources. For example, the relevant resources may be determined based on: performing internet searches based on the content of the internet resources and identifying relevant resources from the search results of the searches; analyzing the historical data to determine relevant resources that are accessed very close in time to the internet resource; analyzing the database to determine related resources that share a common topic with the internet resource and/or that respond to queries that are the same as or similar to the internet resource; and/or perform other network and/or server resource intensive techniques. Thus, resources may be conserved by performing only these network and/or server resource intensive techniques, for example, when it is determined that relevant interface notifications should be provided. As described above, a machine learning model trained based on user interaction (or lack thereof) with previously provided related content interface notifications may be used to determine whether to provide related content interface notifications, and may optionally be the same machine learning model used in determining any provided interaction conditions for related content interface notifications.
Some implementations disclosed herein additionally or alternatively relate to determining whether to pre-cache (and/or pre-cached scopes) related content resources linked in a related content interface notification at a client device viewing internet resources. Pre-caching the relevant content resources may reduce latency in rendering the relevant content resources if a corresponding link is selected in the relevant content interface notification. For example, the relevant content interface notification may include content segments from respective additional web pages as the topmost presented relevant content items. At least some (e.g., all) of the respective additional web pages may be pre-cached at the client device based on determining to pre-cache the relevant content items when viewing the internet resource. In some of these implementations, whether and/or the extent to which the related content items are pre-cached for the internet resource may be based on the determined interaction condition of the internet resource. For example, it may be determined that the determined interaction conditions for the internet resource are not pre-cached when they include a duration of greater than 30 seconds, are pre-cached to a first extent when the interaction conditions include a duration of 15 to 30 seconds, and are pre-cached to a greater extent (e.g., more relevant content items and/or more relevant content items) when the interaction conditions include a duration of less than 15 seconds. Thus, when determining to provide a relevant interface notification for an internet resource, implementations disclosed herein determine whether to pre-cache a content item linked in the relevant interface notification and/or a degree of pre-caching. These implementations seek to reduce latency in presenting related content items through pre-caching of the related content items, but also seek to balance latency reduction with network usage considerations through selective pre-caching only (e.g., only for certain internet resources and/or navigation paths) and/or dynamic range pre-caching.
Various attributes may be utilized to determine interaction conditions and/or determine whether to generate and/or provide relevant content interface notifications for a given internet resource. These attributes include, for example, content attributes, navigation attributes, global history attributes, personal history attributes, and/or related content attributes.
The content attributes of a given internet resource are based on the content of the given internet resource. The content attributes may include, for example, type attributes indicating a number of different types of types/verticals to which a given internet resource conforms. The different types may be defined at various levels of granularity, and may include, for example, news (and/or more granular types such as scientific news, political news, and the like), travel (and/or more granular types, such as airline travel, automobile travel, U.S. western travel, and the like), shopping (and/or more granular types, such as home merchandising, electronic product shopping), and/or other types. A given internet resource may be determined to be only a single type or may be determined to be multiple types (optionally with a weight for each type). In various implementations, the trained classifier is utilized to process the content of a given internet resource (e.g., a title and/or word embedding of a particular sentence) and generate a prediction output that predicts the type of the given internet resource. The content attributes may additionally or alternatively include one or more low-dimensional embeddings of at least some content of a given internet resource, such as Word embeddings of terms of a given internet resource (e.g., using Word2Vec or other techniques). The content attributes may additionally or alternatively include one or more structural attributes of at least some content of a given internet resource. The structural attributes may be based on the markup language (e.g., XML tags or HTML tags) and/or the organizational structure (e.g., order) of the markup language included in a given internet resource.
The navigation attributes of a given internet resource indicate one or more specific attributes for navigating to that internet resource. As a result, when the navigation attributes are used to determine whether a relevant content interface notification and/or interaction condition is provided for it, the determination is specific to the navigation attributes and is only used for access to a given internet resource as a result of navigation consistent with the navigation attributes. In some implementations, the navigation attributes include a path attribute that indicates which of a plurality of navigation paths is used to access the internet resource. Various navigation paths of various granularities may be utilized. For example, the navigation path may include a query-based path (e.g., a link to a given internet resource is presented as a search result in response to the query and selected) and a query-independent path (e.g., a link is selected to a given internet resource provided in the active "content feed" or navigated to a given internet resource by typing its URL in an address bar). As another example, the navigation path may include a finer-grained query-based path, such as multiple query-based paths corresponding to different query breadths.
For example, suppose there is a web page of a hypothetical cafe, a hypothetical restaurant located in lewis verval, kentucky, serving purely vegetarian dishes. The query "hypothetical cafe of lewis verval, kentucky" may be classified as a first extent (e.g., very narrow or navigated) query of a web page, the query "vegetarian cuisine of lewis verval, kentucky" may be classified as a second, broader extent of a web page, and the query "restaurant of lewis verval, kentucky" may be classified as a broader extent of a web page. In general, when a given internet resource is accessed as a result of a broader query, the related content interface notifications are more likely to be provided and/or will be provided with "more aggressive" interaction conditions than when the given internet resource is accessed as a result of a narrower query (e.g., a navigation query). This may be a factor in navigation or narrower queries that indicate a desire to view a certain (or a limited set of) internet resources, while broader queries indicate a desire to explore multiple internet resources related to a certain topic.
The global historical interaction attribute of the given internet resource indicates a past degree of measurement of past interactions with respect to previous related content interface notifications in response to previous presentations of previous related content interface notifications by the plurality of client devices of past accesses to the given internet resource and/or additional internet resources determined to be similar to the given internet resource. Various techniques may be utilized to determine that the additional internet resources are similar to the given internet resource, such as by comparing word (and/or other content) embeddings of content of the given internet resource to the additional internet resources and determining that they are similar if the embeddings satisfy a distance threshold.
The personal historical interaction attribute of the given internet resource indicates a past degree of measurement of past interactions by the user of the given client device with respect to previous related content interface notifications (e.g., all previous related content interface notifications, recent notifications, and/or those notifications with respect to internet resources determined to be similar to the given internet resource). As a result, the personal historical interaction attributes are personal to the current access of a given Internet resource, and are specific to the current access when the personal historical interaction attributes are used to determine whether to provide them with relevant content interface notifications and/or interaction conditions for their provision.
The related content attributes are based on one or more related internet resources that are linked in a related content notification of the internet resources or that are presented in response to selection of the related content notification. For example, the relevant content attributes may be based on query-independent metrics determined for one or more relevant internet resources. The query-independent metrics of the internet resources may be based on, for example, the frequency of access of the internet resources, inbound links to the internet resources, and/or other query-independent attributes of the internet resources. The relevant content attributes of the relevant internet resources may additionally or alternatively be based on the strength of the relationship between the relevant internet resources and a given internet resource. The strength of the relationship between the relevant internet resource and a given internet resource can be based on, for example, how many users accessed the two internet resources (optionally in close temporal proximity), the degree of overlap of the content of the internet resources (e.g., the subject matter of the internet resources), and/or the frequency with which the two internet resources appeared simultaneously in the search results.
The above description is intended only as a summary of some implementations disclosed herein. These implementations, as well as other implementations, are described in detail herein.
Various implementations may include a non-transitory computer-readable storage medium storing instructions executable by a processor to perform a method, such as one or more of the methods described herein. Other various implementations may include a system including a memory and one or more hardware processors operable to execute instructions stored in the memory to perform a method such as one or more of the methods described herein.
Drawings
FIG. 1 depicts a block diagram of an example environment in which various aspects of the present disclosure may be demonstrated, and in which implementations disclosed herein may be implemented.
Fig. 2A and 2B each depict some of the components of fig. 1, and example interactions that may occur between such components, according to various implementations.
Fig. 3 depicts a flow diagram that illustrates an example method of training a machine learning model according to various implementations.
FIG. 4 depicts a flow diagram that illustrates an example method of determining whether and/or when to present a relevant content interface notification in accordance with various implementations.
5A, 5B, 5C, and 5D depict various non-limiting examples of related content interface notifications according to various implementations.
Fig. 6 depicts an example architecture of a computing device according to various implementations.
Detailed Description
FIG. 1 shows a block diagram of an example environment demonstrating aspects of the present disclosure. The client device 110 is shown in fig. 1 and includes an internet access resource engine 111, a presentation engine 112, and a pre-caching engine 113.
The internet resource access engine 111 can detect access of a given internet resource at the client device 110. Access to a given internet resource may be via one or more user interactions with a web browser or other software application installed on client device 110. As one non-limiting example, Internet resource engine 111 may be integrated as part of a web browser installed on client device 110 and may detect Internet resources accessed via the web browser. As another non-limiting example, internet resource engine 111 may be part of an operating system or assistant application of client device 110 and may detect internet resources accessed via a web browser application, social media application, or other application.
In response to access to a given internet resource, internet resource engine 111 can transmit a request for one or more interaction conditions to peek content system 180 over one or more networks 190 (e.g., Wi-Fi, bluetooth, a local area network, a wide area network, and/or other networks) to provide relevant content interface notifications for the accessed internet resource (e.g., as described in more detail in fig. 2B). The request may include, for example, a Uniform Resource Identifier (URI) of the internet resource. The request may also include navigation path data indicating a navigation path for accessing the internet resource. The navigation path data may be included in the URI (e.g., in a query component of the URI) and/or separate from the URI. The request may also optionally include an identifier of the client device 110 and/or an identifier of an account of the client device 110 (e.g., an account associated with access to an internet resource).
In response to transmitting the request, the client device 110 may receive one or more interaction conditions for the related content interface notifications, and optionally content for presentation in the related content interface notifications, for the accessed internet resources from peeking at the content system 180 and over the one or more networks 190. The content for presentation in the related content interface notification can include content for presentation at the time of initial presentation of the related content interface notification and/or after "expansion" of the related content interface notification (e.g., in response to a user interface input such as a tap, swipe up, swipe down, and/or other user interface input). The presentation engine 112 can monitor for the occurrence of interaction conditions and, in response to detecting that the interaction conditions are satisfied, present a related content interface notification. The related content interface notification may include related content related to the accessed internet resource. In some implementations, the relevant content can be pre-cached in one or more databases (not shown) of the client device 110 and can be retrieved using the pre-caching engine 113 for inclusion in the relevant content interface notification (e.g., as described in more detail in fig. 2B). In some versions of these implementations, the pre-caching engine 113 may store the underlying content of the related content (e.g., the content of the related internet resources) in one or more databases. In other versions of these implementations, the pre-caching engine 113 stores only an indication of relevant content, such as segments of relevant internet resources (e.g., as shown by 551A and 551B in fig. 5A and 5B), in one or more databases.
In some implementations, the peek content system 180 may be implemented at least in part by one or more servers. Peek content system 180 may include an attribute engine 130, a prediction engine 140, a related content generation engine 150, and a request engine 160. The attribute engine 130 may determine a plurality of attributes for a given internet resource. The plurality of attributes may include, for example, content attributes determined using the content attribute engine 131; the relevant content attributes determined using the relevant content attribute engine 132; navigation attributes determined using the navigation attributes engine 133; personal and/or global historical interaction attributes determined using historical interaction attributes engine 134; and/or other attributes determined using the attribute engine 130.
The prediction engine 140 may include an interaction condition engine 141 and an optional determination engine 142. The interaction condition engine 141 can apply a plurality of attributes as inputs across the machine learning model 140A to generate a prediction output. Based on the predicted output, the interaction condition engine 141 may determine interaction conditions for a given internet resource. Further, the determination engine 142 can determine whether the client device 110 should present the relevant content interface notification based on the interaction condition and/or based on a separate portion of the predicted output (i.e., a different portion of the predicted output used to generate the interaction condition). If the determination engine 142 determines that a relevant interface notification for an internet resource should be presented (at least for certain navigation paths and/or other conditions), then the interaction conditions determined by the interaction conditions engine 141 can be provided to the client device 110 by the peek content system 180. When the interaction condition is satisfied, the presentation engine 112 of the client device 110 can present the relevant content interface notification via a display of the client device 110. However, if determination engine 142 determines that client device 110 should not present the relevant content interface notifications, peek content system 180 may provide a response indicating that presentation of the relevant content interface notifications should not occur in response to a request associated with a resource from internet resource access engine 111, or peek content system 180 may refrain from providing any response.
In some implementations, when the determination engine 142 makes the determination based on a prediction output separate from the prediction output utilized by the interaction condition engine 141, the interaction condition engine 141 can optionally determine the interaction condition for a given resource only in response to the determination engine 142 determining that a relevant interface notification should be provided. Thus, where the determination engine 142 determines that a relevant content interface notification should not be provided for a corresponding internet resource, computational resources may be conserved by avoiding determining interaction conditions. As described herein, the interaction conditions determined by the interaction condition engine 141 are dynamic in that they may vary from internet resource to internet resource based on a plurality of attributes of the given internet resource and may vary for the given internet resource based on the navigation path used to access the given internet resource.
In some additional and/or alternative implementations, the content attribute engine 131 can generate one or more low-dimensional insertions of at least some content of a given internet resource, such as Word insertions of terms of the given internet resource (e.g., using Word2Vec or other techniques). For example, the content attribute engine 131 may generate word insertions based on the header, body, metadata, and/or other content of a given internet resource, where the words are embedded in the embedding space. By mapping the content of the internet resources to the embedding space, similar internet resources (e.g., different types) can be grouped together in the embedding space based on the underlying content of the internet resources. Further, in some additional and/or alternative implementations, the content attribute engine 131 can determine one or more structural attributes of at least some content of a given internet resource. The structural attributes may be based on which markup languages (e.g., XML tags or HTML tags) are included in a given internet resource and/or the organizational structure (e.g., order) of the markup languages. For example, assume that the internet resource is an airline's web page. In this example, the airline's web page will include structured information (e.g., flight date/time, cost, flight number, and/or other information). Thus, by considering the content attributes determined using the content attribute engine 131, the interaction conditions may vary for each internet resource accessed by the client device 110.
The related content attribute engine 132 may determine one or more query-independent metrics for related internet resources based on the related internet resources that are linked in the related content notifications for the internet resources or that are presented in response to selection of the related content interface notifications. As described in greater detail herein, the relevant content attribute engine 132 may utilize information processed by the relevant content engine 150. The query-independent metrics of the relevant internet resources may be based on, for example, the frequency of access of the internet resources, inbound links to the internet resources, and/or other query-independent attributes of the internet resources. Further, in some additional and/or alternative implementations, the related content attribute engine 132 may determine a strength of relationship between a given internet resource and one or more related internet resources. The strength of the relationship between a given internet resource and one or more related internet resources may be based on, for example, how many users accessed the two internet resources (optionally in close temporal proximity), the degree of overlap of the content of the internet resources (e.g., the subject matter of the internet resources), and/or the frequency with which the two internet resources appeared simultaneously in the search results.
In some versions of those additional and/or alternative implementations, the relevant content attribute engine 132 may consider only the relevant content attributes if the strength of the relationship between a given internet resource and one or more relevant internet resources satisfies a threshold. For example, for a web page of an example airline, assume that the web page of the hypothetical airline frequently co-occurs with the search results for flight information along with the example airline. Assume further that, in response to receiving search results for flight information, most users typically view a web page for the example airline, and then view a web page for the hypothetical airline. Based on the simultaneous presence of and access to the web pages of the example airline and the hypothetical airline, the relevant content attribute engine 132 may determine a strong strength of relationship (e.g., 0.8) between the web pages of the example airline and the web pages of the hypothetical airline that satisfies a threshold (e.g., 0.7). Further, the strength of the relationship may be based on a temporal proximity between the web page visiting the example airline and the web page visiting the hypothetical airline. For example, if most users visit a web page of a sample airline and immediately thereafter visit a web page of a hypothetical airline, the strength of relationship score (e.g., 0.9) may be stronger than if most users visited one or more other web pages in between (e.g., 0.6). Thus, the interaction conditions may vary for each internet resource by considering the relevant content attributes determined using the relevant content attribute engine 132 (e.g., as described in more detail herein with reference to fig. 5D).
The navigation attribute engine 133 can determine one or more particular navigation attributes for navigating to a given internet resource. In implementations where navigation attributes are used to determine whether to provide a relevant content interface notification and/or interaction condition, this determination (e.g., by the determination engine 142 of FIG. 1) is specific to the navigation attributes and is only used for access to a given Internet resource as a result of navigation consistent with the navigation attributes. In some of these implementations, the navigation attributes include a path attribute that indicates which of a plurality of navigation paths is used to access the internet resource (e.g., as described in more detail herein with reference to fig. 5A-5D). The interaction condition for the given internet resource may be further based on a navigation path for accessing the given internet resource.
For example, the navigation paths may include a path related to the query (e.g., a link to a given internet resource is presented as a search result in response to the query and is selected) and a path unrelated to the query (e.g., a link is selected to a given internet resource provided in an active "content feed" of the client device 110, or a navigation to a given internet resource by typing its URL in an address bar). For query-related paths, the navigation path may include a plurality of query-related paths (e.g., as described in more detail herein with reference to fig. 5B and 5C) corresponding to, for example, different query scopes. For example, if a given internet resource is accessed through a navigation path or broader query corresponding to an active content feed of the client device 110, the interaction condition may be "more aggressive" than if the given internet resource was accessed through a navigation path corresponding to a narrower query (e.g., navigation query).
In other words, if a given internet resource is accessed through a navigation path indicating that the user of the client device 110 is typically browsing the internet resource (e.g., typically using a content feed and/or a broad query for restaurants), the interaction condition may indicate that the user will be more likely to interact with the relevant content interface notification, and the relevant content interface notification may be provided quickly so that the user need not return to the content feed or search results page, thereby reducing user input at the client device 110. Conversely, if a given internet resource is accessed by a navigation path indicating that the user of the client device 110 is seeking a particular internet resource (e.g., using a navigation query for a particular restaurant), the determined interaction condition may indicate that the user is less likely to interact with the relevant content interface notification because the user is seeking the particular internet resource and the relevant content interface notification may be suppressed for a period of time (if provided). Thus, computing resources of the client device 110 may be conserved by delaying (or completely removing) the presentation of the relevant content interface notifications at the client device 110, and network resources (if any) may be conserved by providing the relevant content interface notifications at the correct time. Furthermore, it should be noted that when it is considered to save resources for a large number of users, a large amount of network resources may be saved.
Historical interaction attributes engine 134 may determine personal historical interaction attributes and/or global historical interaction attributes for a given internet resource. The historical interaction attributes engine 134 may determine personal historical interaction attributes for a given internet resource based on a past degree of measurement of past interactions by a given user of the client device 110 with respect to previous related content interface notifications (e.g., all previous related content interface notifications, recent notifications, and/or notifications with respect to internet resources determined to be similar to the given internet resource). Historical interaction attribute engine 134 may retrieve from personal interaction database 134A past interactions with the plurality of internet resources and/or past interactions with related content interface notifications presented when the user viewed each of the plurality of internet resources.
Further, the historical interaction properties engine 134 may determine global historical interaction properties for a given internet resource based on a measured past extent of past interactions of a plurality of additional users (i.e., in addition to the user of the client device 110) with respect to previous related content interface notifications for the given internet resource. These past interactions of a number of additional users may be retrieved from global interaction database 134B. For example, the global interaction database 134B may include interaction conditions (e.g., access duration and/or scrolling conditions) that were previously encountered by a number of additional users accessing a given Internet resource. Further, if the related content interface notification was presented during a previous visit, the global interaction database 134B may include an indication of whether each of the plurality of users interacted with the related content interface notification, and if so, the extent of the interaction (e.g., the underlying content of the related content interface notification was visited, additional related content of the related content interface notification was viewed, the related content interface notification was excluded, and/or other historical interactions).
As described above, the prediction engine 140 may include at least the interaction condition engine 141 and the determination engine 142. The prediction engine 140 may apply the plurality of attributes determined by the attribute engine 130 as inputs to the machine learning model 140A to generate a prediction output. Further, the interaction condition engine 141 can determine interaction conditions for a given internet resource based on the predicted output, and the determination engine 142 can also determine whether the client device 110 should present a relevant content interface notification based on the predicted output. If the determination engine 142 determines that the client device 110 should present the relevant content interface notification, the client device 100 can send a signal to the client device 110 to cause the presentation engine 112 to present the relevant content interface notification via the user interface of the client device 110 when the interaction condition is satisfied.
The interaction condition for a given internet resource may include, for example, a duration of access to the given internet resource (e.g., an elapsed time since the given internet resource was requested, retrieved, or presented), a scroll condition (e.g., whether scrolling has occurred, a degree of scrolling, a speed of scrolling, and/or a direction of scrolling). Furthermore, the interaction condition may depend on the navigation path used to access a given internet resource. As one example, for a first web page, the interaction condition may include a specified percentage of fifteen seconds duration to access and/or scroll the first web page, and for a second web page, the interaction condition may include a different specified percentage of ten seconds duration to access and/or scroll the second web page. As another example, the interaction condition may include an access duration of twenty seconds for a third web page and for access to the third web page via a first navigation path (e.g., a navigation path related to the query), and the interaction condition may include an access duration of fifteen seconds for the third web page and for access to the third web page via a second navigation path (e.g., a navigation path unrelated to the query). Note that when multiple interaction conditions are determined for a given resource, satisfaction of a condition may be determined when any one interaction condition is satisfied, or alternatively, when a combination of one or more (e.g., all) interaction conditions are satisfied (which would result in the provision of a relevant content interface notification). Thus, the interaction conditions are dynamic in that they may vary across internet resources and/or may even vary for a single internet resource (e.g., depending on the navigation path to access the internet resource and/or the client device and/or the user account to access the internet resource).
Moreover, by utilizing dynamic interaction conditions, peeking the content system 180 may reduce the occurrence of late and/or early offers of related content interface notifications, thereby reducing technical deficiencies of late and/or early. Moreover, as described herein, various implementations use machine learning models trained based on user interaction (or lack thereof) with previously provided related content interface notifications to determine dynamic interaction conditions, ensuring that late-arriving and/or early-arriving technical deficiencies are mitigated in general, at least in a population of users.
The machine learning model 140A used by the prediction engine 140 may be trained using the training engine 140A 1. The training engine 140A1 may utilize one or more training techniques to train the machine learning model 140A. The machine learning model 140A may include, for example, a neural network model, a support vector machine, a bayesian network, and/or other machine learning models. In some implementations, the training engine 140A1 may utilize reinforcement learning techniques to train the machine learning model 140A. In some other implementations, the training engine 140A1 may utilize supervised learning techniques to train the machine learning model 140A.
In implementations utilizing reinforcement learning training techniques, relevant content interface notifications may be presented while a user is consuming a given internet resource. For a given state-action space of a client device, discrete actions may be sampled to determine interaction conditions that provide relevant content interface notifications. In some implementations, training can be performed "on-line" (e.g., on-line)As described below), while in some additional and/or alternative implementations, training may be performed "offline" to guide the machine learning model 140A (e.g., as described in more detail herein with reference to fig. 3). For example, for a given state (e.g., s)1) The training engine 140A1 may sample multiple discrete actions (e.g., a)1、a2，...aNWhere N is a positive integer). The state may correspond to, for example, a plurality of attributes, and each discrete action may correspond to, for example, an access duration of a given internet resource and/or a scroll condition for the given internet resource. Further, the probability for each action and given state may be determined based on the predicted output of the machine learning model 140A. For example, the first discrete action may include a ten second access duration for the given internet resource and a scroll condition where the user scrolls 20% of the given internet resource; the second discrete action may include a twenty second duration of access to the given internet resource, but no scroll condition; and so on.
In some implementations, for each action of a given state, a given one of the discrete actions may be selected based on the probability, and other discrete actions similar to the selected action may be resampled. For example, the selected discrete action may include a ten second access duration for a given internet resource and a scroll condition where the user scrolls 20% of the given internet resource; the second discrete action may include a ten second access duration for the given internet resource and a scroll condition for the user to scroll through 25% of the given internet resource; the third discrete action may include a twelve second access duration for the given internet resource and a scroll condition where the user scrolls 20% of the given internet resource; and so on. Thus, a set of discrete actions may be analyzed, and a given discrete action (e.g., an interaction condition for a given internet resource) may be selected based on a respective probability for each discrete action in the set of discrete actions.
Further, based on the selected discrete action, the given client device may present the relevant content interface notification upon the interaction condition indicated by the given discrete action. Further, when the interaction condition indicated by a given discrete action is satisfied, the reward may be determined based on one or more user interactions (or lack thereof) with the related content interface notifications (e.g., as described in fig. 3). For example, one or more weights of the machine learning model 140A used to determine the probability associated with a given discrete action may be updated. In this manner, the machine learning model 140A may be updated for each discrete action in the discrete action space based on a plurality of user interactions by a plurality of users (optionally including or excluding a user of the client device 110).
In implementations utilizing supervised learning training techniques, similar to utilizing reinforcement learning techniques, relevant content interface notifications may be presented when a user is consuming a given internet resource. However, rather than sampling actions (e.g., interaction conditions) from a discrete action space of a given state (e.g., attributes of a given internet resource) as in reinforcement learning, multiple attributes of a given internet resource may be applied as inputs across a machine learning model to generate a prediction output. Further, the relevant content interface notifications may be presented via a user interface of the client device at or shortly after access to a given internet resource. Based on one or more user interactions (or lack thereof) with the relevant content interface notification, a ground truth output corresponding to the predicted output of the relevant content interface notification can be generated. Further, the ground truth output may be compared to the predicted output to determine an error, and the error may be propagated back across the machine learning model 140A (e.g., using one or more back propagation techniques), updating the machine learning model 140A based on the error.
For example, assume that the relevant content interface notification is presented with a web page and the user views the web page thirty seconds and scrolls 40% of the web page before interacting with the relevant content interface notification. Assume further that a predicted output is generated based on a plurality of attributes of the web page, and that the interaction conditions generated based on the predicted output include an access duration of 50 seconds and/or a scroll condition of 60%. In this example, the ground truth output may be generated based on a user viewing the web page for thirty seconds and scrolling through 40% of the web page. However, the predicted output generated based on the plurality of attributes of the web page results in an interaction condition of 50 seconds of access duration and/or 60% of scrolling condition. Accordingly, the ground truth output based on actual interaction with the relevant content interface notifications of the web page may be compared to the predicted output to generate an error, and the error may be propagated back across the machine learning model 140A. The technique may be performed iteratively for multiple internet resources and based on interactions of multiple users. Furthermore, each iteration may focus on a single interaction condition and/or each interaction condition. In this manner, for a given internet resource, the machine learning model 140A may be iteratively updated using supervised learning techniques.
Additionally, the determination engine 142 can also utilize the prediction output from the machine learning model to determine whether relevant content interface notifications should be provided to the user of the client device 110 and/or whether interaction conditions should be stored in the interaction condition database 145. For example, fig. 2A depicts some of the components of fig. 1, and example interactions that may occur between such components, according to various implementations. The attribute engine 130 may determine a plurality of attributes 206 including a content attribute 201, a navigation attribute 202, a personal interaction attribute, a global interaction attribute 204, and/or a related content attribute 205. Prediction engine 140 may process attributes 206 using machine learning model 140A to generate prediction output 207.
In some implementations, the interaction condition engine 141 may determine the interaction condition 208, and the interaction condition 208 may be stored in the interaction condition database 145. In some versions of those implementations, the interaction conditions 208 are indexed by an internet resource, and optionally, by each navigation path of each internet of the internet resource. For example, the interaction conditions 208 for a given internet resource may be stored in the interaction condition database 145 as a URI and/or URL for the given internet resource. Furthermore, different interaction conditions specific to each navigation path for accessing a given internet resource may be stored in association with the URI and/or URL of the given internet resource. By indexing the interaction conditions 208 in the interaction condition database 145 based on URIs and/or URLs and, optionally, different navigation paths for accessing a given internet resource, the interaction conditions 208 may be quickly identified in response to the request 209, thereby reducing latency in responding to the request 209. This enables the interaction conditions 208 to be determined once for a given internet resource, but for multiple requests, thereby preventing computationally intensive re-determination of the interaction conditions 208 for each request (although the interaction conditions 208 may be updated in response to changes in the content of the internet resource and/or updated versions of the machine learning model 140A).
In some versions of those implementations, determination engine 142 may determine whether interaction conditions 208 should be stored in interaction conditions database 145 before interaction conditions 208 are stored in interaction conditions database 145. For example, if a given internet resource is accessed via an active content feed, it is likely that the interaction conditions 208 will indicate that a shorter access duration and/or less stringent scrolling conditions need to be met to present the relevant content interface notification, and the determination engine 142 may provide an indication of the stored interaction conditions 208. Conversely, if a user accesses a given internet resource by entering a URL in a search bar (e.g., www.exampleurl.com), it is likely that the interaction conditions 208 will indicate that very long access durations and/or very strict scrolling conditions need to be met to present the relevant content interface notifications, and the determination engine 142 may provide an indication that the interaction conditions 208 should not be stored in the interaction conditions database 145. In other words, the determination engine 142 may prevent the interaction condition of the internet resource and the navigation path from being stored, or may store a "null" interaction condition indicating that the internet resource and the related content interface indication of the navigation path should not be provided.
In some other implementations, the determination engine 142 may determine whether the interaction condition engine 141 should even determine the interaction condition 208 based on the predicted output (e.g., a portion of the predicted output different from that used to determine the interaction condition 208). For example, assume that the prediction output 207 includes prediction probabilities, but each prediction probability does not satisfy the threshold for determining the interaction condition 208 using the interaction condition engine 141. In this example, determination engine 142 may analyze the prediction probability of prediction output 207 and instruct interaction condition engine 141 to stop any processing and/or determination of interaction condition 208. Thus, by using the determination engine 142, the prediction engine 140 can prevent unnecessary processing, thereby saving computational resources.
Referring back to FIG. 1, the relevant content generation engine 150 can identify relevant content for inclusion in the relevant content interface notification. The related content generation engine 150 may identify related content for related content interface notifications based on how many users accessed the accessed internet resource and related internet resource (optionally in close temporal proximity), the degree of overlap of the content of the accessed internet resource and related internet resource (e.g., the subject matter of the internet resource), and/or the frequency with which the accessed internet resource and related internet resource appear concurrently in the search results. The related content generation engine 150 may identify related internet resources using similar techniques as the related content attribute engine 132. For example, for a web page of an example airline, assume that the web page of the hypothetical airline frequently co-occurs with the search results for flight information along with the example airline. Assume further that, in response to receiving search results for flight information, a user typically views a web page for an example airline, and then views a web page for a hypothetical airline. Based on the simultaneous presence of and access to the web pages of the example airline and the hypothetical airline, the relevant content generation engine 150 can determine that the web pages of the example airline and the hypothetical airline are relevant. Further, the strength of the relationship between the example airline's web page and the hypothetical airline's web page may be based on the temporal proximity between the visited web pages. For example, if a user visits a web page of an example airline and then immediately visits a web page of a hypothetical airline, the strength of the relationship may be stronger than if the user visited one or more other web pages in between. In this manner, the relevant content attribute engine 132 can utilize the information processed by the relevant content generation engine 150.
In some implementations, the peek content system 180 may send the interaction conditions 208 and/or the related content 210 to the presentation engine 112 of the client device 110 in response to determining the interaction conditions 208. When the client device 110 determines that the interaction condition 208 is satisfied, the presentation engine 112 can present a related content interface notification 211 that includes related content 210. In some other implementations, the peek content system 180 may send the interaction conditions 208 to the presentation engine 112 of the client device 110, but refrain from sending the relevant content 210 to the presentation engine 112 until the peek content system 180 receives an indication from the client device 110 that the interaction conditions 208 are satisfied. For example, if the interaction condition 208 is "less aggressive" because the navigation path indicates that the user accessed an internet resource in response to entering a URL for the internet resource, then the interaction condition 208 is unlikely to be satisfied, and the peek content system 180 may avoid wasting network resources by suppressing the sending of the related content 208. As another example, if the interaction condition 208 includes an access duration of fifty seconds and/or a scrolling condition of 95% of the internet resources (as the navigation path indicates that the user accessed the internet resources in response to entering the URL of the internet resource), the peek content system 180 may refrain from sending the related content 208 for a particular period of time (e.g., forty-five seconds of the fifty-second access duration) or until the particular scrolling condition is met as the interaction condition (e.g., 85% of the 95% scrolling condition). Thus, in the event that the interaction condition 208 is "less aggressive," computational resources may be conserved by avoiding sending the relevant content 210 to the client device 110, as compared to sending the interaction condition and the relevant content 210 immediately in response to a determination to peek at the content system 180.
In some other implementations, the peek content system 180 may send the interaction conditions 208 to the presentation engine 112 of the client device 110 and send the relevant content 210 to the client device 110 for pre-caching by the pre-caching engine 113 until the interaction conditions 208 are met. The pre-caching engine 113 can store the relevant content 210 in one or more databases (not shown) of the client device 110. In some versions of these implementations, determining whether to pre-cache (and/or the degree of pre-caching) the relevant content 210 at the client device 110 viewing a given internet resource may be based on the interaction condition 208. For example, when the determined interaction conditions 208 for the accessed internet resource include a duration of greater than thirty seconds, the relevant content 210 may be determined not to be pre-cached, to a first extent when the interaction conditions include a duration of fifteen to thirty seconds, and to a greater extent (e.g., more relevant content items and/or more relevant content items) when the interaction conditions include a duration of less than fifteen seconds. By pre-caching the relevant content 210, latency in presenting the relevant content 210 may be reduced if the relevant content 210 is selected in the relevant content interface notification 211.
Fig. 3 depicts a flow diagram illustrating an example 300 method of training a machine learning model according to various implementations. For convenience, the operations of method 300 are described with reference to a system that performs the operations. The system of method 300 includes one or more processors and/or other components of a computing device (e.g., a combination of client device 110 of peek content system 180 of fig. 1, 2A, and 2B, computing device 610 of fig. 6, one or more servers, and/or other computing devices). Further, while the operations of method 300 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, or added.
At block 352, the system determines whether the internet resource is accessed. If, in an iteration of block 352, the system determines that the internet resource has not been accessed, the system may continue to monitor access to the electronic resource at block 352. If, in an iteration of block 352, the system determines that an internet resource is accessed, then it may proceed to block 354. At block 354, the system causes the given client device to present the relevant content interface notification while the user is consuming the accessed internet resource. At block 356, the system determines the reward based on one or more user interactions (or lack thereof) with the relevant content interface notifications.
In some implementations, the one or more user interactions (or lack thereof) used to determine the reward may be based on a degree of one or more user interactions with the related content interface notification presented for the given internet resource, a duration of access to the given internet resource after the related content interface notification is presented and before the one or more user interactions with the related content interface notification, and/or a scroll condition (e.g., whether scrolling has occurred, a degree of scrolling, a speed of scrolling, and/or a direction of scrolling) of the internet resource after the related content interface notification is presented and before the one or more user interactions with the related content interface notification. For example, assume that a user visits a web page of a hypothetical cafe, a hypothetical restaurant that provides purely vegetarian dishes located in lewis verval, kentucky. Further assume that when the user is viewing the webpage of the hypothetical cafe via the user interface of the user's client device, a related content interface notification is presented that includes links and/or information of other webpages related to the webpage of the hypothetical cafe.
In some of these implementations, the reward may vary based in part on the degree of one or more user interactions (i.e., how the user interacts with the relevant content interface notifications). For example, if the user accesses the underlying content of the additional web pages linked to presented in the related content interface notification while the user is viewing the web page of the fictitious cafe, the system may determine a reward that is a very strong indicator (e.g., 1.0) of providing the related content interface notification. In contrast, if the user removes the presented related content interface notification while the user is viewing the webpage of the fictitious cafe, the system may determine a reward that is a very poor indicator (e.g., 0.0) for providing the related content interface notification. However, if the user does not remove or interact with the presented related content interface notification while viewing the webpage of the fictitious cafe, the system may determine a reward that is a poor indicator (e.g., 0.2) of providing the related content interface notification.
In various implementations, the reward may also vary based in part on the duration of access of a given internet resource after presentation of the related content interface notification and prior to one or more user interactions (or lack thereof) with the related content interface notification. For example, if the user only viewed the webpage of the hypothetical cafe for ten seconds after presenting the relevant content interface notification and before interacting with the relevant content interface notification (e.g., as described in fig. 5A-5D), the system may determine a reward that is a strong indicator (e.g., 0.8) of providing the relevant content interface notification. Conversely, if the user views the webpage of the hypothetical cafe for more than sixty seconds after presenting the relevant content interface notification and before interacting with the relevant content interface notification, the system may determine the reward as a graceful indicator (e.g., 0.4) that provides the relevant content interface notification.
In various implementations, the reward may also vary based in part on the scrolling conditions of the internet resource (e.g., whether scrolling has occurred, the degree of scrolling, the speed of scrolling, and/or the direction of scrolling) after the related content interface notification is presented and before one or more user interactions (or lack of interaction) with the related content interface notification. For example, if the user views the webpage of the hypothetical cafe only ten seconds after presenting the related content interface notification and does not scroll (or quickly scroll to the bottom of the webpage of the hypothetical cafe) before interacting with the related content interface notification (e.g., as described in fig. 5A-5D), the system may determine an incentive that is a very strong indicator (e.g., 1.0) of providing the related content interface notification even though the user may not have accessed any underlying content of other webpages included in the related content interface notification. Further, if the user views the web page of the hypothetical cafe for more than sixty seconds after presenting the related content interface notification and slowly scrolls to the bottom of the web page of the hypothetical cafe without ever interacting with the related content interface notification, the system may determine a reward that is a poor indicator (e.g., 0.2) of providing the related content interface notification.
In this manner, one or more user interactions (or lack thereof) used in determining the reward may be based on a degree of one or more user interactions with the related content interface notification presented for the given internet resource, a duration of access to the given internet resource prior to the one or more user interactions with the related content interface notification, and/or a scroll condition of the internet resource prior to the one or more user interactions with the related content interface notification. In some additional and/or alternative implementations, the system can also determine a penalty based on one or more user interactions with the relevant content interface notifications. For example, where the reward is a very poor indicator (e.g., the user removes the relevant content interface notification and/or other instances) and/or a poor indicator (e.g., the user does not interact with the relevant content interface notification), the system may determine a penalty (e.g., -1.0). In these cases, the penalty may be combined with any reward to determine the total reward.
At block 358, the system may update the machine learning model based on the determined reward. Thus, the machine learning model may be trained to determine whether and/or when to provide relevant content interface notifications based on a given internet resource, which may vary for each internet resource. Although the machine learning model of fig. 3 is described as being updated based on rewards via reinforcement learning techniques, it should be understood that this is not meant to be limiting. In some additional and/or alternative implementations, other machine learning techniques can be used to update the machine learning model, such as supervised learning techniques, as described herein (e.g., with reference to fig. 1).
Further, in some implementations, the machine learning model may be implemented by a client device of the user, one or more servers in communication with the client device of the user via one or more networks (e.g., network 190 of fig. 1), and/or a client device in conjunction with one or more servers. Further, in some implementations, the machine learning model may also be trained based on one or more user interactions with a plurality of additional users that visit the same web page as the user, such that the machine learning model is a global machine learning model. In some versions of these implementations, the machine learning model may be further trained based on one or more user interactions of a given user such that the global machine learning model is tailored to the given user, resulting in a personalized machine learning model.
FIG. 4 depicts a flow diagram that illustrates an example method 400 of determining whether and/or when to present a relevant content interface notification in accordance with various implementations. For convenience, the operations of method 400 are described with reference to a system performing the operations. The system of method 400 includes one or more processors and/or other components of a computing device (e.g., a combination of client device 110 of peek content system 180 of fig. 1, 2A, and 2B, computing device 610 of fig. 6, one or more servers, and/or other computing devices). Further, while the operations of method 400 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, or added.
At block 452, the system determines a plurality of attributes of the internet resource. The plurality of attributes of the internet resource may include, for example, a content attribute, a navigation attribute, a global history attribute, a personal history attribute, and/or a related content attribute. Each attribute is described in more detail herein (e.g., with respect to fig. 1, 2A, and 2B), and how each attribute affects whether and/or when a related content interface notification is presented (e.g., with respect to fig. 5A-5D) is also described in more detail herein.
At block 454, the system processes the plurality of attributes using a machine learning model to generate a prediction output. For example, the system may generate the prediction output by applying a plurality of attributes as inputs across the machine learning model. Further, the machine learning model may be trained based on one or more interactions (or lack thereof) of the given user and/or a plurality of additional users with previously provided related content interface notifications (e.g., as described in more detail in fig. 1 and 3).
At block 456, the system determines one or more interactions for triggering the provision of the relevant content interface notifications to the internet resource based on the predicted output. The interaction condition for a given internet resource may include, for example, a duration of access to the given internet resource (e.g., an elapsed time since the given internet resource was requested, retrieved, or presented) and/or a scrolling condition (e.g., whether scrolling has occurred, a degree of scrolling, a speed of scrolling, and/or a direction of scrolling). The interaction conditions are dynamic in that they may vary from one internet resource to another, and/or may even vary for a single internet resource (e.g., depending on the navigation path to access the internet resource and/or the client device and/or the user account to access the internet resource). As an example, for the first web page, the interaction condition may include an access duration indicating 20 seconds to access the first web page and/or a scroll condition indicating to scroll 50% of the first web page. Conversely, for the second web page, the interaction condition may include an access duration indicating a 15 second visit of the second web page and/or a scroll condition indicating scrolling through 20% of the second web page. As another example, for a third web page, and for access to the third web page via a first navigation path (e.g., a query-independent path of a content feed via a given client device), the interaction condition may include a 10-second access duration to the third web page. However, for a third web page, and for access to the third web page via a second navigation path (e.g., a query-related path of a navigation query submitted via a given client device), the interaction condition may include an access duration of 30 seconds for the third web page.
At block 458, the system determines whether the internet resource is accessed at a given client device of the user. If, in the iteration of block 458, the system determines that the internet resource is not accessed at the user's given client device, the system may wait for the internet resource to be accessed at block 458. If, in the iteration of block 458, the system determines that an internet resource was accessed at a given client device of the user, in some implementations, the system may proceed to block 460.
At block 460, the system determines whether one or more interaction conditions for the internet resource are satisfied. Note that satisfaction of an interaction condition may be determined when multiple interaction conditions are determined for a given internet resource, when any one interaction condition is satisfied, or alternatively, when a combination of one or more (e.g., a subset or all) interaction conditions is satisfied. If, in an iteration of block 460, the system determines that one or more interaction conditions are not satisfied, then, in block 460, the system may continue to monitor for satisfaction of one or more interaction conditions of the internet resource. If, in an iteration of block 460, the system determines that one or more interaction conditions are not satisfied, the system may proceed to block 462.
At block 462, the system presents the relevant content interface notification via a user interface of the client device. In some implementations, while presenting the relevant content interface notification, the system can monitor one or more user interactions with the relevant content interface notification and update the machine learning model during the inference based on the one or more user interactions. In some versions of these implementations, the system may determine a reward based on one or more user interactions (e.g., as described in fig. 1 and 3), and may update the machine learning model based on the determined reward. In some other versions of those implementations, the system may determine a ground truth output for a given relevant content interface notification based on one or more user interactions (e.g., as described in fig. 1 and 3), and may update the machine learning model based on comparing the ground truth output to the predicted output. In this manner, the machine learning model may be continually updated based on one or more user interactions with the relevant content interface notifications.
5A-5D depict various non-limiting examples of related content interface notifications according to various implementations. A client device 510 is depicted, which includes a user interface 580. The user interface 580 of the client device 510 includes various system interface elements 591, 592, and 593 (e.g., hardware and/or software interface elements) with which a user may interact to cause the client device 510 to perform one or more actions. Further, the user interface 580 of the client device 510 enables a user to interact with content presented on the user interface 580 through touch input (e.g., by directing user input to the user interface 580) and/or through voice input (e.g., by selecting the microphone interface element 594 — or merely by speaking without having to select the microphone interface element 594 (i.e., an automated assistant executing at least partially on the client device 510 may monitor one or more terms or phrases and/or other conditions to activate voice input)).
Notably, fig. 5A-5D depict various examples of whether and/or when to present a relevant content interface notification on user interface 580 of client device 510 based on one or more interaction conditions. As described herein, determining one or more interaction conditions for a given web page may be based on a plurality of attributes, and based on whether the one or more interaction conditions are satisfied, determining whether to provide a relevant interface notification may vary from internet resource to internet resource and/or may even vary for a single internet resource (e.g., depending on a navigation path to access the internet resource and/or the client device and/or a user account to access the internet resource). The plurality of attributes may include, for example, content attributes, navigation attributes, global history attributes, personal history attributes, and/or related content attributes.
Turning first to fig. 5A, a web page of a "hypothetical cafe" 530A, which is a hypothetical restaurant offering purely vegetarian dishes located in louisiverner, kentucky, is presented on the user interface 580 of the client device 510, and is associated with a URL 525A ("www.exampleurl1.com/. As shown by navigation path 520A, the web page of hypothetical cafe 530A is accessed based on the user's selection of the web page of hypothetical cafe 530A from the content feed of client device 510. The content feeds of the client device 510 may include, for example, social media feeds for a social media account associated with a user of the client device 510, active content feeds for a home screen of the client device 510, and/or other content feeds accessible to the client device 510. In some implementations, as shown in fig. 5A, the URL 525A may be embedded with an indication of a navigation path 520A for accessing a webpage of the hypothetical cafe 530A (e.g., "/.
In some implementations, the one or more interaction conditions of the web page of the hypothetical cafe 530A of fig. 5A can be based, at least in part, on the navigation attributes. The navigation attributes of the web page of the hypothetical cafe 530A in fig. 5A can be based on a navigation path 520A indicating that the user visited the web page of the hypothetical cafe 530A via the content feed (e.g., a navigation path unrelated to the query). Based on the user accessing the web page of the hypothetical cafe 530A via the content feed, the relevant content interface notification 550A is more likely to be provided and/or will be provided with a "more aggressive" interaction condition (e.g., as described in fig. 5B and 5C) than accessing a given internet resource as a result of the query.
Notably, in FIG. 5A, client device 510 has presented the relevant content interface notification 550A as an expanded "peek" via user interface 580, even though the user has not scrolled (or minimally scrolled) the web page of hypothetical coffee shop 530A (e.g., as shown by scrollbar 585; address information, contact information, and/or hours of operation for hypothetical coffee shop displayed on user interface 580; the top of the menu of the hypothetical coffee shop being displayed, e.g., only the appetizer 532 and first partial main menu 534; and/or other scrolling condition signals). However, even if the user does not scroll the web page of the hypothetical cafe 530A, the client device 510 can still present the relevant content interface notification 550A on the user interface 580 based on one or more interaction conditions being satisfied. Thus, the navigation path 520A may provide an indication that the user may generally be browsing the content feeds of the web pages of the restaurant (or, more particularly, the web pages of the vegetarian restaurant), and the relevant content interface notification 550A may enable the user to efficiently navigate to other web pages of the restaurant without having to return to the content feed to identify other web pages of the restaurant and/or other relevant content.
Further, in some implementations, one or more interaction conditions of the web page of the hypothetical cafe 530A of fig. 5A can be based at least in part on historical interaction attributes. Historical interaction attributes may include, for example, personal historical interaction attributes and/or global historical interaction attributes. For example, with respect to the personal historical interaction attributes, assume that the user has previously visited a plurality of other web pages from the content feed, and further assume that the user's visit to each of the plurality of other web pages lasts only between ten and fifteen seconds. In this example, the interaction condition may indicate that the related content interface notification 550A should be provided after a visit duration of five seconds, regardless of any scrolling conditions, since it is likely that the user will exit the webpage of hypothetical cafe 530A within ten to fifteen seconds of initially visiting the webpage of hypothetical cafe 530A. As another example, with respect to the global historical interaction attribute, assume that a plurality of additional users (e.g., in addition to the user of client device 510, or including the user of client device 510) previously visited a plurality of other web pages related to a restaurant, and further assume that the plurality of additional users visited the other web pages for an average duration of only between eight and ten seconds. In this example, the interaction condition may indicate that the related content interface notification 550A should be provided after a three second visit duration, regardless of any scrolling condition, since it is likely that the user will also exit the webpage of the hypothetical cafe 530A within eight to ten seconds of the initial visit to the webpage of the hypothetical cafe 530A. Thus, the historical interaction attributes may provide an indication of how the user and/or a number of additional users of the client device 510 typically browsed and/or interacted with web pages, and the related content interface notification 550A may enable the user to efficiently navigate to other web pages of the restaurant without having to return to the content feed to identify other web pages of the restaurant and/or other related content.
The related content interface notification 550A may include the interactive element 550 and related content 551A and 552A. The interactive element 550 may enable a user of the client device 510 to view additional related content (e.g., as indicated generally by 553A) while interacting (e.g., via a touch input sliding upward on the interactive element 550 or a voice input viewing more related content). For example, upon interacting with the interactive element 550, the relevant content interface notification 550A may consume a larger portion of the user interface 580 such that it overlays and/or overrides the user interface 580. Further, the interactive element 550 can enable the related content interface notification 550A to be removed upon interaction (e.g., via touch input sliding down on the interactive element 550 or voice input removing the related content interface notification 550A).
Further, the relevant content included in the relevant content interface notification 550A can be identified using a relevant content generation engine (e.g., the relevant content generation engine 150 of fig. 1). The related content may include information about the related content (e.g., a description of the related content, business hours of a business associated with the related content, etc.), a link to underlying content associated with the related content (e.g., another web page associated with the related content), hyperlinked text for accessing the underlying content associated with the related content, actionable content (e.g., a phone number, address, and/or other interface elements that, when selected, cause the client device 510 to perform one or more actions), and/or other information. For example, relevant content 551A and 552B of FIG. 5A include indications of other hypothetical vegetarian restaurants located in Louisville, Kentucky (e.g., "example vegetarian restaurant" and "everything on beet"). In addition, the related content 551A and 552B of fig. 5A includes links (e.g., "www.exampleurl2.com" and "www.exampleurl3.com", respectively) and descriptions of the related content 551A and 551B (e.g., "farm-to-table plain restaurant" and "beet-specific dish", respectively). Thus, the user can interact with the related content interface notification 550A presented as an expanded "peek" by interacting with the related content 551A and 551B, or by interacting with the interactive element 550, to view additional related content (e.g., as generally indicated by 553A) or to remove the related content interface notification 550A.
Turning now to FIG. 5B, a web page of hypothetical cafe 530A is presented on user interface 580 of client device 510. However, in contrast to FIG. 5A, the web page of hypothetical coffee shop 530A is associated with a URL 525B ("www.exampleurl1.com/. As shown by navigation path 520B, the web page of hypothetical cafe 530A is accessed based on the query "vegetarian restaurant in lewis verval, kentucky" (e.g., typed or spoken) submitted at the client device 510. The query "vegetarian restaurants in lewis verval, kentucky" may be classified as a broader query than other queries (e.g., the navigation query described in fig. 5C). In some implementations, as shown in fig. 5B, the URL 525B may be embedded with an indication of a navigation path 520B (e.g., "/.
In some implementations, the one or more interaction conditions of the web page of the hypothetical cafe 530A of fig. 5B can be based at least in part on the navigation attributes, and the one or more interaction conditions can be different from the interaction conditions of fig. 5A. The navigation attributes of the web page of the hypothetical cafe 530A in fig. 5B can be based on a navigation path 520B, which navigation path 520B indicates that the user accessed the web page of the hypothetical cafe 530A via a query (e.g., a navigation path related to the query). Based on the user accessing the web page of the hypothetical cafe 530A via the query, the related content interface notification 550A is more likely and/or will be provided with a "less aggressive" interaction condition than accessing the given internet resource via the content feed (e.g., as described in fig. 5A), but the related content interface notification 550A is more likely and/or will be provided with a "more aggressive" interaction condition than accessing the given internet resource via a narrower query (e.g., the navigation query described in fig. 5C).
Notably, in FIG. 5B, once the user has scrolled through some portion (e.g., 50%) of the webpage of the hypothetical cafe 530A, the client device 510 has presented the relevant content interface notification 550A as an expanded "peek" via the user interface 580 (e.g., as shown by the scroll bar 585; the middle portion of the menu being displayed, such as the second portion main menu 534, dessert 536, and first portion beverage 538; and/or other scrolling condition signals). Further, the interaction condition may also include a duration of access to the webpage of the hypothetical cafe 530A, and the client device 510 may present the relevant content interface notification 550A via the user interface 580 based on the duration of access and/or the scroll condition. For example, if the user views the webpage of hypothetical cafe 530A for forty seconds without scrolling the webpage of hypothetical cafe 530A, client device 510 may present related content interface notification 550A via user interface 580. As another example, if the user only viewed the webpage of hypothetical cafe 530A for twenty seconds, but has scrolled 50% of the webpage of hypothetical cafe 530A, client device 510 may present related content interface notification 550A via user interface 580. Thus, the interaction condition for a given internet resource may be various combinations of access duration, scrolling conditions, navigation paths, and/or other conditions.
Turning now to FIG. 5C, a web page of hypothetical cafe 530A is presented on user interface 580 of client device 510. However, in contrast to FIGS. 5A and 5B, the web page of hypothetical cafe 530A is associated with URL 525C ("www.exampleurl1.com/. As indicated by navigation path 520C, the web page of hypothetical cafe 530A is accessed based on a query (e.g., typed or spoken) of "hypothetical cafe of lewis verl" submitted at client device 510. In contrast to other more extensive queries (e.g., the query "vegetarian restaurant in lewis verval, kentucky" depicted in fig. 5B), queries for "hypothetical cafe in lewis verval" may be classified as navigation queries. In some implementations, as shown in fig. 5C, the URL 525C may be embedded with an indication of a navigation path 520C for accessing a web page of the hypothetical cafe 530A (e.g., "/.
In some implementations, the one or more interaction conditions of the web page of the hypothetical cafe 530A of fig. 5C can be based at least in part on the navigation attributes, and the one or more interaction conditions can be different from the interaction conditions of fig. 5A and 5B. The navigation attributes of the web page of the hypothetical cafe 530A in fig. 5C can be based on a navigation path 520C that indicates that the user accessed the web page of the hypothetical cafe 530A via a navigation query (e.g., a navigation path related to the query). Based on a user accessing a web page of the hypothetical cafe 530A via a navigation query, the related content interface notification 550A is more likely to be provided and/or will be provided with a "less aggressive" interaction condition than if the given internet resource was accessed via a content feed or a broader query (e.g., as described in fig. 5A and 5B). In some other implementations, when the navigation path indicates that the user accessed the web page via the navigation query, the interaction condition may indicate that the related content interface notification should not be presented (e.g., related content interface notification 550A of fig. 5C is depicted as a dashed line). In some implementations, the interaction condition can also include an indication of how to present the relevant content interface notification 550A (e.g., how much, if any, relevant content to include in the relevant content interface notification 550A).
Notably, in FIG. 5C, once the user has scrolled some portion (e.g., 100%) of the web page of the hypothetical cafe 530A, the client device 510 has presented the relevant content interface notification 550A as a compressed "peek" via the user interface 580 (e.g., as shown by the scroll bar 585; some disclaimer and other information about the hypothetical cafe; and/or other scrolling condition signals). Further, the interaction condition may also include a duration of access to the webpage of the hypothetical cafe 530A, and the client device 510 may present the relevant content interface notification 550A via the user interface 580 based on the duration of access and/or the scroll condition. However, in contrast to fig. 5A and 5B, the related content interface notification 550A in fig. 5C does not include any of the related content 551A and 551B, but is merely an indication (e.g., a compressed "peek") that additional related content (e.g., as generally indicated by 553A) is available as indicated by the interaction condition. For example, if the user has viewed the webpage of hypothetical cafe 530A for more than ninety seconds without scrolling the webpage of hypothetical cafe 530A, or has scrolled less than a particular portion specified by the interaction condition, the client device 510 can present the relevant content interface notification 550A via the user interface 580. As another example, if the user views the webpage of hypothetical cafe 530A for more than seventy seconds and has scrolled to the bottom of the webpage of hypothetical cafe 530A, the client device 510 can present the relevant content interface notification 550A via the user interface 580. Thus, the interaction condition for a given internet resource may be various combinations of access duration, scrolling conditions, navigation paths, and/or other conditions.
It should be noted that although the related content interface notification 550A of FIG. 5C is the only one notification displayed as a condensed "peek," this should not be for exemplary purposes, nor is it meant to be limiting. For example, the relevant content interface notification 550A of fig. 5A and/or 5B may also be presented as a condensed "peek". Further, it should be noted that fig. 5A-5C depict the same web page for the hypothetical cafe 530A, but the interaction conditions are different based on different navigation paths, and thus, when these different interaction conditions are satisfied, the client device presents the related-content interface notification 550A. Further, although each "peek" of fig. 5A-5C is presented at the bottom of user interface 580, it should be noted that each "peek" may be presented at the top of user interface 580 or on either side of user interface 580.
Turning now to fig. 5D, a web page for "example airline" 530A is presented on the user interface 580 of the client device 510 and is associated with a URL 525D ("www.exampleurl4.com/. As shown by navigation path 520D, the web page of the hypothetical cafe 530A is accessed based on the query (e.g., typed or spoken) of "example flight from SDF to DCA" submitted at the client device 510. Queries for "example flights from SDF to DCA" may be classified as navigation queries, as compared to other broader queries (e.g., "flights from SDF to DCA" queries). In some implementations, as shown in fig. 5D, the URL 525D may be embedded with an indication of a navigation path 520C for accessing a web page of the example airline 530D (e.g., "/.
In some implementations, one or more interaction conditions, such as the web pages of the example airline 530D of fig. 5D, can be based at least in part on the navigation attributes. The navigation attributes of the web page of the example airline 530D, for example, in fig. 5D, can be based on a navigation path 520D that indicates that the user accessed the web page of the example airline 530D via a navigation query (e.g., a navigation path related to the query). Based on the user accessing the web page of the example airline 530D via the navigation query, the related content interface notification 550A is more likely to be provided and/or will be provided with a "less aggressive" interaction condition than if the given internet resource was accessed as a result of a content feed or a broader query.
However, in some implementations, one or more interaction conditions, such as the web page of the example airline 530D of fig. 5D, may be based at least in part on one or more content attributes. The one or more content attributes may include, for example, a type attribute indicating a plurality of different types of types/verticals to which a given internet resource conforms, a low-dimensional embedding of at least some content of the given internet resource, a structural attribute of at least some content of the given internet resource, and/or other content attributes. For example, the content attributes of the example airline 530D web page in fig. 5D may include a travel type, or more specifically an airline travel type, underlying content of the example airline 530D web page, low-dimensional embedding (e.g., flight date/time, ticket price, flight number, etc.) of at least some of the content of the example airline 530D web page, and/or other content attributes.
Further, in some implementations, one or more interaction conditions, such as the web pages of the example airline 530D of fig. 5D, can be based at least in part on one or more relevant content attributes. The relevant content attributes may be based on one or more relevant internet resources linked in a relevant content interface notification of the internet resources (or presented in response to selection of the relevant content interface notification). For example, the relevant content attributes may be based on query-independent metrics determined for one or more relevant internet resources. The query-independent metrics of the internet resources may be based on, for example, the frequency of access of the internet resources, inbound links to the internet resources, and/or other query-independent attributes of the internet resources. The relevant content attributes of the relevant internet resources may additionally or alternatively be based on the strength of the relationship between the relevant internet resources and a given internet resource. The strength of the relationship between the relevant internet resource and a given internet resource can be based on, for example, how many users accessed the two internet resources (optionally in close temporal proximity), the degree of overlap of the content of the internet resources (e.g., the subject matter of the internet resources), and/or the frequency with which the two internet resources appeared simultaneously in the search results. For example, if a user viewing a web page of the example airline 530D typically subsequently views a web page of a hypothetical airline and/or views web pages of other pages of the travel type (optionally in close proximity in time), the relevant content attributes may indicate that the user typically views these other web pages and/or that they are co-occurring in search results responsive to queries regarding air travel.
Notably, in FIG. 5D, the client device 510 has presented the relevant content interface notification 550D as an extended "peek" via the user interface 580, even though the user has not scrolled (or minimally scrolled) the web page of the example airline 530D (e.g., as shown by the scroll bar 585; contact information for the airline is displayed on the user interface 580; the top of the flight date/time is displayed, such as just the flight 540 from the SDF to the DCA; and/or other scrolling condition signals). However, even if the user does not scroll through the web page of the example airline 530D, the client device 510 can still present the relevant content interface notification 550A on the user interface 580 based on one or more interaction conditions being satisfied. Further, compared to FIG. 5C, although the user accessed the web page for the example airline 530D via the navigation query for "example airline flight from SDF to DCA," the interaction condition is "more aggressive". Based on the content attributes and/or related content attributes of the web pages of the example airline 530D, the interaction condition of the web pages of the example airline 530D may be "more aggressive" than the interaction condition of the web pages of the hypothetical cafe 530A, even though the user has navigated to the web pages of the hypothetical cafe 530A and the web pages of the example airline 530D via navigation queries (e.g., "hypothetical cafe of lewis ville" and "example airline flight from SDF to DCA," respectively). For example, the interaction condition for the web page of the example airline 530D can indicate that the related content interface notification 550D should be presented without a scrolling condition after a 5 second access duration for the web page of the example airline 530D. Further, the interaction condition may indicate that the related content interface notification 550D should be presented as an expanded "peek" rather than a compressed "peek" (e.g., as described in fig. 5C).
The related content interface notification 550D may include the interactive element 550 and related content 551D. The interactive element 550 may enable a user of the client device 510 to view additional related content (e.g., as generally indicated by 553D) while interacting (e.g., via a touch input sliding upward on the interactive element 550 or a voice input viewing more related content). For example, upon interacting with interactive element 550, related content interface notification 550D may consume a larger portion of user interface 580 such that it overlays and/or overrides user interface 580. Further, the interactive element 550 may enable the related content interface notification 550D to be removed upon interaction (e.g., via touch input sliding down on the interactive element 550 or voice input removing the related content interface notification 550D).
Further, the relevant content included in the relevant content interface notification 550D can be identified using a relevant content generation engine (e.g., the relevant content generation engine 150 of fig. 1). The related content may include information about the related content (e.g., a description of the related content, business hours of a business associated with the related content, etc.), a link to underlying content associated with the related content (e.g., another web page associated with the related content), hyperlink text for accessing the underlying content associated with the related content, actionable content (e.g., a phone number, address, and/or other interface element that, when selected, causes the client device 510 to perform one or more operations), and/or other information. For example, the relevant content 551D of fig. 5D includes an indication of other airlines (e.g., "hypothetical airlines") that provide flights from the SDF to the DCA. In addition, the related content 551D of fig. 5D includes a link (e.g., "www.exampleurl5") and a description of the related content 551D (e.g., flight date/time, ticket price, flight number, etc.). Thus, the user can interact with the related content interface notification 550D presented as "peek" by interacting with the related content 551D, or by interacting with the interactive element 550, to view additional related content (e.g., as generally indicated by 553D) or to remove the related content interface notification 550D.
Although the interaction conditions described herein are with respect to both access duration and scrolling conditions, it should be understood that the client device 510 may present the relevant content interface notification when only the access duration is satisfied, when only the scrolling conditions are satisfied, and/or when a combination of the access duration and the scrolling conditions are satisfied. In this manner, the interaction conditions are dynamic in that they may vary even for a single internet resource (e.g., depending on the navigation path when accessing the internet resource, the client device 510, and/or the user account associated with the client device 510 accessing the internet resource). In this way, not only are the interaction conditions dynamic in that they may vary even for a single internet resource (e.g., as described in fig. 5A-5C), but the interaction conditions are also dynamic in that they may vary with the internet resource based at least in part on the content properties of the internet resource (e.g., as described in fig. 5D). Further, while FIGS. 5A-5D are described as utilizing certain interaction conditions and certain attributes, it should be understood that certain interaction conditions and certain attributes of FIGS. 5A-5D are provided for exemplary purposes and are not meant to be limiting. Further, while the scroll conditions described in fig. 5A-5D describe a user's passage through the user interface 580 of the client device 510 when viewing a web page, it should be understood that scroll conditions may also include scrolling a particular percentage of videos while viewing videos, scrolling a particular percentage of photos while viewing albums, and/or other scroll conditions with respect to particular internet resources.
Fig. 6 is a block diagram of an example computing device 610, which example computing device 610 may optionally be used to perform one or more aspects of the techniques described herein. In some implementations, one or more of the client device, cloud-based automated assistant component, and/or other components can include one or more components of the example computing device 610.
The user interface input devices 622 may include a keyboard, a pointing device such as a mouse, trackball, touchpad, or tablet, a scanner, a touch screen incorporated into a display, an audio input device such as a voice recognition system, a microphone, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computing device 610 or a communication network.
User interface output devices 620 may include a display subsystem, a printer, a fax machine, or a non-visual display such as an audio output device. The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or some other mechanism for creating a visual image. The display subsystem may also provide non-visual displays, such as through audio output devices. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computing device 610 to a user or to another machine or computing device.
These software modules are typically executed by the processor 614 alone or in combination with other processors. Memory 625 used in storage subsystem 624 may include a number of memories, including a main Random Access Memory (RAM)630 for storing instructions and data during program execution and a Read Only Memory (ROM)632 that stores fixed instructions. File storage subsystem 626 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. Modules implementing the functionality of certain implementations may be stored by file storage subsystem 626 in storage subsystem 624, or in other machines accessible to processor 614.
Where the systems described herein collect or otherwise monitor personal information about a user, or may utilize personal and/or monitored information), the user may be provided with an opportunity to control whether programs or features collect user information (e.g., information about the user's social network, social actions or activities, profession, user preferences, or the user's current geographic location), or whether and/or how to receive content from a content server that may be more relevant to the user. In addition, certain data may be processed in one or more ways before it is stored or used in order to delete the personal identity information. For example, the identity of the user may be processed such that no personal identity information of the user can be determined, or the geographic location of the user (e.g., city, zip code, or state level) may be summarized where geographic location information is obtained such that no particular geographic location of the user can be determined. Thus, the user may control how information about the user is collected and/or used.
In some implementations, a method implemented by one or more processors is provided that includes determining a plurality of attributes of an internet resource. The plurality of attributes includes one or more content attributes based on the internet resource content. The method also includes processing the plurality of attributes using a machine learning model to generate a prediction output, and determining one or more interaction conditions for triggering provision of a related content interface notification to the internet resource based on the prediction output. The method further comprises the following steps: in response to a given client device's access to an internet resource, and in response to determining one or more interaction conditions: responsive to determining that access of the internet resource satisfies the one or more interaction conditions, causing the given client device to present the relevant content interface notification.
These and other implementations of the techniques disclosed herein may optionally include one or more of the following features.
In some implementations, the one or more content attributes include a type attribute that indicates one of a plurality of different types to which the internet resource most closely conforms. In some implementations, the one or more content attributes include a structural attribute. In some versions of these implementations, determining the structural attributes is based on an organizational structure of a markup language of the internet resource. In some implementations, the one or more content attributes include a low-dimensional embedding of at least some content of the internet resource, the low-dimensional embedding generated based on processing the at least some content using an additional machine learning model.
In some implementations, the plurality of attributes further includes one or more navigation attributes indicating one or more specific attributes for navigating to the internet resource. In some versions of these implementations, based on the predicted output, prior to a given client device accessing the internet resource, one or more interaction conditions are determined for (a) providing a relevant content interface notification for the internet resource, and (b) triggering provision of the relevant content interface notification. In some versions of these implementations, causing the given client device to present the relevant content interface notification is further responsive to determining that the access to the internet resource by the given client device is a result of navigation that conforms to the one or more navigation attributes in response to determining that the access to the internet resource by the given client device satisfies the one or more interaction conditions.
In some versions of these implementations, the one or more navigation attributes include a path attribute that indicates a given navigation path of the plurality of navigation paths for accessing the internet resource. In some further versions of those implementations, the given navigation path is: a query-based path indicating access to an internet resource in response to one or more search queries, or a query-independent path indicating access to an internet resource independent of any query. In some further versions of these implementations, the given navigation path is a query-based path and indicates a breadth of the one or more search queries.
In some implementations, the plurality of attributes further includes one or more global historical interaction attributes that indicate a past degree of measurement of past interactions with respect to previous related content interface notifications in response to previous presentations of past accesses by the plurality of client devices to the internet resources and/or additional internet resources determined to be similar to the internet resources.
In some implementations, the plurality of attributes also includes one or more personal historical interaction attributes that indicate a measure of past extent of past interactions of a user of the given client device with respect to previous related content interface notifications. In some versions of those implementations, the measured past degree of past interaction is a previous related content interface notification regarding past access of an additional internet resource determined to be similar to the internet resource.
In some implementations, determining, based on the predicted output, one or more interaction conditions for triggering provision of the relevant content interface notifications occurs before a given client device accesses the internet resource. In some versions of these implementations, in response to determining that access to the internet resource satisfies the one or more interaction conditions, causing the given client device to present the relevant content interface notification includes sending the one or more interaction conditions to the given client device. In some versions of these implementations, sending the one or more interaction conditions to the given client device causes the given client device to monitor for an occurrence of the one or more interaction conditions during access of the internet resource at the given client device, and causes the given client device to present the relevant content interface notification in response to the occurrence of the one or more interaction conditions.
In some implementations, the one or more interaction conditions include a duration of access to the internet resource. In some implementations, the one or more interaction conditions include a scroll condition that indicates whether scrolling occurred during access of the internet resource, a degree of scrolling, a speed of scrolling, or a direction of scrolling.
In some implementations, the one or more interaction conditions include at least two interaction conditions. Further, access to the internet resource satisfies one or more interaction conditions only when each of the at least two interaction conditions is satisfied. In some implementations, the one or more interaction conditions include at least two interaction conditions. Furthermore, access to the internet resource satisfies one or more interaction conditions only when either of the at least two interaction conditions is satisfied.
In some implementations, the method further includes determining whether to provide a relevant content interface notification for the internet resource based on the predicted output. Additionally, causing the given client device to present the relevant content interface is also responsive to determining to provide a relevant content interface notification of the internet resource. In some versions of those implementations, the predicted output includes a first output portion that specifies whether to provide the related content interface notification and a second output portion that specifies one or more interaction conditions for triggering the provision of the related content interface notification. In some versions of these implementations, the prediction output specifies one or more interaction conditions. Further, determining to provide the relevant interface notification includes determining to provide the relevant interface notification based on one or more interaction conditions satisfying one or more conditions.
In some implementations, the related content interface notification includes a link to a related internet resource, or is selectable to cause a link to a related internet resource to be presented. In some versions of these implementations, the method further includes determining to cause preemptive caching of the related internet resources based on the predicted output, and in response to determining to provide the related content interface notifications of the internet resources, and in response to access of the internet resources by the given client device: the given client device is further caused to preemptively cache at least a portion of the internet resources locally at the given client device prior to rendering the relevant content interface notification.
In some implementations, the related content interface notification is presented over an internet resource and indicates that the related resource is available, but the related content interface notification does not provide any details of the related resource. Further, a single selection of a related content interface notification via a user input device of the client device causes details of at least some related resources to be presented over internet resources.
In some implementations, the related content interface notifications are presented over internet resources and only provide details about one or more initial related resources. Further, a single selection of the related content interface notification via a user input device of the client device causes details of at least one or more additional related resources to be presented over the internet resources.
In some implementations, the plurality of attributes further includes one or more related content attributes that are based on one or more related internet resources that are linked to in a related content notification of an internet resource or presented in response to a selection of a related content notification.
In some implementations, the method further includes determining, via the given client device, one or more interaction attributes of any user interaction with the relevant content interface notifications, and updating the machine learning model based on the one or more interaction attributes.
In some versions of those implementations, updating the machine learning model includes reinforcement learning, and updating the machine learning model based on the one or more interaction attributes includes determining a reward based on the one or more interaction attributes, and updating the machine learning model based on the reward. In some further versions of those implementations, determining the reward includes selecting a first reward if one or more interaction attributes indicate interaction with the related content interface notification to view a segment of the related resource related to the internet resource but indicate no user input to cause presentation of any related resource, and selecting a second reward if the one or more interaction attributes indicate interaction with the related content interface notification to view a segment of the related resource and indicate user input to cause presentation of at least one of the related resources. The second prize is more aggressive than the first prize. In some further versions of those implementations, determining the reward further includes selecting no reward or penalty if the one or more interaction attributes indicate no interaction with the related content interface notification, or selecting no reward or penalty if the one or more interaction attributes indicate removal of the related content interface notification.
In some versions of these implementations, updating the machine learning model includes supervised learning. Further, the predicted output indicates one or both of a predicted access duration and a predicted extent of scrolling, the one or more interaction attributes include one or both of an actual access duration prior to interacting with the related content interface notification and an actual extent of scrolling prior to interacting with the related content interface notification, and updating the machine learning model based on the one or more interaction attributes includes determining an error based on comparing the predicted output to the one or more interaction attributes and updating the machine learning model based on back-propagating the error across the machine learning model.
In some versions of these implementations, the method further includes, after updating the machine learning model and updating the machine learning model based on additional rewards determined in accordance with additional interaction attributes of additional interactions with additional related content interfaces presented for additional internet resources: processing the plurality of attributes using a machine learning model to generate a new predicted output, determining, based on the new predicted output, one or more new interaction conditions for triggering provision of the relevant content interface notifications, and in response to access of the internet resource by the additional client device: responsive to determining that the access of the internet resource satisfies the one or more new interaction conditions, causing the additional client device to present the relevant content interface notification.
In some implementations, a method implemented by one or more processors is provided that includes determining a plurality of attributes of an internet resource. The plurality of attributes includes one or more content attributes based on the content of the internet resource and one or more navigation attributes indicating one or more particular attributes for navigating to the internet resource. The method also includes determining, based on the plurality of attributes, one or more navigation attribute-specific interaction conditions for triggering provision of a related content interface notification for the internet resource. The method further comprises the following steps: responsive to access of the internet resource by the given client device, and responsive to determining that the access of the internet resource by the given client device is a result of navigation that conforms to the one or more navigation attributes: responsive to determining that access of the internet resource satisfies one or more navigation attribute-specific interaction conditions, causing the given client device to present the relevant content interface notification.
These and other implementations of the techniques disclosed herein may optionally include one or more of the following features.
In some implementations, the one or more navigation attributes include a path attribute that indicates a given navigation path of a plurality of navigation paths for accessing the internet resource.
In some implementations, determining the one or more navigation-specific interaction conditions based on the plurality of attributes includes processing the plurality of attributes using a machine learning model to generate a predicted output, and determining the one or more navigation-specific interaction conditions based on the predicted output.
Further, some implementations include one or more processors (e.g., Central Processing Units (CPUs), Graphics Processing Units (GPUs), and/or Tensor Processing Units (TPUs)) of the one or more computing devices, wherein the one or more processors are operable to execute instructions stored in the associated memory, and wherein the instructions are configured to cause performance of any of the foregoing methods. Some implementations also include one or more non-transitory computer-readable storage media storing computer instructions executable by one or more processors to perform any of the above-described methods. Some implementations also include a computer program product including instructions executable by one or more processors to perform any of the above-described methods.
It should be understood that all combinations of the foregoing concepts and additional concepts described in greater detail herein are considered a part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are considered to be part of the subject matter disclosed herein.
Claims (37)
1. A method implemented using one or more processors, the method comprising:
determining a plurality of attributes of an internet resource, wherein the plurality of attributes includes one or more content attributes based on content of the internet resource;
processing the plurality of attributes using a machine learning model to generate a prediction output;
determining, based on the predicted output, one or more interaction conditions for triggering provision of a relevant content interface notification for the internet resource; and
in response to a given client device's access to the internet resource, and in response to determining the one or more interaction conditions:
causing the given client device to present the relevant content interface notification in response to determining that access to the Internet resource satisfies the one or more interaction conditions.
2. The method of claim 1, wherein the one or more content attributes include a type attribute indicating one of a plurality of different types to which the internet resource most closely conforms.
3. The method of any preceding claim, wherein the one or more content attributes comprise a structural attribute, and wherein determining the structural attribute is based on an organizational structure of a markup language of the internet resource.
4. The method of any preceding claim, wherein the one or more content attributes comprise a low-dimensional embedding of at least some content of the internet resource, the low-dimensional embedding generated based on processing the at least some content using an additional machine learning model.
5. The method according to any of the preceding claims,
wherein the plurality of attributes further includes one or more navigation attributes indicating one or more specific attributes for navigating to the internet resource.
6. The method of claim 5, wherein said at least one of said first and second sets of parameters is selected from the group consisting of,
wherein, based on the predicted output, it is determined that (a) the relevant content interface notification that provided the internet resource, and (b) the one or more interaction conditions that triggered the provision of the relevant content interface notification occurred prior to the given client device accessing the internet resource; and is
Wherein causing the given client device to present the relevant content interface notification in response to determining that the access of the internet resource satisfies the one or more interaction conditions is further in response to determining that the access of the internet resource by the given client device is a result of navigation that conforms to the one or more navigation attributes.
7. The method of claim 5 or 6, wherein the one or more navigation attributes include a path attribute indicating a given navigation path of a plurality of navigation paths for accessing the internet resource.
8. The method of claim 7, wherein the given navigation path is:
a query-based path indicating access to the Internet resource in response to one or more search queries, or
A query-independent path indicating access to the internet resource independent of any query.
9. The method of claim 8, wherein the given navigation path is the query-based path and indicates a breadth of the one or more search queries.
10. The method of any preceding claim, wherein the plurality of attributes further comprises one or more global historical interaction attributes indicating a past degree of measurement of past interactions with respect to previous related content interface notifications in response to previous presentations of previous related content interface notifications of past accesses to the internet resource and/or additional internet resources determined to be similar to the internet resource for a plurality of client devices.
11. The method of any preceding claim, wherein the plurality of attributes further comprises one or more personal historical interaction attributes indicating a measure of past extent of past interactions of the user of the given client device with respect to previous related content interface notifications.
12. The method of claim 11, wherein the measured past degree of past interaction is a previous related content interface notification regarding past access of an additional internet resource determined to be similar to the internet resource.
13. The method of any preceding claim, wherein determining the one or more interaction conditions for triggering provision of the relevant content interface notification based on the predicted output occurs before the given client device accesses the internet resource.
14. The method of claim 13, wherein causing the given client device to present the relevant content interface notification in response to determining that the access of the internet resource satisfies the one or more interaction conditions comprises:
sending the one or more interaction conditions to the given client device, wherein sending the one or more interaction conditions to the given client device causes the given client device to monitor for occurrence of the one or more interaction conditions during access of the Internet resource at the given client device, and causes the given client device to present the relevant content interface notification in response to occurrence of the one or more interaction conditions.
15. A method as claimed in any preceding claim, wherein the one or more interaction conditions comprise a duration of access to the internet resource.
16. The method of any preceding claim, wherein the one or more interaction conditions comprise a scroll condition indicating whether scrolling has occurred, a degree of scrolling, a speed of scrolling, or a direction of scrolling during access to the internet resource.
17. The method of any preceding claim, wherein the one or more interaction conditions comprise at least two interaction conditions, and wherein access to the internet resource satisfies the one or more interaction conditions only when each of the at least two interaction conditions is satisfied.
18. The method of any preceding claim, wherein the one or more interaction conditions comprise at least two interaction conditions, and wherein access to the internet resource satisfies the one or more interaction conditions only when either of the at least two interaction conditions is satisfied.
19. The method of any preceding claim, further comprising:
determining whether to provide the relevant content interface notification for the internet resource based on the predicted output;
wherein causing the given client device to present the relevant content interface is further in response to determining to provide the relevant content interface notification for the Internet resource.
20. The method of claim 19, wherein the predicted output includes a first output portion that specifies whether to provide the related-content interface notification and a second output portion that specifies the one or more interaction conditions for triggering the provision of the related-content interface notification.
21. The method of claim 19, wherein the prediction output specifies the one or more interaction conditions, and wherein determining to provide the relevant interface notification comprises determining to provide the relevant interface notification based on the one or more interaction conditions satisfying one or more conditions.
22. The method of any preceding claim, wherein the related content interface notification includes a link to a related internet resource, or is selectable, to cause a link to the related internet resource to be presented, and further comprising:
determining, based on the prediction output, to cause preemptive caching of the relevant internet resources;
and in response to determining to provide the relevant content interface notification for the internet resource, and in response to a given client device's access to the internet resource:
the given client device is also caused to preemptively cache at least a portion of the internet resource locally at the given client device prior to rendering the relevant content interface notification.
23. The method according to any of the preceding claims,
wherein the related content interface notification is presented over the Internet resource and indicates that a related resource is available, but the related content interface notification does not provide any details of the related resource; and is
Wherein a single selection of the related content interface notification via a user input device of the client device causes details of at least some of the related resources to be presented over the Internet resources.
24. The method according to any of the preceding claims,
wherein the related content interface notification is presented over the Internet resource and provides details regarding only one or more initial related resources; and is
Wherein a single selection of the related content interface notification via a user input device of the client device causes details of at least one or more additional related resources to be presented over the Internet resources.
25. The method of any preceding claim, wherein the plurality of attributes further comprises one or more related content attributes, the one or more related content attributes being based on one or more related internet resources linked to in the related content notifications of the internet resources or presented in response to a selection of the related content notifications.
26. The method of any preceding claim, further comprising:
determining one or more interaction attributes of any user interaction with the relevant content interface notification via the given client device; and is
Updating the machine learning model based on the one or more interaction attributes.
27. The method of claim 26, wherein updating the machine learning model comprises reinforcement learning, and wherein updating the machine learning model based on the one or more interaction attributes comprises:
determining a reward based on the one or more interaction attributes; and
updating the machine learning model based on the reward.
28. The method of claim 27, wherein determining the reward comprises:
selecting a first reward if the one or more interaction attributes indicate interaction with the related content interface notification to view a segment of a related resource related to the internet resource but indicate no user input to cause presentation of any of the related resource; and
selecting a second reward if the one or more interaction attributes indicate interaction with the related content interface notification to view segments of related resources and indicate user input that causes presentation of at least one of the related resources,
wherein the second reward is more aggressive than the first reward.
29. The method of claim 28, wherein determining the reward further comprises:
selecting no reward or penalty if the one or more interaction attributes indicate no interaction with the related content interface notification, or
Selecting no reward or penalty if the one or more interaction attributes indicate elimination of the related content interface notification.
30. The method of claim 26, wherein updating the machine learning model comprises supervised learning, wherein the predicted output indicates one or both of a predicted visit duration and a predicted degree of scrolling, wherein the one or more interaction attributes comprise one or both of an actual visit duration prior to interacting with the relevant content interface notification and an actual degree of scrolling prior to interacting with the relevant content interface notification, and wherein updating the machine learning model based on the one or more interaction attributes comprises:
determining an error based on comparing the predicted output to the one or more interaction attributes; and is provided with
Updating the machine learning model based on back-propagating the error across the machine learning model.
31. The method of any of claims 26 to 30, further comprising:
after updating the machine learning model and updating the machine learning model based on additional rewards determined in accordance with additional interaction attributes of additional interactions with additional related content interfaces presented for additional internet resources:
processing the plurality of attributes using the machine learning model to generate a new prediction output;
determining, based on the new predicted output, one or more new interaction conditions for triggering provision of the relevant content interface notification; and
in response to access of the internet resource by an additional client device:
in response to determining that the access to the internet resource satisfies the one or more new interaction conditions, causing the additional client device to present the relevant content interface notification.
32. A method implemented using one or more processors, the method comprising:
determining a plurality of attributes of the internet resource, wherein the plurality of attributes comprises:
one or more content attributes of the content based on the internet resources, an
One or more navigation attributes indicating one or more specific attributes for navigating to the internet resource;
determining, based on the plurality of attributes, one or more navigation attribute-specific interaction conditions for triggering provision of a related content interface notification for the internet resource;
in response to a given client device's access to the internet resource, and in response to determining that the given client device's access to the internet resource is a result of navigation that conforms to the one or more navigation attributes:
causing the given client device to present the relevant content interface notification in response to determining that the access of the Internet resource satisfies the interaction condition specific to the one or more navigation attributes.
33. The method of claim 32, wherein the one or more navigation attributes include a path attribute indicating a given navigation path of a plurality of navigation paths for accessing the internet resource.
34. The method of claim 33 or 34, wherein determining the one or more navigation-specific interaction conditions based on the plurality of attributes comprises:
processing the plurality of attributes using a machine learning model to generate a prediction output; and
determining the one or more navigation-specific interaction conditions based on the predicted output.
35. A computer program product comprising instructions which, when executed by one or more processors, cause the one or more processors to carry out the method according to any one of the preceding claims.
36. A computer-readable storage medium comprising instructions that when executed by one or more processors cause the one or more processors to perform the method of any one of claims 1-34.
37. A system comprising one or more processors configured to perform the method of any one of claims 1-34.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/066199 WO2021118593A1 (en) | 2019-12-13 | 2019-12-13 | Determining dynamic interaction condition(s) for triggering provision of related content interface notification |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114730325A true CN114730325A (en) | 2022-07-08 |
Family
ID=69165604
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980100684.3A Pending CN114730325A (en) | 2019-12-13 | 2019-12-13 | Determining dynamic interaction conditions for triggering provision of related content interface notifications |
Country Status (4)
Country | Link |
---|---|
US (1) | US20220414538A1 (en) |
EP (1) | EP4014134A1 (en) |
CN (1) | CN114730325A (en) |
WO (1) | WO2021118593A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN116168704A (en) * | 2023-04-26 | 2023-05-26 | 长城汽车股份有限公司 | Voice interaction guiding method, device, equipment, medium and vehicle |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7321887B2 (en) * | 2002-09-30 | 2008-01-22 | Sap Aktiengesellschaft | Enriching information streams with contextual content |
US10839310B2 (en) * | 2016-07-15 | 2020-11-17 | Google Llc | Selecting content items using reinforcement learning |
-
2019
- 2019-12-13 US US17/779,005 patent/US20220414538A1/en active Pending
- 2019-12-13 WO PCT/US2019/066199 patent/WO2021118593A1/en unknown
- 2019-12-13 EP EP19836756.7A patent/EP4014134A1/en active Pending
- 2019-12-13 CN CN201980100684.3A patent/CN114730325A/en active Pending
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN116168704A (en) * | 2023-04-26 | 2023-05-26 | 长城汽车股份有限公司 | Voice interaction guiding method, device, equipment, medium and vehicle |
Also Published As
Publication number | Publication date |
---|---|
EP4014134A1 (en) | 2022-06-22 |
US20220414538A1 (en) | 2022-12-29 |
WO2021118593A1 (en) | 2021-06-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20210056157A1 (en) | Dynamic user agent strings | |
US8065145B2 (en) | Keyword outputting apparatus and method | |
US8452793B2 (en) | Query refinement based on user selections | |
CA2788651C (en) | Information search system with real-time feedback | |
EP2904509B1 (en) | Improving access to network content | |
RU2730278C2 (en) | Detection of navigation search results | |
EP2877944B1 (en) | Heuristic caching to personalize applications | |
KR20070118142A (en) | Query revision using known highly-ranked queries | |
KR20060116042A (en) | Personalized search method using cookie information and system for enabling the method | |
US10956502B2 (en) | Method of and system for recommending fresh search query suggestions on search engine | |
US11526570B2 (en) | Page-based prediction of user intent | |
US20140156623A1 (en) | Generating and displaying tasks | |
CN114730325A (en) | Determining dynamic interaction conditions for triggering provision of related content interface notifications | |
US11108802B2 (en) | Method of and system for identifying abnormal site visits | |
US11520973B2 (en) | Providing user-specific previews within text | |
US11551150B2 (en) | Training and/or utilizing a model for predicting measures reflecting both quality and popularity of content | |
US11537674B2 (en) | Method of and system for generating search query completion suggestion on search engine | |
CN111552795B (en) | Book list page display method, electronic equipment and storage medium | |
US20210073203A1 (en) | Method of and system for identifying abnormal rating activity | |
WO2024019768A1 (en) | Mitigating latency and/or resource usage in triggering actionable suggestions related to rendered content |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
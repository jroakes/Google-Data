US7590664B2 - Storage system and storage system data migration method - Google Patents
Storage system and storage system data migration method Download PDFInfo
- Publication number
- US7590664B2 US7590664B2 US11/205,216 US20521605A US7590664B2 US 7590664 B2 US7590664 B2 US 7590664B2 US 20521605 A US20521605 A US 20521605A US 7590664 B2 US7590664 B2 US 7590664B2
- Authority
- US
- United States
- Prior art keywords
- migration
- storage
- files
- file
- volumes
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/11—File system administration, e.g. details of archiving or snapshots
- G06F16/119—Details of migration of file systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/11—File system administration, e.g. details of archiving or snapshots
- G06F16/122—File system administration, e.g. details of archiving or snapshots using management policies
- G06F16/125—File system administration, e.g. details of archiving or snapshots using management policies characterised by the use of retention policies
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99936—Pattern matching access
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99951—File or database maintenance
- Y10S707/99952—Coherency, e.g. same view to multiple users
- Y10S707/99953—Recoverability
Definitions
- the present invention relates to a storage system and storage system data migration method.
- a storage system for example, is constituted by arranging a large number of disk drives in an array, and provides storage areas based on RAID (Redundant Array of Independent Disks).
- Logical volumes Logical Units
- a server, mainframe or other such host device can access a desired volume to read and write data by issuing a prescribed command to the storage system.
- One data migration technique generates respective disk pools for each type of disk drive, and presets various storage classes in the logical volumes inside the disk pools. Then, a file is moved to a logical volume having the optimum storage class based on the file's static and dynamic characteristics (Japanese Laid-open Patent No. 2004-295457).
- Another data migration technique selects a volume, which satisfies preset reliability and performance conditions, and controls migration destinations in file units (Japanese Laid-open Patent No. 2004-70403).
- an object of the present invention is to provide a storage system and storage system data migration method, which make it possible to collectively manage files with varied storage time limits.
- Another object of the present invention is to provide a storage system and storage system data migration method, which make it possible to collectively manage files with varied storage time limits, and to carry out data migration taking into account the device life of a storage device.
- a storage system comprises at least one or more host devices; a plurality of storage devices for providing volumes to this host device; and a management device, which is connected to the host device and storage devices, respectively.
- the management device is constituted so as to acquire file information of a plurality of files, which is distributed and respectively stored in volumes of the respective storage devices, and based on this respective file information, extract a plurality of files, which match a pre-set data migration condition, generate at least one or more migration groups by sorting the storage time limit of extracted file by pre-set prescribed intervals, match the expiry of a migration group to the time limit of a file having the most distant future storage time limit of the files comprising the migration group, and migrate the migration group to a selected migration-destination volume.
- the respective storage devices each comprise at least one or more volumes, and various files used by a host device are stored in at least a part of these respective volumes.
- the storage terms for these files are pre-set according to the type of file, such as “E-mail will be stored for a minimum of seven (7) years.”
- file information for example, file size, storage destination file address, and file update date/time (time stamp) can be cited.
- the management device for example, extracts, as targets for data migration, those files for which a predetermined time period or longer has elapsed since file generation, and files for which a predetermined time period or longer has elapsed since the date of the last update.
- the management device When the management device extracts files targeted for data migration, it groups them by sorting the respective storage time limit into prescribed intervals. For example, the management device groups together files whose storage time limits expire within these prescribed intervals, such as units of one day, one week, one month, one quarter, one year and so forth, thereby establishing a migration group. Then, the management device sets as the storage time limit of this migration group the storage time limit of the file with the longest expiration time of the respective files in this migration group. Thus, the storage time limits of all the files belonging to this migration group expire at the same time. The management device selects a migration-destination volume for storing the migration group, and stores the respective files of the migration group in this migration-destination volume.
- the management device can migrate a migration group between respective storage devices. That is, the management device can group files distributed among the respective storage devices into a migration group, and migrate the files of this migration group into the same or different storage devices.
- information related to the device life of the respective storage devices is included in the data migration condition, and the management device migrates a migration group based on the device life of the respective storage devices.
- the management device gives priority to the selection of a storage device with a device life that is longer than the expiry of a migration group, and migrates the migration group to this selected storage device.
- the management device migrates a migration group within a prescribed grace period prior to a device reaching its life expectancy. For example, when device life is n years, a time period of around 80% thereof is used as the threshold value of device life. When the device life of a storage device reaches this threshold value, the migration group stored in this storage device is migrated to another storage device. Therefore, in the above-mentioned example, the grace period constitutes a period equivalent to 20% of the device life of n years (the difference between the device life and the threshold value of the device life).
- the management device selects a migration-destination storage device on the basis of the precedences pre-set for the respective storage devices, and for the second and subsequent migrations of a migration group, it selects a migration-destination storage device by taking into account the device life of the respective storage devices. That is, a plurality of attribute information (precedence and device life) are established for selecting a storage device as a migration destination for data migration. An initial data migration is executed on the basis of precedence, which is the first attribute, and a second and subsequent data migrations are executed on the basis of device life, which is the second attribute. Then, in an embodiment of the present invention, a high precedence is established for a relatively high-performance storage device of the respective storage devices.
- the management device maintains management information comprising the filenames of the files constituting the migration-destination volume of a migration group, and a migration group, and information for detecting a migration destination, and when the management device migrates a migration group, it deletes, from the migration-source volume, the respective files, which make up this migration group, and stores the information for detecting a migration destination in the migration-source volume. Then, in an embodiment of the present invention, when the management device receives a query specifying migration-destination detection information, it responds, based on the management information, with the migration destination of the queried file.
- the management device distributes and stores management information in prescribed locations of all volumes related to a migration group.
- the management device can restore the management information by acquiring the information distributed in prescribed locations of the respective volumes.
- connection-source storage device at least any one or more storage devices of the respective storage devices is used as the connection-source storage device, and this connection-source storage device can utilize the volumes of the other respective storage devices by mapping the storage space of volumes of the other respective storage devices to the storage space of a virtual volume.
- the connection-source storage device maps the storage space of volumes of other storage devices to the storage space of a virtual volume, and establishes a logical volume on this virtual volume.
- the connection-source storage device is capable of utilizing the storage resources of other storage devices (connection-destination storage devices) just like they were its own storage resources.
- a data migration method of a storage system is a method for carrying out data migration by using at least one or more host devices; a plurality of storage devices for providing volumes to this host device; and a management device, which is connected to the host device and the respective storage devices, respectively, and comprises the steps of acquiring the respective file information of a plurality of files, which are respectively distributed and stored in the volumes of the respective storage devices; extracting, based on the respective file information, a plurality of files, which match a pre-set data migration condition; generating at least one or more migration groups by sorting the storage time limits of the extracted files by pre-set prescribed intervals; correlating the expiry of a migration group to the time limit of a file having the most distant future storage time limits of the files comprising the migration group; migrating the migration group from a migration-source volume to a migration-destination volume; and deleting the respective files constituting the migrated migration group from the migration-source volume, and storing migration-destination detection information for detecting the migration destination
- a storage system comprises at least one or more host devices; a plurality of storage devices for providing volumes to this host device; and a management device, which is connected to the host device and the respective storage devices, respectively.
- the host device comprises ( 1 A) an application program, which uses a volume; and ( 1 B) a file access controller, which, based on a file access request from an application program, acquires a file from a prescribed volume, and acquires, from the volumes of the respective storage devices, file information related to files that a host device uses, respectively.
- the management device comprises ( 2 A) a migration management database for managing information related to data migration; ( 2 B) a policy database for managing policy related to data migration; ( 2 C) a file information acquisition portion, which receives respective file information collected by the file access controller; ( 2 D) a migration manager for controlling the execution of data migration; and ( 2 E) a storage controller for moving the files of respective volumes to respective storage devices.
- the storage device which constitutes the connection source of the storage devices, comprises ( 3 A) volumes, which are provided to a host device; ( 3 B) a virtual volume, which is connected to a volume; and ( 3 C) a mapping table for mapping the storage space of a volume of the storage device set as the connection destination of the storage devices, to the storage space of a virtual volume.
- the management device executes the steps of ( 4 A) extracting, on the basis of respective file information, and the storage contents of the policy database respectively acquired via the file information acquisition portion, files targeted for data migration from among a plurality of files distributed and stored in respective volumes; ( 4 B) generating, based on the storage time limits of extracted files, and the prescribed time periods registered in the policy database, a migration group by grouping files in which storage time limits are included in the prescribed time period; ( 4 C) correlating the expiry of a migration group to the time limit of the file having the most distant future storage time limit of the respective files comprising the migration group; ( 4 D) causing the migration manager to determine the migration-destination volume of the migration group on the basis of the policy database and the migration management database; ( 4 E) causing the migration manager to read out the respective files belonging to a migration group from the migration-source volumes and store them in the migration-destination volumes; ( 4 F) deleting the migrated files from the respective migration-source volumes, and storing migration-destination detection information
- the computer program can be secured on a storage medium, such as a hard disk, semiconductor memory or optical disk, and distributed, or it can also be distributed via a communications network.
- FIG. 1 is a schematic diagram showing the overall constitution of an embodiment of the present invention
- FIG. 2 is a block diagram of a storage system
- FIG. 3 is a block diagram showing the details of a storage device
- FIG. 4 is a schematic diagram showing the storage structure of a storage system
- FIG. 5 is a schematic diagram showing a mapping table
- FIG. 6 is a schematic diagram showing a migration management database
- FIGS. 7A and 7B are schematic diagrams showing a pool management table and storage term table, respectively;
- FIG. 8 is a schematic diagram showing a group management table and a group configuration table, respectively;
- FIG. 9 is a schematic diagram showing a migration log table
- FIG. 10 is a schematic diagram showing an address conversion table
- FIG. 11 is a schematic diagram showing a policy database
- FIG. 12 is a continuation of FIG. 11 ;
- FIG. 13 is a schematic diagram showing file information collected by an agent program
- FIG. 14 is a flowchart showing an overall outline of data migration
- FIG. 15 is a continuation of FIG. 14 ;
- FIG. 16 is a flowchart showing group generation processing
- FIG. 17 is a schematic diagram schematically showing the generation of a group
- FIG. 18 is a flowchart showing the processing for determining a first migration destination
- FIG. 19 is a flowchart showing data migration execution processing
- FIG. 20 is a flowchart showing migration destination determination processing based on device life
- FIG. 21 is a flowchart showing migration destination determination processing for a second and subsequent migration, when the device life threshold value is longer than the storage term of a migration group;
- FIG. 22 is a flowchart showing migration destination determination processing for a second and subsequent migration, when the device life threshold value is shorter than the storage term of a migration group;
- FIG. 23 is a flowchart showing processing for accessing a file
- FIG. 24 is a flowchart showing processing for adding a storage device to a storage system
- FIG. 25 is a flowchart showing processing for deleting a storage device from a storage system
- FIG. 26 is a flowchart showing the data migration execution processing used in a second embodiment of the present invention.
- FIG. 27 is a flowchart showing processing for restoring a migration management database.
- a storage system of this embodiment can be constituted comprising at least one or more host devices 1 ; a plurality of storage devices 2 A, 2 B, 2 C for providing volumes 5 A, 5 B, 5 C to this host device 1 ; a management server 3 , which is connected to the host device 1 and the respective storage devices 2 A through 2 C; and a tape device 4 .
- the host devices (hereinafter, abbreviated as “hosts”) 1 are constituted as mainframe computers or server computers, and comprise respective file information collectors 1 A.
- This file information collector 1 A corresponds to a “file access controller”, and, based on a file access request delivered from a host 1 OS (Operating System), accesses a prescribed volume 5 A through 5 C, and acquires a desired file. Further, the file information collector 1 A is constituted so as to acquire, in accordance with a request from a management server 3 , the file information of respective files utilized by this host 1 , and to send the file information of these files to the management server 3 .
- Volumes 5 A through 5 C of the respective volumes of the storage devices 2 A through 2 C are online volumes currently being utilized by a host 1 .
- Volumes 9 A, 9 C (or 9 B) of the respective volumes are used as volumes for storage.
- a storage device 2 A can be used as a connection-source storage device, and the other storage devices 2 B, 2 C can be used as respective connection-destination storage devices, and the highest precedence is set for the storage device 2 A.
- the example shown in the figure shows that each of the storage devices 2 A through 2 C, respectively, provides online volumes, but it is also possible for the storage volume 2 A alone to provide online volumes. Also, storage volumes can be provided by each of the storage devices 2 A through 2 C, respectively.
- Online volumes 5 A through 5 C are registered in an online pool 5
- storage volumes 9 A, 9 C ( 9 B) are registered in a storage pool 9 .
- a management server 3 which corresponds to a “management device”, for example, can be constituted comprising a file information acquisition portion 3 A, a group generator 3 B, a storage term setting portion 3 C, a migration instruction portion 3 D, and a device life determination portion 3 E.
- the file information acquisition portion 3 A requests the respective file information collectors 1 A to collect file information, and delivers the respective file information sent from the respective file information collectors 1 A to the group generator 3 B.
- the group generator 3 B based on respective file information, groups together files whose storage time limits arrive within a prescribed time period, and generates a migration group (hereinafter, abbreviated at times as “group”). For example, when there is a plurality of files, whose storage terms expire on a certain prescribed day, these files are managed as the same migration group. Therefore, the files belonging to a migration group are not necessarily the same type. Files with storage time limits that arrive within a prescribed time period will belong to the same group even if the files have completely different properties.
- the storage term setting portion 3 C correlates the storage term of a group to the storage term of the file having the latest storage time limit of the respective files in that group. That is, for example, when this groups comprises files having respectively different storage time limits, such as Jan. 1, 2010, Jan. 2, 2010, and Jan. 3, 2010, the storage term for this group is set at the latest date of Jan. 3, 2010. Therefore, the storage terms of the other files, whose storage terms were originally expected to expire earlier, are extended slightly.
- the migration instruction portion 3 D selects a group migration-destination volume from among the storage volumes 9 A, 9 C ( 9 B) registered in the storage pool 9 , and instructs the storage device to implement data migration.
- the device life determination portion 3 E determines whether or not to carry out data migration based on the device life of the respective storage devices 2 A through 2 C. For example, when a time period of around 80% of device life has elapsed, the device life determination portion 3 E can decide to carry out data migration for a group, which is stored in the storage device with the shortest life.
- the file information acquisition portion 3 A requests that respective file information collectors 1 A send file information. Upon receiving this request, the file information collectors 1 A acquire the file information of the files under their respective management, and send the file information of these respective files to the file information acquisition portion 3 A (S 1 ).
- the group generator 3 B groups together those files 6 A through 6 C, whose storage time limits arrive within a prescribe time period, as a migration group 7 (S 2 ).
- the storage term setting portion 3 C correlates the storage term of this group 7 to the latest storage time limit of the respective files in this group 7 (S 3 ).
- the migration instruction portion 3 D furnishes the required instructions to the migration-source storage device 2 A and the migration-destination storage device 2 C (or 2 B), and executes the data migration of the respective files 6 A through 6 C in the group 7 (S 4 ).
- a variety of methods can be applied here as the method for executing data migration.
- One is a method, whereby the management server 3 reads the respective migration-targeted files from the migration-source volumes, and writes the read files to a migration-destination volume.
- Another is a method, whereby data is copied between the migration-source storage device and the migration-destination storage device.
- the former method is effective since the respective files must be recognized.
- the latter method can also be used.
- An initial data migration is carried out on the basis of the precedence pre-set for each of the storage devices 2 A through 2 C (S 5 ).
- the highest precedence is set for the storage device 2 A. Therefore, the initial migration destination for group 7 becomes a volume under the management of storage device 2 A.
- the storage device 2 A can utilize the respective volumes of the other storage devices 2 B, 2 C, there will be times when the storage destination resulting from the initial migration will be a volume residing in another storage device 2 B, 2 C, rather than a real volume inside the storage device 2 A.
- the volume can be treated as a volume of the storage device 2 A.
- the device life determination portion 3 E makes a determination as to whether or not further data migration is required based on the device life of the respective storage devices 2 A through 2 C, and the storage term of the migration group 7 (S 6 ). For example, when the remaining life of the storage device in which the group 7 is stored is short, and the storage term of the group 7 is longer than this device life, if the situation is left as-is, it could become difficult to access the respective files 6 A through 6 C belonging to this group 7 . Accordingly, when the storage term of a group 7 is longer than the life (remaining life) of a storage device, which is currently the storage destination, and this device life is short, the device life determination portion 3 E will decide to execute a second data migration.
- storage device life is taken into account instead of the precedence of the storage device (S 7 ).
- a storage device, the remaining life of which is longer than the storage term of a group 7 is selected as the migration-destination storage device, and a volume of this storage device is selected as the migration-destination volume.
- the respective files 6 A through 6 C comprising the group 7 are migrated from the migration-source volume 9 A to the migration-destination volume 9 C ( 9 B) (S 8 ).
- the device life determination portion 3 E once again determines the need for data migration taking into account the life of the storage device. If there is no storage device with suitable remaining life in the storage system, the files 6 A through 6 C belonging to the group 7 are migrated to a tape device 4 .
- the initial data migration of the group 7 is carried out based on the precedence of the storage device, and the next data migration related to the same group 7 is carried out based on the life of the storage device. Therefore, in the initial data migration, the group 7 is migrated to a relatively high-performance storage device 2 A, and can be provided for reuse by a host 1 , and in the second and subsequent data migrations, a storage device, which corresponds to the storage term of the group 7 , can be utilized. This enables the storage resources of a storage system to be used effectively, and also enhances usability. This embodiment will be explained in greater detail below by referring to the other figures.
- FIG. 2 is a block diagram showing the overall constitution of a storage system.
- This storage system can be constituted comprising, for example, a plurality of application servers (App servers in the figure) 10 ; a management server 20 ; a connection-source storage device 30 ; a plurality of connection-destination storage devices 40 ; a tape device 50 ; and a switch 60 .
- the network configuration will be explained first.
- the respective application servers 10 and management server 20 are interconnected via a management network CN 1 such as a LAN (Local Area Network) or WAN (Wide Area Network).
- the application servers 10 and management server 20 are connected to a connection-source storage device 30 by way of a host data communications network (hereinafter, “host network”) CN 2 , such as a FC_SAN (Fibre Channel_Storage Area Network) or IP_SAN (Internet Protocol_SAN).
- the connection-source storage device 30 and the respective connection-destination storage devices 40 are connected, for example, via a subordinate data communications network (hereinafter, “subordinate network”) CN 3 and the switch 60 , such as a FC_SAN.
- subordinate network subordinate data communications network
- the host network CN 2 and subordinate network CN 3 are isolated, and the communication state of the one does not have a direct effect on the other. Furthermore, another switch can be provided in the host network CN 2 . Further, in the following explanation, a situation, in which both the host network CN 2 and the subordinate network CN 3 are configured as FC_SAN, will be discussed, but these respective networks CN 2 , CN 3 can also be configured as IP_SAN.
- the application servers 10 can be constituted comprising a LAN communication portion (“LAN-I/F” in the figure) 11 ; a fibre channel communication portion (“FC-I/F” in the figure) 12 ; a CPU (Central Processing Unit) 13 ; a memory 14 ; and a local disk 15 .
- an application program abbreviated as “application” in the figure
- an agent program abbreviated as “agent” in the figure
- an OS can be stored in the memory 14 .
- the constitution of the management server 20 will be explained.
- the management server 20 can comprise a LAN communication portion 21 ; a fibre channel communication portion 22 ; a CPU 23 ; a memory 24 ; and a policy database (database will be abbreviated as “DB” in the figures) 25 .
- DB policy database
- a manager program abbreviated as “manager” in the figure
- a migration manager program 27 can be stored in the memory 24 .
- the term “program” has been omitted.
- the storage content of the policy database 25 and the operation of the respective programs will be explained below.
- connection-source storage device 30 can be constituted comprising a plurality of fiber channel communication portions 31 ; a controller 32 ; a command device (hereinafter, abbreviated as “CMD”) 33 ; a management database 34 ; a plurality of online volumes 35 ; a plurality of archive volumes 36 ; and a plurality of virtual volumes 37 .
- CMD command device
- management database 34 will be explained in detail below.
- the respective online volumes 35 are registered in an online pool 38 A, and the archive volumes 36 and virtual volumes 37 , respectively, are registered in a storage pool 38 B.
- the virtual volumes 37 exist virtually to incorporate the external volumes 43 of the connection-destination storage devices 40 .
- the focal point here is the connection-source storage device 30 , and volumes that exist inside the connection-source storage device 30 will be called internal volumes, and volumes that exist outside of the connection-source storage device 30 will be called external volumes.
- the storage space of one or a plurality of external volumes 43 is mapped to the storage space of one or a plurality of virtual volumes 37 . Then, a logical volume is established on this virtual volume 37 , and provided as a storage volume. Therefore, the actual data storage destination is an external volume 43 , but access (the window) to this data is a logical volume on a virtual volume 37 . This enables the connection-source storage device 30 to utilize an external volume 43 just as if it were its own storage device.
- connection-source storage device 30 since a logical volume of the connection-source storage device 30 is logically connected to the external volumes 43 of the connection-destination storage devices 40 via the storage space of intermediate virtual volumes 37 , a variety of services capable of being executed by the connection-source storage device 30 can be applied to external volumes 43 as well.
- connection-destination storage devices 40 can be constituted comprising one or a plurality of fiber channel communication portions 41 ; a controller 42 ; and one or more external volumes 43 .
- the connection-destination storage devices 40 are connected to the external connection communication portion 31 A of the connection-source storage device 30 by way of a fiber channel communication portion 41 , switch 60 and subordinate network CN 3 .
- FIG. 3 is a block diagram showing a more detailed constitution of the connection-source storage device 30 .
- the controller 32 for example, can be constituted comprising a plurality of channel adapters (hereinafter, “CHA”) 32 A; a plurality of disk adapters (hereinafter, “DKA”) 32 B; a cache memory (“CM” in the figure) 32 C; a shared memory (“SM” in the figure) 32 D; a connector (“SW” in the figure) 32 E; and a service processor (hereinafter, “SVP”) 32 F.
- CHCA channel adapters
- CM shared memory
- SW shared memory
- SVP service processor
- a CHA 32 A is for controlling the transfer of data to a server 10 .
- the respective CHA 32 A comprise one or more fibre channel communication portions 31 , each of which is capable of carrying out data communications with a different server 10 .
- a CHA 32 A exchanges control information and the like with other CHA 32 A and DKA 32 B via the SM 32 D.
- the CHA 32 A stores this read command in the SM 32 D.
- the DKA 32 B references the SM 32 D all the time, and when it detects an unprocessed read command, it reads data from the specified volume 35 , and stores it in the CM 32 C.
- the CHA 32 A reads the data, which has been transferred to the CM 32 C, and sends it to the server 10 .
- the CHA 32 A When a write command is received from a server 10 , the CHA 32 A stores this write command in the SM 32 D. The CHA 32 A also stores the received write command in the CM 32 C. After storing data in the CM 32 C, the CHA 32 A reports write-complete to the server 10 . The DKA 32 B reads the data stored in the CM 32 C in accordance with the write command stored in the SM 32 D, and stores it in a prescribed volume 35 .
- the DKA 32 B is for controlling the respective data communications between the disk drives 39 A.
- the respective DKA 32 B and disk drives 39 A are connected via a SAN or other such communications network, and carry out data transfer in block units in accordance with the fibre channel protocol.
- the respective DKA 32 B monitor the status of the disk drives 39 A at all times, and send the results of this monitoring to the SVP 32 F.
- the respective CHA 32 A and DKA 32 B for example, comprise printed circuit boards mounted with processors and memories, and control programs stored in the memories (none of which is shown in the figure), and are constituted so as to realize respective prescribed functions by virtue of the teamwork of these hardware and software components.
- the CM 32 C is for storing data written from the server 10 , or data read by the server 10 .
- the CM 32 C for example, is constituted from non-volatile memory.
- the SM 32 D for example, is constituted from non-volatile memory.
- control information, management information, and the like are stored in the SM 32 D.
- These control and other types of information can be multiplexed and managed by a plurality of SM 32 D. It is possible to provide a plurality of SM 32 D and CM 32 C, respectively. It is also possible to mount CM 32 C and SM 32 D together on the same memory board. Or, a part of a memory can be used as a cache area, and the other part can be used as a control area.
- the SW 32 E is for connecting the respective CHA 32 A, DKA 32 B, CM 32 C and SM 32 D, respectively. This makes it possible for all the CHA 32 A and DKA 32 B, respectively, to access the CM 32 C and SM 32 D.
- the SW 32 E for example, can be constituted as a crossbar switch or the like.
- the connection-source storage device 30 can comprise a plurality of disk drives 39 A, 39 B.
- the disk drives 39 A, 39 B are examples of storage devices, and are not limited to hard disk drives, but rather, for example, can utilize semiconductor memory drives, optical drives (to include holographic drives), and so forth. In this embodiment, the disk drives 39 A, 39 B will be explained using hard disk drives.
- a plurality of types of disk drives 39 A, 39 B can be mixed together in the connection-source storage device 30 .
- FC disk drives, SCSI (Small Computer System Interface) disk drives, SATA disk drives, SAS (Serial Attached SCSI) disk drives, and so forth can be cited as types of disk drives that can be used.
- the types of disk drives are not limited to the above; there will also be situations in which storage devices that are equivalent to the disk drives given as examples, or storage devices that could be developed in the future could also be used. This embodiment will be explained using a high-speed, high-performance FC disk drive as the one disk drive 39 A, and a SATA disk drive as the other disk drive 39 B.
- a RAID group (also called a parity group) can be formed using a prescribed number of disk drives 39 A, such as four drives per group, or three drives per group.
- At least one or more online volumes 35 can be disposed in the storage areas provided by the respective RAID groups.
- an open system server 10 By corresponding this logical volume to an LU (Logical Unit), an open system server 10 will recognize and use this volume 35 as a physical storage device.
- an access-targeted volume of an open system server 10 is an LU, but the access target of a mainframe host is the logical volume 35 itself.
- a RAID group is formed using a prescribed number of drives 39 B for the other disk drive 39 B, and archive volumes 36 are formed inside this RAID group.
- connection-source storage device 30 can incorporate and utilize the storage resources 43 of other storage devices 40 , which exist outside the connection-source storage device 30 as if they were its own storage resources.
- the SVP 32 F is connected to the respective CHA 32 A.
- the SVP 32 F is only connected to one CHA 32 A in the figure, but in actuality, the SVP 32 F is connected to each of the CHA 32 A, respectively.
- the SVP 32 F can access the SM 32 D and the like via the CHA 32 A.
- connection-destination storage devices 40 each comprise a plurality of disk drives 44 , and external volumes are generated on the physical storage areas provided by these respective disk drives 44 .
- FIG. 4 is a schematic diagram showing the storage structure of a storage system.
- the storage structure of the connection-source storage device 30 can be broadly divided into a physical storage hierarchy and a logical storage hierarchy.
- the physical storage hierarchy is constituted from PDEV (Physical Device) 39 , which are physical disks. PDEV correspond to disk drives 39 . When the classification of disk drive does not matter, 39 A and 39 B will both be assigned the reference numeral 39 .
- the logical storage hierarchy can be constituted from a plurality (for example, two kinds) of hierarchies.
- the one logical hierarchy can be constituted from VDEV (Virtual Device) 35 V, and a virtual VDEV (hereinafter, also referred to as “V-VOL”) 36 V, which can be treated like VDEV 35 V.
- V-VOL virtual VDEV
- the other logical hierarchy can be constituted from LDEV (Logical Device) 36 L.
- the VDEV 35 V for example, are constituted by grouping together prescribed numbers of PDEV 39 , such as four per group ( 3 D+ 1 P), eight per group ( 7 D+ 1 P) and so forth.
- the storage areas provided by the respective PDEV 39 belonging to a group can be integrated to form a single RAID storage area.
- the V-VOL 36 V is a virtual intermediate storage device, which does not require a physical storage area.
- the V-VOL 36 V are not directly associated with physical storage areas because they are used for mapping the LU of connection-destination storage devices 40 .
- At least one or more LDEV 36 L can be disposed on either a VDEV 35 V or V-VOL 36 V, respectively.
- the LDEV 36 L for example, can be constituted by dividing a VDEV 35 V into fixed lengths.
- the server 10 recognizes the LDEV 36 L as a single physical disk.
- the server 10 accesses a desired LDEV 36 L by specifying a LUN (Logical Unit Number) and logical block address.
- LUN Logical Unit Number
- An LU 36 is a device recognizable as an SCSI logical unit.
- the respective LU 36 are connected to the server 10 by way of target ports 31 .
- At least one or more LDEV 36 L can be associated to the respective LU 36 .
- the size of an LU can be virtually expanded by associating a plurality of LDEV 36 L to a single LU 36 .
- a CMD (Command Device) 33 is a control LU, which is used for transferring commands and statuses between an agent program 17 running on the server 10 , and a management server 20 and the controller 32 of the connection-source storage device 30 .
- a command from the server 10 or the management server 20 is written to CMD 33 .
- the controller 32 executes processing in accordance with the command written to the CMD 33 , and writes the results of this execution to the CMD 33 as the status.
- the server 10 and management server 20 read and confirm the status written to the CMD 33 , and write the contents of the next process to be executed to the CMD 33 .
- the server 10 and management server 20 can provide various instructions to the connection-source storage device 30 via the CMD 33 .
- the controller 32 can directly process a command received from the server 10 and management server 20 without storing this command in the CMD 33 .
- the present invention can also be constituted such that the CMD [ 33 ] is generated as a virtual device, and receives and processes commands from the server 10 and so forth without defining a real device (LU). That is, for example, the CHA 110 writes a command received from the server 10 to the SM 32 D, and either the CHA 32 A or the DKA 32 B process the command stored in this SM 32 D. These processing results are written to the SM 32 D, and sent to the server 10 from the CHA 32 A.
- connection-destination storage devices 40 are connected to an initiator port for connecting to the outside (External Port) 31 A of the connection-source storage device 30 via the communications network CN 3 .
- connection-destination storage devices 40 comprise a plurality of PDEV 44 ; a VDEV 43 V established on the storage area provided by the PDEV 44 ; and at least one or more LDEV 43 L capable of being established on the VDEV 43 V. Then, the respective LDEV 43 L are associated to the LU 43 .
- the PDEV 44 correspond to the disk drives 44 in FIG. 3 .
- the LU 43 (LDEV 43 L) of a connection-destination storage device 40 is mapped to a V-VOL 36 V, which is a virtual intermediate storage device.
- a RAID constitution can be applied to VDEV 35 V and V-VOL 36 V. That is, a single disk drive 39 can be allocated to a plurality of VDEV 35 V and V-VOL 36 V (Slicing), and a single VDEV 35 V and V-VOL 36 V can be formed from a plurality of disk drives 39 (Striping).
- FIG. 5 is a schematic diagram showing an example of a mapping table T 1 , which is used for capturing the external volumes 43 of the connection-destination storage devices 40 to the connection-source storage device 30 .
- the mapping table T 1 for example, can be constituted by correlating. LUN numbers, LDEV-related information, and VDEV-related information.
- VDEV-related information for example, LDEV number and capacity (“MAX SLOT No.” in the figure) can be cited.
- VDEV-related information for example, it is possible to cite the VDEV number, capacity, device type, and path information.
- VDEV-related information comprises V-VOL 36 V information as well.
- Device Type can comprise information about the classification of a device, whether it is a tape system device or a disk system device, and what kind of disk it is (FC disk or SATA disk, and so forth).
- Path Information comprises, for example, information for accessing this VDEV.
- path information for example, comprises identification information (WWN) peculiar to the respective communication ports 31 A, and LUN numbers for identifying the LU 43 .
- mapping table T 1 like this makes it possible to map either one or a plurality of external disk drives 44 to a V-VOL 36 V inside the connection-source storage device 30 .
- the volume number in the table is given as an example for explaining the table constitution, and does not necessarily correspond to the constitutions shown in the other figures.
- FIG. 6 is a schematic diagram showing an example of a constitution of a migration management database 34 .
- the migration management database 34 manages various information for managing data migration within the storage system.
- the migration management database 34 for example, can be constituted comprising a pool management table 34 A, a storage term (which can be said as retention term) table 34 B, a group management table 34 C, a group configuration table 34 D, a migration log table 34 E, and an address conversion table 34 F.
- FIGS. 7A and 7B are schematic diagrams showing examples of constitutions of a pool management table 34 A and a storage term table 34 B, respectively.
- the pool management table 34 A is information for managing the volumes registered in a pool.
- This pool management table 34 A for example, can be constituted by correlating device identification information (hereinafter, identification information will be abbreviated as “ID”), precedence ranking, installation date, device life, threshold value, LU number (LU#), and LU size.
- ID device identification information
- LU# LU number
- Device ID is information that enables the respective storage devices 30 , 40 inside a storage system to be uniquely specified.
- the precedence ranking is information utilized for selecting the migration destination for data migration, and is uniquely established for each storage device 30 , 40 , respectively.
- the installation data is information showing the date on which a storage device 30 , 40 was installed. In-service date can be used instead of installation date.
- Device life is information showing the life of the respective storage devices 30 , 40 .
- the threshold value is information showing a threshold value related to the device life. As the threshold value, a percentage value is used. When the cumulative running time from the date of installation reaches the threshold value, data migration is executed based on device life, which will be explained hereinbelow.
- the storage term table 34 B can be constituted by correlating device ID, LU number, LU size and storage term.
- the storage term is the storage time limit set for each volume. This storage term applies to all files stored in a volume. For example, when a file is stored in a seven-year storage volume, this file will be stored for at least seven years from the date it was generated.
- FIG. 8 is a schematic diagram showing respective examples of a group management table 34 C and a group configuration table 34 D.
- the group management table 34 C is a table for managing a migration group.
- the group management table 34 C for example, is constituted by correlating group ID, storage time limit, and size.
- the group ID is information for uniquely specifying respective migration groups inside the storage system.
- the storage time limit is information indicating the final date and time until which the respective files comprising a migration group should be stored. A file for which the storage time limit has elapsed can be deleted from inside the storage system.
- the size is information showing the overall size of a migration group, and corresponds to the sum of the sizes of the respective files comprising each migration group.
- the group configuration table 34 D is information for managing the configurations of the respective migration groups.
- the group configuration table 34 D for example, is constituted by correlating group ID, filename, file address, file creation date, last access date, and migration ID.
- Filename is information indicating the name of a file belonging to a migration group.
- File address is information indicating the storage destination of a file, and is utilized by the OS (file system) of the server 10 and management server 20 .
- the file creation date is information indicating the date and time (year, month, date, hour, minute and second) that a file was generated.
- Last access date is information showing the date and time that a file was last used.
- the migration ID is information utilized when a file is moved, and is linkage information, which indirectly shows the migration destination of the file.
- FIG. 9 is a schematic diagram showing an example of a migration log table 34 E.
- the migration log table 34 E for example, can be constituted by correlating a migration ID assigned prior to data migration execution, a group ID, the migration execution date/time, migration end date/time, the movement source (migration source) LU number, the movement destination (migration destination) LU number, and the migration ID assigned after data migration execution.
- the pre-execution migration ID is the migration ID set for the respective files prior to a new data migration.
- Migration execution date/time is information indicating the date and time that a new data migration commenced.
- Migration end date/time is information indicating the date and time that a new data migration was completed.
- the migration-source LU number is information for specifying the source volume in which the files were originally stored, and the migration-destination LU number is information for specifying the destination volume in which the files are to be stored.
- the post-execution migration ID is the migration ID newly set in accordance with a new data migration. Therefore, even when the agent program 17 queries the location of a file by specifying either the old or new migration ID, the management server 20 can respond to the request.
- FIG. 10 is a schematic diagram showing an example of an address conversion table 34 F.
- An address conversion table 34 F is provided for each type of OS, but only one is shown in FIG. 10 .
- the address conversion table 34 F is for converting a file address used by an OS (file system) to a block address of a logical volume (LBA (Logical Block Address)).
- LBA Logical Block Address
- FIGS. 11 and 12 are schematic diagrams showing an example of the storage content of a policy database 25 .
- the policy database 25 can be comprised of a storage policy 25 A, migration-targeted file determination policy 25 B, migration schedule policy 25 C, migration group policy 25 D, migration policy 25 E, expiration date policy 25 F, tape policy 25 G, migration execution policy 25 H, and group name policy 25 I.
- These respective policies 25 A through 25 I can be set by a user, such as a systems administrator.
- the storage policy 25 A is for registering a policy related to a volume pool established as the storage system migration area. For example, the LU numbers and LU sizes of the respective storage devices 30 , 40 , the device life of each storage device 30 , 40 , the threshold value for the device life (hereinafter, also referred to as the life threshold value), the installation dates/times of the respective storage devices 30 , 40 , and the storage terms for the respective LU are registered in the storage policy 25 A.
- the migration-targeted file determination policy 25 B is for registering the conditions for carrying out an initial data migration. Triggers for carrying out an initial data migration, such as, for example, “manually move files specified by a user”, “move files which have not been accessed in d1 or more days”, “move files for which d2 days or more have elapsed since file creation date”, “move all files comprising a specified volume”, and “when the remaining capacity of a volume (LU) is VS1%, move only VS2% worth of the files comprising this volume” and the like are registered in this policy 25 B.
- the data migration execution time is registered in the migration schedule policy 25 C. Execution times, for example, can be set as daily, weekly, monthly and as a user-defined date/time.
- Conditions for generating a migration group which will constitute a data migration unit, are set in the migration group policy 25 D.
- Files, whose storage time limit arrives within the time period registered here, can be grouped into a single migration group. For example, units of a day, week, month, quarter, year or a user-defined time period can be used as the time condition for generating a migration group.
- the migration policy 25 E is for registering conditions related to the migration-destination storage devices of a data migration.
- this policy 25 E for example, it is possible to register a precedence ranking for each storage device, the smallest unit of a data migration, and the rate of concordance between the targeted size of a data migration (the size of the migration group) and the size of the migration-destination volume.
- the precedence ranking can provide the highest precedence ranking to the storage device with the highest performance inside the storage system, and can set lower precedence rankings in line with reduced performance.
- the smallest unit of migration for example, can be set, in accordance with a user's desires, to bit, byte, kilobyte (Kbyte), megabyte (Mbyte), or gigabyte (Gbyte) units.
- the migration target size can be rounded up. For example, when the migration target size is 3.2 Gbytes, it can be rounded up to 4 Gbytes. This makes it possible to lower the risk of a data migration failing because the size of the selected migration-destination volume fell short of the migration target size. This is because, since the size of the migration-destination volume is selected on the basis of the rounded up size, it is possible to use a migration-destination volume of a size that is slightly larger than the migration target size.
- the rate of concordance between the migration target size and the size of the migration-destination volume is a threshold value for showing how similar the two sizes must be before data migration will be allowed. For example, when 90% is set as the rate of concordance, if 90% or more of the size of a volume can be utilized, then that volume can be selected as the migration-destination volume.
- the expiration date policy 25 F is for registering the handling of files that belong to a migration group for which the expiration date has expired (the storage term has expired). As methods for handling these files, for example, there are “warn the user that there are files whose expiration dates have expired”, “immediately automatically delete files whose expiration dates have expired”, or “delete files whose expiration dates have expired on a scheduled basis”.
- the tape policy 25 G is for registering methods for using a tape device 50 when such a tape device 50 exists inside the storage system. For example, conditions for migrating data to the tape device 50 , such as “use the tape when the migration-destination volume is insufficient”, “move files, which have not been accessed in d3 days or longer, to the tape”, “move files for which d4 days or more have elapsed since the file creation date”, and “when the remaining capacity of a volume is VS3% or less, move only VS4% worth of the files stored in this volume”, are registered in the tape policy 25 G.
- conditions for migrating data to the tape device 50 such as “use the tape when the migration-destination volume is insufficient”, “move files, which have not been accessed in d3 days or longer, to the tape”, “move files for which d4 days or more have elapsed since the file creation date”, and “when the remaining capacity of a volume is VS3% or less, move only VS4% worth of the files stored in this
- the migration execution policy 25 H is for registering methods for handling a situation in which a suitable migration-destination volume could not be found. As methods for handling this situation, for example, “migrate to tape device”, and “warn user” can be cited.
- the group name policy 25 I is for registering the rules for setting the names of migration groups.
- FIG. 13 is a schematic diagram showing an example of file information collected by respective agent programs 17 .
- Agent programs 17 collect the filenames, file generation dates/times, last access dates/times, file sizes, file addresses, and LU numbers of storage destinations for the respective files utilized by each of the servers 10 .
- This file information is sent from the respective agent programs 17 to a manager program 26 .
- FIGS. 14 and 15 are flowcharts showing an overview of a data migration.
- a user carries out pre-registration for the respective policies 25 A through 25 I discussed in the explanation of the policy database 25 (S 11 ), before commencing operation of the storage system (S 12 ).
- the management server 20 determines, on the basis of the migration-targeted file determination policy 25 B, whether or not there are files targeted for migration (S 14 ).
- the management server 20 executes processing for determining a migration destination (S 15 ). The details of this processing will be explained below. Then, the management server 20 determines whether or not a volume capable of being used as the data migration destination has been detected (S 16 ). When a suitable migration-destination volume is detected (S 16 : YES), the management server 20 executes a data migration using this detected migration-destination volume (S 17 ). The details of this processing will be explained below. When a suitable migration-destination volume cannot be detected (S 16 : NO), prescribed error processing is carried out based on the migration execution policy 25 H (S 18 ).
- the management server 20 determines whether or not there are volumes whose expiration dates have expired (S 22 ).
- An expiration date-expired volume is a volume for which the storage terms of all the files stored in this volume have elapsed, and further storage is unnecessary.
- the management server 20 executes processing based on the expiration data policy 25 F (S 23 ).
- the management server 20 determines whether or not it is possible to use a tape device 50 (S 24 ). When the tape device 50 can be used (S 24 : YES), the management server 20 determines, on the basis of the tape policy 25 G, if there are files to be migrated to a tape (S 25 ). When there are files to be migrated to a tape (S 25 : YES), the management server 20 stores those files on the tape device 50 (S 26 ).
- the management server 20 executes processing for determining whether or not to carry out a migration on the basis of device life (S 27 ). This processing will be explained in detail below.
- the management server 20 skips S 25 and goes to S 27 .
- processing returns to S 21 .
- migration-targeted files S 28 : YES
- the management server determines a migration-destination volume by taking device life into account (S 29 ). This processing will be explained in detail below.
- the management server 20 executes data migration using this detected migration-destination volume (S 31 ), and returns to S 21 .
- a suitable migration-destination volume cannot be detected (S 30 : NO)
- the management server 20 carries out prescribed error processing based on the migration execution policy 25 H (S 32 ), and returns to S 21 .
- FIG. 16 is a flowchart showing the group generation processing performed when migration destination determination processing (S 15 ) is executed.
- FIG. 17 is a schematic diagram showing a diagrammatic view of the essential portions of this flowchart.
- the manager program 26 of the management server 20 requests the agent programs 17 of the respective servers 10 to respectively acquire file information (S 41 ).
- the respective agent programs 17 Upon receiving this request (S 42 ), acquire the respective file information of all the files under the management of the servers 10 (S 43 ), and respectively send the respective acquired file information to the manager program 26 (S 44 ).
- the manager program 26 acquires the file information from the respective agent programs 17 (S 45 ), it transfers this file information to the migration management program 27 .
- the management server 20 computes the storage terms of the respective files based on this file information (S 46 ). More specifically, the storage term of a file can be computed by adding the creation date/time of the file to the storage term set for volume in which the file is stored.
- the management server 20 computes the respective storage terms for all the files in the storage system, and registers them in a working table as shown in the approximate middle portion of FIG. 17 (S 47 ).
- the management server 20 inspects each file registered in the working table on the basis of the migration-targeted file determination policy 25 B, and deletes from the working table that information related to unneeded files, which are not targeted for data migration (S 48 ).
- the management server 20 rearranges the records of the working table in order from the longest storage term (in order from the shortest storage term is also acceptable), and, in addition, sets a migration ID for each file (S 49 ).
- the management server 20 sorts the files registered in the working table by prescribed time periods on the basis of the migration group policy 25 D (S 50 ), and generates either one or a plurality of migration groups (S 51 ).
- a prescribed group name is set in a generated migration group based on the group name policy 25 I.
- the management server 20 matches the storage term of a generated migration group to the file with the longest storage term inside this group (S 52 ). Then, the management server 20 generates a group management table 34 C and group configuration table 34 D, and ends this processing (S 53 ).
- FIG. 18 is a flowchart showing migration destination determination processing. This flowchart corresponds to S 15 in FIG. 14 .
- the management server 20 computes the total size (MS) of the migration-targeted files.
- the total size MS can be determined by finding the sizes of all the files comprising the migration group.
- the management server 20 selects the storage device, which has the highest precedence (precedence ranking) of the respective storage devices 30 , 40 in the storage system (S 62 ).
- the connection-source storage device 30 is selected.
- the management server 20 searches among the volumes 36 , 37 of the selected storage device 30 for a volume (LU) of the same size as the total size MS (S 63 ). When a volume that matches the total size MS is detected (S 64 : YES), the management server 20 secures this volume, and executes data migration (S 65 ).
- LU volume of the same size as the total size MS
- the management server 20 expands the size of the volume capable of being selected to a range of MS through V 1 , and once again searches for a volume of the storage device 30 (S 66 ).
- the management server 20 When a volume having a size of V 1 through MS is detected (S 67 : YES), the management server 20 secures this volume, and executes data migration (S 68 ). When a volume having a size of V 1 through MS is not detected (S 67 : NO), the management server 20 searches for the maximum size volume among the volumes 36 , 37 of the storage device 30 (S 69 ).
- the management server 20 When the management server 20 detects the maximum size volume (S 70 : YES), it compares this detected maximum size Vmax against the migration target size MS (S 71 ), and determines if the Vmax is larger than the MS (S 72 ).
- the management server 20 retrieves the volume having the next largest size (S 73 ), and once again compares the Vmax to the MS (S 71 ).
- a Vmax larger than the MS signifies that the size of this volume is larger that the size V 1 permitted by the rate of concordance ar, and when this volume is selected as the migration-destination volume, there is a lot of free area, which is not used, and this constitutes waste. If the size (Vmax) falls with the range of V 1 through MS, a volume of this size Vmax should have been detected in S 67 . If it was not detected in S 67 , this means the size Vmax is larger than the size V 1 , and if it is selected as the migration-destination volume of a data migration, a lot of the storage area will go to waste.
- the volume having the next largest size is retrieved once again (S 73 ).
- the management server 20 detects the volume having the maximum size Vmax less than the size MS (S 72 : NO), secures this Vmax ( ⁇ MS) volume, and executes data migration (S 74 ). Since the size Vmax of this secured volume is less than the migration target size MS, data migration cannot be completed using this volume alone.
- the management server 20 computes the remaining capacity MS 1 , which did not undergo data migration, by subtracting Vmax from the migration target size MS (S 75 ), substitutes this migration residual quantity MS 1 as the MS (S 76 ), and returns to S 61 .
- the remaining migration-targeted files, which were not migrated to the first migration-destination volume, will be moved to another volume.
- the management server 20 determines whether or not a storage device with the next highest precedence exists in the storage system (S 77 ).
- the management server 20 selects this storage device (S 79 ), and repeats the above-mentioned S 63 and subsequent steps.
- the management server 20 carries out the prescribed error processing based on the migration execution policy 25 H (S 78 ).
- the above has been the state of an initial data migration executed for a migration group.
- a migration-destination volume is sought in order from the high-precedence storage device.
- the data of a migration group is divided up, and stored in a plurality of free volumes, respectively.
- another storage device is selected according to precedence.
- FIG. 19 is a flowchart showing data migration execution processing. This processing is executed subsequent to a migration-destination volume being secured.
- the management server 20 selects a group targeted for migration (S 81 ), and selects the lead file inside this group (S 82 ).
- the management server 20 references the address conversion table 34 F, which corresponds to this file (S 83 ), and converts the file address of this file to a logical block address (LBA) (S 84 ).
- LBA logical block address
- the management server 20 accesses the migration-source volume in which this file is stored, reads the file data (S 85 ), and writes the read file data to the migration-destination volume (S 86 ). Then, the management server 20 checks whether or not the migration of this file is finished (S 87 ), and when migration is finished (S 87 : YES), it deletes this file from the migration-source volume (S 88 ). Next, the management server 20 writes a migration ID to the migration-source volume (S 89 ). The migration ID, for example, is stored at the head of the location where the migrated file had been stored.
- the management server 20 determines if all the files in the migration group have been migrated (S 90 ), and when unmigrated files exist (S 90 : NO), it proceeds to the next file (S 91 ) and returns to S 83 . When all the files in the migration group have been migrated from the migration-source volume to the migration-destination volume, this processing ends normally.
- FIG. 20 is a flowchart showing the processing for determining a data migration based on device life.
- the management server 20 detects the storage term Tg and size MS, respectively, of a migration group (S 101 ). Next, the management server 20 compares the device life threshold values LD of the respective storage devices 30 , 40 against the storage term Tg of the migration group, and computes the differences between the two (LD ⁇ Tg) (S 102 ).
- the management server 20 determines whether or not there is a storage device that satisfies the formula LD ⁇ Tg ⁇ 0 (S 103 ). That is, it determines if there is a storage device for which the threshold value of the device life LD is longer than the migration group storage term Tg.
- the management server 20 executes “Nth migration destination determination processing (LD ⁇ Tg ⁇ 0)” (S 104 ). This processing will be explained in detail below. Then, the management server 20 determines if all data migration is complete (S 105 ), and when it is complete (S 105 : YES), it ends this processing normally. When not all data migration has been completed (S 105 : NO), it returns to S 103 . For example, when a storage device with a long life does not comprise adequate free volumes, an entire migration group cannot be migrated to this long-life storage device, causing the management server 20 to return to S 103 , and search for another storage device.
- the management server 20 determines if there is another storage device that satisfies the formula LD ⁇ Tg ⁇ 0 (S 103 ). When another long-life storage device is detected (S 103 : YES), the management server 20 repeats the above-mentioned S 104 , S 105 .
- the management server 20 determines if a storage device that satisfies the formula LD ⁇ Tg ⁇ 0 exists in the storage system (S 106 ). That is, the management server 20 searches for a storage device comprising a device life threshold value LD that is shorter that the migration group's storage term Tg. When a storage device that satisfies the formula LD ⁇ Tg ⁇ 0 is detected (S 106 : YES), the management server 20 executes the “Nth migration destination determination processing (LD ⁇ Tg ⁇ 0)” (S 107 ). Then, the management server 20 determines if all data migration is complete (S 108 ), and when it is not complete (S 108 : NO), the management server 20 returns to S 103 .
- the management server 20 either issues a warning to the user, or migrates the migration group to the tape device 50 on the basis of the tape policy 25 G (S 109 ).
- FIG. 21 is a flowchart showing the details of S 104 in FIG. 20 .
- Nth migration signifies data migrations, which are carried out for the second and subsequent migrations.
- the flowchart shown in FIG. 21 is utilized when the storage device life threshold value LD is greater that the storage term Tg of the migration group (LD ⁇ Tg ⁇ 0).
- This flowchart comprises steps in common with those of the flowchart described together with FIG. 18 . These common steps share the same reference numerals, and explanations thereof will be omitted.
- the management server 20 initially selects a storage device with the smallest (LD ⁇ Tg) value (S 110 ).
- the smallest (LD ⁇ Tg) value means that the difference between the device life threshold value LD and the storage term Tg is near 0, and the migration group storage term Tg approximately coincides with the device life threshold value LD of the storage device.
- a high-precedence storage device is selected in the flowchart shown in FIG. 18 (S 62 )
- a storage device, for which the difference between the device life threshold value LD and storage term Tg is small is selected.
- the management server 20 searches to determine if there is another storage device with the next smallest (LD ⁇ Tg) value (S 111 ).
- the management server 20 selects this storage device (S 113 ), and returns to S 63 .
- a storage device with the smallest (LD ⁇ Tg) value does not exist (S 111 : NO), that is, when there is no storage device comprising a device life threshold value LD, which is equal to or greater than the migration group storage term Tg, the management server 20 moves to processing for determining when (LD ⁇ Tg)>0 (S 112 ).
- FIG. 22 is a flowchart showing the details of S 107 in FIG. 20 . Since this flowchart also comprises steps in common with those of the flowchart shown in FIG. 18 , explanations of the common parts will be omitted, and the explanation will focus on the points of difference.
- the management server 20 selects the storage device with the largest (LD ⁇ Tg) value (S 121 ). That is, in this processing, the difference between the migration group storage term Tg and the device life threshold value LD constitutes a negative value, and the storage device with the smallest negative value is selected. In other words, the management server 20 initially selects the storage server for which the difference between Tg and LD is smaller.
- the management server 20 searches for the next storage device (S 122 ).
- the management server 20 detects the next storage device (S 122 : YES), it selects this storage device (S 123 ) and returns to S 63 .
- the management server 20 carries out error processing, such as issuing a warning to the user (S 78 ).
- the management server 20 places priority on using a storage device, which has a device life threshold value LD that is longer than the storage term Tg of the migration group, and when the free volumes in this long-life storage device are used up, it selects and uses a storage device with as long a life as possible.
- FIG. 23 is a flowchart showing file access processing executed by an agent program 17 .
- An agent program 17 not only collects file information, but also processes file access requests transferred from an application program via the OS.
- file access request signifies read access.
- an agent program 17 When an agent program 17 receives a file access request from the OS (S 131 ), it accesses the volume in which this file is stored (S 132 ).
- the agent program 17 when the file access request from the OS is a write access, the agent program 17 returns a write-prohibited status. That is, the agent program 17 only permits read access to a volume, which has undergone migration. Permitting only read access to a migration volume, while prohibiting write access is done to prevent an increase in volume capacity resulting from the writing of data, and to prevent volume tampering. Furthermore, it is also possible to use a constitution that permits write access; the present invention is not limited to a constitution, which only permits read access to a migration volume.
- the agent program 17 accesses the requested volume (S 132 ), and when it reads the desired file from the access-destination volume (S 133 : YES), the agent program 17 returns the read results to the OS (S 144 ). In other words, when the access-targeted file has not been migrated yet, the agent program 17 can immediately read data from the volume in which this file is stored, and deliver it to the OS.
- the agent program 17 determines whether or not the migration ID was read (S 134 ).
- the migration ID cannot be read (S 134 : NO)
- the agent program 17 carries out error processing (S 135 ). In this error processing, for example, notification is made to the OS to the effect that access to the file failed.
- the agent program 17 acquires this migration ID (S 136 ), specifies this migration ID, and queries the manager program 26 of the management server 20 as to the location of the file (S 137 ).
- the manager program 26 When the manager program 26 receives the query request from the agent program 17 (S 138 ), it searches the migration log table 34 E on the basis of the specified migration ID (S 139 ). When the manager program 26 detects the migration destination of the file (S 140 ), it notifies the agent program 17 of the location of this file (S 141 ).
- the agent program 17 When the agent program 17 receives the reply from the manager program 26 regarding the migration destination of the access-targeted file (S 142 ), it accesses the prescribed address of the migration-destination volume, and reads the data of the file (S 143 ), and returns the read results to the OS (S 144 ).
- the management server 20 uniformly manages the locations of files before and after data migration in this manner, and migration IDs for learning the migration destinations of files are stored in the migration-source volume. Therefore, an agent program 17 can access a file that has been targeted by querying the management server 20 based on a migration ID no matter where inside the storage system a file has been migrated.
- FIG. 24 is a flowchart showing the processing when a storage device is added to the storage system.
- a notification notifying a state change is issued from either the added storage device, or the switch 60 connected to this added storage device.
- a state change notification such as a RSCN (Registered State Change Notification) or LIP (Loop Initialization Primitive) is issued from the source of the change.
- RSCN Registered State Change Notification
- LIP Loop Initialization Primitive
- SCR State Change Registration
- SCN State Change Notification
- the management server 20 When the management server 20 receives a state change notification (S 151 ), it accesses the added storage device, acquires the LU number, LU size and other such information (S 152 ), and based on this acquired information, updates the pool management table 34 A (S 153 ). Next, when a user accesses the management server 20 and registers various policies (S 154 ), it becomes possible to use this added storage device in a data migration.
- FIG. 25 is a flowchart showing processing for removing a storage device from the storage system.
- the user makes an input to the management server 20 to the effect that the storage device will be removed.
- the management server 20 determines whether or not a migration group exists inside the storage device targeted for removal (S 162 ). When a migration group exists inside the storage device targeted for removal (S 162 : YES), the management server 20 executes a data migration using the above-mentioned device life as a trigger (S 163 ).
- the management server 20 deletes the storage device targeted for removal from the pool in the migration management database 34 , and notifies the user to the effect that he has permission to remove the storage device (S 164 ).
- this embodiment is constituted as described hereinabove, it exhibits the following effects.
- the constitution is such that a plurality of types of files, the storage time limits of which arrive within a prescribed time period, are collected together into a single migration group, and data migration is carried out en masse. Therefore, the data migration of a plurality of types of files can be collectively managed with a more moderate range of storage terms, thereby enhancing usability.
- the constitution is such that the initial data migration of a migration group is carried out based on the precedence of a storage device, and the next data migration related to the same migration group is carried out taking into account the life of a storage device. Therefore, in the initial data migration, a migration group is moved to a relatively high-performance storage device, and can be readied for reuse by the server 10 , and in the second and subsequent data migrations, it is possible to use a storage device, which corresponds to the storage term of the migration group. This makes it possible to effectively utilize the storage resources of a storage system, and also enhances usability.
- the constitution is such that data migration can be carried out between storage devices while taking into account the life of the storage devices. Therefore, files, which must be stored for a long period of time, can be stored inside a storage system, the constitution of which changes with the passage of time, thus enhancing usability.
- the constitution is such that, after a data migration, a migrated file is deleted from the migration-source volume, and a migration ID is left in its place, and the management server 20 uniformly manages a log of data migrations based on the migration IDs. Therefore, the amount of information for determining the location of a migrated file can be reduced, the storage resources of the migration-source volume can be effectively utilized, and the migrated files can be easily accessed.
- the constitution is such that storage devices with the longest possible device life are selected in the second and subsequent data migrations. Therefore, it is possible to reduce the frequency of data migrations, and to lessen the load on the storage system.
- a second embodiment of the present invention will be explained based on FIG. 26 .
- This embodiment is equivalent to a variation of the above-mentioned first embodiment, and the explanation given for the first embodiment will be appropriately cited.
- information for managing a data migration is distributed and stored in prescribed locations of the volumes in which respective migration groups are stored.
- FIG. 26 is a flowchart showing the data migration execution processing of this embodiment, and comprises steps in common with those of the flowchart shown in FIG. 19 explained above. The explanation will omit the common parts, and focus on the points of difference.
- the management server 20 reads migration-targeted files from the migration-source volume (S 85 ), after which, it stores the data and management information of these files in a migration-destination volume (S 171 ).
- management information it is possible to cite information used for specifying files, information used for specifying the migration group, and information used for specifying policies.
- the storage terms of the respective files, file sizes, migration IDs and so forth can be cited.
- the migration group for example, it is possible to cite the migration group storage term, the number and size of the volume, which will constitute the migration group, the ID of the storage device in which the volume resides, and the migration log.
- information used for specifying policies for example, it is possible to cite information indicating the policies on which the execution of a data migration was based.
- FIG. 27 is a flowchart showing the processing for reconstructing the migration management database 34 when it is impaired.
- the management server 20 detects that trouble has occurred in the migration management database 34 (S 181 : YES), it selects the initial storage device in the storage system (for example, by ID order) (S 182 ), accesses the prescribed address in all of the volumes, and reads out the respective management information (S 183 ).
- the management server 20 collects management information (S 183 ) by switching from one storage device to another (S 185 ).
- the management server 20 restores the migration management database 34 (S 186 ).
- This thus-constituted embodiment exhibits the same effects as the above-mentioned first embodiment.
- the management information is distributed and arranged in the respective volumes, even when the migration management database 34 is impaired, the migration management database 34 can be restored. Therefore, in a storage system that changes over time, long-term data migrations that span storage devices can be executed highly reliably.
- the present invention is not limited to the above-mentioned embodiments.
- a person having ordinary skill in the art will be able to make various additions and changes within the scope of the present invention.
- a constitution, in which a plurality of management servers is operated in concert can also be used.
Abstract
Description
Claims (1)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2005174653A JP2006350599A (en) | 2005-06-15 | 2005-06-15 | Storage system and data migration method thereof |
JP2005-174653 | 2005-06-15 |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060288048A1 US20060288048A1 (en) | 2006-12-21 |
US7590664B2 true US7590664B2 (en) | 2009-09-15 |
Family
ID=37574634
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/205,216 Active 2027-10-13 US7590664B2 (en) | 2005-06-15 | 2005-08-17 | Storage system and storage system data migration method |
Country Status (2)
Country | Link |
---|---|
US (1) | US7590664B2 (en) |
JP (1) | JP2006350599A (en) |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080114830A1 (en) * | 2006-11-15 | 2008-05-15 | Palm, Inc. | Intelligent Migration Between Devices Having Different Hardware or Software Configuration |
US20090049320A1 (en) * | 2007-08-14 | 2009-02-19 | Dawkins William P | System and Method for Managing Storage Device Capacity Usage |
US20090245519A1 (en) * | 2008-03-28 | 2009-10-01 | Christian Cachin | Renewal management for data items |
US20100199331A1 (en) * | 2000-05-01 | 2010-08-05 | Palm, Inc. | User profile or user account association with multiple computers |
US7783615B1 (en) * | 2005-09-30 | 2010-08-24 | Emc Corporation | Apparatus and method for building a file system index |
US20110191537A1 (en) * | 2009-10-09 | 2011-08-04 | Hitachi, Ltd. | Storage controller and virtual volume control method |
US8006061B1 (en) * | 2007-04-13 | 2011-08-23 | American Megatrends, Inc. | Data migration between multiple tiers in a storage system using pivot tables |
USRE43577E1 (en) | 2000-05-01 | 2012-08-14 | Hewlett-Packard Development Company, L.P. | Swapping a nonoperational networked electronic system for an operational networked electronic system |
US8285817B1 (en) | 2006-03-20 | 2012-10-09 | Netapp, Inc. | Migration engine for use in a logical namespace of a storage system environment |
US20120311000A1 (en) * | 2011-06-03 | 2012-12-06 | Apple Inc. | Pre-organization of Data |
US9519438B1 (en) | 2007-04-13 | 2016-12-13 | American Megatrends, Inc. | Data migration between multiple tiers in a storage system using age and frequency statistics |
US9529804B1 (en) * | 2007-07-25 | 2016-12-27 | EMC IP Holding Company LLC | Systems and methods for managing file movement |
US9880780B2 (en) | 2015-11-30 | 2018-01-30 | Samsung Electronics Co., Ltd. | Enhanced multi-stream operations |
US9898202B2 (en) | 2015-11-30 | 2018-02-20 | Samsung Electronics Co., Ltd. | Enhanced multi-streaming though statistical analysis |
US10565159B2 (en) | 2014-08-12 | 2020-02-18 | International Business Machines Corporation | Archiving data sets in a volume in a primary storage in a volume image copy of the volume in a secondary storage |
US10606828B2 (en) * | 2017-10-19 | 2020-03-31 | Jpmorgan Chase Bank, N.A. | Storage correlation engine |
US11238107B2 (en) | 2020-01-06 | 2022-02-01 | International Business Machines Corporation | Migrating data files to magnetic tape according to a query having one or more predefined criterion and one or more query expansion profiles |
Families Citing this family (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP4688556B2 (en) * | 2005-04-22 | 2011-05-25 | 株式会社日立製作所 | Volume migration system, volume relocation method, and program |
JP2008134712A (en) * | 2006-11-27 | 2008-06-12 | Hitachi Ltd | File sharing system, file sharing device, and method for migrating volume for file sharing |
JP4702314B2 (en) * | 2007-03-23 | 2011-06-15 | ブラザー工業株式会社 | Content distributed storage system, node device, node processing program, and content data acquisition method |
WO2009008027A1 (en) * | 2007-07-06 | 2009-01-15 | Fujitsu Limited | Storage management device |
US8099454B2 (en) | 2007-08-03 | 2012-01-17 | International Business Machines Corporation | Staging a file within a distributed computing system |
JP2009093571A (en) * | 2007-10-11 | 2009-04-30 | Hitachi Ltd | Storage control apparatus, data archive method for storage control apparatus, and storage system |
JP2009116826A (en) * | 2007-11-09 | 2009-05-28 | Hitachi Ltd | Storage device and logical volume migration method |
JP2009169688A (en) * | 2008-01-16 | 2009-07-30 | Fujitsu Ltd | Storage device, data migration device, and data migration method |
CA2714745A1 (en) | 2008-02-12 | 2009-08-20 | Netapp, Inc. | Hybrid media storage system architecture |
JP2009211132A (en) * | 2008-02-29 | 2009-09-17 | Hitachi Ltd | Storage system and data migration method |
US8862600B2 (en) * | 2008-04-29 | 2014-10-14 | Accenture Global Services Limited | Content migration tool and method associated therewith |
JP5284685B2 (en) * | 2008-05-16 | 2013-09-11 | インターナショナル・ビジネス・マシーンズ・コーポレーション | File rearrangement device, rearrangement method, and rearrangement program |
JP5108667B2 (en) * | 2008-07-23 | 2012-12-26 | 株式会社日立製作所 | Remote copy system and remote site power saving method |
US8171060B2 (en) | 2008-12-03 | 2012-05-01 | Hitachi, Ltd. | Storage system and method for operating storage system |
US20100235592A1 (en) * | 2009-03-10 | 2010-09-16 | Yasunori Kaneda | Date volume migration with migration log confirmation |
JP2010257094A (en) * | 2009-04-23 | 2010-11-11 | Hitachi Ltd | Method for clipping migration candidate file in hierarchical storage management system |
JP2010267028A (en) * | 2009-05-13 | 2010-11-25 | Brother Ind Ltd | Management device, management processing program, node device, node processing program, and expired record determination method |
JP5477027B2 (en) * | 2010-02-08 | 2014-04-23 | 富士通株式会社 | Storage device, storage device control method, and storage device control program |
TWI474143B (en) * | 2010-02-09 | 2015-02-21 | Hitachi Int Electric Inc | Substrate processing system and data processing method thereof, group control device and data processing method thereof, method of manufacturing semiconductor processing apparatus, and computer-readable recording medium |
CN102667772B (en) * | 2010-03-01 | 2015-05-20 | 株式会社日立制作所 | File level hierarchical storage management system, method, and apparatus |
JP5561061B2 (en) * | 2010-09-21 | 2014-07-30 | 大日本印刷株式会社 | Data storage system |
JP5633689B2 (en) * | 2010-11-09 | 2014-12-03 | 日本電気株式会社 | Database migration management apparatus and method |
US8595192B1 (en) * | 2010-12-01 | 2013-11-26 | Symantec Corporation | Systems and methods for providing high availability to instance-bound databases |
JP5950522B2 (en) * | 2011-09-07 | 2016-07-13 | キヤノン株式会社 | Apparatus, method, and program for displaying document list |
US9165002B1 (en) * | 2012-06-27 | 2015-10-20 | Amazon Technologies, Inc. | Inexpensive deletion in a data storage system |
US9047239B2 (en) * | 2013-01-02 | 2015-06-02 | International Business Machines Corporation | Determining weight values for storage devices in a storage tier to use to select one of the storage devices to use as a target storage to which data from a source storage is migrated |
US9208163B2 (en) * | 2013-01-15 | 2015-12-08 | Ca, Inc. | Methods for preserving generation data set sequences |
US20140380012A1 (en) * | 2013-06-25 | 2014-12-25 | Lexmark International Technologies S.A. | System and Methods of Data Migration Between Storage Devices |
WO2016138474A1 (en) * | 2015-02-26 | 2016-09-01 | Bittitan, Inc. | Data migration systems and methods including archive migration |
JP6459669B2 (en) * | 2015-03-17 | 2019-01-30 | 日本電気株式会社 | Column store type database management system |
US10042556B2 (en) | 2015-07-30 | 2018-08-07 | International Business Machines Corporation | Reclamation of storage medium |
US10311042B1 (en) * | 2015-08-31 | 2019-06-04 | Commvault Systems, Inc. | Organically managing primary and secondary storage of a data object based on expiry timeframe supplied by a user of the data object |
CN105897457A (en) * | 2015-12-09 | 2016-08-24 | 乐视云计算有限公司 | Service upgrade method and system of server group |
US10642860B2 (en) | 2016-06-03 | 2020-05-05 | Electronic Arts Inc. | Live migration of distributed databases |
JP6181247B1 (en) * | 2016-07-01 | 2017-08-16 | 株式会社東芝 | Database management apparatus, database management method, and database management program |
US10657154B1 (en) * | 2017-08-01 | 2020-05-19 | Amazon Technologies, Inc. | Providing access to data within a migrating data partition |
US10705752B2 (en) * | 2018-02-12 | 2020-07-07 | International Business Machines Corporation | Efficient data migration in hierarchical storage management system |
CN108829350B (en) * | 2018-05-31 | 2020-02-21 | 阿里巴巴集团控股有限公司 | Data migration method and device based on block chain |
JP7106656B2 (en) * | 2018-09-07 | 2022-07-26 | 株式会社東芝 | DATABASE DEVICE, PROGRAM AND DATA PROCESSING METHOD |
US11327675B2 (en) * | 2019-01-23 | 2022-05-10 | Accenture Global Solutions Limited | Data migration |
JP7143268B2 (en) * | 2019-10-07 | 2022-09-28 | 株式会社日立製作所 | Storage system and data migration method |
JPWO2021186774A1 (en) * | 2020-03-18 | 2021-09-23 | ||
US11106634B1 (en) * | 2021-01-05 | 2021-08-31 | Stark Industries, Inc. | Systems and methods for randomized file segmentation and storage |
JPWO2022168448A1 (en) * | 2021-02-08 | 2022-08-11 | ||
US20230030168A1 (en) * | 2021-07-27 | 2023-02-02 | Dell Products L.P. | Protection of i/o paths against network partitioning and component failures in nvme-of environments |
CN114398005A (en) * | 2021-12-22 | 2022-04-26 | 上海金仕达软件科技有限公司 | Data secure migration method and device and storage medium |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6701393B1 (en) * | 2002-06-27 | 2004-03-02 | Emc Corporation | Systems and methods for managing storage location descriptors |
JP2004070403A (en) | 2002-08-01 | 2004-03-04 | Hitachi Ltd | File storage destination volume control method |
US20040162940A1 (en) * | 2003-02-17 | 2004-08-19 | Ikuya Yagisawa | Storage system |
JP2004295457A (en) | 2003-03-27 | 2004-10-21 | Hitachi Ltd | Storage device |
US20050055402A1 (en) * | 2003-09-09 | 2005-03-10 | Eiichi Sato | File sharing device and inter-file sharing device data migration method |
US20050120188A1 (en) * | 2003-12-01 | 2005-06-02 | Hiroshi Kuwabara | Storage control apparatus, storage system, and control method for storage system |
US20050198451A1 (en) * | 2004-02-24 | 2005-09-08 | Hitachi, Ltd. | Method and apparatus of media management on disk-subsystem |
US20050216591A1 (en) * | 2004-03-26 | 2005-09-29 | Eiichi Sato | Storage system |
US7039012B2 (en) * | 1996-03-28 | 2006-05-02 | Hitachi, Ltd. | Process execution method and apparatus |
US7392234B2 (en) * | 1999-05-18 | 2008-06-24 | Kom, Inc. | Method and system for electronic file lifecycle management |
-
2005
- 2005-06-15 JP JP2005174653A patent/JP2006350599A/en active Pending
- 2005-08-17 US US11/205,216 patent/US7590664B2/en active Active
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7039012B2 (en) * | 1996-03-28 | 2006-05-02 | Hitachi, Ltd. | Process execution method and apparatus |
US7392234B2 (en) * | 1999-05-18 | 2008-06-24 | Kom, Inc. | Method and system for electronic file lifecycle management |
US6701393B1 (en) * | 2002-06-27 | 2004-03-02 | Emc Corporation | Systems and methods for managing storage location descriptors |
JP2004070403A (en) | 2002-08-01 | 2004-03-04 | Hitachi Ltd | File storage destination volume control method |
US20040162940A1 (en) * | 2003-02-17 | 2004-08-19 | Ikuya Yagisawa | Storage system |
JP2004295457A (en) | 2003-03-27 | 2004-10-21 | Hitachi Ltd | Storage device |
US20050055402A1 (en) * | 2003-09-09 | 2005-03-10 | Eiichi Sato | File sharing device and inter-file sharing device data migration method |
US20050120188A1 (en) * | 2003-12-01 | 2005-06-02 | Hiroshi Kuwabara | Storage control apparatus, storage system, and control method for storage system |
US20050198451A1 (en) * | 2004-02-24 | 2005-09-08 | Hitachi, Ltd. | Method and apparatus of media management on disk-subsystem |
US7039662B2 (en) * | 2004-02-24 | 2006-05-02 | Hitachi, Ltd. | Method and apparatus of media management on disk-subsystem |
US20050216591A1 (en) * | 2004-03-26 | 2005-09-29 | Eiichi Sato | Storage system |
Cited By (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
USRE43577E1 (en) | 2000-05-01 | 2012-08-14 | Hewlett-Packard Development Company, L.P. | Swapping a nonoperational networked electronic system for an operational networked electronic system |
US8416705B2 (en) | 2000-05-01 | 2013-04-09 | Hewlett-Packard Development Company, L.P. | User profile or user account association with multiple computers |
US20100199331A1 (en) * | 2000-05-01 | 2010-08-05 | Palm, Inc. | User profile or user account association with multiple computers |
US7783615B1 (en) * | 2005-09-30 | 2010-08-24 | Emc Corporation | Apparatus and method for building a file system index |
US8285817B1 (en) | 2006-03-20 | 2012-10-09 | Netapp, Inc. | Migration engine for use in a logical namespace of a storage system environment |
US9037685B2 (en) * | 2006-11-15 | 2015-05-19 | Qualcomm Incorporated | Intelligent migration between devices having different hardware or software configuration |
US20080114830A1 (en) * | 2006-11-15 | 2008-05-15 | Palm, Inc. | Intelligent Migration Between Devices Having Different Hardware or Software Configuration |
US8006061B1 (en) * | 2007-04-13 | 2011-08-23 | American Megatrends, Inc. | Data migration between multiple tiers in a storage system using pivot tables |
US9519438B1 (en) | 2007-04-13 | 2016-12-13 | American Megatrends, Inc. | Data migration between multiple tiers in a storage system using age and frequency statistics |
US8255660B1 (en) | 2007-04-13 | 2012-08-28 | American Megatrends, Inc. | Data migration between multiple tiers in a storage system using pivot tables |
US8812811B1 (en) | 2007-04-13 | 2014-08-19 | American Megatrends, Inc. | Data migration between multiple tiers in a storage system using pivot tables |
US9529804B1 (en) * | 2007-07-25 | 2016-12-27 | EMC IP Holding Company LLC | Systems and methods for managing file movement |
US8046597B2 (en) * | 2007-08-14 | 2011-10-25 | Dell Products L.P. | System and method for managing storage device capacity use |
US20090049320A1 (en) * | 2007-08-14 | 2009-02-19 | Dawkins William P | System and Method for Managing Storage Device Capacity Usage |
US20090245519A1 (en) * | 2008-03-28 | 2009-10-01 | Christian Cachin | Renewal management for data items |
US8681990B2 (en) * | 2008-03-28 | 2014-03-25 | International Business Machines Corporation | Renewal management for data items |
US20110191537A1 (en) * | 2009-10-09 | 2011-08-04 | Hitachi, Ltd. | Storage controller and virtual volume control method |
US8225039B2 (en) * | 2009-10-09 | 2012-07-17 | Hitachi, Ltd. | Storage controller and virtual volume control method |
US8606993B2 (en) | 2009-10-09 | 2013-12-10 | Hitachi, Ltd. | Storage controller and virtual volume control method |
US20120311000A1 (en) * | 2011-06-03 | 2012-12-06 | Apple Inc. | Pre-organization of Data |
US8738882B2 (en) * | 2011-06-03 | 2014-05-27 | Apple Inc. | Pre-organization of data |
US10565159B2 (en) | 2014-08-12 | 2020-02-18 | International Business Machines Corporation | Archiving data sets in a volume in a primary storage in a volume image copy of the volume in a secondary storage |
US11327924B2 (en) | 2014-08-12 | 2022-05-10 | International Business Machines Corporation | Archiving data sets in a volume in a primary storage in a volume image copy of the volume in a secondary storage |
US9880780B2 (en) | 2015-11-30 | 2018-01-30 | Samsung Electronics Co., Ltd. | Enhanced multi-stream operations |
US9898202B2 (en) | 2015-11-30 | 2018-02-20 | Samsung Electronics Co., Ltd. | Enhanced multi-streaming though statistical analysis |
US10606828B2 (en) * | 2017-10-19 | 2020-03-31 | Jpmorgan Chase Bank, N.A. | Storage correlation engine |
US11238107B2 (en) | 2020-01-06 | 2022-02-01 | International Business Machines Corporation | Migrating data files to magnetic tape according to a query having one or more predefined criterion and one or more query expansion profiles |
Also Published As
Publication number | Publication date |
---|---|
US20060288048A1 (en) | 2006-12-21 |
JP2006350599A (en) | 2006-12-28 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7590664B2 (en) | Storage system and storage system data migration method | |
US7441096B2 (en) | Hierarchical storage management system | |
US7653792B2 (en) | Disk array apparatus including controller that executes control to move data between storage areas based on a data protection level | |
US8364858B1 (en) | Normalizing capacity utilization within virtual storage pools | |
US7822939B1 (en) | Data de-duplication using thin provisioning | |
JP4943081B2 (en) | File storage control device and method | |
US8725737B2 (en) | Systems and methods for using metadata to enhance data identification operations | |
US8204858B2 (en) | Snapshot reset method and apparatus | |
US9396207B1 (en) | Fine grained tiered storage with thin provisioning | |
WO2012004837A1 (en) | Storage apparatus and storage management method | |
US20060106893A1 (en) | Incremental backup operations in storage networks | |
US11880578B2 (en) | Composite aggregate architecture | |
US10809932B1 (en) | Managing data relocations in storage systems | |
US7305530B2 (en) | Copy operations in storage networks | |
US10482065B1 (en) | Managing deletion of replicas of files | |
US10242011B1 (en) | Managing truncation of files of file systems | |
US8478936B1 (en) | Spin down of storage resources in an object addressable storage system | |
AU2006318338B2 (en) | Systems and methods for data management |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: HITACHI, LTD., JAPANFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KAMOHARA, TOSHIKI;SATO, EIICHI;NOZAWA, MASAFUMI;REEL/FRAME:016896/0282Effective date: 20050801 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:HITACHI, LTD.;REEL/FRAME:030555/0554Effective date: 20121016 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
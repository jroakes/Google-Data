US10038909B2 - Compression of light field images - Google Patents
Compression of light field images Download PDFInfo
- Publication number
- US10038909B2 US10038909B2 US15/203,683 US201615203683A US10038909B2 US 10038909 B2 US10038909 B2 US 10038909B2 US 201615203683 A US201615203683 A US 201615203683A US 10038909 B2 US10038909 B2 US 10038909B2
- Authority
- US
- United States
- Prior art keywords
- image
- pixel
- compressed image
- light field
- pixels
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G02—OPTICS
- G02B—OPTICAL ELEMENTS, SYSTEMS OR APPARATUS
- G02B27/00—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00
- G02B27/0075—Optical systems or apparatus not provided for by any of the groups G02B1/00 - G02B26/00, G02B30/00 with means for altering, e.g. increasing, the depth of field or depth of focus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
-
- G06K9/6218—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/182—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a pixel
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/184—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being bits, e.g. of the compressed video stream
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/186—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a colour or a chrominance component
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/42—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation
- H04N19/423—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements
- H04N19/426—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements using memory downsizing methods
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/597—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding specially adapted for multi-view video sequence encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
Definitions
- the present invention relates to systems and methods for compressing and storing digital media such as two-dimensional images projected from light field data.
- Light field cameras capture not just a two-dimensional image, but also light field data related to the angle of incidence of light received at various locations within the image. Such data is captured by causing the light to pass through a microlens array (MLA) positioned between the main lens and the image capture sensor.
- MLA microlens array
- the resulting image may have a plurality of pixel clusters, each of which represents light that passed through a single microlens of the microlens array. Capture of directional information in this manner facilitates various operations, such as refocusing and other forms of image manipulation that are not possible with conventional images.
- light field image files may be very large.
- the presence of a microlens pattern superimposed on the representation of the scene can result in rapidly varying content within the light field image file; this high-frequency spatial variation in pixel intensity can result in poor performance when applying conventional image compression techniques.
- the system and method of the present invention provide mechanisms for compressing two-dimensional images projected from light field data, while avoiding the above-described problems that result from the high-frequency spatial variation in pixel intensity inherent in light field image data.
- a light field image may be received, for example, from a light field camera.
- the light field image may be compressed in a number of steps that may include any or all of the following steps: (1) reducing a color depth of the pixels of the image, (2) retiling the image, (3) padding the image so that it is sized for optimal performance of an image compression algorithm, (4) applying the image compression algorithm to the image, and/or (5) assembling the resulting compressed image with metadata. These steps need not all be performed in every embodiment.
- the color depth reduction step may include the use of a K-means bit reduction algorithm.
- a K-means bit reduction algorithm may be used, for example, to reduce the color depth of the pixels of the image from 12 bits to 8 bits, which may help to enhance performance of the image compression algorithm.
- Color depth reduction parameters may be included in the metadata of the compressed image to indicate how color depth reduction was performed on the image.
- the retiling step may be used further enhance the performance of the image compression algorithm by grouping pixels of similar colors and/or similar intensities together for image compression purposes.
- the image may be a RAW image, and may also be Bayer filtered image or the like.
- the image may have groups of 2 ⁇ 2 pixels, each of which has an intensity obtained from light filtered through red, green, or blue filters.
- the retiling step may be used to group pixels of each color together, thereby reducing the spatial intensity variation and improving compression performance.
- a light field image may include a plurality of pixel clusters, each of which encodes a portion of the light field data corresponding to a microlens of the microlens array of the light field camera.
- Each pixel cluster may have pixels horizontally and vertically arranged in a grid pattern.
- the image is retiled according to the period of the microlens array; this results in, retiled pixel clusters wherein adjacent pixels are relatively similar in intensity.
- the arrangement of retiled pixels ensures that there is a one-to-one correspondence between the pixels of each pixel cluster and the retiled pixel clusters of the retiled image, while reducing spatial intensity variation and thereby improving compression performance.
- the retiled pixel clusters may be arranged in a grid pattern that corresponds to the relative positions of each pixel within each pixel cluster were arranged.
- a mapping of pixels from the pixel clusters to the retiled pixel clusters may be included in the metadata of the compressed image.
- Padding the image may involve adding one or more pixel rows and/or pixel columns to the image so that it is the appropriate size for application of the image compression algorithm.
- the added pixel rows and/or pixel columns may be duplicates of the adjacent edge a pixel column and/or edge pixel row.
- padding parameters that indicate how pixels were added to the retiled image may be included in the compressed image.
- Applying the image compression algorithm to the image may entail applying a known lossless or lossy image compression algorithm such as that developed by the Joint Photographic experts Group, known as “JPEG” compression. Additionally or alternatively, application of the image compression algorithm may entail application of one or more novel techniques for compressing an image, as described herein.
- the image compression algorithm may be applied to the retiled image; the performance of the image compression algorithm may be enhanced by the color depth reduction, retiling, and/or padding steps performed previously.
- the compressed image may be processed through the use of a method with steps that are, generally, the reverse of the steps applied to compress the image.
- the image compression algorithm may be applied in reverse.
- the padding may be reversed by removing the extra pixel columns and/or rows.
- the compressed image may be retiled again such that the pixels originally in each pixel cluster are again grouped together, and the color depth of the pixels may again be increased.
- the metadata of the compressed image which may contain any of the components set forth above, may be used to facilitate any of the foregoing steps.
- FIG. 1A depicts an example of an architecture for implementing the present invention in a light field capture device, according to one embodiment.
- FIG. 1B depicts an example of an architecture for implementing the present invention in a post-processing system communicatively coupled to a light field capture device, according to one embodiment.
- FIG. 2 depicts an example of an architecture for a light field camera for implementing the present invention according to one embodiment.
- FIG. 3 depicts a portion of a light field image.
- FIG. 4 depicts transmission of light rays through a microlens to illuminate pixels in a digital sensor.
- FIG. 5 depicts an arrangement of a light field capture device wherein a microlens array is positioned such that images of a main-lens aperture, as projected onto the digital sensor, do not overlap.
- FIG. 6 depicts an example of projection and reconstruction to reduce a four-dimensional light field representation to a two-dimensional image.
- FIGS. 7A and 7B depict two exemplary lookup tables that map three-bit raw pixel values to two-bit encoded, lower precision values.
- FIG. 8 depicts an exemplary image histogram with a corresponding cumulative histogram.
- FIG. 9A depicts a histogram for an initial state, in which a single span encompasses the entire histogram.
- FIG. 9B depicts the histogram of FIG. 9A after one step, showing the final metric values for each of two spans.
- FIG. 9C depicts the histogram of FIG. 9A after two steps, showing the final metric values for each of three spans.
- FIG. 9D depicts the selection of four pixel values spaced across the full range of pixel vales of the histogram of FIG. 9A .
- FIGS. 10A and 10B depict the use of four seed values in an exemplary four-bit to two-bit conversion lookup table to populate the remainder of the lookup table.
- FIG. 11A depicts a 4 ⁇ 3 grid of pixels of a full-color YUV image.
- FIG. 11B depicts a 4 ⁇ 3 grid of pixels of a full-color 422-sub-sampled YUV image.
- FIG. 12 depicts the mapping between a 2 ⁇ 2 grid of RAW image pixels and a 2 ⁇ 1 grid of YUV422 full-color image pixels.
- FIG. 13 depicts the mapping between a 4 ⁇ 4 grid of RAW image pixels and a 4 ⁇ 2 grid of YUV422 full-color image pixels.
- FIG. 14A depicts compression of a YUV422 image buffer to a JPEG data stream.
- FIG. 14B depicts decompression of a YUV422 image buffer from a JPEG data stream.
- FIG. 15 depicts JPEG encoding and decoding in schematic form.
- FIG. 16 depicts an exemplary inverse lookup table mapping two-bit encoded pixel values to 3-bit raw values.
- FIG. 17A depicts a RAW light field image.
- FIG. 17B depicts an enlarged portion of the RAW light field image of FIG. 17A , illustrating the pixel clusters of the RAW light field image.
- FIG. 18 depicts a method for compressing an image projected from light field data, according to one embodiment of the invention.
- FIG. 19 depicts a histogram of a type that may be used to facilitate pixel color depth reduction in the form of K-means bit reduction.
- FIG. 20 depicts a mapping of pixels from pixel clusters of the image to retiled pixel clusters to form a retiled image.
- FIG. 21A depicts a retiled light field image.
- FIG. 21B depicts an enlarged portion of the retiled light field image of FIG. 21A .
- FIG. 22 depicts a padding process for adding one or more pixel rows and/or columns to the retiled image.
- FIG. 23 depicts an image file that may be stored after assembly of the compressed light field image and metadata.
- FIG. 24 depicts a method for processing a compressed image for use, wherein the compressed image has been compressed with a method such as that of FIG. 18 .
- a data acquisition device can be any device or system for acquiring, recording, measuring, estimating, determining and/or computing data representative of a scene, including but not limited to two-dimensional image data, three-dimensional image data, and/or light field data.
- a data acquisition device may include optics, sensors, and image processing electronics for acquiring data representative of a scene, using techniques that are well known in the art, are disclosed herein, or could be conceived by a person of skill in the art with the aid of the present disclosure.
- the system and method described herein can be implemented in connection with light field images captured by light field capture devices including but not limited to those described in Ng et al., Light field photography with a hand-held plenoptic capture device, Technical Report CSTR 2005-02, Stanford Computer Science.
- FIG. 1A there is shown a block diagram depicting an architecture for implementing the present invention in a light field capture device such as a camera 100 .
- FIG. 1B there is shown a block diagram depicting an architecture for implementing the present invention in a post-processing system communicatively coupled to a light field capture device such as a camera 100 , according to one embodiment.
- FIGS. 1A and 1B are merely exemplary, and that other architectures are possible for camera 100 .
- FIGS. 1A and 1B are merely exemplary, and that other architectures are possible for camera 100 .
- FIGS. 1A and 1B are optional, and may be omitted or reconfigured. Other components as known in the art may additionally or alternatively be added.
- camera 100 may be a light field camera that includes light field image data acquisition device 109 having optics 101 , image sensor or sensor 103 (including a plurality of individual sensors for capturing pixels), and microlens array 102 .
- Optics 101 may include, for example, aperture 112 for allowing a selectable amount of light into camera 100 , and main lens 113 for focusing light toward microlens array 102 .
- microlens array 102 may be disposed and/or incorporated in the optical path of camera 100 (between main lens 113 and sensor 103 ) so as to facilitate acquisition, capture, sampling of, recording, and/or obtaining light field image data via sensor 103 .
- FIG. 2 there is shown an example of an architecture for a light field camera, or a camera 100 , for implementing the present invention according to one embodiment.
- FIG. 2 is not shown to scale.
- FIG. 2 shows, in conceptual form, the relationship between aperture 112 , main lens 113 , microlens array 102 , and sensor 103 , as such components interact to capture light field data for subject 201 .
- camera 100 may also include a user interface 105 for allowing a user to provide input for controlling the operation of camera 100 for capturing, acquiring, storing, and/or processing image data.
- camera 100 may also include control circuitry 110 for facilitating acquisition, sampling, recording, and/or obtaining light field image data.
- control circuitry 110 may manage and/or control (automatically or in response to user input) the acquisition timing, rate of acquisition, sampling, capturing, recording, and/or obtaining of light field image data.
- camera 100 may include memory 111 for storing image data, such as output by sensor 103 .
- the memory 111 can include external and/or internal memory.
- memory 111 can be provided at a separate device and/or location from camera 100 .
- camera 100 may store raw light field image data, as output by sensor 103 , and/or a representation thereof, such as a compressed image data file.
- memory 111 can also store data representing the characteristics, parameters, and/or configurations (collectively “configuration data”) of field image data acquisition device 109 .
- captured image data is provided to post-processing circuitry 104 .
- processing circuitry 104 may be disposed in or integrated into light field image data acquisition device 109 , as shown in FIG. 1A , or it may be in a separate component external to light field image data acquisition device 109 , as shown in FIG. 1B . Such separate component may be local or remote with respect to light field image data acquisition device 109 .
- the post-processing circuitry 104 may include a processor of any known configuration, including microprocessors, ASICS, and the like.
- Any suitable wired or wireless protocol can be used for transmitting image data 121 to processing circuitry 104 ; for example, the camera 100 can transmit image data 121 and/or other data via the Internet, a cellular data network, a Wi-Fi network, a Bluetooth communication protocol, and/or any other suitable means.
- Light field images often include a plurality of projections (which may be circular or of other shapes) of aperture 112 of camera 100 , each projection taken from a different vantage point on the camera's focal plane.
- the light field image may be captured on sensor 103 .
- the interposition of microlens array 102 between main lens 113 and sensor 103 causes images of aperture 112 to be formed on sensor 103 , each microlens in the microlens array 102 projecting a small image of main-lens aperture 112 onto sensor 103 .
- These aperture-shaped projections are referred to herein as disks, although they need not be circular in shape.
- Light field images include four dimensions of information describing light rays impinging on the focal plane of camera 100 (or other capture device).
- Two spatial dimensions (herein referred to as x and y) are represented by the disks themselves.
- Two angular dimensions (herein referred to as u and v) are represented as the pixels within an individual disk.
- the angular resolution of a light field image with 100 pixels within each disk, arranged as a 10 ⁇ 10 Cartesian pattern is 10 ⁇ 10.
- This light field image has a four-dimensional (x,y,u,v) resolution of (400,300,10,10).
- FIG. 3 there is shown an example of a 2-disk by 2-disk portion 300 of such a light field image, including depictions of disks 302 and individual pixels 403 ; for illustrative purposes, each disk 302 is ten pixels 403 across. Many light rays in the light field within a light field camera contribute to the illumination of a single pixel 403 .
- FIG. 4 there is shown an example of transmission of light rays 402 , including representative rays 402 A, 402 D, through microlens 401 B of the microlens array 102 , to illuminate sensor pixels 403 A, 403 B in sensor 103 .
- rays 402 A, 402 B, 402 C (represented by solid lines) illuminate sensor pixel 403 A
- dashed rays 402 D, 402 E, 402 F illuminate sensor pixel 403 B.
- the value at each sensor pixel 403 is determined by the sum of the irradiance of all rays 402 that illuminate it.
- That ray 402 may be chosen to be representative of all the rays 402 that illuminate that sensor pixel 403 , and is therefore referred to herein as a representative ray 402 .
- Such representative rays 402 may be chosen as those that pass through the center of a particular microlens 401 , and that illuminate the center of a particular sensor pixel 403 . In the example of FIG.
- rays 402 A and 402 D are depicted as representative rays; both rays 402 A, 402 D pass through the center of microlens 401 B, with ray 402 A representing all rays 402 that illuminate sensor pixel 403 A and ray 402 D representing all rays 402 that illuminate sensor pixel 403 B.
- sensor pixels 403 There may be a one-to-one relationship between sensor pixels 403 and their representative rays 402 . This relationship may be enforced by arranging the (apparent) size and position of main-lens aperture 112 , relative to microlens array 102 , such that images of aperture 112 , as projected onto sensor 103 , do not overlap.
- FIG. 5 there is shown an example of an arrangement of a light field capture device, such as camera 100 , wherein microlens array 102 is positioned such that images of a main-lens aperture 112 , as projected onto sensor 103 , do not overlap.
- All rays 402 depicted in FIG. 5 are representative rays 402 , as they all pass through the center of one of microlenses 401 to the center of a pixel 403 of sensor 103 .
- the four-dimensional light field representation may be reduced to a two-dimensional image through a process of projection and reconstruction.
- a virtual surface of projection 601 may be introduced, and the intersection of each representative ray 402 with surface 601 may be computed.
- Surface 601 may be planar or non-planar. If planar, it may be parallel to microlens array 102 and sensor 103 , or it may not be parallel. In general, surface 601 may be positioned at any arbitrary location with respect to microlens array 102 and sensor 103 .
- the color of each representative ray 402 may be taken to be equal to the color of its corresponding pixel.
- pixels 403 of sensor 103 may include filters arranged in a regular pattern, such as a Bayer pattern, and converted to full-color pixels. Such conversion can take place prior to projection, so that projected rays 402 can be reconstructed without differentiation. Alternatively, separate reconstruction can be performed for each color channel.
- the color of an image pixel 602 on projection surface 601 may be computed by summing the colors of representative rays 402 that intersect projection surface 601 within the domain of that image pixel 602 .
- the domain may be within the boundary of the image pixel 602 , or may extend beyond the boundary of the image pixel 602 .
- the summation may be weighted, such that different representative rays 402 contribute different fractions to the sum.
- Ray weights may be assigned, for example, as a function of the location of the intersection between ray 402 and surface 601 , relative to the center of a particular pixel 602 .
- Any suitable weighting algorithm can be used, including for example a bilinear weighting algorithm, a bicubic weighting algorithm and/or a Gaussian weighting algorithm.
- This section describes exemplary systems and methods for compressing and decompressing RAW images that may achieve high compression ratios and also leverage commonplace, widely deployed image compression/decompression hardware that is designed to operate on full-color images.
- RAW image includes a repeating 2 ⁇ 2 grid pattern of pixels in which two are green, one is red, and one is blue; however, other RAW image layouts and/or formats exist, and are intended to also fall within the scope of the present invention.
- Full-color images such as RGB or YUV images, contain multiple (for example, 3) values per pixel, each value corresponding to a different color.
- Standard and/or commonplace image compression/decompression hardware is designed to compress full-color images by taking advantage of the fact that the human eye is more sensitive to certain aspects of full-color images than other aspects, and encoding those different aspects with greater or less precision accordingly.
- RAW images are processed in such a way as to make them suitable for compression and decompression using such hardware, achieving higher compression ratios than are typically observed for RAW image compression while enabling highly efficient and fast compression and decompression implementations.
- the inventions described and/or illustrated herein may be characterized as including one or more of the following components or aspects:
- the invention described herein relates to a method of encoding pixels in RAW images using less per-pixel precision.
- RAW image pixels are often represented by values that span a 10-bit to 16-bit range (corresponding to numbers in the ranges [0,1023] to [0,65535], respectively), and the method described herein may transform the RAW pixel values into an encoding that requires less precision, for example an 8-bit value (corresponding to a number in the range [0,255]).
- Specific embodiments may transform pixel values between any RAW precision and any lesser encoded precision; the description is not intended to be limited to the exemplary precisions described and/or illustrated herein.
- lookup tables for example:
- One approach for generating a non-evenly-spaced lookup-table may be to examine the RAW image data itself. Based on an analysis of the RAW image data, the system can determine the spacing that produces the best output, measured (for example) with respect to some overall quantitative error metric (for example, RMS error), or with respect to a qualitative estimate of image quality degradation resulting from the compression and decompression processes.
- RMS error overall quantitative error metric
- One exemplary implementation of generating a lookup-table based on an analysis of the RAW image data is as follows:
- metric[span a:b ] (cumulativeHistogram[ b ] ⁇ cumulativeHistogram[ a ])*( b ⁇ a )
- image data is rearranged from a RAW image layout to a full-color image layout.
- RAW images may include pixels consisting of a single value corresponding to a single color
- full-color images may include pixels consisting of multiple values corresponding to multiple colors.
- FIGS. 11A and 11B illustrate two different full-color image layouts: YUV and YUV422.
- each pixel consists of three values (Y, U, and V)
- each pixel consists of two values, either (Y, U) or (Y, V), where Y is the luma and U,V are the chroma channels.
- YUV422 images are sub-sampled versions of YUV images: both are used to describe full-color images, but the YUV422 image stores half as many chroma values as the YUV images do.
- FIGS. 12 and 13 are an illustrative example of mapping from an exemplary Bayer-like RAW image layout to a YUV422 full-color image layout.
- Each RAW pixel consists of a single color value (either R, G0, G1, or B, where G0 and G1 are both green).
- a 2 ⁇ 2 grid of four RAW pixels is mapped to a 2 ⁇ 1 grid of YUV422 full-color pixels.
- 4 RAW pixels, each consisting of 1 value are mapped to 2 YUV422 pixels, each consisting of 2 values, so the net effect is that 4 RAW pixel values are mapped to 4 YUV422 image values.
- the 2 ⁇ 2 grid of values is mapped to a 4 ⁇ 1 grid of values, in the YUV422 image layout.
- This exemplary rearrangement is chosen due to the fact that there is a mapping from a 2 ⁇ 2 grid of pixels in this particular RAW layout (comprising one red, one blue, and two green values) to a 2 ⁇ 1 grid of YUV422 pixels (comprising one U, one V, and two Y values) that satisfies the following two constraints:
- This exemplary rearrangement transforms a RAW image of dimensions width W by height H into a YUV422 image of dimensions W by H/2, where each YUV422 image pixel consists of 2 values.
- each layout represents the image using a total of W*H pixel values.
- mapping and/or rearrangement may be defined between any RAW layout and any full-color image layout; the description herein is not intended to be limited to Bayer-like RAW image layouts and YUV422 full-color image layouts.
- the present invention includes a method of compressing a RAW image that has been represented as a full-color image.
- the RAW image is represented as a YUV422 image as described herein, a standard JPEG encoder is used to compress the YUV422 image data into a compressed data stream.
- the method of the present invention may utilize existing highly efficient and fast hardware implementations of such JPEG encoders. Decompression of the data stream into YUV422 image data is shown in FIG. 14B .
- the present invention includes a method of storing and/or transmitting data that has been encoded and/or compressed via the techniques described herein.
- FIG. 15 depicts one exemplary embodiment, in which some associated metadata that describes the encoding and/or compression is stored and/or transmitted alongside the compressed image data.
- associated metadata may include, for example, one or more of:
- Any associated metadata may be used when the compressed image data is loaded and/or received; such metadata can be used to decompress, decode, and otherwise process the image data.
- the present invention includes a method of decompressing image data that has been compressed by the techniques described herein.
- FIG. 14B depicts an example of image decompression wherein JPEG decoding is used.
- the method of decompressing compressed image data uses a complementary method to that which was used to compress the image data.
- the present invention includes a method of rearranging the pixel values from a full-color image layout back to the RAW image layout corresponding to the original RAW image, as illustrated in FIGS. 12 and 13 for the example of a YUV422 full-color image layout and a Bayer RAW image layout.
- This rearrangement is complementary to the rearrangement done when the image was compressed, as described herein.
- the present invention includes a method of converting low-precision-encoded pixel values in a decompressed image to higher precision pixel values, for example to the original precision of the uncompressed RAW image.
- a lookup table may be created that maps the encoded values to their original values, for example as illustrated in FIG. 16 .
- Such an inverse lookup table may be created from the original lookup table by averaging all of the RAW image pixel values (i.e. lookup table indices) that map to the same encoded pixel value.
- An exemplary method of selecting the random value for dithering is to randomly select it from the RAW pixel value range between adjacent entries in the inverse lookup table; such a technique will dither the decoded pixel values by an amount that is related to the precision that was lost when converting the RAW pixel value to its lower-precision value during the compression procedure described herein.
- the method clamps the resultant RAW pixel value to be within some specified RAW pixel value range.
- RAW light field images present unique challenges for image compression.
- RAW light field images tend to have a high degree of spatial variation in pixel intensity. This will be shown and described in connection with FIGS. 17A and 17B , as follows.
- FIG. 17A depicts a RAW light field image 1700 .
- the RAW light field image may be formed of a plurality of pixel clusters, each of which encodes a portion of the light field data corresponding to a microlens of the microlens array. More precisely, each pixel cluster may correspond to the portion of the sensor 103 that receives light from a single microlens 401 of the microlens array 102 . Thus, each pixel cluster may be comparable to the disks 302 of FIG. 3 . The pixel clusters are too small to be visible in the RAW light field image in the scale of FIG. 17A .
- FIG. 17B depicts an enlarged portion 1750 of the RAW light field image of FIG. 17A , illustrating the pixel clusters 1760 of the RAW light field image.
- Each pixel cluster 1760 may be generally circular, and may have a plurality of pixel rows and pixel columns that define a grid pattern.
- the pixels of each pixel cluster 1760 may be color-specific since they may embody the mosaic pattern of raw output from the microlens array 102 , such as a Bayer pattern.
- the pixels of each pixel cluster may include, for example, a plurality of 2 ⁇ 2 mosaics, each of which includes red, green, and blue pixels.
- each of the pixel clusters 1760 may display vignetting, which is a phenomenon in which an image's brightness or saturation is reduced at the periphery as compared to the image center. Accordingly, each of the pixel clusters 1760 may represent a transition from low intensity (at, for example, the left edge of the pixel cluster 1760 ) to high intensity (in the center of the pixel cluster 1760 ) and back to low intensity again (at, for example, the right edge of the pixel cluster 1760 ).
- Many image compression algorithms may effectively group adjacent pixels of similar intensity and/or hue together to compress the image; thus, the vignetting present in the light field image may interfere with and/or prevent effective compression of the image with known image compression techniques, when applied alone.
- the present invention may provide mechanisms for compressing two-dimensional images projected from light field data that overcome these challenges. In some embodiments, this may be done through the performance of additional image processing steps in addition to application of an image compression algorithm. These steps will be shown and described in connection with FIG. 18 .
- FIG. 18 depicts a method 1800 for compressing an image projected from light field data, according to one embodiment of the invention.
- the method 1800 may be carried out by the camera 100 , a separate post-processing system connected to the camera 100 , by a computing device independent of the camera 100 , or the like.
- a computing device may have components such as one or more processors, memory blocks, user interface elements, and/or other computing device components known in the art.
- the light field image may be a RAW image as described previously, or may be encoded in a different format. If the light field image is a RAW image, it may be a Bayer pattern mosaic image (RGGB), and may thus have groups of 2 ⁇ 2 pixels, each of which has an intensity obtained from light filtered through red, green, or blue filters. Alternatively, the light field image may have other color mosaic patterns such as an RGBE, CYYM, CYGM, or RGBW pattern.
- RGBGB Bayer pattern mosaic image
- the method 1800 may start 1810 with a step 1820 in which the light field image is retrieved, for example, from the camera 100 , the memory 111 , and/or any other data storage system. Once the light field image has been retrieved, the method 1800 may proceed to a step 1830 in which the color depth of the pixels of the light field image is reduced. Color depth reduction may entail reduction of the number of bits required to encode each pixel. Some image compression algorithms may operate more effectively on images with a certain color depth, such as 8 bits. Thus, if desired, the step 1830 may reduce the color depth of the pixels of the light field image from their native color depth, which may be 12 or 16 bits, to 8 bits. Exemplary color depth reduction methods will be shown and described in connection with FIG. 19 .
- the method 1800 may proceed to a step 1840 in which the light field image is retiled.
- Retiling may entail moving pixels from pixel clusters, each of which pertains to one microlens 401 of the microlens array 102 , to a retiled pixel cluster in which the pixels are generally grouped by color and/or intensity.
- the step 1840 may thus help overcome the challenges posed by the relatively high pixel intensity spatial variation of the light field image, as described above. Accordingly, the step 1840 may also enhance performance of the image compression algorithm to be applied subsequently. Exemplary retiling methods will be shown and described in connection with FIG. 20 , with exemplary results shown in FIGS. 21A and 21B .
- the method 1800 may proceed to a step 1850 in which the retiled image is padded.
- Padding the image may involve adding one or more pixel rows and/or pixel columns to the image so that it is the appropriate size for application of the image compression algorithm.
- Some image compression algorithms break up the subject image into tiles for processing. Such image compression algorithms may function more effectively if the subject image already has a number of pixel rows and pixel columns that are both integer multiples of the number of pixel rows and pixel columns of each tile the image compression algorithm is designed to process. For example, JPEG image compression algorithms may process tiles of 16 ⁇ 8 pixels or 8 ⁇ 8 pixels.
- the added pixel rows and/or pixel columns may be duplicates of the adjacent edge a pixel column and/or edge pixel row. Exemplary padding methods will be shown and described in connection with FIG. 22 .
- the method 1800 may proceed to a step 1860 in which an image compression algorithm is applied to the padded image.
- Applying the image compression algorithm to the image may entail applying a known lossless or lossy image compression algorithm such as that developed by the Joint Photographic experts Group, known as “JPEG” compression.
- JPEG Joint Photographic experts Group
- Other formats may be used, including but not limited to JPEG 2000, EXIF, TIFF, GIF, WEBP, and the like.
- application of the image compression algorithm may entail application of one or more novel techniques for compressing an image, as described above in connection with FIGS. 7A through 16 .
- the image compression algorithm may be applied to the retiled image.
- the performance of the image compression algorithm may be enhanced by the color depth reduction, retiling, and/or padding steps performed previously.
- the method 1800 may proceed to a step 1870 in which the compressed image file is assembled. This may be done by combining the compressed image with metadata.
- the metadata may include a variety of items such as camera parameters and information regarding the steps performed in the method 1800 , which may help in further processing and/or decompression of the compressed image file.
- the step 1870 will be shown and described in greater detail in connection with FIG. 23 .
- the method 1800 may end 1890 .
- FIG. 19 depicts a histogram 1900 of a type that may be used to facilitate pixel color depth reduction in the form of K-means bit reduction.
- Any of a variety of pixel color depth reduction techniques, or “bit reduction” techniques, may be employed as part of the step 1830 .
- Such bit reduction techniques may be used to reduce the number of bits required to encode each pixel of the light field image from N bits to M bits, where M ⁇ N.
- One exemplary technique is the K-means bit reduction algorithm.
- the histogram 1900 may have a horizontal axis 1910 of pixel values present within the light field image (prior to bit reduction).
- the horizontal axis 1910 may extend from 0 to 2 N ⁇ 1 (for example, 0-4095 in the case of a 12-bit color depth prior to reduction).
- the histogram 1900 may also have a vertical axis 1920 of pixel populations, and may extend from 0 to the largest number of pixels at any single value.
- the histogram 1900 may have a line 1930 indicating the population (i.e., the number of pixels) in the light field image with each value.
- the shape of the line 1930 in FIG. 19 is merely exemplary.
- the K-means bit reduction algorithm may commence with the division of the histogram 1900 into 2 M boundaries 1940 , which may be evenly spaced apart as shown, or may be unevenly spaced apart. Then, the method may determine which values on the horizontal axis 1910 are closest to each boundary. This is shown in FIG. 19 by a shaded region 1950 , which is the set of pixels closest to the boundary 1940 that is centered within the shaded region 1950 .
- the horizontal center of mass of the pixels closest to each boundary 1940 may then be calculated.
- a dashed line adjacent the boundary 1940 may represent the horizontal center of mass 1960 of the shaded region 1950 .
- the center of mass 1960 may be positioned just to the right of the boundary 1940 .
- the horizontal center of mass of the pixels nearest to each of the boundaries 1940 may similarly be calculated.
- the boundaries 1940 may each be moved to the corresponding horizontal center of mass 1960 . This may complete the first iteration of the K-means bit reduction method.
- the K-means bit reduction algorithm may be iterative, and may thus continue with another determination of which values on the horizontal axis 1910 are closest to each new boundary 1940 , calculation of the corresponding horizontal center of mass, and motion of each boundary 1940 to the corresponding horizontal center of mass.
- the method may iterate for as long as desired.
- the K-means algorithm may iterate until the boundaries 1940 are no longer shifting.
- the K-means algorithm may iterate for a predetermined number of cycles, such as 30.
- the pixel values of all pixels closest to each boundary 1940 may be changed to the pixel value of the corresponding boundary 1940 .
- the number of bits required to encode each pixel may be reduced from N bits to M bits.
- the K-means algorithm may tend to place boundaries 1940 closer together where the slope of the histogram 1900 is relatively large (positive or negative); this may beneficially result in a higher density of pixel values applied where the pixel values change most rapidly.
- the resulting reduced color depth may have better resolution at the pixel values that are most in need of higher resolution, i.e., those that exhibit relatively high-frequency change.
- color depth reduction parameters may be stored for later use in processing and/or decoding the image.
- Such color depth reduction parameters may include a mapping of which of the N pixel values were changed to each of the M pixel values. Such information may facilitate subsequent decompression of the image.
- FIG. 20 depicts a mapping of pixels from pixel clusters 2000 of the light field image to retiled pixel clusters 2010 to form a retiled image 2012 .
- the light field image may be retiled so that pixels of different pixel clusters are grouped together in a manner that groups pixels of similar colors and/or pixels of similar intensities.
- FIG. 20 depicts one manner in which this may be accomplished.
- each of the pixel clusters 2000 may have a grid pattern with two rows of four columns, i.e., a 2 ⁇ 4 grid.
- a first pixel cluster 2020 shown in dashed lines, is exemplary.
- the pixel clusters 2000 shown in FIG. 20 may include four pixel clusters, each of which may have the same grid pattern as the first pixel cluster 2020 .
- the first pixel cluster 2020 is shown with pixels numbered 1 through 8.
- each of the pixel clusters 2000 may have a top row including a first pixel 2030 , a second pixel 2032 , a third pixel 2034 , and fourth pixel 2036 .
- each of the pixel clusters may have a bottom row including a fifth pixel 2040 , a sixth pixel 2042 , a seventh pixel 2044 , and an eighth pixel 2046 .
- the first pixel cluster 2020 has a Bayer mosaic pattern; thus, the first pixel cluster 2020 has eight pixels including two groups of four (2 ⁇ 2) pixels. Each 2 ⁇ 2 grouping may have the RGGB Bayer pattern, as seen in pixels 1, 2, 5, and 6 of the first pixel cluster 220 . The same pattern may be repeated in pixels 3, 4, 7, and 8 of the first pixel cluster 220 .
- the grouping of pixels in the Bayer mosaic pattern may advantageously be rearranged to group pixels of the same color next to each other. Additionally, it may be helpful to group pixels at the same position within the various pixel clusters 2000 together because, due to the vignetting that may be present in each of the pixel clusters 2000 , the intensity of a given pixel may be determined, at least in part, by its location within the pixel cluster 2000 .
- the retiled pixel clusters 2010 may accomplish this regrouping by grouping the first pixel 2030 of each of the pixel clusters 2000 together, grouping the second pixel 2032 of each of the pixel clusters 2000 together, etc.
- the retiled pixel clusters 2010 may include eight retiled pixel clusters, which may include a first retiled pixel cluster 2050 , a second retiled pixel cluster 2052 , a third retiled pixel cluster 2054 , a fourth retiled pixel cluster 2056 , a fifth retiled pixel cluster 2060 , a sixth retiled pixel cluster 2062 , a seventh retiled pixel cluster 2064 , and an eighth retiled pixel cluster 2066 .
- the retiled pixel clusters 2010 may be arranged in the same 2 ⁇ 4 grid pattern as the pixels of each of the pixel clusters 2000 to form the retiled image 2012 . Thus, there may be a one-to-one correspondence between the pixels of each of the pixel cluster 2000 and the retiled pixel clusters 2010 of the retiled image 2012 .
- the retiled pixel clusters 2010 may be arranged such that pixels of the same color are, to the extent possible, grouped next to each other.
- the first pixels 2030 of each of the pixel clusters 2000 may be placed in the first retiled pixel cluster 2050
- the third pixels 2034 of each of the pixel clusters 2000 may be placed together in the second retiled pixel cluster 2010 , which may be adjacent to the first retiled pixel cluster 2050 .
- the second pixels 2032 may be placed in the third retiled pixel cluster 2054 and the fourth pixels 2036 may be placed in the fourth retiled pixel cluster 2056 .
- the fifth pixels 2040 may be placed in the fifth retiled pixel cluster 2060
- the seventh pixels 2044 may be placed in the sixth retiled pixel cluster 2062
- the sixth pixels 2042 may be placed in the seventh retiled pixel cluster 2064
- the eighth pixels 2046 may be placed in the eighth retiled pixel cluster 2066 .
- the pixels from different pixel clusters 2000 may be spatially arranged according to the placement of the pixel clusters 2000 relative to each other.
- the pixels of the first pixel cluster 2020 may be placed at the upper left of each of the retiled pixel clusters 2010 .
- the pixels of the pixel cluster 2000 to the right of the first pixel cluster 2020 may be placed to the right of the pixels of the first pixel cluster 2020 , and the pixels of the pixel cluster 2000 below the first pixel cluster 2020 may be placed below the pixels of the first pixel cluster 2020 , and so on.
- the light field image can be retiled into N x *N y sub images.
- the first row of the first sub image can be formed by selecting the corner pixel of the image and every N x pixel along the row.
- the columns may be formed by starting at the same corner pixel and selecting every N y pixel in the Y-direction.
- the next sub image can be formed by repeating the procedure for the pixel next to the corner pixel.
- the retiled image 2012 may have only eight retiled pixel clusters 2010 shown.
- the pixel clusters 2000 may include more pixel clusters (not shown) than the four shown in FIG. 20 ; the pixels of such pixel clusters may be arranged in the eight retiled pixel clusters 2010 in the manner indicated above.
- the use of eight pixel clusters 2010 is merely exemplary; in alternative embodiments (not shown) in which each pixel cluster includes more or less than eight pixels, the retiled image may have similarly have more or fewer than eight pixels, which may be arranged in the same grid pattern as that of the pixel clusters.
- red pixels may be grouped together in the first retiled pixel cluster 2050 and the second retiled pixel cluster 2052 .
- Green pixels may be grouped together in the third retiled pixel cluster 2054 , the fourth retiled pixel cluster 2056 , the fifth retiled pixel cluster 2060 , and the sixth retiled pixel cluster 2062 .
- Red pixels may be grouped together in the seventh retiled pixel cluster 2064 and the eighth retiled pixel cluster 2066 .
- pixels from the pixel clusters 2000 may be grouped so that pixels of the same color are grouped together, with pixels of similar probable intensities also grouped relatively close together.
- Such grouping may enhance the operation of the image compression algorithm that may be applied subsequently by facilitating the ability of such an image compression algorithm to break up the retiled image into tiles with similar pixel colors and intensities. Additionally, the manner in which pixel intensities are grouped together may further enhance the performance of the image compression by reducing the spatial variation in pixel intensity.
- retiling parameters may be stored for later use in processing and/or decoding the image.
- Such retiling parameters may include a mapping of the original location of each pixel of the retiled pixel clusters 2010 . Such information may facilitate subsequent decompression of the image.
- FIG. 21A depicts a retiled light field image 2100 generated by a process such as that described in connection with FIG. 20 .
- the retiled light field image 2100 may generally be divided into four quadrants, which may have different colors. Each quadrant may have multiple miniature copies of the raw light field image 1700 .
- FIG. 21B depicts an enlarged portion 2150 of the retiled light field image of FIG. 21A .
- the high-frequency artifacts, or high-frequency pixel intensity variations, of FIG. 17B have been effectively removed from the enlarged portion 2150 .
- an image compression algorithm is likely to achieve better results with the retiled light field image 2100 .
- FIG. 22 depicts a padding process for adding one or more pixel rows and/or columns to a retiled image 2200 .
- image compression algorithms may divide an image into tiles of a certain size, and may perform best when used with images that are sized as multiples of the tile size.
- JPEG image compression algorithms may process tiles of 16 ⁇ 8 pixels or 8 ⁇ 8 pixels.
- the retiled image 2200 of FIG. 22 is a 14 ⁇ 14 image. Thus, without modification, it may not be the optimal size for application of a JPEG compression algorithm.
- the retiled image 2200 may thus be padded with additional rows and/or columns in order cause it to have a number of pixel rows that is an integer multiple of the number of pixel rows in the JPEG tile size, and a number of pixel columns that is an integer multiple of the number of pixel columns in the JPEG tile size. Adding two pixel rows and two pixel columns may cause the retiled image 2200 to conform to both 16 ⁇ 8 and 8 ⁇ 8 tile sizes.
- the retiled image 2200 may have a pixel edge column 2210 at the right-hand side of the retiled image 2200 and a pixel edge row 2220 at the bottom of the retiled image 2200 .
- the retiled image 2200 may be padded by adding two pixel columns 2230 to the right-hand side of the retiled image 2200 , adjacent to the pixel edge column 2210 , and by adding two pixel rows 2240 to the bottom of the retiled image 2200 , adjacent to the pixel edge row 2220 .
- each of the pixel columns 2230 may be a copy of the pixel edge column 2210
- each of the pixel rows 2240 may be a copy of the pixel edge row 2220 .
- image padding parameters may be stored for later use in processing and/or decoding the image.
- Such padding parameters may include an indication of the pixel columns (for example, the pixel columns 2230 of FIG. 22 ) and/or pixel rows (for example, the pixel rows 2240 of FIG. 22 ) that were added. Such information may facilitate subsequent decompression of the image.
- the padded image may be ready for compression, which may be performed through the use of known image compression algorithms and/or through the use of the RAW image compression techniques set forth in connection with FIGS. 7A through 16 herein. After the image has been compressed via the image compression algorithm, it may be assembled into an image file.
- FIG. 23 depicts an image file 2300 that may be stored after assembly of the compressed image 2310 and metadata 2320 .
- the metadata 2320 may include any of a number of pieces of information that may be helpful in further processing, decompression, and/or use of the compressed image 2310 .
- the metadata 2320 may include camera parameters 2330 that indicate the state of one or more camera settings when the light field image, from which the compressed image 2310 is derived, was captured. Such parameters may facilitate a wide variety of image processing techniques.
- the metadata 2320 may include color depth reduction parameters 2340 , a pixel mapping 2350 , and/or padding parameters 2360 .
- the color depth reduction parameters 2340 , the pixel mapping 2350 , and the padding parameters 2360 may provide information regarding how the step 1830 , the step 1840 , and the step 1850 , respectively, were carried out.
- Such information may facilitate image processing and in particular, decompression of the compressed image 2310 to enable the compressed image 2310 to be refocused and/or otherwise manipulated according to light field image usage techniques. More specifically, the color depth reduction parameters 2340 , the pixel mapping 2350 , and the padding parameters 2360 may be used to facilitate reversal of the step 1830 , the step 1840 , and the step 1850 , respectively.
- the metadata 2320 is merely exemplary; in alternative embodiments, metadata may not have some of the components illustrated in FIG. 23 . Additionally or alternatively, such metadata may have additional components not shown in FIG. 23 . If desired, the metadata 2320 may have image compression parameters that indicate the type of image compression algorithm used in the step 1860 , the applicable parameters, or the like.
- light field images may be compressed to a fraction of their original size.
- the size of the compressed image may be approximately 1 ⁇ 3 the size of the RAW light field image.
- the compression may be a lossy compression; accordingly, the compressed image may lack the data needed to restore the exact original RAW light field image.
- the decompressed image may retain the full functionality of the original RAW light field image and may sufficiently similar to the original RAW light field image that the user may not notice any difference.
- FIG. 24 depicts a method 2400 for processing a compressed image for use, wherein the compressed image has been compressed with a method such as the method 1800 of FIG. 18 .
- the method 2400 may be substantially the reverse of the method 1800 .
- the steps of the method 2400 may generally be the inverse of those of FIG. 18 , performed in the opposite order.
- the method 2400 may start 2410 with a step 2420 in which the compressed light field image file is retrieved, for example, from the camera 100 , the memory 111 , and/or any other data storage system. Once the compressed light field image has been retrieved, the method 2400 may proceed to a step 2430 in which the compressed image 2310 and the metadata 2320 are extracted from the compressed image file.
- the method 2400 may then proceed to a step 2440 in which the compressed image is decompressed.
- This may entail application of an image decompression algorithm of the image compression algorithm used to compress the light field image.
- the step 2440 may entail application of the image compression algorithm in reverse.
- the compression of the light field image may be lossy, so application of the image decompression algorithm or application of the image compression algorithm in reverse may not restore all data present in the original RAW light field image.
- the method 2400 may proceed to a step 2450 in which any padding process applied to derive the compressed image is reversed. This may entail deletion of any added pixel rows and/or pixel columns, such as the pixel columns 2230 and/or the pixel rows 2240 of FIG. 22 . Data from the metadata 2320 , such as the padding parameters 2360 , may be used to facilitate this process.
- the method 2400 may proceed to a step 2460 in which the image is again retiled.
- This may entail restoring the structure of the original pixel clusters, i.e., the pixel clusters 2000 of FIG. 20 .
- the retiled image may then have pixel clusters that correspond to individual microlenses 401 of the microlens array 102 , like those of the original RAW light field image.
- the step 2460 may again enable refocusing and other processes unique to light field images.
- Data from the metadata 2320 such as the pixel mapping 2350 , may be used to facilitate this process.
- the method 2400 may proceed to a step 2470 in which the color depth of the pixels of the retiled image is again increased.
- the original color depth may be used, so that the color depth of each pixel may be increased from M bits to N bits, where N>M.
- the data to restore each pixel to its original intensity value may not be present.
- increasing the pixel color depth may help to facilitate further processes that may be dependent upon a higher bit depth.
- the decompressed image may be ready for use, and may be viewed, processed, converted, and/or otherwise used in a manner comparable to that of the original RAW light field image.
- the method 2400 may then end 2490 .
- the present invention can be implemented as a system or a method for performing the above-described techniques, either singly or in any combination.
- the present invention can be implemented as a computer program product comprising a nontransitory computer-readable storage medium and computer program code, encoded on the medium, for causing a processor in a computing device or other electronic device to perform the above-described techniques.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention can be embodied in software, firmware and/or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computing device selectively activated or reconfigured by a computer program stored in the computing device.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, flash memory, solid state drives, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computing devices referred to herein may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present invention can be implemented as software, hardware, and/or other elements for controlling a computer system, computing device, or other electronic device, or any combination or plurality thereof.
- an electronic device can include, for example, a processor, an input device (such as a keyboard, mouse, touchpad, trackpad, joystick, trackball, microphone, and/or any combination thereof), an output device (such as a screen, speaker, and/or the like), memory, long-term storage (such as magnetic storage, optical storage, and/or the like), and/or network connectivity, according to techniques that are well known in the art.
- Such an electronic device may be portable or nonportable.
- Examples of electronic devices that may be used for implementing the invention include: a mobile phone, personal digital assistant, smartphone, kiosk, server computer, enterprise computing device, desktop computer, laptop computer, tablet computer, consumer electronic device, television, set-top box, or the like.
- An electronic device for implementing the present invention may use any operating system such as, for example: Linux; Microsoft Windows, available from Microsoft Corporation of Redmond, Wash.; Mac OS X, available from Apple Inc. of Cupertino, Calif.; iOS, available from Apple Inc. of Cupertino, Calif.; and/or any other operating system that is adapted for use on the device.
Abstract
Description
- Bayer Pattern: a particular 2×2 pattern of different color filters above pixels on a digital sensor. The filter pattern is 50% green, 25% red and 25% blue.
- Disk: a region in a light field image that is illuminated by light passing through a single microlens; may be circular or any other suitable shape.
- Image: a two-dimensional array of pixel values, or pixels, each specifying a color.
- Light Field: a collection of rays. A ray's direction specifies a path taken by light, and its color specifies the radiance of light following that path.
- Light Field Image: a two-dimensional image that spatially encodes a four-dimensional light field. The sensor image from a light field camera is a light field image.
- Microlens: a small lens, typically one in an array of similar microlenses.
- MLA: abbreviation for microlens array.
- Pixel: an n-tuple of intensity values, with an implied meaning for each value. A typical 3-tuple pixel format is RGB, wherein the first value is red intensity, the second green intensity, and the third blue intensity. Also refers to an individual sensor element for capturing data for a pixel.
- Representative Ray: a single ray that represents all the rays that reach a pixel.
- Two-Dimensional Image (or Image): a two-dimensional array of pixels, each specifying a color. The pixels are typically arranged in a square or rectangular Cartesian pattern, but other patterns are possible.
- Two-Dimensional Image Processing: any type of changes that may be performed on a two-dimensional image.
- Vignetting: a phenomenon, related to modulation, in which an image's brightness or saturation is reduced at the periphery as compared to the image center.
- Images captured by a camera or other imaging device that features a color filter array (for example, color filter array with a Bayer mosaic pattern);
- Images that contain a single value per pixel that corresponds to a single color (for example, red, green or blue)
- RAW image compression, comprising one or more of:
- A technique for converting the RAW image pixel values, which are often represented by 10- to 16-bit numbers, to lower levels of precision, for example 8-bit values. This conversion may be performed in such a way as to minimize the overall precision loss in the RAW image, and to make use of the image data (for example, via an image histogram) to determine the mapping in a data-dependent fashion;
- A rearrangement of the image data to map each RAW pixel, each of which has a single value, to a position in a full-color image, in which each pixel has multiple (for example, 3) values. Full-color images may be subsampled, resulting in a subsampled image in which each pixel only has a subset of the color channels of the full-color image, for example YUV422 images; and/or
- The compression of the rearranged data using a method that is designed to be employed on full-color images, for example JPEG compression or any other full-color image compression algorithm.
- Storing and/or transferring the image while in this compressed form.
- Associated metadata that describes the compression process may be stored and/or transmitted along with the compressed image data, for example tables that describe the mapping between the original-precision and the low-precision pixel encodings.
- RAW image decompression, comprising one or more of:
- The decompression of the compressed image data using a respective complementary full-color decompressor, for example a JPEG decompressor if a JPEG compression algorithm was used to compress the image;
- The rearrangement of the image data to invert the mapping performed during compression, that is, to map the pixel values from their positions in the full-color image back to their positions in the RAW image; and/or
- The conversion of each pixel value from its low-precision encoded form (for example, 8 bits per pixel) back to its original precision (for example, 10 to 16 bits per pixel). The conversion may include the dithering of each pixel value by adding a randomly selected amount from within a range that is chosen to take into account some or all of the following information, or any other information:
- The magnitude of the pixel value; or
- The mapping used to convert between the original precision and the low-precision encoded pixel values.
- Dividing or “right-shifting” each pixel value by the appropriate amount, for example right-shifting the values by 2 bits when converting from a 10-bit RAW pixel value to an 8-bit encoded value. A variation of this method may involve first adding an amount to the RAW value prior to dividing or shifting it, and in general, adding an amount roughly equal to half of the divisor will prevent this method from introducing an intensity bias in the resultant image, for example slightly darkening it.
- Creating one or more lookup tables that are indexed by RAW pixel values and map them to encoded values. For example, when converting from 10-bit RAW pixel values to 8-bit encoded values, such a lookup-table may have 1024 entries, each containing a value in the range [0,255]. There may be a single lookup table that is used for all RAW pixel values, or there may be multiple lookup tables, for example a separate lookup table dedicated to each of the different colors that a RAW pixel value may correspond to (for example red, green, and blue).
- Evenly spacing the encoded values across the entire RAW pixel value range (for example as depicted in
FIG. 7A for an example 3-bit to 2-bit conversion). - Spacing the encoded values in a non-evenly-spaced fashion (for example, as depicted in
FIG. 7B ). In this case, there is great latitude in the decision of which spacing to use, and the choice of spacing may play a large role in the final quality of the overall compression process.
- 1. Build a separate histogram of the RAW pixel values for each RAW color; for example, for a RAW image in which pixel values could be red, green, or blue, 3 histograms would be built, one per color. Each histogram has as many entries as there are possible RAW pixel values for its color. For example, if red RAW pixel values are 10-bit binary values, then the red histogram has 210=1024 entries.
- 2. For each histogram, build a corresponding cumulative histogram, as illustrated in
FIG. 8 . - 3. For each histogram, compute a single “span” for the entire histogram. For each of these spans, assign to it a metric value corresponding to the product of the total sum of pixel values within it and the span's width as follows (where a is the minimum pixel value (0), and b is the maximum pixel value, for example 255 if 8-bit encoded pixel values are being used):
metric[span a:b]=(SUM[i=a to b]histogram[i])*(b−a)
metric[span a:b]=(cumulativeHistogram[b]−cumulativeHistogram[a])*(b−a)
- 4. For an encoded value precision of N-bits, there are 2N lookup values; for example, for an 8-bit encoded value range, the lookup table will map RAW pixel values to one of 28=256 numbers (that is, numbers in the range [0,255]). Iteratively perform the following 2N−2 times:
- a. Choose the span with the largest metric value.
- b. Split that span in half, by removing it and creating two new spans, each covering half of the RAW pixel values. This step is illustrated in the transitions between
FIGS. 9A-9B , andFIGS. 9B-9C . Each new span is assigned a new metric, using the same formula listed above.
- 5. For all 2N−1 spans, use the “start” value of the span as one of the RAW pixel values to “seed” the lookup table: mark each table entry as unmapped, and then fill in the 2N−1 table entries that are indexed by the 2N−1 span start values with an increasing sequence of numbers that covers the numeric range of the target encoded precision (for example) the
numbers 0 through 254 in the case of encoding to an 8-bit precision. The “end” value of the last span is also used to seed the lookup table by filling in the last table entry with the highest number representable in the target precision (for example) 255 in the case of 8-bit precision. For the example 4-bit to 2-bit conversion illustrated inFIGS. 9A-9D ,FIG. 9D depicts the span endpoints used to seed the lookup table, andFIG. 10A shows the resultant table. - 6. Populate the remaining entries of the lookup table according to the nearest seed value, for example as illustrated in
FIG. 10B .
encodedValue[x,y]=lookupTable[rawValue[x,y]]
- 1. Pixels that are nearby in one layout are also nearby in the alternate layout, preserving local image properties such as features/edges that the image compression and decompression processes may take into account.
- 2. Pixel value color relationships are preserved, in that by mapping R→U, B→V, and G→Y, the property that the two G pixels in the 2×2 RAW pixel grid are of the same color channel is preserved as they are mapped to two Y values in the YUV422 full-color image layout.
- The lookup table(s) used to convert between the original RAW precision and the lower-precision RAW pixel values;
- Information describing any pixel data rearrangement that was performed; and/or
- Information describing the compression that was performed, including any parameters that were used.
rawValue[x,y]=inverseLookupTable[encodedValue[x,y]]
rawValue[x,y]=CLAMP[inverseLookupTable[encodedValue[x,y]]+randomValue]
where the random value is selected randomly from a range of possible values which may be predetermined, may be dependent on the RAW pixel value, and/or may be dependent on the lookup tables in use. An exemplary method of selecting the random value for dithering is to randomly select it from the RAW pixel value range between adjacent entries in the inverse lookup table; such a technique will dither the decoded pixel values by an amount that is related to the precision that was lost when converting the RAW pixel value to its lower-precision value during the compression procedure described herein. In at least one embodiment, after adding the random value, the method clamps the resultant RAW pixel value to be within some specified RAW pixel value range.
Claims (23)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/203,683 US10038909B2 (en) | 2014-04-24 | 2016-07-06 | Compression of light field images |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/261,144 US9414087B2 (en) | 2014-04-24 | 2014-04-24 | Compression of light field images |
US15/203,683 US10038909B2 (en) | 2014-04-24 | 2016-07-06 | Compression of light field images |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/261,144 Division US9414087B2 (en) | 2014-04-24 | 2014-04-24 | Compression of light field images |
Publications (2)
Publication Number | Publication Date |
---|---|
US20160316218A1 US20160316218A1 (en) | 2016-10-27 |
US10038909B2 true US10038909B2 (en) | 2018-07-31 |
Family
ID=54336013
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/261,144 Active 2034-07-18 US9414087B2 (en) | 2014-04-24 | 2014-04-24 | Compression of light field images |
US15/203,683 Active US10038909B2 (en) | 2014-04-24 | 2016-07-06 | Compression of light field images |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/261,144 Active 2034-07-18 US9414087B2 (en) | 2014-04-24 | 2014-04-24 | Compression of light field images |
Country Status (1)
Country | Link |
---|---|
US (2) | US9414087B2 (en) |
Families Citing this family (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10298834B2 (en) | 2006-12-01 | 2019-05-21 | Google Llc | Video refocusing |
US9858649B2 (en) | 2015-09-30 | 2018-01-02 | Lytro, Inc. | Depth-based image blurring |
US10334151B2 (en) | 2013-04-22 | 2019-06-25 | Google Llc | Phase detection autofocus using subaperture images |
US10275898B1 (en) | 2015-04-15 | 2019-04-30 | Google Llc | Wedge-based light-field video capture |
US10412373B2 (en) | 2015-04-15 | 2019-09-10 | Google Llc | Image capture for virtual reality displays |
US10469873B2 (en) | 2015-04-15 | 2019-11-05 | Google Llc | Encoding and decoding virtual reality video |
US10341632B2 (en) | 2015-04-15 | 2019-07-02 | Google Llc. | Spatial random access enabled video system with a three-dimensional viewing volume |
US10565734B2 (en) | 2015-04-15 | 2020-02-18 | Google Llc | Video capture, processing, calibration, computational fiber artifact removal, and light-field pipeline |
US10419737B2 (en) | 2015-04-15 | 2019-09-17 | Google Llc | Data structures and delivery methods for expediting virtual reality playback |
US11328446B2 (en) | 2015-04-15 | 2022-05-10 | Google Llc | Combining light-field data with active depth data for depth map generation |
US10540818B2 (en) | 2015-04-15 | 2020-01-21 | Google Llc | Stereo image generation and interactive playback |
US10444931B2 (en) | 2017-05-09 | 2019-10-15 | Google Llc | Vantage generation and interactive playback |
US10440407B2 (en) | 2017-05-09 | 2019-10-08 | Google Llc | Adaptive control for immersive experience delivery |
US10567464B2 (en) | 2015-04-15 | 2020-02-18 | Google Llc | Video compression with adaptive view-dependent lighting removal |
US10546424B2 (en) | 2015-04-15 | 2020-01-28 | Google Llc | Layered content delivery for virtual and augmented reality experiences |
US9979909B2 (en) | 2015-07-24 | 2018-05-22 | Lytro, Inc. | Automatic lens flare detection and correction for light-field images |
US10275892B2 (en) | 2016-06-09 | 2019-04-30 | Google Llc | Multi-view scene segmentation and propagation |
KR20180000279A (en) * | 2016-06-21 | 2018-01-02 | 주식회사 픽스트리 | Apparatus and method for encoding, apparatus and method for decoding |
EP3261347A1 (en) | 2016-06-22 | 2017-12-27 | Thomson Licensing | A method and a device for encoding a signal representative of a light-field content |
WO2018100095A1 (en) * | 2016-12-01 | 2018-06-07 | Thomson Licensing | A method for processing a light field image delivering a super-rays representation of a light field image |
US10679361B2 (en) | 2016-12-05 | 2020-06-09 | Google Llc | Multi-view rotoscope contour propagation |
US10148871B2 (en) | 2016-12-07 | 2018-12-04 | Microsoft Technology Licensing, Llc | Advanced raw conversion to produce high dynamic range, wide color gamut output |
US10373384B2 (en) * | 2016-12-12 | 2019-08-06 | Google Llc | Lightfield compression using disparity predicted replacement |
US10594945B2 (en) | 2017-04-03 | 2020-03-17 | Google Llc | Generating dolly zoom effect using light field image data |
US10474227B2 (en) | 2017-05-09 | 2019-11-12 | Google Llc | Generation of virtual reality with 6 degrees of freedom from limited viewer data |
IT201700050848A1 (en) * | 2017-05-10 | 2018-11-10 | Sisvel Tech S R L | METHODS AND APPARATUSES FOR ENCODING AND DECODING DIGITAL LIGHT FIELD IMAGES |
US10354399B2 (en) | 2017-05-25 | 2019-07-16 | Google Llc | Multi-view back-projection to a light-field |
US11051039B2 (en) | 2017-06-02 | 2021-06-29 | Ostendo Technologies, Inc. | Methods for full parallax light field compression |
US10432944B2 (en) | 2017-08-23 | 2019-10-01 | Avalon Holographics Inc. | Layered scene decomposition CODEC system and methods |
US10545215B2 (en) | 2017-09-13 | 2020-01-28 | Google Llc | 4D camera tracking and optical stabilization |
US10965862B2 (en) | 2018-01-18 | 2021-03-30 | Google Llc | Multi-camera navigation interface |
US10931956B2 (en) * | 2018-04-12 | 2021-02-23 | Ostendo Technologies, Inc. | Methods for MR-DIBR disparity map merging and disparity threshold determination |
US11172222B2 (en) | 2018-06-26 | 2021-11-09 | Ostendo Technologies, Inc. | Random access in encoded full parallax light field images |
CN112930262B (en) | 2018-10-22 | 2023-11-03 | 伊奎斯塔化学有限公司 | Polyethylene film structures and related methods |
CN110298896A (en) * | 2019-06-27 | 2019-10-01 | 北京奇艺世纪科技有限公司 | Picture code-transferring method, device and electronic equipment |
CN114189689B (en) * | 2021-11-25 | 2024-02-02 | 广州思德医疗科技有限公司 | Image compression processing method, device, electronic equipment and storage medium |
Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5907619A (en) | 1996-12-20 | 1999-05-25 | Intel Corporation | Secure compressed imaging |
US6023523A (en) | 1996-02-16 | 2000-02-08 | Microsoft Corporation | Method and system for digital plenoptic imaging |
US6091860A (en) | 1997-11-12 | 2000-07-18 | Pagemasters, Inc. | System and method for processing pixels for displaying and storing |
US20030123700A1 (en) | 2001-12-28 | 2003-07-03 | Canon Kabushiki Kaisha | Image generation apparatus, image file generation method, image verification apparatus and image verification method |
US20050031203A1 (en) | 2003-08-08 | 2005-02-10 | Hiroaki Fukuda | Image processing apparatus, an image forming apparatus and an image processing method |
US7034866B1 (en) | 2000-11-22 | 2006-04-25 | Koninklijke Philips Electronics N.V. | Combined display-camera for an image processing system |
US20070030357A1 (en) | 2005-08-05 | 2007-02-08 | Searete Llc, A Limited Liability Corporation Of The State Of Delaware | Techniques for processing images |
US20080018668A1 (en) | 2004-07-23 | 2008-01-24 | Masaki Yamauchi | Image Processing Device and Image Processing Method |
US20080144952A1 (en) | 2006-11-30 | 2008-06-19 | Canon Kabushiki Kaisha | Method and Apparatus For Hybrid Image Compression |
US20090185051A1 (en) | 2008-01-21 | 2009-07-23 | Nikon Corporation | Data processing apparatus, imaging apparatus, and medium storing data processing program |
US20090268970A1 (en) | 2008-04-29 | 2009-10-29 | Sevket Derin Babacan | Method and Apparatus for Block-Based Compression of Light-field Images |
US7792423B2 (en) * | 2007-02-06 | 2010-09-07 | Mitsubishi Electric Research Laboratories, Inc. | 4D light field cameras |
US7936377B2 (en) | 2007-04-30 | 2011-05-03 | Tandent Vision Science, Inc. | Method and system for optimizing an image for improved analysis of material and illumination image features |
US20110129165A1 (en) | 2009-11-27 | 2011-06-02 | Samsung Electronics Co., Ltd. | Image processing apparatus and method |
US20110234841A1 (en) | 2009-04-18 | 2011-09-29 | Lytro, Inc. | Storage and Transmission of Pictures Including Multiple Frames |
US8103111B2 (en) | 2006-12-26 | 2012-01-24 | Olympus Imaging Corp. | Coding method, electronic camera, recording medium storing coded program, and decoding method |
US20120249550A1 (en) | 2009-04-18 | 2012-10-04 | Lytro, Inc. | Selective Transmission of Image Data Based on Device Attributes |
US8290358B1 (en) | 2007-06-25 | 2012-10-16 | Adobe Systems Incorporated | Methods and apparatus for light-field imaging |
US20130093944A1 (en) | 2011-10-14 | 2013-04-18 | Sony Corporation | Image pickup unit, image generation system, server, and electronic unit |
US8605199B2 (en) | 2011-06-28 | 2013-12-10 | Canon Kabushiki Kaisha | Adjustment of imaging properties for an imaging assembly having light-field optics |
US8754829B2 (en) * | 2012-08-04 | 2014-06-17 | Paul Lapstun | Scanning light field camera and display |
US8941771B2 (en) | 2010-06-03 | 2015-01-27 | Nikon Corporation | Image-capturing device |
US9191560B2 (en) * | 2012-01-13 | 2015-11-17 | Canon Kabushiki Kaisha | Image capturing apparatus that performs photoelectric conversion on incident light that has passed through an imaging lens and outputs an electric signal |
US9210315B2 (en) * | 2012-02-20 | 2015-12-08 | Canon Kabushiki Kaisha | Image processing apparatus, image capturing apparatus, control method, and recording medium |
-
2014
- 2014-04-24 US US14/261,144 patent/US9414087B2/en active Active
-
2016
- 2016-07-06 US US15/203,683 patent/US10038909B2/en active Active
Patent Citations (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6023523A (en) | 1996-02-16 | 2000-02-08 | Microsoft Corporation | Method and system for digital plenoptic imaging |
US5907619A (en) | 1996-12-20 | 1999-05-25 | Intel Corporation | Secure compressed imaging |
US6091860A (en) | 1997-11-12 | 2000-07-18 | Pagemasters, Inc. | System and method for processing pixels for displaying and storing |
US7034866B1 (en) | 2000-11-22 | 2006-04-25 | Koninklijke Philips Electronics N.V. | Combined display-camera for an image processing system |
US20030123700A1 (en) | 2001-12-28 | 2003-07-03 | Canon Kabushiki Kaisha | Image generation apparatus, image file generation method, image verification apparatus and image verification method |
US20050031203A1 (en) | 2003-08-08 | 2005-02-10 | Hiroaki Fukuda | Image processing apparatus, an image forming apparatus and an image processing method |
US20080018668A1 (en) | 2004-07-23 | 2008-01-24 | Masaki Yamauchi | Image Processing Device and Image Processing Method |
US20070030357A1 (en) | 2005-08-05 | 2007-02-08 | Searete Llc, A Limited Liability Corporation Of The State Of Delaware | Techniques for processing images |
US20080144952A1 (en) | 2006-11-30 | 2008-06-19 | Canon Kabushiki Kaisha | Method and Apparatus For Hybrid Image Compression |
US8103111B2 (en) | 2006-12-26 | 2012-01-24 | Olympus Imaging Corp. | Coding method, electronic camera, recording medium storing coded program, and decoding method |
US7792423B2 (en) * | 2007-02-06 | 2010-09-07 | Mitsubishi Electric Research Laboratories, Inc. | 4D light field cameras |
US7936377B2 (en) | 2007-04-30 | 2011-05-03 | Tandent Vision Science, Inc. | Method and system for optimizing an image for improved analysis of material and illumination image features |
US8290358B1 (en) | 2007-06-25 | 2012-10-16 | Adobe Systems Incorporated | Methods and apparatus for light-field imaging |
US20090185051A1 (en) | 2008-01-21 | 2009-07-23 | Nikon Corporation | Data processing apparatus, imaging apparatus, and medium storing data processing program |
US20090268970A1 (en) | 2008-04-29 | 2009-10-29 | Sevket Derin Babacan | Method and Apparatus for Block-Based Compression of Light-field Images |
US8155456B2 (en) | 2008-04-29 | 2012-04-10 | Adobe Systems Incorporated | Method and apparatus for block-based compression of light-field images |
US20110234841A1 (en) | 2009-04-18 | 2011-09-29 | Lytro, Inc. | Storage and Transmission of Pictures Including Multiple Frames |
US20120249550A1 (en) | 2009-04-18 | 2012-10-04 | Lytro, Inc. | Selective Transmission of Image Data Based on Device Attributes |
US20110129165A1 (en) | 2009-11-27 | 2011-06-02 | Samsung Electronics Co., Ltd. | Image processing apparatus and method |
US8941771B2 (en) | 2010-06-03 | 2015-01-27 | Nikon Corporation | Image-capturing device |
US8605199B2 (en) | 2011-06-28 | 2013-12-10 | Canon Kabushiki Kaisha | Adjustment of imaging properties for an imaging assembly having light-field optics |
US20130093944A1 (en) | 2011-10-14 | 2013-04-18 | Sony Corporation | Image pickup unit, image generation system, server, and electronic unit |
US9191560B2 (en) * | 2012-01-13 | 2015-11-17 | Canon Kabushiki Kaisha | Image capturing apparatus that performs photoelectric conversion on incident light that has passed through an imaging lens and outputs an electric signal |
US9210315B2 (en) * | 2012-02-20 | 2015-12-08 | Canon Kabushiki Kaisha | Image processing apparatus, image capturing apparatus, control method, and recording medium |
US8754829B2 (en) * | 2012-08-04 | 2014-06-17 | Paul Lapstun | Scanning light field camera and display |
Non-Patent Citations (9)
Title |
---|
Chang, C.L., et al., "Light Field Compression Using Disparity-Compensated Lifting and Shape Adaptation," IEEE Trans. Image Processing, vol. 15, No. 4, pp. 793-806, Apr. 2006. http://www.stanford.edu/˜bgirod/pdfs/ChangZhuRamanathanTransIP2006.pdf. |
Compression standard JPEG XR: http://en.wikipedia.org/wiki/JPEG_XR. Retrieved Jan. 2013. |
Fattal, Raanan, et al., "Gradient Domain High Dynamic Range Compression", ACM SIGGRAPH 2002. |
H264: http://en.wikipedia.org/wiki/H264. Retrieved Jun. 3, 2014. |
JPEG: http://en.wikipedia.org/wiki/JPEG . Retrieved Jun. 3, 2014. |
Key framing for video animation (http://en.wikipedia.org/wiki/Key_frame). Retrieved Jan. 2013. |
Lazy loading of image data (http://en.wikipedia.org/wiki/Lazy_loading). Retrieved Jan. 2013. |
Magnor, M., et al., "Model-Aided Coding of Multi-Viewpoint Image Data," Proc. IEEE International Conference on Image Processing, ICIP-2000, Vancouver, Canada, Sep. 2000. https://graphics.tu-bs.de/static/people/magnor/publications/icip00.pdf. |
Methods of Variable Bitrate Encoding (http://en.wikipedia.org/wiki/Variable_bitrate#Methods_of_VBR_encoding). Retrieved Jan. 2013. |
Also Published As
Publication number | Publication date |
---|---|
US9414087B2 (en) | 2016-08-09 |
US20160316218A1 (en) | 2016-10-27 |
US20150312593A1 (en) | 2015-10-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10038909B2 (en) | Compression of light field images | |
JP6255063B2 (en) | Image processing for HDR images | |
US8711248B2 (en) | Global alignment for high-dynamic range image generation | |
RU2738693C1 (en) | Methods for encoding, decoding and displaying high-dynamic range images | |
JP5695080B2 (en) | Resolution-based format for compressed image data | |
US8660345B1 (en) | Colorization-based image compression using selected color samples | |
US20230069953A1 (en) | Learned downsampling based cnn filter for image and video coding using learned downsampling feature | |
CN1764232A (en) | System and method for encoding mosaiced image data employing a reversible color transform | |
US8675984B2 (en) | Merging multiple exposed images in transform domain | |
US20210021772A1 (en) | Appratus for encoding image, apparatus for decoding image and image sensor | |
JP2013517723A (en) | Image encoder and image decoder | |
Hernandez-Cabronero et al. | Lossless compression of color filter array mosaic images with visualization via JPEG 2000 | |
CN110612722A (en) | Method and apparatus for encoding and decoding digital light field images | |
US20230076920A1 (en) | Global skip connection based convolutional neural network (cnn) filter for image and video coding | |
CN108632610A (en) | A kind of colour image compression method based on interpolation reconstruction | |
JP2015216619A (en) | Imaging system, imaging device, imaging method and encoding method | |
US20170339316A1 (en) | A method and device for estimating a color mapping between two different color-graded versions of a sequence of pictures | |
WO2019237753A1 (en) | A surveillance camera system and a method for reducing power consumption thereof | |
US20160286097A1 (en) | Methods and System for Sparse Blue Sampling | |
CN106717006B (en) | Method for selecting a compression algorithm according to the type of image | |
JP2012222453A (en) | Data processing device, data processing method, program, and camera system | |
JP2014075698A (en) | Image encoder, image encoding method and program | |
WO2020007990A1 (en) | Compression of a raw image | |
US20070013952A1 (en) | Reverse diffusion digital halftone quantization | |
JP2013093745A (en) | Image compression apparatus, imaging apparatus and image compression method |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: LYTRO, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:AKELEY, KURT;BEVENSEE, BRENDAN;PITTS, COLVIN;AND OTHERS;SIGNING DATES FROM 20160711 TO 20160916;REEL/FRAME:039860/0650 |
|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LYTRO, INC.;REEL/FRAME:050009/0829Effective date: 20180325 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
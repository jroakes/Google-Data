CROSS REFERENCE TO RELATED APPLICATIONS
This application is a continuation of co-pending U.S. application Ser. No. 12/791,368, filed Jun. 1, 2010, which is incorporated by reference in its entirety.
BACKGROUND
1. Field of Disclosure
This disclosure relates in general to the field of location-based services and in particular to predicting geographic population density to provide and improve such services.
2. Description of the Related Art
Location-based services are growing in popularity. Many modern mobile devices, such as mobile telephones, are equipped with functionality allowing determination of the devices' geographic positions. This positioning information is used, in turn, to provide location-based services such as maps of the geographic areas proximate to the devices.
Geographic population density, defined as the number of people within a geographic area, can be used to enhance location-based services. For example, geographic population density can be used to estimate traffic congestion on roads within an urban area. Likewise, population density can be used to estimate the time required to find a parking space in an urban area.
Accurately determining geographic population density is difficult. Mobile phone usage within the geographic area can serve as a proxy for the number of people in the area. However, mobile phone data are sparse. The data do not indicate the number of people in the area, but rather the number of people using their mobile phones in the area. The mobile phone data are also noisy. A spike in mobile phone usage in a given area might indicate a high population density, or it might merely indicate that a greater-than-average number of people are using their mobile phones for random reasons. The data are also noisy as a result of the localization errors of individual mobile phones.
SUMMARY
The above and other issues are addressed by a method, computer, and computer-readable storage medium storing instructions for predicting geographic population density. Embodiments of the method comprise defining a Markov Random Field (MRF) model for estimating a number of mobile devices used within a geographic area. The method also applies current data describing a number of mobile devices currently observed within the geographic area and historical data describing a number of mobile devices historically observed within the geographic area to the MRF model to produce an estimate of a number of mobile devices currently being used within the geographic area. In addition, the method predicts a population density for the geographic area responsive to the estimated number of mobile devices currently being used within the geographic area and stores the predicted population density for the geographic area in a computer-readable storage medium.
Embodiments of the computer comprise a non-transitory computer-readable storage medium storing executable computer program instructions. The instructions, in turn comprise instructions defining a Markov Random Field (MRF) model for estimating a number of mobile devices used within a geographic area. The instructions further apply current data describing a number of mobile devices currently observed within the geographic area and historical data describing a number of mobile devices historically observed within the geographic area to the MRF model to produce an estimate of a number of mobile devices currently being used within the geographic area. The instructions additionally predict a population density for the geographic area responsive to the estimated number of mobile devices currently being used within the geographic area. The computer additionally comprises a processor for executing the computer program instructions.
Embodiments of the computer-readable storage medium store executable computer program instructions. The instructions, in turn comprise instructions defining a Markov Random Field (MRF) model for estimating a number of mobile devices used within a geographic area. The instructions further apply current data describing a number of mobile devices currently observed within the geographic area and historical data describing a number of mobile devices historically observed within the geographic area to the MRF model to produce an estimate of a number of mobile devices currently being used within the geographic area. The instructions additionally predict a population density for the geographic area responsive to the estimated number of mobile devices currently being used within the geographic area.
BRIEF DESCRIPTION OF DRAWINGS
FIG. 1 is a high-level block diagram that illustrates a computing environment for estimating geographic population density according to one embodiment.
FIG. 2 is a high-level block diagram illustrating a typical computer for use as a service provider or mobile device.
FIG. 3 is a high-level block diagram illustrating a detailed view of modules within the density module according to one embodiment.
FIG. 4 is a flowchart illustrating a method of learning the values of the weight parameters for the MRF model according to one embodiment.
FIG. 5 is a flowchart illustrating a method of predicted population density for a geographic area and providing a location-based service according to one embodiment.
DETAILED DESCRIPTION
The Figures (FIGS.) and the following description describe certain embodiments by way of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein. Reference will now be made in detail to several embodiments, examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality.
FIG. 1 is a high-level block diagram that illustrates a computing environment 100 for estimating geographic population density according to one embodiment. As shown, the computing environment 100 includes a location-based service provider (the “service provider”) 110 and multiple mobile devices 112A-C connected through a network 114. Only one service provider 110 and three mobile devices 112 are illustrated in FIG. 1 in order to simplify and clarify the present description. Embodiments can have millions of mobile devices 112 and multiple service providers 110. There can be other entities in the computing environment 100 as well.
The mobile devices 112 are electronic devices that can communicate with the service provider 110 via the network. In one embodiment, the mobile devices 112 include web-browsing functionality allowing the mobile devices 112 to access location-aware services provided by the service provider 110. In addition, the mobile devices 112 can include position-determining functionality, such as Global Positioning System (GPS) receivers. Examples of mobile devices 112 include mobile telephones, portable digital assistants (PDAs), notebook and tablet computers, and automotive GPS receivers. Although this description refers to the devices as “mobile,” the devices need not be portable. The phrase “mobile device” can also include a device that is typically stationary, such as a desktop computer.
A mobile device 112 is used by an end-user to request services from the service provider 110. One such service is mapping. The end-user, or an application executing on the mobile device 112, requests map information for the geographic area proximate to the mobile device. In turn, logic within the mobile device 112 determines the current geographic location of the device, and requests a map centered on this location from the service provider 110. The map is then displayed on a display of the mobile device 112 and/or used to provide an auxiliary service.
The service provider 110 is a hardware device and/or software program configured to provide the mobile devices 112 with location-based services. As shown, the service provider 110 includes an interface module 116 for interfacing between the service provider 110 and the mobile devices 112. The interface module 116 receives requests for location-based services and other data from the mobile devices 112 and provides data supporting the services in return. The interface module 116 can include, for example, a web server for receiving and responding to requests received from the mobile devices 112.
The service provider 110 also includes a density module 118 for estimating the number of people in a given geographic area at a given time (the “geographic population density” or just “population density”). In one embodiment, the density module 118 uses the center points of the map request from the mobile devices 112 as indications that the mobile device users are located at those points. In addition, the density module 118 uses a Markov Random Field (MRF) model that incorporates both current and historical data in order to estimate the total number of mobile device users in the area. The MRF model leverages the spatial and temporal consistency of mobile device usage patterns and provides significant accuracy improvements over estimates based solely on instantaneous observations. From the number of mobile device users, the density module 118 predicts the number of people in the geographic area and, hence, the area's population density.
A services module 120 within the service provider 110 provides location-based services to the mobile devices 112, including services that use the population density estimated by the density module 118. For example, the services module 120 can provide overlays to map data that use the population densities of the areas shown in the maps. One such overlay graphically illustrates the population density using a heat map or other technique. Another such overlay graphically illustrates traffic congestion, where the congestion is based in part on the population density. For example, the population density can be used to supplement data from road sensors or provide estimates of congestion in areas where road sensors are non-existent or sparse. The congestion data used in the overlay can be normalized in order to illustrate any spikes or troughs relative to normal congestion in the illustrated area. The services module 120 can also use the population density to provide estimates of the time it takes to find a parking place in a particular geographic area, either through a map overlay or another technique. Other embodiments of the services module 120 use the population density estimate to provide different and/or additional location-based services.
The network 114 enables communications between the service provider 110 and the mobile devices 112. In one embodiment, the network 114 uses standard communications technologies and/or protocols and can include the Internet as well as mobile telephone networks. Thus, the network 114 can include links using technologies such as Ethernet, 802.11, worldwide interoperability for microwave access (WiMAX), 2G/3G/4G mobile communications protocols, digital subscriber line (DSL), asynchronous transfer mode (ATM), InfiniBand, PCI Express Advanced Switching, etc. Similarly, the networking protocols used on the network 114 can include multiprotocol label switching (MPLS), the transmission control protocol/Internet protocol (TCP/IP), the User Datagram Protocol (UDP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), etc. The data exchanged over the network 114 can be represented using technologies and/or formats including image data in binary form (e.g. Portable Network Graphics (PNG)), the hypertext markup language (HTML), the extensible markup language (XML), etc. In addition, all or some of links can be encrypted using conventional encryption technologies such as secure sockets layer (SSL), transport layer security (TLS), virtual private networks (VPNs), Internet Protocol security (IPsec), etc. In another embodiment, the entities on the network 114 can use custom and/or dedicated data communications technologies instead of, or in addition to, the ones described above.
Computer Architecture
FIG. 2 is a high-level block diagram illustrating a typical computer 200 for use as a service provider 110 or mobile device 112. Illustrated are a processor 202 coupled to a chipset 204. Also coupled to the chipset 204 are a memory 206, a storage device 208, a keyboard 210, a graphics adapter 212, a pointing device 214, and a network adapter 216. A display 218 is coupled to the graphics adapter 212. In one embodiment, the functionality of the chipset 204 is provided by a memory controller hub 220 and an I/O controller hub 222. In another embodiment, the memory 206 is coupled directly to the processor 202 instead of the chipset 204.
The storage device 208 is a non-transitory computer-readable storage medium, such as a hard drive, compact disk read-only memory (CD-ROM), DVD, or a solid-state memory device. The memory 206 holds instructions and data used by the processor 202. The pointing device 214 is a mouse, track ball, or other type of pointing device, and is used in combination with the keyboard 210 to input data into the computer system 200. The graphics adapter 212 displays images and other information on the display 218. The network adapter 216 couples the computer 200 to the network 116.
As is known in the art, a computer 200 can have different and/or other components than those shown in FIG. 2. In addition, the computer 200 can lack certain illustrated components. In one embodiment, a computer 200 acting as the service provider 110 is formed of multiple blade computers and lacks a keyboard 210, pointing device 214, graphics adapter 212, and/or display 218. Moreover, the storage device 208 can be local and/or remote from the computer 200 (such as embodied within a storage area network (SAN)). As another example, a mobile device 112 might comprise a Smartphone with limited processing power and a touch screen interface.
This description uses the term “module” to refer to computer program logic for providing a specified functionality. A module can be implemented in hardware, firmware, and/or software. A module is typically stored on a computer-readable storage medium such as the storage device 208, loaded into the memory 206, and executed by the processor 202.
Example Architectural Overview of the Density Module
FIG. 3 is a high-level block diagram illustrating a detailed view of modules within the density module 118 according to one embodiment. Some embodiments of the density module 118 have different and/or other modules than the ones described herein. Similarly, the functions can be distributed among the modules in accordance with other embodiments in a different manner than is described here. Likewise, the functions can be performed by other entities.
A storage module 310 stores data used by the density module 118. Examples of such data include historical and current mobile device usage data, intermediate data created and used during the population density prediction process, and predicted population densities. The data storage module 310 may include a relational database or another type of database.
As shown in FIG. 3, an embodiment of the storage module 310 stores a dataset 312 of historical data. In one embodiment, the historical data describe data points received from mobile devices 112 within a defined time interval, such as within one year. A data point is an observation that a mobile device 112 was used at a particular geographic location at a particular date and time. Thus, a request for a location-based service received from a mobile device 112 that identifies a location is a data point. In one embodiment, the storage module 310 stores data points corresponding to the center points of map requests received by the service provider over the defined time interval.
In one embodiment, the historical data describe data points for a particular geographic area for which the population density will be predicted. For example, the historical data can describe data points for a particular city such as San Francisco. In addition, the locations of the data points are quantized within the geographic area. The geographic area is divided into a grid, and the locations of the data points are mapped to nodes within the grid. In one embodiment, the grid has 1000 nodes, with each node representing roughly a two-by-two block square of a city. Thus, in one embodiment, the center point of each map request received from a mobile device 112 is mapped to the node in which the center point is located.
Further, in one embodiment the data points within the historical dataset 312 are aggregated by time. For example, the data points can be aggregated into hours. Thus, for a given week, a node of the grid has 168 (24*7) values, with each value representing the number of data points received from that node within an hour of that week.
A current dataset 314 within the storage module 310 stores current data describing data points observed in a current time interval, e.g., a current hour. The current dataset 314 can be populated, for example, by the interface module 116 of the service provider 110 as service requests are received from the mobile devices 112. The data within the current dataset 314 can move to the historical dataset 312 as the data age.
In one embodiment, the data within the current dataset 314 are organized into the same grid and temporal aggregation as the data within the historical dataset 312. Thus, the current data describe the number of data points observed for a particular node of a grid for a geographic area within a current hour. In one embodiment, the data in the current dataset 314, as well as the data in the historical dataset 312, are anonymous so that the mobile devices 112 and end-users cannot be identified.
A MRF module 316 maintains data describing a MRF model that the density module 118 uses to estimate the number of mobile devices used within geographic areas. In one embodiment, the MRF model has state variables x, observations y, and prior (historical) measurements π. The MRF model can be visualized as having the state variables x arranged as nodes in a regular 3-D lattice. A plane of the lattice corresponds to the grid of the geographic area described above; neighboring nodes reflect areas that neighbor other geographical areas in reality. The third dimension in the lattice reflects the influence of time slices immediately preceding and following the time slice for which the population density is being estimated (i.e., the state of the grid in the time slices preceding and following the time slice represented by the current grid).
The state variables x are unobservable and represent the actual number of mobile devices 112 being used in given areas at a given time. The MRF module 316 uses a set of potentials and priors to capture the relationship between the values of x and the neighbors in time and space, as well as the current and historical observations. The potentials and priors are rules about how to use the datasets 312, 314 to produce the estimate.
In one embodiment, a “prior measurement potential” enforces a rule that the current usage estimate of the number of mobile devices 112 being used in a node of the grid should be close to the historical usage for the node. The prior measurement potential is defined as:
In equation (1), ψ represents a cost associated with the prior measurement potential. The potential itself is quadratic and captured over a set of indices L, where kπ is a weight, xi represents the unobservable variable for node i (the current number of mobile devices being used in node i), and πi represents the historical measurement for node i (the number of mobile devices historically observed at that node).
In addition, an “observation potential” enforces a rule that the current usage estimate for a node in the grid should be close to the current observed usage for the node. The observation potential is defined as:
In equation (2), Φ represents a cost associated with the observation potential. This potential is also quadratic and captured over a set of indices L, where ky is a weight, xi represents the unobservable variable for node i, and yi represents the current observed readings for node i (i.e., the number of data points observed for the node in the current period).
A “spatial smoothness prior” enforces a rule that the current usage estimate for a node in the grid should be close to the usage estimates for the node's neighbors in space. There are four neighbors j in the lattice arrangement, corresponding to the four neighbors of a node in the grid. The spatial smoothness prior is defined as:
In equation (3), Ω represents a cost associated with the spatial smoothness prior. This prior is quadratic and captured for each node and each node's neighbors. In the equation, kx is a weight, xi represents the unobservable variable for node i, and xj represents the unobservable variable for node i's j spatial neighbors.
A “temporal smoothness prior” enforces a rule that the current usage estimate for a node in the grid should be close to the usage estimates for the node's neighbors in time. There are two time neighbors j in the lattice arrangement, corresponding to the nodes of the time intervals preceding and following the current node i. The temporal smoothness prior is defined as:
In equation (4), T represents a cost associated with the temporal smoothness prior. This prior is quadratic and captured for each node and each node's neighbors. In the equation, kτ is a weight, xj represents the unobservable variable for node i, and xj represents the unobservable variable for node i's j time neighbors.
Each of the equations has a parameter representing the weight that the equation has in the MRF model (i.e., kπ, ky, kx, kτ). A learning module 318 uses the historical dataset 312 to learn the values of the weight parameters. In one embodiment, the learning module 318 selects two weeks of historical data from the dataset 312. The two weeks can be selected at random or based on other considerations and need not be temporally adjacent.
To learn the values of the weight parameters, the learning module 318 treats one of the two weeks as the test dataset and treats the other week as the training dataset. The learning module 318 optimizes the MRF model to determine values of the unobservable variables x (the optimization is described in more detail below) and changes the values of the parameters to minimize the root mean squared error (RMSE) between estimated usage produced by the MRF model when using the training dataset as current observations and the test dataset.
Specifically, to learn a weight parameter, the learning module 318 treats the other three parameters as constants (e.g. with values of ‘1’) and changes the value of the parameter being learned until a value is found that minimizes the RMSE. In one embodiment, learning module 318 minimizes the error by performing a hill-climbing optimization. The learning module 318 repeats this process for each of the other three parameters in order to learn the values. Moreover, some embodiments of the learning module 318 repeat this process multiple times using different weeks from the historical dataset 312 to refine the parameter values.
Depending upon the embodiment, the values of the weight parameters can be fixed or can vary based on time. In the embodiment described above, the learning module 318 determines fixed values for the parameters. That is, the parameters have the same values across all of the times in the dataset.
In another embodiment, the values of the weight parameters vary based on time or other factors. In one embodiment, the learning module 318 uses 24 different values for each parameter, one for each hour of the day. The learning module 318 uses the same learning technique described above, except that the module solves for the parameters at each hour of the day, producing 24 different values for each parameter. Using multiple parameter values can enhance the accuracy of the MRF model. For example, the weight of the temporal smoothness prior can change such that temporal smoothness has greater weight at times when the population density is unlikely to significantly change, e.g., between 2-3:00 AM, and lesser weight at times when the population density is likely to significantly change, e.g., between 4-5:00 PM.
In one embodiment, the weight of the spatial smoothness prior varies depending upon the location of the nodes being operated upon. Varying the spatial smoothness prior weight allows for incorporation of knowledge regarding the locations of the nodes. For example, a spatial smoothness prior having a relatively large weight can be used with nodes representing adjacent areas that typically have similar population densities, while a spatial smoothness prior having a relatively small weight can be used with nodes representing adjacent areas that typically have different population densities.
An estimate generation module 320 generates an estimate of the current number of mobile devices 112 being used within the areas represented by the nodes of the MRF model. In one embodiment, the estimate generation module 320 uses the values of the weight parameters learned by the learning module 318 in combination with the historical 312 and current 314 datasets to solve for the state variables x in the MRF model. For this usage, the historical data can be the aggregation of data received in a predetermined time interval, such as a year, scaled so that the mean over the dataset approximately matches the mean of one week's worth of data.
Recall that xi represents an unobservable variable for a node i, i.e., the current number of mobile devices being used within the area represented by that node. In one embodiment, the estimate generation module 320 calculates the state variables x as the mode of the posterior distribution of the MRF model by solving for x as an optimization problem.
To solve for a state variable of a node xi, say node x0, the estimate generation module 320 identifies the values of the related variables in the MRF model. Two variables, x1 and x−1, respectively represent node x0's two neighbors in time. Variable x−1 is the value of node x0 in the prior measurement period (e.g., the preceding hour). Variable x1 is the value of node x0 in the subsequent measurement period (e.g., the next hour). As the future value of x0 is not known, one embodiment of the estimate generation module 320 uses a “historical future” value for the node. Thus, if node x0 represents an area at 3:00 PM, the estimate generation module 320 can use the historical value of the area at 4:00 PM as the value for x1. In addition, four variables, x00, x01, x10, and X11, respectively represent the node's four neighbors in the space defined by the grid of the MRF model. One variable, y0, represents the current observation of the number of mobile devices being used in the area represented by node x0. Another variable, π0 represents the historical value for node x0.
The estimate generation module 320 uses these values in the MRF model, as represented by equations (1)-(4) described above, and optimizes by solving for the values of xi that minimize cost, i.e., minimize the sum of ψ, Φ, Ω, and T. As described by the equations, the more xi varies from its historic value, its currently observed values, the values of its neighbors in space, and the values of its neighbors in time, the greater the cost. Minimizing cost based on xi thus produces values for xi that optimally conform to the model given the weights learned by the learning module 318. After optimization, the value of a given state variable for a node, e.g., x0, represents the estimate of the current number of mobile devices 112 being used within the area represented by that node.
In one embodiment, the estimate generation module 320 uses the conjugate gradient (CG) algorithm to minimize the cost. This algorithm simultaneously solves for xi in all four equations, for all nodes. In the MRF model, nodes are influenced by adjacent nodes and, thus, each node is dependent on every other node. For an initial node, the adjacent nodes are given a predetermined value (e.g., 0). The nodes quickly converge to their “real” values as the optimization is performed.
A density prediction module 322 uses the estimates of numbers of mobile devices being used within given areas produced by the estimate generation module 320 to predict the population densities of the areas. In general, the density prediction module 322 predicts the population density as a function of the number of mobile devices being used. For example, the density prediction module 322 can multiply the estimated number of mobile devices being used in an area by scale factor that accounts for people in the area that are not using and/or carrying mobile devices, in order to calculate an estimate of total people within the area. The scale factor can vary in different areas. For example, the density prediction module 322 can use different scale factors for areas known to contain primarily pedestrian traffic and areas known to contain primarily vehicular traffic. Similarly, the scale factor can vary over time.
Overview of Methodology
FIG. 4 is a flowchart illustrating a method of learning the values of the weight parameters for the MRF model according to one embodiment. In one embodiment, the method of FIG. 4 is performed by the density module 118, although some or all of the method can be performed by other modules in other embodiments. In addition, other embodiments can perform the steps of the method in different orders and can include different and/or additional steps.
The density module 118 establishes 410 a historical dataset 312. The historical data describe data points received from mobile devices 112 observed within a defined historical time interval. For example, the historical dataset 312 can describe the data points observed in a prior year. The density module 118 also defines 412 a MRF model. For example, the MRF model can be defined by a human operator who provides computer program instructions that implement the MRF model. In one embodiment, the MRF model has state variables x, observations y, and prior (historical) measurements π, and is represented by equations (1)-(4) described above. The MRF model can be visualized as having the state variables x arranged as nodes in a regular 3-D lattice.
The MRF model has parameters representing weights that the equations have in the overall model. The density module 118 learns 414 the values of the weight parameters by analyzing the historical dataset 312. The density module 118 selects two sets of historical data from the dataset 312, treats one set as test observations, treats the other set as training observations, and computes the unobserved variables using the data. The density module 118 performs optimizations on the weight parameters to learn values that minimize RMSE between the estimates produced by the MRF model using the training data as the current observations and the test data. The density module 118 stores 416 the learned weight parameter values and data describing the MRF model in, e.g., the storage module 310.
FIG. 5 is a flowchart illustrating a method of predicted population density for a geographic area and providing a location-based service according to one embodiment. In one embodiment, the method of FIG. 5 is performed by the service provider 110, although some or all of the method can be performed by other entities in other embodiments. In addition, other embodiments can perform the steps of the method in different orders and can include different and/or additional steps.
The service provider 110 receives 510 current data describing data points observed from mobile devices 112 in geographic areas in a current interval, such as a current hour. The service provider 110 applies 512 the current data to the MRF model having the learned weight parameter values, and optimizes 514 the model to minimize cost. The optimization produces values for the state variables x representing the estimated number of mobile devices being used within the areas represented by the nodes associated with the state variables. The service provider 110 uses the values of the state variables to predict 516 the population densities within the areas represented by the nodes. The service provider 110 uses the predicted population densities to provide 518 location-based services, such as providing map overlays that graphically illustrate population density and/or traffic congestion.
The above description is included to illustrate the operation of certain embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion, many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention.
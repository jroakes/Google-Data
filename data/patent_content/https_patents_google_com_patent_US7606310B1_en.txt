US7606310B1 - Video compression and encoding method - Google Patents
Video compression and encoding method Download PDFInfo
- Publication number
- US7606310B1 US7606310B1 US12/102,694 US10269408A US7606310B1 US 7606310 B1 US7606310 B1 US 7606310B1 US 10269408 A US10269408 A US 10269408A US 7606310 B1 US7606310 B1 US 7606310B1
- Authority
- US
- United States
- Prior art keywords
- block
- motion vector
- filter
- given partition
- motion vectors
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/146—Data rate or code amount at the encoder output
- H04N19/147—Data rate or code amount at the encoder output according to rate distortion criteria
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/129—Scanning of coding units, e.g. zig-zag scan of transform coefficients or flexible macroblock ordering [FMO]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/513—Processing of motion vectors
- H04N19/517—Processing of motion vectors by encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/523—Motion estimation or motion compensation with sub-pixel accuracy
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/567—Motion estimation based on rate distortion criteria
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/57—Motion estimation characterised by a search window with variable size or shape
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/65—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using error resilience
- H04N19/66—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using error resilience involving data partitioning, i.e. separation of data into packets or partitions according to importance
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/80—Details of filtering operations specially adapted for video compression, e.g. for pixel interpolation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/85—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using pre-processing or post-processing specially adapted for video compression
- H04N19/89—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using pre-processing or post-processing specially adapted for video compression involving methods or arrangements for detection of transmission errors at the decoder
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
Definitions
- the invention relates to video compression and encoding methods, and more specifically to video compression methods that employ techniques to increase efficiency, compactability, and transmission of digital image and video data.
- Digital pictorial information whether derived from an analogue source by a process of digitization or directly from a digital device, consists of huge volumes of data. As the ability of devices to capture higher resolution images improves so too does the amount of data required for their digital representation. If stored in raw format a single image may well require tens of mega-bytes of disk space.
- the encoding operation may be considered to be a three-stage process.
- a block predictor created from data already available to the decoder, is subtracted from the original data to form a prediction error signal.
- the prediction error is block transformed and quantized.
- the transform coefficients are entropy coded to form a binary bitstream that constitutes the compressed frame.
- the prediction stage may involve spatial or temporal prediction for video.
- the only prediction mode available is spatial.
- the Discrete Cosine Transform has received the most attention over the last thirty years or so, being the transform of choice in all of the MPEG video compression and the original JPEG image compression International Standards.
- Another aspect of the invention covers the ability to reuse prior transmitted motion vectors, which may not appear directly adjacent to the current block, and to use statistics on these prior transmitted motion vectors to lessen the cost of encoding new motion vectors.
- Motion fields tend to track real objects that move from one frame to the next. These objects typically cover more than the typical block size. There is usually reasonable consistency of motion vectors from one block to the next. Prior art makes use of this consistency by predicting a new motion vector from the motion vectors of the surrounding blocks and then encoding the difference between the real motion vector and the predicted motion vector. The prior art also uses a smaller subset of blocks in the prediction, typically four surrounding motion vectors (left, above left, above, and above right).
- a prediction block is constructed based on previously decoded data. That prediction block is subtracted from the source data and the residual signal is encoded using techniques such as transform coding. At the decoder the prediction block may be created from data that has already been decoded and the prediction error signal added back in to produce the reconstructed block.
- intra- and inter-prediction indicate that the prediction block is formed from data from the same image/video frame and previously decoded frame(s), respectively.
- Sub Pixel motion estimation is used to build a prediction of a block that has moved from one frame to the next by something other than a whole pixel value.
- sub-pixel motion estimation the system attempts to estimate what would have happened to the block if the real object moved by a non-integral amount.
- the prior art used a fixed set of interpolating filters to predict 1 ⁇ 2, 1 ⁇ 4, and even 1 ⁇ 8 pixel moves.
- the problem with this technique is two fold: the longer the filter is the more likely you are to reproduce an image artifact and two shorter filters perform a less accurate interpolation and thus tend to blur real image detail.
- the prior art including some standards based codecs such as H.264, describes the use of various types of filters for smoothing the discontinuities that arise between blocks coded using discrete cosine transforms (DCT) or other similar block based transforms.
- DCT discrete cosine transforms
- This invention relates to an improved method for loop filtering that includes adaptive techniques that maximize the beneficial effects of the filter and minimize the artifacts.
- This invention covers a novel approach to encoding motion vectors that makes use of motion vectors from surrounding blocks in a way that differs from prior art.
- the current invention is based on the premise that a better prediction can be found by performing a motion search on multiple subdivisions of the same set of pixels. These subdivisions can be selected from a dictionary of subdivisions or derived from a set of ‘subdividing’ functions.
- the current invention may be integrated into any image or video compression algorithm that involves a block transform.
- image refers to a rectangular array that contains either raw pixel values or prediction error values.
- a process is carried out to sub-divide the image into a set of fixed partitions (for instance 16 ⁇ 16 blocks of pixels). Then these fixed partitions are subdivided in multiple ways using either a fixed set of subdivisions or a set of functions that produce an arbitrary set of subdivisions. A motion search is performed on each of the subdivisions and the best subdivision in a rate distortion sense is selected. The best subdivision can either be directly encoded in the bitstream or it can be signaled through transmitted motion vectors on a more atomic subdivision level.
- an aspect of the invention includes a method for determining motion vectors during video compression. Multiple subdivisions are performed on an image or part of an image, and motion estimation is performed on each of segment of every subdivision. It is determined which of the subdivisions is the best using a metric, and a statistics based lossless coding technique is used to encode the motion vectors generated by the compression process
- the subdivisions are provided from a set of labeling functions, which subdivide the image using criteria that differs from other labeling functions in the set.
- Subdivision functions are preferably based on one or more of the following functions:
- the metric used to choose between the different subdivisions is preferably a combination of at least one of the following: rate distortion, sum squared prediction error, or sum absolute difference error score.
- the invention also includes a method for encoding motion vectors.
- An image or part of an image is broken up into a set of smaller partitions.
- a mode is encoded which includes the following: left motion vector, above motion vector, zero motion vector, and/or new motion vector.
- motion vector encode a motion vector into the bitstream
- This invention also presents a new set of methods for intra-prediction in image and video compression, which include the “TrueMotion” intra-prediction mode, the “Left Predictor” intra-prediction mode, the “Above Predictor” intra-prediction mode, context based intra-prediction mode encoding, cost biased intra-prediction mode selection, and frame adaptive intra-prediction mode entropy encoding.
- the current invention also uses the known technique of motion compensation to build a predictor for each inter coded block in the frame via sub-pixel motion.
- prior art compression techniques use a fixed set of interpolating filters to predict 1 ⁇ 2, 1 ⁇ 4, and 1 ⁇ 8 pixel moves.
- the problem with this technique is two-fold: the longer the filter is the more likely you are to reproduce an image artifact, and two shorter filters perform a less accurate interpolation and thus tend to blur real image detail.
- This invention solves these problems by performing adaptive pixel analysis on the prediction filter and by picking between a set of filters that have different lengths. Shorter pixel filters are chosen when the results are less likely to be damaging. Longer filters are chosen when the clarity of the reconstructed frame is more important.
- the prior art predicts a new motion vector from the motion vectors of the surrounding blocks and then encoding the difference between the real motion vector and the predicted motion vector.
- the prior art also uses a smaller subset of blocks in the prediction. Typically four surrounding motion vectors: left, above left, above, and above right.
- the inventive method improves upon prior art by not just predicting the motion vector, but also by using statistics generated in the examination of the motion vectors of surrounding pixels as contextual information for encoding the motion vectors.
- the invention includes a method for encoding motion vectors of images in block based video compression algorithms, comprising the steps of:
- each partition further subdividing into segments according to a plurality of alternative subdivisions, each segment comprising one or more blocks of pixels;
- step iv) Selecting the subdivision with the lowest combined error score and encoding the motion vectors that were selected for the selected subdivision in step iv) into the bitstream.
- the optimal motion vector selection step iii) of a current partition uses motion vectors selected from a previously encoded partition.
- the combined error score calculating step iv) of a current partition preferably uses error scores calculated from a previously encoded partition.
- the subdivision selecting step v) of a current partition may use the subdivision selected from a previously encoded partition.
- the plurality of alternative subdivisions may be a fixed set of subdivisions, or a set of subdivisions derived from labeling functions, or both a first set of fixed subdivisions and a second set of subdivisions that are derived from labeling functions.
- the set of labeling functions includes at least one of the following: grouping blocks into segments according to variance; or grouping blocks into segments according to average pixel intensity; or grouping blocks into segments according to error score. Multiple subdivisions may be created using each labeling function of different thresholds.
- the motion vector selecting step iii) may further include at least one of the following steps: performing a motion search for each block or segment and encoding the resulting new motion vectors; or using the same motion vector as the block or segment to the left of the current block or segment; or using the same motion vector as the block or segment above the current block or segment; or using a zero motion vector (0,0); or using a previously encoded motion vector from a block or segment that is not immediately adjacent to the current block or segment.
- the error score basis for selecting the motion vector in step iii) may include a rate distortion calculation, or alternatively a prediction error calculated either as the sum squared error or the sum of absolute differences.
- a method for encoding motion vectors in video compression including the steps of:
- the counts from step b) may be distance weighted.
- this method may further include:
- N is the number of different motion vectors used in neighboring partitions
- the value stored in the array is a set of probabilities that determine which motion vector to use as reference.
- a function on the counts from step b) may be used to determine a set of probabilities that determine the motion vector to use as a reference.
- a method for intra prediction for use in block based video compression/decompression algorithms having the following steps:
- the selected optimal mode is encoded using a conditional probability distribution indexed or otherwise accessed according to the prediction modes of the previously encoded partitions above and to the left of the current partition.
- the provisional encoding step entails using any two or more of the specified equations.
- the conditional probability distribution is defined by a table of constants.
- the probability distribution may be updated on a per frame basis according to statistics gathered relating to the frequencies or conditional frequencies of each mode in at least one prior frame.
- the probability distribution may be a fixed baseline distribution.
- the probability distribution is updated for an image only when the number of bits used to update the probability distribution plus the number of bits required to encode all the prediction modes within the image using the updated probability distribution is less than the number of bits required to encode all the prediction modes using either the baseline probability distribution or the unchanged probability distribution from the previous frame.
- the decision of intra prediction mode for a partition may be based on a metric that combines the cost of the modes with error scores of the modes, where the cost of an intra prediction mode of a partition is calculated using Shannon cost of each mode calculated by the conditional probability distribution of the intra prediction modes for the partition and the error score of the mode is calculated using the differences between the predicted pixels values and the actual pixel values for the partition.
- the following steps may be included: multiplying the cost of each mode with a constant; adding the multiplied cost of each mode to the error score for the mode; and selecting the intra prediction mode with lowest combined score for the partition.
- a method for inter prediction of blocks of pixels using motion vectors in a video compression algorithm having the following steps:
- deriving the predictor block by applying a 6-tap 2 dimensional interpolation filter whose coefficients, when implemented as a separable 2-dimensional filter such that the prediction block is first filtered in one dimension (horizontal or vertical) and the resulting filtered data block is then filtered in the other dimension, are as follows:
- a method for inter prediction of blocks of pixels using motion vectors in a video compression algorithm having the following steps:
- the plurality of interpolation filters includes a 6-tap 2 dimensional interpolation filter, whose coefficients, when implemented as a separable 2-dimensional filter such that the prediction block is first filtered in one dimension (horizontal or vertical) and the resulting filtered data block is then filtered in the other dimension, are as follows:
- the filter is implemented using floating point or fixed point arithmetic, or the filter may not be implemented as a separable 2 dimensional filter.
- One of the filters that may optionally be selected may be a 2-tap bi-linear filter, a 4-tap bi-cubic filter, or a 6-tap filter.
- the basis for selecting between the pluralities of possible filters may be the magnitude of the sum of inter-pixel differences.
- the basis for selecting between the interpolation filters may include the following steps:
- first, second, and third thresholds may either be derived by the encoder and the values coded in the bitstream, or have fixed values known to both encoder and decoder.
- FIG. 1 is a schematic of an example set of 16 ⁇ 16 block subdivisions.
- FIG. 2 is a diagram showing the step-by-step generation of subdivisions.
- FIG. 3 is a diagram showing the preferred bin weightings for block X.
- FIG. 4 is a diagram showing calculations of tallies for block X.
- FIG. 5 is a diagram showing the relative position of previously coded pixels C, A i , and L i and the block being predicted X ij in the image/frame.
- FIG. 6 is a diagram a number of blocks including block B rc of an image/video frame.
- FIG. 7 is a graph depicting the transfer function of bi-linear, bi-cubic, and the inventive 6-tap filters as gain as a function of frequency.
- FIGS. 1-7 Description will now be given of the invention with reference to the attached FIGS. 1-7 . It should be understood that these figures are exemplary in nature and in no way serve to limit the scope of the invention, which is defined by the claims appearing herein below.
- FIG. 1 is an example set of 16 ⁇ 16 block subdivisions. Each letter in the blocks represents a 4 ⁇ 4 set of pixels within a 16 by 16 block of pixels
- the invention is accomplished using the logic demonstrated with the following pseudo-code.
- This invention also covers the use of special labeling functions to create an arbitrary set of subdivisions.
- the goal in the design of these functions is to produce segments of different size and shape; the hope is that one of these segments will best match the moving objects on the screen and thus produce a better prediction for the current block.
- the current embodiment of this invention specifies a set of possible functions for use as follows:
- the invention also covers a method for generating different subdivisions that includes picking one of the above functions and applying it multiple times with a different threshold for each desired subdivision. This method is illustrated in FIG. 2 .
- the thresholds can be selected dynamically to best insure that different labeling is set up.
- Step 1 Calculate average pixel intensity
- Step 2 Assign first block label A
- Step 3 GO through the remaining blocks in raster order as follows:
- Step 4 Reapply with different thresholds (e.g., sample labeling thresholds of 2, 4, 9, and 15 are shown in FIG. 2 ).
- Another aspect of the invention covers the ability to reuse prior transmitted motion vectors, which may not appear directly adjacent to the current block, and to use statistics on these prior transmitted motion vectors to lessen the cost of encoding new motion vectors.
- Motion fields tend to track real objects that move from one frame to the next. These objects typically cover more than the typical block size. There is reasonable consistency of motion vectors from one block to the next. Prior art makes use of this consistency by predicting a new motion vector from the motion vectors of the surrounding blocks and then encoding the difference between the real motion vector and the predicted motion vector.
- This invention covers a novel approach to encoding motion vectors that makes use of motion vectors from surrounding blocks in a way that differs from prior art.
- Bin 1 is used to tally blocks with no motion vector
- Bin 2 is used to tally blocks in which the nearest motion vector appears
- Bin 3 tallies blocks in which the next closest motion vector appears
- Bin 4 tallies blocks that can't fit into any of the other bins.
- the block tally is weighted by the block's closeness to the block whose motion vector is being encoded (see FIG. 3 ).
- the mode refers to what motion vector is used for the block.
- Bin 1 is the size it is (see FIG. 4 )
- the current invention defines a set of block predictors that use data from one or more previously decoded blocks to produce the closest approximation to data in the block that is being predicted.
- various block sizes are used, but the invention may be applied to blocks of arbitrary size which may include, but is not limited to, the set 16 ⁇ 6, 8 ⁇ 16, 16 ⁇ 8, 8 ⁇ 8, 8 ⁇ 4, 4 ⁇ 8 and 4 ⁇ 4.
- the block size is 4 ⁇ 4.
- the methods presented may easily be extended to arbitrary block sizes without loss of generality.
- FIG. 5 shows the relative position of the pixels in previously decoded blocks and those of the block that have to be predicted In the sections that follow reference should be made to this figure.
- FIG. 5 Relative positions of the previously decoded pixels C, Ai and L i and the block being predicted X ij in the image/frame.
- the values L i refer to pixels in the block to the left of the current block, which is referred to as the “Left” block.
- the values A i and C refer to pixels in the blocks above the current block, which is referred to as the “Above” block.
- a further prediction mode called the “Above Predictor”, in the current invention is defined by the following equation to calculate X ij :
- X ij ( Li ⁇ 1 +2 L i +L i+1 +2)/4 It is essentially a weighted predictor based on previously decoded pixel values from the blocks directly above the block being predicted. As these values come from previously decoded blocks these values will be available at the decoder when required 3.
- Context Based Intra-Prediction Mode Encoding
- the current invention embodies a new context based encoding scheme for encoding intra-prediction mode decisions.
- This encoding method is used to encode an intra-prediction mode for a block in cases where both the left and above block are also coded using an intra-prediction mode.
- block B rc is located in the r th block row and the c th block column of the current image/video frame.
- the intra-prediction mode of block B rc is found to be closely correlated to the intra-prediction modes of blocks and B rc(1) ⁇ when intra-prediction is used for both B (r ⁇ 1)c and B r(c ⁇ 1) .
- both the encoder and decoder maintain a conditional probability distribution of intra-prediction modes for a particular frame.
- the conditional probability model, or context consists of the intra-prediction modes used to code the blocks immediately to the left of and above the current block: Prob( M CURRENT
- M CURRENT represents the intra-prediction mode of the current block
- M ABOVE and M LEFT represent the modes of the two neighboring blocks
- m ABOVE and m LEFT represent the actual mode used in the neighboring blocks.
- the selected mode is then encoded into the bitstream as follows:
- conditional probability distributions are used to encode each intra-prediction mode using an arithmetic encoder.
- the selection of a prediction mode to use for a particular block is commonly based solely on minimizing the prediction error as measured by some defined error metric.
- error metric Many such metrics have been used in the prior art examples being the sum of absolute differences, the sum of squared differences, and the variance.
- the major problem with this method of selecting mode is that it does not consider the cost of encoding the prediction mode decision itself in to the bitstream, resulting in a possibly non-optimal solution. For example, if the mode that produces the smallest prediction error requires significantly more bits to encode in the bitstream than an alternative mode that has only a slightly larger prediction error, it may be better to use the alternative prediction mode to achieve a more optimal cost-compression trade-off.
- the current invention embodies a cost biased strategy in selecting best overall intra-prediction mode for each intra-predicted block.
- the basic idea is to consider the overall encoding cost of each prediction mode, including both the signaling cost of the mode choice and the cost of coding the prediction error signal, and select the intra-prediction mode with best overall efficiency.
- the current invention converts the cost of each prediction mode into a quantity that is added into the prediction error resulting from coding using that mode. The mode with the smallest aggregate error score is then selected.
- the decision process for each block involves the following steps:
- the content of video changes from frame to frame, which means the probability distribution described in sections 4 and 5 could change accordingly.
- the actual probability distribution of each video frame provides the best coding efficiency for that frame.
- any updating of such a distribution involves an overhead cost of transmitting the updates in the compressed bitstream.
- the current invention presents a method to determine when an update is appropriate.
- a two-dimensional motion vector specifies the location, relative to the spatial position of the block being predicted, of the block in a previously decoded reference frame to be used as predictor.
- a decoded prediction error signal is subsequently added to the prediction block to create the final reconstructed block.
- Motion vector components are specified to 1 ⁇ 4 sample accuracy for luma blocks, the vector for the corresponding chroma blocks is derived from this.
- the YUV 4:2:0 color space is used as the internal coding format. In this format the distance between two chroma samples is twice that of the distance between luma samples. Consequently, if the luma components of a motion vector are specified to 1 ⁇ 4 sample accuracy, then the chroma components are at 1 ⁇ 8 th sample values.
- a separate filter is specified for each of the eight 1 ⁇ 8 th sample positions, i.e., at positions ⁇ 0, 1 ⁇ 8, 1 ⁇ 4, 3 ⁇ 8, 1 ⁇ 2, 5 ⁇ 8, 3 ⁇ 4, 7 ⁇ 8 ⁇ between pixels.
- the first of these positions is, trivially, the position of the pixel value itself and requires no interpolation.
- the preferred embodiment specifies an interpolation algorithm that employs a set of separable two-dimensional filters.
- data from the reference frame at a location relative to the current block as specified by the non-fractional part of the motion vector is first filtered horizontally to produce the fractional horizontal position data.
- the resulting data is then filtered vertically to produce the required result.
- Applying the vertical filter before the horizontal is equally valid, but may produce different results.
- the particular filter used is determined by the fractional part of the motion vector component. For example, if the motion vector were (41 ⁇ 2, 3 ⁇ 4) then the horizontal and vertical filters corresponding to the 1 ⁇ 2 and 3 ⁇ 4 positions would be used, respectively.
- Negative motion vector components require slightly different selection. For example, the component ⁇ 33 ⁇ 4 actually lays 1 ⁇ 4 of the way between the two pixel positions and so requires selection of the 1 ⁇ 4 position filter.
- each row specifies a set of filter taps for the generation of the specified 1 ⁇ 8 th pixel position.
- the taps are applied to a contiguous set of pixels in the appropriate direction, horizontal or vertical, such that the taps t 0 and t 1 are applied to the pixels closest to the fractional position being interpolated.
- All of the filters are normalized to 128 to permit integer only implementation. After the application of the filter the values are re-normalized and clipped back to the range 0 to 255.
- the bi-linear filter is the simplest to implement but can produces result that appear blurred due to its narrow pass-band. This filter is used in areas of low variation to suppress noise and reduce any coding artifact that may be present.
- the first two filters both exist as prior art and have been extensively used.
- the six-tap filter forms part of the current invention.
- the filter taps were derived to produce the widest possible pass-band in the transfer function, whilst containing virtually no above unit gain throughout the frequency spectrum.
- FIG. 7 plots the transfer functions for all three-filter families at the 1 ⁇ 2 pixel position.
- FIG. 7 Transfer Function of Bi-Linear, Bi-Cubic and On2 6-tap Filters.
- the selection of which filter family to use for a particular block is based on the content of the data being filtered.
- the magnitude of the sum of inter-pixel differences in the direction that the filter is to be applied is used to select between filter types as follows:
- VDiff Sum of differences between vertically neighboring pixels in block
- thresholds T 0 , T 1 and T 2 may either be derived by the encoder and the values coded in the bitstream, or have fixed values known to both encoder and decoder.
- Output from the filter is positioned at its center in the sense that, for a length N filter (where N is even), the first N/2 filter taps are multiplied by the N/2 pixels directly to the left of (or above) the position being interpolated, and the final N/2 taps multiplied by the N/2 pixels directly to the right of (or below) the position being interpolated.
- the final output value is the sum of these N products, appropriately rounded and normalized.
- pixels outside of the block are used during the filtering process since the filter extends beyond the bounds of the block boundary at either end.
- the reference frame must be padded beyond its boundary by repeating the value of the edge pixel as required.
- the filtering process is summarized by the following pseudo-code.
- the pseudo-code makes the assumption that the filter is 6-tap. Smaller filters must be padded with zeros and have the coefficients centered, e.g. the two-tap and four-tap filters are specified as ⁇ 0, 0, t 0 , t 1 , 0, 0 ⁇ and ⁇ 0, t 1 , t 0 , t 1 , t 2 , 0 ⁇ , respectively;
Abstract
Description
-
- a. Blocks with variances within a certain threshold are given the same label
- b. Blocks with average pixel intensities within a given threshold are given the same label
- c. Blocks with error scores within a certain threshold are given the same label.
-
- a) Subdividing each image into a set of fixed partitions;
- b) Giving each pixel in the partition a predicted value using any one or more of the following equations:
X ij =L i +A j −C;
X ij=(Li −1+2L i +L i+1+2)/4;
X ij=(Aj −1+2A j +A j+12)/4; - Where i and j represent the row and column position of Xij within a partition, Li is the pixel from the column left to the partition in the same row of Xij, Aj is the pixel from the row above but in the same column of Xij, C is the pixel on the intersection of the row above and the column left to the partition,
- c) Subtracting the predicted values from the source pixel values;
- d) Quantizing and transforming the resultant value from step c) using a transform function into transform coefficients; and
- e) Losslessly encoding the transform coefficients of step d) into the bitstream
X ij =L i +A j −C; or
X ij=(Li −1+2L i +L i+1+2)/4; or
X ij=(Aj −1+2A j +A j+1+2)/4;
2 | −11 | 108 | 36 | −8 | 1 | (¼ pixel) |
3 | −16 | 77 | 77 | −16 | 3 | (½ pixel) |
1 | −8 | 36 | 108 | −11 | 2 | (¾ pixel) |
2 | −11 | 108 | 36 | −8 | 1 | (¼ pixel) |
3 | −16 | 77 | 77 | −16 | 3 | (½ pixel) |
1 | −8 | 36 | 108 | −11 | 2 | (¾ pixel) |
-
- Set segment mv to best mv
Rate=# bits to encode mode (left, above, zero, or new MV)+# bits to encode motion vector (only for new motion vector)+# bits to encode residual error signal the block)
Block Distortion=sum squared error for each pixel within the block
Block Rate Distortion Value=Rate*Rate Factor+Distortion*Distortion Factor
Segment Rate Distortion Value=Segment Rate Distortion Value+Block Rate Distortion Value
-
- 1. Blocks with variances within a certain threshold are given the same label
- 2. Blocks with average pixel intensities within a given threshold are given the same label
- 3. Blocks with error scores within a certain threshold are given the same label.
-
- 1) A mode is encoded which can be one of the following:
-
- 2) The context used to encode this mode is the counts associated with the 4 bins (see
-
- 3) The motion vector associated with the bin with the highest count is used as a prediction for a new motion vector if the mode is new motion vector (If the bin is
bin 4 then the predicted motion vector is 0,0)
- 3) The motion vector associated with the bin with the highest count is used as a prediction for a new motion vector if the mode is new motion vector (If the bin is
Probability=BinCount[1]/30.0
Probability=P[BinCount[1]]
C | A0 | A1 | A2 | A3 | A4 | ||
L0 | X00 | X01 | X02 | X03 | |||
L1 | X10 | X11 | X12 | X13 | |||
L2 | X20 | X21 | X22 | X23 | |||
L3 | X30 | X31 | X32 | X33 | |||
X ij =L i +A j −C;
2, “Above Predictor” Intra-Prediction Mode
X ij=(Li −1+2L i +L i+1+2)/4
It is essentially a weighted predictor based on previously decoded pixel values from the blocks directly above the block being predicted. As these values come from previously decoded blocks these values will be available at the decoder when required
3. “Left Predictor” Intra-Prediction Mode
X ij=(Aj −1+2A j +A j+1+2)/4
It is essentially a weighted predictor based on previously decoded pixel values from the block to the left of the block being predicted. As these values come from previously decoded blocks these values will be available at the decoder when required,
4. Context Based Intra-Prediction Mode Encoding
Prob(MCURRENT|M LEFT =m LEFT ,M ABOVE =m ABOVE)
-
- Find the intra-prediction mode for the current block, ModeCURRENT
- Determine the intra-prediction mode used by the left block, ModeLEFT
- Determine the intra-prediction mode used by the above block, ModeABOVE
- Look-up the conditional probability for ModeCURRENT for the context (ModeLEFT, ModeABOVE), P(ModeCURRENT|ModeLEFT, ModeABOVE)
- Use this probability to encode the mode decision using, for example, an arithmetic or Huffman coder.
-
- a. Find the intra-prediction mode of the block above and the block to the left, mABOVE and mLEFT,
- b. Find the probability distribution P(ModeCURRENT|ModeLEFT, ModeABOVE),
- c. Use Shannon theory to convert the probability distribution to number of bits necessary to encode each prediction mode: Bitsm,
- d. Calculate the error metric sum of squared differences for each prediction mode:
- Calculate SSD(m)+Bits(m)*C, where C is an empirical value that measures the amount of SSD per bit when the difference signal is encoded using transform coding. C is dependent upon the quantizer level and is commonly referred to as a rate distortion metric
- e. The Intra-prediction mode resulting in the smallest value in step (e) is then chosen.
6. Frame Adaptive Intra-Prediction Entropy Encoding
-
- a) Remember the conditional mode probability distribution for the previous frame, or known baseline if no previous frame exists, PPREVIOUS,
- b) Count the number of times each mode is selected in the current frame to produce the conditional mode probability distribution for the current frame, PCURRENT,
- c) Encode all modes using the previous frame probability distribution, resulting in BPREVIOUS bits,
- d) Encode all modes using the current frame probability distribution, resulting in BCURRENT bits,
- e) Calculate the number of bits required to update the probability distribution from that used for the previous frame and that computed from the current frame, BUPDATE,
- f) If (BCURRENT+BUPDATE)<BPREVIOUS then it is cost effective to transmit the update and use it to encode modes in the current frame. Otherwise, use the existing mode probability distribution
Sub-Pixel Filtering
TABLE 5 |
Coefficients of the 2-tap Bi-linear Filter (Normalized to 128) |
Position/Tap | t0 | t1 |
0 | 128 | 0 |
⅛ | 112 | 16 |
¼ | 96 | 32 |
⅜ | 80 | 48 |
½ | 64 | 64 |
⅝ | 48 | 80 |
¾ | 32 | 96 |
⅞ | 16 | 112 |
TABLE 6 |
Coefficients of the |
4-tap bi-cubic Filter alpha = −0.5 (Normalized to 128) |
Position/Tap | t1 | t0 | t1 | t2 |
0 | 0 | 128 | 0 | 0 |
⅛ | −6 | 123 | 12 | −1 |
¼ | −9 | 111 | 29 | −3 |
⅜ | −9 | 93 | 50 | −6 |
½ | −8 | 72 | 72 | −8 |
⅝ | −6 | 50 | 93 | −9 |
¾ | −3 | 29 | 111 | −9 |
⅞ | −1 | 12 | 123 | −6 |
TABLE 7 |
Coefficients of the 6-tap Filter (Normalized to 128) |
Position/Tap | t−2 | t−1 | t0 | t1 | t2 | |
0 | 0 | 0 | 128 | 0 | 0 | 0 |
⅛ | 0 | −6 | 123 | 12 | −1 | 0 |
¼ | 2 | −11 | 108 | 36 | −8 | 1 |
⅜ | 0 | −9 | 93 | 50 | −6 | 0 |
½ | 3 | −16 | 77 | 77 | −16 | 3 |
⅝ | 0 | −6 | 50 | 93 | −9 | 0 |
¾ | 1 | −8 | 36 | 108 | −11 | 2 |
⅞ | 0 | −1 | 12 | 123 | −6 | 0 |
-
- HFilter=Bi-Linear Filter;
-
- HFilter=Bi-Cubic Filter;
-
- HFilter=6-tap Filter;
-
- VFilter=Bi-Linear Filter;
-
- VFilter=Bi-Cubic Filter;
-
- VFilter=6-tap Filter;
- #define FILTER_WEIGHT 128 //Sum of the filter taps
- #define
FILTER_SHIFT 7 //Number of bits to shift output from- //filter by to effect normalization
- void FilterBlock2d
- (
- unsigned char *SrcPtr, //Pointer to prediction block data in reference frame
- unsigned char *OutputPtr, //Pointer to output block being interpolated
- int SrcPixelsPerLine, //Number of pixels in input & output line
- short *HFilter, //Pointer to array containing 6-tap Horizontal Filter
- short *VFilter //Pointer to array containing 6-tap Vertical Filter
- )
- {
- int FData[9*4]; //Temp data buffer used in filtering
- //Note: SrcPtr points to the block of pixels in the prediction frame
- //that the non-fractional part of the motion vector indicates.
- //Step 1: Filter block horizontally using specified filter:
- FilterBlockHorizontally (SrcPtr−(2*SrcPixelsPerLine), SrcPixelsPerLine, FData, 9, 4, HFilter);
- //Step 2: Filter block vertically using specified filter:
- FilterBlockVertically (FData+8, 4, OutputPtr, 4, 4, VFilter);
- }
- void FilterBlockHorizontally
- (
- unsigned char *SrcPtr,
- int SrcPixelsPerLine,
- int *OutputPtr,
- int OutputHeight,
- int OutputWidth,
- int *Filter
- )
- {
- int i, j;
- int Temp;
- for (i=0; i<OutputHeight; i++)
- {
- for (j=0; j<OutputWidth; j++)
- {
- //Apply filter:
- Temp=((int)SrcPtr[−2]*Filter[0])+
- ((int)SrcPtr[−1]*Filter[1])+
- ((int)SrcPtr[0]*Filter[2])+
- ((int)SrcPtr[1]*Filter[3])+
- ((int)SrcPtr[2]*Filter[4])+
- ((int)SrcPtr[3]*Filter[5]);
- //Add in the rounding value based on filter-tap sum:
- Temp+=(FILTER_WEIGHT >>1);
- //Normalize output to range 0-255:
- Temp=Temp>>FILTER_SHIFT;
- if (Temp <0)
- Temp=0;
- else if (Temp >255)
- Temp=255;
- //Store output value:
- OutputPtr[j]=Temp;
- SrcPtr++;
- }
- //Move to start of next row:
- SrcPtr+=SrcPixelsPerLine−OutputWidth;
- OutputPtr+=OutputWidth;
- }
- }
- void FilterBlockVertically
- (
- int *SrcPtr,
- int SrcPixelsPerLine,
- unsigned char *OutputPtr,
-
- int OutputWidth,
- int *Filter
- )
- {
- int i, j;
- int Temp;
- for (i=0; i<OutputHeight; i++)
- {
- for (j=0; j<OutputWidth; j++)
- {
- //Apply filter:
- Temp=((int)SrcPtr[−2*SrcPixelsPerLine]*Filter[0])+
- ((int)SrcPtr[−1*SrcPixelsPerLine]*Filter[1])+
- ((int)SrcPtr[0*SrcPixelsPerLine]*Filter[2])+
- ((int)SrcPtr[1*SrcPixelsPerLine]*Filter[3])+
- ((int)SrcPtr[2*SrcPixelsPerLine]*Filter[4])+
- ((int)SrcPtr[3*SrcPixelsPerLine]*Filter[5]);
- //Add in the rounding value based on filter-tap sum:
- Temp+=(FILTER_WEIGHT >>1);
- //Normalize output to range 0-255:
- Temp=Temp>>FILTER_SHIFT;
- if (Temp <0)
- Temp=0;
- else if (Temp >255)
- Temp=255;
- //Store output value:
- OutputPtr[1]=(unsigned char)Temp;
- SrcPtr++,
- }
- //Move to start of next row:
- SrcPtr+=SrcPixelsPerLine−OutputWidth;
- OutputPtr+=OutputWidth;
- }
Claims (10)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/102,694 US7606310B1 (en) | 2004-06-28 | 2008-04-14 | Video compression and encoding method |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US58387204P | 2004-06-28 | 2004-06-28 | |
US11/170,629 US7953152B1 (en) | 2004-06-28 | 2005-06-28 | Video compression and encoding method |
US12/102,694 US7606310B1 (en) | 2004-06-28 | 2008-04-14 | Video compression and encoding method |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/170,629 Continuation US7953152B1 (en) | 2004-06-28 | 2005-06-28 | Video compression and encoding method |
Publications (1)
Publication Number | Publication Date |
---|---|
US7606310B1 true US7606310B1 (en) | 2009-10-20 |
Family
ID=41170354
Family Applications (10)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/170,629 Active 2029-11-29 US7953152B1 (en) | 2004-06-28 | 2005-06-28 | Video compression and encoding method |
US11/931,924 Active US7499492B1 (en) | 2004-06-28 | 2007-10-31 | Video compression and encoding method |
US12/102,694 Active US7606310B1 (en) | 2004-06-28 | 2008-04-14 | Video compression and encoding method |
US13/066,668 Active US8290054B2 (en) | 2004-06-28 | 2011-04-21 | Video compression and encoding method |
US13/200,795 Active US8290055B2 (en) | 2004-06-28 | 2011-09-30 | Video compression and encoding method |
US13/250,197 Active US8170112B2 (en) | 2004-06-28 | 2011-09-30 | Video compression and encoding method |
US13/617,864 Active US8665951B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
US13/617,805 Active US8705625B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
US13/617,769 Active US8780992B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
US13/617,834 Active US8634464B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/170,629 Active 2029-11-29 US7953152B1 (en) | 2004-06-28 | 2005-06-28 | Video compression and encoding method |
US11/931,924 Active US7499492B1 (en) | 2004-06-28 | 2007-10-31 | Video compression and encoding method |
Family Applications After (7)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/066,668 Active US8290054B2 (en) | 2004-06-28 | 2011-04-21 | Video compression and encoding method |
US13/200,795 Active US8290055B2 (en) | 2004-06-28 | 2011-09-30 | Video compression and encoding method |
US13/250,197 Active US8170112B2 (en) | 2004-06-28 | 2011-09-30 | Video compression and encoding method |
US13/617,864 Active US8665951B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
US13/617,805 Active US8705625B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
US13/617,769 Active US8780992B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
US13/617,834 Active US8634464B2 (en) | 2004-06-28 | 2012-09-14 | Video compression and encoding method |
Country Status (1)
Country | Link |
---|---|
US (10) | US7953152B1 (en) |
Cited By (42)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060204046A1 (en) * | 2005-03-10 | 2006-09-14 | Yu Xia | Method and apparatus for motion estimation in video signal decoding |
US20080303954A1 (en) * | 2007-06-04 | 2008-12-11 | Sanyo Electric Co., Ltd. | Signal Processing Apparatus, Image Display Apparatus, And Signal Processing Method |
US8503528B2 (en) | 2010-09-15 | 2013-08-06 | Google Inc. | System and method for encoding video using temporal filter |
US8611415B1 (en) | 2010-11-15 | 2013-12-17 | Google Inc. | System and method for coding using improved motion estimation |
US8634464B2 (en) | 2004-06-28 | 2014-01-21 | Google, Inc. | Video compression and encoding method |
US8780971B1 (en) | 2011-04-07 | 2014-07-15 | Google, Inc. | System and method of encoding using selectable loop filters |
US8780996B2 (en) | 2011-04-07 | 2014-07-15 | Google, Inc. | System and method for encoding and decoding video data |
US8781004B1 (en) | 2011-04-07 | 2014-07-15 | Google Inc. | System and method for encoding video using variable loop filter |
CN103959788A (en) * | 2011-09-30 | 2014-07-30 | 奥林奇公司 | Estimation of motion at the level of the decoder by matching of models |
US8885706B2 (en) | 2011-09-16 | 2014-11-11 | Google Inc. | Apparatus and methodology for a video codec system with noise reduction capability |
US8897591B2 (en) | 2008-09-11 | 2014-11-25 | Google Inc. | Method and apparatus for video coding using adaptive loop filter |
US8908767B1 (en) | 2012-02-09 | 2014-12-09 | Google Inc. | Temporal motion vector prediction |
US9014266B1 (en) | 2012-06-05 | 2015-04-21 | Google Inc. | Decimated sliding windows for multi-reference prediction in video coding |
US9066104B2 (en) | 2011-01-14 | 2015-06-23 | Google Inc. | Spatial block merge mode |
US9094689B2 (en) | 2011-07-01 | 2015-07-28 | Google Technology Holdings LLC | Motion vector prediction design simplification |
US9131073B1 (en) | 2012-03-02 | 2015-09-08 | Google Inc. | Motion estimation aided noise reduction |
US9154799B2 (en) | 2011-04-07 | 2015-10-06 | Google Inc. | Encoding and decoding motion via image segmentation |
US9172970B1 (en) | 2012-05-29 | 2015-10-27 | Google Inc. | Inter frame candidate selection for a video encoder |
US9185428B2 (en) | 2011-11-04 | 2015-11-10 | Google Technology Holdings LLC | Motion vector scaling for non-uniform motion vector grid |
US9185414B1 (en) | 2012-06-29 | 2015-11-10 | Google Inc. | Video encoding using variance |
US9313493B1 (en) | 2013-06-27 | 2016-04-12 | Google Inc. | Advanced motion estimation |
US9344729B1 (en) | 2012-07-11 | 2016-05-17 | Google Inc. | Selective prediction signal filtering |
US9357223B2 (en) | 2008-09-11 | 2016-05-31 | Google Inc. | System and method for decoding using parallel processing |
US9374578B1 (en) | 2013-05-23 | 2016-06-21 | Google Inc. | Video coding using combined inter and intra predictors |
US9374596B2 (en) | 2008-09-11 | 2016-06-21 | Google Inc. | System and method for video encoding using constructed reference frame |
US9392280B1 (en) | 2011-04-07 | 2016-07-12 | Google Inc. | Apparatus and method for using an alternate reference frame to decode a video frame |
US9426459B2 (en) | 2012-04-23 | 2016-08-23 | Google Inc. | Managing multi-reference picture buffers and identifiers to facilitate video data coding |
US9485515B2 (en) | 2013-08-23 | 2016-11-01 | Google Inc. | Video coding using reference motion vectors |
US9503746B2 (en) | 2012-10-08 | 2016-11-22 | Google Inc. | Determine reference motion vectors |
US9531990B1 (en) | 2012-01-21 | 2016-12-27 | Google Inc. | Compound prediction using multiple sources or prediction modes |
US9609343B1 (en) | 2013-12-20 | 2017-03-28 | Google Inc. | Video coding using compound prediction |
US9609341B1 (en) | 2012-04-23 | 2017-03-28 | Google Inc. | Video data encoding and decoding using reference picture lists |
US9628790B1 (en) | 2013-01-03 | 2017-04-18 | Google Inc. | Adaptive composite intra prediction for image and video compression |
US9756331B1 (en) | 2013-06-17 | 2017-09-05 | Google Inc. | Advance coded reference prediction |
US9762931B2 (en) | 2011-12-07 | 2017-09-12 | Google Inc. | Encoding time management in parallel real-time video encoding |
US9794574B2 (en) | 2016-01-11 | 2017-10-17 | Google Inc. | Adaptive tile data size coding for video and image compression |
US9813700B1 (en) | 2012-03-09 | 2017-11-07 | Google Inc. | Adaptively encoding a media stream with compound prediction |
US9924161B2 (en) | 2008-09-11 | 2018-03-20 | Google Llc | System and method for video coding using adaptive segmentation |
US10102613B2 (en) | 2014-09-25 | 2018-10-16 | Google Llc | Frequency-domain denoising |
US10542258B2 (en) | 2016-01-25 | 2020-01-21 | Google Llc | Tile copying for video compression |
US11317101B2 (en) | 2012-06-12 | 2022-04-26 | Google Inc. | Inter frame candidate selection for a video encoder |
US11425395B2 (en) | 2013-08-20 | 2022-08-23 | Google Llc | Encoding and decoding using tiling |
Families Citing this family (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7386048B2 (en) | 2002-05-28 | 2008-06-10 | Sharp Laboratories Of America, Inc. | Methods and systems for image intra-prediction mode organization |
US8446954B2 (en) * | 2005-09-27 | 2013-05-21 | Qualcomm Incorporated | Mode selection techniques for multimedia coding |
CN1859576A (en) * | 2005-10-11 | 2006-11-08 | 华为技术有限公司 | Top sampling method and its system for space layered coding video image |
CN1794821A (en) * | 2006-01-11 | 2006-06-28 | 浙江大学 | Method and device of interpolation in grading video compression |
US20080137743A1 (en) * | 2006-12-06 | 2008-06-12 | Electronics And Telecommunications Research Institute | Intra-mode predication search method and apparatus for compression of real-time video signal |
US8233537B2 (en) * | 2007-03-19 | 2012-07-31 | Texas Instruments Incorporated | Efficient implementation of H.264 4 by 4 intra prediction on a VLIW processor |
US8908765B2 (en) * | 2007-11-15 | 2014-12-09 | General Instrument Corporation | Method and apparatus for performing motion estimation |
US8761253B2 (en) * | 2008-05-28 | 2014-06-24 | Nvidia Corporation | Intra prediction mode search scheme |
JP5050158B2 (en) * | 2008-06-02 | 2012-10-17 | 株式会社メガチップス | Transcoder |
US8774541B2 (en) * | 2008-11-05 | 2014-07-08 | Sony Corporation | Intra prediction with adaptive interpolation filtering for image compression |
CN102450010A (en) | 2009-04-20 | 2012-05-09 | 杜比实验室特许公司 | Directed interpolation and data post-processing |
CN102450009B (en) * | 2009-04-20 | 2015-07-22 | 杜比实验室特许公司 | Filter selection for video pre-processing in video applications |
US9774882B2 (en) | 2009-07-04 | 2017-09-26 | Dolby Laboratories Licensing Corporation | Encoding and decoding architectures for format compatible 3D video delivery |
KR101710883B1 (en) * | 2009-11-04 | 2017-02-28 | 삼성전자주식회사 | Apparatus and method for compressing and restoration image using filter information |
JP5784596B2 (en) * | 2010-05-13 | 2015-09-24 | シャープ株式会社 | Predicted image generation device, moving image decoding device, and moving image encoding device |
DK3457689T3 (en) * | 2010-05-25 | 2020-10-12 | Lg Electronics Inc | NEW PLANAR PREDICTION MODE |
US10104391B2 (en) | 2010-10-01 | 2018-10-16 | Dolby International Ab | System for nested entropy encoding |
US20120082228A1 (en) * | 2010-10-01 | 2012-04-05 | Yeping Su | Nested entropy encoding |
JP2012209914A (en) * | 2010-12-08 | 2012-10-25 | Sony Corp | Image processor, image processing method and program |
US8811759B2 (en) * | 2011-01-13 | 2014-08-19 | Sony Corporation | System and method for effectively performing an intra prediction procedure |
GB2561264B (en) * | 2011-05-20 | 2019-01-02 | Kt Corp | Method and apparatus for intra prediction within display screen |
KR101383775B1 (en) | 2011-05-20 | 2014-04-14 | 주식회사 케이티 | Method And Apparatus For Intra Prediction |
US8768082B2 (en) | 2011-06-22 | 2014-07-01 | Blackberry Limited | Compressing image data |
US8837582B2 (en) | 2011-06-22 | 2014-09-16 | Blackberry Limited | Compressing image data |
US9055304B2 (en) | 2011-07-01 | 2015-06-09 | Qualcomm Incorporated | Reduced resolution pixel interpolation |
KR101323863B1 (en) * | 2011-11-01 | 2013-10-31 | 아주대학교산학협력단 | Motion estimation method and motion estimation apparatus |
US9262670B2 (en) | 2012-02-10 | 2016-02-16 | Google Inc. | Adaptive region of interest |
US11039138B1 (en) * | 2012-03-08 | 2021-06-15 | Google Llc | Adaptive coding of prediction modes using probability distributions |
ES2643047T3 (en) * | 2012-04-20 | 2017-11-21 | Hilti Aktiengesellschaft | Radical indolin-nitroxide as stabilizer and inhibitor for reaction resins, reaction resins containing it and their use |
FR2992815A1 (en) | 2012-06-27 | 2014-01-03 | France Telecom | METHOD FOR ENCODING A CURRENT BLOCK OF A FIRST IMAGE COMPONENT IN RELATION TO A REFERENCE BLOCK OF AT LEAST ONE SECOND IMAGE COMPONENT, ENCODING DEVICE AND CORRESPONDING COMPUTER PROGRAM |
FR2993084A1 (en) * | 2012-07-09 | 2014-01-10 | France Telecom | VIDEO CODING METHOD BY PREDICTING CURRENT BLOCK PARTITIONING, DECODING METHOD, CODING AND DECODING DEVICES AND CORRESPONDING COMPUTER PROGRAMS |
US9245352B1 (en) | 2013-04-12 | 2016-01-26 | Google Inc. | Systems and methods for near lossless image compression |
US9967594B2 (en) * | 2013-06-28 | 2018-05-08 | Mozilla Corporation | Probability modeling of intra prediction modes |
JP6315911B2 (en) | 2013-07-09 | 2018-04-25 | キヤノン株式会社 | Image encoding device, image encoding method and program, image decoding device, image decoding method and program |
US20150036738A1 (en) | 2013-07-30 | 2015-02-05 | Texas Instruments Incorporated | Method and apparatus for real-time sao parameter estimation |
US9392272B1 (en) | 2014-06-02 | 2016-07-12 | Google Inc. | Video coding using adaptive source variance based partitioning |
US9578324B1 (en) | 2014-06-27 | 2017-02-21 | Google Inc. | Video coding using statistical-based spatially differentiated partitioning |
TWI665239B (en) * | 2014-09-29 | 2019-07-11 | 日商富士軟片股份有限公司 | Composition, sheet manufacturing method, sheet, laminated body and laminated body with element wafer |
US10142626B2 (en) * | 2014-10-31 | 2018-11-27 | Ecole De Technologie Superieure | Method and system for fast mode decision for high efficiency video coding |
CN106331722B (en) | 2015-07-03 | 2019-04-26 | 华为技术有限公司 | Image prediction method and relevant device |
US10437918B1 (en) * | 2015-10-07 | 2019-10-08 | Google Llc | Progressive image rendering using pan and zoom |
US10397600B1 (en) * | 2016-01-29 | 2019-08-27 | Google Llc | Dynamic reference motion vector coding mode |
US10462457B2 (en) | 2016-01-29 | 2019-10-29 | Google Llc | Dynamic reference motion vector coding mode |
GB2547754B (en) | 2016-01-29 | 2020-08-26 | Google Llc | Dynamic reference motion vector coding mode |
US10499078B1 (en) * | 2017-02-07 | 2019-12-03 | Google Llc | Implicit motion compensation filter selection |
FR3066873A1 (en) * | 2017-05-29 | 2018-11-30 | Orange | METHODS AND DEVICES FOR ENCODING AND DECODING A DATA STREAM REPRESENTATIVE OF AT LEAST ONE IMAGE |
WO2019047883A1 (en) * | 2017-09-08 | 2019-03-14 | Fg Innovation Ip Company Limited | Device and method for coding video data based on multiple reference lines |
CN107896330B (en) * | 2017-11-29 | 2019-08-13 | 北京大学深圳研究生院 | It is a kind of in frame and the filtering method of inter-prediction |
US11412220B2 (en) | 2017-12-14 | 2022-08-09 | Interdigital Vc Holdings, Inc. | Texture-based partitioning decisions for video compression |
CN109040753B (en) * | 2018-08-17 | 2020-12-22 | 广州酷狗计算机科技有限公司 | Prediction mode selection method, device and storage medium |
CN109474825B (en) * | 2018-10-18 | 2020-07-10 | 北京大学 | Pulse sequence compression method and system |
CN110070132B (en) * | 2019-04-24 | 2022-06-10 | 华中科技大学无锡研究院 | Correction and compensation method for wind power plant SCADA system missing data repair result |
US11496731B2 (en) | 2020-06-08 | 2022-11-08 | Tencent America LLC | String matching with single color value |
US11582443B1 (en) * | 2021-02-18 | 2023-02-14 | Meta Platforms, Inc. | Architecture to adapt cumulative distribution functions for mode decision in video encoding |
CN114419171A (en) * | 2022-01-17 | 2022-04-29 | 深圳市宏电技术股份有限公司 | Dictionary coding method, image processing method and processing device based on Shannon coding |
US20240080443A1 (en) * | 2022-09-02 | 2024-03-07 | Tencent America LLC | Selecting downsampling filters for chroma from luma prediction |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5576767A (en) | 1993-02-03 | 1996-11-19 | Qualcomm Incorporated | Interframe video encoding and decoding system |
US5818969A (en) | 1995-05-12 | 1998-10-06 | Intel Corporation | Intelligent start for motion estimation search |
US6400763B1 (en) * | 1999-02-18 | 2002-06-04 | Hewlett-Packard Company | Compression system which re-uses prior motion vectors |
US6687303B1 (en) | 1999-03-17 | 2004-02-03 | Renesas Technology Corp. | Motion vector detecting device |
US6697061B1 (en) * | 1999-01-21 | 2004-02-24 | Hewlett-Packard Development Company, L.P. | Image compression featuring selective re-use of prior compression data |
US20070140342A1 (en) | 1999-08-11 | 2007-06-21 | Nokia Corporation | Apparatus, and associated method, for forming a compressed motion vector field utilizing predictive motion coding |
US7330509B2 (en) * | 2003-09-12 | 2008-02-12 | International Business Machines Corporation | Method for video transcoding with adaptive frame rate control |
Family Cites Families (59)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
DE3629472A1 (en) | 1986-08-29 | 1988-03-03 | Licentia Gmbh | METHOD FOR MOTION-COMPENSATED PICTURE-TO-PICTURE PREDICTION CODING |
US5091782A (en) | 1990-04-09 | 1992-02-25 | General Instrument Corporation | Apparatus and method for adaptively compressing successive blocks of digital video |
SE469866B (en) | 1991-04-12 | 1993-09-27 | Dv Sweden Ab | Method for estimating motion content in video signals |
US5461423A (en) | 1992-05-29 | 1995-10-24 | Sony Corporation | Apparatus for generating a motion vector with half-pixel precision for use in compressing a digital motion picture signal |
US5377018A (en) | 1992-06-22 | 1994-12-27 | Media Vision | Video compression and decompression using block selection and subdivision |
KR100213018B1 (en) | 1994-07-30 | 1999-08-02 | 윤종용 | Apparatus for encoding moving picture |
WO1996008114A1 (en) | 1994-09-02 | 1996-03-14 | David Sarnoff Research Center, Inc. | Method and apparatus for global-to-local block motion estimation |
US5706059A (en) | 1994-11-30 | 1998-01-06 | National Semiconductor Corp. | Motion estimation using a hierarchical search |
EP0721287A1 (en) | 1995-01-09 | 1996-07-10 | Daewoo Electronics Co., Ltd | Method and apparatus for encoding a video signal |
JPH08275160A (en) | 1995-03-27 | 1996-10-18 | Internatl Business Mach Corp <Ibm> | Discrete cosine conversion method |
KR0178198B1 (en) | 1995-03-28 | 1999-05-01 | 배순훈 | Apparatus for encoding an image signal |
US5812197A (en) | 1995-05-08 | 1998-09-22 | Thomson Consumer Electronics, Inc. | System using data correlation for predictive encoding of video image data subject to luminance gradients and motion |
US5936673A (en) | 1995-05-26 | 1999-08-10 | Intel Corporation | Temporal tile staggering for block based video compression |
MY121607A (en) | 1995-07-10 | 2006-02-28 | Hyundai Curitel Inc | Grid moving method of object image and apparatus using the same and compaction/motion estimation method using the same and apparatus thereof |
GB9519923D0 (en) | 1995-09-29 | 1995-11-29 | Philips Electronics Nv | Motion estimation for predictive image coding |
JPH09102954A (en) | 1995-10-04 | 1997-04-15 | Matsushita Electric Ind Co Ltd | Method for calculating picture element value of block from one or two predictive blocks |
KR100197368B1 (en) | 1995-12-23 | 1999-06-15 | 전주범 | Apparatus for restoring error of image data |
JP3157101B2 (en) | 1996-03-08 | 2001-04-16 | 沖電気工業株式会社 | Image encoding method and image encoding device |
JP3967405B2 (en) | 1996-10-09 | 2007-08-29 | テキサス インスツルメンツ インコーポレイテツド | Image signal encoding method |
JP3351705B2 (en) * | 1997-04-25 | 2002-12-03 | 日本ビクター株式会社 | Motion compensation coding apparatus, motion compensation coding method, and recording method on recording medium |
DE19730305A1 (en) | 1997-07-15 | 1999-01-21 | Bosch Gmbh Robert | Method for generating an improved image signal in the motion estimation of image sequences, in particular a prediction signal for moving images with motion-compensating prediction |
JP2891253B1 (en) | 1997-12-10 | 1999-05-17 | 日本電気株式会社 | Image compression processor |
EP0940774A3 (en) | 1998-03-05 | 2000-07-05 | Matsushita Electric Industrial Co., Ltd. | Motion vector coding and decoding apparatus and method |
JPH11341496A (en) | 1998-05-28 | 1999-12-10 | Matsushita Electric Ind Co Ltd | Image processing method, image processing unit and data storage medium |
RU2154918C1 (en) * | 1998-08-01 | 2000-08-20 | Самсунг Электроникс Ко., Лтд. | Method and device for loop filtration of image data |
US20020141501A1 (en) | 1998-11-20 | 2002-10-03 | Philips Electronics North America Corporation | System for performing resolution upscaling on frames of digital video |
US6418166B1 (en) | 1998-11-30 | 2002-07-09 | Microsoft Corporation | Motion estimation and block matching pattern |
US6389072B1 (en) | 1998-12-23 | 2002-05-14 | U.S. Philips Corp. | Motion analysis based buffer regulation scheme |
US7085319B2 (en) | 1999-04-17 | 2006-08-01 | Pts Corporation | Segment-based encoding system using segment hierarchies |
EP1120976A4 (en) | 1999-07-29 | 2006-03-29 | Mitsubishi Electric Corp | Moving vector detecting method |
US6522784B1 (en) | 2000-04-11 | 2003-02-18 | International Business Machines Corporation | Enhanced compression of gray-level images |
US6765964B1 (en) * | 2000-12-06 | 2004-07-20 | Realnetworks, Inc. | System and method for intracoding video data |
WO2002063883A1 (en) | 2001-02-06 | 2002-08-15 | Koninklijke Philips Electronics N.V. | Preprocessing method applied to textures of arbitrarily shaped objects |
US7221776B2 (en) | 2001-10-31 | 2007-05-22 | Arcsoft, Inc. | Video stabilizer |
CA2574127A1 (en) | 2002-01-18 | 2003-07-31 | Kabushiki Kaisha Toshiba | Video encoding method and apparatus and video decoding method and apparatus |
US20030161398A1 (en) | 2002-02-21 | 2003-08-28 | Meir Feder | Improving static picture quality in compressed video |
US7596179B2 (en) | 2002-02-27 | 2009-09-29 | Hewlett-Packard Development Company, L.P. | Reducing the resolution of media data |
KR100481732B1 (en) | 2002-04-20 | 2005-04-11 | 전자부품연구원 | Apparatus for encoding of multi view moving picture |
US7170937B2 (en) * | 2002-05-01 | 2007-01-30 | Texas Instruments Incorporated | Complexity-scalable intra-frame prediction technique |
US7236524B2 (en) | 2002-05-28 | 2007-06-26 | Sharp Laboratories Of America, Inc. | Methods and systems for image intra-prediction mode communication |
JP3700976B2 (en) | 2002-08-14 | 2005-09-28 | 株式会社アクセル | Image processing apparatus and image processing method |
CN100342401C (en) * | 2002-12-20 | 2007-10-10 | 皇家飞利浦电子股份有限公司 | Segment-based motion estimation |
US7170934B2 (en) * | 2002-12-20 | 2007-01-30 | Lsi Logic Corporation | Method and/or apparatus for motion estimation using a hierarchical search followed by a computation split for different block sizes |
JP3774201B2 (en) | 2003-03-19 | 2006-05-10 | 株式会社アクセル | Image processing device |
US7327786B2 (en) * | 2003-06-02 | 2008-02-05 | Lsi Logic Corporation | Method for improving rate-distortion performance of a video compression system through parallel coefficient cancellation in the transform |
US8107535B2 (en) | 2003-06-10 | 2012-01-31 | Rensselaer Polytechnic Institute (Rpi) | Method and apparatus for scalable motion vector coding |
US7362809B2 (en) * | 2003-12-10 | 2008-04-22 | Lsi Logic Corporation | Computational reduction in motion estimation based on lower bound of cost function |
KR20050072526A (en) | 2004-01-06 | 2005-07-12 | 삼성전자주식회사 | Prediction encoding apparatus, prediction encoding method, and computer readable recording medium storing a program for performing the method |
US7433497B2 (en) | 2004-01-23 | 2008-10-07 | Hewlett-Packard Development Company, L.P. | Stabilizing a sequence of image frames |
US7599435B2 (en) | 2004-01-30 | 2009-10-06 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Video frame encoding and decoding |
KR20050112445A (en) | 2004-05-25 | 2005-11-30 | 경희대학교 산학협력단 | Prediction encoder/decoder, prediction encoding/decoding method and recording medium storing a program for performing the method |
KR101014667B1 (en) | 2004-05-27 | 2011-02-16 | 삼성전자주식회사 | Video encoding, decoding apparatus and method |
US20050276493A1 (en) | 2004-06-01 | 2005-12-15 | Jun Xin | Selecting macroblock coding modes for video encoding |
US7953152B1 (en) | 2004-06-28 | 2011-05-31 | Google Inc. | Video compression and encoding method |
JP2006031003A (en) | 2004-07-12 | 2006-02-02 | Sharp Corp | Method and system for improving display resolution using sub-pixel sampling and visual error compensation |
US7447337B2 (en) | 2004-10-25 | 2008-11-04 | Hewlett-Packard Development Company, L.P. | Video content understanding through real time video motion analysis |
JP4064973B2 (en) * | 2005-03-23 | 2008-03-19 | 株式会社東芝 | Video encoder and portable wireless terminal device using the same |
JP4000157B2 (en) | 2005-04-14 | 2007-10-31 | 株式会社アクセル | Image compression method and image expansion method |
KR100746022B1 (en) | 2005-06-14 | 2007-08-06 | 삼성전자주식회사 | Method and apparatus for encoding video signal with improved compression efficiency using model switching of sub pixel's motion estimation |
-
2005
- 2005-06-28 US US11/170,629 patent/US7953152B1/en active Active
-
2007
- 2007-10-31 US US11/931,924 patent/US7499492B1/en active Active
-
2008
- 2008-04-14 US US12/102,694 patent/US7606310B1/en active Active
-
2011
- 2011-04-21 US US13/066,668 patent/US8290054B2/en active Active
- 2011-09-30 US US13/200,795 patent/US8290055B2/en active Active
- 2011-09-30 US US13/250,197 patent/US8170112B2/en active Active
-
2012
- 2012-09-14 US US13/617,864 patent/US8665951B2/en active Active
- 2012-09-14 US US13/617,805 patent/US8705625B2/en active Active
- 2012-09-14 US US13/617,769 patent/US8780992B2/en active Active
- 2012-09-14 US US13/617,834 patent/US8634464B2/en active Active
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5576767A (en) | 1993-02-03 | 1996-11-19 | Qualcomm Incorporated | Interframe video encoding and decoding system |
US5818969A (en) | 1995-05-12 | 1998-10-06 | Intel Corporation | Intelligent start for motion estimation search |
US6697061B1 (en) * | 1999-01-21 | 2004-02-24 | Hewlett-Packard Development Company, L.P. | Image compression featuring selective re-use of prior compression data |
US6400763B1 (en) * | 1999-02-18 | 2002-06-04 | Hewlett-Packard Company | Compression system which re-uses prior motion vectors |
US6687303B1 (en) | 1999-03-17 | 2004-02-03 | Renesas Technology Corp. | Motion vector detecting device |
US20070140342A1 (en) | 1999-08-11 | 2007-06-21 | Nokia Corporation | Apparatus, and associated method, for forming a compressed motion vector field utilizing predictive motion coding |
US7330509B2 (en) * | 2003-09-12 | 2008-02-12 | International Business Machines Corporation | Method for video transcoding with adaptive frame rate control |
Cited By (55)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8780992B2 (en) | 2004-06-28 | 2014-07-15 | Google Inc. | Video compression and encoding method |
US8634464B2 (en) | 2004-06-28 | 2014-01-21 | Google, Inc. | Video compression and encoding method |
US8665951B2 (en) | 2004-06-28 | 2014-03-04 | Google Inc. | Video compression and encoding method |
US8705625B2 (en) | 2004-06-28 | 2014-04-22 | Google Inc. | Video compression and encoding method |
US20060204046A1 (en) * | 2005-03-10 | 2006-09-14 | Yu Xia | Method and apparatus for motion estimation in video signal decoding |
US7860166B2 (en) * | 2005-03-10 | 2010-12-28 | Vimicro Corporation | Method and apparatus for motion estimation in video signal decoding |
US20080303954A1 (en) * | 2007-06-04 | 2008-12-11 | Sanyo Electric Co., Ltd. | Signal Processing Apparatus, Image Display Apparatus, And Signal Processing Method |
US9374596B2 (en) | 2008-09-11 | 2016-06-21 | Google Inc. | System and method for video encoding using constructed reference frame |
US9357223B2 (en) | 2008-09-11 | 2016-05-31 | Google Inc. | System and method for decoding using parallel processing |
US9924161B2 (en) | 2008-09-11 | 2018-03-20 | Google Llc | System and method for video coding using adaptive segmentation |
US11375240B2 (en) | 2008-09-11 | 2022-06-28 | Google Llc | Video coding using constructed reference frames |
USRE49727E1 (en) | 2008-09-11 | 2023-11-14 | Google Llc | System and method for decoding using parallel processing |
US8897591B2 (en) | 2008-09-11 | 2014-11-25 | Google Inc. | Method and apparatus for video coding using adaptive loop filter |
US8665952B1 (en) | 2010-09-15 | 2014-03-04 | Google Inc. | Apparatus and method for decoding video encoded using a temporal filter |
US8503528B2 (en) | 2010-09-15 | 2013-08-06 | Google Inc. | System and method for encoding video using temporal filter |
US8611415B1 (en) | 2010-11-15 | 2013-12-17 | Google Inc. | System and method for coding using improved motion estimation |
US9066104B2 (en) | 2011-01-14 | 2015-06-23 | Google Inc. | Spatial block merge mode |
US8780971B1 (en) | 2011-04-07 | 2014-07-15 | Google, Inc. | System and method of encoding using selectable loop filters |
US9154799B2 (en) | 2011-04-07 | 2015-10-06 | Google Inc. | Encoding and decoding motion via image segmentation |
US8780996B2 (en) | 2011-04-07 | 2014-07-15 | Google, Inc. | System and method for encoding and decoding video data |
US8781004B1 (en) | 2011-04-07 | 2014-07-15 | Google Inc. | System and method for encoding video using variable loop filter |
US9392280B1 (en) | 2011-04-07 | 2016-07-12 | Google Inc. | Apparatus and method for using an alternate reference frame to decode a video frame |
US9094689B2 (en) | 2011-07-01 | 2015-07-28 | Google Technology Holdings LLC | Motion vector prediction design simplification |
US8885706B2 (en) | 2011-09-16 | 2014-11-11 | Google Inc. | Apparatus and methodology for a video codec system with noise reduction capability |
CN103959788B (en) * | 2011-09-30 | 2017-05-10 | 奥林奇公司 | Estimation of motion at the level of the decoder by matching of models |
CN103959788A (en) * | 2011-09-30 | 2014-07-30 | 奥林奇公司 | Estimation of motion at the level of the decoder by matching of models |
US9185428B2 (en) | 2011-11-04 | 2015-11-10 | Google Technology Holdings LLC | Motion vector scaling for non-uniform motion vector grid |
US9762931B2 (en) | 2011-12-07 | 2017-09-12 | Google Inc. | Encoding time management in parallel real-time video encoding |
US9531990B1 (en) | 2012-01-21 | 2016-12-27 | Google Inc. | Compound prediction using multiple sources or prediction modes |
US8908767B1 (en) | 2012-02-09 | 2014-12-09 | Google Inc. | Temporal motion vector prediction |
US9131073B1 (en) | 2012-03-02 | 2015-09-08 | Google Inc. | Motion estimation aided noise reduction |
US9813700B1 (en) | 2012-03-09 | 2017-11-07 | Google Inc. | Adaptively encoding a media stream with compound prediction |
US9426459B2 (en) | 2012-04-23 | 2016-08-23 | Google Inc. | Managing multi-reference picture buffers and identifiers to facilitate video data coding |
US9609341B1 (en) | 2012-04-23 | 2017-03-28 | Google Inc. | Video data encoding and decoding using reference picture lists |
US9172970B1 (en) | 2012-05-29 | 2015-10-27 | Google Inc. | Inter frame candidate selection for a video encoder |
US9014266B1 (en) | 2012-06-05 | 2015-04-21 | Google Inc. | Decimated sliding windows for multi-reference prediction in video coding |
US11317101B2 (en) | 2012-06-12 | 2022-04-26 | Google Inc. | Inter frame candidate selection for a video encoder |
US9883190B2 (en) | 2012-06-29 | 2018-01-30 | Google Inc. | Video encoding using variance for selecting an encoding mode |
US9185414B1 (en) | 2012-06-29 | 2015-11-10 | Google Inc. | Video encoding using variance |
US9344729B1 (en) | 2012-07-11 | 2016-05-17 | Google Inc. | Selective prediction signal filtering |
US9503746B2 (en) | 2012-10-08 | 2016-11-22 | Google Inc. | Determine reference motion vectors |
US9628790B1 (en) | 2013-01-03 | 2017-04-18 | Google Inc. | Adaptive composite intra prediction for image and video compression |
US11785226B1 (en) | 2013-01-03 | 2023-10-10 | Google Inc. | Adaptive composite intra prediction for image and video compression |
US9374578B1 (en) | 2013-05-23 | 2016-06-21 | Google Inc. | Video coding using combined inter and intra predictors |
US9756331B1 (en) | 2013-06-17 | 2017-09-05 | Google Inc. | Advance coded reference prediction |
US9313493B1 (en) | 2013-06-27 | 2016-04-12 | Google Inc. | Advanced motion estimation |
US11425395B2 (en) | 2013-08-20 | 2022-08-23 | Google Llc | Encoding and decoding using tiling |
US11722676B2 (en) | 2013-08-20 | 2023-08-08 | Google Llc | Encoding and decoding using tiling |
US10986361B2 (en) | 2013-08-23 | 2021-04-20 | Google Llc | Video coding using reference motion vectors |
US9485515B2 (en) | 2013-08-23 | 2016-11-01 | Google Inc. | Video coding using reference motion vectors |
US10165283B1 (en) | 2013-12-20 | 2018-12-25 | Google Llc | Video coding using compound prediction |
US9609343B1 (en) | 2013-12-20 | 2017-03-28 | Google Inc. | Video coding using compound prediction |
US10102613B2 (en) | 2014-09-25 | 2018-10-16 | Google Llc | Frequency-domain denoising |
US9794574B2 (en) | 2016-01-11 | 2017-10-17 | Google Inc. | Adaptive tile data size coding for video and image compression |
US10542258B2 (en) | 2016-01-25 | 2020-01-21 | Google Llc | Tile copying for video compression |
Also Published As
Publication number | Publication date |
---|---|
US20120020411A1 (en) | 2012-01-26 |
US8705625B2 (en) | 2014-04-22 |
US20130016779A1 (en) | 2013-01-17 |
US8290054B2 (en) | 2012-10-16 |
US7499492B1 (en) | 2009-03-03 |
US8290055B2 (en) | 2012-10-16 |
US20130010867A1 (en) | 2013-01-10 |
US7953152B1 (en) | 2011-05-31 |
US20110274173A1 (en) | 2011-11-10 |
US20130016778A1 (en) | 2013-01-17 |
US20130010868A1 (en) | 2013-01-10 |
US8665951B2 (en) | 2014-03-04 |
US20120027096A1 (en) | 2012-02-02 |
US8780992B2 (en) | 2014-07-15 |
US8634464B2 (en) | 2014-01-21 |
US8170112B2 (en) | 2012-05-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7606310B1 (en) | Video compression and encoding method | |
KR102424188B1 (en) | Intra prediction using multiple reference lines | |
US11089311B2 (en) | Parameterization for fading compensation | |
US8913661B2 (en) | Motion estimation using block matching indexing | |
KR101581100B1 (en) | Method for managing a reference picture list, and apparatus using same | |
KR102613155B1 (en) | Efficient coding of transform coefficients using or suitable for a combination with dependent scalar quantization | |
US20080126278A1 (en) | Parallel processing motion estimation for H.264 video codec | |
US7463684B2 (en) | Fading estimation/compensation | |
EP1359770B1 (en) | Signaling for fading compensation in video encoding | |
US20110206117A1 (en) | Data Compression for Video | |
KR102548881B1 (en) | Methods and apparatus for video transform encoding/decoding | |
JPH0723422A (en) | Video signal band compression equipment of digital vtr | |
KR20190096432A (en) | Intra prediction mode based image processing method and apparatus therefor | |
KR20210018140A (en) | Entropy-coding for Video Encoding and Decoding | |
WO2023236965A1 (en) | Cross component prediction of chroma samples | |
JP2022070176A (en) | Encoding device and program | |
KR20220121747A (en) | A method of encoding/dcoding a video signal and a recoding medium stroing data stream generated by the encoding method | |
KR20220007523A (en) | Method and apparatus for encoding/decoding an image | |
CN115834882A (en) | Intra-frame prediction method and device, electronic equipment and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: ON2 TECHNOLOGIES, LLC, CALIFORNIAFree format text: MERGER;ASSIGNOR:ON2 TECHNOLOGIES, INC.;REEL/FRAME:025378/0190Effective date: 20100219Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ON2 TECHNOLOGIES, LLC;REEL/FRAME:025378/0295Effective date: 20101028 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MURPHY, TIM;REEL/FRAME:027965/0274Effective date: 20120317 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
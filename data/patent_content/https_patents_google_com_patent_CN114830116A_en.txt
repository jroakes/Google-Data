CN114830116A - Maintaining privacy during condition attribution - Google Patents
Maintaining privacy during condition attribution Download PDFInfo
- Publication number
- CN114830116A CN114830116A CN201980103203.4A CN201980103203A CN114830116A CN 114830116 A CN114830116 A CN 114830116A CN 201980103203 A CN201980103203 A CN 201980103203A CN 114830116 A CN114830116 A CN 114830116A
- Authority
- CN
- China
- Prior art keywords
- user device
- condition
- sub
- machine learning
- occurrence
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/04—Inference or reasoning models
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2458—Special types of queries, e.g. statistical queries, fuzzy queries or distributed queries
- G06F16/2477—Temporal data queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/21—Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/2111—Location-sensitive, e.g. geographical location, GPS
Abstract
Predictive modeling using statistical evaluation in combination with joint learning is described to enable creation of occurrence maps while preserving anonymity and enabling fine granularity. The machine learning model (116) is trained to infer when or not there is a condition with a person associated with an individual user device (102). A model (116) is deployed to a user device (102) and returns summarized location data and aggregated statistics about inferences made by the model. The remote system collects the aggregated statistics (120) and constructs a map of occurrences (122-1, 122-2) of hot and cold spots identifying the condition. The occurrence map identifies affected areas with fine granularity down to the neighborhood or street level. The sub-region level information is updated periodically as new inferences and new aggregated statistics are made. Thus, the occurrence map (122-1, 122-2) is current and very detailed.
Description
Background
Some machine learning models are trained to predict health epidemics from signals mined from internet searches, social media, or other online data. While predicting health conditions may be useful, treatment and containment procedures require accurate knowledge of when and where the infection occurs. Unlike prediction, verification of whether and when such a condition occurs requires feedback about the actual condition. Various approaches have been considered to verify health epidemics using real data (e.g., national grade flu data from government agencies) and online data (e.g., search and social media trends). For example, medical service providers aggregate data for multiple people and build predictive models for future risk adjustments. However, the existing real data sources required to build such predictive models are too crude to be used to build models for verification, because the data is too old or inaccurate. Furthermore, online data is always indexed (and therefore biased) to a certain locale, making it less suitable for isolating and containing epidemic situations originating from different locales. Thus, current techniques often rely on inaccurate, non-recent, or biased information, which can result in the generation of incomplete incidence maps. The lack of accurate information limits the impact of vaccination strategies and the effectiveness of interventions.
To address the limitations in the current art, more timely, on-device, or unbiased data may help provide superior incidence maps (incidence maps). While better data may help provide superior incidence mapping, better data is often not available due to privacy concerns.
Disclosure of Invention
This disclosure describes systems and techniques for maintaining privacy during condition attribution of conditions, such as the occurrence of an infectious disease. The machine learning model is trained (e.g., using self and/or semi-supervised learning) based on noisy labeled data with multiple sensors or device local data streams. For a user who opts in, the trained model may infer whether a person has a particular condition based on signals extracted from the input data by the model. The input signals are partially independent (e.g., location and mobility based daily tasks, audio based signals, text based signals) and thus can be statistically fused together to create learning and inference over any individually modeled signal. It is inferred whether the indication signal indicates that a person (e.g., a user) associated with the user device has a particular condition. These models execute locally on the user device and generate inferences over multiple time intervals. Each model outputs information about the inferences to a remote system that generates an occurrence map and/or otherwise applies the information. However, rather than outputting information indicative of the actual inferences made by the model, the user device protects user privacy. The user device aggregates statistics calculated with respect to the actual inferences and shares the aggregated statistics with the remote system. For example, the statistical data indicates the frequency with which conditions are inferred in particular units of time and within particular units of geographic areas. The user equipment injects "policy noise" into the statistics prior to transmission to the remote system as a way to further promote privacy; the noise prevents backward tracing of the user equipment. These and other techniques may be used to pre-process the aggregated statistics and delete any personally identifiable information prior to transmission to the remote system.
The remote system builds a map of the occurrence of the geographic area based on aggregated statistics collected from the plurality of user devices and the model. The remote system divides the occurrence map into small sub-areas. For each sub-region, the condition may be inferred from actual statistics collected for that sub-region or from predictions made from actual statistics collected for neighboring sub-regions. The remote system generates each occurrence map from sub-area or very low level (e.g., neighborhood or street view) data, so the occurrence map captures the occurrence of a particular condition up to the sub-area or low level. The remote system will periodically update the occurrence map as additional aggregated statistics come in from other devices in response to inferences made by the local model. Thus, the incidence map is current even though some of the data of the training model is old. The occurrence map has fine granularity and detailed information across multiple sub-regions and can maintain the current state rather than hooking up with delayed data reporting periods that would otherwise render it impractical to formulate a treatment and isolation plan for the condition. By performing continuous joint learning on a single device, more timely, accurate, and unbiased data can be used to verify whether sub-regions are affected by a condition, thereby generating an accurate incidence map for enhancing the impact of vaccination strategies and the effectiveness of other interventions and treatments in the affected geographic area. There is no longer a need to rely on existing sources of real and online data. Through joint learning in a privacy-first environment, a high-level and anonymous incidence map can be created that summarizes sub-areas affected by conditions. The timeliness and better resolution of inferences and maps may enable more robust prognostics, predictions, and interventions for disease.
Throughout this disclosure, examples are described in which a computing system (e.g., user device, remote system) analyzes information (e.g., received signals, online data, aggregated statistics) associated with a user or user device. Information associated with a user is used after the computing system receives explicit permission from the user to collect, store, or analyze the information. For example, in the case discussed below where the remote system analyzes aggregated statistical output from user devices in a particular geographic location, the user will have an opportunity to control whether programs or features of the remote system or user devices can collect and utilize the aggregated statistical data to maintain privacy during machine learning (e.g., joint learning of multiple devices) and condition attribution on the multi-mode device. Thus, the individual user controls what the computing system may or may not do with the aggregated statistics or other information related to the user. The aggregated statistics or other information associated with the user is pre-processed in one or more ways to delete personally identifiable information prior to transmission, storage, or other use. For example, the user device inserts noise data into the aggregated statistics before the user device shares the aggregated statistics with the remote system. Preprocessing the data in this manner ensures that the aggregated statistics cannot be traced back to the user, and in the process removes any personally identifiable information that may be inferred from the aggregated statistics. Thus, the user may control whether information is collected about the user, and if so, how the computing system may use the information.
In some aspects, a computer-implemented method is described for maintaining privacy during condition attribution of conditions (e.g., malaria, chikungunya fever, Zika, dengue fever, Ebola, other infectious diseases) in a geographic region. The method includes training, by the remote system, a machine learning model to infer whether a person associated with the user device has the condition based on signals received by the user device in the geographic area. The method continues with deploying, by the remote system, a copy of the machine learning model for local execution at each of a set of user devices, and collecting, by the remote system and from the set of user devices, aggregated statistics of inferences made by the copy of the machine learning model. The method also includes determining, by the remote system, an occurrence rate of the condition in a particular sub-region of the geographic region based on the aggregated statistical data. The method finally includes outputting, by the remote system, an occurrence map for the geographic area based on the occurrence of the condition in the particular sub-area, the occurrence map indicating different occurrences among the plurality of sub-areas of the geographic area.
In other aspects, another computer-implemented method is described. The other method includes receiving, by the user device and from the remote system, a copy of a machine learning model, the machine learning model being trained to infer whether a person associated with the user device is in the condition based on signals received by the user device while located in a particular sub-region of the geographic area. The method further includes inputting, to the machine learning model, one or more signals received by the user device at two or more different time intervals, and determining, in response to the inputting of the one or more signals, a plurality of inferences by the machine learning model whether the person associated with the user device has the condition. The other method continues with the user device generating aggregated statistics about whether people in the particular sub-region have the condition based on a plurality of inferences made by the machine learning model. The other method is finally outputting an indication of the aggregated statistics to a remote system that determines an occurrence map of the geographic area based on the aggregated statistics, the occurrence map indicating different occurrences among the plurality of sub-areas of the geographic area.
This document also describes a computer-readable medium having instructions for performing the above-described method. Additional methods, as well as systems and apparatus for performing the above summary, and such additional methods are set forth herein.
This summary is provided to introduce simplified concepts for maintaining privacy during condition attribution, which are further described below in the detailed description and the accompanying drawings. This summary is not intended to identify essential features of the claimed subject matter, nor is it intended for use in determining the scope of the claimed subject matter.
Drawings
Details of one or more aspects of maintaining privacy attributes for a condition are described in this document with reference to the following figures. The same numbers are used throughout the drawings to reference like features and components:
FIG. 1 illustrates an example environment in which techniques for maintaining privacy during machine learning and status attribution on a multi-mode device may be implemented.
FIG. 2 illustrates an example of a user device that outputs aggregated statistics of inferences made by the user device for maintaining privacy during machine learning on a multi-mode device.
FIG. 3 illustrates an example of a remote system that generates an occurrence map based on aggregated statistics output from a set of user devices for maintaining privacy during machine learning on a multi-mode device.
FIG. 4 illustrates an example method performed by a user device for maintaining privacy during machine learning on a multi-mode device.
FIG. 5 illustrates an example method performed by a remote system for maintaining privacy during machine learning on a multi-mode device.
FIG. 6 illustrates an example method performed by a computing system for maintaining privacy during machine learning on a multi-mode device.
7-1 through 7-3 illustrate example progression of an incidence map as a computing system collects aggregate statistics over time.
8-1 through 8-4 illustrate examples of situations that include an occurrence map generated based on a computing system that maintains privacy during machine learning on a multi-mode device.
Detailed Description
This disclosure describes techniques and systems for maintaining privacy during condition attribution. By jointly modeling signal collection in a privacy-first manner, the described techniques and systems enable accurate and personalized risk prediction for a variety of different conditions without having personally identifiable information collected locally and with informed consent leaving the individual's user device. The described systems and techniques involve predictive modeling and statistical evaluation in combination with joint (on-device) learning to create advanced and anonymous incidence maps with fine granularity and detail.
When predictive modeling is involved, a machine learning model is trained to predict conditions based on inferences made from real data and indexed online data compiled over time. There is evidence that existing machine learning models can practically predict the outbreak of a particular disease in a particular country/region using these existing data sources. On the other hand, verifying an outbreak of an infectious disease or other diseases may present different problems. The effectiveness of vaccination strategies and interventional therapies depends on the time and location of the occurrence of the identified condition, which requires a different data set than traditional real data and indexed online data suitable for prediction.
To verify the condition, the existing real data is typically too coarse (e.g., the data represents country-level granularity) and is typically too old (e.g., months or years have been collected and reported). Authentication requires that the most recent data be collected at neighborhood level granularity (e.g., one square meter, one hundred square meters) rather than country level granularity (e.g., one square kilometer, ten square kilometers).
Existing online data may be more up-to-date than the real data, but online data is always indexed (and therefore biased) to a particular geographic area (typically the user's home area). The search and social media information that is always indexed may be irrelevant to making inferences about the condition, particularly when the indexed search and social media information is generated by a user device receiving signals in different areas. For example, for diseases such as dengue fever, transmission often occurs during the day due to the bite of dengue-carrying mosquitoes. Mosquito transmission may occur when a patient is not in their residence, for example, when online data is generated from the person's search query or social media interaction (such as when the patient is working or traveling outside of their residence). Differences between the index of online data and the user's actual location (the cause of the online data) may negatively impact the accuracy of the risk map and the effectiveness of the disease containment plan that relies on such data. To overcome the deficiencies of current machine learning models and datasets, techniques and systems for joint machine learning and condition attribution by multiple devices are described.
The described systems and techniques use statistical evaluation in conjunction with joint (on-device) learning to enhance predictive modeling techniques. This predictive modeling can create an incidence map with fine granularity and anonymity. The machine learning model is trained to infer when a person associated with a personal user device has a condition or disease. These models are deployed to the user device, from which they return summarized location data and aggregated statistics regarding inferences about conditions or diseases. The remote system collects the summary statistics and constructs an occurrence map that identifies hot and cold spots for a particular condition or disease. Statistical inferences are made for sub-regions lacking aggregated statistical data. The occurrence map indicates the occurrence with fine granularity down to the neighborhood or street level. Information at the sub-region level is updated periodically as new inferences are generated and new aggregated statistics are collected. This can therefore automatically create an incidence map with fine granularity and anonymity.
The occurrence map may be output to application subscribers who use the map as a tool to combat current epidemics. The remote system automatically adjusts the incidence map to indicate changes in the hot and cold spots of the infected person without any information about the identity of the user or device. Rather than explicitly modeling the health of the entire geographic area, the remote system models the incidence in a given sub-area and time interval. This has several advantages, including greater privacy assurance (because stronger summaries are made early in the pipeline (e.g., before transmission to a remote system)), greater coverage (because there are fewer obstacles through the use of adaptive summaries), and direct learning rather than learning from stale real-world data (e.g., independent hospital statistics, public health studies).
FIG. 1 illustrates an example environment 100 in which techniques for maintaining privacy during machine learning and condition attribution on a multi-mode device may be implemented. The example environment 100 includes a user device group 102, the user device group 102 including user devices 102-1 through 102-2. The group of user devices 102 communicates with the remote system 104 over a network 110. The network 110 enables the remote system 104 to exchange data with the group of user devices 102. Remote system 104 may communicate with containment system 106 and therapy system 108 over network 110 or over other communication channels.
User device 102 (also sometimes referred to as a computing device or user equipment) may be any type of mobile or non-mobile computing device capable of receiving a signal indicative of a particular condition. As a mobile computing device, the user device 102 may be a mobile phone, laptop, wearable device (e.g., watch, glasses, headset, clothing), tablet device, automobile/in-vehicle device, portable gaming device, electronic reader device, or remote control device, or other mobile computing device capable of receiving online data or signals. As a non-mobile computing device, the user device 102 may be a refrigerator, doorbell, thermostat, security system or console, desktop computer, television device, display device, entertainment set-top box device, streaming media device, desktop accessory, non-portable gaming device, business conferencing device, or other non-mobile computing device capable of receiving signals that help infer whether a user has a condition.
The remote system 104 provides an incidence map service to application subscribers executing at the containment system 106 and the therapy system 108. The map module 114 generates occurrence maps 122-1 and 122-2 (collectively, "occurrence maps 122") and maps of other various conditions. The term "map" does not imply that the incidence data is presented in a particular graphical format. In some embodiments according to the present disclosure, the occurrence map 122 may be a data structure (e.g., a matrix, an object, or a file) that stores the occurrence of each of a plurality of sub-regions of a geographic area. However, in other embodiments, the occurrence map 122 may be a graphical representation of a geographic area, displaying occurrences in multiple sub-areas. The map module 114 generates an occurrence map by 1) compiling the aggregated statistics collected for each sub-region of the geographic area and 2) inferring statistics for each sub-region where the aggregated statistics collected are insufficient for statistical prediction. The aggregated statistics indicate the presence or absence of a condition or ambiguity. The remote system 104 may operate in any condition, and some examples include infectious diseases such as influenza, malaria, chikungunya fever, Zika virus, Ebola virus, or dengue. It should be understood that these are purely non-limiting examples, and that the condition may be any infectious disease or other health risk. As another example, the condition may be related to exposure to environmental factors, such as chemicals or radiation sources. Although illustrated as a single computing system, remote system 104 may include multiple computing systems.
To collect the statistical data needed to generate the occurrence map 122, the remote system 104 deploys Machine Learning (ML) models 116-1 through 116-2 (collectively, "ML models 116") to execute at the set of user devices 102. Prior to deployment, each ML model 116 is trained by training module 112. Training module 112 programs each ML model 116 to make inferences about whether the user of the user device is in a condition based on the signals received by the user device. ML model 116 may include any suitable model that enables inferences to be made based on signals received by a user device. The ML model 116 may include a classification model and/or a regression model. Such models are trained on remote systems and then deployed to user equipment for local execution. Local execution does not mean that the ML model itself is executable; instead, the M L model may be input to executable code that infers by applying signals received at the device to the ML model.
Deploying a copy of the ML model for execution at the user device may have one or both of the following technical effects. First, the privacy of the device user may be protected by making inferences based on signals collected on the user device and then anonymizing the inferences before sending the inferences to the remote system. In this way, signals collected at the user device are not transmitted directly to the remote system, thereby protecting sensitive information contained in these signals. Second, executing the ML model on the user device may allow inferences to be made based on signals that are not available to the remote system. For example, many disease hotspots have poor connectivity to the internet, so the user may not be able to perform any Web browsing from which inferences can be made. However, the user device may have access to other signals (e.g., GPS coordinates of the user, health-related data from the wearable device, application usage data) that can be used to make inferences when the user is not connected to the internet.
Rather than sharing sensitive information generated by ML model 116 at risk over network 110, user device 102 uses anonymizers 118-1 and 118-2 (collectively, "anonymizers 118") to summarize information about any inferences made by ML model 116. Aggregated statistics 120-1 and 120-2 (collectively, "statistics 120") represent summarized location data and aggregated statistics for inferences made about ML model 116.
For example, anonymizer 118-1 instructs ML model 116-1 to perform several inferences across different locations and times. ML model 116-1 reports whether the user may have a condition or no condition or whether there are certain conditions several times and locations. Anonymizer 118-1 summarizes the information from ML model 116-1, so that the output to remote system 104 defines only the rate at which positive or negative inferences are made over a period of time. Anonymizer 118-1 may delete the location from the output so that remote system 104 may identify a particular sub-area (e.g., neighborhood) rather than a particular device or user location (e.g., street address, coordinate location). Anonymizer 118 outputs summarized statistics 120 to be collected by mapping module 114 of remote system 104.
The map module 114 compiles the aggregated statistics 120 and infers statistics of other unreported models and areas. The map module 114 builds a high-level incidence map that identifies hot and cold spots of a particular disease with a fine granularity. The map module 114 automatically adjusts the occurrence map 122 to indicate changes in the hot and cold spots of the infected person without providing someone with any way to obtain the user or user device identity. For example, the map module 114 may output a map 122-1 showing the incidence of malaria in brazil and a map 122-2 showing the incidence of malaria or other arbovirus infection in neighboring countries or different regions in brazil. While it is possible to display high levels of occurrence, the occurrence map is very detailed, based on inferred aggregated statistics derived from the latest data captured at the user device level (e.g., community or street view). Although detailed, the map 122 excludes personally identifiable information about individuals that may be affected or their locations, as the anonymizer 118 ensures that such information is stripped from the aggregated statistics 120.
The map module 114 may execute its own machine learning model or other type of model to determine the incidence. For example, the map module 114 trains and models the occurrence of a condition of a sub-region based on the aggregated statistics 120 collected for different sub-regions. In other words, the map module 114 models a second occurrence of a condition of a second sub-area (where neither user device 102 is located) of the plurality of sub-areas based on the aggregated statistics 120.
Thus, environment 100 uses statistical evaluation by map generator 104 in combination with joint (on-device) learning performed by individual ML models 106 to augment existing predictive modeling techniques. The example environment 100 estimates the incidence of a condition (e.g., a disease) in a geographic area over a period of time using online data on devices collected in a privacy-first manner. The example environment 100 estimates the occurrence of a condition in a global manner by aggregating statistics 120, rather than merely accumulating inferences made locally. The sub-region level information is updated periodically as new inferences and new aggregated statistics are made by ML model 106. The remote system 104 outputs an occurrence map 122 to application subscribers executing at the systems 106 and 108 to use the map as a tool to address the current epidemic.
FIG. 2 illustrates an example of a user device 200 that the user device 200 outputs aggregated statistics of inferences made by the user device for maintaining privacy during machine learning on a multi-mode device. User device 200 is an example of user device 102 set forth in fig. 1. Fig. 2 illustrates user device 102 as various example devices, including a smartphone 102-1, a tablet 102-2, a laptop 102-3, a desktop computer 102-4, a computing watch 102-5, computing glasses 102-6, a gaming system or controller 102-7, a smart speaker system 102-8, and an appliance 102-9. User device 200 may also include other devices such as televisions, entertainment systems, audio systems, automobiles, drones, touch pads, graphics tablets, netbooks, e-readers, home security systems, doorbells, refrigerators, and other devices with multiple cameras and face authentication systems.
The computer processor 202 and the computer-readable media 204, which include memory media and storage media, are the primary processing complexes of the user device 102. ML model 106, anonymizer 118, and other applications (not shown) may be implemented as computer-readable instructions on computer-readable medium 204, which may be executed by computer processor 202 to provide the functionality described herein.
The computer processor 202 may include any combination of one or more controllers, microcontrollers, processors, microprocessors, hardware processors, hardware processing units, digital signal processors, graphics processing units, or the like. The computer processor 202 may be an integrated processor and memory subsystem (e.g., implemented as a "system on a chip") that processes computer-executable instructions to control the operation of the user device 102.
The computer-readable medium 204 is configured as persistent and non-persistent storage of executable instructions (e.g., firmware, software, applications, modules, programs, functions) and data (e.g., user data, operational data, online data) to support execution of the executable instructions. Examples of computer-readable media 204 include volatile and non-volatile memory, fixed and removable media devices, and any suitable memory device or electronic data storage that maintains executable instructions and supporting data. Computer-readable media 204 may include Random Access Memory (RAM), Read Only Memory (ROM), flash memory, and other types of storage memory in various storage device configurations. Computer-readable media 204 does not include propagated signals. The computer-readable medium 204 may be a Solid State Drive (SSD) or a Hard Disk Drive (HDD).
The sensor component 206 typically obtains contextual information indicative of the operating conditions (virtual or physical) of the user device 102 or the environment surrounding the user device 102. The user device 102 monitors the operating conditions based in part on the sensor data generated by the sensor component 206. Examples of sensor components 206 include various types of cameras (e.g., optical, infrared), radar sensors, inertial measurement units, motion sensors, temperature sensors, position sensors, proximity sensors, light sensors, infrared sensors, humidity sensors, pressure sensors, and so forth.
Communications and I/O components 208 provide connectivity to user device 102 and other devices and peripherals. The communication and I/O components 208 include data network interfaces that provide a connection and/or communication links between a device and other data networks (e.g., network 110), devices, or remote systems (e.g., servers). Communication and I/O components 208 couple user device 102 to a variety of different types of components, peripherals, or accessory devices. A data input port of the communications and I/O component 208 receives data, which includes image data, user input, communications data, audio data, video data, and the like. Communications and I/O component 208 enables wired or wireless communication of device data between user device 102 and other devices, computing systems, and networks, such as remote system 104 and network 110. The transceiver component 208 of communication and I/O enables cellular telephone communications and other types of network data communications.
The user interface device 214 is an input and output component for obtaining user input and providing a user interface, such as a graphical user interface including an occurrence map generated from the aggregated statistics 120. As an output component, the user interface device 214 may be a display, a speaker or audio system, a haptic feedback system, or other system for outputting information to a user. When configured as an input component, the user interface device 214 may include a touch screen, camera, microphone, physical buttons or switches, radar input system, or other system for receiving input from a user. Other examples of user interface devices 214 include a mouse, keyboard, fingerprint sensor, optical, infrared, pressure sensing, presence sensing, or radar-based gesture detection system. User interface device 214 generally includes a presence-sensitive input component operatively coupled to (or integrated with) a display.
When configured as a presence-sensitive screen, user interface device 214 detects when a user provides a two-dimensional or three-dimensional gesture at or near the location of the presence-sensitive feature when the user interface is displayed. In response to the gesture, the user interface device 214 may output information to other components of the user device 102 to indicate the relative location (e.g., X, Y, Z coordinates) of the gesture and enable the other components to resolve the gesture. The user interface device 214 may output data based on information generated by the output component or the input component, for example, the ML model 116 may use such information to make inferences 212.
The user device 200 generates the aggregated statistics 120 based on inferences 212 made from the signals obtained from the components 206 through 210. User equipment 200 includes multiple ML models 116 to check for different conditions or as redundant checks for the same condition. For example, ML model 116-1 is trained to infer malaria based on online data (e.g., social media posts, messages) and other signals received by user device 200. Similarly, ML model 116-2 is trained to infer malaria or some disparate arbovirus based on the same or different online data and other signals received by user device 200.
ML model 116 is trained (e.g., using semi-supervised learning) based on noisy labeled online data to make inferences about which signals from the training data are indicative of particular conditions. ML model 116 performs joint learning, continuously executing locally on user device 200, to accurately infer over time when a user of user device 200 is in a condition, when the user is out of condition, or when a conditioned user is ambiguous.
ML model 116 relies on sensor-derived context information to more accurately determine inferences 212. For example, searching for a medical term in a doctor's office may be a poor signal that the person searching has a disease associated with the medical term, as there may be countless reasons to search for the term in the doctor's office. However, for the user, doing the same search at home or in bed during the user's normal working hours is a better signal that the person being searched for has the disease.
The output of ML model 116 is inference 212. Inference 212 represents a single or multiple inferences made by ML model 116 over one or more iterations (e.g., time and location). In each inference generation pipeline, an inference 212 passes through one of anonymizers 118 to remove any personally identifiable information from aggregated statistics 120 generated from inferences 112. For example, rather than associating the statistical data 120-1 with the location or location history of the user device 200 when making the inference 212-1, the statistical data 120-1 is associated with a sub-area or summarized location that contains the particular location or location history at which the inference 212-1 was made.
To further ensure anonymity and prevent model inferences from being traced back to individuals, anonymizer 118 introduces strategic noise into statistics 120. For example, by randomly introducing negative or positive statistics with a zero mean into the aggregated statistics 120, the remote system 104 can make inferences directly regarding statistics collected as a whole rather than regarding a particular individual. These and security summaries or other techniques may be used to remove all personally identifiable information from the statistics 120 of the remote system 104, or another device may construct an occurrence map from the data. With continued joint learning on a single device, such as user device 200, more timely, accurate and unbiased data can be used to verify whether a user has a disease, which can result in an accurate risk map, thereby enhancing the impact of vaccination strategies and the effectiveness of intervention in the affected area.
FIG. 3 illustrates an example of a remote system 300 that generates an occurrence map based on aggregated statistics output from a set of user devices for maintaining privacy during machine learning on a multi-mode device 300. Remote system 300 is an example of remote system 104 set forth in fig. 1. The remote system may be any kind of example device, including a consumer device, as well as a server, blade, mainframe, or any other computing system.
The remote system 300 is architected similar to the user device 200, including a computer processor 302, computer readable media 304, and communications and I/O devices 306. Unlike computer-readable media 204, however, computer-readable media 304 includes training module 112, map module 114, user device interface 308, and application interface 310.
The user device interface 308 outputs information that guides the joint machine learning performed by the user device 102 and collects information generated in response. User device interface 308 enables remote system 300 to output a copy of ML model 316 to user device 102. The user device interface 308 also enables the aggregated statistics 120 to be input from the user device 102. The user device interface 308 serves as a communication and I/O component 208 to send and receive data over, for example, the network 110.
The application interface 310 outputs the occurrence map 122 to application subscribers executing at other remote systems or devices. For example, the containment system 106 executes a real-time containment application to utilize obstacles or roadblocks to prevent the spread of the condition. The real-time containment application obtains real-time updates of its occurrence map 122 from the application interface 310. As another example, the therapy system 108 executes a therapy application that displays the progress of the therapy and the current outbreak condition in a seemingly real-time manner. The current condition and the effect of the treatment can be identified within minutes rather than days, months or years.
Each signal gives a different and somewhat complementary view of the health status of the user. Combining noisy labels gives a better state estimate of the health state than the signal alone. Some signals lead to ambiguous inferences-indicating that the disease is one of several possible conditions. For example, searching for influenza vaccines can lead to ambiguous inferences because reading information about the vaccine does not directly indicate an acute influenza infection. Training module 112 directs ML model 116 to make strong positive, negative, and ambiguous inferences. Finally, each ML model 116 outputs an indication of whether a person associated with the user device has a condition (e.g., a disease) at a particular time.
Topic scoring or other techniques may be used to avoid false positive or false negative labeling of training data when a signal may result in two different diseases or conditions. For example, the "flu symptom" page may be labeled as helpful in inferring flu, but the "flu vaccine" page may not. The topic score of the page that more closely matches the topic score of the "flu vaccine" page rather than the "flu symptom" page indicates that the document is primarily about "flu vaccine" rather than "flu symptom".
The quadrature signal enables noisy tagged queries. Examples of such signals include location history or daily routine schedules. Location history or daily routine schedules can be generated by the sensor component 206 collecting sensor data. If a person stays at home while searching for information about a flu, the person may have one of many conditions. If the person's regular schedule indicates that they are often elsewhere, the person is more likely to have one of the conditions. Using such a process, training module 112 trains ML model 116 to infer a person's condition.
As an example of how training module 112 trains ML model 116-1, consider that as a first iteration, training module 112 treats a signal (e.g., a query) as being positive for a condition ("sick") when the signal is received at a particular location. It is not intended that the query or signal be associated with a particular location by an index, but rather that the signal originate from or be received at a particular location. In subsequent iterations, available queries and other inferred locations in a given sub-region around the location are assigned a noisy label indicating a condition or no condition. ML model 116-1 is trained on noisy labeled data by training module 112. ML model 116-1 runs in an inference mode on a set of retained training data (e.g., queries), and ML model 116-1 is adjusted until the inferences from ML model 116-1 are comparable to "gold" or expected tags.
When trained, ML model 116-1 generates additional training data suitable for both unsupervised and semi-supervised learning. Each query or "signal" represents a high-dimensional space of features extracted from a broad context of the signal. ML model 116-1 may reuse these signals to improve inferences about future signals. For example, "broad context" includes documents that are clicked on when displaying search results for a query, attributes of those documents (e.g., whether they are related to a flu), attributes of the click itself (e.g., how long it takes the user to read the page), the status of the user (regardless of or depending on what is happening in the search (e.g., whether the user is doing physical activities while following an expected schedule, they are typically charging their cell phone at home while at work or in a gym).
the model 116 may be further refined by guiding for affirmation. After ML model 116 tags data in the inferred pattern, positive but potentially incorrect queries tagged by ML model 116 are then fed back to retrain model 116 with negative tags, so similar errors are unlikely to occur in the next round. Similarly, guidance can be on a location-derived tag or a union of two tags.
The map module 114 collects statistics 120 summarized by the devices 102 and outputs an occurrence map 122 via the application interface 310. The map module 114 makes an inference using the aggregated output of the ML model 116.
Evidence fusion is performed on the current probability by blending the global incidence with the local estimates. Assuming independence, this is usually incorrect, but can make the problem traceable. Aggregation helps to reduce the impact of this assumption. And calculating a joint estimation value of Pr [ D is ill at t | local data, global data ]. For simplicity, let S denote the event that D is ill at time t, L is local data, and G is global data. For example, equation 2 is Pr [ S | L, G ], equal to:
Pr[S|L]Pr[S|G]
[Pr[S/L]Pr[S/G]+(1-Pr[S/L])(1-Pr[S/G])
equation 2
Equation 2 represents the ratio of the probability mass that both sources of evidence agree that D is ill at time t to the total probability mass that they agree. Assuming a distribution over values, a beta transform, etc., more complex fusion models are possible, including weighting by the confidence of each evidence and adding sequential evidence (e.g., equation 2 ignores Pr [ D is ill at time t-1 ]).
Since hatching is two time units, it is also necessary to consider the case where the user is infected at time 2 at B and only indicates a disease signal at time 3 (while having visited a different location). At this point, D may locally optimize for the probability of these updates (assuming for the moment that they are the ground truth, following the expectation maximization approach, and extracting the appropriate local log data with the appropriate time delay). Remote system 104 may update training module 112 to share periodic updates to other ML models 116, and securely share gradient updates with other devices 102 to improve the personal-level model 116. The aggregated predictions from the shared model 116-1 are continuously checked against the (historical and present) validity data at the remote system 104, and if the new model exceeds the quality of the previous model, the remote system 104 deploys a new version of the model 116. Temporarily, the device continues to make inferences using previous versions of the model 116 in parallel with the new version of the model 116 until the new version is verified.
The verification data may take a variety of forms: individual population-level estimates (e.g., disease containment center estimates, if available), customer survey data (e.g., jackson's symptom checker), and aggregated laboratory results data. The above process is repeatable to continually train ML model 116 using the new updated values for each device D and eventually converge to a local optimum.
For many situations, no user-level probability (estimation of infection rate) is required. For example, to spray mosquitoes or utilize flu vaccines, the remote system 104 need only train the model 116 to identify which geographic areas should be treated preferentially rather than attempting to identify the most infected locations. In these cases, end-to-end gradient optimization can be used to simplify the problem by collecting the signals in a given geographic time unit and learning a uniform mapping from these signals to the incidence. The advantage of this approach is that the decision at the individual level is completely implicit and the signal is directly optimized for a true estimate at the crowd level. This eliminates several noise sources in the system.
FIG. 4 illustrates an example method performed by a remote system for maintaining privacy during machine learning on a multi-mode device. Method 400 may include more or fewer steps than those shown in fig. 4, and may be performed in a different order. The method 400 is described below in the context of the remote system 104.
At 402, the remote system 104 obtains an indication of consent from a user of each user device in the set of user devices to collect aggregated statistical data for inferences made by the machine learning model. For example, the user device 102 requires the user to provide input confirming that the remote system 104 is authorized to collect inferred statistics made by local signals if the statistics and other information about the user is protected, processed, anonymous, or otherwise unable to be traced back to the user or the user device 102.
At 404, the remote system 104 trains the machine learning model 116 to infer whether the person associated with the user device 102 has the condition based on the signals received by the user device 102 in the geographic area. For example, training module 112 trains ML model 116 using real data and other data sources to make inferences about different conditions. Remote system 104 may run ML model 116 in an inference mode based on real data of a geographic area and signals received by test user devices in the geographic area to initially train ML model 116 prior to deploying ML model 116 to user devices 102.
At 406, the remote system deploys a copy or a new copy of the ML model 116 for local execution at each of the user devices 102 of the group. For example, remote system 104 sends ML model 116 to each user device 102 via network 110.
At 408, the remote system 104 collects aggregated statistics from the set of user devices for inferences made by the copy of the machine learning model. For example, the map module 114 receives a first portion of the aggregated statistics 120-1 from the user device 102-1. From the first portion 120-1 of the aggregated statistics, the map module 114 infers a first sub-region of the plurality of sub-regions of the geographic area. The map module 114 summarizes the location associated with the aggregated statistics 120-1 as a unit or sub-area of area surrounding the location, so any inference made from the statistics 120-1 cannot be traced back to the user.
At 410, the remote system 104 determines the occurrence of the condition in a particular sub-region of the geographic region based on the aggregated statistics. The map module 114 attributes the first occurrence of the condition to the first sub-region based at least in part on the aggregated statistics 120-1 and generates an occurrence map 122 of the geographic region by indicating the first occurrence of the condition throughout the first sub-region. Next, at 408, the map module 114 receives a second portion of the aggregated statistics 120-2 from the second user device 102-2 and repeats the above process, but generates a second occurrence of the second sub-region for the second sub-region.
In some cases, the inference is made when the user device 102 is in a location that is different from the location where the user of the device 102 resides or executes their normal schedule. As such, the aggregated statistics 120 collected from the user device 102 in one sub-region may be more useful in determining the occurrence of conditions in a different sub-region than the sub-region from which the statistics 120 were collected. Thus, the map module 114 may attribute the occurrence to the second sub-region based on the aggregated statistics collected from the first sub-region. The occurrence of the second sub-region may be similar to the occurrence of the first sub-region. However, the occurrence of the second sub-region may be completely different, for example, if the occurrence of the second sub-region is based on the occurrence of the first sub-region and the occurrence of the other sub-regions.
At 412, the remote system 104 outputs an occurrence map for the geographic area indicating different occurrences between sub-areas of the geographic area based on the occurrence of the condition in a particular sub-area. For example, the map module 114 outputs maps 122-1 and 122-2.
At 414, the remote system 104 outputs the incidence map to an application executing at the remote subscriber device. For example, the occurrence map 122 is sent to the containment system 106 and the therapy system 108, and local applications from each of them use the occurrence map to perform containment or therapy operations.
FIG. 5 illustrates an example method performed by a user device for maintaining privacy during machine learning on a multi-mode device. The method 500 may include more or fewer steps than those shown in fig. 5, and may be performed in a different order. Method 500 is described below in the context of user device 200.
At 502, user device 200 obtains an indication of consent from a user of each user device in a set of user devices to collect aggregated statistics of inferences made by a machine learning model trained to infer whether a person associated with the user device has the condition based on signals received by the user device while in a particular sub-area of a geographic area. In other words, user device 200 receives user input from a user who agrees to collect statistics of inferences made by local execution of the machine learning model.
At 504, the user device 200 receives a copy of a machine learning model from the remote system, the machine learning model being trained to infer whether a person associated with the user device is in the condition based on signals received by the user device while in a particular sub-region of the geographic region. For example, user device 200 receives a copy of ML model 116 (ML model 116-1) from remote system 104 via network 110.
At 506, user device 200 executes an application that launches the machine learning model. For example, ML model 116-1 may be executed as part of an operating platform (OS) of user device 200 or as part of an application such as a travel application, an assistant application, a health application, or other software components accessible from user device 200.
At 508, user device 200 inputs one or more of the signals received by user device 200 at two or more different time intervals to ML model 116-1. For example, the signal is a search query, calendar event, or other contextual information obtained, for example, from the sensor component 206. The signal may be an example of online data transmitted or received by user device 200.
At 510, user device 200 determines a series of inferences to be made by the machine learning model that in each inference indicate whether the person associated with user device 200 has the condition. For example, ML model 116-1 may perform and generate inferences that form a series of inferences 212-1 over time, anonymizer 118-1 generates aggregated statistics 120-1 about whether people in a particular sub-area have a condition from inferences 212-1. At 512, user device 200 generates aggregated statistics 120-1 regarding whether people in a particular sub-region have the condition based on a series of inferences 212-1 made by machine learning model 116-1.
FIG. 6 illustrates an additional example method performed by a user device for maintaining privacy during machine learning on a multi-mode device. Method 600 may include more or fewer steps than those shown in fig. 6, and may be performed in a different order. Method 600 is described below in the context of user device 200.
At 602, user device 200 outputs an indication of the aggregated statistics to remote system 104. This enables the remote system 104 to generate the occurrence maps 122-1 and 122-2.
At 604, user device 200 receives an indication of the occurrence map 122-1 of the geographic area. For example, user device 200 may be an application subscriber to remote system 104, not just a data source. This means that in addition to providing statistics for generating the occurrence map 122-1, the user device 200 may also receive the occurrence map 122-1.
At 606, the user device 200 outputs for display a graphical user interface including the occurrence map 122-1. For example, the user device 200 may present the occurrence map 122-1 on the user interface component 210.
At 608, the user device receives an updated portion of the occurrence map that has been updated by the remote system 104. The update is based in part on subsequent statistics regarding inferences as to whether or not people in a particular sub-region have the condition, the inferences being made by copies of the machine learning model 116 executing at other user devices 102. For example, user device 200 and other user devices output subsequent (aggregated) statistics made from subsequent inferences of ML model 116-1 and other ML models. As with the initial statistics, subsequent statistics indicate whether a person of a particular sub-region has the condition.
At 610, in response to outputting the follow-up statistics, the user device 200 receives the updated portion of the occurrence map 122-1 and outputs the updated portion of the occurrence map to an update user interface for display. In this way, the user device 200 may receive updated portions of the occurrence map 122-1 rather than the entire map.
7-1 through 7-3 illustrate example progression of the occurrence maps 700-1 through 700-3 as the computing system collects aggregated statistics over time. The occurrence maps 700-1 through 700-3 are examples of the occurrence map 122 generated when the map module 114 collects aggregated statistics 120 from multiple user devices 102 within the geographic area 702. In fig. 7-1 through 7-3, the user device 102 is shown as pins (capped line segments) within different sub-area cells (black and white squares) within the geographic area 702, including sub-areas 704-1 through 704-3. The white sub-area cells indicate sub-areas where identified by the map module 114 as having or not having a particular condition. The black sub-area cells indicate ambiguous sub-areas where the map module 114 is not determined.
Consider a hypothetical influenza outbreak in australia. Traditionally, user devices 102 in the geographic region 702 of australia may upload data into a cloud computing environment where the data is processed for various application purposes. This data is typically personal, sensitive and in principle almost always linkable to the person or at least the user device 102. An alternative to personal data is the actual data that is publicly available, such as the incidence of flu-like illness for zip codes within weeks provided by the australian government agency. While not personal, real data is often too detailed or outdated and is useless in generating an incidence map sufficient for containment or treatment.
To generate an accurate incidence map of influenza in geographic area 702, remote system 104 mixes two different types of data sets (aggregated statistical and true data collected from device 102) in map module 114. The map module 114 blends the data and makes statistical maps 700-1 through 700-3 for various sub-areas within the geographic area 702.
Progress from the occurrence maps 700-1 through 700-3 shows how the map module 114 can generate a complete occurrence map with more aggregated statistics 120 from more user devices 102. The map module 114 may fill in the black sub-area and generate the complete occurrence map 700-3.
As more statistics are collected from more devices 102 in more sub-areas, the accuracy and anonymity of each of the occurrence maps 700-1 through 700-3 increases. Alone, the statistical data is noisy and ambiguous for health modeling purposes. For example, even if a user in australia searches using the user device 102-1, when the user device 102-1 is in the sub-region 704A (e.g., sydney), using a particular query such as "fever" or "sore throat", this search signal may mean many things other than the user having a flu, even if searched many times in many different contexts. The search may be for cold symptoms for relatives outside australia, information on papers or articles about flu, or many other reasons. However, the aggregated statistics 120 from multiple user devices 102 in multiple sub-areas 704-1 and 704-3 may be used for health modeling purposes in those and other sub-areas (e.g., sub-area 704-2 where no data is collected). The map module 114 circumvents the need to obtain data with clear health labels at the single device level, which has been found problematic to implement on a large scale while protecting privacy.
Advancing the australian example, when the user of the user device 102-1 searches for [ fever and sore throat ], the user may have searched when recently in sub-area 704-3. The sub-area 704-3 has confirmed the flu outbreak, and since the user has returned to sub-area 704-1, the user's online or offline behavior pattern (e.g., going home from work) is similar to sub-area 704-3 which is eventually searched for more flu indications. The map module 114 may adjust the map 700-1 to indicate that the flow stream is likely around the sub-area 704-3 where the user device 102-1 collected signals and around the sub-area 704-1 where the user device 102-1 reported signals. The map module 114 updates the map 700-1 while the user's private data is sparse and remains implicitly localized to the user device 102-1. The occurrence maps 700-2 and 700-3 show the entire geographic area 702, with the probability or occurrence of suspicion ultimately plotted for each sub-area.
The aggregated statistics collected from the devices 102 in sub-areas 704-1 and 704-3 may be used to plot the flow in sub-area 704-2 where no pins are present. For example, the occurrence map 700-2 shows the sub-area 704-2 classified as having or not having a condition, even though no local data was collected from the sub-area 704-2. The raw data remains private and is not shared with the device 102. Instead, the map module 114 relies on statistical patterns in the aggregated statistical data collected from the multiple devices 102 in sub-areas 704-1 and 704-3 to infer what is happening in sub-area 704-2.
Highlighting sub-areas where conditions are occurring, not occurring, or unknown enables application subscribers receiving the maps 700-1 through 700-3 to identify geographic boundaries to establish containment and treatment operations to combat disease. Because the signals are aggregated over a large number of devices 102 (many pins shown in fig. 700-1 through 700-3), these techniques and systems enable an occurrence map with fine details, but with a more global view of the world.
8-1 through 8-4 illustrate examples of situations that include an occurrence map generated based on a computing system that maintains privacy during machine learning on a multi-mode device. In fig. 8-1, ML model 116 of user device 102 has collected statistics about aggregations of multiple sub-regions (white boxes) and reported these statistics to map module 114 for use in mapping occurrence 800-1. Because the occurrence map 800-1 indicates the location where the condition is occurring and not the location where the condition is expected to occur, containment operations (circles) are utilized around some of the sub-regions reported in the occurrence map 800-2. In fig. 8-3, an occurrence map 800-3 is generated, showing different sub-area ranges, and new containment operations (circles) deployed around the other ranges. Finally, in FIGS. 8-4, only one sub-area is shown to be affected by the condition. Containment or therapeutic procedures were successful. Treatment occurs without ever exposing personal information about the individual user or user device.
The following are additional examples of the systems and techniques described for maintaining privacy for machine learning and condition attribution on a multi-mode device.
Example 1. a computer-implemented method for maintaining privacy during condition attribution, the method comprising: training, by a remote system, a machine learning model to infer whether a person associated with a user device in a geographic area has the condition based on signals received by the user device; deploying, by the remote system, a copy of the machine learning model for local execution on each of a set of user devices; collecting, by the remote system and from the set of user devices, aggregated statistical data of inferences made through the copy of the machine learning model; determining, by a remote system, an occurrence rate of the condition in a particular sub-region of the geographic region based on the aggregated statistics; the remote system outputs an occurrence map for the geographic area based on the occurrence of the condition in the particular sub-area, the map indicating different occurrences between sub-areas of the geographic area.
Example 2. the method of example 1, wherein the condition comprises an infectious disease comprising malaria, chikungunya fever, Zika, influenza, Ebola, or dengue fever.
Example 3. the method of any of examples 1 or 2, wherein training the machine learning model comprises running the machine learning model in an inference mode based on real data of the geographic area and signals received by the user device in the geographic area.
Example 4. the method of any of examples 1-3, wherein the copy of the machine learning model is an old copy of the machine learning model, and training the machine learning model to infer whether the person associated with the user device has the condition comprises: creating training data comprising examples of signals received by the user device when the person associated with the user device has the condition and examples of signals received by the user device when the person associated with the user device does not have the condition; retraining the machine learning model based on simulated training data; and generating a new copy of the machine learning model.
Example 5. the method of example 4, further comprising: deploying, by the remote system and to replace an old copy of the machine learning model, a new copy of the machine learning model for local execution at each of the set of user devices.
Example 6. the method of any of examples 1-5, wherein collecting inferred aggregated statistics comprises: receiving a first portion of the inferred aggregated statistics from a first user device of the group of user devices; inferring a first sub-region of a plurality of sub-regions of the geographic area based on a first portion of the aggregated statistics; attributing a first incidence of a condition to a first sub-region based at least in part on a first portion of the aggregated statistics; and generating an occurrence map of the geographic area by indicating a first occurrence of the condition over the entire first sub-area.
Example 7. the method according to example 6, further comprising: receiving a second portion of the aggregated statistics from a second user device of the group of user devices, wherein a first sub-region of the plurality of sub-regions of the geographic region is further inferred based on the second portion of the aggregated statistics; and further attributing the first occurrence of the condition to the first sub-region based on the second portion of the aggregated statistics.
Example 8. the method of any of examples 6 or 7, further comprising: modeling a second incidence of a condition of a second sub-region of the plurality of sub-regions based on the aggregated statistical data; and generating an occurrence map for the geographic area by further indicating a second occurrence of the condition over the entire second sub-area.
Example 9 the method of example 8, wherein the set of user devices is located outside of the second sub-region when the inference is made by the copy of the machine learning model.
Example 10 the method of any of examples 1-9, wherein aggregated statistics of inferences made by the copy of the machine learning model indicate the presence or absence of the condition.
Example 11. the method of any of examples 1-10, wherein the remote system includes a plurality of remote systems.
Example 12. the method of any of examples 1-11, wherein collecting aggregated statistics of inferences made by the copy of the machine learning model is responsive to obtaining an indication of consent from a user of each user device of the set of user devices to collect the aggregated statistics.
Example 13. the method of any of examples 1 to 12, wherein outputting the occurrence map for the geographic area comprises outputting the occurrence map to an application executing at a remote subscriber device.
Example 14. a computing system, comprising: at least one processor configured to execute the remote system of any of the methods of examples 1-13.
Example 15 a computer-readable storage medium comprising instructions that, when executed, cause at least one processor of a remote system to perform any of the methods of examples 1 to 13.
Example 16 a method for maintaining privacy that supports machine learning on a multi-mode device and attribution of a status of a geographic area, the method comprising: receiving, by the user device, a copy of a machine learning model from the remote system, the copy of the machine learning model being trained to infer whether a person associated with the user device has the condition based on signals received by the user device while in a particular sub-region of the geographic region; inputting, to a machine learning model, one or more signals received by a user device at two or more different time intervals; in response to inputting the one or more signals, determining a series of inferences to be made by the machine learning model, in each inference indicating whether a person associated with the user device has the condition; generating, by the user device, aggregated statistical data regarding whether the person in the particular sub-region has the condition based on a series of inferences made by the machine learning model; and outputting an indication of the aggregated statistics to a remote system that generates an occurrence map of the geographic area indicating different occurrences between a plurality of sub-areas of the geographic area including the particular sub-area.
Embodiment 17. the method of embodiment 16, wherein the condition comprises an infectious disease comprising malaria, chikungunya fever, Zika, influenza, ebola, or dengue fever.
Example 18. the method of any of examples 16 to 17, wherein generating the aggregated statistics comprises modifying the aggregated statistics by introducing noise.
Example 19. the method according to example 18, further comprising: the inferred statistical samples in the series of inferences are modified to introduce noise in the aggregated statistical data.
Example 20. the method of any of examples 16 to 19, further comprising: summarize the aggregated statistics to delete an identifier of the user or the user device prior to outputting an indication of the aggregated statistics to the remote system.
Example 21. the method of any of examples 16 to 20, summarizing the aggregated statistics to delete an identifier of a particular location within a particular sub-region before outputting an indication of the aggregated statistics to a remote system.
Example 22 the method of any of examples 16 to 21, wherein the signal received by the user device comprises a signal obtained by a sensor of the user device.
Example 23. the method of any of examples 16 to 22, wherein the signal received by the user device comprises online data transmitted or received by the user device.
Example 24. the method of any of examples 16 to 23, further comprising: the application of the starting machine learning model is executed prior to the input.
Example 25. the method of example 24, further comprising: receiving an indication of an occurrence map of a geographic area; and outputting, for display, a graphical user interface of the application including the occurrence map.
Example 26. the method of example 25, wherein the aggregated statistics comprise initial statistics, the method further comprising: outputting, by the user device to the remote system, subsequent statistics regarding whether the person in the particular sub-region has the condition based on subsequent inferences made by the machine learning model; receiving an updated portion of the incidence map of the geographic area in response to outputting the subsequent statistical data; and outputting, for display, an updated user interface of the application that includes the updated portion of the occurrence map.
Example 27. the method of example 25, wherein the aggregated statistics include initial statistics, the method further comprising: an update portion of the occurrence map of the geographic area that receives subsequent statistics of inferences made based on the copies of the machine learning model executed at the other user devices as to whether the person in the particular sub-area has the condition and has been updated by the remote system; and in response to receiving the updated portion of the occurrence map, outputting, for display, an updated user interface of the application that includes the updated portion of the occurrence map.
Example 28 the method of any of examples 16 to 27, wherein inputting one or more of the signals received by the user device at two or more different time intervals into the machine learning model comprises: the input is conditioned on obtaining an indication of user input that agrees to the machine learning model to infer whether the user has the condition.
Example 29. a computing device, comprising: at least one processor configured to execute the user equipment of any one of the methods of examples 16 to 28.
Example 30 a computer-readable storage medium comprising instructions that, when executed, cause at least one processor of the user equipment to perform any of the methods of examples 16 to 28.
While various embodiments of the present disclosure have been described in the foregoing description and illustrated in the accompanying drawings, it is to be clearly understood that the disclosure is not limited thereto but may be embodied in various forms within the scope of the appended claims. From the foregoing description, it will be evident that various modifications may be made thereto without departing from the spirit and scope of the disclosure as defined by the following claims.
Claims (16)
1. A computer-implemented method for maintaining privacy during attribution of a condition, the method comprising:
training, by a remote system, a machine learning model to infer whether a person associated with a user device has the condition based on signals received by the user device in a geographic area;
deploying, by the remote system, a copy of the machine learning model for local execution on each of a set of user devices;
collecting, by the remote system and from the set of user devices, aggregated statistics of inferences made by the copy of the machine learning model;
determining, by the remote system, an occurrence rate of the condition in a particular sub-region of the geographic region based on the aggregated statistics; and
outputting, by the remote system, an occurrence map of the geographic area based on the occurrence of the condition in the particular sub-area, the occurrence map indicating different occurrences among a plurality of sub-areas of the geographic area.
2. The method of claim 1, wherein the condition comprises an infectious disease comprising malaria, chikungunya fever, Zika, influenza, Ebola, or dengue fever.
3. The method of any of claims 1 or 2, wherein training the machine learning model comprises running the machine learning model in an inference mode based on real data of the geographic area and signals received by the user device in the geographic area.
4. The method of any of claims 1-3, wherein the copy of the machine learning model is an old copy of the machine learning model, and training the machine learning model to infer whether the person associated with the user device has the condition comprises:
creating training data comprising examples of signals received by the user device when the person associated with the user device has the condition and examples of signals received by the user device when the person associated with the user device does not have the condition;
retraining the machine learning model based on simulated training data; and
generating a new copy of the machine learning model.
5. The method of claim 4, further comprising:
deploying, by the remote system and to replace the old copy of the machine learning model, a new copy of the machine learning model for local execution at each of the user devices of the group.
6. The method of any of claims 1 to 5, wherein collecting inferred aggregated statistics comprises:
receiving a first portion of the inferred aggregated statistics from a first user device of the group of user devices;
inferring a first sub-region of a plurality of sub-regions of the geographic region based on a first portion of the aggregated statistics;
attributing a first occurrence of the condition to the first sub-region based at least in part on a first portion of the aggregated statistics; and
generating an occurrence map of the geographic area by indicating a first occurrence of the condition for the entire first sub-area.
7. The method of claim 6, further comprising:
receiving a second portion of the aggregated statistics from a second user device in the set of user devices, wherein:
further inferring a first sub-region of a plurality of sub-regions of the geographic region based on a second portion of the aggregated statistics; and
further attributing the first occurrence of the condition to the first sub-region based on the second portion of the aggregated statistics.
8. The method of any of claims 6 or 7, further comprising:
modeling a second occurrence of the condition for a second sub-region of the plurality of sub-regions based on the aggregated statistical data; and
generating an occurrence map of the geographic area by further indicating a second occurrence of the condition of the entire second sub-area.
9. The method of claim 8, wherein a group of user devices of the group is located outside of the second sub-region when inferred by a copy of the machine learning model.
10. The method of any of claims 1-9, wherein aggregated statistics of inferences made by the replica of the machine learning model indicate the presence or absence of the condition.
11. The method of any of claims 1-10, wherein the remote system comprises a plurality of remote systems.
12. The method of any of claims 1-11, wherein collecting aggregated statistics of inferences made by the replica of the machine learning model is in response to obtaining an indication of consent from a user of each user device in the set of user devices to collect the aggregated statistics.
13. The method of any of claims 1-12, wherein outputting the occurrence map for the geographic area comprises outputting the occurrence map to an application executing at a remote subscriber device.
14. A computing system, comprising: at least one processor configured as a remote system to perform the method of any of claims 1 to 13.
15. A computer-readable storage medium comprising instructions that, when executed, cause at least one processor of a remote system to perform any of the methods of claims 1-13.
16. A computer-implemented method for maintaining privacy during attribution of a condition, the method comprising:
receiving, by a user device and from a remote system, a copy of a machine learning model trained to infer whether a person associated with the user device has the condition based on signals received by the user device when the user device is in a particular sub-region of a geographic area;
inputting, to the machine learning model, one or more signals received by the user device at two or more different time intervals; in response to inputting the one or more signals, determining a series of inferences to be made by the machine learning model that indicate in each of the inferences whether a person associated with the user device has the condition;
generating, by the user device, aggregated statistical data regarding whether people in the particular sub-region have the condition based on a series of inferences made by the machine learning model; and
outputting an indication of the aggregated statistics to the remote system, the remote system generating an occurrence map of the geographic area, the occurrence map indicating different occurrences between a plurality of sub-areas of the geographic area including the particular sub-area.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/058303 WO2021086305A1 (en) | 2019-10-28 | 2019-10-28 | Maintaining privacy during attribution of a condition |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114830116A true CN114830116A (en) | 2022-07-29 |
Family
ID=68583527
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980103203.4A Pending CN114830116A (en) | 2019-10-28 | 2019-10-28 | Maintaining privacy during condition attribution |
Country Status (4)
Country | Link |
---|---|
US (1) | US20220351057A1 (en) |
EP (1) | EP4035045A1 (en) |
CN (1) | CN114830116A (en) |
WO (1) | WO2021086305A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11657069B1 (en) * | 2020-11-25 | 2023-05-23 | Amazon Technologies, Inc. | Dynamic compilation of machine learning models based on hardware configurations |
CN113505312A (en) * | 2021-07-21 | 2021-10-15 | 车主邦（北京）科技有限公司 | Display method, server, medium and computer equipment |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10769549B2 (en) * | 2016-11-21 | 2020-09-08 | Google Llc | Management and evaluation of machine-learned models based on locally logged data |
US20190148023A1 (en) * | 2017-11-16 | 2019-05-16 | Google Llc | Machine-Learned Epidemiology |
US20190252078A1 (en) * | 2018-02-15 | 2019-08-15 | X Development Llc | Predicting the spread of contagions |
-
2019
- 2019-10-28 EP EP19805465.2A patent/EP4035045A1/en active Pending
- 2019-10-28 US US17/772,883 patent/US20220351057A1/en active Pending
- 2019-10-28 WO PCT/US2019/058303 patent/WO2021086305A1/en unknown
- 2019-10-28 CN CN201980103203.4A patent/CN114830116A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
WO2021086305A1 (en) | 2021-05-06 |
US20220351057A1 (en) | 2022-11-03 |
EP4035045A1 (en) | 2022-08-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
Li et al. | Trustworthy ai: From principles to practices | |
Leung et al. | Real-time tracking and prediction of COVID-19 infection using digital proxies of population mobility and mixing | |
Utazi et al. | Mapping vaccination coverage to explore the effects of delivery mechanisms and inform vaccination strategies | |
Compton et al. | Geotagging one hundred million twitter accounts with total variation minimization | |
US10715570B1 (en) | Generic event stream processing for machine learning | |
KR101656819B1 (en) | Feature-extraction-based image scoring | |
US20160246981A1 (en) | Data secrecy statistical processing system, server device for presenting statistical processing result, data input device, and program and method therefor | |
CN109241125A (en) | The anti money washing platform of money launderer is identified for excavating and analyzing data | |
EP3245598B1 (en) | Website access control | |
US20170353564A1 (en) | Identifying users of client devices for tracking user interactions with content distributed by content provider systems | |
Quinn et al. | Computational sustainability and artificial intelligence in the developing world | |
US20220405619A1 (en) | Intelligent updating and data processing for deployed machine learning models | |
Borra | COVID-19 apps: Privacy and security concerns | |
MacIntyre et al. | Artificial intelligence in public health: the potential of epidemic early warning systems | |
CN114830116A (en) | Maintaining privacy during condition attribution | |
Northern et al. | Vercasm-cps: Vulnerability analysis and cyber risk assessment for cyber-physical systems | |
Gambhir et al. | Infectious disease modeling methods as tools for informing response to novel influenza viruses of unknown pandemic potential | |
JP7292368B2 (en) | A non-transitory computer-readable storage medium storing a method for identifying a device using attributes and location signatures from the device, a server of uniquely generated identifiers for the method, and a sequence of instructions for the method | |
CN117609642A (en) | Social platform media content display method and system based on blockchain technology | |
US20230205928A1 (en) | Data management system to track and distribute public data collection with user privacy protection and event token exchange | |
Sei et al. | Differentially private mobile crowd sensing considering sensing errors | |
Hang et al. | Privacy-enhancing digital contact tracing with machine learning for pandemic response: A comprehensive review | |
Narasimhaiah et al. | A Multidimensional Authentication and Secure Framework for Cloud-Based Human Health Monitoring System. | |
Malesios et al. | Bayesian epidemic models for spatially aggregated count data | |
US10185747B2 (en) | Presenting publisher data sets in context |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
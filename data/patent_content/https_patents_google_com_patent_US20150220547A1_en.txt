US20150220547A1 - Suggesting and refining user input based on original user input - Google Patents
Suggesting and refining user input based on original user input Download PDFInfo
- Publication number
- US20150220547A1 US20150220547A1 US14/686,555 US201514686555A US2015220547A1 US 20150220547 A1 US20150220547 A1 US 20150220547A1 US 201514686555 A US201514686555 A US 201514686555A US 2015220547 A1 US2015220547 A1 US 2015220547A1
- Authority
- US
- United States
- Prior art keywords
- query
- user
- terms
- computing
- search
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000007670 refining Methods 0.000 title 1
- 238000000034 method Methods 0.000 claims abstract description 64
- 150000001875 compounds Chemical class 0.000 claims description 45
- 238000004590 computer program Methods 0.000 claims description 9
- 230000008602 contraction Effects 0.000 abstract description 39
- 239000011159 matrix material Substances 0.000 abstract description 28
- 230000008569 process Effects 0.000 description 30
- 239000013598 vector Substances 0.000 description 23
- 238000012986 modification Methods 0.000 description 19
- 230000004048 modification Effects 0.000 description 19
- 238000010586 diagram Methods 0.000 description 10
- 230000000875 corresponding effect Effects 0.000 description 8
- 230000006870 function Effects 0.000 description 8
- 210000004027 cell Anatomy 0.000 description 4
- 238000000605 extraction Methods 0.000 description 3
- 244000089409 Erythrina poeppigiana Species 0.000 description 2
- 235000009776 Rathbunia alamosensis Nutrition 0.000 description 2
- 238000010276 construction Methods 0.000 description 2
- 238000013507 mapping Methods 0.000 description 2
- 230000011218 segmentation Effects 0.000 description 2
- 238000011524 similarity measure Methods 0.000 description 2
- 241001417524 Pomacanthidae Species 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000004891 communication Methods 0.000 description 1
- 238000012937 correction Methods 0.000 description 1
- 230000004069 differentiation Effects 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 238000005259 measurement Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 210000000130 stem cell Anatomy 0.000 description 1
- 239000004557 technical material Substances 0.000 description 1
Images
Classifications
-
- G06F17/3097—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90324—Query formulation using system suggestions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3322—Query formulation using system suggestions
-
- G06F17/3053—
Definitions
- the present invention relates generally to generating alternative user inputs. More specifically, systems and methods to generate modified or refined user inputs based on an original user input, such as a search query, are disclosed.
- User search query refinement occurs with queries in Roman-based languages, e.g., English, as well as with queries in non-Roman-based languages, e.g., Chinese, Japanese, Korean (CJK), Thai, etc. Users typically modify or refine their search queries when the original search query did not yield a good set of search results, e.g., if the search query is too specific or too broad or if the search query used improper terms.
- the original user search query may yield too many irrelevant results when one or more of the search terms are ambiguous and some of the returned documents are related to a meaning of the ambiguous search term that is different from what the user intended and/or when the user is interested in only one aspect of a given search term among the many aspects of the search term.
- the original user search query may also yield too many irrelevant results when the user is merely exploring concepts related to a given search term.
- search engines offer a list of suggested search queries related the user's original search query. For example, if a user's original search query is “Amazon,” the search engine may suggest other related search queries such as “Amazon.com”, “Amazon Rainforest”, and “Amazon River.” Search query suggestion may be particularly useful for non-Roman based language users such as CJK users. Specifically, non-Roman based language users may prefer clicking or selecting a suggested search query over typing modified search queries because non-Roman-based languages generally have a large set of characters and each character may require several keystrokes using a conventional Roman-based keyboard. For example, many Chinese language users use pinyin (phonetic spelling) to input Chinese characters. The conventional pinyin input system typically converts a pinyin input and provides a list of candidate Chinese character sets from which the user may select the intended set of Chinese characters. As is evident, the multi-step input process may be tedious and time-consuming.
- Search query suggestion may also be useful for Roman-based language users.
- Many search engines such as Yahoo, Teoma, Alta Vista, Askjeeves, AllTheWeb, and Baidu offer such as feature in the form of related search, query refinement, or query clustering.
- the method may be applied to queries in a non-Roman based language such as Chinese.
- the method may generally include receiving and identifying core terms in an original user input, determining potential alternative user inputs by replacing core term(s) in the original input with another term according to a similarity matrix and/or substituting a sequence of words in the original input with another sequence of words according to an expansion/contraction table, one sequence being a substring of the other sequence, computing likelihoods of the potential alternative user inputs, and selecting most likely alternative user inputs according to a predetermined criteria, e.g., the likelihood of each selected alternative user input is at least that of the original user input.
- the method may also include determining whether the original user input is in a pre-computed cache of suggested alternative user inputs and, if so, outputting pre-computed most likely alternative use inputs stored in the pre-computed cache.
- the similarity matrix may be generated using a corpus and may have similarity values between two similar terms including phrasal terms such as “New York” and “Los Angeles” which may have a very high similarity although each pair of corresponding terms (New and Los and York and Angeles) does not have high similarity.
- the similarity matrix can be generated by constructing feature vectors for words in the corpus and determining a similarity value between two words/phrases using their feature vectors.
- the expansion/contraction table may be generated from a user input database and may have a frequency value associated with each pair of sequence of terms.
- the expansion/contraction table may be generated by determining frequent word sequences, filtering out non-phrasal word sequences, and associating a count with each sequence of terms as the frequency value.
- an example of an entry in the expansion/contraction table may be “The United States of America” and “United States.”
- the likelihoods of the potential alternative user inputs may be computed by determining at least one of: (a) a relevance between the original user input and the potential alternative user input, (b) a probability that the potential alternative user input will be selected by the user, and (c) a score of the position for the potential alternative user input.
- the relevance between the original user input and the potential alternative user input may be determined using correlation values between aligned terms of the original input and the potential alternative user input.
- a system for suggesting alternative user inputs generally includes a suggestion/refinement server configured to receive an original user input having at least one core term, to identify the core terms in the original user input, to determine potential alternative user inputs by performing at least one of (a) replacing at least one core term in the original user input with another term according to a similarity matrix, the similarity matrix having a similarity value between the two terms and (b) substituting a sequence of words in the original user input with another sequence of words according to an expansion/contraction table, one sequence being a substring of the other sequence, the expansion/contraction table having a frequency value associated with each sequence of terms, to compute likelihoods of the potential alternative user inputs, and to select and output most likely alternative user inputs according to a predetermined criteria.
- a computer program product for suggesting alternative user inputs is used in conjunction with a computer system, the computer program product including a computer readable storage medium on which are stored instructions executable on a computer processor.
- the instructions may generally include receiving and identifying core terms in an original user input, determining potential alternative user inputs by replacing core term(s) in the original input with another term according to a similarity matrix and/or substituting a sequence of words in the original input with another sequence of words according to an expansion/contraction table, one sequence being a substring of the other sequence, computing likelihoods of the potential alternative user inputs and optionally a predicted user satisfaction with the potential alternative user inputs, and selecting most likely alternative user inputs according to a predetermined criteria, e.g., the likelihood of each selected alternative user input is at least that of the original user input.
- An application implementing the system and method may be implemented on a server site such as on a search engine or may be implemented, e.g., downloaded, on a client site such as a user's computer to provide suggested alternative inputs or to interface with a remote server such as a search engine.
- FIG. 1A is a block diagram of an exemplary system for generating suggested modified/refined user inputs such as user search queries.
- FIG. 1B is a block diagram illustrating a process for generating a similarity matrix by a similar words extractor of the suggestion-refinement server.
- FIG. 1C is a block diagram illustrating a process for generating an extraction/contraction table by an expansion/contraction table generator of the suggestion-refinement server.
- FIG. 1D is a block diagram illustrating a process for generating an initial modification/refinement cache by a session parser of the suggestion-refinement server.
- FIG. 2A is flow chart illustrating an exemplary process for generating a modification/refinement user inputs cache as may be implemented by the system shown in FIG. 1A .
- FIG. 2B is a flow chart illustrating an exemplary process for generating suggested modified/refined user inputs such as user queries as may be implemented by the system shown in FIG. 1A .
- FIG. 3 illustrates an exemplary query lattice diagram generated by parsing an original user query.
- FIG. 4 is a flowchart illustrating an exemplary process for constructing a similarity matrix for use in generating suggested modified/refined queries by replacement of query terms.
- FIG. 5 is a table listing features and corresponding counts for the term “communities” generated from exemplary text.
- FIG. 6 is a table listing exemplary features and corresponding counts for the term “communities” generated from a corpus.
- FIG. 7 is an exemplary similarity matrix for use in replacing terms to generate suggested modified/refined queries.
- FIG. 8 is a flowchart illustrating an exemplary process for constructing an extracting/contraction table of pairs of compounds for use in generating suggested modified/refined queries by substituting compounds in queries.
- FIG. 9 is table illustrating some exemplary entries in an expansion/contraction table for use in substituting compounds in queries to generate suggested modified/refined queries.
- FIG. 10 is a flowchart illustrating an exemplary process for determining the score of a suggested modified/refined query.
- FIG. 11 illustrates an example of an alignment mapping of terms two queries Q and Q′.
- FIG. 12 is a flowchart illustrating an exemplary process for generating correlation values for detected new entities.
- the systems and methods may include systems and methods for extracting new terms including new name entities (e.g., proper names, names of movies, songs and products, etc.) and the relationships between terms.
- new name entities e.g., proper names, names of movies, songs and products, etc.
- the systems and methods described herein are suitable for use in generating query (or other user input) refinement but may also be adapted for many other applications such as news article classification, spelling correction, media search and segmentation.
- the initial search query is often not the best search query and the user thus modifies or refines the search query, sometimes multiple times, during a given search session.
- FIG. 1A is a block diagram of an exemplary system 20 for generating suggested modified/refined inputs 26 from an original user input such as a user search query 22 .
- the system 20 generally includes a suggestion/refinement server 24 that generates suggested modified/refined queries 26 using probabilities that may be derived from the various data sources.
- Examples of the various data sources include an optional suggestion/refinement cache 36 that stores a cache of pre-computed query suggestions or refinements.
- the suggestion/refinement cache 36 may be initially generated by a session parser 24 C of the suggestion/refinement server 24 .
- Another data source may be a similarity matrix 38 that may be generated by a similar words extractor 24 A of the suggestion/refinement server 24 and an expansion/contraction table 39 that may be generated by an expansion/contraction table generator 24 B.
- the similarity matrix 38 and the expansion/contraction table 39 generally approximate relationships between the terms and/or sequence of terms.
- the system 20 may periodically update and/or regenerate the similarity matrix 38 and/or the expansion/contraction table 39 .
- the similar words extractor 24 A, expansion/contraction table generator 24 B, and session parser 24 C of the suggestion/refinement server 24 will be described in more detail below with reference to FIGS. 1B-1D , respectively.
- FIG. 1B is a block diagram illustrating a process for generating the similarity matrix 38 by the similar words extractor 24 A.
- the similar words extractor 24 A may utilize various data sources for generating the similarity matrix 38 .
- Examples of the data sources utilized by the similar words extractor 24 A include a corpus such as a web corpus 30 (e.g., news, web pages, and anchor text information), queries and associated user selections such as those stored in the query logs 32 , and/or session data 34 that may include the history of queries in each given session.
- the web corpus 30 may also include anchor text information.
- the query logs 32 may include not only a log of user queries but also the search result selections made by the user as well as the duration that the user stayed at the selected search result before returning to the search results, for example.
- FIG. 1C is a block diagram illustrating a process for generating the extraction/contraction table 39 by the expansion/contraction table generator 24 B.
- the expansion/contraction table generator 24 B may utilize query logs 32 and/or session data 34 as data sources for generating the extraction/contraction table 39 .
- FIG. 1D is a block diagram illustrating a process for generating an initial modification/refinement cache 36 a by the session parser 24 C.
- the session parser 24 C may utilize session data 34 as its data source for generating the initial modification/refinement cache 36 a.
- FIGS. 2A and 2B are flowcharts illustrating exemplary processes that may be performed by the suggestion/refinement server 24 .
- FIG. 2A is flow chart illustrating an exemplary process 40 for generating a modification/refinement user inputs cache as may be implemented by the system 20 shown in FIG. 1A .
- an initial modification/refinement cache can be generated from session data using a session parser.
- session data may include the history of queries in each given user input or query session.
- the process 40 then enters a loop that includes blocks 43 - 48 for each of a predetermined number of most common user input, e.g., queries, at block 42 .
- the process performs a lookup of suggested modified/refined queries in the cache.
- the lookup at block 43 may result in suggestions 1, 2, . . . M.
- Each user input or query entry in the modification/refinement cache may contain a list of predetermined number N of suggested queries.
- blocks 44 - 47 may also be performed.
- an extended query lattice may be (conceptually) built to generate additional suggested modified/refined (alternative) queries.
- Block 44 generally represents a term replacement query modification/refinement method
- block 45 generally represents an expansion/contraction query modification/refinement method.
- the extended query lattice may be built by replacing terms in the original query with similar terms using a similarity matrix of similar terms.
- Term replacement replaces a word or term (including phrasal term) in the original query with a similar word or term. Similar terms may include synonyms or near synonyms (e.g., community and neighborhood), acronyms, and/or terms in the same syntactic/semantic category (e.g., Toyota and Hyundai, Dell and HP, DVD and digital camera, and Nokia and Motorola).
- the extended query lattice may additionally and/or alternatively be built by adding/deleting terms in the original query using an expansion/contraction table of pairs of compounds.
- Examples of Chinese compound pairs include Shanghai and Shanghai City as well as television and television set.
- Compound pairs may include ambiguous terms and their unambiguous context (e.g., Amazon and Amazon rain forest and/or Amazon.com), concepts and their refinement (e.g., cell and stem cell and/or cell phone), terms and their attributes (e.g., computer and memory, hard disk drive, and/or DVD drive), and names (e.g., names of people, companies, and the like) and their corresponding activities, job, products, etc. (e.g., actor-movie such as Tom Hanks and Forrest Gump, company-product such as Apple and iPod, person-company or title Bill Gates and Microsoft or CEO, author-book, singer-song, etc.).
- actor-movie such as Tom Hanks and Forrest Gump
- company-product such as Apple and iPod
- person-company or title Bill Gates and Microsoft or CEO author-book, singer-song, etc.
- the paths and scores for a predetermined number of best queries in the extended query lattice are identified as potential suggested queries at block 46 .
- the score of the original common user query is computed so that only the potential suggested queries whose score is at least that of the original common user query are provided as the suggested modified/refined queries.
- the score may represent the likelihood of the given query (original or potential suggested query) being the query selected or intended by a user.
- the queries whose score is at least that of the original common user query can be provided as suggested modified/refined queries to fill the suggestion list entry in the modification/refinement cache.
- the resulting suggested queries may be stored to the pre-computed modified/refined queries cache. Note that the process 40 or the loop includes blocks 42 - 49 may be repeated periodically to update the modification/refinement cache.
- FIG. 2B is a flow chart illustrating an exemplary process 50 for generating suggested modified/refined user inputs such as user queries as may be implemented by the system 20 shown in FIG. 1A .
- a user input such as a user query is received.
- the original user input received at block 51 may be compared to entries in the optional pre-computed modification/refinement cache. If the original user query is determined to be in the suggestion/refinement cache at decision block 52 , then a query suggestion list of size N is at least partially filled with up to N pre-computed query suggestions from the pre-computed modification/refinement cache at block 53 . If the suggestion list is full as determined at decision block 54 , the process 50 is complete.
- the suggestion list may be of a predefined size N, e.g., 10 suggestions or a single best suggestion.
- N e.g. 10 suggestions or a single best suggestion.
- the process 50 continues at blocks 55 and 56 .
- the process also continues at blocks 55 and 56 .
- blocks 55 - 58 are similar to blocks 44 - 47 of process 40 as described above with reference to FIG. 2A . Accordingly, the descriptions, to the extent they are similar, are not repeated here for purposes of clarity.
- an extended query lattice is (conceptually) built to generate suggested modified/refined (alternative) queries.
- the paths and scores for a predetermined number of best queries in the extended query lattice are identified as potential suggested queries at block 57 .
- the score of the original user query is computed so that only the potential suggested queries whose scores are at least that of the original user query are provided as the suggested modified/refined queries.
- the queries whose score is at least that of the original user query can be provided to the user as suggested modified/refined queries to fill the suggestion list or the remainder of the suggestion list.
- a single best query may alternatively be provided.
- the original user query and the resulting suggested queries may be additionally stored to the pre-computed modified/refined queries cache.
- FIG. 3 illustrates an exemplary extended query lattice diagram.
- the original query may include various core words or terms T 1 , T 2 , T 3 , T 4 and non-core words or terms s 1 , s 2 , s 3 .
- the core term or entity is “sina” rather than “URL's.”
- Non-core terms generally also include stop words.
- a non-stop word is generally defined as, for example, the 30 most frequently occurring Chinese words or the 100 most frequently occurring English words in the corpus such as a web corpus.
- one or more query modification or refinement methods can be applied to build the extended query lattice.
- term replacement refers to the replacement of words and/or terms that are similar (e.g., synonym or a near synonym) to the core entities and that may be identified using, for example, the similarity matrix.
- FIG. 3 illustrates that the extended query lattice may be built by replacing the term T 1 with T 1 ′ or T 1 ′′ and/or by replacing the term T 4 with T 4 ′.
- expansion/contraction refers to the adding core entities to and/or deleting some of the core entities from in the original query using, for example, the expansion/contraction table of compounds.
- the expansion/contraction table of compounds may include a table entry for the pair of compounds T 1 T 2 and T 1 T 2 T 5 such that the compound T 1 T 2 in the original query in FIG. 3 may be replaced with the compound T 1 T 2 T 5 (i.e., adding a new term T 5 ) so as to further build on the extended query lattice.
- the expansion/contraction table of compounds may also include a table entry for the pair of compounds T 2 T 3 T 4 and T 3 T 4 such that the compound T 2 T 3 T 4 in the original query in FIG. 3 may be replaced with the compound T 3 T 4 (i.e., deleting core entity T 2 ) so as to further build on the extended query lattice.
- FIG. 4 is a flowchart illustrating an exemplary process 60 for constructing the similarity matrix for use in generating suggested modified/refined queries by replacement of query terms.
- the similarity matrix can be a matrix of distributional word similarities between each pair of words or terms w.
- the distributional word similarities for each word w may be obtained by constructing a feature vector for each word w in a corpus, e.g., web pages, and determining the similarity between each pair of words as the cosine of the angle between their respective feature vectors.
- the feature vector of a word or term may include the surrounding words at all occurrences of the word or term.
- a feature vector for each word/term w in a corpus such as a web corpus, along with a count for each feature f in the feature vector is constructed.
- the features of a word/term w may include words occurring before and after the word/term w, up to the first non-stop word.
- the features of the word communities and their corresponding co-occurrence counts are listed in the table of FIG. 5 .
- each of the left and right features is assigned a count of 1.
- the counts of the features for each side of the given instance of the word “communities” can be equally divided and thus computed as a fraction.
- there are two left features such that each left feature is assigned a count of 0.5.
- there are two right features such that each right feature is assigned a count of 0.33.
- the value of the each feature f in the feature vector may be determined as the point-wise mutual information MI between the word w and feature f.
- the value of the point-wise mutual information MI is used because, while words that occur frequently, e.g., stop words, tend to have higher counts, such words are often semantically vacuous. Accordingly, as the counts of the features may not be good indicators of the importance of the features, the point-wise mutual information MI(w, f) between a word w and a feature f may be used as the value of the feature f.
- the point-wise mutual information MI(w, f) may be defined as the logarithm of the ratio between the observed joint probability of w and f, P(w, f), and the expected probability of w, P(w), and the expected probability of f, P(f), co-occurring if they were independent:
- MI ⁇ ( w , f ) P ⁇ ( w ⁇ f ) ⁇ log ⁇ P ⁇ ( w ⁇ f ) P ⁇ ( w ) ⁇ P ⁇ ( f )
- FIG. 6 is a table listing exemplary features and corresponding probabilities for the term “communities” generated from a web corpus.
- the feature vector table shown in FIG. 6 lists a subset of the features of the word “communities” as well as the probabilities and the mutual information between the features and the word “communities.” Note that feature vectors can be fairly large. For example, the full set of the features of the word communities extracted from the corpus includes approximately 2,000 elements.
- a similarity measure or value sim between two words or phrases w 1 and w 2 may be determined as the cosine of the angle between their feature vectors using the values of the features in the feature vectors.
- the similarity sim between two terms or words w 1 and w 2 can be defined as:
- sim ⁇ ( w 1 , w 2 ) ⁇ i ⁇ ⁇ f 1 ⁇ ⁇ 1 ⁇ f 2 ⁇ ⁇ 1 ⁇ i ⁇ ⁇ f 1 ⁇ ⁇ 1 2 ⁇ ⁇ i ⁇ ⁇ f 2 ⁇ ⁇ 1 2
- the similarity matrix is then constructed from the similarity values for each pair of words for terms and may be used in generating suggested modified/refined queries by replacing query terms with similar terms.
- the similarity values may be used in determining the scores for a potential suggest query, for example.
- the similarity matrix may be recomputed periodically and/or the similarity value for terms, such as those for newly identified terms, may be added to the matrix.
- FIG. 7 is an exemplary similarity matrix that may be employed in replacing similar terms to generate suggested modified/refined queries.
- FIG. 8 is a flowchart illustrating an exemplary process 70 for constructing the extracting/contraction table of pairs of compounds.
- each entry in the expansion/contraction table is a pair of compounds where one compound is a substring of another such that if a query contains a compound that is one of the pair of compounds in an entry in the expansion/contraction table, the compound may be substituted by the other compound in the compound pair entry in extending the lattice.
- each compound in the extracting/contraction table should be a meaningful phrase.
- a compound pair may be Shanghai and Shanghai City or television and television set.
- compound pairs may include, for example, ambiguous terms and their unambiguous context (e.g., Amazon and Amazon rain forest), names of people and their corresponding activities, attributes of terms, refinement of concepts, actors, authors, products, person-position, etc.
- queries in query logs may be segmented into a word sequence that maximizes the overall probability for the query.
- a segmentor may be employed to segment a sequence of characters into a sequence of words.
- the sequence of words can be such that the product of the probabilities of the words is the maximum among all possible segmentations of the sequence of characters.
- block 71 need not be performed for certain languages such as English where there are clear delineations between adjacent words.
- frequent word sequences or n-grams are identified at block 72 . Also at block 72 , a count of the word sequences where all adjacent pairs of words in the word sequence are frequent n-grams is made so as to identify frequent word sequences of any length. Note that frequent word sequences may or may not be compounds. For example, some of the frequent word sequences may be compounds while others may be non-phrasal or non-compound sequences.
- non-phrasal sequences are identified by requiring a compound/phrase to appear at the beginning as well as the end of a minimum number of a queries (but not necessarily in the same query).
- the minimum number of queries may be any number greater than or equal to 1 but is typically much greater than 1, e.g., 50 or 100.
- a feature vector for each n-gram in a corpus, such as a web corpus, along with a count for each feature fin the feature vector is constructed.
- the value of the each feature f in the feature vector may be determined as the point-wise mutual information MI between the n-gram and feature f.
- a similarity measure or value sim between two n-grams may be determined as the cosine of the angle between their feature vectors using the values of the features in the feature vectors. Note that blocks 74 , 75 , and 76 are similar to blocks 62 , 64 , and 66 of process 60 , respectively, as described above with reference to FIG. 4 . Accordingly, the descriptions, to the extent they are similar, are not repeated here for purposes of clarity.
- the expansion/contraction table may then be constructed as pairs of compounds where one compound is a substring of another at block 77 .
- the counts of the compounds can also be determined and stored in the expansion/contraction table.
- FIG. 9 is table illustrating some exemplary entries in an expansion/contraction table for use in substituting compounds in queries to generate suggested modified/refined queries.
- each row of the expansion/contraction table contains two compounds or word sequences in which one compound is a substring of the other.
- Each compound is also associated with a count (or other frequency value) which may be determined from the query log or some other user input database, for example. The count may be used as a cut-off to decrease the size of the database and/or may be used, at least in part, to determine a weight for a term or a compound, e.g., by using log(count). As described above with reference to FIGS.
- FIG. 10 is a flowchart illustrating an exemplary process 80 for determining the score of a suggested modified/refined query, e.g., a path in the extended query lattice.
- the determination of query suggestions can be treated as a prediction problem based on previous queries in the current query session. Given the history of queries Q 1 , Q 2 , . . . . Q n- 1 in the current search session, a prediction may be made as to what the next query Q n the user is most likely to select.
- the suggested or predicted next query Q should not only be relevant to the history of queries Q 1 , Q 2 , . . . , Q n- 1 in the current session but also yield good search results.
- a measurement of how good the search results are may be a function of, for example, click position (the position of the search result that the user selects) and click duration (how long the user stays at the selected search result page).
- the score for each potential suggested query can be determined as the value of the object function F:
- Rel(Q, Q 1 , . . . , Q n-1 ) is the relevance between the history of queries Q 1 , . . . , Q n-1 and the candidate suggested query Q;
- Click(Q) is the probability that the candidate suggested query Q will be selected by the user.
- Position(Q) is the position of the search result for the candidate suggested query Q that will be clicked.
- next queries e.g., paths in the extended query lattice
- the best (e.g., most likely) suggested next query can be expressed as the query that maximizes the value of the object function F:
- the relevance Rel(Q, Q 1 , . . . , Q n-1 ) between the history of user queries, Q 1 , . . . , Q n-1 in the current session and a predicted query Q is determined using correlations of aligned terms in the queries.
- the terms or core entities in the original query Q are identified.
- the relevance Rel(Q, Q′) between two queries Q and Q′ can be derived from the correlation of their core entities.
- the relevance Rel(Q, Q) can be expressed as:
- the probability that query Q will be selected by the user, Click(Q), is determined from, for example, click duration or normalized click duration.
- the score of the position for the predicted query Q, Position(Q), is determined from, for example, the click position, normalized click position, or inverted click position.
- the value of the object function F for the potential suggested or predicted next query Q is determined from the results of blocks 82 , 84 , and 86 as described above.
- FIG. 12 is a flowchart illustrating an exemplary process 90 for generating correlation values between pairs of terms or core entities T, T′.
- new core entities may be identified from a corpus, e.g., web pages and user queries, using mutual information.
- a corpus e.g., web pages and user queries.
- Nokia is also identified as an entity.
- the correlation values between pairs of core entities T, T′ can be determined using, for example, query logs, web pages and anchor text.
- the correlation between two core entities T 1 and T 2 may be defined as a function of a vector of real numbers:
- w 1 , w 2 , . . . , w n are the weights of certain predetermined relationships.
- the predetermined relationships include (1) synonyms, acronyms and antonyms, (2) compounded phrase such as Shanghai vs. Shanghai City, television vs.
- the value of the correlation vectors Cor(T 1 , T 2 ) may be normalized to [0-1].
- the systems and methods for generating modified or refined user inputs can suggest queries that a user is likely to use and/or that generate a top result that the user is likely to select.
- the systems and methods quantitatively measure the correlation between two queries.
- the two queries need not have any common terms or even synonyms.
- the queries related to an original query e.g., in Chinese
- “‘Now and Forever’ mp3” for the mp3 file of the song “Now and Forever” may include “CoCo Lee” (singer of the song), as well as other songs or albums by the same artist, for example.
- the suggested queries may not be simply an expansion of the original query but rather queries with better search results, e.g., search results that the users are more likely to select.
- the suggested queries may include queries that achieve query sense disambiguation where the original query is short and ambiguous.
- the suggested queries may include queries that split the original query into shorter queries where the original query may be long and/or contain mutually exclusive terms.
Abstract
Description
- 1. Field of the Invention
- The present invention relates generally to generating alternative user inputs. More specifically, systems and methods to generate modified or refined user inputs based on an original user input, such as a search query, are disclosed.
- 2. Description of Related Art
- Many users often modify or refine, sometimes repeatedly, their original search query during a given search session. For example, the user may modify an original search query to a more specific search query, a broader search query, and/or a search query using alternative query terms until desired search results are generated. User search query refinement occurs with queries in Roman-based languages, e.g., English, as well as with queries in non-Roman-based languages, e.g., Chinese, Japanese, Korean (CJK), Thai, etc. Users typically modify or refine their search queries when the original search query did not yield a good set of search results, e.g., if the search query is too specific or too broad or if the search query used improper terms. For example, the original user search query may yield too many irrelevant results when one or more of the search terms are ambiguous and some of the returned documents are related to a meaning of the ambiguous search term that is different from what the user intended and/or when the user is interested in only one aspect of a given search term among the many aspects of the search term. The original user search query may also yield too many irrelevant results when the user is merely exploring concepts related to a given search term.
- Many search engines offer a list of suggested search queries related the user's original search query. For example, if a user's original search query is “Amazon,” the search engine may suggest other related search queries such as “Amazon.com”, “Amazon Rainforest”, and “Amazon River.” Search query suggestion may be particularly useful for non-Roman based language users such as CJK users. Specifically, non-Roman based language users may prefer clicking or selecting a suggested search query over typing modified search queries because non-Roman-based languages generally have a large set of characters and each character may require several keystrokes using a conventional Roman-based keyboard. For example, many Chinese language users use pinyin (phonetic spelling) to input Chinese characters. The conventional pinyin input system typically converts a pinyin input and provides a list of candidate Chinese character sets from which the user may select the intended set of Chinese characters. As is evident, the multi-step input process may be tedious and time-consuming.
- Search query suggestion may also be useful for Roman-based language users. Many search engines, such as Yahoo, Teoma, Alta Vista, Askjeeves, AllTheWeb, and Baidu offer such as feature in the form of related search, query refinement, or query clustering.
- Systems and methods to generate modified or refined user inputs based on an original user input, such as a search query, are disclosed. It should be appreciated that the present invention can be implemented in numerous ways, including as a process, an apparatus, a system, a device, a method, or a computer readable medium such as a computer readable storage medium or a computer network wherein program instructions are sent over optical or electronic communication lines. The term computer generally refers to any device with computing power such as personal digital assistants (PDAs), cellular telephones, and network switches. Several inventive embodiments of the present invention are described below.
- The method may be applied to queries in a non-Roman based language such as Chinese. The method may generally include receiving and identifying core terms in an original user input, determining potential alternative user inputs by replacing core term(s) in the original input with another term according to a similarity matrix and/or substituting a sequence of words in the original input with another sequence of words according to an expansion/contraction table, one sequence being a substring of the other sequence, computing likelihoods of the potential alternative user inputs, and selecting most likely alternative user inputs according to a predetermined criteria, e.g., the likelihood of each selected alternative user input is at least that of the original user input. The method may also include determining whether the original user input is in a pre-computed cache of suggested alternative user inputs and, if so, outputting pre-computed most likely alternative use inputs stored in the pre-computed cache.
- The similarity matrix may be generated using a corpus and may have similarity values between two similar terms including phrasal terms such as “New York” and “Los Angeles” which may have a very high similarity although each pair of corresponding terms (New and Los and York and Angeles) does not have high similarity. In one embodiment, the similarity matrix can be generated by constructing feature vectors for words in the corpus and determining a similarity value between two words/phrases using their feature vectors.
- The expansion/contraction table may be generated from a user input database and may have a frequency value associated with each pair of sequence of terms. In one embodiment, the expansion/contraction table may be generated by determining frequent word sequences, filtering out non-phrasal word sequences, and associating a count with each sequence of terms as the frequency value. Merely to illustrate, an example of an entry in the expansion/contraction table may be “The United States of America” and “United States.”
- The likelihoods of the potential alternative user inputs may be computed by determining at least one of: (a) a relevance between the original user input and the potential alternative user input, (b) a probability that the potential alternative user input will be selected by the user, and (c) a score of the position for the potential alternative user input. In particular, the relevance between the original user input and the potential alternative user input may be determined using correlation values between aligned terms of the original input and the potential alternative user input.
- In another embodiment, a system for suggesting alternative user inputs generally includes a suggestion/refinement server configured to receive an original user input having at least one core term, to identify the core terms in the original user input, to determine potential alternative user inputs by performing at least one of (a) replacing at least one core term in the original user input with another term according to a similarity matrix, the similarity matrix having a similarity value between the two terms and (b) substituting a sequence of words in the original user input with another sequence of words according to an expansion/contraction table, one sequence being a substring of the other sequence, the expansion/contraction table having a frequency value associated with each sequence of terms, to compute likelihoods of the potential alternative user inputs, and to select and output most likely alternative user inputs according to a predetermined criteria.
- In yet another embodiment, a computer program product for suggesting alternative user inputs is used in conjunction with a computer system, the computer program product including a computer readable storage medium on which are stored instructions executable on a computer processor. The instructions may generally include receiving and identifying core terms in an original user input, determining potential alternative user inputs by replacing core term(s) in the original input with another term according to a similarity matrix and/or substituting a sequence of words in the original input with another sequence of words according to an expansion/contraction table, one sequence being a substring of the other sequence, computing likelihoods of the potential alternative user inputs and optionally a predicted user satisfaction with the potential alternative user inputs, and selecting most likely alternative user inputs according to a predetermined criteria, e.g., the likelihood of each selected alternative user input is at least that of the original user input.
- An application implementing the system and method may be implemented on a server site such as on a search engine or may be implemented, e.g., downloaded, on a client site such as a user's computer to provide suggested alternative inputs or to interface with a remote server such as a search engine.
- These and other features and advantages of the present invention will be presented in more detail in the following detailed description and the accompanying figures which illustrate by way of example principles of the invention.
- The present invention will be readily understood by the following detailed description in conjunction with the accompanying drawings, wherein like reference numerals designate like structural elements.
-
FIG. 1A is a block diagram of an exemplary system for generating suggested modified/refined user inputs such as user search queries. -
FIG. 1B is a block diagram illustrating a process for generating a similarity matrix by a similar words extractor of the suggestion-refinement server. -
FIG. 1C is a block diagram illustrating a process for generating an extraction/contraction table by an expansion/contraction table generator of the suggestion-refinement server. -
FIG. 1D is a block diagram illustrating a process for generating an initial modification/refinement cache by a session parser of the suggestion-refinement server. -
FIG. 2A is flow chart illustrating an exemplary process for generating a modification/refinement user inputs cache as may be implemented by the system shown inFIG. 1A . -
FIG. 2B is a flow chart illustrating an exemplary process for generating suggested modified/refined user inputs such as user queries as may be implemented by the system shown inFIG. 1A . -
FIG. 3 illustrates an exemplary query lattice diagram generated by parsing an original user query. -
FIG. 4 is a flowchart illustrating an exemplary process for constructing a similarity matrix for use in generating suggested modified/refined queries by replacement of query terms. -
FIG. 5 is a table listing features and corresponding counts for the term “communities” generated from exemplary text. -
FIG. 6 is a table listing exemplary features and corresponding counts for the term “communities” generated from a corpus. -
FIG. 7 is an exemplary similarity matrix for use in replacing terms to generate suggested modified/refined queries. -
FIG. 8 is a flowchart illustrating an exemplary process for constructing an extracting/contraction table of pairs of compounds for use in generating suggested modified/refined queries by substituting compounds in queries. -
FIG. 9 is table illustrating some exemplary entries in an expansion/contraction table for use in substituting compounds in queries to generate suggested modified/refined queries. -
FIG. 10 is a flowchart illustrating an exemplary process for determining the score of a suggested modified/refined query. -
FIG. 11 illustrates an example of an alignment mapping of terms two queries Q and Q′. -
FIG. 12 is a flowchart illustrating an exemplary process for generating correlation values for detected new entities. - Systems and methods to generate modified or refined user inputs based on an original user input, such as a search query, are disclosed. It is noted that for purposes of clarity only, the examples presented herein are generally presented in terms of Chinese query inputs. However, the systems and methods for suggesting refined/modified user inputs may be similarly applicable for other non-Roman based languages such as Japanese, Korean, Thai, etc., as well as Roman-based languages. In addition, the systems and methods for suggesting refined/modified user inputs may be similarly applicable for other non-query user inputs. The following description is presented to enable any person skilled in the art to make and use the invention. Descriptions of specific embodiments and applications are provided only as examples and various modifications will be readily apparent to those skilled in the art. The general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the invention. Thus, the present invention is to be accorded the widest scope encompassing numerous alternatives, modifications and equivalents consistent with the principles and features disclosed herein. For purpose of clarity, details relating to technical material that is known in the technical fields related to the invention have not been described in detail so as not to unnecessarily obscure the present invention.
- The systems and methods to generate modified or refined user inputs based on the original user input, such as a query, based on the user's query history and relationships between the terms of the user query. The systems and methods may include systems and methods for extracting new terms including new name entities (e.g., proper names, names of movies, songs and products, etc.) and the relationships between terms. The systems and methods described herein are suitable for use in generating query (or other user input) refinement but may also be adapted for many other applications such as news article classification, spelling correction, media search and segmentation. For many user, the initial search query is often not the best search query and the user thus modifies or refines the search query, sometimes multiple times, during a given search session.
-
FIG. 1A is a block diagram of anexemplary system 20 for generating suggested modified/refined inputs 26 from an original user input such as auser search query 22. Thesystem 20 generally includes a suggestion/refinement server 24 that generates suggested modified/refined queries 26 using probabilities that may be derived from the various data sources. Examples of the various data sources include an optional suggestion/refinement cache 36 that stores a cache of pre-computed query suggestions or refinements. The suggestion/refinement cache 36 may be initially generated by asession parser 24C of the suggestion/refinement server 24. Another data source may be asimilarity matrix 38 that may be generated by asimilar words extractor 24A of the suggestion/refinement server 24 and an expansion/contraction table 39 that may be generated by an expansion/contraction table generator 24B. Thesimilarity matrix 38 and the expansion/contraction table 39 generally approximate relationships between the terms and/or sequence of terms. Thesystem 20 may periodically update and/or regenerate thesimilarity matrix 38 and/or the expansion/contraction table 39. Thesimilar words extractor 24A, expansion/contraction table generator 24B, andsession parser 24C of the suggestion/refinement server 24 will be described in more detail below with reference toFIGS. 1B-1D , respectively. -
FIG. 1B is a block diagram illustrating a process for generating thesimilarity matrix 38 by thesimilar words extractor 24A. As shown, the similar words extractor 24A may utilize various data sources for generating thesimilarity matrix 38. Examples of the data sources utilized by thesimilar words extractor 24A include a corpus such as a web corpus 30 (e.g., news, web pages, and anchor text information), queries and associated user selections such as those stored in the query logs 32, and/orsession data 34 that may include the history of queries in each given session. Theweb corpus 30 may also include anchor text information. The query logs 32 may include not only a log of user queries but also the search result selections made by the user as well as the duration that the user stayed at the selected search result before returning to the search results, for example. -
FIG. 1C is a block diagram illustrating a process for generating the extraction/contraction table 39 by the expansion/contraction table generator 24B. As shown, the expansion/contraction table generator 24B may utilizequery logs 32 and/orsession data 34 as data sources for generating the extraction/contraction table 39.FIG. 1D is a block diagram illustrating a process for generating an initial modification/refinement cache 36 a by thesession parser 24C. As shown, thesession parser 24C may utilizesession data 34 as its data source for generating the initial modification/refinement cache 36 a. -
FIGS. 2A and 2B are flowcharts illustrating exemplary processes that may be performed by the suggestion/refinement server 24. In particular,FIG. 2A is flow chart illustrating anexemplary process 40 for generating a modification/refinement user inputs cache as may be implemented by thesystem 20 shown inFIG. 1A . Atblock 41, an initial modification/refinement cache can be generated from session data using a session parser. As noted, session data may include the history of queries in each given user input or query session. Theprocess 40 then enters a loop that includes blocks 43-48 for each of a predetermined number of most common user input, e.g., queries, atblock 42. In particular, atblock 43, the process performs a lookup of suggested modified/refined queries in the cache. The lookup atblock 43 may result insuggestions - Each user input or query entry in the modification/refinement cache may contain a list of predetermined number N of suggested queries. Thus, to generate suggestions M+1, M+2 . . . N, i.e., to fill up the suggested queries list for each query, blocks 44-47 may also be performed. In particular, at
blocks Block 44 generally represents a term replacement query modification/refinement method whileblock 45 generally represents an expansion/contraction query modification/refinement method. Specifically, atblock 44, the extended query lattice may be built by replacing terms in the original query with similar terms using a similarity matrix of similar terms. Term replacement replaces a word or term (including phrasal term) in the original query with a similar word or term. Similar terms may include synonyms or near synonyms (e.g., community and neighborhood), acronyms, and/or terms in the same syntactic/semantic category (e.g., Toyota and Honda, Dell and HP, DVD and digital camera, and Nokia and Motorola). - At
block 45, the extended query lattice may additionally and/or alternatively be built by adding/deleting terms in the original query using an expansion/contraction table of pairs of compounds. In particular, each entry in the expansion/contraction table is a pair of compounds where one compound is a substring of another, e.g., T1T2<=>T1T2T3, and T4T5T6<=>T4T5. Examples of Chinese compound pairs include Shanghai and Shanghai City as well as television and television set. Compound pairs may include ambiguous terms and their unambiguous context (e.g., Amazon and Amazon rain forest and/or Amazon.com), concepts and their refinement (e.g., cell and stem cell and/or cell phone), terms and their attributes (e.g., computer and memory, hard disk drive, and/or DVD drive), and names (e.g., names of people, companies, and the like) and their corresponding activities, job, products, etc. (e.g., actor-movie such as Tom Hanks and Forrest Gump, company-product such as Apple and iPod, person-company or title Bill Gates and Microsoft or CEO, author-book, singer-song, etc.). - After the extended query lattice is built to contain various alternative paths, the paths and scores for a predetermined number of best queries in the extended query lattice are identified as potential suggested queries at
block 46. Atblock 47, the score of the original common user query is computed so that only the potential suggested queries whose score is at least that of the original common user query are provided as the suggested modified/refined queries. The score may represent the likelihood of the given query (original or potential suggested query) being the query selected or intended by a user. The queries whose score is at least that of the original common user query can be provided as suggested modified/refined queries to fill the suggestion list entry in the modification/refinement cache. The resulting suggested queries may be stored to the pre-computed modified/refined queries cache. Note that theprocess 40 or the loop includes blocks 42-49 may be repeated periodically to update the modification/refinement cache. -
FIG. 2B is a flow chart illustrating anexemplary process 50 for generating suggested modified/refined user inputs such as user queries as may be implemented by thesystem 20 shown inFIG. 1A . Atblock 51, a user input such as a user query is received. Atdecision block 52, the original user input received atblock 51 may be compared to entries in the optional pre-computed modification/refinement cache. If the original user query is determined to be in the suggestion/refinement cache atdecision block 52, then a query suggestion list of size N is at least partially filled with up to N pre-computed query suggestions from the pre-computed modification/refinement cache atblock 53. If the suggestion list is full as determined atdecision block 54, theprocess 50 is complete. Note that the suggestion list may be of a predefined size N, e.g., 10 suggestions or a single best suggestion. Alternatively, if the suggestion list is not full as determined atdecision block 54, then theprocess 50 continues atblocks decision block 52, the process also continues atblocks process 40 as described above with reference toFIG. 2A . Accordingly, the descriptions, to the extent they are similar, are not repeated here for purposes of clarity. - At
blocks block 57. Atblock 58, the score of the original user query is computed so that only the potential suggested queries whose scores are at least that of the original user query are provided as the suggested modified/refined queries. The queries whose score is at least that of the original user query can be provided to the user as suggested modified/refined queries to fill the suggestion list or the remainder of the suggestion list. Although not shown, a single best query may alternatively be provided. In addition, the original user query and the resulting suggested queries may be additionally stored to the pre-computed modified/refined queries cache. - The various blocks of the
processes FIGS. 2A and 2B for generating suggested modified/refined user inputs will be described in further detail below. -
FIG. 3 illustrates an exemplary extended query lattice diagram. As shown, the original query may include various core words or terms T1, T2, T3, T4 and non-core words or terms s1, s2, s3. For example, in a Chinese query “URL's of sina”, the core term or entity is “sina” rather than “URL's.” Non-core terms generally also include stop words. A non-stop word is generally defined as, for example, the 30 most frequently occurring Chinese words or the 100 most frequently occurring English words in the corpus such as a web corpus. - After the core entities of the original query are identified, one or more query modification or refinement methods, e.g., term replacement and/or expansion/contraction, can be applied to build the extended query lattice. As noted above, term replacement refers to the replacement of words and/or terms that are similar (e.g., synonym or a near synonym) to the core entities and that may be identified using, for example, the similarity matrix. Merely for illustrative purposes,
FIG. 3 illustrates that the extended query lattice may be built by replacing the term T1 with T1′ or T1″ and/or by replacing the term T4 with T4′. - As also noted above, expansion/contraction refers to the adding core entities to and/or deleting some of the core entities from in the original query using, for example, the expansion/contraction table of compounds. Merely for illustrative purposes, the expansion/contraction table of compounds may include a table entry for the pair of compounds T1T2 and T1T2T5 such that the compound T1T2 in the original query in
FIG. 3 may be replaced with the compound T1T2T5 (i.e., adding a new term T5) so as to further build on the extended query lattice. Similarly, the expansion/contraction table of compounds may also include a table entry for the pair of compounds T2T3T4 and T3T4 such that the compound T2T3T4 in the original query inFIG. 3 may be replaced with the compound T3T4 (i.e., deleting core entity T2) so as to further build on the extended query lattice. - One exemplary method for generating the similarity matrix of similar terms is described in more detail with reference to
FIGS. 4-7 .FIG. 4 is a flowchart illustrating anexemplary process 60 for constructing the similarity matrix for use in generating suggested modified/refined queries by replacement of query terms. The similarity matrix can be a matrix of distributional word similarities between each pair of words or terms w. The distributional word similarities for each word w may be obtained by constructing a feature vector for each word w in a corpus, e.g., web pages, and determining the similarity between each pair of words as the cosine of the angle between their respective feature vectors. The feature vector of a word or term may include the surrounding words at all occurrences of the word or term. - One example of the construction of feature vectors and the similarity matrix is presented with reference to
FIG. 4 although various other feature vector and similarity matrix construction methods may be similarly employed. In particular, atblock 62, a feature vector for each word/term w in a corpus, such as a web corpus, along with a count for each feature f in the feature vector is constructed. The features of a word/term w may include words occurring before and after the word/term w, up to the first non-stop word. Merely for illustrative purposes, given the sentence “Because communities assess at different percentages of fair market value, the only way to compare tax rates among communities is by using equalized rates,” the features of the word communities and their corresponding co-occurrence counts are listed in the table ofFIG. 5 . Note that in a language having different forms of a given word, e.g., singular and plural such as “community” and “communities” or different tenses such as “walk,” “walking”, and “walked”, the system may treat the different forms of the word as separate words but are generally similar terms. Such treatment of different forms of a given word may not be relevant for languages that do not have such differentiations such as is typically the case in, for example, Chinese. In addition, also note that a feature with prefix “L:” or “R:” is a word that appears on the left or right of the word w, respectively. In this embodiment, the sum of the counts of the one or more features on each left and right side of a given instance of the word w is 1. For example, in the first instance of the word “communities,” each of the left and right features is assigned a count of 1. In addition, when there are one or more stop words adjacent to the word “communities,” e.g., “between,” “is,” and “by,” the counts of the features for each side of the given instance of the word “communities” can be equally divided and thus computed as a fraction. In the second instance of the word “communities,” there are two left features such that each left feature is assigned a count of 0.5. Similarly, in the second instance of the word “communities,” there are two right features such that each right feature is assigned a count of 0.33. - Referring again to
FIG. 4 , atblock 64, the value of the each feature f in the feature vector may be determined as the point-wise mutual information MI between the word w and feature f. The value of the point-wise mutual information MI is used because, while words that occur frequently, e.g., stop words, tend to have higher counts, such words are often semantically vacuous. Accordingly, as the counts of the features may not be good indicators of the importance of the features, the point-wise mutual information MI(w, f) between a word w and a feature f may be used as the value of the feature f. The point-wise mutual information MI(w, f) may be defined as the logarithm of the ratio between the observed joint probability of w and f, P(w, f), and the expected probability of w, P(w), and the expected probability of f, P(f), co-occurring if they were independent: -
- where the probabilities (e.g., relative frequencies) of the features P(f) and words P(w) may be determined using, for example, their respective probabilities in the corpus. Merely as an example,
FIG. 6 is a table listing exemplary features and corresponding probabilities for the term “communities” generated from a web corpus. The feature vector table shown inFIG. 6 lists a subset of the features of the word “communities” as well as the probabilities and the mutual information between the features and the word “communities.” Note that feature vectors can be fairly large. For example, the full set of the features of the word communities extracted from the corpus includes approximately 2,000 elements. - Referring once again to
FIG. 4 , atblock 66, a similarity measure or value sim between two words or phrases w1 and w2 may be determined as the cosine of the angle between their feature vectors using the values of the features in the feature vectors. In particular, the similarity sim between two terms or words w1 and w2 can be defined as: -
- where the feature vectors of w1 and w2 are represented by (f11, f12 . . . , f1n) and (f21, f22 . . . , f2n), respectively.
- At
block 68, the similarity matrix is then constructed from the similarity values for each pair of words for terms and may be used in generating suggested modified/refined queries by replacing query terms with similar terms. In particular, the similarity values may be used in determining the scores for a potential suggest query, for example. Note that the similarity matrix may be recomputed periodically and/or the similarity value for terms, such as those for newly identified terms, may be added to the matrix.FIG. 7 is an exemplary similarity matrix that may be employed in replacing similar terms to generate suggested modified/refined queries. - An exemplary method for generating the similarity matrix for use in applying the term replacement query modification/refinement method having been presented, an exemplary method for generating the expansion/contraction table of pairs of compounds for use in applying the expansion/contraction query modification/refinement method will now be described in more detail below with reference to
FIGS. 8-11 .FIG. 8 is a flowchart illustrating anexemplary process 70 for constructing the extracting/contraction table of pairs of compounds. As noted above, each entry in the expansion/contraction table is a pair of compounds where one compound is a substring of another such that if a query contains a compound that is one of the pair of compounds in an entry in the expansion/contraction table, the compound may be substituted by the other compound in the compound pair entry in extending the lattice. Ideally, each compound in the extracting/contraction table should be a meaningful phrase. Merely as examples, a compound pair may be Shanghai and Shanghai City or television and television set. As noted above, compound pairs may include, for example, ambiguous terms and their unambiguous context (e.g., Amazon and Amazon rain forest), names of people and their corresponding activities, attributes of terms, refinement of concepts, actors, authors, products, person-position, etc. - At
block 71, queries in query logs (or another database of user inputs) may be segmented into a word sequence that maximizes the overall probability for the query. In particular, because Chinese words need not be explicitly delineated with spaces or other breaks such that a query may be a string of Chinese characters without breaks, a segmentor may be employed to segment a sequence of characters into a sequence of words. The sequence of words can be such that the product of the probabilities of the words is the maximum among all possible segmentations of the sequence of characters. As is evident, block 71 need not be performed for certain languages such as English where there are clear delineations between adjacent words. - To identify compounds/phrases, frequent word sequences or n-grams (sequence of n sequences) are identified at
block 72. Also atblock 72, a count of the word sequences where all adjacent pairs of words in the word sequence are frequent n-grams is made so as to identify frequent word sequences of any length. Note that frequent word sequences may or may not be compounds. For example, some of the frequent word sequences may be compounds while others may be non-phrasal or non-compound sequences. - At
block 73, non-phrasal sequences are identified by requiring a compound/phrase to appear at the beginning as well as the end of a minimum number of a queries (but not necessarily in the same query). The minimum number of queries may be any number greater than or equal to 1 but is typically much greater than 1, e.g., 50 or 100. - At
block 74, a feature vector for each n-gram in a corpus, such as a web corpus, along with a count for each feature fin the feature vector is constructed. At block. 75, the value of the each feature f in the feature vector may be determined as the point-wise mutual information MI between the n-gram and feature f. Atblock 76, a similarity measure or value sim between two n-grams may be determined as the cosine of the angle between their feature vectors using the values of the features in the feature vectors. Note that blocks 74, 75, and 76 are similar toblocks process 60, respectively, as described above with reference toFIG. 4 . Accordingly, the descriptions, to the extent they are similar, are not repeated here for purposes of clarity. - The expansion/contraction table may then be constructed as pairs of compounds where one compound is a substring of another at
block 77. In addition, the counts of the compounds can also be determined and stored in the expansion/contraction table. -
FIG. 9 is table illustrating some exemplary entries in an expansion/contraction table for use in substituting compounds in queries to generate suggested modified/refined queries. As shown, each row of the expansion/contraction table contains two compounds or word sequences in which one compound is a substring of the other. Each compound is also associated with a count (or other frequency value) which may be determined from the query log or some other user input database, for example. The count may be used as a cut-off to decrease the size of the database and/or may be used, at least in part, to determine a weight for a term or a compound, e.g., by using log(count). As described above with reference toFIGS. 2A and 2B , once the query lattice is extended by replacing terms and/or by adding/deleting terms in the original query, the paths and scores of the N best queries are determined from the extended lattice as potential suggested queries.FIG. 10 is a flowchart illustrating anexemplary process 80 for determining the score of a suggested modified/refined query, e.g., a path in the extended query lattice. - The determination of query suggestions can be treated as a prediction problem based on previous queries in the current query session. Given the history of queries Q1, Q2, . . . .
Q n-1 in the current search session, a prediction may be made as to what the next query Qn the user is most likely to select. The suggested or predicted next query Q, should not only be relevant to the history of queries Q1, Q2, . . . ,Q n-1 in the current session but also yield good search results. A measurement of how good the search results are may be a function of, for example, click position (the position of the search result that the user selects) and click duration (how long the user stays at the selected search result page). - In one embodiment, the score for each potential suggested query can be determined as the value of the object function F:
-
F(Q,Q 1 , . . . ,Q n)=Rel(Q,Q 1 , . . . , Q n-1)*Click(Q)*Position(Q); - where:
- Rel(Q, Q1, . . . , Qn-1) is the relevance between the history of queries Q1, . . . , Qn-1 and the candidate suggested query Q;
- Click(Q) is the probability that the candidate suggested query Q will be selected by the user; and
- Position(Q) is the position of the search result for the candidate suggested query Q that will be clicked.
- As described above with reference to
FIG. 2 , one or more suggested or predicted next query Q can be provided to the user. Thus, the best N suggest next queries (e.g., paths in the extended query lattice) are the N queries with the highest object function values and the best (e.g., most likely) suggested next query can be expressed as the query that maximizes the value of the object function F: -
Q n=ArgMax— Q{F(Q,Q 1 , . . . ,Q n-1)} - The determination of the scores for each potential suggested or predicted
next query Q 90 is shown in the flowchart ofFIG. 10 . Atblock 82, the relevance Rel(Q, Q1, . . . , Qn-1) between the history of user queries, Q1, . . . , Qn-1 in the current session and a predicted query Q is determined using correlations of aligned terms in the queries. In particular, to estimate the relevance function Rel, the terms or core entities in the original query Q are identified. Using the correlations between core entities, the relevance Rel(Q, Q′) between two queries Q and Q′can be derived from the correlation of their core entities. In particular, the relevance Rel(Q, Q) can be expressed as: -
Rel(Q,Q′)=Max— f Prod— {i=1}̂kCor(T i ,T i′)*w(T i) - where:
-
- alignment function f=f(T1, T2, . . . , Tk, T1′, T2′, . . . , Tk′) maps the terms of the related queries Q and Q′, e.g., a mapping between {T1, . . . , Tk, e} and (T1′, . . . , Tk′, e), an example of which is shown in
FIG. 11 ; - Cor(Ti, Ti′) is the correlation between terms Ti, Ti′ and is a vector of real numbers;
- Q=T1, T2, . . . , Tk (core entities in query Q in which any term Ti may be an empty term e);
- alignment function f=f(T1, T2, . . . , Tk, T1′, T2′, . . . , Tk′) maps the terms of the related queries Q and Q′, e.g., a mapping between {T1, . . . , Tk, e} and (T1′, . . . , Tk′, e), an example of which is shown in
- Q′=T1′, T2′, . . . , Tk′ (core entities in query Q′ in which any term Ti′ may be an empty term e); and
-
- w(Ti) is the importance of term Ti, e.g., TF/IDF for Ti, where TF represents a term frequency (e.g., count of the term) and IDF represents an inverted document frequency.
- Next, at
block 84, the probability that query Q will be selected by the user, Click(Q), is determined from, for example, click duration or normalized click duration. Atblock 86, the score of the position for the predicted query Q, Position(Q), is determined from, for example, the click position, normalized click position, or inverted click position. Lastly, atblock 88, the value of the object function F for the potential suggested or predicted next query Q is determined from the results ofblocks - The determination of correlation values Cor(Ti, Ti′) used in determining the relevance between two queries is described in more detail with reference to
FIG. 12 . In particular,FIG. 12 is a flowchart illustrating anexemplary process 90 for generating correlation values between pairs of terms or core entities T, T′. Atblock 92, new core entities may be identified from a corpus, e.g., web pages and user queries, using mutual information. In one illustrative implementation ofblock 92, if Motorola is an entity and “Motorola announced,” “Motorola cell phone,” and “buy Motorola” as well as “Nokia announced,” “Nokia cell phone,” and “buy Nokia” are in the corpus, then Nokia is also identified as an entity. It is noted that although off-the-shelf dictionaries can provide the conventional core entities, many new core entities are often introduced into the vocabulary. Example of new core entities include proper names, e.g., people and company names, and various other new words and phrases such as product models, movies and song titles etc. - At
block 94, the correlation values between pairs of core entities T, T′ can be determined using, for example, query logs, web pages and anchor text. The correlation between two core entities T1 and T2 may be defined as a function of a vector of real numbers: -
Cor(T 1 ,T 2)=f(w 1 ,w 2 , . . . ,w n) - where w1, w2, . . . , wn are the weights of certain predetermined relationships. Examples of the predetermined relationships include (1) synonyms, acronyms and antonyms, (2) compounded phrase such as Shanghai vs. Shanghai City, television vs. television machine, (3) terms in the same syntactic/semantic category, e.g., Toyota and Honda, (4) ambiguous terms and their unambiguous context, (5) names of people and their corresponding activities, e.g., Oprah and talk show host, (6) attributes of terms, e.g., computer and memory, (7) refinement of concepts, e.g., Amazon and Amazon River, Amazon Rain Forrest, and Amazon.com, (8) movie-actors, book-authors, company-product, person-position, etc., e.g., Tom Hanks and Forrest Gump and Bill Gates and CEO.
- At
block 96, the value of the correlation vectors Cor(T1, T2) may be normalized to [0-1]. - The systems and methods for generating modified or refined user inputs can suggest queries that a user is likely to use and/or that generate a top result that the user is likely to select. The systems and methods quantitatively measure the correlation between two queries. As is evident, the two queries need not have any common terms or even synonyms. For example, the queries related to an original query (e.g., in Chinese) “‘Now and Forever’ mp3” for the mp3 file of the song “Now and Forever,” may include “CoCo Lee” (singer of the song), as well as other songs or albums by the same artist, for example. Thus the suggested queries may not be simply an expansion of the original query but rather queries with better search results, e.g., search results that the users are more likely to select. In one example, the suggested queries may include queries that achieve query sense disambiguation where the original query is short and ambiguous. As another example, the suggested queries may include queries that split the original query into shorter queries where the original query may be long and/or contain mutually exclusive terms.
- While the exemplary embodiments of the present invention are described and illustrated herein, it will be appreciated that they are merely illustrative and that modifications can be made to these embodiments without departing from the spirit and scope of the invention. Thus, the scope of the invention is intended to be defined only in terms of the following claims as may be amended, with each claim being expressly incorporated into this Description of Specific Embodiments as an embodiment of the invention.
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/686,555 US9411906B2 (en) | 2005-05-04 | 2015-04-14 | Suggesting and refining user input based on original user input |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/122,873 US8438142B2 (en) | 2005-05-04 | 2005-05-04 | Suggesting and refining user input based on original user input |
US13/615,518 US9020924B2 (en) | 2005-05-04 | 2012-09-13 | Suggesting and refining user input based on original user input |
US14/686,555 US9411906B2 (en) | 2005-05-04 | 2015-04-14 | Suggesting and refining user input based on original user input |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/615,518 Continuation US9020924B2 (en) | 2005-05-04 | 2012-09-13 | Suggesting and refining user input based on original user input |
Publications (2)
Publication Number | Publication Date |
---|---|
US20150220547A1 true US20150220547A1 (en) | 2015-08-06 |
US9411906B2 US9411906B2 (en) | 2016-08-09 |
Family
ID=36781555
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/122,873 Active 2026-04-23 US8438142B2 (en) | 2005-05-04 | 2005-05-04 | Suggesting and refining user input based on original user input |
US13/615,518 Active US9020924B2 (en) | 2005-05-04 | 2012-09-13 | Suggesting and refining user input based on original user input |
US14/686,555 Active US9411906B2 (en) | 2005-05-04 | 2015-04-14 | Suggesting and refining user input based on original user input |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/122,873 Active 2026-04-23 US8438142B2 (en) | 2005-05-04 | 2005-05-04 | Suggesting and refining user input based on original user input |
US13/615,518 Active US9020924B2 (en) | 2005-05-04 | 2012-09-13 | Suggesting and refining user input based on original user input |
Country Status (6)
Country | Link |
---|---|
US (3) | US8438142B2 (en) |
EP (1) | EP1877939A1 (en) |
JP (1) | JP5203934B2 (en) |
KR (1) | KR101389148B1 (en) |
CN (2) | CN102945237B (en) |
WO (1) | WO2006121702A1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180068232A1 (en) * | 2016-09-07 | 2018-03-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Expert-assisted online-learning for media similarity |
US10474704B2 (en) * | 2016-06-27 | 2019-11-12 | International Business Machines Corporation | Recommending documents sets based on a similar set of correlated features |
US20210073331A1 (en) * | 2019-09-06 | 2021-03-11 | International Business Machines Corporation | Suggestion of an output candidate |
Families Citing this family (212)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8590013B2 (en) | 2002-02-25 | 2013-11-19 | C. S. Lee Crawford | Method of managing and communicating data pertaining to software applications for processor-based devices comprising wireless communication circuitry |
US7346839B2 (en) * | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US7747601B2 (en) | 2006-08-14 | 2010-06-29 | Inquira, Inc. | Method and apparatus for identifying and classifying query intent |
US8082264B2 (en) | 2004-04-07 | 2011-12-20 | Inquira, Inc. | Automated scheme for identifying user intent in real-time |
US8612208B2 (en) | 2004-04-07 | 2013-12-17 | Oracle Otc Subsidiary Llc | Ontology for use with a system, method, and computer readable medium for retrieving information and response to a query |
US7765178B1 (en) * | 2004-10-06 | 2010-07-27 | Shopzilla, Inc. | Search ranking estimation |
US8438142B2 (en) | 2005-05-04 | 2013-05-07 | Google Inc. | Suggesting and refining user input based on original user input |
US7647312B2 (en) * | 2005-05-12 | 2010-01-12 | Microsoft Corporation | System and method for automatic generation of suggested inline search terms |
US7752220B2 (en) * | 2005-08-10 | 2010-07-06 | Yahoo! Inc. | Alternative search query processing in a term bidding system |
US7634462B2 (en) * | 2005-08-10 | 2009-12-15 | Yahoo! Inc. | System and method for determining alternate search queries |
US8364521B2 (en) | 2005-09-14 | 2013-01-29 | Jumptap, Inc. | Rendering targeted advertisement on mobile communication facilities |
US8660891B2 (en) | 2005-11-01 | 2014-02-25 | Millennial Media | Interactive mobile advertisement banners |
US7702318B2 (en) | 2005-09-14 | 2010-04-20 | Jumptap, Inc. | Presentation of sponsored content based on mobile transaction event |
US9703892B2 (en) | 2005-09-14 | 2017-07-11 | Millennial Media Llc | Predictive text completion for a mobile communication facility |
US10911894B2 (en) | 2005-09-14 | 2021-02-02 | Verizon Media Inc. | Use of dynamic content generation parameters based on previous performance of those parameters |
US8805339B2 (en) | 2005-09-14 | 2014-08-12 | Millennial Media, Inc. | Categorization of a mobile user profile based on browse and viewing behavior |
US7577665B2 (en) | 2005-09-14 | 2009-08-18 | Jumptap, Inc. | User characteristic influenced search results |
US7660581B2 (en) | 2005-09-14 | 2010-02-09 | Jumptap, Inc. | Managing sponsored content based on usage history |
US8812526B2 (en) | 2005-09-14 | 2014-08-19 | Millennial Media, Inc. | Mobile content cross-inventory yield optimization |
US8819659B2 (en) | 2005-09-14 | 2014-08-26 | Millennial Media, Inc. | Mobile search service instant activation |
US9076175B2 (en) | 2005-09-14 | 2015-07-07 | Millennial Media, Inc. | Mobile comparison shopping |
US7676394B2 (en) | 2005-09-14 | 2010-03-09 | Jumptap, Inc. | Dynamic bidding and expected value |
US9058406B2 (en) | 2005-09-14 | 2015-06-16 | Millennial Media, Inc. | Management of multiple advertising inventories using a monetization platform |
US20110313853A1 (en) | 2005-09-14 | 2011-12-22 | Jorey Ramer | System for targeting advertising content to a plurality of mobile communication facilities |
US8027879B2 (en) | 2005-11-05 | 2011-09-27 | Jumptap, Inc. | Exclusivity bidding for mobile sponsored content |
US7912458B2 (en) | 2005-09-14 | 2011-03-22 | Jumptap, Inc. | Interaction analysis and prioritization of mobile content |
US8131271B2 (en) | 2005-11-05 | 2012-03-06 | Jumptap, Inc. | Categorization of a mobile user profile based on browse behavior |
US9201979B2 (en) | 2005-09-14 | 2015-12-01 | Millennial Media, Inc. | Syndication of a behavioral profile associated with an availability condition using a monetization platform |
US8209344B2 (en) | 2005-09-14 | 2012-06-26 | Jumptap, Inc. | Embedding sponsored content in mobile applications |
US10038756B2 (en) | 2005-09-14 | 2018-07-31 | Millenial Media LLC | Managing sponsored content based on device characteristics |
US8311888B2 (en) | 2005-09-14 | 2012-11-13 | Jumptap, Inc. | Revenue models associated with syndication of a behavioral profile using a monetization platform |
US8666376B2 (en) | 2005-09-14 | 2014-03-04 | Millennial Media | Location based mobile shopping affinity program |
US8238888B2 (en) | 2006-09-13 | 2012-08-07 | Jumptap, Inc. | Methods and systems for mobile coupon placement |
US8615719B2 (en) | 2005-09-14 | 2013-12-24 | Jumptap, Inc. | Managing sponsored content for delivery to mobile communication facilities |
US7769764B2 (en) | 2005-09-14 | 2010-08-03 | Jumptap, Inc. | Mobile advertisement syndication |
US8290810B2 (en) | 2005-09-14 | 2012-10-16 | Jumptap, Inc. | Realtime surveying within mobile sponsored content |
US20070198485A1 (en) * | 2005-09-14 | 2007-08-23 | Jorey Ramer | Mobile search service discovery |
US9471925B2 (en) | 2005-09-14 | 2016-10-18 | Millennial Media Llc | Increasing mobile interactivity |
US8364540B2 (en) | 2005-09-14 | 2013-01-29 | Jumptap, Inc. | Contextual targeting of content using a monetization platform |
US8156128B2 (en) | 2005-09-14 | 2012-04-10 | Jumptap, Inc. | Contextual mobile content placement on a mobile communication facility |
US10592930B2 (en) | 2005-09-14 | 2020-03-17 | Millenial Media, LLC | Syndication of a behavioral profile using a monetization platform |
US7752209B2 (en) | 2005-09-14 | 2010-07-06 | Jumptap, Inc. | Presenting sponsored content on a mobile communication facility |
US8433297B2 (en) | 2005-11-05 | 2013-04-30 | Jumptag, Inc. | System for targeting advertising content to a plurality of mobile communication facilities |
US8989718B2 (en) | 2005-09-14 | 2015-03-24 | Millennial Media, Inc. | Idle screen advertising |
US8195133B2 (en) | 2005-09-14 | 2012-06-05 | Jumptap, Inc. | Mobile dynamic advertisement creation and placement |
US7860871B2 (en) | 2005-09-14 | 2010-12-28 | Jumptap, Inc. | User history influenced search results |
US8503995B2 (en) | 2005-09-14 | 2013-08-06 | Jumptap, Inc. | Mobile dynamic advertisement creation and placement |
US8688671B2 (en) | 2005-09-14 | 2014-04-01 | Millennial Media | Managing sponsored content based on geographic region |
US8229914B2 (en) | 2005-09-14 | 2012-07-24 | Jumptap, Inc. | Mobile content spidering and compatibility determination |
US8832100B2 (en) | 2005-09-14 | 2014-09-09 | Millennial Media, Inc. | User transaction history influenced search results |
US8103545B2 (en) | 2005-09-14 | 2012-01-24 | Jumptap, Inc. | Managing payment for sponsored content presented to mobile communication facilities |
US8302030B2 (en) | 2005-09-14 | 2012-10-30 | Jumptap, Inc. | Management of multiple advertising inventories using a monetization platform |
US8312021B2 (en) * | 2005-09-16 | 2012-11-13 | Palo Alto Research Center Incorporated | Generalized latent semantic analysis |
US8175585B2 (en) | 2005-11-05 | 2012-05-08 | Jumptap, Inc. | System for targeting advertising content to a plurality of mobile communication facilities |
US8571999B2 (en) | 2005-11-14 | 2013-10-29 | C. S. Lee Crawford | Method of conducting operations for a social network application including activity list generation |
US8429184B2 (en) * | 2005-12-05 | 2013-04-23 | Collarity Inc. | Generation of refinement terms for search queries |
US8903810B2 (en) | 2005-12-05 | 2014-12-02 | Collarity, Inc. | Techniques for ranking search results |
US20080126079A1 (en) * | 2006-01-20 | 2008-05-29 | Research In Motion Limited | Handheld electronic device with automatic text generation |
US7676460B2 (en) * | 2006-03-03 | 2010-03-09 | International Business Machines Corporation | Techniques for providing suggestions for creating a search query |
US7921099B2 (en) | 2006-05-10 | 2011-04-05 | Inquira, Inc. | Guided navigation system |
US8781813B2 (en) | 2006-08-14 | 2014-07-15 | Oracle Otc Subsidiary Llc | Intent management tool for identifying concepts associated with a plurality of users' queries |
US7921154B2 (en) * | 2006-08-17 | 2011-04-05 | Flash Widgets, L.L.C. | System and method of live data search on a mobile device |
KR100837750B1 (en) * | 2006-08-25 | 2008-06-13 | 엔에이치엔(주) | Method for searching chinese language using tone signs and system for executing the method |
US7747607B2 (en) * | 2006-09-21 | 2010-06-29 | Yahoo! Inc. | Determining logically-related sub-strings of a string |
US9037581B1 (en) * | 2006-09-29 | 2015-05-19 | Google Inc. | Personalized search result ranking |
US8442972B2 (en) | 2006-10-11 | 2013-05-14 | Collarity, Inc. | Negative associations for search results ranking and refinement |
US7739264B2 (en) * | 2006-11-15 | 2010-06-15 | Yahoo! Inc. | System and method for generating substitutable queries on the basis of one or more features |
US8095476B2 (en) * | 2006-11-27 | 2012-01-10 | Inquira, Inc. | Automated support scheme for electronic forms |
US8024319B2 (en) * | 2007-01-25 | 2011-09-20 | Microsoft Corporation | Finite-state model for processing web queries |
US20080228700A1 (en) | 2007-03-16 | 2008-09-18 | Expanse Networks, Inc. | Attribute Combination Discovery |
US7917528B1 (en) * | 2007-04-02 | 2011-03-29 | Google Inc. | Contextual display of query refinements |
US8074234B2 (en) * | 2007-04-16 | 2011-12-06 | Microsoft Corporation | Web service platform for keyword technologies |
KR20080096005A (en) * | 2007-04-26 | 2008-10-30 | 엔에이치엔(주) | Method for providing keyword depending on a range of providing keyword and system thereof |
JP2009031931A (en) * | 2007-07-25 | 2009-02-12 | Univ Waseda | Search word clustering device, method, program and recording medium |
US8086441B1 (en) * | 2007-07-27 | 2011-12-27 | Sonicwall, Inc. | Efficient string search |
US20090043752A1 (en) | 2007-08-08 | 2009-02-12 | Expanse Networks, Inc. | Predicting Side Effect Attributes |
US7822732B2 (en) * | 2007-08-13 | 2010-10-26 | Chandra Bodapati | Method and system to enable domain specific search |
CN101159967B (en) * | 2007-10-29 | 2011-08-31 | 中国移动通信集团设计院有限公司 | Method and device for using drive test data for propagation model revision |
US7945525B2 (en) * | 2007-11-09 | 2011-05-17 | International Business Machines Corporation | Methods for obtaining improved text similarity measures which replace similar characters with a string pattern representation by using a semantic data tree |
US8725756B1 (en) | 2007-11-12 | 2014-05-13 | Google Inc. | Session-based query suggestions |
US8019748B1 (en) | 2007-11-14 | 2011-09-13 | Google Inc. | Web search refinement |
US7953746B1 (en) | 2007-12-07 | 2011-05-31 | Google Inc. | Contextual query revision |
US10176827B2 (en) | 2008-01-15 | 2019-01-08 | Verint Americas Inc. | Active lab |
US8224845B2 (en) * | 2008-01-21 | 2012-07-17 | International Business Machines Corporation | Transaction prediction modeling method |
US20090187540A1 (en) * | 2008-01-22 | 2009-07-23 | Microsoft Corporation | Prediction of informational interests |
US8122011B1 (en) | 2008-03-12 | 2012-02-21 | Google Inc. | Identifying sibling queries |
US7958136B1 (en) * | 2008-03-18 | 2011-06-07 | Google Inc. | Systems and methods for identifying similar documents |
US8832135B2 (en) * | 2008-05-02 | 2014-09-09 | Verint Systems, Ltd. | Method and system for database query term suggestion |
JP2010003015A (en) * | 2008-06-18 | 2010-01-07 | Hitachi Software Eng Co Ltd | Document search system |
US8438178B2 (en) | 2008-06-26 | 2013-05-07 | Collarity Inc. | Interactions among online digital identities |
US8521731B2 (en) | 2008-07-09 | 2013-08-27 | Yahoo! Inc. | Systems and methods for query expansion in sponsored search |
US8200509B2 (en) | 2008-09-10 | 2012-06-12 | Expanse Networks, Inc. | Masked data record access |
US7917438B2 (en) * | 2008-09-10 | 2011-03-29 | Expanse Networks, Inc. | System for secure mobile healthcare selection |
US9092517B2 (en) * | 2008-09-23 | 2015-07-28 | Microsoft Technology Licensing, Llc | Generating synonyms based on query log data |
WO2010035412A1 (en) * | 2008-09-25 | 2010-04-01 | 日本電気株式会社 | Data analysis device, data analysis method and program |
US8156111B2 (en) * | 2008-11-24 | 2012-04-10 | Yahoo! Inc. | Identifying and expanding implicitly temporally qualified queries |
US10489434B2 (en) * | 2008-12-12 | 2019-11-26 | Verint Americas Inc. | Leveraging concepts with information retrieval techniques and knowledge bases |
US8386519B2 (en) | 2008-12-30 | 2013-02-26 | Expanse Networks, Inc. | Pangenetic web item recommendation system |
US20100169262A1 (en) * | 2008-12-30 | 2010-07-01 | Expanse Networks, Inc. | Mobile Device for Pangenetic Web |
US8108406B2 (en) | 2008-12-30 | 2012-01-31 | Expanse Networks, Inc. | Pangenetic web user behavior prediction system |
US9659257B2 (en) * | 2009-01-12 | 2017-05-23 | Alphatrac, Inc. | Predictive cueing |
CN101464897A (en) * | 2009-01-12 | 2009-06-24 | 阿里巴巴集团控股有限公司 | Word matching and information query method and device |
US9330165B2 (en) * | 2009-02-13 | 2016-05-03 | Microsoft Technology Licensing, Llc | Context-aware query suggestion by mining log data |
JP5129194B2 (en) * | 2009-05-20 | 2013-01-23 | ヤフー株式会社 | Product search device |
US8943094B2 (en) | 2009-09-22 | 2015-01-27 | Next It Corporation | Apparatus, system, and method for natural language processing |
US8494852B2 (en) | 2010-01-05 | 2013-07-23 | Google Inc. | Word-level correction of speech input |
US8875038B2 (en) * | 2010-01-19 | 2014-10-28 | Collarity, Inc. | Anchoring for content synchronization |
US20120284305A1 (en) * | 2010-01-19 | 2012-11-08 | Nec Corporation | Trend information search device, trend information search method and recording medium |
CN102193939B (en) * | 2010-03-10 | 2016-04-06 | 阿里巴巴集团控股有限公司 | The implementation method of information navigation, information navigation server and information handling system |
US9165065B2 (en) * | 2010-03-26 | 2015-10-20 | Paypal Inc. | Terminology management database |
US20110258212A1 (en) * | 2010-04-14 | 2011-10-20 | Microsoft Corporation | Automatic query suggestion generation using sub-queries |
US9600566B2 (en) | 2010-05-14 | 2017-03-21 | Microsoft Technology Licensing, Llc | Identifying entity synonyms |
US20110314001A1 (en) * | 2010-06-18 | 2011-12-22 | Microsoft Corporation | Performing query expansion based upon statistical analysis of structured data |
US8751520B1 (en) * | 2010-06-23 | 2014-06-10 | Google Inc. | Query suggestions with high utility |
US8560562B2 (en) * | 2010-07-22 | 2013-10-15 | Google Inc. | Predictive query suggestion caching |
EP2423830A1 (en) * | 2010-08-25 | 2012-02-29 | Omikron Data Quality GmbH | Method for searching through a number of databases and search engine |
CN102385577A (en) * | 2010-08-27 | 2012-03-21 | 腾讯科技（深圳）有限公司 | Searching method and system |
US8838453B2 (en) * | 2010-08-31 | 2014-09-16 | Red Hat, Inc. | Interactive input method |
EP2622457A4 (en) * | 2010-09-27 | 2018-02-21 | Exxonmobil Upstream Research Company | Simultaneous source encoding and source separation as a practical solution for full wavefield inversion |
US9122744B2 (en) | 2010-10-11 | 2015-09-01 | Next It Corporation | System and method for providing distributed intelligent assistance |
JP5740003B2 (en) * | 2010-10-21 | 2015-06-24 | クアルコム，インコーポレイテッド | Search multiple data sources using mobile computing devices |
US8448089B2 (en) | 2010-10-26 | 2013-05-21 | Microsoft Corporation | Context-aware user input prediction |
KR101361403B1 (en) * | 2010-11-10 | 2014-02-11 | 라쿠텐 인코포레이티드 | Related-word registration device, information processing device, related-word registration method, and recording medium |
US9098569B1 (en) * | 2010-12-10 | 2015-08-04 | Amazon Technologies, Inc. | Generating suggested search queries |
CN102567408B (en) | 2010-12-31 | 2014-06-04 | 阿里巴巴集团控股有限公司 | Method and device for recommending search keyword |
US20120179705A1 (en) * | 2011-01-11 | 2012-07-12 | Microsoft Corporation | Query reformulation in association with a search box |
US20120185332A1 (en) * | 2011-01-14 | 2012-07-19 | Google Inc. | Serving Advertisements Based on Article Availability |
US20120233140A1 (en) * | 2011-03-09 | 2012-09-13 | Microsoft Corporation | Context-aware query alteration |
US8983995B2 (en) | 2011-04-15 | 2015-03-17 | Microsoft Corporation | Interactive semantic query suggestion for content search |
WO2012143839A1 (en) * | 2011-04-19 | 2012-10-26 | Greyling Abraham Carel | A computerized system and a method for processing and building search strings |
US9646108B2 (en) * | 2011-05-10 | 2017-05-09 | Uber Technologies, Inc. | Systems and methods for performing geo-search and retrieval of electronic documents using a big index |
US8972240B2 (en) * | 2011-05-19 | 2015-03-03 | Microsoft Corporation | User-modifiable word lattice display for editing documents and search queries |
WO2012159245A1 (en) * | 2011-05-20 | 2012-11-29 | Microsoft Corporation | Displaying key pinyins |
CN102262660B (en) * | 2011-07-15 | 2013-05-29 | 北京百度网讯科技有限公司 | Method and device implemented by computer and used for obtaining search result |
US9058362B2 (en) * | 2011-07-26 | 2015-06-16 | 24/7 Customer, Inc. | Method and apparatus for predictive enrichment of search in an enterprise |
CN102306171B (en) * | 2011-08-22 | 2016-07-06 | 百度在线网络技术（北京）有限公司 | A kind of for providing network to access suggestion and the method and apparatus of web search suggestion |
US20130054632A1 (en) * | 2011-08-30 | 2013-02-28 | Google Inc. | Caching Input Suggestions |
JP5347083B2 (en) * | 2011-09-29 | 2013-11-20 | 楽天株式会社 | Information processing apparatus, information processing method, information processing apparatus program, and recording medium |
US9652556B2 (en) | 2011-10-05 | 2017-05-16 | Google Inc. | Search suggestions based on viewport content |
US10013152B2 (en) | 2011-10-05 | 2018-07-03 | Google Llc | Content selection disambiguation |
CN102368262B (en) * | 2011-10-14 | 2013-05-29 | 北京百度网讯科技有限公司 | Method and equipment for providing searching suggestions corresponding to query sequence |
US9189550B2 (en) * | 2011-11-17 | 2015-11-17 | Microsoft Technology Licensing, Llc | Query refinement in a browser toolbar |
US9836177B2 (en) | 2011-12-30 | 2017-12-05 | Next IT Innovation Labs, LLC | Providing variable responses in a virtual-assistant environment |
CN102419776A (en) * | 2011-12-31 | 2012-04-18 | 北京百度网讯科技有限公司 | Method and equipment for meeting multi-dimensional search requirement of user |
US9152698B1 (en) | 2012-01-03 | 2015-10-06 | Google Inc. | Substitute term identification based on over-represented terms identification |
US9141672B1 (en) | 2012-01-25 | 2015-09-22 | Google Inc. | Click or skip evaluation of query term optionalization rule |
EP2817739A4 (en) | 2012-02-22 | 2016-04-20 | Nokia Technologies Oy | A system, and a method for providing a predition for controlling a system |
CN104246757B (en) * | 2012-02-22 | 2018-11-06 | 诺基亚技术有限公司 | Predictive service access |
US8745019B2 (en) | 2012-03-05 | 2014-06-03 | Microsoft Corporation | Robust discovery of entity synonyms using query logs |
US20130238636A1 (en) * | 2012-03-06 | 2013-09-12 | Salesforce.Com, Inc. | Suggesting access-controlled related queries |
US9223537B2 (en) | 2012-04-18 | 2015-12-29 | Next It Corporation | Conversation user interface |
US11023520B1 (en) | 2012-06-01 | 2021-06-01 | Google Llc | Background audio identification for query disambiguation |
US10032131B2 (en) | 2012-06-20 | 2018-07-24 | Microsoft Technology Licensing, Llc | Data services for enterprises leveraging search system data assets |
US9594831B2 (en) | 2012-06-22 | 2017-03-14 | Microsoft Technology Licensing, Llc | Targeted disambiguation of named entities |
CN103577401A (en) * | 2012-07-18 | 2014-02-12 | 腾讯科技（深圳）有限公司 | Mobile terminal searching method and system |
CN103577416B (en) * | 2012-07-20 | 2017-09-22 | 阿里巴巴集团控股有限公司 | Expanding query method and system |
US9128915B2 (en) * | 2012-08-03 | 2015-09-08 | Oracle International Corporation | System and method for utilizing multiple encodings to identify similar language characters |
US9135912B1 (en) * | 2012-08-15 | 2015-09-15 | Google Inc. | Updating phonetic dictionaries |
US9229924B2 (en) | 2012-08-24 | 2016-01-05 | Microsoft Technology Licensing, Llc | Word detection and domain dictionary recommendation |
US9536049B2 (en) | 2012-09-07 | 2017-01-03 | Next It Corporation | Conversational virtual healthcare assistant |
US9146966B1 (en) | 2012-10-04 | 2015-09-29 | Google Inc. | Click or skip evaluation of proximity rules |
US9471881B2 (en) * | 2013-01-21 | 2016-10-18 | International Business Machines Corporation | Transductive feature selection with maximum-relevancy and minimum-redundancy criteria |
US10102333B2 (en) | 2013-01-21 | 2018-10-16 | International Business Machines Corporation | Feature selection for efficient epistasis modeling for phenotype prediction |
US9218420B1 (en) | 2013-02-26 | 2015-12-22 | Google Inc. | Detecting new businesses with unrecognized query terms |
US9619046B2 (en) | 2013-02-27 | 2017-04-11 | Facebook, Inc. | Determining phrase objects based on received user input context information |
US9122376B1 (en) * | 2013-04-18 | 2015-09-01 | Google Inc. | System for improving autocompletion of text input |
US10445115B2 (en) | 2013-04-18 | 2019-10-15 | Verint Americas Inc. | Virtual assistant focused user interfaces |
KR101332757B1 (en) * | 2013-05-16 | 2013-11-25 | 주식회사 큐키 | Type correction method for word or letters without deletion input and device for implementing the method |
US9256687B2 (en) * | 2013-06-28 | 2016-02-09 | International Business Machines Corporation | Augmenting search results with interactive search matrix |
US9342592B2 (en) | 2013-07-29 | 2016-05-17 | Workday, Inc. | Method for systematic mass normalization of titles |
US9886950B2 (en) * | 2013-09-08 | 2018-02-06 | Intel Corporation | Automatic generation of domain models for virtual personal assistants |
US11210705B1 (en) * | 2013-10-18 | 2021-12-28 | United Services Automobile Association (Usaa) | System and method for transmitting direct advertising information to an augmented reality device |
JP2017504105A (en) * | 2013-12-02 | 2017-02-02 | キューベース リミテッド ライアビリティ カンパニー | System and method for in-memory database search |
US10176256B1 (en) * | 2013-12-23 | 2019-01-08 | BroadbandTV, Corp | Title rating and improvement process and system |
US9823811B2 (en) | 2013-12-31 | 2017-11-21 | Next It Corporation | Virtual assistant team identification |
CN104899214B (en) * | 2014-03-06 | 2018-05-22 | 阿里巴巴集团控股有限公司 | A kind of data processing method and system established input and suggested |
US10546336B2 (en) * | 2014-03-07 | 2020-01-28 | Rakuten, Inc. | Search device, search method, program, and storage medium |
CN104978314B (en) * | 2014-04-01 | 2019-05-14 | 深圳市腾讯计算机系统有限公司 | Media content recommendations method and device |
WO2015162719A1 (en) * | 2014-04-23 | 2015-10-29 | 楽天株式会社 | Information provision device, information provision method, program, and recording medium |
CN104090963A (en) * | 2014-07-14 | 2014-10-08 | 百度在线网络技术（北京）有限公司 | Search information recommendation method and device |
US9798801B2 (en) | 2014-07-16 | 2017-10-24 | Microsoft Technology Licensing, Llc | Observation-based query interpretation model modification |
US20160071517A1 (en) | 2014-09-09 | 2016-03-10 | Next It Corporation | Evaluating Conversation Data based on Risk Factors |
CN104361010A (en) * | 2014-10-11 | 2015-02-18 | 北京中搜网络技术股份有限公司 | Automatic classification method for correcting news classification |
CN104462595B (en) * | 2014-12-29 | 2019-03-19 | 北京奇虎科技有限公司 | Search engine system and the method that multimedia element is embedded in search result items |
US10339165B2 (en) * | 2015-02-27 | 2019-07-02 | Walmart Apollo, Llc | System, method, and non-transitory computer-readable storage media for generating synonyms of a search query |
EP3089159B1 (en) | 2015-04-28 | 2019-08-28 | Google LLC | Correcting voice recognition using selective re-speak |
CN104991656B (en) * | 2015-06-11 | 2018-12-21 | 浦江开丰广告设计有限公司 | A method of input Chinese phrase |
US11899728B2 (en) | 2015-10-05 | 2024-02-13 | Yahoo Assets Llc | Methods, systems and techniques for ranking personalized and generic search query suggestions |
US11836169B2 (en) * | 2015-10-05 | 2023-12-05 | Yahoo Assets Llc | Methods, systems and techniques for providing search query suggestions based on non-personal data and user personal data according to availability of user personal data |
EP3232336A4 (en) * | 2015-12-01 | 2018-03-21 | Huawei Technologies Co., Ltd. | Method and device for recognizing stop word |
US11379538B1 (en) | 2016-05-19 | 2022-07-05 | Artemis Intelligence Llc | Systems and methods for automatically identifying unmet technical needs and/or technical problems |
CN106126758B (en) * | 2016-08-30 | 2021-01-05 | 西安航空学院 | Cloud system for information processing and information evaluation |
TWI645303B (en) * | 2016-12-21 | 2018-12-21 | 財團法人工業技術研究院 | Method for verifying string, method for expanding string and method for training verification model |
US11392651B1 (en) | 2017-04-14 | 2022-07-19 | Artemis Intelligence Llc | Systems and methods for automatically identifying unmet technical needs and/or technical problems |
GB201713728D0 (en) * | 2017-08-25 | 2017-10-11 | Just Eat Holding Ltd | System and method of language processing |
US11100169B2 (en) | 2017-10-06 | 2021-08-24 | Target Brands, Inc. | Alternative query suggestion in electronic searching |
US11416503B2 (en) | 2018-02-09 | 2022-08-16 | Microsoft Technology Licensing, Llc | Mining data for generating consumable collaboration events |
EP3769238A4 (en) | 2018-03-19 | 2022-01-26 | Coffing, Daniel L. | Processing natural language arguments and propositions |
JP7059727B2 (en) * | 2018-03-19 | 2022-04-26 | 株式会社リコー | Electronics, search methods, and programs |
US10853332B2 (en) * | 2018-04-19 | 2020-12-01 | Microsoft Technology Licensing, Llc | Discovering schema using anchor attributes |
EP3579125A1 (en) * | 2018-06-05 | 2019-12-11 | Sap Se | System, computer-implemented method and computer program product for information retrieval |
US10860631B1 (en) * | 2018-06-21 | 2020-12-08 | Intuit Inc. | Searching and scoring using phrases and/or multiple words |
US10943059B2 (en) * | 2018-06-27 | 2021-03-09 | Microsoft Technology Licensing, Llc | Document editing models and management |
EP3847643A4 (en) | 2018-09-06 | 2022-04-20 | Coffing, Daniel L. | System for providing dialogue guidance |
US11568175B2 (en) | 2018-09-07 | 2023-01-31 | Verint Americas Inc. | Dynamic intent classification based on environment variables |
WO2020056409A1 (en) | 2018-09-14 | 2020-03-19 | Coffing Daniel L | Fact management system |
US11196863B2 (en) | 2018-10-24 | 2021-12-07 | Verint Americas Inc. | Method and system for virtual assistant conversations |
US11144560B2 (en) | 2019-08-23 | 2021-10-12 | International Business Machines Corporation | Utilizing unsumbitted user input data for improved task performance |
CN111222058B (en) * | 2020-01-06 | 2021-04-16 | 百度在线网络技术（北京）有限公司 | Method, device, equipment and computer storage medium for query automatic completion |
JP2021192142A (en) * | 2020-06-05 | 2021-12-16 | 富士フイルムビジネスイノベーション株式会社 | Information processing device and program |
US11762916B1 (en) | 2020-08-17 | 2023-09-19 | Artemis Intelligence Llc | User interface for identifying unmet technical needs and/or technical problems |
US11416554B2 (en) * | 2020-09-10 | 2022-08-16 | Coupang Corp. | Generating context relevant search results |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080172164A1 (en) * | 2007-01-15 | 2008-07-17 | Denso Corporation | Electronic engine control apparatus having improved configuration for ensuring excellent engine startability |
Family Cites Families (64)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5265065A (en) * | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US5331554A (en) * | 1992-12-10 | 1994-07-19 | Ricoh Corporation | Method and apparatus for semantic pattern matching for text retrieval |
EP0834139A4 (en) * | 1995-06-07 | 1998-08-05 | Int Language Engineering Corp | Machine assisted translation tools |
US6006221A (en) * | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US6182066B1 (en) * | 1997-11-26 | 2001-01-30 | International Business Machines Corp. | Category processing of query topics and electronic document content topics |
US6345244B1 (en) * | 1998-05-27 | 2002-02-05 | Lionbridge Technologies, Inc. | System, method, and product for dynamically aligning translations in a translation-memory system |
US6006225A (en) | 1998-06-15 | 1999-12-21 | Amazon.Com | Refining search queries by the suggestion of correlated terms from prior searches |
US6411950B1 (en) * | 1998-11-30 | 2002-06-25 | Compaq Information Technologies Group, Lp | Dynamic query expansion |
US7287018B2 (en) * | 1999-01-29 | 2007-10-23 | Canon Kabushiki Kaisha | Browsing electronically-accessible resources |
CA2366057C (en) * | 1999-03-05 | 2009-03-24 | Canon Kabushiki Kaisha | Database annotation and retrieval |
US6510406B1 (en) * | 1999-03-23 | 2003-01-21 | Mathsoft, Inc. | Inverse inference engine for high performance web search |
US6571234B1 (en) * | 1999-05-11 | 2003-05-27 | Prophet Financial Systems, Inc. | System and method for managing online message board |
US6314419B1 (en) | 1999-06-04 | 2001-11-06 | Oracle Corporation | Methods and apparatus for generating query feedback based on co-occurrence patterns |
US6611825B1 (en) * | 1999-06-09 | 2003-08-26 | The Boeing Company | Method and system for text mining using multidimensional subspaces |
AU6200300A (en) | 1999-06-24 | 2001-01-09 | Simpli.Com | Search engine interface |
US7089236B1 (en) * | 1999-06-24 | 2006-08-08 | Search 123.Com, Inc. | Search engine interface |
US6882970B1 (en) * | 1999-10-28 | 2005-04-19 | Canon Kabushiki Kaisha | Language recognition using sequence frequency |
US6757646B2 (en) * | 2000-03-22 | 2004-06-29 | Insightful Corporation | Extended functionality for an inverse inference engine based web search |
GB0011798D0 (en) * | 2000-05-16 | 2000-07-05 | Canon Kk | Database annotation and retrieval |
US6633868B1 (en) * | 2000-07-28 | 2003-10-14 | Shermann Loyall Min | System and method for context-based document retrieval |
EP1182581B1 (en) * | 2000-08-18 | 2005-01-26 | Exalead | Searching tool and process for unified search using categories and keywords |
US20030217052A1 (en) * | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US20020103798A1 (en) * | 2001-02-01 | 2002-08-01 | Abrol Mani S. | Adaptive document ranking method based on user behavior |
US7269546B2 (en) * | 2001-05-09 | 2007-09-11 | International Business Machines Corporation | System and method of finding documents related to other documents and of finding related words in response to a query to refine a search |
JP3918531B2 (en) * | 2001-11-29 | 2007-05-23 | 株式会社日立製作所 | Similar document search method and system |
US6961719B1 (en) * | 2002-01-07 | 2005-11-01 | The United States Of America As Represented By The Administrator Of The National Aeronautics And Space Administration | Hybrid neural network and support vector machine method for optimization |
JP4003468B2 (en) * | 2002-02-05 | 2007-11-07 | 株式会社日立製作所 | Method and apparatus for retrieving similar data by relevance feedback |
AU2003227558A1 (en) * | 2002-04-05 | 2003-10-20 | Hyperwave Software Forschungs- Und Entwicklungs Gmbh | Data visualization system |
US6847966B1 (en) * | 2002-04-24 | 2005-01-25 | Engenium Corporation | Method and system for optimally searching a document database using a representative semantic space |
GB2388940A (en) * | 2002-05-22 | 2003-11-26 | Sharp Kk | Method and apparatus for the correction or improvement of word usage |
EP2109048A1 (en) * | 2002-08-30 | 2009-10-14 | Sony Deutschland Gmbh | Methods to create a user profile and to specify a suggestion for a next selection of a user |
US20040086185A1 (en) * | 2002-10-31 | 2004-05-06 | Eastman Kodak Company | Method and system for multiple cue integration |
US7287025B2 (en) | 2003-02-12 | 2007-10-23 | Microsoft Corporation | Systems and methods for query expansion |
US6947930B2 (en) * | 2003-03-21 | 2005-09-20 | Overture Services, Inc. | Systems and methods for interactive search query refinement |
US7563748B2 (en) | 2003-06-23 | 2009-07-21 | Cognis Ip Management Gmbh | Alcohol alkoxylate carriers for pesticide active ingredients |
US8856163B2 (en) * | 2003-07-28 | 2014-10-07 | Google Inc. | System and method for providing a user interface with search query broadening |
US8086619B2 (en) | 2003-09-05 | 2011-12-27 | Google Inc. | System and method for providing search query refinements |
JP4292922B2 (en) * | 2003-09-09 | 2009-07-08 | 株式会社日立製作所 | Document search system and method |
US20050076003A1 (en) * | 2003-10-06 | 2005-04-07 | Dubose Paul A. | Method and apparatus for delivering personalized search results |
US7231375B2 (en) * | 2003-10-10 | 2007-06-12 | Microsoft Corporation | Computer aided query to task mapping |
US20050149496A1 (en) * | 2003-12-22 | 2005-07-07 | Verity, Inc. | System and method for dynamic context-sensitive federated search of multiple information repositories |
US7739262B2 (en) * | 2004-03-19 | 2010-06-15 | Microsoft Corporation | Enforcing currency and consistency constraints in database query processing |
US7428529B2 (en) * | 2004-04-15 | 2008-09-23 | Microsoft Corporation | Term suggestion for multi-sense query |
US7689585B2 (en) * | 2004-04-15 | 2010-03-30 | Microsoft Corporation | Reinforced clustering of multi-type data objects for search term suggestion |
US20050289463A1 (en) * | 2004-06-23 | 2005-12-29 | Google Inc., A Delaware Corporation | Systems and methods for spell correction of non-roman characters and words |
US20060106769A1 (en) * | 2004-11-12 | 2006-05-18 | Gibbs Kevin A | Method and system for autocompletion for languages having ideographs and phonetic characters |
US20060112091A1 (en) * | 2004-11-24 | 2006-05-25 | Harbinger Associates, Llc | Method and system for obtaining collection of variants of search query subjects |
US7698270B2 (en) * | 2004-12-29 | 2010-04-13 | Baynote, Inc. | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US7636714B1 (en) * | 2005-03-31 | 2009-12-22 | Google Inc. | Determining query term synonyms within query context |
WO2006113597A2 (en) * | 2005-04-14 | 2006-10-26 | The Regents Of The University Of California | Method for information retrieval |
US8438142B2 (en) | 2005-05-04 | 2013-05-07 | Google Inc. | Suggesting and refining user input based on original user input |
US7627564B2 (en) | 2005-06-21 | 2009-12-01 | Microsoft Corporation | High scale adaptive search systems and methods |
US7603348B2 (en) * | 2007-01-26 | 2009-10-13 | Yahoo! Inc. | System for classifying a search query |
US20080256056A1 (en) | 2007-04-10 | 2008-10-16 | Yahoo! Inc. | System for building a data structure representing a network of users and advertisers |
US8086504B1 (en) | 2007-09-06 | 2011-12-27 | Amazon Technologies, Inc. | Tag suggestions based on item metadata |
US8583670B2 (en) | 2007-10-04 | 2013-11-12 | Microsoft Corporation | Query suggestions for no result web searches |
US8019748B1 (en) * | 2007-11-14 | 2011-09-13 | Google Inc. | Web search refinement |
US20090171929A1 (en) | 2007-12-26 | 2009-07-02 | Microsoft Corporation | Toward optimized query suggeston: user interfaces and algorithms |
US20090248510A1 (en) | 2008-03-31 | 2009-10-01 | Yahoo! Inc. | Information retrieval using dynamic guided navigation |
US20090248669A1 (en) | 2008-04-01 | 2009-10-01 | Nitin Mangesh Shetti | Method and system for organizing information |
US20100185644A1 (en) | 2009-01-21 | 2010-07-22 | Microsoft Corporatoin | Automatic search suggestions from client-side, browser, history cache |
US8452794B2 (en) | 2009-02-11 | 2013-05-28 | Microsoft Corporation | Visual and textual query suggestion |
US9330165B2 (en) | 2009-02-13 | 2016-05-03 | Microsoft Technology Licensing, Llc | Context-aware query suggestion by mining log data |
US8275759B2 (en) | 2009-02-24 | 2012-09-25 | Microsoft Corporation | Contextual query suggestion in result pages |
-
2005
- 2005-05-04 US US11/122,873 patent/US8438142B2/en active Active
-
2006
- 2006-05-04 WO PCT/US2006/016787 patent/WO2006121702A1/en active Application Filing
- 2006-05-04 KR KR1020077028339A patent/KR101389148B1/en active IP Right Grant
- 2006-05-04 CN CN201210199408.7A patent/CN102945237B/en active Active
- 2006-05-04 EP EP06769954A patent/EP1877939A1/en not_active Withdrawn
- 2006-05-04 CN CNA2006800219402A patent/CN101297291A/en active Pending
- 2006-05-04 JP JP2008510125A patent/JP5203934B2/en active Active
-
2012
- 2012-09-13 US US13/615,518 patent/US9020924B2/en active Active
-
2015
- 2015-04-14 US US14/686,555 patent/US9411906B2/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080172164A1 (en) * | 2007-01-15 | 2008-07-17 | Denso Corporation | Electronic engine control apparatus having improved configuration for ensuring excellent engine startability |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10474704B2 (en) * | 2016-06-27 | 2019-11-12 | International Business Machines Corporation | Recommending documents sets based on a similar set of correlated features |
US11409775B2 (en) | 2016-06-27 | 2022-08-09 | International Business Machines Corporation | Recommending documents sets based on a similar set of correlated features |
US20180068232A1 (en) * | 2016-09-07 | 2018-03-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Expert-assisted online-learning for media similarity |
US20210073331A1 (en) * | 2019-09-06 | 2021-03-11 | International Business Machines Corporation | Suggestion of an output candidate |
US11829716B2 (en) * | 2019-09-06 | 2023-11-28 | International Business Machines Corporation | Suggestion of an output candidate |
Also Published As
Publication number | Publication date |
---|---|
CN101297291A (en) | 2008-10-29 |
JP5203934B2 (en) | 2013-06-05 |
US9411906B2 (en) | 2016-08-09 |
US20130103696A1 (en) | 2013-04-25 |
KR101389148B1 (en) | 2014-04-24 |
CN102945237B (en) | 2016-08-10 |
CN102945237A (en) | 2013-02-27 |
US9020924B2 (en) | 2015-04-28 |
US20060253427A1 (en) | 2006-11-09 |
JP2008541233A (en) | 2008-11-20 |
WO2006121702A1 (en) | 2006-11-16 |
KR20080008400A (en) | 2008-01-23 |
EP1877939A1 (en) | 2008-01-16 |
US8438142B2 (en) | 2013-05-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9411906B2 (en) | Suggesting and refining user input based on original user input | |
US9875299B2 (en) | System and method for identifying relevant search results via an index | |
Carpineto et al. | A survey of automatic query expansion in information retrieval | |
US9069857B2 (en) | Per-document index for semantic searching | |
US8892550B2 (en) | Source expansion for information retrieval and information extraction | |
US8688727B1 (en) | Generating query refinements | |
US8280721B2 (en) | Efficiently representing word sense probabilities | |
US20100145678A1 (en) | Method, System and Apparatus for Automatic Keyword Extraction | |
WO2009000103A1 (en) | Word probability determination | |
Liu et al. | Information retrieval and Web search | |
JP2014120053A (en) | Question answering device, method, and program | |
US8554539B2 (en) | Method for analyzing morpheme using additional information and morpheme analyzer for executing the method | |
CN111460177B (en) | Video expression search method and device, storage medium and computer equipment | |
US20220121694A1 (en) | Semantic search and response | |
Ren et al. | Role-explicit query extraction and utilization for quantifying user intents | |
US20230087132A1 (en) | Creating action-trigger phrase sets | |
Deng et al. | An Introduction to Query Understanding | |
Bai et al. | Web-scale semantic ranking | |
Yoo et al. | A Semantic Search Model Using Word Embedding, POS Tagging, and Named Entity Recognition | |
Bhatia | Enabling easier information access in online discussion forums | |
Jiang et al. | automatic segmentation of hierarchy feature without lexicon for Chinese text based on iterative learning | |
Kowalski | Ingest |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:WU, JUN;LIN, DEKANG;QIAN, ZHE;AND OTHERS;REEL/FRAME:036076/0280Effective date: 20050502 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
EP3142108A2 - Reducing latency caused by switching input modalities - Google Patents
Reducing latency caused by switching input modalities Download PDFInfo
- Publication number
- EP3142108A2 EP3142108A2 EP16185390.8A EP16185390A EP3142108A2 EP 3142108 A2 EP3142108 A2 EP 3142108A2 EP 16185390 A EP16185390 A EP 16185390A EP 3142108 A2 EP3142108 A2 EP 3142108A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- voice
- input
- text
- processor
- online
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 40
- 238000012545 processing Methods 0.000 claims abstract description 29
- 230000004044 response Effects 0.000 claims abstract description 8
- 230000008569 process Effects 0.000 claims abstract description 5
- 238000006243 chemical reaction Methods 0.000 claims description 56
- 238000004891 communication Methods 0.000 claims description 15
- 230000015654 memory Effects 0.000 claims description 12
- 230000000977 initiatory effect Effects 0.000 claims description 9
- 230000005236 sound signal Effects 0.000 claims description 8
- 230000003213 activating effect Effects 0.000 claims description 2
- 238000004590 computer program Methods 0.000 claims description 2
- 230000009471 action Effects 0.000 description 8
- 239000000463 material Substances 0.000 description 5
- 230000007246 mechanism Effects 0.000 description 3
- 238000013459 approach Methods 0.000 description 2
- 230000009118 appropriate response Effects 0.000 description 2
- 230000003190 augmentative effect Effects 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000006855 networking Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 230000008901 benefit Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000000295 complement effect Effects 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 230000008030 elimination Effects 0.000 description 1
- 238000003379 elimination reaction Methods 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 230000014509 gene expression Effects 0.000 description 1
- 230000001939 inductive effect Effects 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 238000009877 rendering Methods 0.000 description 1
- 210000001525 retina Anatomy 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3329—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
- G06F9/454—Multi-language systems; Localisation; Internationalisation
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/26—Speech to text systems
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/28—Constructional details of speech recognition systems
- G10L15/30—Distributed recognition, e.g. in client-server systems, for mobile phones or network applications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/226—Procedures used during a speech recognition process, e.g. man-machine dialogue using non-speech characteristics
- G10L2015/228—Procedures used during a speech recognition process, e.g. man-machine dialogue using non-speech characteristics of application context
Definitions
- Voice-based user interfaces are increasingly being used in the control of computers and other electronic devices.
- One particularly useful application of a voice-based user interface is with portable electronic devices such as mobile phones, watches, tablet computers, head-mounted devices, virtual or augmented reality devices, etc.
- Another useful application is with vehicular electronic systems such as automotive systems that incorporate navigation and audio capabilities.
- Such applications are generally characterized by non-traditional form factors that limit the utility of more traditional keyboard or touch screen inputs and/or usage in situations where it is desirable to encourage a user to remain focused on other tasks, such as when the user is driving or walking.
- a voice-based user interface e.g., in terms of processor and/or memory resources
- Some conventional voice-based user interface approaches employ a client-server architecture where voice input is received and recorded by a relatively low-power client device, the recording is transmitted over a network such as the Internet to an online service for voice-to-text conversion and semantic processing, and an appropriate response is generated by the online service and transmitted back to the client device.
- Online services can devote substantial computing resources to processing voice input, enabling more complex speech recognition and semantic analysis functionality to be implemented than could otherwise be implemented locally within a client device.
- a client-server approach necessarily requires that a client be online ( i.e., in communication with the online service) when processing voice input.
- This specification is directed generally to various implementations that facilitate reduction and/ or elimination of latency experienced by a user when switching between input modalities, especially where the user switches from a low latency input modality to a high latency input modality.
- a voice-to-text conversion session may be preemptively established when circumstances indicate that a user providing input via a lower latency input modality (e.g ., text) is likely to switch to voice input.
- a method may including the following operations: receiving a first input at a first modality of a multimodal interface associated with an electronic device; and in the electronic device, and responsive to receiving the first input: determining that the first input satisfies a criterion; in response to determining that the first input satisfies a criterion, preemptively establishing a session between the electronic device and a query processor configured to process input received at a second modality of the multimodal interface; receiving a second input at the second modality of the multimodal interface; initiating processing of at least a portion of the second input at the query processor within the session; and building a complete query based on output from the query processor.
- a method may include the following operations: receiving a text input with a voice-enabled device; and in the voice-enabled device, and responsive to receiving the text input: determining that the text input satisfies a criterion; in response to a determination that the text input satisfies a criterion, preemptively establishing a voice-to-text conversion session between the voice-enabled device and a voice-to-text conversion processor; receiving a voice input; initiating processing of at least a portion of the voice input at the voice-to-text conversion processor within the session; and building a complete query based on output from the voice-to-text conversion processor.
- the voice-to-text conversion processor may be an online voice-to-text conversion processor, and the voice-enabled device may include a mobile device configured to communicate with the online voice-to-text conversion processor when in communication with a wireless network.
- initiating processing includes sending data associated with the text input and data associated with the voice input to the online voice-to-text conversion processor.
- sending the data may include sending at least a portion of a digital audio signal of the voice input.
- the online voice-to-text conversion processor may be configured to perform voice-to-text conversion and semantic processing of the portion of the digital audio signal based on the text input to generate the output.
- building the complete query may include combining the output with at least a portion of the text input.
- the output from the voice-to-text conversion processor may include a plurality of candidate interpretations of the voice input, and building the complete query comprises ranking the plurality of candidate interpretations based at least in part on the text input.
- preemptively initiating a voice-to-text conversion session may include activating a microphone of the voice-enabled device.
- the method may further include providing output to indicate that the voice-to-text conversion session is available.
- the criterion may include the text input satisfying a character count or word count threshold. In various implementations, the criterion may include the text input matching a particular language.
- implementations include an apparatus including memory and one or more processors operable to execute instructions stored in the memory, where the instructions are configured to perform any of the aforementioned methods. Some implementations also include a non-transitory computer readable storage medium storing computer instructions executable by one or more processors to perform any of the aforementioned methods.
- an application executing on a resource-constrained electronic device such as a mobile computing device (e.g., a smart phone or smart watch) may provide a so-called "multimodal" interface that supports multiple different input modalities.
- These input modalities may include low latency inputs, such as text, that are responsive to user input without substantial delay, and high latency inputs, such as voice recognition, which exhibit higher latency because they require various latency-inducing routines to occur, such as establishment of a session with a conversion processor that is configured to convert input received via the high latency modality to a form that matches a lower latency input modality.
- the electronic device may preemptively establish a session with a conversion processor, e.g., in response to a determination that a first input satisfies one or more criteria.
- the electronic device is thereby able to immediately initiate processing of the second input by the conversion processor, rather than being required to establish a session first, significantly decreasing delay experienced by a user when switching input modalities.
- Fig. 1 is a block diagram of electronic components in an example computer system 10.
- System 10 typically includes at least one processor 12 that communicates with a number of peripheral devices via bus subsystem 14.
- peripheral devices may include a storage subsystem 16, including, for example, a memory subsystem 18 and a file storage subsystem 20, user interface input devices 22, user interface output devices 24, and a network interface subsystem 26.
- the input and output devices allow user interaction with system 10.
- Network interface subsystem 26 provides an interface to outside networks and is coupled to corresponding interface devices in other computer systems.
- user interface input devices 22 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices.
- pointing devices such as a mouse, trackball, touchpad, or graphics tablet
- audio input devices such as voice recognition systems, microphones, and/or other types of input devices.
- use of the term "input device” is intended to include all possible types of devices and ways to input information into computer system 10 or onto a communication network.
- User interface output devices 24 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices.
- the display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image.
- the display subsystem may also provide non-visual display such as via audio output devices.
- output device is intended to include all possible types of devices and ways to output information from computer system 10 to the user or to another machine or computer system.
- Storage subsystem 16 stores programming and data constructs that provide the functionality of some or all of the modules described herein.
- the storage subsystem 16 may include the logic to perform selected aspects of the methods disclosed hereinafter.
- Memory subsystem 18 used in storage subsystem 16 may include a number of memories including a main random access memory (RAM) 28 for storage of instructions and data during program execution and a read only memory (ROM) 30 in which fixed instructions are stored.
- a file storage subsystem 20 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges.
- the modules implementing the functionality of certain implementations may be stored by file storage subsystem 20 in the storage subsystem 16, or in other machines accessible by the processor(s) 12.
- Bus subsystem 14 provides a mechanism for allowing the various components and subsystems of system 10 to communicate with each other as intended. Although bus subsystem 14 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses.
- System 10 may be of varying types including a mobile device, a portable electronic device, an embedded device, a desktop computer, a laptop computer, a tablet computer, a wearable device, a workstation, a server, a computing cluster, a blade server, a server farm, or any other data processing system or computing device.
- functionality implemented by system 10 may be distributed among multiple systems interconnected with one another over one or more networks, e.g ., in a client-server, peer-to-peer, or other networking arrangement. Due to the ever-changing nature of computers and networks, the description of system 10 depicted in Fig. 1 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of system 10 are possible having more or fewer components than the computer system depicted in Fig. 1 .
- Implementations discussed hereinafter may include one or more methods implementing various combinations of the functionality disclosed herein.
- Other implementations may include a non-transitory computer readable storage medium storing instructions executable by a processor to perform a method such as one or more of the methods described herein.
- Still other implementations may include an apparatus including memory and one or more processors operable to execute instructions, stored in the memory, to perform a method such as one or more of the methods described herein.
- Fig. 2 illustrates an example distributed voice input processing environment 50, e.g., for use with a voice-enabled device 52 in communication with one or more online services such as online search service 54.
- voice-enabled device 52 is described as a mobile device such as a cellular phone or tablet computer.
- Other implementations may utilize a wide variety of other voice-enabled devices, however, so the references hereinafter to mobile devices are merely for the purpose of simplifying the discussion hereinafter.
- voice-enabled devices may use the herein-described functionality, including, for example, laptop computers, watches, head-mounted devices, virtual or augmented reality devices, other wearable devices, audio/video systems, navigation systems, automotive and other vehicular systems, etc.
- voice-enabled devices may be considered to be resource-constrained in that the memory and/or processing capacities of such devices may be constrained based upon technological, economic or other reasons, particularly when compared with the capacities of online or cloud-based services that can devote virtually unlimited computing resources to individual tasks.
- Some such devices may also be considered to be offline devices to the extent that such devices may be capable of operating "offline” and unconnected to an online service at least a portion of time, e.g ., based upon an expectation that such devices may experience temporary network connectivity outages from time to time under ordinary usage.
- Voice-enabled device 52 may be operated to communicate with a variety of online services.
- online search service 54 may be implemented as a cloud-based service employing a cloud infrastructure, e.g ., using a server farm or cluster of high performance computers running software suitable for handling high volumes of requests from multiple users.
- online search service 54 is capable of querying one or more databases to locate requested information, e.g ., to provide a list of web sites including requested information.
- Online search service 54 may not be limited to voice-based searches, and may also be capable of handling other types of searches, e.g., text-based searches, image-based searches, etc.
- Voice-enabled device 52 may communicate with other online systems (not depicted) as well, and these other online systems need not necessarily handle searching.
- some online systems may handle voice-based requests for non-search actions such as setting alarms or reminders, managing lists, initiating communications with other users via phone, text, email, etc., or performing other actions that may be initiated via voice input.
- voice-based requests and other forms of voice input may be collectively referred to as voice-based queries, regardless of whether the voice-based queries seek to initiate a search, pose a question, issue a command, dictate an email or text message, etc.
- any voice input e.g ., including one or more words or phrases, may be considered to be a voice-based query within the context of the illustrated implementations.
- voice input received by voice-enabled device 52 is processed by a voice-enabled search application (or "app") 56.
- voice input may be handled within an operating system or firmware of a voice-enabled device.
- Application 56 in the illustrated implementation provides a multimodal interface that includes a text action module 58, a voice action module 60, and an online interface module 62. While not depicted in Fig. 2 , application 56 may also be configured to accept input using input modalities other than text and voice, such as motion (e.g., gestures made with phone), biometrics (e.g., retina input, fingerprints, etc.), and so forth.
- motion e.g., gestures made with phone
- biometrics e.g., retina input, fingerprints, etc.
- Text action module 58 receives text input directed to application 56 and performs various actions, such as populating one or more rendered input fields of application 56 with the provided text.
- Voice action module 60 receives voice input directed to application 56 and coordinates the analysis of the voice input. Voice input may be analyzed locally (e.g., by components 64-72 as described below) or remotely (e.g., by a standalone online voice-to-text conversion processor 78 or voice-based query processor 80 as described below).
- Online interface module 62 provides an interface with online search service 54, as well as with standalone online voice-to-text conversion processor 78 and voice-based query processor 80.
- a local voice-to-text conversion processor may include various middleware, framework, operating system and/or firmware modules.
- a local voice-to-text conversion processor includes a streaming voice-to-text module 64 and a semantic processor module 66 equipped with a parser module 70.
- Streaming voice-to-text module 64 receives an audio recording of voice input, e.g., in the form of digital audio data, and converts the digital audio data into one or more text words or phrases (also referred to herein as tokens).
- module 64 takes the form of a streaming module, such that voice input is converted to text on a token-by-token basis and in real time or near-real time, such that tokens may be output from module 64 effectively concurrently with a user's speech, and thus prior to a user enunciating a complete spoken request.
- Module 64 may rely on one or more locally-stored offline acoustic and/or language models 68, which together model a relationship between an audio signal and phonetic units in a language, along with word sequences in the language.
- a single model 68 may be used, while in other implementations, multiple models may be supported, e.g., to support multiple languages, multiple speakers, etc.
- parser module 70 relies on one or more offline grammar models 72 to map interpreted text to various structures, such as sentences, questions, and so forth. Parser module 70 may provide parsed text to application 56, as shown, so that application 56 may, for instance, populate an input field and/or provide the text to online interface module 62. In some implementations, a single model 72 may be used, while in other implementations, multiple models may be supported. It will be appreciated that in some implementations, models 68 and 72 may be combined into fewer models or split into additional models, as may be functionality of modules 64 and 66. Moreover, models 68 and 72 are referred to herein as offline models insofar as the models are stored locally on voice-enabled device 52 and are thus accessible offline, when device 52 is not in communication with online search service 54.
- voice-enabled device 52 is online, or if its wireless signal is sufficiently strong and/or reliable to delegate voice input analysis to an online voice-to-text conversion processor (e.g., 78, 80), application 56 may rely on remote functionality for handling voice input.
- This remote functionality may be provided by various sources, such as standalone online voice-to-text conversion processor 78 and/or a voice-based query processor 80 associated with online search service 54, either of which may rely on various acoustic/language, grammar, and/or action models 82.
- online voice-to-text conversion processor 78 and/or voice-based query processor 80 may implement more complex and computational resource-intensive voice processing functionality than is local to voice-enabled device 52.
- no complementary online functionality may be used.
- both online and offline functionality may be supported, e.g., such that online functionality is used whenever a device is in communication with an online service, while offline functionality is used when no exists.
- online functionality may be used only when offline functionality fails to adequately handle a connectivity particular voice input.
- Fig. 3 illustrates a voice processing routine 100 that may be executed by voice-enabled device 52 to handle a voice input.
- Routine 100 begins in block 102 by receiving voice input, e.g., in the form of a digital audio signal.
- voice input e.g., in the form of a digital audio signal.
- block 104 an initial attempt is made to forward the voice input to the online search service. If unsuccessful, e.g., due to the lack of connectivity or the lack of a response from the online voice-to-text conversion processor 78, block 106 passes control to block 108 to convert the voice input to text tokens ( e.g ., using module 64 of Fig. 2 ), and parse the text tokens (block 110, e.g., using module 70 of Fig. 2 ), and processing of the voice input is complete.
- text tokens e.g ., using module 64 of Fig. 2
- block 110 parse the text tokens
- block 106 bypasses blocks 108-110 and passes control directly to block 112 to perform client-side rendering and synchronization. Processing of the voice input is then complete. It will be appreciated that in other implementations, offline processing may be attempted prior to online processing, e.g., to avoid unnecessary data communications when a voice input can be handled locally.
- a user may experience a delay when switching input modalities, especially where the user switches from a low latency input modality such as text to a high latency input modality such as voice.
- a low latency input modality such as text
- a high latency input modality such as voice.
- the user may being by typing text into a text input of voice-enabled device 52, but may decide that typing is too cumbersome, or may become distracted ( e.g ., by driving) such that the user can no longer type text efficiently.
- a voice-to-text conversion processor implemented locally on voice-enabled device 52 or online at a remote computing system (e.g ., 78 or 80).
- Establishing such a session may take time, which can detract from the user experience. For example, establishing a session with online voice-to-text conversion processor 78 or online voice-based query processor 80 may require as much as one to two seconds or more, depending on the strength and/or reliability of an available wireless signal available.
- voice-enabled device 52 may preemptively establish a session with a voice-to-text conversion processor, e.g ., while the user is still typing the first part of her query using a keypad. By the time the user decides to switch to voice, the session may already be established, or at least establishment of the session may be underway. Either way, the user can immediately, or at least relatively quickly, begin speaking. Voice-enabled device 52 may respond with little to no perceived latency.
- Fig. 4 depicts an example of communications that may be exchanged between an electronic device such as voice-enabled device 52 and a voice-to-text conversion processor such as voice-based query processor 80, in accordance with various implementations.
- This particular example depicts a scenario in which a session is established between voice-enabled device 52 and online voice-based query processor 80.
- Similar communications maybe exchanged between voice-enabled device 52 and standalone online voice-to-text conversion processor 78.
- similar communications may be exchanged between internal modules of a suitably-equipped voice-enabled device 52. For instance, when voice-enabled device 52 is offline (and the operations of blocks 108-112 of Fig.
- voice-enabled device 52 various internal components of voice-enabled device 52, such as one or more of streaming voice-to-text module 64 and/or semantic processor module 66, may collectively perform a role similar to that performed by online voice-based query processor 80 in Fig. 4 (except that some aspects, such as the depicted handshake procedure, may be simplified or omitted).
- a user 400 of voice-enabled device 52 is depicted schematically as well.
- text input may be received at voice-enabled device 52 from user 400.
- user 400 may begin a search by typing text at a physical keypad or a graphical keypad rendered on a touchscreen.
- voice-enabled device 52 may evaluate the text input and/or a current context of voice-enabled device 52 to determine whether various criteria are satisfied. If the criteria are satisfied, voice-enabled device 52 may establish a voice-to-text conversion session with voice-based query processor 80. In Fig. 4 , this process is indicated at 406-410 as a three way handshake. However, other handshake procedures or session establishment routines may be used instead.
- voice-enabled device 52 may provide some sort of output indicating that the session is established, so that user 400 will know that he or she can begin speaking instead of typing.
- Various criteria may be used to evaluate the text input received by voice-enabled device 52 at 402. For example, length-based criteria, such as a character or word count of the text input received to that point, may be compared to a length-based threshold (e.g., a character or word count threshold). Satisfaction of the character/word count threshold may suggest that the user likely will become weary of typing and will switch to voice input. Additionally or alternatively, the text input may be compared to various grammars to determine a matching language (e.g., German, Spanish, Japanese, etc.) of the text input. Some languages may include long words that users would be more likely to switch input modalities (e.g ., text to voice) to complete. Additionally or alternatively, it may be determined whether the text input matches one or more patterns, e.g ., regular expressions or other similar mechanisms.
- a length-based threshold e.g., a character or word count threshold. Satisfaction of the character/word count threshold may suggest that the user likely will become weary
- a context of voice-enabled device 52 may be evaluated. If a context of voice-enabled device 52 is "driving," it may be highly likely that a user will want to switch from text input to voice input.
- a "context" of voice-enabled device 52 may be determined based on a variety of signals, including but not limited to sensor signals, user preferences, search history, and so forth. Examples of sensors that may be used to determine context include but are not limited to position coordinate sensors (e.g ., global positioning system, or "GPS"), accelerometers, thermometers, gyroscopes, light sensors, and so forth.
- User preferences and/or search history may indicate circumstances under which the user prefers and/or tends to switch input modalities when providing input.
- voice-enabled device 52 may receive, from user 400, voice input. For example, the user may stop typing text input and may start speaking into a microphone and/or mouthpiece of voice-enabled device 52. Voice-enabled device 52 may then initiate, within the session established at 406-410, online processing of at least a portion of the voice input at online voice-based query processor 80. For example, at 416, voice-enabled device 52 may send at least a portion of a digital audio signal of the voice input to online voice-based query processor 80. In some implementations, at 418, voice-enabled device 52 may also send data associated with the text input received at 402 to online voice-based query processor 80.
- online voice-based query processor 80 may perform voice-to-text conversion and/or semantic processing of the portion of the digital audio signal to generate output text.
- online voice-based query processor 80 may generate the output further based on the text input it received at 418. For example, online voice-based query processor 80 could be biased by the text input it receives at 418. Suppose a user speaks the word "socks" into a microphone of voice-enabled device 52.
- online voice-based query processor 80 Without any other information, the user's spoken voice input speech might simply interpreted by online voice-based query processor 80 as “socks.” However, if online voice-based query processor 80 considers text input of "red” that proceeded the voice input, online voice-based query processor 80 may be biased towards interpreting the spoken word “socks” as “Sox” (as in "Boston Red Sox”).
- a language of the text input could bias online voice-based query processor 80 towards a particular interpretation. For example, some languages, like German, have relatively long words. If online voice-based query processor 80 determines that the text input is in German, online voice-based query processor 80 may be more likely to concatenate text interpreted from the voice input with the text input, rather than separating them as separate words/tokens.
- online voice-based query processor 80 may consider other signals, such as the user's context (e.g., a user located in New England would be far more likely to be referring to the Red Sox than, say, a user in Japan), a user's accent (e.g., a Boston accent may significantly increase the odds of interpreting "socks" as "Sox”), a user's search history, and so forth.
- the user's context e.g., a user located in New England would be far more likely to be referring to the Red Sox than, say, a user in Japan
- a user's accent e.g., a Boston accent may significantly increase the odds of interpreting "socks" as "Sox”
- Sox a user's search history
- online voice-enabled query processor 80 may provide output text to voice-enabled device 52. This output may come in various forms. In implementations in which text input and/or a context of voice-enabled device 52 is provided to voice-based query processor 80, voice-based query processor 80 may return a "best" guess as to text that corresponds to the voice input received by voice-enabled device 52 at 414. In other implementations, online voice-based query processor 80 may output or return a plurality of candidate interpretations of the voice input.
- voice-enabled device 52 may use the output to build a complete query that may be submitted to, for instance, online search service 54.
- voice-enabled device 52 may incorporate the best guess as one token in a multi-token query that also includes the original text input. Or, if the text input appears to be a first portion of a relatively long word (especially when the word is in a language like German), voice-enabled device 52 may concatenate the best guess of online voice-based query processor 80 directly with the text input to form a single word.
- voice-enabled device 52 may rank the candidate interpretations based on a variety of signals, such as one or more attributes of text input received at 402 (e.g., character count, word count, language, etc.), a context of voice-enabled device 52, and so forth, so that voice-enabled device 52 may select the "best" candidate interpretation.
- attributes of text input received at 402 e.g., character count, word count, language, etc.
- voice-enabled device 52 may select the "best" candidate interpretation.
- an electronic device may provide a multimodal interface, which may be an interface such as a webpage or application interface (e.g ., text messaging application, web search application, social networking application, etc .) that is capable of accepting multiple different types of input.
- a multimodal interface may be an interface such as a webpage or application interface (e.g ., text messaging application, web search application, social networking application, etc .) that is capable of accepting multiple different types of input.
- first input is received at a low latency first modality of the multimodal interface provided by the electronic device.
- the electronic device may be configured to preemptively establish a session between the electronic device and a conversion processor (e.g ., online or local) that is configured to process input received at a high latency second modality of the multimodal interface. This may be performed, for instance, in response to a determination that that the first input satisfies a criterion. Then, when a second input is received at the second modality of the multimodal interface, the electronic device may be ready 0 to immediately or very quickly initiate processing of at least a portion of the second input at the conversion processor within the session. This may reduce or eliminate latency experienced by the user when switching from the first input modality to the second input modality.
- a conversion processor e.g ., online or local
- Fig. 5 illustrates a routine 500 that may be executed by voice-enabled device 52 to preemptively establish a voice-to-text conversion session with a voice-to-text conversion processor (online or local), in accordance with various implementations.
- Routine 500 begins in block 502 by receiving text input.
- the text input may be analyzed against one or more criteria to determine whether to preemptively establish a voice-to-text conversion session.
- voice-enabled device 52 may establish the aforementioned voice-to-text conversion session, either with a voice-to-text conversion processor comprising components local to voice-enabled device ( e.g., 64-72) or an online voice-to-text conversion processor, such as 78 or 80.
- voice input may be received, e.g., at a microphone of voice-enabled device 52.
- voice-enabled device 52 may initiate processing of the voice input received at block 510 within the session established at 508.
- a complete query may be built based at least on output provided by the voice-based query processor with which the session was established at block 508.
- the complete query may be used however the user wishes, e.g ., as a search query submitted to online search service 54, or as part of a textual communication (e.g ., text message, email, social media post) to be sent by the user.
- a search query submitted to online search service 54
- a textual communication e.g ., text message, email, social media post
Abstract
Description
- Voice-based user interfaces are increasingly being used in the control of computers and other electronic devices. One particularly useful application of a voice-based user interface is with portable electronic devices such as mobile phones, watches, tablet computers, head-mounted devices, virtual or augmented reality devices, etc. Another useful application is with vehicular electronic systems such as automotive systems that incorporate navigation and audio capabilities. Such applications are generally characterized by non-traditional form factors that limit the utility of more traditional keyboard or touch screen inputs and/or usage in situations where it is desirable to encourage a user to remain focused on other tasks, such as when the user is driving or walking.
- The computing resource requirements of a voice-based user interface, e.g., in terms of processor and/or memory resources, can be substantial. As a result, some conventional voice-based user interface approaches employ a client-server architecture where voice input is received and recorded by a relatively low-power client device, the recording is transmitted over a network such as the Internet to an online service for voice-to-text conversion and semantic processing, and an appropriate response is generated by the online service and transmitted back to the client device. Online services can devote substantial computing resources to processing voice input, enabling more complex speech recognition and semantic analysis functionality to be implemented than could otherwise be implemented locally within a client device. However, a client-server approach necessarily requires that a client be online (i.e., in communication with the online service) when processing voice input. Maintaining connectivity between such clients and online services may be impracticable, particularly in mobile and automotive applications where a wireless signal strength will no doubt fluctuate. Accordingly, when it is desired to convert voice input into text using an online service, a voice-to-text conversion session must be established between the client and the server. Auser may experience significant latency while such a session is established, e.g., 1-2 seconds or more, which may detract from the user experience.
- This specification is directed generally to various implementations that facilitate reduction and/ or elimination of latency experienced by a user when switching between input modalities, especially where the user switches from a low latency input modality to a high latency input modality. For example, in some implementations, a voice-to-text conversion session may be preemptively established when circumstances indicate that a user providing input via a lower latency input modality (e.g., text) is likely to switch to voice input.
- Therefore, in some implementations, a method may including the following operations: receiving a first input at a first modality of a multimodal interface associated with an electronic device; and in the electronic device, and responsive to receiving the first input: determining that the first input satisfies a criterion; in response to determining that the first input satisfies a criterion, preemptively establishing a session between the electronic device and a query processor configured to process input received at a second modality of the multimodal interface; receiving a second input at the second modality of the multimodal interface; initiating processing of at least a portion of the second input at the query processor within the session; and building a complete query based on output from the query processor.
- In some implementations, a method may include the following operations: receiving a text input with a voice-enabled device; and in the voice-enabled device, and responsive to receiving the text input: determining that the text input satisfies a criterion; in response to a determination that the text input satisfies a criterion, preemptively establishing a voice-to-text conversion session between the voice-enabled device and a voice-to-text conversion processor; receiving a voice input; initiating processing of at least a portion of the voice input at the voice-to-text conversion processor within the session; and building a complete query based on output from the voice-to-text conversion processor.
- In various implementations, the voice-to-text conversion processor may be an online voice-to-text conversion processor, and the voice-enabled device may include a mobile device configured to communicate with the online voice-to-text conversion processor when in communication with a wireless network. In various implementations, initiating processing includes sending data associated with the text input and data associated with the voice input to the online voice-to-text conversion processor. In various implementations, sending the data may include sending at least a portion of a digital audio signal of the voice input. In various implementations, the online voice-to-text conversion processor may be configured to perform voice-to-text conversion and semantic processing of the portion of the digital audio signal based on the text input to generate the output.
- In various implementations, building the complete query may include combining the output with at least a portion of the text input. In various implementations, the output from the voice-to-text conversion processor may include a plurality of candidate interpretations of the voice input, and building the complete query comprises ranking the plurality of candidate interpretations based at least in part on the text input. In various implementations, preemptively initiating a voice-to-text conversion session may include activating a microphone of the voice-enabled device. In various implementations, the method may further include providing output to indicate that the voice-to-text conversion session is available. In various implementations, the criterion may include the text input satisfying a character count or word count threshold. In various implementations, the criterion may include the text input matching a particular language.
- In addition, some implementations include an apparatus including memory and one or more processors operable to execute instructions stored in the memory, where the instructions are configured to perform any of the aforementioned methods. Some implementations also include a non-transitory computer readable storage medium storing computer instructions executable by one or more processors to perform any of the aforementioned methods.
- It should be appreciated that all combinations of the foregoing concepts and additional concepts described in greater detail herein are contemplated as being part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are contemplated as being part of the subject matter disclosed herein.
-
-
Fig. 1 illustrates an example architecture of a computer system. -
Fig. 2 is a block diagram of an example distributed voice input processing environment. -
Fig. 3 is a flowchart illustrating an example method of processing a voice input using the environment ofFig. 2 . -
Fig. 4 illustrates an example exchange of communications that may occur between various entities configured with selected aspects of the present disclosure, in accordance with various implementations. -
Fig. 5 is a flowchart illustrating an example method of preemptively establishing a voice-to-text session, in accordance with various implementations. - In the implementations discussed hereinafter, an application executing on a resource-constrained electronic device such as a mobile computing device (e.g., a smart phone or smart watch) may provide a so-called "multimodal" interface that supports multiple different input modalities. These input modalities may include low latency inputs, such as text, that are responsive to user input without substantial delay, and high latency inputs, such as voice recognition, which exhibit higher latency because they require various latency-inducing routines to occur, such as establishment of a session with a conversion processor that is configured to convert input received via the high latency modality to a form that matches a lower latency input modality. To reduce latency (or at least perceived latency) when a user switches from providing a first, low latency input (e.g., text input) to a second, higher latency input (e.g., voice), the electronic device may preemptively establish a session with a conversion processor, e.g., in response to a determination that a first input satisfies one or more criteria. The electronic device is thereby able to immediately initiate processing of the second input by the conversion processor, rather than being required to establish a session first, significantly decreasing delay experienced by a user when switching input modalities.
- Further details regarding selected implementations are discussed hereinafter. It will be appreciated however that other implementations are contemplated so the implementations disclosed herein are not exclusive.
- Now turning to the drawings, wherein like numbers denote like parts throughout the several views,
Fig. 1 is a block diagram of electronic components in anexample computer system 10.System 10 typically includes at least oneprocessor 12 that communicates with a number of peripheral devices viabus subsystem 14. These peripheral devices may include astorage subsystem 16, including, for example, amemory subsystem 18 and afile storage subsystem 20, userinterface input devices 22, userinterface output devices 24, and anetwork interface subsystem 26. The input and output devices allow user interaction withsystem 10.Network interface subsystem 26 provides an interface to outside networks and is coupled to corresponding interface devices in other computer systems. - In some implementations, user
interface input devices 22 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information intocomputer system 10 or onto a communication network. - User
interface output devices 24 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices. The display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image. The display subsystem may also provide non-visual display such as via audio output devices. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information fromcomputer system 10 to the user or to another machine or computer system. -
Storage subsystem 16 stores programming and data constructs that provide the functionality of some or all of the modules described herein. For example, thestorage subsystem 16 may include the logic to perform selected aspects of the methods disclosed hereinafter. - These software modules are generally executed by
processor 12 alone or in combination with other processors.Memory subsystem 18 used instorage subsystem 16 may include a number of memories including a main random access memory (RAM) 28 for storage of instructions and data during program execution and a read only memory (ROM) 30 in which fixed instructions are stored. Afile storage subsystem 20 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. The modules implementing the functionality of certain implementations may be stored byfile storage subsystem 20 in thestorage subsystem 16, or in other machines accessible by the processor(s) 12. -
Bus subsystem 14 provides a mechanism for allowing the various components and subsystems ofsystem 10 to communicate with each other as intended. Althoughbus subsystem 14 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses. -
System 10 may be of varying types including a mobile device, a portable electronic device, an embedded device, a desktop computer, a laptop computer, a tablet computer, a wearable device, a workstation, a server, a computing cluster, a blade server, a server farm, or any other data processing system or computing device. In addition, functionality implemented bysystem 10 may be distributed among multiple systems interconnected with one another over one or more networks, e.g., in a client-server, peer-to-peer, or other networking arrangement. Due to the ever-changing nature of computers and networks, the description ofsystem 10 depicted inFig. 1 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations ofsystem 10 are possible having more or fewer components than the computer system depicted inFig. 1 . - Implementations discussed hereinafter may include one or more methods implementing various combinations of the functionality disclosed herein. Other implementations may include a non-transitory computer readable storage medium storing instructions executable by a processor to perform a method such as one or more of the methods described herein. Still other implementations may include an apparatus including memory and one or more processors operable to execute instructions, stored in the memory, to perform a method such as one or more of the methods described herein.
- Various program code described hereinafter may be identified based upon the application within which it is implemented in a specific implementation. However, it should be appreciated that any particular program nomenclature that follows is used merely for convenience. Furthermore, given the endless number of manners in which computer programs may be organized into routines, procedures, methods, modules, objects, and the like, as well as the various manners in which program functionality may be allocated among various software layers that are resident within a typical computer (e.g., operating systems, libraries, API's, applications, applets, etc.), it should be appreciated that some implementations may not be limited to the specific organization and allocation of program functionality described herein.
- Furthermore, it will be appreciated that the various operations described herein that may be performed by any program code, or performed in any routines, workflows, or the like, may be combined, split, reordered, omitted, performed sequentially or in parallel and/or supplemented with other techniques, and therefore, some implementations are not limited to the particular sequences of operations described herein.
-
Fig. 2 illustrates an example distributed voiceinput processing environment 50, e.g., for use with a voice-enableddevice 52 in communication with one or more online services such asonline search service 54. In the implementations discussed hereinafter, for example, voice-enableddevice 52 is described as a mobile device such as a cellular phone or tablet computer. Other implementations may utilize a wide variety of other voice-enabled devices, however, so the references hereinafter to mobile devices are merely for the purpose of simplifying the discussion hereinafter. Countless other types of voice-enabled devices may use the herein-described functionality, including, for example, laptop computers, watches, head-mounted devices, virtual or augmented reality devices, other wearable devices, audio/video systems, navigation systems, automotive and other vehicular systems, etc. Moreover, many of such voice-enabled devices may be considered to be resource-constrained in that the memory and/or processing capacities of such devices may be constrained based upon technological, economic or other reasons, particularly when compared with the capacities of online or cloud-based services that can devote virtually unlimited computing resources to individual tasks. Some such devices may also be considered to be offline devices to the extent that such devices may be capable of operating "offline" and unconnected to an online service at least a portion of time, e.g., based upon an expectation that such devices may experience temporary network connectivity outages from time to time under ordinary usage. - Voice-enabled
device 52 may be operated to communicate with a variety of online services. One non-limiting example isonline search service 54. In some implementations,online search service 54 may be implemented as a cloud-based service employing a cloud infrastructure, e.g., using a server farm or cluster of high performance computers running software suitable for handling high volumes of requests from multiple users. In the illustrated implementation,online search service 54 is capable of querying one or more databases to locate requested information, e.g., to provide a list of web sites including requested information.Online search service 54 may not be limited to voice-based searches, and may also be capable of handling other types of searches, e.g., text-based searches, image-based searches, etc. - Voice-enabled
device 52 may communicate with other online systems (not depicted) as well, and these other online systems need not necessarily handle searching. For example, some online systems may handle voice-based requests for non-search actions such as setting alarms or reminders, managing lists, initiating communications with other users via phone, text, email, etc., or performing other actions that may be initiated via voice input. For the purposes of this disclosure, voice-based requests and other forms of voice input may be collectively referred to as voice-based queries, regardless of whether the voice-based queries seek to initiate a search, pose a question, issue a command, dictate an email or text message, etc. In general, therefore, any voice input, e.g., including one or more words or phrases, may be considered to be a voice-based query within the context of the illustrated implementations. - In the implementation of
Fig. 2 , voice input received by voice-enableddevice 52 is processed by a voice-enabled search application (or "app") 56. In other implementations, voice input may be handled within an operating system or firmware of a voice-enabled device.Application 56 in the illustrated implementation provides a multimodal interface that includes atext action module 58, avoice action module 60, and anonline interface module 62. While not depicted inFig. 2 ,application 56 may also be configured to accept input using input modalities other than text and voice, such as motion (e.g., gestures made with phone), biometrics (e.g., retina input, fingerprints, etc.), and so forth. -
Text action module 58 receives text input directed toapplication 56 and performs various actions, such as populating one or more rendered input fields ofapplication 56 with the provided text.Voice action module 60 receives voice input directed toapplication 56 and coordinates the analysis of the voice input. Voice input may be analyzed locally (e.g., by components 64-72 as described below) or remotely (e.g., by a standalone online voice-to-text conversion processor 78 or voice-basedquery processor 80 as described below).Online interface module 62 provides an interface withonline search service 54, as well as with standalone online voice-to-text conversion processor 78 and voice-basedquery processor 80. - If voice-enabled
device 52 is offline, or if its wireless network signal is too weak and/or unreliable to delegate voice input analysis to an online voice-to-text conversion processor (e.g., 78, 80),application 56 may rely on a local voice-to-text conversion processor to handle voice input. A local voice-to-text conversion processor may include various middleware, framework, operating system and/or firmware modules. InFig. 2 , for instance, a local voice-to-text conversion processor includes a streaming voice-to-text module 64 and asemantic processor module 66 equipped with aparser module 70. - Streaming voice-to-
text module 64 receives an audio recording of voice input, e.g., in the form of digital audio data, and converts the digital audio data into one or more text words or phrases (also referred to herein as tokens). In the illustrated implementation,module 64 takes the form of a streaming module, such that voice input is converted to text on a token-by-token basis and in real time or near-real time, such that tokens may be output frommodule 64 effectively concurrently with a user's speech, and thus prior to a user enunciating a complete spoken request.Module 64 may rely on one or more locally-stored offline acoustic and/or language models 68, which together model a relationship between an audio signal and phonetic units in a language, along with word sequences in the language. In some implementations, a single model 68 may be used, while in other implementations, multiple models may be supported, e.g., to support multiple languages, multiple speakers, etc. - Whereas
module 64 converts speech to text,semantic processor module 66 attempts to discern the semantics or meaning of the text output bymodule 64 for the purpose or formulating an appropriate response.Parser module 70, for example, relies on one or more offline grammar models 72 to map interpreted text to various structures, such as sentences, questions, and so forth.Parser module 70 may provide parsed text toapplication 56, as shown, so thatapplication 56 may, for instance, populate an input field and/or provide the text toonline interface module 62. In some implementations, a single model 72 may be used, while in other implementations, multiple models may be supported. It will be appreciated that in some implementations, models 68 and 72 may be combined into fewer models or split into additional models, as may be functionality ofmodules device 52 and are thus accessible offline, whendevice 52 is not in communication withonline search service 54. - If, on the other hand, voice-enabled
device 52 is online, or if its wireless signal is sufficiently strong and/or reliable to delegate voice input analysis to an online voice-to-text conversion processor (e.g., 78, 80),application 56 may rely on remote functionality for handling voice input. This remote functionality may be provided by various sources, such as standalone online voice-to-text conversion processor 78 and/or a voice-basedquery processor 80 associated withonline search service 54, either of which may rely on various acoustic/language, grammar, and/oraction models 82. It will be appreciated that in some implementations, particularly when voice-enableddevice 52 is a resource-constrained device, online voice-to-text conversion processor 78 and/or voice-basedquery processor 80, as well asmodels 82 used thereby, may implement more complex and computational resource-intensive voice processing functionality than is local to voice-enableddevice 52. In other implementations, however, no complementary online functionality may be used. - In some implementations, both online and offline functionality may be supported, e.g., such that online functionality is used whenever a device is in communication with an online service, while offline functionality is used when no exists. In other implementations, online functionality may be used only when offline functionality fails to adequately handle a connectivity particular voice input.
-
Fig. 3 , for example, illustrates avoice processing routine 100 that may be executed by voice-enableddevice 52 to handle a voice input.Routine 100 begins inblock 102 by receiving voice input, e.g., in the form of a digital audio signal. Atblock 104, an initial attempt is made to forward the voice input to the online search service. If unsuccessful, e.g., due to the lack of connectivity or the lack of a response from the online voice-to-text conversion processor 78, block 106 passes control to block 108 to convert the voice input to text tokens (e.g., usingmodule 64 ofFig. 2 ), and parse the text tokens (block 110, e.g., usingmodule 70 ofFig. 2 ), and processing of the voice input is complete. - Returning to block 106, if the attempt to forward the voice input to the online search service is successful, block 106 bypasses blocks 108-110 and passes control directly to block 112 to perform client-side rendering and synchronization. Processing of the voice input is then complete. It will be appreciated that in other implementations, offline processing may be attempted prior to online processing, e.g., to avoid unnecessary data communications when a voice input can be handled locally.
- As noted in the background, a user may experience a delay when switching input modalities, especially where the user switches from a low latency input modality such as text to a high latency input modality such as voice. For example, suppose a user wishes to submit a search query to
online search service 54. The user may being by typing text into a text input of voice-enableddevice 52, but may decide that typing is too cumbersome, or may become distracted (e.g., by driving) such that the user can no longer type text efficiently. In existing electronic devices such as smart phones, the user would be required to press a button or touchscreen icon to activate a microphone and initiate establishment of a session with a voice-to-text conversion processor implemented locally on voice-enableddevice 52 or online at a remote computing system (e.g., 78 or 80). Establishing such a session may take time, which can detract from the user experience. For example, establishing a session with online voice-to-text conversion processor 78 or online voice-basedquery processor 80 may require as much as one to two seconds or more, depending on the strength and/or reliability of an available wireless signal available. - To reduce or avoid such a delay, and using techniques described herein, voice-enabled
device 52 may preemptively establish a session with a voice-to-text conversion processor, e.g., while the user is still typing the first part of her query using a keypad. By the time the user decides to switch to voice, the session may already be established, or at least establishment of the session may be underway. Either way, the user can immediately, or at least relatively quickly, begin speaking. Voice-enableddevice 52 may respond with little to no perceived latency. -
Fig. 4 depicts an example of communications that may be exchanged between an electronic device such as voice-enableddevice 52 and a voice-to-text conversion processor such as voice-basedquery processor 80, in accordance with various implementations. This particular example depicts a scenario in which a session is established between voice-enableddevice 52 and online voice-basedquery processor 80. However, this is not meant to be limiting. Similar communications maybe exchanged between voice-enableddevice 52 and standalone online voice-to-text conversion processor 78. Additionally or alternatively, similar communications may be exchanged between internal modules of a suitably-equipped voice-enableddevice 52. For instance, when voice-enableddevice 52 is offline (and the operations of blocks 108-112 ofFig. 3 are performed), various internal components of voice-enableddevice 52, such as one or more of streaming voice-to-text module 64 and/orsemantic processor module 66, may collectively perform a role similar to that performed by online voice-basedquery processor 80 inFig. 4 (except that some aspects, such as the depicted handshake procedure, may be simplified or omitted). Auser 400 of voice-enableddevice 52 is depicted schematically as well. - At 402, text input may be received at voice-enabled
device 52 fromuser 400. For example,user 400 may begin a search by typing text at a physical keypad or a graphical keypad rendered on a touchscreen. At 404, voice-enableddevice 52 may evaluate the text input and/or a current context of voice-enableddevice 52 to determine whether various criteria are satisfied. If the criteria are satisfied, voice-enableddevice 52 may establish a voice-to-text conversion session with voice-basedquery processor 80. InFig. 4 , this process is indicated at 406-410 as a three way handshake. However, other handshake procedures or session establishment routines may be used instead. At 412, voice-enableddevice 52 may provide some sort of output indicating that the session is established, so thatuser 400 will know that he or she can begin speaking instead of typing. - Various criteria may be used to evaluate the text input received by voice-enabled
device 52 at 402. For example, length-based criteria, such as a character or word count of the text input received to that point, may be compared to a length-based threshold (e.g., a character or word count threshold). Satisfaction of the character/word count threshold may suggest that the user likely will become weary of typing and will switch to voice input. Additionally or alternatively, the text input may be compared to various grammars to determine a matching language (e.g., German, Spanish, Japanese, etc.) of the text input. Some languages may include long words that users would be more likely to switch input modalities (e.g., text to voice) to complete. Additionally or alternatively, it may be determined whether the text input matches one or more patterns, e.g., regular expressions or other similar mechanisms. - In some implementations, in addition to or instead of evaluating text input against various criterion, a context of voice-enabled
device 52 may be evaluated. If a context of voice-enableddevice 52 is "driving," it may be highly likely that a user will want to switch from text input to voice input. A "context" of voice-enableddevice 52 may be determined based on a variety of signals, including but not limited to sensor signals, user preferences, search history, and so forth. Examples of sensors that may be used to determine context include but are not limited to position coordinate sensors (e.g., global positioning system, or "GPS"), accelerometers, thermometers, gyroscopes, light sensors, and so forth. User preferences and/or search history may indicate circumstances under which the user prefers and/or tends to switch input modalities when providing input. - Referring back to
Fig. 4 , sometime after indicating to the user that the session is established at 412, at 414, voice-enableddevice 52 may receive, fromuser 400, voice input. For example, the user may stop typing text input and may start speaking into a microphone and/or mouthpiece of voice-enableddevice 52. Voice-enableddevice 52 may then initiate, within the session established at 406-410, online processing of at least a portion of the voice input at online voice-basedquery processor 80. For example, at 416, voice-enableddevice 52 may send at least a portion of a digital audio signal of the voice input to online voice-basedquery processor 80. In some implementations, at 418, voice-enableddevice 52 may also send data associated with the text input received at 402 to online voice-basedquery processor 80. - At 420, online voice-based
query processor 80 may perform voice-to-text conversion and/or semantic processing of the portion of the digital audio signal to generate output text. In some implementations, online voice-basedquery processor 80 may generate the output further based on the text input it received at 418. For example, online voice-basedquery processor 80 could be biased by the text input it receives at 418. Suppose a user speaks the word "socks" into a microphone of voice-enableddevice 52. Without any other information, the user's spoken voice input speech might simply interpreted by online voice-basedquery processor 80 as "socks." However, if online voice-basedquery processor 80 considers text input of "red" that proceeded the voice input, online voice-basedquery processor 80 may be biased towards interpreting the spoken word "socks" as "Sox" (as in "Boston Red Sox"). - As another example, a language of the text input could bias online voice-based
query processor 80 towards a particular interpretation. For example, some languages, like German, have relatively long words. If online voice-basedquery processor 80 determines that the text input is in German, online voice-basedquery processor 80 may be more likely to concatenate text interpreted from the voice input with the text input, rather than separating them as separate words/tokens. - In addition to text input, online voice-based
query processor 80 may consider other signals, such as the user's context (e.g., a user located in New England would be far more likely to be referring to the Red Sox than, say, a user in Japan), a user's accent (e.g., a Boston accent may significantly increase the odds of interpreting "socks" as "Sox"), a user's search history, and so forth. - Referring back to
Fig. 4 , at 422, online voice-enabledquery processor 80 may provide output text to voice-enableddevice 52. This output may come in various forms. In implementations in which text input and/or a context of voice-enableddevice 52 is provided to voice-basedquery processor 80, voice-basedquery processor 80 may return a "best" guess as to text that corresponds to the voice input received by voice-enableddevice 52 at 414. In other implementations, online voice-basedquery processor 80 may output or return a plurality of candidate interpretations of the voice input. - Whatever form of output is provided by online voice-based
query processor 80 to voice-enableddevice 52, at 424, voice-enableddevice 52 may use the output to build a complete query that may be submitted to, for instance,online search service 54. For example, in implementations in which online voice-basedquery processor 80 provides a single best guess, voice-enableddevice 52 may incorporate the best guess as one token in a multi-token query that also includes the original text input. Or, if the text input appears to be a first portion of a relatively long word (especially when the word is in a language like German), voice-enableddevice 52 may concatenate the best guess of online voice-basedquery processor 80 directly with the text input to form a single word. In implementations in which online voice-basedquery processor 80 provides multiple candidate interpretations, voice-enableddevice 52 may rank the candidate interpretations based on a variety of signals, such as one or more attributes of text input received at 402 (e.g., character count, word count, language, etc.), a context of voice-enableddevice 52, and so forth, so that voice-enableddevice 52 may select the "best" candidate interpretation. - While examples described herein have primarily pertained to a user switching from text input to voice input, this is not meant to be limiting. In various implementations, techniques described herein may be employed when a user switches between any input modalities, and especially where the user switches from a low latency input modality to a high latency input modality. For example, an electronic device may provide a multimodal interface, which may be an interface such as a webpage or application interface (e.g., text messaging application, web search application, social networking application, etc.) that is capable of accepting multiple different types of input. Suppose first input is received at a low latency first modality of the multimodal interface provided by the electronic device. The electronic device may be configured to preemptively establish a session between the electronic device and a conversion processor (e.g., online or local) that is configured to process input received at a high latency second modality of the multimodal interface. This may be performed, for instance, in response to a determination that that the first input satisfies a criterion. Then, when a second input is received at the second modality of the multimodal interface, the electronic device may be ready 0 to immediately or very quickly initiate processing of at least a portion of the second input at the conversion processor within the session. This may reduce or eliminate latency experienced by the user when switching from the first input modality to the second input modality.
-
Fig. 5 illustrates a routine 500 that may be executed by voice-enableddevice 52 to preemptively establish a voice-to-text conversion session with a voice-to-text conversion processor (online or local), in accordance with various implementations.Routine 500 begins inblock 502 by receiving text input. Atblock 504, the text input may be analyzed against one or more criteria to determine whether to preemptively establish a voice-to-text conversion session. - On determination that the one or more criteria are satisfied, at
block 508, voice-enableddevice 52 may establish the aforementioned voice-to-text conversion session, either with a voice-to-text conversion processor comprising components local to voice-enabled device (e.g., 64-72) or an online voice-to-text conversion processor, such as 78 or 80. Atblock 510, voice input may be received, e.g., at a microphone of voice-enableddevice 52. Atblock 512, voice-enableddevice 52 may initiate processing of the voice input received atblock 510 within the session established at 508. Atblock 514, a complete query may be built based at least on output provided by the voice-based query processor with which the session was established atblock 508. After that, the complete query may be used however the user wishes, e.g., as a search query submitted toonline search service 54, or as part of a textual communication (e.g., text message, email, social media post) to be sent by the user. - While several implementations have been described and illustrated herein, a variety of other means and/or structures for performing the function and/or obtaining the results and/or one or more of the advantages described herein may be utilized, and each of such variations and/or modifications is deemed to be within the scope of the implementations described herein. More generally, all parameters, dimensions, materials, and configurations described herein are meant to be exemplary and that the actual parameters, dimensions, materials, and/or configurations will depend upon the specific application or applications for which the teachings is/ are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific implementations described herein. It is, therefore, to be understood that the foregoing implementations are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, implementations may be practiced otherwise than as specifically described and claimed. Implementations of the present disclosure are directed to each individual feature, system, article, material, kit, and/or method described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
Claims (15)
- A method comprising:receiving a text input with a voice-enabled device; andin the voice-enabled device, and responsive to receiving the text input:determining that the text input satisfies a criterion;in response to a determination that the text input satisfies a criterion, preemptively establishing a voice-to-text conversion session between the voice-enabled device and a voice-to-text conversion processor;receiving a voice input;initiating processing of at least a portion of the voice input at the voice-to-textconversion processor within the session; andbuilding a complete query based on output from the voice-to-text conversion processor.
- The method of claim 1, wherein the voice-to-text conversion processor is an online voice-to-text conversion processor, and wherein the voice-enabled device comprises a mobile device configured to communicate with the online voice-to-text conversion processor when in communication with a wireless network.
- The method of claim 2, wherein initiating processing includes sending data associated with the text input and data associated with the voice input to the online voice-to-text conversion processor.
- The method of claim 3, wherein sending the data comprises sending at least a portion of a digital audio signal of the voice input, wherein the online voice-to-text conversion processor is configured to perform voice-to-text conversion and semantic processing of the portion of the digital audio signal based on the text input to generate the output.
- The method of any preceding claim, wherein building the complete query comprises combining the output with at least a portion of the text input.
- The method of any preceding claim, wherein the output from the voice-to-text conversion processor includes a plurality of candidate interpretations of the voice input, and building the complete query comprises ranking the plurality of candidate interpretations based at least in part on the text input.
- The method of any preceding claim, wherein preemptively initiating a voice-to-text conversion session comprises activating a microphone of the voice-enabled device, and optionally further comprising providing output to indicate that the voice-to-text conversion session is available.
- The method of any preceding claim, wherein the criterion comprises the text input satisfying a character count threshold.
- The method of any of claims 1 to 7, wherein the criterion comprises the text input satisfying a word count threshold.
- The method of any of claims 1 to 7, wherein the criterion comprises the text input matching a particular language.
- A computer program comprising machine readable instructions that when executed by computing apparatus control it to perform the method of any preceding claim.
- An apparatus including memory and one or more processors operable to execute instructions stored in the memory, comprising instructions to:receive a first input at a first modality of a multimodal interface associated with an electronic device; andin the electronic device, and responsive to receiving the first input:determine that the first input satisfies a criterion;in response to a determination that the first input satisfies a criterion, preemptively establish a session between the electronic device and a query processor configured to process input received at a second modality of the multimodal interface;receive a second input at the second modality of the multimodal interface;initiate processing of at least a portion of the second input at the query processor within the session; andbuild a complete query based on output from the query processor.
- The apparatus of claim 12, wherein the query processor is an online query processor, and wherein the apparatus comprises a mobile device configured to communicate with the online query processor when in communication with a wireless network.
- The apparatus of claim 13, wherein initiating processing includes sending data associated with the first input and data associated with the second input to the query processor.
- The apparatus of any of claims 12 to 14, wherein building the complete query comprises combining the output with at least a portion of the first input, and/or wherein the output from the query processor includes a plurality of candidate interpretations of the second input, and building the complete query comprises ranking the plurality of candidate interpretations based at least in part on the first input, and/ or wherein the criterion comprises the first input satisfying a length threshold or wherein the criterion comprises the first input matching a particular pattern
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP19172116.6A EP3540729B1 (en) | 2015-09-09 | 2016-08-23 | Reducing latency caused by switching input modalities |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/849,389 US9443519B1 (en) | 2015-09-09 | 2015-09-09 | Reducing latency caused by switching input modalities |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP19172116.6A Division EP3540729B1 (en) | 2015-09-09 | 2016-08-23 | Reducing latency caused by switching input modalities |
Publications (3)
Publication Number | Publication Date |
---|---|
EP3142108A2 true EP3142108A2 (en) | 2017-03-15 |
EP3142108A3 EP3142108A3 (en) | 2017-03-22 |
EP3142108B1 EP3142108B1 (en) | 2019-05-29 |
Family
ID=56802293
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP16185390.8A Active EP3142108B1 (en) | 2015-09-09 | 2016-08-23 | Reducing latency caused by switching input modalities |
EP19172116.6A Active EP3540729B1 (en) | 2015-09-09 | 2016-08-23 | Reducing latency caused by switching input modalities |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP19172116.6A Active EP3540729B1 (en) | 2015-09-09 | 2016-08-23 | Reducing latency caused by switching input modalities |
Country Status (3)
Country | Link |
---|---|
US (3) | US9443519B1 (en) |
EP (2) | EP3142108B1 (en) |
CN (2) | CN112463938A (en) |
Families Citing this family (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9443519B1 (en) * | 2015-09-09 | 2016-09-13 | Google Inc. | Reducing latency caused by switching input modalities |
US10460024B2 (en) * | 2016-01-05 | 2019-10-29 | Adobe Inc. | Interactive electronic form workflow assistant that guides interactions with electronic forms in a conversational manner |
US10657200B2 (en) | 2016-01-05 | 2020-05-19 | Adobe Inc. | Proactive form guidance for interacting with electronic forms |
US10831366B2 (en) * | 2016-12-29 | 2020-11-10 | Google Llc | Modality learning on mobile devices |
KR102426717B1 (en) * | 2017-06-27 | 2022-07-29 | 삼성전자주식회사 | System and device for selecting a speech recognition model |
KR102460491B1 (en) * | 2017-12-06 | 2022-10-31 | 삼성전자주식회사 | Electronic apparatus and controlling method of thereof |
KR102443079B1 (en) * | 2017-12-06 | 2022-09-14 | 삼성전자주식회사 | Electronic apparatus and controlling method of thereof |
CN117971154A (en) * | 2018-09-04 | 2024-05-03 | 谷歌有限责任公司 | Multimodal response |
CN110136713A (en) * | 2019-05-14 | 2019-08-16 | 苏州思必驰信息科技有限公司 | Dialogue method and system of the user in multi-modal interaction |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6564213B1 (en) | 2000-04-18 | 2003-05-13 | Amazon.Com, Inc. | Search query autocompletion |
US20080282154A1 (en) * | 2006-09-11 | 2008-11-13 | Nurmi Mikko A | Method and apparatus for improved text input |
US8949266B2 (en) * | 2007-03-07 | 2015-02-03 | Vlingo Corporation | Multiple web-based content category searching in mobile search application |
US8090738B2 (en) | 2008-05-14 | 2012-01-03 | Microsoft Corporation | Multi-modal search wildcards |
CN101610465A (en) * | 2008-06-18 | 2009-12-23 | 朗讯科技公司 | Communication method and communication system for converting text information into voice information |
KR101502003B1 (en) * | 2008-07-08 | 2015-03-12 | 엘지전자 주식회사 | Mobile terminal and method for inputting a text thereof |
US8019608B2 (en) | 2008-08-29 | 2011-09-13 | Multimodal Technologies, Inc. | Distributed speech recognition using one way communication |
KR101477530B1 (en) * | 2010-03-12 | 2014-12-30 | 뉘앙스 커뮤니케이션즈, 인코포레이티드 | Multimodal text input system, such as for use with touch screens on mobile phones |
US9274746B2 (en) | 2011-02-18 | 2016-03-01 | Nuance Communications, Inc. | Latency hiding techniques for multi-modal user interfaces |
US8249876B1 (en) | 2012-01-03 | 2012-08-21 | Google Inc. | Method for providing alternative interpretations of a voice input to a user |
US9894312B2 (en) | 2013-02-22 | 2018-02-13 | The Directv Group, Inc. | Method and system for controlling a user receiving device using voice commands |
US20160055240A1 (en) * | 2014-08-22 | 2016-02-25 | Microsoft Corporation | Orphaned utterance detection system and method |
US9443519B1 (en) * | 2015-09-09 | 2016-09-13 | Google Inc. | Reducing latency caused by switching input modalities |
-
2015
- 2015-09-09 US US14/849,389 patent/US9443519B1/en active Active
-
2016
- 2016-08-23 EP EP16185390.8A patent/EP3142108B1/en active Active
- 2016-08-23 EP EP19172116.6A patent/EP3540729B1/en active Active
- 2016-09-02 US US15/256,128 patent/US9779733B2/en active Active
- 2016-09-09 CN CN202011261069.1A patent/CN112463938A/en active Pending
- 2016-09-09 CN CN201610812805.5A patent/CN106991106B/en active Active
-
2017
- 2017-09-11 US US15/701,189 patent/US10134397B2/en active Active
Non-Patent Citations (1)
Title |
---|
None |
Also Published As
Publication number | Publication date |
---|---|
EP3142108A3 (en) | 2017-03-22 |
EP3540729B1 (en) | 2024-04-17 |
US9443519B1 (en) | 2016-09-13 |
US20170372699A1 (en) | 2017-12-28 |
CN106991106A (en) | 2017-07-28 |
EP3142108B1 (en) | 2019-05-29 |
US20170068724A1 (en) | 2017-03-09 |
CN106991106B (en) | 2020-12-01 |
EP3540729A1 (en) | 2019-09-18 |
CN112463938A (en) | 2021-03-09 |
US10134397B2 (en) | 2018-11-20 |
US9779733B2 (en) | 2017-10-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10134397B2 (en) | Reducing latency caused by switching input modalities | |
US11676606B2 (en) | Context-sensitive dynamic update of voice to text model in a voice-enabled electronic device | |
US10986214B2 (en) | Local persisting of data for selectively offline capable voice action in a voice-enabled electronic device | |
EP3510593B1 (en) | Task initiation using long-tail voice commands | |
CN107481719B (en) | Non-deterministic task initiation for personal assistant modules | |
EP3304546B1 (en) | Selective aborting of online processing of voice inputs in a voice-enabled electronic device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN PUBLISHED |
|
PUAL | Search report despatched |
Free format text: ORIGINAL CODE: 0009013 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
AK | Designated contracting states |
Kind code of ref document: A3Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G10L 15/22 20060101AFI20170215BHEPIpc: G06F 17/27 20060101ALI20170215BHEPIpc: G06F 9/44 20060101ALN20170215BHEPIpc: G10L 15/30 20130101ALN20170215BHEPIpc: G06F 17/30 20060101ALI20170215BHEP |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20170907 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
17Q | First examination report despatched |
Effective date: 20171019 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/30 20060101ALI20181122BHEPIpc: G06F 17/27 20060101ALI20181122BHEPIpc: G10L 15/30 20130101ALN20181122BHEPIpc: G06F 9/44 20180101ALN20181122BHEPIpc: G10L 15/22 20060101AFI20181122BHEP |
|
INTG | Intention to grant announced |
Effective date: 20181206 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 1138734Country of ref document: ATKind code of ref document: TEffective date: 20190615 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602016014522Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20190529 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190930Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190829 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190830Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190829 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1138734Country of ref document: ATKind code of ref document: TEffective date: 20190529 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602016014522Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529 |
|
26N | No opposition filed |
Effective date: 20200303 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190831Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190831Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190823 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20190831 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190823 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190831 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190929 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20160823 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190529 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230510 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230828Year of fee payment: 8 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230825Year of fee payment: 8Ref country code: DEPayment date: 20230829Year of fee payment: 8 |
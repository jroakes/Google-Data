CN115769220A - Document creation and editing via automated assistant interaction - Google Patents
Document creation and editing via automated assistant interaction Download PDFInfo
- Publication number
- CN115769220A CN115769220A CN202080101564.8A CN202080101564A CN115769220A CN 115769220 A CN115769220 A CN 115769220A CN 202080101564 A CN202080101564 A CN 202080101564A CN 115769220 A CN115769220 A CN 115769220A
- Authority
- CN
- China
- Prior art keywords
- user
- document
- automated assistant
- computing device
- additional
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L13/00—Speech synthesis; Text to speech systems
- G10L13/02—Methods for producing synthetic speech; Speech synthesisers
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1815—Semantic context, e.g. disambiguation of the recognition hypotheses based on word meaning
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/48—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use
- G10L25/51—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use for comparison or discrimination
- G10L25/54—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use for comparison or discrimination for retrieval
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Abstract
Embodiments set forth herein relate to automated assistants that allow users to create, edit, and/or share documents without directly interfacing with a document editing application. A user may provide input to the automated assistant to cause the automated assistant to interface with the document editing application and create a document. To identify a particular action performed with respect to a document and/or to identify a particular sub-portion within a document for directing an action, automated assistants may rely on semantic annotations. As the user continues to interact with the automated assistant to edit the document, the semantic annotations may be updated according to how the document changed and/or how the user referred to the document. This may allow automated assistants to more easily fulfill document-related requests that may lack expressive details.
Description
Background
Humans may participate in a human conversation with an interactive software application, referred to herein as an "automated assistant" (also referred to as a "digital agent," "chat bot," "interactive personal assistant," "intelligent personal assistant," "dialog agent," etc.). For example, a human being (which may be referred to as a "user" when they interact with the automated assistant) may provide commands and/or requests using spoken natural language input (i.e., an utterance) and/or by providing textual (e.g., typing) natural language input, which may in some cases be converted to text and then processed.
In some instances, an automated assistant may be utilized to perform discrete actions, such as opening a music application, adjusting settings of a smart-home device, and many other tasks. However, editing of content-rich documents (e.g., articles to be published) often still leaves a desktop environment with a dedicated monitor and common peripherals such as a keyboard and mouse. While many tablet style devices have enabled other means for editing documents, such as via a touch screen interface, it may be desirable to dedicate their full dexterity to each editing session in order to edit a content rich document. For example, adding a paragraph of text to a particular document stored on a cloud drive may require the user to: access a particular document via the tablet device's foreground application, scroll to a particular paragraph to edit, and manually type to edit the paragraph. This can require a large amount of user input and a large use of client device resources to process the input in order to render a particular document for an extended duration, and so forth. Additionally, any other tasks performed via the tablet device may be delayed because the user cannot interface with any other applications for this period of time.
Further, various document editing applications exist as cloud applications that may allow multiple different users to edit documents simultaneously through a desktop style interface. Such an application may allow multiple reviewers to review a document simultaneously via the desktop style interface. However, as long as the edits and comments are limited to certain application interfaces, the review cycle may be unduly delayed. For example, one reviewer may be notified on their phone that another user has added comments to the document. Unfortunately, a user may not be able to fully process comments until the user has access to a desktop computer or other device with an appropriate graphical user interface. Further, as a result, the user may not be informed of any substance of the comment, and thus cannot prepare a response to the comment before accessing the comment. These restrictions may result in various users checking for document comment updates from interfaces that may not enable editing functionality. This may result in unnecessary consumption of computing resources such as power and processing bandwidth.
Disclosure of Invention
The embodiments set forth herein relate to an automated assistant that can operate as a modality for completing various document-related actions for content rich documents. A content rich document may refer to any set of data that is incorporated into a single document. The data set may include, but is not limited to, a number of different parts, themes, sub-themes, styles, cells in a spreadsheet, slides in a presentation, graphics, and/or any combination of features that may be incorporated into a document. The automated assistant may operate to allow a user to edit, comment on, and/or share existing documents, or create new documents, through one or more interactions between the automated assistant and the user. In other words, the user does not necessarily need to view the document editing program in the foreground (forego) of the Graphical User Interface (GUI) in order to perform such an operation. Rather, the automated assistant can, for example, allow the user to perform various document-related tasks through verbal interaction and/or any other type of interaction, optionally without requiring the user to view the document while providing the verbal interaction. Such document-related tasks may be accomplished by allowing the automated assistant to generate semantic annotations of respective portions of a single document that the automated assistant may request the automated assistant to access and/or modify. For example, a document-related task to be performed may be determined based on processing at least a portion of a spoken utterance of a user in view of semantic annotation of the document (e.g., to determine which portion of the document-related task should be performed on). Referencing semantic annotations in this manner may simplify document creation and/or document review that may otherwise require extended graphical rendering of the document and/or direct user interaction with a document editing application accessible, for example, via a desktop computing device. Further, when a document reviewing user is able to quickly review a content rich document through any device that provides access to the automated assistant, the review time of the document and the power consumption of the device may be reduced. Such devices may include, but are not limited to, watches, cellular phones, tablet computers, home assistant devices, and/or any other computing device that may provide access to an automated assistant.
As one example, a user may be a researcher working with a group of researchers to review electronic documents to be submitted for publication. During the review process, each researcher may proceed according to a schedule of breaks that does not allow much time to sit in front of the computing device to review edits and/or comments in the document. To edit and/or review a document, a user may rely on an automated assistant, which may be accessible through the "ecosystem" of the user device. For example, a document application that provides access to a document may send and receive certain data associated with the document to and from an automated assistant while a researcher is reviewing the document.
In some instances, the document may be a spreadsheet and when the user provides a document such as "Assistant, add a column to my latest 'research' document and add a comment saving 'count one add this month's data to this column? ' a verbal utterance of ' add a column to my latest "research" document and add a comment of ' if someone added data of this month to the column. Users may provide such spoken words to an interface of their watch, which may provide access to an automated assistant, but may not include a native document editing application for editing a spreadsheet. In response to receiving the spoken utterance, the automated assistant can process audio data corresponding to the spoken utterance and determine one or more actions to perform.
The processing of the audio data may involve utilizing one or more trained machine learning models, heuristic processes, semantic analysis, and/or any other processes that may be employed in processing spoken utterances from the user. As a result of the processing, the automated assistant can initiate performance of one or more actions specified by the user via the spoken utterance. In some implementations, the automated assistant can use an Application Programming Interface (API) to cause a particular document application to perform one or more actions. For example, in response to the spoken utterance, an automated assistant accessible via a watch of the user may generate one or more functions that are performed in response to the spoken utterance from the user. For example, the automated assistant may cause one or more functions to be performed to determine where additional columns should be added in a particular document. The function used to determine where to place the additional columns may be total _ columns (most _ recovery ('research')), which may identify the total number of non-blank columns included in the most recently accessed document with a semantic annotation with the term "research. In some implementations, the "total _ columns" function can be identified based on one or more previous interactions between the user and the document editing application and/or automated assistant. Alternatively or additionally, the "total _ columns" function may be identified using one or more trained machine learning models that may be used to rank and/or score the one or more functions to be performed in order to identify additional information for use in responding to the user.
For example, the total _ columns (most _ present ('research')) function may return a value of "16" that may be used by the automated assistant to generate another function to be executed to add a column (e.g., "16+ 1") to a particular document. For example, the automated assistant can initiate execution of functions such as: action: new _ column ((16 + 1), most _ receiver ('research')) and action: comment (column (16 + 1), "count someone add this month's data to this column. In this example, the command "most _ present ('research')" when executed may result in the identification of one or more documents that have recently been accessed by the user and that include a semantic annotation with the term "research". When the function most _ record ('research') results in a particular document being referred to by the user, the "new _ column" and "comment" functions may be executed to edit the particular document according to the spoken utterance of the user.
Execution of the above-described functions may cause other instances of the automated assistant to notify each researcher and/or each user with permission to view the spreadsheet of the changes to the spreadsheet. For example, another user may receive a notification from the automated assistant indicating that the user edited the spreadsheet and incorporated the comment (e.g., in some instances, the user may edit via a desktop computer GUI without having to invoke the automated assistant). The automated assistant can generate the notification by comparing a previous version of the spreadsheet to a current version of the spreadsheet (e.g., using an API call to a document application), and/or by processing a spoken utterance from the user. The automated assistant can audibly provide the notification via a push notification rendered in the foreground of the GUI of the cellular telephone. The push notification may include content such as "The popular sheet has been seen by Mary to include a new column and a new comment (Mary has edited The spreadsheet to include new columns and new comments)". In response to receiving the notification, other users may view the new column in the spreadsheet through their cell phones. Alternatively or additionally, other users can also edit the spreadsheet via their automated assistant by providing another spoken utterance — without having to open a particular document application in the foreground of the cell phone's GUI.
As one example, based on push notifications provided via the automated Assistant, another user may provide additional spoken utterances such as "identify, what tools the new comment say? (assistant, what was commented on newly. However, because other users may not explicitly identify the document to access, the automated assistant may infer the identity of the document based on various semantic annotations and/or other contextual data. For example, the automated assistant can identify one or more documents that were recently accessed and/or modified by other users and determine whether any of the recently accessed documents have features described in the spoken utterance. For example, each document of the one or more documents may include semantic annotations characterizing a sub-portion of the respective document. Based on this analysis, the automated assistant can recognize the spreadsheet as subject to the additional spoken utterance because the spreadsheet includes the most recently added comment (i.e., "new comment"). Furthermore, based on the additional spoken utterance, the automated assistant can access the content of the most recently added comment and audibly render the content of the added comment for other users without graphically rendering the entire (or any of the) spreadsheet (e.g., "Mary's new comments: ' Could someneone add this month's data to this column.
In some implementations, other users can supplement the spreadsheet with data from a separate document using an automated assistant — without directly interacting with the interface of the document editing application. For example, as part of the back-end process, and with prior permissions from other users, the automated assistant can analyze documents stored in association with other users (e.g., in association with the user's account, such as utilized by or linked to the user's automated assistant account) so that the automated assistant has a semantic understanding of these documents. Such semantic understanding may be embodied in semantic annotations that may be stored as metadata associated with each document. In this way, users will be able to edit and review a document via their automated assistant using well-documented assistant commands directed to the semantic understanding of the document rather than a portion of the document.
As an example, and based on the automated assistant audibly rendering the added comments, other users may provide spoken utterances to their cell phones in order to cause the automated assistant to edit the spreadsheet using data from the separate document. The spoken utterance may be "Assistant, please fill in the column with data in the sensor data spreadsheet of the month" using data from the same month's sensor data spreadsheet. In response to the spoken utterance, the automated assistant and/or other associated application may process the spoken utterance and/or one or more documents in order to identify one or more actions to perform. For example, the automated assistant may use one or more trained machine learning models to determine an action that is synonymous with the verb "fill". As a result, the automated assistant can identify an "insert ()" function of the document application. In some implementations, to identify the data within the document that other users are referring to, the automated assistant can identify a list of recently created documents and filter out any documents that are not "this month" created. As a result, the automated assistant can leave a reduced list of documents that the automated assistant can select to be subjected to an "insert ()" function.
In some implementations, the automated assistant may identify the correct source document from the reduced "this month" document list, even though other users provided a descriptor of the source document (e.g., "this month's" sensor data "spreadsheet") instead of the actual name (e.g., "August TL-9000 (8 month TL-9000)"). For example, the automated assistant may employ one or more heuristic processes and/or one or more trained machine learning models to identify the source document and/or the "fill" within the source document to the data in the spreadsheet from the comments. In some implementations, the semantic annotation data may have been stored in association with the source document, and may indicate that the device identifier "TL-9000" listed as the name of a column in the source document is synonymous with the type of temperature "sensor". This information about the temperature sensor may be described in search results from an internet search or other knowledge base lookup performed by the automated assistant using document data (e.g., the document title "August TL-9000"), providing a correspondence between the column name and a request by the automated assistant to use "sensor data.
When the automated assistant has identified a particular source document and data column that other users are referring to in the spoken utterance, the automated assistant can use the data column to perform an "insert ()" function. For example, the automated assistant may generate commands such as "insert (" August _ TL-9000", 11), column (" Research _ Document ", 17)," where "11" refers to a column of a sensor data spreadsheet that includes "this month's" data, and where "17" refers to a "new" column that was previously added by the user.
In some implementations, instances of document related data can be shared between instances of the automated assistant in order for each instance of the automated assistant to more accurately edit the document according to user instructions. For example, because the user initially caused their automated assistant to add a new column identified as column "17," the identifier "17" for "new column" could be shared with another instance of the automated assistant invoked by other users. Alternatively or additionally, data characterizing the user-assistant interaction may be stored in association with the document and/or a portion of the document in order for each instance of the automated assistant to more accurately execute the user instructions. For example, a semantic annotation stored in association with a spreadsheet may characterize column "17" as "this month's data per Mary (data in this month of Mary)". In this manner, any other instance of an automated assistant that receives a command associated with "Mary" or "this month's data" may refer to column "17" because of the correlation between the command and the semantic annotation associated with column "17". This allows the automated assistant to more efficiently perform automated assistant requests for certain documents as the user continues to interact with the automated assistant to edit certain documents.
When the automated assistant has caused the "insert ()" function to be performed and the spreadsheet to be modified to include additional "sensor" data, the automated assistant can generate a notification to be pushed to each researcher. In some implementations, the push notification generated based on the modification can characterize edits made by other users via the automated assistant. For example, the push notification may be rendered for other researchers as a GUI element, such as a callout bubble with a graphical rendering of a portion of the spreadsheet modified by other users. The GUI elements may be generated by the automated assistant using an API or other interface associated with the document application to generate graphical data that characterizes a portion of the spreadsheet that other users make modifications.
In some implementations, the automated assistant can smoothly transition between dictation and command interpretation as other users are speaking into the automated assistant. For example, instead of having an automated assistant copy data from a separate document to a spreadsheet, a user other user may speak a combination of: (i) Instructions to execute and (ii) text to be incorporated into a spreadsheet. For example, other users may be referring to a data set related to printing and providing spoken utterances such as "Assistant, in the new column of the research document, add '39pieces' to the first cell, '42pieces' to the second cell, and '40pieces' to the third cell (Assistant, add" 39degrees "to the first cell, add" 42degrees "to the second cell, and add" 40degrees "to the third cell in the new column of the research document). In response to such spoken utterances from other users, the automated assistant may identify a spreadsheet that was recently modified to include a new column and select one or more cells in the new column. The automated assistant can determine that the spoken utterance from the other user includes a certain amount of dictation and select a portion of the textual data transcribed from the spoken utterance to be incorporated into a particular cell. Alternatively or additionally, the format of each cell in the new column may be modified to correspond to a "degree" value, so that the new column will reflect the units of data (e.g., degrees celsius) that will be added to the new column and as specified in the spoken utterance. The automated assistant can input each numerical value from a spoken utterance based at least on the text-to-speech processing and the natural language understanding of the entire spoken utterance. In some implementations, the spoken utterance can be fulfilled without requiring other users to access a document application that provides access to a GUI for editing a spreadsheet, but these modifications can be performed through spoken interaction with an automated assistant.
The above description is provided as an overview of some embodiments of the disclosure. Further description of these and other embodiments will be described in more detail below.
Other embodiments may include a non-transitory computer-readable storage medium storing instructions executable by one or more processors (e.g., a Central Processing Unit (CPU), a Graphics Processing Unit (GPU), and/or a Tensor Processing Unit (TPU)) to perform a method, such as one or more of the methods described above and/or elsewhere herein. Other embodiments may include a system of one or more computers including one or more processors operable to execute stored instructions to perform a method, such as one or more of the methods described above and/or elsewhere herein.
It should be understood that all combinations of the above concepts and additional concepts described in greater detail herein are considered a part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are considered part of the subject matter disclosed herein.
Drawings
1A, 1B, and 1C illustrate views of one or more users interacting with an automated assistant to create and edit a document without having to edit the document directly via a GUI interface.
Fig. 2A, 2B, 2C, and 2D illustrate views of a user creating and editing a document using an automated assistant.
Fig. 3 illustrates a system for providing an automated assistant that can edit, share, and/or create various types of documents in response to user input.
FIG. 4 illustrates a method for causing an automated assistant to interact with a document application in order to edit a document without requiring a user to interact directly with an interface of the document application.
FIG. 5 is a block diagram of an example computer system.
Detailed Description
1A, 1B, and 1C illustrate views 100, 120, and 140 in which one or more users interact with an automated assistant in order to create and edit a document without having to edit the document directly via a GUI interface. In this manner, the user will not be limited to a display interface when creating and editing a document, but may rely on an automated assistant that may be accessed from a variety of different interfaces. For example, as shown in FIG. 1A, when the first user 102 happens to have an idea about the particular report they want to generate, the first user 102 may jog externally. The first user 102 may request that the automated Assistant create a report by providing a first spoken utterance 106, such as "Assistant, create a report from my report template and share it with Houston" and "Assistant" to create a report from My report template and share it with Houdland ". The first spoken utterance 106 may be received at an interface of the client computing device 104, which may be a wearable computing device. The client computing device 104 can provide access to an instance of an automated assistant that can interface with a document application for creating, sharing, and/or editing documents.
In response to receiving the first spoken utterance 106, the automated assistant may initiate execution of one or more functions to cause the document application to create a new document from the "report template". In some implementations, the automated assistant can use natural language understanding to identify and/or generate one or more functions for execution. In some implementations, one or more trained machine learning models can be used when processing the first spoken utterance 106 and/or generating one or more functions to be performed by the document application. In the case of a previous permission from user 102, such processing may include accessing data that has been recently accessed by the document application. For example, historical data associated with a document application may indicate that the user 102 has previously identified another user with the name "Howard" when providing editing rights to certain documents created via the document application. In this manner, the automated assistant may call a previously executed function, but swap one or more slot values of the function in order to satisfy any request embodied in the first spoken utterance 106.
As a result of executing the one or more functions identified by the automated assistant, and in response to the first spoken utterance 106, the document application may create a new report and provide editing permission to another user, named "Howard. For example, the user "Howard" may be identified in a contact list stored in association with the user 102. In addition, the user 102 can provide a second spoken utterance 108, such as "In The intro section, add paragraphs and a comments," and a third spoken utterance 110, such as "The comment short say:" This is where you should discuss The result. In response to receiving the second spoken utterance 108 and the third spoken utterance 110, the automated assistant can generate one or more additional functions to be performed by the document application. For example, in some implementations, because the user 102 only uses the automated assistant to perform document-related tasks, the automated assistant can select one or more Automatic Speech Recognition (ASR) techniques that are appropriate for understanding document-related queries.
In some implementations, the selected ASR technique may employ a specifically trained machine learning model that is trained using document-related data and/or based on data associated with previous interactions between the user and the document application. In some additional or alternative implementations, the selected ASR techniques may bias a specifically trained machine learning model (e.g., a general model) against the recognition of terms that are often encountered in document-related queries. Biasing speech recognition towards a term or terms may be accomplished using one or more of a variety of biasing techniques. As one example, a language model used in some ASR techniques may include weights for terms, where each weight reflects a corresponding degree of bias for a corresponding term. As another example, biasing towards terms can be achieved simply by including the terms in the language model used in ASR. As yet another example, the decoding graph optionally utilized in ASR may be decoded while biased towards certain terms. As another example, the bias may be used to generate one or more additional hypotheses in addition to the initial hypothesis (or hypotheses) generated by the ASR model, and these additional hypotheses are considered candidate transcriptions. For example, additional hypotheses may be generated and/or selected based on the inclusion of the bias term. In these and other ways, any spoken utterance provided by the user 102 in the context of the first spoken utterance 106 can be more accurately interpreted by the automated assistant.
In response to the second spoken utterance 108, the automated assistant can generate a function that causes the document application to create a new passage in the portion of the new report that was just created in response to the first spoken utterance 106. In some implementations, a newly created reporting document may be associated with one or more semantic annotations that each include one or more corresponding semantic interpretations for a particular portion of the reporting document. This may be in part because the report document is created from a template, which may include existing semantic annotations. However, in some implementations, when the automated assistant is requested to perform an operation associated with a particular document, the automated assistant can generate and/or access a semantic annotation associated with the particular document. Such semantic annotations may allow the automated assistant to associate certain inputs from the user with certain portions of one or more documents that the user may access. For example, the report document created by the user 102 may include a semantic annotation that characterizes a Paragraph in a second page of the report document as "introduction" (e.g., < Paragraph-3> } = = [ "introduction," "banding," "influencing" ]). Thus, because "intro" as referred to in the second spoken utterance 108 is synonymous with "introduction" as described by the semantic annotation, the automated assistant can generate a function that causes the document application to create a new paragraph in the second page of the report document.
Further, the automated assistant can generate another function that correlates the comment to a new passage created on the second page as requested by the user 102 via the second spoken utterance 108. The automated assistant can also generate another function from the third spoken utterance 110 to include the text "This is where you short distance discs the results" in the comment. As each generated function can be created and executed, the automated assistant can optionally provide an output 112 that characterizes the progress of the request from the user 102. For example, the output 112 may be audibly rendered via the client computing device 104, and include natural language content, such as "Ok, I've created the report and added the paragraph and the comment I've associated shared the report with Howard".
FIG. 1B illustrates a view 120 of the automated assistant in response to the second user 126 having provided a notification 128 indicating that the first user 102 has shared a document with it. In some implementations, the second user 126 may have a client computing device 124 that provides access to another instance of the automated assistant. The automated assistant associated with the second user 126 may be provided by the same entity or a different entity that provides access to the automated assistant accessed by the first user 102 in fig. 1A. In some implementations, separate instances of the automated assistant can communicate via an API and/or other interface for communicating between applications.
The notification 128 provided by the automated assistant via the client computing device 124 may include natural language content, such as "Katherine shared a document with you" (cathelin has shared a document with you) ". The natural language content of the notification 128 may optionally be audibly rendered to the second user 126 and/or the graphical notification 138 may be rendered at the GUI 136 of the client computing device 124. For example, in some implementations, when the first user 102 invokes the automated assistant to perform an action associated with a document that the second user 126 can access, the automated assistant can cause the graphical notification 138 to be rendered at the GUI 136. The graphical notification 138 may include rendering a portion 134 of the report created by the first user 102, and the particular portion 134 rendered may include the annotation 132 directed to the second user 126. In some implementations, to generate the graphical notification 138, an automated assistant associated with the first user 102 and/or the second user 126 can request, via an API call or other request, that the document application provide certain data related to the second user 126. For example, the automated assistant can request that the document application provide a sub-portion of the entirety of the document in a form similar to a GUI that the document application will generate.
The document application may optionally provide a graphical rendering of a particular portion 134 of the document corresponding to the comment 132, thereby allowing the second user 126 to visualize the context of the comment 132. In some implementations, an automated assistant associated with second user 126 may request that the document application provide a rendering of a particular portion 134 of the document according to the type of interface available via client computing device 124. In some implementations, the request can be fulfilled when the document application provides any combination of image files, text data, audio data, video data, and/or data characterizing a particular portion 134 of the document. In this manner, second user 126 may receive an audible rendering of comment 132 and/or any sub-portion of the document associated with comment 132 when the display interface is not currently available to second user 126.
When second user 126 has confirmed comment 132 from first user 102, second user 126 may provide a respective request to their respective automated assistant. For example, the second user 126 may provide a spoken utterance 130, such as "Assistant, please add The following to The following paragraph:" The results confirm our earliest prediction ")". In response, the automated assistant may generate one or more functions that, when executed, cause the document application to modify the portion of the report corresponding to the new paragraph to include the statement from second user 126. In some implementations, the one or more functions may be generated more efficiently based on one or more previous interactions between the first user 102 and the automated assistant and/or the second user 126 and the automated assistant. For example, the automated assistant can access data characterizing one or more interactions that have occurred in which the report document is the subject of the one or more interactions. Such data may be used by the automated assistant to identify slot values for one or more functions to be performed in order to fulfill requests from the user. For example, in response to the spoken utterance 130, the automated assistant may determine whether any documents accessible to the second user 126 have recently been edited to include new paragraphs. When the report document is identified as recently edited to include a new passage, the automated assistant may invoke the document application to edit the new passage in accordance with the spoken utterance 130 from the second user 126.
In some implementations, based on the edits made by the second user 126, the automated assistant can generate one or more additional semantic annotations characterizing one or more sub-portions of the entire reporting document. For example, the additional semantic annotation may characterize the edit made in FIG. 1B as "new paragraph by Howard; results (Howard's new paragraph)'. Thereafter, the semantically annotated content can be used when selecting whether the report document and/or a sub-portion of the report document is the subject of another spoken utterance from the first user 102 or the second user 126. As an example, in fig. 1C, the first user 102 can provide the spoken utterance 142 to an automated assistant accessible via a client computing device 146 that is a standalone speaker device. The spoken utterance 142 can be, for example, "is the spoken utterance by Howard? (assistant, do he review holward). The spoken utterance 142 may be provided by the first user 102 at a point in time after a period of time that includes the interaction described with respect to fig. 1A and 1B.
In response to receiving the spoken utterance 142, the automated assistant may determine that the first user 102 referred to the contact "Howard," and recognize the report document. The automated assistant can identify the report based on the first user 102 having identified "Howard" in the interaction with the automated assistant when the first user 102 requests the automated assistant to create a report document. This can cause the automated assistant to rank and/or otherwise prioritize the reporting documents relative to other documents that the automated assistant can access in order to fulfill one or more requests in the spoken utterance 142. When the automated assistant has identified a reporting document, the automated assistant may determine that the first user 102 is requesting the automated assistant to identify any recent changes made by the contact "Howard". In response, the automated assistant may generate one or more functions for causing the document application to provide information about certain edits based on the identified author of the edits. For example, one or more functions may include a report _ updates ("report documents", "Howard", most _ receiver ()), which, when executed, may return one or more recently modified summaries made to the identified document (e.g., "report documents"). For example, the summary may include a semantic understanding of edits made to the reporting document and/or an indication of one or more types of edits (e.g., additions of text) made to the identified document.
As a result, and in response to the spoken utterance 142, the automated assistant may provide an output 148, such as "homeward-added text to the new paragraph" (hodgkin added text to new paragraph) ". In some implementations, the automated assistant can generate semantic annotations of the document as the document is edited. In this manner, subsequent automated assistant input related to the document may be more easily fulfilled while mitigating latency that may occur during document identification. For example, when the first user 102 provides another spoken utterance 150, such as "Read the conclusion," the automated assistant may identify a semantic annotation characterizing a portion of the report document as having conclusive language — even though the report document does not already have the word "conclusion" in the content of the report document. Thereafter, the automated assistant can provide audible output 152 via the client computing device 146 and/or visual output at the television computing device 144. For example, the client computing device 146 may render the audible output "Sure \8230; (of course.)" followed by the automated assistant audibly rendering the paragraph of the reporting document corresponding to the conclusive semantic annotation.
Fig. 2A, 2B, 2C, and 2D illustrate a view 200, a view 220, a view 250, and a view 260 of a user 202 using an automated assistant to create and edit a document. The user 202 can initiate the creation of a document, such as a spreadsheet, by first invoking the automated assistant to determine whether certain document sources are available to the automated assistant. For example, user 202 may provide a user interface such as "Do I have new nodes related to solar cells? (do i have any notes related to solar cells. In response, the automated assistant can perform one or more searches for documents that include and/or are associated with the term "solar cells. When the automated assistant identifies a plurality of different documents that are related to terms identified by the user 202, the automated assistant can provide an output 204, such as "Sure (of course)".
When the user 202 confirms the output 204 from the automated assistant, the user 202 may provide a user interface such as "Could you consistent with the same nodes in a popular show and read to me? (can you incorporate those notes into a spreadsheet and read them to me. In response to receiving the second spoken utterance 214, the automated assistant may generate one or more functions to be performed by the document application in order for the document application to merge the recognized documents into a single document. When the merged single document is created by the document application, the automated assistant may access the merged document in order to fulfill the latter user request that the automated assistant read the merged document to user 202. For example, the automated assistant may respond with another output 216 such as "Ok \8230; (good.)" and then read the merged document (e.g., new spreadsheet) to the user 202.
In some implementations, to cause the automated assistant to perform further operations with respect to the merged document, the automated assistant can cause semantic annotations to be stored in association with the merged document. For example, as provided in fig. 2B, the automated assistant may generate a request for semantic annotations to be associated with the merged document (e.g., spreadsheet 232). The request may be performed at a vehicle computing device and/or a remote computing device 222, such as a remote server device. In some implementations, one or more techniques for generating semantic annotations for particular sub-portions of a document may be employed. For example, one or more trained machine learning models and/or one or more heuristics may be utilized to generate semantic annotations for the spreadsheet 232. The data processed to generate a particular semantic annotation may include: the contents of spreadsheet 232, interaction data characterizing the interaction between user 202 and the automated assistant, the document on which spreadsheet 232 is based, and/or any other data source that may be associated with spreadsheet 232 and/or the automated assistant. For example, each of the respective semantic annotations (224, 226, 228, and 230) may be generated based on the contents of the spreadsheet 232 and/or the various Design documents (Design _1, design _2, design _3, and Design 244) used to create each corresponding row of the spreadsheet 232. Alternatively or additionally, semantic annotations 234 may be generated for the entire spreadsheet 232 to provide semantic understanding that may be referred to when the automated assistant attempts to fulfill subsequent automated assistant requests.
For example, as provided in FIG. 2C, the user 202 may provide another spoken utterance 252, such as "Assistant, elementary traffic annotated, add a comment (Assistant, add comment anytime in mentioning wattage)". In response, the automated assistant can generate one or more functions to be performed by the document application in order to fulfill the request from the user 202. When the document application performs one or more functions, the document application and/or automated assistant may identify an instance of the term "watts" in spreadsheet 232 and associate a corresponding comment with each instance of the term watts. Upon completion, the document application may optionally invoke an API call to the automated assistant to cause the automated assistant to provide an indication 254 (e.g., "Sure") that the requested action has been fulfilled. Alternatively or additionally, the indication 254 may be generated with a recently edited outline such as: the number of edits performed across the document, the synopsis of the changes made, a graphical indication of the latest version of the document, and/or any other information that may characterize the changes to the document.
In some implementations, the user 202 can provide the spoken utterance 256 to cause the automated assistant to notify another user of the changes that have been made to the spreadsheet 232. For example, the spoken utterance 256 can be "Also, could you tag William in ear comment and ask him to confirm the wadding amounts? (again, can you mark william in each comment and ask him to confirm the wattage quantity). In response, the automated assistant may generate one or more functions that, when executed, cause the document application to modify the comments corresponding to the term "wait" and also provide a message to the contact (e.g., "William (William)") about each comment. To perform the above-described operations on the desired document, the automated assistant can identify one or more documents that have been recently accessed by the user 202 and/or the automated assistant. This may allow the automated assistant to identify the spreadsheet 232 that the spreadsheet 232 may have recently been modified to include comments and/or certain semantic annotations.
For example, each respective semantic annotation (224, 226, 228, and 230) can be stored in association with a particular row in spreadsheet 232, and each respective semantic annotation can include one or more terms synonymous with the unit of measure "Watts. For example, each respective semantic annotation may identify terms such as "Watts," power, "and/or any other term synonymous with" Watts. Thus, in response to the spoken utterance 256, the automated assistant may identify the spreadsheet 232 as being most associated with "watts amounts," and cause each wattage-related review in the spreadsheet 232 to include a request for "William" to confirm any "watts amounts. In response, the automated assistant may provide an output 258 such as "Ok, I've tagged William in access comment and ask him to confirm" (good, I have marked William in each comment and asked him to confirm) ".
In some implementations, a second user 276 (e.g., william) can interact with an instance of the automated assistant to further edit the spreadsheet 232. For example, an automated assistant accessible to second user 276 may provide output 262 via client computing device 272. Output 262 may include natural language content such as "You have been tagged in comments with a speedsheet" for example. In response, the second user 276 may provide a first spoken utterance 264, such as "What did the say? (what they said. The automated assistant may process the first spoken utterance 264 and determine that the second user 276 is referring to a comment in the spreadsheet 232 and then access the text of the comment. The automated assistant can then cause the client computing device 272 or another computing device 270 (e.g., a television) to render an output of text that characterizes the comment. For example, the automated assistant may cause the client computing device 272 to render another audible output 266, such as "Confirm the wattage amount in the spreadsheet," and also provide an indication that the spreadsheet 232 is to be rendered at the nearby display interface 274 (e.g., "I will display the spreadsheet for you"). The automated assistant can then cause display interface 274 to render a sub-portion of the entire spreadsheet 232. The second user 276 may continue editing the spreadsheet 232 via the document application by providing a second spoken utterance 268, such as "Reply to reach comment by say: the se all expected correct match correct". In response, the automated assistant may generate one or more functions that, when executed, cause the document application to edit each spreadsheet comment directed to the second user 276 (e.g., william). In this manner, the second user 276 is able to review and edit the document without having to use their limbs to manually control certain peripherals of the dedicated document editing device.
Fig. 3 illustrates a system 300 for providing an automated assistant 304, which automated assistant 304 can edit, share, and/or create various types of documents in response to user input. Automated assistant 304 can operate as part of an assistant application provided at one or more computing devices, such as computing device 302 and/or a server device. The user may interact with the automated assistant 304 via an assistant interface 320, which assistant interface 320 may be a microphone, a camera, a touch screen display, a user interface, and/or any other device capable of providing an interface between the user and an application. For example, a user may initialize the automated assistant 304 by providing spoken, text, gesture, and/or graphical input to the assistant interface 320 to cause the automated assistant 304 to initialize one or more actions (e.g., provide data, control peripherals, access agents, generate input and/or output, etc.). Alternatively, automated assistant 304 may be initialized based on processing context data 336 using one or more trained machine learning models. Context data 336 may characterize one or more features of an environment in which automated assistant 304 may access, and/or one or more features of a user that is predicted to be intended to interact with automated assistant 304. Computing device 302 may include a display device, which may be a display panel that includes a touch interface for receiving touch input and/or gestures for allowing a user to control applications 334 of computing device 302 via the touch interface. In some implementations, the computing device 302 may lack a display device, providing audible user interface output, and not graphical user interface output. Further, the computing device 302 may provide a user interface, such as a microphone, for receiving spoken natural language input from the user. In some implementations, the computing device 302 may include a touch interface and may not have a camera, but may optionally include one or more other sensors.
The computing device 302 and/or other third party client devices may communicate with the server device over a network, such as the internet. Further, computing device 302 and any other computing devices may communicate with each other over a Local Area Network (LAN), such as a Wi-Fi network. The computing device 302 may offload computing tasks to a server device in order to conserve computing resources at the computing device 302. For example, the server device may host automated assistant 304, and/or computing device 302 may transmit input received at one or more assistant interfaces 320 to the server device. However, in some implementations, the automated assistant 304 may be hosted at the computing device 302 and various processes that may be associated with automated assistant operations may be performed at the computing device 302.
In various implementations, all or less than all aspects of automated assistant 304 may be implemented on computing device 302. In some of these implementations, aspects of the automated assistant 304 are implemented via the computing device 302 and may interface with a server device that may implement other aspects of the automated assistant 304. The server device may optionally serve multiple users and their associated assistant applications via multiple threads. In implementations in which all or less than all aspects of automated assistant 304 are implemented via computing device 302, automated assistant 304 may be an application separate from the operating system of computing device 302 (e.g., installed "on top" of the operating system) -or may alternatively be implemented directly by the operating system of computing device 302 (e.g., considered an application of the operating system but integrated with the operating system).
In some implementations, the automated assistant 304 can include an input processing engine 306 that can employ a number of different modules to process input and/or output of the computing device 302 and/or the server device. For example, the input processing engine 306 may include a speech processing engine 308, and the speech processing engine 308 may process audio data received at the assistant interface 320 to identify text embodied in the audio data. Audio data may be transmitted from, for example, computing device 302 to a server device in order to reserve computing resources at computing device 302. Additionally or alternatively, the audio data may be processed exclusively at the computing device 302.
The process for converting audio data to text may include a speech recognition algorithm that may employ a neural network and/or a statistical model for identifying a set of audio data corresponding to a word or phrase. The text converted from the audio data may be parsed by the data parsing engine 310 and made available to the automated assistant 304 as text data that may be used to generate and/or identify command phrases, intents, actions, slot values, and/or any other content specified by the user. In some implementations, the output data provided by the data parsing engine 310 can be provided to the parameter engine 312 to determine whether the user provided input corresponding to a particular intent, action, and/or routine that can be executed by the automated assistant 304 and/or an application or agent accessible via the automated assistant 304. For example, assistant data 338 can be stored at the server device and/or computing device 302 and can include data defining one or more actions that can be performed by the automated assistant 304, as well as parameters necessary to perform the actions. The parameter engine 312 may generate one or more parameters for the intent, action, and/or slot value and provide the one or more parameters to the output generation engine 314. The output generation engine 314 may use one or more parameters to communicate with the assistant interface 320 for providing output to a user and/or to communicate with one or more applications 334 for providing output to one or more applications 334.
In some implementations, automated assistant 304 can be an application that can be installed "on top" of the operating system of computing device 302 and/or can itself form a portion (or all) of the operating system of computing device 302. Automated assistant applications include on-device speech recognition, on-device natural language understanding, and on-device implementation and/or access to on-device speech recognition, on-device natural language understanding, and on-device fulfillment. For example, on-device speech recognition may be performed using an on-device speech recognition module that processes audio data (detected by a microphone) using an end-to-end speech recognition machine learning model stored locally at computing device 302. On-device speech recognition generates recognized text for spoken utterances (if any) present in the audio data. Further, for example, an on-device Natural Language Understanding (NLU) module can be used to perform the on-device NLU, which processes recognized text generated using on-device speech recognition, and optionally, context data, to generate NLU data.
The NLU data can include an intent corresponding to the spoken utterance and optionally parameters (e.g., a bin value) for the intent. On-device fulfillment modules utilizing NLU data (from the on-device NLU) and optionally other local data may be used to perform on-device fulfillment to determine actions to take to resolve the intent of the spoken utterance (and optionally parameters for the intent). This may include determining local and/or remote responses (e.g., answers) to the spoken utterance, interactions with a locally installed application performed based on the spoken utterance, commands transmitted to internet of things (IoT) devices based on the spoken utterance (either directly or via a corresponding remote system), and/or other resolving actions performed based on the spoken utterance. Fulfillment on the device may then initiate local and/or remote execution/implementation of the determined action to resolve the spoken utterance.
In various embodiments, at least remote speech processing, remote NLU, and/or remote fulfillment may be selectively utilized. For example, the recognized text may be at least selectively transmitted to a remote automated assistant component for remote NLU and/or remote fulfillment. For example, the recognized text may optionally be transmitted for remote execution in parallel with on-device execution, or transmitted in response to a fault being performed by the NLU on the device and/or on the device. However, on-device speech processing, on-device NLUs, on-device fulfillment, and/or on-device execution can be prioritized at least due to the latency reduction they provide in resolving the spoken utterance (since no client-server round trips are needed to resolve the spoken utterance). Further, the on-device functionality may be the only functionality available without or with limited network connectivity.
In some implementations, the computing device 302 can include one or more applications 334, which can be provided by a third party entity different from the entity providing the computing device 302 and/or the automated assistant 304. The application state engine of the automated assistant 304 and/or the computing device 302 can access the application data 330 to determine one or more actions that can be performed by the one or more applications 334, and the state of each of the one or more applications 334 and/or the state of the respective device associated with the computing device 302. The device state engine of automated assistant 304 and/or computing device 302 can access device data 332 to determine one or more actions that can be performed by computing device 302 and/or one or more devices associated with computing device 302. Further, application data 330 and/or any other data (e.g., device data 332) may be accessed by automated assistant 304 to generate context data 336, which context data 336 may characterize the context in which a particular application 334 and/or device is executing and/or the context in which a particular user is accessing computing device 302, accessing application 334, and/or any other device or module.
When one or more applications 334 execute at computing device 302, device data 332 may characterize the current operating state of each application 334 executing at computing device 302. Further, the application data 330 may characterize one or more features of the executing application 334, such as content of one or more graphical user interfaces rendered as commanded by the one or more applications 334. Alternatively or additionally, the application data 330 can characterize a scheme of actions that can be updated by the respective application and/or by the automated assistant 304 based on a current operating state of the respective application. Alternatively or additionally, one or more action schemes for one or more applications 334 can remain static, but can be accessed by an application state engine to determine the appropriate action to initialize with the automated assistant 304.
In some implementations, the system 300 can include a document identification engine 316 that can identify one or more documents that a user can be requesting the automated assistant 304 to access, modify, edit, and/or share. The document recognition engine 316 can be used in processing natural language content of a user input, such as a spoken utterance. Based on such processing, document identification engine 316 may determine a score and/or probability of one or more documents accessible to automated assistant 304. The particular document with the highest score and/or highest probability may then be identified as the document that the user is referring to. In some instances, when two or more documents have similar scores and/or probabilities, the user may be prompted to clarify the document to which they refer, and the prompt may optionally have characteristics of the two or more documents (e.g., title, content, collaborators, recent edits, etc. from the document with the particular score). In some implementations, factors that affect whether a particular document is identified by document identification engine 316 may include: context of the user input, previous user input, whether the user input identifies another user, a schedule of the user, whether the content of the user input is similar to the content of one or more semantic annotations, and/or any other factors that may be associated with the document.
In some implementations, the system 300 can include a semantic annotation engine 318 that can be used to generate and/or identify semantic annotations for one or more documents. For example, when automated assistant 304 receives an indication that someone is sharing a document with an authenticated user of automated assistant 304, semantic annotation engine 318 can be employed to generate semantic annotations for the document. Semantic annotations may include natural language content and/or other data that provides an interpretation of one or more sub-portions of the entire document. In this manner, automated assistant 304 may rely on semantic annotations for a variety of different documents when determining that a particular document is the subject of a request from a user.
In some implementations, semantic annotations for a particular document may be generated based on how one or more users refer to the particular document. For example, a particular document may include semantic annotations as well as other content in the body of the document. Although the content and semantic annotations of a document may include various descriptive languages, the content of a document may not include any terms that a user would prefer to use when referring to the document. For example, a user may refer to a particular spreadsheet as a "home maintenance" spreadsheet even if the particular spreadsheet does not include the terms "home" or "maintenance". However, based on automated assistant 304 receiving user input referring to the "home maintenance" spreadsheet and automated assistant 304 recognizing the "home maintenance" spreadsheet using document recognition engine 316, semantic annotation engine 318 may generate semantic annotations. The semantic annotation may incorporate the term "home maintenance" and may be stored in association with the "home maintenance" spreadsheet. In this manner, automated assistant 304 can maintain processing bandwidth when identifying documents that a user may refer to. Additionally, this may allow document editing to be performed more efficiently via automated assistant 304, as automated assistant 304 may adapt to dynamic perspectives that a user may have with respect to certain documents.
In some implementations, the system 300 can include a document action engine 326, which document action engine 326 can identify one or more actions to be performed for a particular document. Document action engine 326 may identify one or more actions to perform based on user input, past interaction data, application data 330, device data 332, context data 336, and/or any other data that may be stored in association with a document. In some implementations, one or more semantic annotations associated with one or more documents may be used to identify a particular action that a user is requesting that automated assistant 304 perform. Alternatively, or in addition, document action engine 326 may identify one or more actions to perform on a particular document based on the content of the particular document and/or the content of one or more other documents.
For example, the user may provide an input, such as "Assistant, add a new 'Date' row to my finance spreadsheet" (an Assistant, adding a new "Date" row to my finance spreadsheet). In response, document action engine 326 may determine that the user is associated with a "finance" spreadsheet that includes various dates listed below, and may then determine that the appropriate action to perform includes performing the new _ row () function and insert _ date (). In this way, a new row may be added to the "find" spreadsheet and a current date entry may be added to the new row. In some implementations, the selection of the function to perform may be based on processing user input and/or other contextual data using one or more trained machine learning models and/or one or more heuristic processes. For example, a particular trained machine learning model may be trained using training data that is based on another user requesting their respective automated assistant to perform a particular operation but then the other user manually performs an instance of the particular operation. Thus, the training data may be derived from crowd-sourcing techniques for teaching automated assistants to accurately respond to requests from various users that direct their automated assistants to perform operations associated with a particular document.
In some implementations, the system 300 can include a document preview engine 324 that can process data associated with one or more documents in order to allow the automated assistant 304 to provide an appropriate preview of a particular document. For example, a first user causes the automated assistant to edit a particular document and then share the particular document with a second user. In response, the instance of the automated assistant associated with the second user may utilize the document preview engine 324 to render a preview of the particular document — without having the document application occupy the entire display interface of the computing device. For example, the automated assistant can utilize the API to retrieve the graphical preview data from the document application and then render the graphical notification of the second user based on the graphical preview data. Alternatively or additionally, the automated assistant may include functionality for rendering a portion of a document that has been edited by a user without having to render the entire document. For example, a user may provide a spoken utterance, such as "Assistant, what is the latest slide added to my architecture presentation? (assistant, what is the latest slide added to my building presentation). In response, the automated assistant 304 may invoke the document recognition engine 316 to recognize the "architecture" presentation document and also invoke the document preview engine 324 to capture a preview (e.g., images and/or text) of the slide recently added to the document. Automated assistant 304 can then cause the display interface of computing device 302 to render graphics of the most recently added slide without causing the entire presentation application to be loaded into memory of computing device 302. Thereafter, the user may view the slide preview and provide another command to the automated Assistant 304 for editing the slide and/or adding comments to the slide (e.g., "Assistant, add a comment to this slide and tag William in the comment").
Fig. 4 illustrates a method 400 for an automated assistant to interact with a document application in order to edit a document without requiring a user to directly interact with an interface specific to the document application. The method 400 may be performed by one or more computing devices, applications, and/or any other apparatus or module that may be associated with an automated assistant. The method 400 can include an operation 402 of determining whether automated assistant input has been received by the automated assistant. The automated assistant input may be a spoken utterance, an input gesture, a text input, and/or any other input that may be used to control the automated assistant. When automated assistant input is received, the method 400 may proceed from operation 402 to operation 404. Otherwise, the automated assistant can proceed to operation 416 for causing one or more other functions to be performed in response to the automated assistant input.
In some implementations, the method 400 may proceed from operation 406 to operation 408, which may include determining whether any semantic annotations have been stored in association with the particular document 408. When the semantic annotation is not stored in association with the particular document, the method 400 may proceed to operation 410. However, when the semantic annotations are stored in association with a particular document, the method 400 may proceed to operation 412. Operation 412 may include identifying one or more functions to perform based on the automated assistant input and/or semantic annotations. For example, when the automated assistant input refers to a sub-portion of a particular document, the semantic annotation corresponding to the sub-portion may comprise a term that is synonymous with the automated assistant input. For example, when the automated assistant enters a request that includes adding a comment to a "statistical data" portion of a particular document, but the particular document does not have a subsection explicitly labeled "statistical data," the automated assistant may identify a statistical term in one or more semantic annotations. Terms such as "average" and "distribution" may be included in a particular semantic annotation for a particular sub-portion, thereby providing the automated assistant with a correlation between the particular sub-portion and the automated assistant input. As a result, the automated assistant can generate functions that point to particular sub-portions of a particular document. The function may include a slot value or other parameter that identifies a portion of text in a particular topic via a number of words, a line index, a segment number, a page number, and/or any other identifier that may be used to identify a sub-portion of a document. From operation 412, the method 400 may advance to operation 416, which operation 416 may include causing one or more functions to be performed in response to the automated assistant input.
From operation 408, the method 400 may proceed to operation 410 when no semantic annotation is currently stored in association with the particular document. Operation 410 may include identifying one or more functions (i.e., actions) to perform based on the automated assistant input and/or the content of the particular document. The method 400 may include an optional operation 414 of generating one or more semantic annotations based on the automated assistant input and/or the content of the particular document. For example, when a user uses one or more terms to refer to a particular sub-portion of a particular document, the automated assistant may generate a semantic annotation that includes the one or more terms. The generated semantic annotations may then be stored as metadata in association with the particular document, and in particular, in association with the particular sub-portion of the particular document. From operation 410 and/or operation 414, the method 400 may advance to operation 416 where one or more functions are executed in response to automated assistant input from the user in operation 416.
Fig. 5 is a block diagram 500 of an example computer system 510. The computer system 510 typically includes at least one processor 514, which communicates with a number of peripheral devices via a bus subsystem 512. These peripheral devices may include a storage subsystem 524, including, for example, memory 525 and a file storage subsystem 526; an interface output device 520; a user interface input device 522, and a network interface subsystem 516. The input and output devices allow a user to interact with computer system 510. Network interface subsystem 516 provides an interface to external networks and is coupled to corresponding interface devices in other computer systems.
The user interface input device 522 may include a keyboard; a pointing device such as a mouse, trackball, touchpad, or tablet; a scanner; a touch screen incorporated into the display; an audio input device such as a voice recognition system; a microphone; and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computer system 510 or a communication network.
User interface output devices 520 may include a display subsystem, a printer, a facsimile machine, or a non-visual display such as an audio output device. The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or some other mechanism for creating a visual image. The display subsystem may also provide non-visual displays, such as via audio output devices. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computer system 510 to a user or to another machine or computer system.
These software modules are typically executed by processor 514 alone or in combination with other processors. Memory 525 used in storage subsystem 524 may include a number of memories including a main Random Access Memory (RAM) 530 for storing instructions and data during program execution and a Read Only Memory (ROM) 532 for storing fixed instructions. The file storage subsystem 526 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical disk drive, or removable media cartridges. Modules implementing the functionality of particular embodiments may be stored by file storage subsystem 526 in storage subsystem 524, or in other machines accessible by processor 514.
Where the system described herein collects or may use personal information about a user (or often referred to herein as a "participant"), the user may be provided with an opportunity to control whether programs or features collect user information (e.g., information about the user's social network, social behavior or activity, profession, the user's preferences, or the user's current geographic location), or whether and/or how to receive content from a content server that may be more relevant to the user. In addition, certain data may be processed in one or more ways prior to storage or use, such that personally identifiable information is removed. For example, the identity of the user may be treated such that no personally identifiable information can be determined for the user, or the geographic location of the user for which geographic location information is obtained (such as a city, zip code, or state level) may be generalized such that a particular geographic location of the user cannot be determined. Thus, the user may control how information about the user is collected and/or information that has been used.
While several embodiments have been described and illustrated herein, various other means and/or structures for performing the function and/or obtaining the result and/or one or more of the advantages described herein may be utilized and each of these variations and/or modifications is considered to be within the scope of the embodiments described herein. More generally, all parameters, dimensions, materials, and configurations described herein are intended to be exemplary, and the actual parameters, dimensions, materials, and/or configurations will depend on the particular application or uses for which the teachings are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific embodiments described herein. It is, therefore, to be understood that the foregoing embodiments are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, embodiments may be practiced otherwise than as specifically described and claimed. Embodiments of the present disclosure are directed to each individual feature, system, article, material, kit, and/or method described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
In some embodiments, a method implemented by one or more processors is set forth as including operations such as: user input directed to an automated assistant is received from a user at an automated assistant interface of a computing device, wherein the user input comprises a request for the automated assistant to access or modify a document. The method may further comprise the operations of: in response to receiving the user input, identifying a particular document that the user is requesting to access or modify, wherein the particular document is stored at the computing device or another computing device, wherein explicit dictation of a corresponding name for the particular document is omitted from the user input, and wherein identifying the particular document comprises processing data comprising natural language content of the user input and content of each of a plurality of different documents accessible via the computing device. The method may further comprise the operations of: determining one or more actions to perform on the particular document, wherein determining the one or more actions is based on the user input and one or more semantic annotations of the particular document stored in association with the particular document, and wherein each of the one or more semantic annotations includes a semantic interpretation of a respective sub-portion in an entirety of the particular document. The method may further comprise the operations of: causing the one or more actions to be performed to access or modify the particular document in accordance with the user input.
In some implementations, the particular document was not initially created by the user, and the particular document was created using a different document application than the automated assistant. In some implementations, the data further includes additional semantic annotations, and each of the additional semantic annotations includes another semantic interpretation of another respective sub-portion of another respective additional document of the plurality of different documents. In some implementations, the automated assistant interface of the computing device includes a microphone, and the user input is received when a document editing program for editing the particular document is not present in a foreground of a graphical user interface of the computing device. In some implementations, the one or more semantic annotations include a particular semantic annotation that includes a semantic interpretation of a document comment created by an additional user, and the one or more actions include causing a notification to be provided to the additional user via another interface of a separate computing device associated with the additional user.
In some embodiments, the method may further comprise the operations of: prior to receiving user input at an automated assistant interface of a computing device: receiving another user input comprising another request for the automated assistant to render a description of supplemental content added to the particular document by another user. In some implementations, the request provided via the user input directs the automated assistant to access or modify supplemental content added to the particular document by another user. In some implementations, causing the one or more actions to be performed includes: speech-to-text processing is performed to convert a portion of the user input to text data and cause the text data to be incorporated into a portion of a particular document corresponding to a particular semantic annotation of the one or more semantic annotations. In some implementations, the method can further include generating the one or more semantic annotations using a trained machine learning model that is trained using training data based on prior user interactions between the user and other portions of the various different documents.
In other embodiments, methods implemented by one or more processors are set forth as including operations such as: receiving, at an automated assistant interface of a computing device, a request corresponding to a spoken utterance from a user; wherein the computing device provides access to an automated assistant. The method may further comprise the operations of: identifying natural language content from a portion of a particular document based on the request, wherein the portion of the particular document is not present in a foreground of a graphical user interface of the computing device when the spoken utterance is provided by the user. The method may further comprise the operations of: determining one or more particular actions that the user is requesting the automated assistant to perform based on the natural language content from the portion of the particular document. The method may further comprise the operations of: causing execution of an action of the one or more actions to be initiated based on the request.
In some implementations, causing the action to be performed includes: causing the automated assistant to audibly render natural language content from the portion of the particular document. In some embodiments, the method may further comprise the operations of: after initiating execution of an action of the one or more actions: receiving, at the automated assistant interface of the computing device, an additional request corresponding to an additional spoken utterance from the user, and determining that the user is requesting the automated assistant to edit the portion of a particular document based on the additional spoken utterance and the natural language content from the portion of the particular document. In some embodiments, the method may further comprise the operations of: after initiating execution of an action of the one or more actions: receiving, at the automated assistant interface of the computing device, an additional request corresponding to an additional spoken utterance from the user, and determining that the user is requesting the automated assistant to communicate with another user based on the additional spoken utterance and the natural language content from the portion of the particular document. In some implementations, the other user adds the natural language content to the particular document before the user provides the additional request.
In yet another embodiment, a method implemented by one or more processors is set forth as: receiving, at an application, a request from an automated assistant, wherein the request is provided by the automated assistant in response to a first user providing user input to the automated assistant via a first computing device, and wherein the automated assistant is in response to natural language input provided by the first user to an interface of the first computing device. The method may further comprise the operations of: modifying, by the application, a document in response to receiving a request from the automated assistant, wherein the document is editable by the first user via the first computing device and editable by a second user via a second computing device different from the first computing device. The method may further comprise the operations of: generating notification data indicating that the document has been modified by the first user based on modifying the document. The method may further comprise the operations of: using the notification data to cause an additional automated assistant to render a notification for the second user via the second computing device, wherein the additional automated assistant is responsive to other natural language input provided by the second user to a separate interface of the second computing device.
In some implementations, the request includes a description of a sub-portion of the document, and modifying the document includes: the description is compared to a plurality of different semantic annotations stored in association with the document. In some implementations, comparing the description to a plurality of different semantic annotations stored in association with the document includes: a similarity score is assigned to each of a plurality of different semantic annotations, wherein a particular similarity score of a respective semantic annotation indicates a degree of similarity between the respective semantic annotation and the description. In some implementations, causing the additional automated assistant to render the notification for the second user includes: causing a graphical rendering of a sub-portion of the document to be rendered at the separate interface of the second computing device. In some implementations, the application is provided by an entity distinct from one or more other entities providing the automated assistant and the additional automated assistant. In some implementations, the automated assistant and the additional automated assistant communicate with the application via an application programming interface.
Claims (22)
1. A method implemented by one or more processors, the method comprising:
user input directed to the automated assistant is received from a user at an automated assistant interface of the computing device,
wherein the user input comprises a request for the automated assistant to access or modify a document;
in response to receiving the user input, identifying a particular document that the user is requesting access to or modification,
wherein the particular document is stored at the computing device or another computing device,
wherein explicit dictation of the corresponding name of the particular document is omitted from the user input, an
Wherein identifying the particular document comprises: processing data including the natural language content of the user input and content of each of a plurality of different documents accessible via the computing device;
determining one or more actions to perform on the particular document,
wherein determining the one or more actions is based on the user input and one or more semantic annotations of the particular document stored in association with the particular document, an
Wherein each of the one or more semantic annotations comprises a semantic interpretation of a respective sub-portion in the entirety of the particular document; and
causing the one or more actions to be performed to access or modify the particular document in accordance with the user input.
2. The method of claim 1, wherein the first and second light sources are selected from the group consisting of,
wherein the particular document was not originally created by the user, an
Wherein the particular document is created using a different document application than the automated assistant.
3. The method of claim 1 or claim 2, wherein the data further comprises additional semantic annotations, and each of the additional semantic annotations comprises another semantic interpretation of another respective sub-portion of another respective additional document of the plurality of different documents.
4. The method according to any one of the preceding claims,
wherein the automated assistant interface of the computing device comprises a microphone, an
Wherein the user input is received when a document editing program used to edit the particular document is not present in a foreground of a graphical user interface of the computing device.
5. The method according to any one of the preceding claims,
wherein the one or more semantic annotations include a particular semantic annotation that includes a semantic interpretation of a document review created by an additional user, an
Wherein the one or more actions include causing a notification to be provided to the additional user via another interface of a separate computing device associated with the additional user.
6. The method of any preceding claim, further comprising:
prior to receiving the user input at the automated assistant interface of the computing device:
receiving another user input comprising another request for the automated assistant to render a description of supplemental content added to the particular document by another user.
7. The method of claim 6, wherein the request provided via the user input directs the automated assistant to access or modify the supplemental content added to the particular document by the other user.
8. The method of any preceding claim, wherein causing the one or more actions to be performed comprises:
performing speech-to-text processing to convert portions of the user input to text data, an
Causing the text data to be incorporated into a portion of the particular document corresponding to a particular semantic annotation of the one or more semantic annotations.
9. The method of any preceding claim, further comprising:
generating the one or more semantic annotations using a trained machine learning model trained using training data based on prior user interactions between the user and other portions of various different documents.
10. A method implemented by one or more processors, the method comprising:
receiving, at an automated assistant interface of a computing device, a request corresponding to a spoken utterance from a user;
wherein the computing device provides access to an automated assistant;
identifying natural language content from a portion of a particular document based on the request,
wherein the portion of the particular document is not present in a foreground of a graphical user interface of the computing device when the user provides the spoken utterance;
determining, based on the natural language content from the portion of the particular document, one or more particular actions that the user is requesting the automated assistant to perform; and
causing execution of an action of the one or more actions to be initiated based on the request.
11. The method of claim 10, wherein causing performance of the action comprises:
causing the automated assistant to audibly render the natural language content from the portion of the particular document.
12. The method of claim 10 or claim 11, further comprising:
after initiating execution of an action of the one or more actions:
receiving, at the automated assistant interface of the computing device, an additional request corresponding to an additional spoken utterance from the user, an
Determining that the user is requesting the automated assistant to edit the portion of a particular document based on the additional spoken utterance and the natural language content from the portion of a particular document.
13. The method of any of claims 10 to 12, further comprising:
after initiating execution of an action of the one or more actions:
receiving, at the automated assistant interface of the computing device, an additional request corresponding to an additional spoken utterance from the user, an
Determining that the user is requesting the automated assistant to communicate with another user based on the additional spoken utterance and the natural language content from the portion of the particular document.
14. The method of claim 13, wherein the other user adds the natural language content to the particular document before the user provides the additional request.
15. A method implemented by one or more processors, the method comprising:
a request is received at an application from an automated assistant,
wherein the request is provided by the automated assistant in response to the first user providing user input to the automated assistant via the first computing device, an
Wherein the automated assistant is responsive to natural language input provided by the first user to an interface of the first computing device;
modifying, by the application, a document in response to receiving a request from the automated assistant,
wherein the document is editable by the first user via the first computing device and editable by a second user via a second computing device different from the first computing device;
generating notification data indicating that the document has been modified by the first user based on modifying the document; and
using the notification data to cause an additional automated assistant to render a notification for the second user via the second computing device,
wherein the additional automated assistant is responsive to other natural language input provided by the second user to a separate interface of the second computing device.
16. The method of claim 15, wherein the request includes a description of a sub-portion of the document, and modifying the document comprises:
comparing the description to a plurality of different semantic annotations stored in association with the document.
17. The method of claim 16, wherein comparing the description to a plurality of different semantic annotations stored in association with the document comprises:
assigning a similarity score to each of the plurality of different semantic annotations;
wherein a particular similarity score of a respective semantic annotation indicates a degree of similarity between the respective semantic annotation and the description.
18. The method of any of claims 15-17, wherein causing the additional automated assistant to render the notification for the second user comprises:
causing a graphical rendering of a sub-portion of the document to be rendered at the separate interface of the second computing device.
19. The method of any of claims 15-18, wherein the application is provided by an entity that is distinct from one or more other entities that provide the automated assistant and the additional automated assistant.
20. The method of claim 19, wherein the automated assistant and the additional automated assistant communicate with the application via an application programming interface.
21. A system comprising one or more processors and memory operably coupled with the one or more processors, wherein the memory stores instructions that, in response to execution of the instructions by the one or more processors, cause the one or more processors to perform the method of any of claims 1-20.
22. At least one non-transitory computer-readable medium comprising instructions that, in response to execution of the instructions by one or more processors, cause the one or more processors to perform the method of any one of claims 1-20.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/948,186 | 2020-09-08 | ||
US16/948,186 US11488597B2 (en) | 2020-09-08 | 2020-09-08 | Document creation and editing via automated assistant interactions |
PCT/US2020/064948 WO2022055533A1 (en) | 2020-09-08 | 2020-12-14 | Document creation and editing via automated assistant interactions |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115769220A true CN115769220A (en) | 2023-03-07 |
Family
ID=74181333
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080101564.8A Pending CN115769220A (en) | 2020-09-08 | 2020-12-14 | Document creation and editing via automated assistant interaction |
Country Status (4)
Country | Link |
---|---|
US (2) | US11488597B2 (en) |
EP (1) | EP4133401A1 (en) |
CN (1) | CN115769220A (en) |
WO (1) | WO2022055533A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20220046964A (en) * | 2020-10-08 | 2022-04-15 | 삼성전자주식회사 | Electronic apparatus for responding to question using multi chat-bot and control method thereof |
US11558546B2 (en) | 2020-11-24 | 2023-01-17 | Google Llc | Conditional camera control via automated assistant commands |
US20220254337A1 (en) * | 2021-02-08 | 2022-08-11 | Seam Social Labs Inc | Systems and Methods for Providing a Sociolinguistic Virtual Assistant |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080004880A1 (en) * | 2006-06-15 | 2008-01-03 | Microsoft Corporation | Personalized speech services across a network |
US7937687B2 (en) * | 2006-09-01 | 2011-05-03 | Verizon Patent And Licensing Inc. | Generating voice extensible markup language (VXML) documents |
US20100153318A1 (en) * | 2008-11-19 | 2010-06-17 | Massachusetts Institute Of Technology | Methods and systems for automatically summarizing semantic properties from documents with freeform textual annotations |
US8386929B2 (en) * | 2010-06-22 | 2013-02-26 | Microsoft Corporation | Personal assistant for task utilization |
KR20130081503A (en) * | 2012-01-09 | 2013-07-17 | 삼성전자주식회사 | Display apparatus and control method thereof |
US9390079B1 (en) * | 2013-05-10 | 2016-07-12 | D.R. Systems, Inc. | Voice commands for report editing |
US10698653B2 (en) * | 2014-10-24 | 2020-06-30 | Lenovo (Singapore) Pte Ltd | Selecting multimodal elements |
US10586535B2 (en) * | 2016-06-10 | 2020-03-10 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
US11436417B2 (en) | 2017-05-15 | 2022-09-06 | Google Llc | Providing access to user-controlled resources by automated assistants |
US10552204B2 (en) | 2017-07-07 | 2020-02-04 | Google Llc | Invoking an automated assistant to perform multiple tasks through an individual command |
US11074911B2 (en) * | 2017-09-05 | 2021-07-27 | First Advantage Corporation | Digital assistant |
US11204950B2 (en) * | 2017-10-06 | 2021-12-21 | Optum, Inc. | Automated concepts for interrogating a document storage database |
US20190243669A1 (en) * | 2018-02-05 | 2019-08-08 | Microsoft Technology Licensing, Llc | Skill discovery and brokering framework |
EP3785134A4 (en) * | 2018-04-26 | 2022-01-19 | Reliance Jio Infocomm Limited | System and method for providing a response to a user query using a visual assistant |
US11423073B2 (en) * | 2018-11-16 | 2022-08-23 | Microsoft Technology Licensing, Llc | System and management of semantic indicators during document presentations |
US11189280B2 (en) * | 2019-06-04 | 2021-11-30 | Vmware, Inc. | Securing voice assistant data |
WO2021033889A1 (en) * | 2019-08-20 | 2021-02-25 | Samsung Electronics Co., Ltd. | Electronic device and method for controlling the electronic device |
US20210173865A1 (en) * | 2019-12-09 | 2021-06-10 | Open Text Holdings, Inc. | System and Method for Multi-Media Search in a Content Management System |
US11398226B1 (en) * | 2020-07-30 | 2022-07-26 | Amazon Technologies, Inc. | Complex natural language processing |
-
2020
- 2020-09-08 US US16/948,186 patent/US11488597B2/en active Active
- 2020-12-14 WO PCT/US2020/064948 patent/WO2022055533A1/en unknown
- 2020-12-14 EP EP20839476.7A patent/EP4133401A1/en active Pending
- 2020-12-14 CN CN202080101564.8A patent/CN115769220A/en active Pending
-
2022
- 2022-10-26 US US17/974,415 patent/US20230049562A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US20230049562A1 (en) | 2023-02-16 |
US11488597B2 (en) | 2022-11-01 |
WO2022055533A1 (en) | 2022-03-17 |
EP4133401A1 (en) | 2023-02-15 |
US20220076668A1 (en) | 2022-03-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP6678764B1 (en) | Facilitating end-to-end communication with automated assistants in multiple languages | |
KR102313473B1 (en) | Provides command bundle suggestions for automated assistants | |
US11869506B2 (en) | Selectively generating expanded responses that guide continuance of a human-to-computer dialog | |
JP6667504B2 (en) | Orphan utterance detection system and method | |
US20220215183A1 (en) | Automatic post-editing model for neural machine translation | |
US20230049562A1 (en) | Document creation and editing via automated assistant interactions | |
US10713288B2 (en) | Natural language content generator | |
US9582498B2 (en) | Actions on digital document elements from voice | |
US11924149B2 (en) | Composition of complex content via user interaction with an automated assistant | |
US20220284049A1 (en) | Natural language understanding clarifications | |
US11604929B2 (en) | Guided text generation for task-oriented dialogue | |
US20220366910A1 (en) | Voice commands for an automated assistant utilized in smart dictation | |
EP3552114A1 (en) | Natural language content generator | |
US20220405488A1 (en) | Providing a well-formed alternate phrase as a suggestion in lieu of a not well-formed phrase | |
US20220366911A1 (en) | Arranging and/or clearing speech-to-text content without a user providing express instructions | |
US20240161743A1 (en) | Selectively generating expanded responses that guide continuance of a human-to-computer dialog | |
US20240038246A1 (en) | Non-wake word invocation of an automated assistant from certain utterances related to display content | |
WO2022104297A1 (en) | Multimodal input-based data selection and command execution | |
WO2022245396A1 (en) | Arranging and/or clearing speech-to-text content without a user providing express instructions | |
CN117636915A (en) | Method for adjusting playing progress, related device and computer program product |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
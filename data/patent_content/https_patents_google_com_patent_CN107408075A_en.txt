CN107408075A - Virtualization aware prefetches - Google Patents
Virtualization aware prefetches Download PDFInfo
- Publication number
- CN107408075A CN107408075A CN201680018084.9A CN201680018084A CN107408075A CN 107408075 A CN107408075 A CN 107408075A CN 201680018084 A CN201680018084 A CN 201680018084A CN 107408075 A CN107408075 A CN 107408075A
- Authority
- CN
- China
- Prior art keywords
- virtual machine
- physical address
- data
- prefetcher
- processor
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/0802—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches
- G06F12/0862—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches with prefetch
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/0215—Addressing or allocation; Relocation with look ahead addressing means
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/455—Emulation; Interpretation; Software simulation, e.g. virtualisation or emulation of application or operating system execution engines
- G06F9/45533—Hypervisors; Virtual machine monitors
- G06F9/45558—Hypervisor-specific management and integration aspects
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/0223—User address space allocation, e.g. contiguous or non contiguous base addressing
- G06F12/0292—User address space allocation, e.g. contiguous or non contiguous base addressing using tables or multilevel address translation means
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/10—Address translation
- G06F12/109—Address translation for multiple virtual address spaces, e.g. segmentation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/455—Emulation; Interpretation; Software simulation, e.g. virtualisation or emulation of application or operating system execution engines
- G06F9/45533—Hypervisors; Virtual machine monitors
- G06F9/45558—Hypervisor-specific management and integration aspects
- G06F2009/4557—Distribution of virtual machine instances; Migration and load balancing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/455—Emulation; Interpretation; Software simulation, e.g. virtualisation or emulation of application or operating system execution engines
- G06F9/45533—Hypervisors; Virtual machine monitors
- G06F9/45558—Hypervisor-specific management and integration aspects
- G06F2009/45575—Starting, stopping, suspending or resuming virtual machine instances
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/455—Emulation; Interpretation; Software simulation, e.g. virtualisation or emulation of application or operating system execution engines
- G06F9/45533—Hypervisors; Virtual machine monitors
- G06F9/45558—Hypervisor-specific management and integration aspects
- G06F2009/45583—Memory management, e.g. access or allocation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2212/00—Indexing scheme relating to accessing, addressing or allocation within memory systems or architectures
- G06F2212/10—Providing a specific technical effect
- G06F2212/1016—Performance improvement
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2212/00—Indexing scheme relating to accessing, addressing or allocation within memory systems or architectures
- G06F2212/15—Use in a specific computing environment
- G06F2212/151—Emulated environment, e.g. virtual machine
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2212/00—Indexing scheme relating to accessing, addressing or allocation within memory systems or architectures
- G06F2212/60—Details of cache memory
- G06F2212/602—Details relating to cache prefetching
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2212/00—Indexing scheme relating to accessing, addressing or allocation within memory systems or architectures
- G06F2212/65—Details of virtual memory and virtual address translation
- G06F2212/654—Look-ahead translation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2212/00—Indexing scheme relating to accessing, addressing or allocation within memory systems or architectures
- G06F2212/65—Details of virtual memory and virtual address translation
- G06F2212/657—Virtual address space management
Abstract
For the method, system and equipment of prefetching content, it is included in the computer program encoded on computer-readable storage medium.One in system includes prefetcher, and prefetcher, which is configured to perform, includes following operation：For the virtual machine performed on device, the second virtual machine physical address of data to be prefetched is determined for being performed in the described device of the virtual machine using the first virtual machine physical address associated with virtual machine, use the second virtual machine physical address and the address of cache by the virtual machine physical address of the virtual machine and the device physical address information of described device, determine the device physical address of the data, and using described device physical address come to data described in memory requests.
Description
Background technology
This specification is related to for cache prefetching content.
Some processors include hardware prefetcher, and these prefetchers can automatically determine data, for example, it may be possible to by processor
Some instructions used quickly or other kinds of data.Prefetcher can predict the possibility of reuse using various mechanism
Which data property or prediction will prefetch.In some instances, prefetcher can determine storage adjacent with currently used data,
And the data being not already stored in caching, and the data of determination are prefetched, such as the thing using the device including processor
Manage address.
The content of the invention
In some embodiments, prefetcher (rather than the virtual address of virtual machine or is held using the physical address of virtual machine
The physical address of the actual hardware of row virtual machine) determine to prefetch which page, such as cache lines for caching.It is described to prefetch
Device can determine to perform using register value it is which type of prefetch, for example, using virtual machine physical address or hardware physics
Address, depending on the prefetcher for which kind of application obtains data, for example, when single prefetcher is that virtual machine and the machine application take
When obtaining data.In some instances, prefetcher may be without the authority for accessing virtual machine physical address, so the prefetcher needs
It is given the authority for accessing L1 requested services or other data including virtual machine physical address.
In general, a novel aspects of the theme described in this specification can be embodied in the side for including following action
In method：For the virtual machine performed on device, the first virtual machine associated with the virtual machine is used physically by prefetcher
Location is to be prefetched for performing the second virtual machine physical address of the data of the virtual machine on such devices to determine, uses
Second virtual machine physical address and by the virtual machine physical address of the virtual machine and the device physical address information of described device
Address of cache determine the device physical address of the data, and using described device physical address come to memory requests
The data.The other embodiment of this aspect includes corresponding computer system, equipment and is recorded in one or more
Computer program in Computer Memory Unit, it is each configured to perform the action of methods described.
One or more system for computer may be configured to by system installation system is performed in operation
Software, firmware, hardware or its combination of action perform specific operation or action.One or more computer programs can by with
Being set to acts equipment execution instruction during by including being performed by data processing equipment performs specific operation or action.
In general, a novel aspects of the theme described in this specification can embody in systems, the system
Including being configured to perform the prefetcher operated below：For the virtual machine run on device, using with the virtual machine phase
First virtual machine physical address of association is to be prefetched for performing the data of the virtual machine on such devices to determine
Second virtual machine physical address, using the second virtual machine physical address and by the virtual machine physical address of the virtual machine with
The address of cache of the device physical address information of described device determines the device physical address of the data；And described in use
Device physical address is come to data described in memory requests.The other embodiment of this aspect includes corresponding department of computer science
System, equipment and the computer program being recorded in one or more Computer Memory Units, it is each configured to perform institute
State the action of method.
It is foregoing and other embodiment each alternatively in the form of alone or in combination include with next or more
Individual feature.In some embodiments, using described device physical address come to data described in memory requests including the use of institute
Device physical address is stated come to data described in the memory requests for the caching for not being described device.This method can include by described
Prefetcher receives the first virtual machine physical address.Receiving the first virtual machine physical address by the prefetcher can include：
The first virtual machine physical address is retrieved using caching port by the prefetcher, wherein caching is included by the prefetcher
The caching port used and another caching port used by the processor of described device.Described first is received by the prefetcher
Virtual machine physical address can include：The first virtual machine physical address is retrieved using caching port by the prefetcher,
Wherein described caching port is by the processor use of the prefetcher and described device with access cache.Received by the prefetcher
Virtual machine physical address can include receiving virtual machine physical address from the processor of described device.
In some embodiments, methods described can include：In response to using described device physical address come to storage
Device asks the data, and the data are received from the memory；And store the data in caching.Methods described can
With including：Described in come to data described in memory requests, being received using described device physical address from the memory
Data；And store the data in buffer.Methods described can include：It is multiple for what is performed on such devices
Whether using being virtual machine described in each determination of application, it is empty to apply determination in response to each in the multiple application
Plan machine, determine the second virtual machine physical address of the data to be prefetched；And in response in the multiple application
Each application determines it is not virtual machine, determines other numbers to be prefetched using second device physical address by the prefetcher
According to 3rd device physical address.For described in each determination in multiple applications for performing on such devices using whether
It is that virtual machine can include：Determine whether the register on the processor of described device indicates that the application is virtual machine.It is described
Method can include：It is the application of virtual machine for each in multiple applications, detects for performing institute on such devices
State the enabled instruction of virtual machine or recover the execution of instruction；Performed on such devices described in the virtual machine in response to detection
Enabled instruction or the execution for recovering instruction, are set to indicate that the processor of described device is carrying out the void by register
The value of plan machine.Methods described can include：It is the application of virtual machine for each in multiple applications, detects described virtual
The execution of exit instruction on such devices during machine performs；And the execution phase of the virtual machine of detection on such devices
Between exit instruction execution；And the exit instruction during the execution in response to detecting the virtual machine on such devices
Execution, the processor that the register is set to indicate that described device is not carrying out the another of the virtual machine currently
One value.
In some embodiments, it is determined that being used to perform the second of the data to be prefetched of the virtual machine on such devices
Virtual machine physical address, it can include determining that to be prefetched for performing on such devices described in the instruction of the virtual machine
Second virtual machine physical address., to data described in the memory requests, it can include making using described device physical address
Instructed with described device physical address to described in the memory requests.
In some embodiments, included using described device physical address to data described in memory requests：Use
Described device physical address come to be not described device caching memory requests described in data.The operation can include receiving
The first virtual machine physical address.The system can include the processor in described device；And on the processor
Caching, including i) be configured to allow for the prefetcher to access the first of virtual machine physical address and cache port, ii) and be configured to
The processor is allowed to access the second caching port of the caching, wherein, first virtual machine is received by the prefetcher
Physical address includes：By the prefetcher the first virtual machine physical address is retrieved using the described first caching port.
In some embodiments, the system can include the processor in described device；And on the processor
Caching, including be configured to allow for the prefetcher to access virtual machine physical address on caching and allow the processor to access
The caching port of the caching, wherein, receiving the first virtual machine physical address by the prefetcher includes：Prefetched by described
Device retrieves the first virtual machine physical address using the caching port.The system can include the place in described device
Device is managed, is configured to provide the virtual machine physical address to the prefetcher, wherein, the virtual machine is received by the prefetcher
Physical address includes receiving the virtual machine physical address from the processor.
In some embodiments, the system can include caching, be asked for storing from what the memory received
The data asked.The system can include buffer, for storing the data asked received from memory.The system can
It is for storing that the virtual machine physical address of the virtual machine is related to the device physical address of device with including second memory
The address of cache of connection.The system can include processor, and the processor includes the second memory, caching and described pre-
Take device.
In some embodiments, the operation can include：For in multiple applications for performing on such devices
Each, determines whether the application is virtual machine；It is empty in response to applying determination for each in the multiple application
Plan machine, determine the second virtual machine physical address of the data to be prefetched；In response to in the multiple application
Each application determines it is not virtual machine, using second device physical address, determines the 3rd device of other data to be prefetched
Physical address.
In some embodiments, the system can include register, and the register is configured for storage and referred to
Show the application performed on the alignment processing device of described device whether be virtual machine value, wherein, for holding on such devices
Each in capable the multiple application, it is determined that whether the described application is that virtual machine can include：Determine described device
Whether the register on processor indicates that the application is virtual machine.The system can include processor, the processor quilt
It is configured to：It is the application of virtual machine for each in the multiple application, detects for described in execution on such devices
The enabled instruction of virtual machine or the execution for recovering instruction；Perform in response to detection and opened described in the virtual machine on such devices
Dynamic instruction or the execution for recovering instruction, it is described virtual that register is set to indicate that the processor of described device is carrying out
The value of machine.The processor can be configured to, and be the application of virtual machine for each in the multiple application, detect in institute
State the execution of exit instruction during the execution of the virtual machine on device；And in response to described in detection on such devices
The execution of exit instruction during the execution of virtual machine, the processor that the register is set to indicate that described device is current
Another value of the virtual machine is not carrying out.
In some embodiments, it is determined that being used to perform the second of the data to be prefetched of the virtual machine on such devices
Virtual machine physical address can include：Determine to be prefetched for performing the second of the instruction of the virtual machine on such devices
Virtual machine physical address, and using described device physical address come to data described in the memory requests including the use of described
Device physical address is come to instruction described in the memory requests.
Theme described in this specification can to implement in specific embodiment, and can bring following one kind or
A variety of advantages.In some embodiments, the prefetcher for data being prefetched using virtual machine physical address can use virtual machine thing
Reason address prefetches continuous multipage, and different prefetching algorithms is applied to different virtual machines, or both.In some embodiments,
The prefetcher, which can compare the other types prefetcher for prefetching data without using virtual machine physical address, higher validity,
Other kinds of energy expenditure prefetched, or both can be reduced.In some embodiments, when different prefetching algorithm quilts
During applied to different virtual machine, can individually be considered by the prefetcher performance of each virtual machine, its workload, and/or
Its memory access, thus this prefetch can be more effective for each virtual machine.In some embodiments, when other data
Request is probably due to prefetching or during requirement request to other virtual machines, and can reduce prefetching for virtual machine please with other data
The interference asked.
The one or more embodiments of the detail of the theme of this specification will be illustrated in following accompanying drawing and description.Theme
Further feature, aspect and advantage will become obvious from this description, drawings and claims.
Brief description of the drawings
Fig. 1 is the exemplary plot of system, and wherein prefetcher prefetches data using virtual machine physical address.
Fig. 2 shows the example of address conversion in the environment of virtualization.
Fig. 3 is the flow chart for storing the process for prefetching data in memory.
Fig. 4 is the systematic square frame for the computer system that can be used in combination with computer implemented method described herein
Figure.
The similar reference element similar with title instruction in each accompanying drawing.
Embodiment
Whether the application that pre-fetching system can allow prefetcher currently just being performed according to processor is virtual machine to change it
Behavior.For example, when processor for example starts to perform virtual machine using VMLAUNCH or VMRESUME, the processor can be set
The value of register is put, to indicate that the processor is carrying out virtual machine.When processor for example stops performing void based on VMEXIT
During plan machine, processor can set the value of register to indicate that processor is not carrying out virtual machine currently, and if necessary may be used
Change the value of register with next application based on computing device.
When being not provided with register, such as and indicate when not being carrying out virtual machine, prefetcher is based on including handling
The host-physical address stream of the main frame of such as computer of device carries out pre-fetched predictive.When there is provided during register, such as and refer to
Show that prefetcher carries out pre-fetched predictive using guest's physical address stream of such as virtual machine when being carrying out virtual machine.
When there is provided during register, prefetcher determines candidate guest's physical address of data to be prefetched and uses guest's thing
It is host-physical address that the mapping between address and host-physical address, which is managed, by candidate guest's physical address translations.Show at some
In example, prefetcher may be able to access that provide guest's physical address to prefetcher walks to the page of the mapping of host-physical address
Device, for example, using nested page walking routine.In some embodiments, for example, when processor is preserved for nested page table
During the single caching searched, prefetcher be able to may be accessed for example for the individually slow of nested page table lookup using port
Deposit.
Once prefetcher determines host-physical address, host-physical address is sent down to memory hierarchy by prefetcher
Prefetched to perform.In some instances, prefetcher can include pre-fetch priority in the request that prefetches with host-physical address
Level label.Then, the data identified by host-physical address can be stored in caching or buffer.
Fig. 1 is the example of system 100, wherein, prefetcher prefetches data using virtual machine physical address.For example, system 100
Including operating system 102, the system can perform virtual machine 104, using 110, both or multiple virtual machines and multiple applications
Combination.
Each virtual machine includes multiple virtual machine virtual addresses 106 and multiple virtual machine physical address 108, the latter therein
Device physical address can be mapped to using address of cache 118.Fig. 2 shows address conversion in the environment 200 of virtualization
Example, and can be used by address of cache 118.For example, virtual machine virtual address 204 is mapped to void by virtual machine 202
Plan machine physical address 206.When virtual machine 202 or the application request data performed on a virtual machine, virtual machine 202 is to for example depositing
The system providing virtual machine virtual address 204 of reservoir administrative unit.Virtual machine virtual address 204 is converted to virtual machine thing by system
Address 206 is managed, virtual machine physical address 206 is then converted into host-physical address 208, for example, using nested page table.So
System can ask the data identified using host-physical address 208 afterwards, and serve data to virtual machine 202.
For example, with reference to figure 1, virtual machine 104 is in time TAFrom the request data of processor 112.Request can include virtual machine
Virtual address 106 or virtual machine physical address 108.The data asked can include the operator series of operations for example " instructed "
Information bit.In some instances, the data asked can include instruction, for example, request can be the request to instruction.
Processor 112 acts on request, for example, in response to asking identification data.For example, processor 112 can check it is slow
116 are deposited to determine whether caching 116 includes asked data.In some instances, processor 112 can be determined to work as and acted on
Virtual machine register 114 is set during request.In some instances, when processor 112 starts to perform virtual machine, processor
112 set virtual machine register 114, unrelated with the virtual machine being performed, and when processor 112 is for example in response to suspending or moving back
When going out order stopping execution virtual machine, virtual machine register 114 is resetted.
The component of processor 112 or processor, for example, MMU, can be determined using address of cache 118
The device physical address of requested data.For example, processor 112 can use virtual machine virtual address using nested page table
106 carry out determining device physical address.In some instances, processor 112 can use virtual machine physical address using page table
108 carry out determining device physical address.Address of cache 118 can be included in processor 112 or another component of system 100
In.
Whether processor 112 determines asked data in caching 116 or should be to another memory requests.Processor
112 can obtain asked data and the data asked are supplied into virtual machine 104.
In time TB, prefetcher 120 determine processor 112 whether act on the request for carrying out self virtualizing machine.For example, prefetcher
120 can check virtual machine register 114 carrys out self virtualizing machine to determine whether to act on there is provided instruction processor 112
The position of request.Prefetcher 120 can carry out self-virtualizing using any appropriate method to determine whether processor 112 acts on
The request of machine.
Prefetcher 120 can determine whether processor 112 is acting on the request for carrying out self virtualizing machine at any time, in processor
After 112 reception request of data.For example, the request for carrying out self virtualizing machine whether is operated upon by the determination processor of prefetcher 120
Meanwhile processor 112 may obtain asked data or perform operation to data or perform operation using data.
When prefetcher 120 determines that processor 112 acts on the request for carrying out self virtualizing machine, in time TCPeriod, no
Whether performed on the system 100 by virtual machine 104 or other virtual machines, prefetcher 120 determines the void corresponding to the request of data
Plan machine physical address.Prefetcher 120 can be come true with the virtual address stream in access process device 112, such as L1 cache request business
Virtual machine physical address is determined, for example, by receiving virtual machine virtual address and determining virtual machine physically using address of cache
Location.In some embodiments, prefetcher 120 determines virtual machine physical address or virtual machine from processor 112 virtually
Location.Prefetcher 120 can determine virtual machine physical address using any appropriate method.
In some instances, prefetcher 120 may have access to that to be included in the virtual machine that is sent in the request of processor 112 virtual
Address rather than virtual machine physical address.In these examples, prefetcher 120 can using address of cache 118 come use including
Virtual machine virtual address in request of data determines virtual machine physical address.
Once prefetcher 120 determines the virtual machine physical address of request of data, in time TD, prefetcher 120 is additional number
According to candidate virtual machine physical address is determined, additional data should be prefetched and be stored in caching 116 or buffer, such as connect
Get off the cache lines to be prefetched.For example, prefetcher 120 can determine the candidate site adjacent with virtual machine physical address, and
Additional data is prefetched using candidate site.In some instances, prefetcher 120 can be come using using virtual machine physical address
Which additional data prediction virtual machine 104 can ask and use the virtual machine physical address of the additional data as candidate
The algorithm of location.In some embodiments, prefetcher 120, such as space prefetcher can use the number for representing to be prefetched
According to bit vector.Prefetcher can use the bit vector, with reference to the base address asked by trigger event, for example, in time TA's
The virtual machine physical address that request of data includes, to determine address list to be prefetched.Prefetcher 120 can use any suitable
When algorithm determine candidate site, for example, to be prefetched using virtual machine physical address to perform.No matter processor 112 whether
Asked data are obtained from caching 116, prefetcher 120 can determine candidate site.
In time TE, prefetcher 120 is with determining the device physical of candidate virtual machine physical address using address of cache 118
Location.In time TF, prefetcher 120 use device physical address prefetches additional data.For example, prefetcher 120 to rig
The memory 122 of reason address information sends request for additional data, or other modes trigger prefetched from memory 122 it is additional
Data.In some instances, memory 122 is not the caching in system 100, but can include caching.For example, memory can be with
It is random access memory, or the memory of other any suitable types.
Memory 122 use device physical address obtains additional data.In time TG, in memory 122 or system 100
Another component caching 116 or buffer in store additional data.In some instances, memory 122 carries to processor 112
For additional data, and the component of processor 112 stores additional data in caching 116 or buffer.Buffer can be pre-
The storage for evidence of fetching.
When buffer 122 determines that processor 112 does not act on to carry out the request of self virtualizing machine and act on to come from
During the request of application, whether using 110 or the another application that is implemented in system 100, prefetcher 120 is using corresponding to institute
The device physical address of the data of request is defined as the candidate device physical address using other additional datas to be prefetched.In advance
Device 120 is taken to carry out use device physical address using any appropriate algorithm to determine candidate device physical address, for example, with
Prefetched for the machine application execution of operating system 102.In some instances, when making the decision that should prefetch what data,
Prefetcher 120 can use the information of the relative priority on different operating.For example, prefetcher 120 can use be implemented in
The precedence information of the different application of system 100 come determine which application data should be prefetched.
It is attached to prefetch other that prefetcher 120 can send candidate device physical address to the memory of such as memory 122
Addend evidence.System 100, for example, processor 112 or memory 122, can storing this in caching 116 or buffer, other are attached
Addend evidence.
In some embodiments, prefetcher 120 is a part for processor 112, for example, prefetcher 120 is that hardware is pre-
Take device.In some embodiments, prefetcher 120 is software prefetching device.
Fig. 3 is for 300 flow chart for storing the process for prefetching data in memory.For example, processor 300
It can be used by the prefetcher 120 of system 100.
Prefetcher determines whether application is virtual machine (302).For example, the value in prefetcher check processor, such as position, come
It is determined that using whether being virtual machine.In some embodiments, prefetcher is located on processor.In some instances, prefetcher
Positioned at another part of the device including processor.
In response to determining that application is virtual machine, prefetcher is to determine the first virtual machine physically by the data of virtual machine request
Location (304).For example, prefetcher accesses the virtual address stream of virtual machine.Prefetcher determines that the virtual machine from virtual address stream is empty
Intend address, and virtual machine physical address is determined using virtual address.
In some instances, prefetcher is able to access that the caching port of the caching on the processor for performing virtual machine.Prefetch
Device access cache port determines virtual machine virtual address or virtual machine physical address.In some embodiments, prefetcher makes
Port is cached come access cache with processor identical.In these embodiments, when permission prefetcher and processor use
When access cache is carried out in identical caching port, system can use relative priority scheme.In some embodiments, prefetcher
The caching port used different from processor has been used to carry out access cache.
Prefetcher is that the data stored in the buffer are determined into the second virtual machine physics using the first virtual machine physical address
Address (306).Prefetcher can determine to prefetch the second virtual machine physical address of data using any appropriate algorithm.
Prefetcher uses virtual machine physical address to the mapping of device physical address, determining device physical address (308).Example
Such as, prefetcher uses address of cache, such as page table or nested page table, carrys out determining device physical address.
Prefetcher use device physical address request data (310) from memory.For example, prefetcher is deposited from arbitrary access
Reservoir request data.
Prefetcher data storage (312) in another memory.Other memories can include on a processor slow
Deposit, buffer for example on a processor or with than prefetching another memory of the lower time delay of the memory of data from it.
In response to determining that application is not virtual machine, prefetcher is to determine the first physical address by the data of application request
(314).For example, using be probably office productivity application, web browser or game, and prefetcher for this application determine
First physical address.
Prefetcher uses the first physical address, and the second physical address (316) is determined for data to be prefetched.Prefetcher can be with
The second physical address is determined for prefetching data using any appropriate algorithm.
Prefetcher is using second device physical address come to memory requests data (318).Then prefetcher deposits data
Storage is in other memories, for example, caching or buffer.For example, prefetcher performs step 312.
In some embodiments, processor 300 can include additional step, less step or some can be divided into
The step of multistep.For example, prefetcher can perform step 302 to 312 rather than step 314 to 318.In some instances, in advance
Take device to perform step 304 to 308 or perform step 304 to 310, do not perform other steps.
In some embodiments, pre-fetching system can include other suitable mechanism to allow prefetcher to determine processor
It is carrying out virtual machine.For example, prefetcher can read the value of register to determine that processor is carrying out virtual machine.
In some embodiments, pre-fetching system can include the address layer of multiple ranks, such as be performed in virtual machine
Virtual machine, and prefetcher can use the information on the address layer of multiple ranks which data determined to prefetch.For example,
Prefetcher can be, for example, that the virtual machine performed in the farthest rank of the operating system that distance performs on pre-fetching system determines
Highest address layer, and when make prefetch decision when using the physical address on the highest address layer information.
In some embodiments, when the individual system of such as device or processor performs multiple virtual machines, prefetcher
Different prefetching algorithms can be applied to each or some virtual machine in virtual machine.Pre-fetching system can include suitable algorithm
To allow prefetcher to determine which of multiple virtual machines are carrying out, with prefetching algorithm corresponding to application.For example, prefetcher can
Think that each request of data of the first virtual machine prefetches data, and be every ten request of data prefectchings of the second virtual machine
According to.In some instances, prefetcher can postpone or omit prefetch request or both all implement come control bandwidth, for example, send
The quantity for prefetching request, or the quality of service guarantees, or both have.
The embodiment of theme and feature operation described in this specification can in Fundamental Digital Circuit, in tangible calculating
Include structure disclosed in this specification and its equivalent structures or in the above in machine software or firmware, in computer hardware
Implement in one or more combinations.The embodiment of theme described in this specification can be implemented as one or more computers
Program, i.e. one or more computer program instructions modules in tangible non-transitory program carrier are encoded, for by data
Processing equipment performs or the operation of control data processing equipment.Manually given birth to alternatively, or in addition, programmed instruction can encode
Into transmitting signal on, such as electricity, light or the electromagnetic signal of machine generation, these signals are generated to be used for conjunction with coding information
Suitable receiving device is transmitted to be used to perform by data processing equipment.Computer-readable storage medium can be machine readable storage dress
Put, machine readable storage substrate, random or serial read storage device or the combination of wherein one or more.
" data handling system " one word refers to data processing hardware, and covers and set for all types of of processing data
Standby, device and machine, including such as programmable processor, computer, or multiple processors or computer.The equipment can also
It is or further comprises dedicated logic circuit, for example, FPGA (field programmable gate array) or ASIC (application specific integrated circuit).Remove
Outside hardware, the equipment can alternatively include the code that performing environment is created for computer program, such as composition processing
Device firmware, protocol stack, data base management system, operating system or the code of the combination of wherein one or more.
Computer program, it can also be referred to as or be described as program, software, software application, module, software module, script
Or code, programming language that can be in any form are write, including compiling or interpretative code or descriptive or procedural language,
And it can dispose in any form, including as stand-alone program or module, component, subroutine or its suitable for computing environment
His unit.Computer program can with but the file that not need to correspond in file system.Program, which can be stored in, keeps other journeys
In a part for the file of sequence or data, such as one or more of marking language document script is stored in, being exclusively used in
In the single file for the program stated, or in multiple coordinated files, such as store one or more modules, subprogram or code
Partial file.Computer program can be deployed as on one computer or positioned at a website or distribution across more
Individual website and by being performed in the multiple stage computers of interconnection of telecommunication network.
Process and logic flow described in this specification can be by performing one or more computer programs with by right
Input data is operated and produced one or more programmable calculators execution that output carrys out perform function.Process and logic flow
Journey can also be performed by dedicated logic circuit, and equipment can also be embodied as dedicated logic circuit, and dedicated logic circuit is for example
FPGA (field programmable gate array) or ASIC (application specific integrated circuit).
As an example, the computer for being adapted for carrying out computer program includes universal or special microprocessor or both, or
The CPU of any other type.Generally, CPU will from read-only storage or random access memory or
Both can all receive instruction and data.The key element of computer be for run or execute instruction CPU and
One or more storage devices for store instruction and data.Generally, computer is also by including one for data storage
Or multiple mass storage devices, or be operatively coupled to one or more mass storage devices for data storage with from
Wherein receive data or transmit data to it, or both, mass storage device such as magnetic, magneto-optic disk or CD.However, calculate
Machine need not possess such device.In addition, computer can be embedded in another equipment, such as mobile phone, individual digital help
Manage (PDA), Mobile audio frequency or video player, game console, global positioning system (GPS) receiver or portable storage
Device, such as USB (USB) flash drive, are named just a few.
Include the non-volatile of form of ownership suitable for storage computer program instructions and the computer-readable medium of data
Memory, medium and storage arrangement, including for example：Semiconductor storage, such as EPROM, EEPROM and flash memory device；Magnetic
Disk, such as internal hard drive or removable disk；Magnetooptical disc；And CD-ROM and DVD-ROM disks.Processor and memory can be by special
Supplemented or be incorporated in logic circuit.
A kind of example of such computer is shown in Fig. 4, it illustrates the signal of general-purpose computing system 400
Figure.According to an embodiment, system 400 can be used for describe associated with previously described any computer implemented method
Operation.System 400 includes processor 410, memory 420, storage device 430 and input-output apparatus 440.Component
410th, each in 420,430 and 440 is interconnected using system bus 450.Processor 410 can be handled in system
The instruction performed in 400.In one embodiment, processor 410 is single-threaded processor.In another embodiment,
Processor 410 is multiline procedure processor.Processor 410 can handle the finger being stored in memory 420 or on storage device 430
Order, to show the graphical information for user interface on input/output device 440.
Information in the storage system 400 of memory 420.In one embodiment, memory 420 is computer-readable Jie
Matter.In one embodiment, memory 420 is volatile memory-elements.In another embodiment, memory 420 is
Nonvolatile memery unit.
Storage device 430 can be that system 400 provides massive store.In one embodiment, storage device 430 is
Computer-readable medium.In a variety of embodiments, storage device 430 can be diskette unit, hard disk unit, CD
Device or magnetic tape equipment.
Input-output apparatus 440 is that system 400 provides input/output operations.In one embodiment, input/output
Device 440 includes keyboard and/or instruction equipment.In another embodiment, input-output apparatus 440 includes being used to show figure
The display unit of shape user interface.
Although this specification includes many particular implementation details, these are not construed as to any invention
Scope or may require the scope of protection and be construed as limiting, but opposite be interpreted may be specific to the specific reality of specific invention
Apply the description of the feature of example.It can also in combination be realized in single embodiment and individually implement illustrative phrase in this manual
Described special characteristic under border.On the contrary, can also be discretely in various embodiments or in any suitable sub-portfolio
Realize described various features under single embodiment linguistic context.Moreover, although feature can be by described above as according to specific
Combination action and therefore even initially claimed protection, but one or more features from claimed combination are at some
In the case of can be deleted from combination, and combination claimed can be directed to the change of sub-portfolio or sub-portfolio.
Similarly, although operation is described in the drawings by certain order, this is not construed as requiring these behaviour
Work is either performed or required in sequential order that the operation of all diagrams is performed with shown certain order, to realize
Desired result.Under specific circumstances, multitasking and parallel processing are probably favourable.It is moreover, described above
The separation of various system modules and component in embodiment is not construed as requiring this separation in all embodiments, and
And it should be understood that described program assembly and system can generally be integrated together in single software product or seal
It is attached in multiple software product.
The specific embodiment of this theme has been described.Other embodiments are in the range of following claims.For example, power
Profit action described in requiring can be performed in a different order and still realize desired result.Show as one
Example, the process described in accompanying drawing may not require shown certain order or sequential order to realize desired result.
In particular implementation, multitasking and parallel processing are probably favourable.In some embodiments, can be with realizing phase
The equivalent software or electric hybrid module of congenerous replace a component, the subset of component or all above-mentioned nextport hardware component NextPorts.
Claims (29)
1. a kind of method, including：
For the virtual machine performed on device, the first virtual machine physical address associated with the virtual machine is used by prefetcher
It is to be prefetched for performing the second virtual machine physical address of the data of the virtual machine on such devices to determine；
Using the second virtual machine physical address and by the virtual machine physical address of the virtual machine and the device of described device
The address of cache of physical address information determines the device physical address of the data；And
Using described device physical address to data described in memory requests.
2. according to the method for claim 1, wherein, use number described in described device physical address to the memory requests
According to including the use of data described in described device physical address to the memory requests for the caching for not being described device.
3. the method according to claim 11, including：
The first virtual machine physical address is received by the prefetcher.
4. according to the method for claim 3, wherein, the first virtual machine physical address bag is received by the prefetcher
Include：The first virtual machine physical address is retrieved using caching port by the prefetcher, wherein, caching is included by described pre-
Take the caching port that device uses and another caching port used by the processor of described device.
5. according to the method for claim 3, wherein, the first virtual machine physical address bag is received by the prefetcher
Include：The first virtual machine physical address is retrieved using caching port by the prefetcher, wherein, the caching port is by institute
The processor use of prefetcher and described device is stated with access cache.
6. according to the method for claim 3, wherein, receiving the virtual machine physical address by the prefetcher includes：From
The processor of described device receives the virtual machine physical address.
7. the method according to claim 11, including：
Described in come to data described in the memory requests, being received using described device physical address from the memory
Data；And
Store the data in caching.
8. the method according to claim 11, including：
Described in come to data described in the memory requests, being received using described device physical address from the memory
Data；And
Store the data in buffer.
9. the method according to claim 11, including：
For each in multiple applications for performing on such devices, determine whether the application includes virtual machine；
In response to including virtual machine using determination for each in the multiple application, the data to be prefetched are determined
The second virtual machine physical address；And
In response to not including virtual machine using determination for each in the multiple application, second is used by the prefetcher
Device physical address determines the 3rd device physical address of other data to be prefetched.
10. according to the method for claim 8, wherein, for every in the multiple application that performs on such devices
One determines whether the application includes including virtual machine：Determine whether the register on the processor of described device indicates the application
Including virtual machine.
11. the method according to claim 11, including：
For the application of each including virtual machine in the multiple application, detect for performing the void on such devices
The enabled instruction of plan machine or the execution for recovering instruction；
The enabled instruction of the virtual machine or the execution for recovering instruction are performed on such devices in response to detection, will
The register is set to indicate that the processor of described device is currently executing the value of the virtual machine.
12. the method according to claim 11, including：
For each application including virtual machine in the multiple application, the virtual machine on such devices is detected
The execution of exit instruction during execution；And
The execution of the exit instruction during execution in response to detecting the virtual machine on such devices, by the deposit
Device is set to indicate that the processor of described device is not carrying out another value of the virtual machine currently.
13. the method according to claim 11, wherein：
Determine to be prefetched for performing the second virtual machine physics of the data of the virtual machine on such devices
Address includes：Determine to be prefetched for performing the second virtual machine physics of the instruction of the virtual machine on such devices
Address；And
Using data described in described device physical address to the memory requests including the use of described device physical address to institute
State instruction described in memory requests.
14. a kind of system, including：
Prefetcher, the prefetcher, which is configured to perform, includes following operation：
For the virtual machine performed on device, determined using the first virtual machine physical address associated with the virtual machine
It is to be prefetched for performing the second virtual machine physical address of the data of the virtual machine on such devices；
Using the second virtual machine physical address and by the virtual machine physical address of the virtual machine and the device of described device
The address of cache of physical address information determines the device physical address of the data；And
Using described device physical address come to data described in memory requests.
15. system according to claim 14, wherein, using described in described device physical address to the memory requests
Data include：Using described device physical address come to data described in the memory requests for the caching for not being described device.
16. system according to claim 14, the operation includes：
Receive the first virtual machine physical address.
17. system according to claim 16, including：
Processor in described device；And
Caching on the processor, including i) be configured to permit the prefetcher to access the first of virtual machine physical address and delay
Deposit port, ii) and it is configured to permit the second of the processor access caching to cache port, wherein, by described pre-
Taking device to receive the first virtual machine physical address includes：It is described to retrieve using the described first caching port by the prefetcher
First virtual machine physical address.
18. system according to claim 16, including：
Processor in described device；And
Caching on the processor, including it is configured to permit the prefetcher to access the virtual machine on the caching physically
Location and the caching port for allowing the processor access caching, wherein, first virtual machine is received by the prefetcher
Physical address includes retrieving the first virtual machine physical address using the caching port by the prefetcher.
19. system according to claim 16, including：
Processor in described device, the processor are configured to provide the virtual machine physical address to the prefetcher,
Wherein, receiving the virtual machine physical address by the prefetcher includes receiving the virtual machine physically from the processor
Location.
20. system according to claim 14, including：
Caching, it is described to cache for storing the data asked received from the memory.
21. system according to claim 14, including：
Buffer, the buffer are used to store the data asked received from memory.
22. system according to claim 14, including：
Second memory, the second memory are used to store the virtual machine physical address of the virtual machine and the device of device
The associated address of cache of physical address.
23. system according to claim 22, including：
Processor, the processor include the second memory, the caching and the prefetcher.
24. system according to claim 14, the operation includes：
For each in multiple applications for performing on such devices, determine whether the application includes virtual machine；
In response to including virtual machine using determination for each in the multiple application, the data to be prefetched are determined
The second virtual machine physical address；And
In response to not including virtual machine using determination for each in the multiple application, second device physical address is used
To determine the 3rd device physical address of other data to be prefetched.
25. system according to claim 24, including：
Register, the register, which is configured for the application that storage instruction performs on the alignment processing device of described device, is
The no value including virtual machine, wherein, for each determination application in the multiple application that performs on such devices
Whether include including virtual machine：Determine whether the register on the processor of described device indicates that the application includes virtual machine.
26. system according to claim 25, including：
Processor, the processor are configured to：
For the application of each including virtual machine in the multiple application, detect for performing the void on such devices
The enabled instruction of plan machine or the execution for recovering instruction；
The enabled instruction of the virtual machine or the execution for recovering instruction are performed on such devices in response to detection, will
The register is set to indicate that the processor of described device is currently executing the value of the virtual machine.
27. system according to claim 26, wherein, the processor is configured to：
For each application including virtual machine in the multiple application, the virtual machine on such devices is detected
The execution of exit instruction during execution；And
The execution of the exit instruction during execution in response to detecting the virtual machine on such devices, by the deposit
Device is set to indicate that the processor of described device is not carrying out another value of the virtual machine currently.
28. system according to claim 14, wherein：
Determine to be prefetched for performing the second virtual machine physics of the data of the virtual machine on such devices
Address includes：Determine to be prefetched for performing the second virtual machine physics of the instruction of the virtual machine on such devices
Address；And
Included using described device physical address to data described in the memory requests：Come using described device physical address
To instruction described in the memory requests.
29. a kind of non-transitory computer-readable storage media for being stored with instruction, the instruction can be held by data processing equipment
OK, and in such execution performing the data processing equipment includes following operation：
For the virtual machine performed on device, determine to treat using the first virtual machine physical address associated with the virtual machine
Prefetch for performing the second virtual machine physical address of the data of the virtual machine on such devices；
Using the second virtual machine physical address and by the virtual machine physical address of the virtual machine and the device of described device
The address of cache of physical address information determines the device physical address of the data；And
Using described device physical address come to data described in memory requests.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/685,673 US9594687B2 (en) | 2015-04-14 | 2015-04-14 | Virtualization-aware prefetching |
US14/685,673 | 2015-04-14 | ||
PCT/US2016/027420 WO2016168395A1 (en) | 2015-04-14 | 2016-04-14 | Virtualization-aware prefetching |
Publications (2)
Publication Number | Publication Date |
---|---|
CN107408075A true CN107408075A (en) | 2017-11-28 |
CN107408075B CN107408075B (en) | 2021-03-02 |
Family
ID=55861190
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680018084.9A Active CN107408075B (en) | 2015-04-14 | 2016-04-14 | Virtualization aware prefetching |
Country Status (7)
Country | Link |
---|---|
US (1) | US9594687B2 (en) |
EP (1) | EP3283966B1 (en) |
CN (1) | CN107408075B (en) |
DE (1) | DE202016107452U1 (en) |
HK (1) | HK1243793A1 (en) |
TW (1) | TWI594124B (en) |
WO (1) | WO2016168395A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10936352B2 (en) * | 2019-06-22 | 2021-03-02 | Vmware, Inc. | High performance application delivery to VDI desktops using attachable application containers |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5991848A (en) * | 1996-11-06 | 1999-11-23 | Hyundai Electronics Industries Co., Ltd. | Computing system accessible to a split line on border of two pages within one cycle |
CN1636194A (en) * | 2001-11-30 | 2005-07-06 | 英特尔公司 | Method and apparatus for identifying candidate virtual addresses in a content-aware prefetcher |
CN1797371A (en) * | 2004-12-27 | 2006-07-05 | 英特尔公司 | Method and apparatus for prefetching based on cache fill buffer hits |
US20080209130A1 (en) * | 2005-08-12 | 2008-08-28 | Kegel Andrew G | Translation Data Prefetch in an IOMMU |
CN102763092A (en) * | 2010-02-16 | 2012-10-31 | Arm有限公司 | Restricting memory areas for an instruction read in dependence upon a hardware mode and a security flag |
CN103793263A (en) * | 2014-01-24 | 2014-05-14 | 天津大学 | DMA transaction-level modeling method based on Power PC processor |
US20140297780A1 (en) * | 2013-03-26 | 2014-10-02 | Vmware, Inc. | Method and system for vm-granular ssd/flash cache live migration |
US20150039838A1 (en) * | 2013-07-30 | 2015-02-05 | Vmware, Inc. | Method and system for restoring consumed memory after memory consolidation |
US20150082000A1 (en) * | 2013-09-13 | 2015-03-19 | Samsung Electronics Co., Ltd. | System-on-chip and address translation method thereof |
Family Cites Families (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6604190B1 (en) * | 1995-06-07 | 2003-08-05 | Advanced Micro Devices, Inc. | Data address prediction structure and a method for operating the same |
US6490658B1 (en) | 1997-06-23 | 2002-12-03 | Sun Microsystems, Inc. | Data prefetch technique using prefetch cache, micro-TLB, and history file |
US6631514B1 (en) * | 1998-01-06 | 2003-10-07 | Hewlett-Packard Development, L.P. | Emulation system that uses dynamic binary translation and permits the safe speculation of trapping operations |
US6633968B2 (en) | 1999-03-30 | 2003-10-14 | Microsoft Corporation | Pre-fetching of pages prior to a hard page fault sequence |
US6954840B2 (en) | 2001-11-30 | 2005-10-11 | Intel Corporation | Method and apparatus for content-aware prefetching |
US7395406B2 (en) | 2005-05-12 | 2008-07-01 | International Business Machines Corporation | System and method of large page handling in a virtual memory system |
EP1990731B1 (en) * | 2006-02-28 | 2015-05-27 | Fujitsu Limited | Processor having prefetch function |
US8087017B1 (en) | 2007-04-09 | 2011-12-27 | Moka5, Inc. | Trace-assisted prefetching of virtual machines in a distributed system |
US9417855B2 (en) * | 2011-09-30 | 2016-08-16 | Intel Corporation | Instruction and logic to perform dynamic binary translation |
US9582204B2 (en) * | 2014-01-07 | 2017-02-28 | Apple Inc. | Speculative prefetching of data stored in flash memory |
US9619155B2 (en) * | 2014-02-07 | 2017-04-11 | Coho Data Inc. | Methods, systems and devices relating to data storage interfaces for managing data address spaces in data storage devices |
US9213569B2 (en) * | 2014-03-27 | 2015-12-15 | International Business Machines Corporation | Exiting multiple threads in a computer |
-
2015
- 2015-04-14 US US14/685,673 patent/US9594687B2/en active Active
-
2016
- 2016-04-14 CN CN201680018084.9A patent/CN107408075B/en active Active
- 2016-04-14 TW TW105111743A patent/TWI594124B/en active
- 2016-04-14 WO PCT/US2016/027420 patent/WO2016168395A1/en active Application Filing
- 2016-04-14 DE DE202016107452.5U patent/DE202016107452U1/en active Active
- 2016-04-14 EP EP16719624.5A patent/EP3283966B1/en active Active
-
2018
- 2018-03-02 HK HK18103075.2A patent/HK1243793A1/en unknown
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5991848A (en) * | 1996-11-06 | 1999-11-23 | Hyundai Electronics Industries Co., Ltd. | Computing system accessible to a split line on border of two pages within one cycle |
CN1636194A (en) * | 2001-11-30 | 2005-07-06 | 英特尔公司 | Method and apparatus for identifying candidate virtual addresses in a content-aware prefetcher |
CN1797371A (en) * | 2004-12-27 | 2006-07-05 | 英特尔公司 | Method and apparatus for prefetching based on cache fill buffer hits |
US20080209130A1 (en) * | 2005-08-12 | 2008-08-28 | Kegel Andrew G | Translation Data Prefetch in an IOMMU |
CN102763092A (en) * | 2010-02-16 | 2012-10-31 | Arm有限公司 | Restricting memory areas for an instruction read in dependence upon a hardware mode and a security flag |
US20140297780A1 (en) * | 2013-03-26 | 2014-10-02 | Vmware, Inc. | Method and system for vm-granular ssd/flash cache live migration |
US20150039838A1 (en) * | 2013-07-30 | 2015-02-05 | Vmware, Inc. | Method and system for restoring consumed memory after memory consolidation |
US20150082000A1 (en) * | 2013-09-13 | 2015-03-19 | Samsung Electronics Co., Ltd. | System-on-chip and address translation method thereof |
CN103793263A (en) * | 2014-01-24 | 2014-05-14 | 天津大学 | DMA transaction-level modeling method based on Power PC processor |
Also Published As
Publication number | Publication date |
---|---|
HK1243793A1 (en) | 2018-07-20 |
EP3283966B1 (en) | 2019-11-27 |
WO2016168395A1 (en) | 2016-10-20 |
US20160306743A1 (en) | 2016-10-20 |
DE202016107452U1 (en) | 2017-01-23 |
TWI594124B (en) | 2017-08-01 |
TW201706851A (en) | 2017-02-16 |
CN107408075B (en) | 2021-03-02 |
US9594687B2 (en) | 2017-03-14 |
EP3283966A1 (en) | 2018-02-21 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7739477B2 (en) | Multiple page size address translation incorporating page size prediction | |
US9063866B1 (en) | Page table data structure for online classification of memory pages based on activity level | |
US10255069B2 (en) | Cleared memory indicator | |
US11163691B2 (en) | Apparatus and method for performing address translation using buffered address translation data | |
GB2516477A (en) | Method and system for handling virtual memory address synonyms in a multi-level cache hierarchy structure | |
EP1983439B1 (en) | Prefetching based on streaming hints | |
Chakraborttii et al. | Learning i/o access patterns to improve prefetching in ssds | |
TW201913385A (en) | Expediting cache misses through cache hit prediction | |
KR20200132047A (en) | Apparatus and method for transmitting map information in memory system | |
US10120812B2 (en) | Manipulation of virtual memory page table entries to form virtually-contiguous memory corresponding to non-contiguous real memory allocations | |
JP7160792B2 (en) | Systems and methods for storing cache location information for cache entry transfers | |
JP5255049B2 (en) | Method, computer program, and system for prefetching data to cache memory | |
US8516194B2 (en) | Systems and methods for caching data with a nonvolatile memory cache | |
US8661169B2 (en) | Copying data to a cache using direct memory access | |
US20070033371A1 (en) | Method and apparatus for establishing a cache footprint for shared processor logical partitions | |
CN107408075A (en) | Virtualization aware prefetches | |
US20130179637A1 (en) | Data storage backup with lessened cache pollution | |
US10691604B2 (en) | Minimizing cache latencies using set predictors | |
Yoon et al. | Design of DRAM-NAND flash hybrid main memory and Q-learning-based prefetching method | |
US20190235899A1 (en) | Tracking virtual machine data | |
US9459998B2 (en) | Operations interlock under dynamic relocation of storage | |
US11494300B2 (en) | Page table walker with page table entry (PTE) physical address prediction | |
US10108339B2 (en) | Reduction of intermingling of input and output operations in solid state drives | |
JP2022046413A (en) | Enhanced read-ahead capability for storage devices | |
KR101456373B1 (en) | Apparatus and method for managing cache device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
CB02 | Change of applicant information | ||
CB02 | Change of applicant information |
Address after: American CaliforniaApplicant after: Google limited liability companyAddress before: American CaliforniaApplicant before: Google Inc. |
|
REG | Reference to a national code |
Ref country code: HKRef legal event code: DERef document number: 1243793Country of ref document: HK |
|
GR01 | Patent grant | ||
GR01 | Patent grant |
CN115209169A - Anchor for live streaming - Google Patents
Anchor for live streaming Download PDFInfo
- Publication number
- CN115209169A CN115209169A CN202210662897.9A CN202210662897A CN115209169A CN 115209169 A CN115209169 A CN 115209169A CN 202210662897 A CN202210662897 A CN 202210662897A CN 115209169 A CN115209169 A CN 115209169A
- Authority
- CN
- China
- Prior art keywords
- live stream
- client device
- anchor
- stream
- live
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims description 21
- 230000004044 response Effects 0.000 claims description 11
- 238000004891 communication Methods 0.000 description 35
- 238000004590 computer program Methods 0.000 description 15
- 230000008569 process Effects 0.000 description 9
- 238000012545 processing Methods 0.000 description 9
- 238000012546 transfer Methods 0.000 description 6
- 238000005304 joining Methods 0.000 description 5
- 238000010586 diagram Methods 0.000 description 4
- 238000005516 engineering process Methods 0.000 description 4
- 238000003860 storage Methods 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 3
- 238000010801 machine learning Methods 0.000 description 3
- 241000282326 Felis catus Species 0.000 description 2
- 238000004458 analytical method Methods 0.000 description 2
- 230000003139 buffering effect Effects 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- VYZAMTAEIAYCRO-UHFFFAOYSA-N Chromium Chemical compound [Cr] VYZAMTAEIAYCRO-UHFFFAOYSA-N 0.000 description 1
- 241001513109 Chrysocephalum apiculatum Species 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 230000037406 food intake Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000009191 jumping Effects 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 238000010845 search algorithm Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/61—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio
- H04L65/612—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio for unicast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/21—Server components or server architectures
- H04N21/218—Source of audio or video content, e.g. local disk arrays
- H04N21/2187—Live feed
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/234—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs
- H04N21/23424—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs involving splicing one content stream with another content stream, e.g. for inserting or substituting an advertisement
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/262—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists
- H04N21/26258—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists for generating a list of items to be played back in a given order, e.g. playlist, or scheduling item distribution according to such list
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/262—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists
- H04N21/26283—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists for associating distribution time parameters to content, e.g. to generate electronic program guide data
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/472—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content
- H04N21/47202—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content for requesting content on demand, e.g. video on demand
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/472—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content
- H04N21/47217—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content for controlling playback functions for recorded or on-demand content, e.g. using progress bars, mode or play-point indicators or bookmarks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/482—End-user interface for program selection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/488—Data services, e.g. news ticker
- H04N21/4884—Data services, e.g. news ticker for displaying subtitles
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/65—Transmission of management data between client and server
- H04N21/658—Transmission by the client directed to the server
- H04N21/6587—Control parameters, e.g. trick play commands, viewpoint selection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/83—Generation or processing of protective or descriptive data associated with content; Content structuring
- H04N21/845—Structuring of content, e.g. decomposing content into time segments
- H04N21/8455—Structuring of content, e.g. decomposing content into time segments involving pointers to the content, e.g. pointers to the I-frames of the video stream
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/83—Generation or processing of protective or descriptive data associated with content; Content structuring
- H04N21/845—Structuring of content, e.g. decomposing content into time segments
- H04N21/8456—Structuring of content, e.g. decomposing content into time segments by decomposing the content in the time domain, e.g. in time segments
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/85—Assembly of content; Generation of multimedia applications
- H04N21/854—Content authoring
- H04N21/8547—Content authoring involving timestamps for synchronizing content
Abstract
The present disclosure relates to an anchor for a live stream. The stream hosting server generates anchors associated with the live streams, each anchor specifying a timestamp of the live stream that represents an appropriate moment for the user to join the live stream. When a viewer client device sends a request to join a live stream, the stream hosting server analyzes the anchor list and selects the appropriate anchor. The stream hosting server provides the live stream to the viewer client device starting at the anchor-specified timestamp. Thus, the viewer client device can begin displaying the live stream at the appropriate time specified by the anchor. The stream hosting server also creates video on demand content that includes the complete live stream and an anchor associated with the live stream. The viewer client device may begin displaying VOD at a different anchor.
Description
Description of the cases
The application belongs to divisional application of Chinese invention patent application 201780067750.2, which has an application date of 2017, 9, 28.
Technical Field
The present disclosure relates generally to live streams, and more particularly, to generating anchors in live streams to enable users joining or rejoining live streams to enter at appropriate times.
Background
The stream hosting server serves as a platform for the stream creator to provide live streams to users of the stream hosting server. In many scenarios, a user uses a client device to access and join a live stream. For popular streams, the creator of the stream may obtain a large number of viewers interested in the information presented by the creator.
However, a problem unique to live streams is that viewers may join at various sub-optimal times. For example, when a viewer joins, the creator may be in the middle of the discussion, and thus, the viewer may not have the appropriate context to fully understand the ongoing discussion. This may occur when a user newly joins the live stream or when a user rejoins the live stream after having been previously transferred. Joining a live stream at a sub-optimal time may result in a poor user experience and may even prevent the user from participating in future live streams.
Disclosure of Invention
The stream hosting server generates an anchor in the live stream that enables newly joining users to begin consuming the stream content at an appropriate point in time, even if the users join at a sub-optimal time. The stream hosting server provides a platform for the creator to transfer the live stream. At various points in time during the live stream, the server provides a user interface element that receives creator input indicating that the points in time are appropriate for generating the live stream anchor. For example, as the creator continues to discuss the new topic, the user interface element receives input to create the anchor. In another example, the live stream is a streaming video game, and the user interface element receives input that generates an anchor corresponding to a timestamp in the live stream at the start of the new game. Each anchor specifies a timestamp and a validity duration of the live stream. The validity duration of the anchor describes the length of time that the anchor remains valid so that a joining user can begin viewing the live stream at the anchor if the anchor is valid.
A viewer client device provides a request to a stream hosting server to join a live stream. The request sent by the client device is sent at a particular time and is therefore associated with a timestamp of the live stream. In one embodiment, the stream hosting server analyzes the generated list of anchors and identifies the appropriate anchor from which the viewer client device will access the live stream. An appropriate anchor is selected based on a timestamp of the live stream specified by the anchor and a validity duration associated with the anchor. The stream hosting server provides the live stream to the viewer client device starting at the timestamp specified by the identified anchor. Thus, the present disclosure addresses the technical problem of viewer navigation within a live stream, and may achieve the technical effect that a viewer can locate and view content of interest more quickly than if no anchor were present. In addition, the present disclosure can achieve the following technical effects: since the viewer is not watching the immediate front portion of the live stream, the user does not have to view content that he or she is not interested in or even unintelligible.
The stream hosting server is also capable of generating Video On Demand (VOD) content derived from the completed live stream. In addition, the generated anchor associated with the completed live stream is also included in the created VOD. Anchors in VOD have many uses. In one case, VOD may be presented to the user by the viewer client device. Upon receiving the user input, the viewer client device may display the VOD at a different timestamp specified by the anchor associated with the VOD. This is desirable in game streaming, where the session scene of VOD can be skipped quickly. Thus, VOD with an associated anchor enables jumping to the start of the next game.
In addition, anchors in VOD may be tagged with a topic tag, such as a keyword. When the stream hosting server receives a query that includes a keyword (or more generally, a hashtag), the stream hosting server returns a list of anchors that are related to the provided keyword. Thus, the server enables the viewer client device to access VOD starting from an anchor with a particular topic of interest, as opposed to having to display VOD from scratch.
The present disclosure provides a computer-implemented method, a computer system for implementing the method, and a computer program product comprising computer program instructions for implementing the method. Each computer program product is typically a non-transitory computer readable medium. In principle, however, the computer program product may also be a signal transmitted via a communication network.
Some of the computer-implemented methods contained in the present disclosure are expressed by claims 1 and 13, and some of the computer program products contained in the present disclosure are expressed in claims 12 and 20.
Drawings
FIG. 1 is a system environment of a stream hosting server according to one embodiment.
Fig. 2 depicts an architecture of a live streaming module according to one embodiment.
FIG. 3A depicts an architecture of software modules of a creator client device, according to one embodiment.
FIG. 3B depicts an architecture of software modules of a viewer client device, according to one embodiment.
Fig. 4 is an example flow diagram for providing a live stream by a stream hosting server based on a generated anchor, according to one embodiment.
Fig. 5 is an example flow diagram of playback of a live stream by a viewer client device according to a generated anchor, according to one embodiment.
The figures depict various embodiments for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the disclosure described herein.
Detailed Description
Overview of the System Environment
Fig. 1 depicts a system environment 100 for a stream hosting server 150 for providing live streams, according to one embodiment. The system environment 100 includes a creator client device 108, a viewer client device 110, a network 130, and a stream hosting server 150.
Turning to the various entities shown in fig. 1, the creator client device 108 and the viewer client device 110 each generate and access a live stream. As used herein, "live stream" refers to any streaming media content distributed between an originator and a viewer (or audience in the case of audio content), regardless of whether the content is broadcast, multicast, or exchanged directly between the originator and a single viewer.
Each of the creator client device 108 and the viewer client device 110 is a computing device having software modules 300A/B that send and/or receive data via the network 130. Examples of creator client device 108 and viewer client device 110 include desktop computers, laptop computers, tablet computers (tablets), mobile phones, personal Digital Assistants (PDAs), gaming devices, or any other electronic device that includes computing functionality and data communication capabilities. The creator client device 108 and the viewer client device 110 may each use a web browser, such as Microsoft Internet Explorer, mozilla Firefox, google Chrome, apple Safari, and/or Opera, as an interface to connect with the network 130. Additionally or alternatively, dedicated application software running locally on the mobile device is used as an interface to connect to the network 130. The creator 108 and viewer client device 110 typically include a processor, a display device (or output to a display device), local memory such as a hard drive or flash memory device to which the creator 108 and browser client device 110 store data used by the user in performing tasks, and a network interface for coupling to the stream hosting server 150 via the network 130. Although fig. 1 depicts one creator client device 108 and one viewer client device 110, one skilled in the art will appreciate that any number of creator client devices 108 and viewer client devices 110 may exist in a system architecture in communication with the network 130 and the stream hosting server 150.
The creator generates a live stream using the creator client device 108. The creator client device 108 receives user input through the user interface 180. For example, the creator client device 108 (e.g., a laptop computer) receives input instructing the creator client device 108 to continuously capture video and audio in real-time or near real-time using software or hardware to generate a live stream. In various embodiments, the creator client device 108 also includes a software module 300A that appropriately processes the video and audio of the live stream as it is recorded. The creator client device 108 then continuously sends the stream to the stream hosting server 150 until the stream ends.
The viewer client device 110 sends a request to access the live stream and, upon receiving the live stream, begins accessing the live stream at a timestamp specified by an anchor associated with the live stream. The viewer client device 110 includes a user interface 180 and a software module 300B that together handle interactions between a user of the viewer client device 110 and content provided by the stream hosting server 150.
For example, the user interface 180 of the viewer client device 110 receives user input (e.g., click, touch input) to join the live stream. Software module 300B sends a join request for the live stream to stream hosting server 150. At a time after sending the join request, software module 300B receives the live stream with the identified anchor specifying the timestamp of the live stream. Upon receipt of the live stream, software module 300B suitably decodes the video and audio of the live stream for playback on user interface 180 of viewer client device 110. The viewer client device 110 continues to display the live stream starting at the time stamp specified by the anchor.
The stream hosting server 150 is responsible for receiving live streams from the creator client device 108, for example, generating anchors associated with the live streams in each case in response to anchor generation requests from the creator client device 108, and providing the live streams for playback on a plurality of different viewer client devices, each of which may begin at a different timestamp within the stream specified by one or more of the anchors and proceed onward. In an example embodiment, the stream hosting server 150 includes a live stream module 200, a content server 104, an ingest server 106, and a content store 120.
The live stream module 200 processes the live stream. On the server side, the live streaming module 200 receives a stream to be sent to the viewer client device 110 and also receives an anchor generation request. As described above, each anchor specifies a timestamp in the live stream, such that the live-stream module 200 can provide the live stream to the viewer client device 110 starting from the timestamp. On the viewer side, the live stream module 200 receives join requests to join the live stream from one or more viewer client devices 110. The live stream module 200 analyzes and identifies the appropriate anchor associated with the live stream for each join request. The live stream module 200 provides the viewer client device 110 with the live stream and an anchor that specifies a timestamp in the live stream so that the viewer client device 110 can play the live stream starting with the timestamp. Further details regarding live module 200 are described below with reference to fig. 2.
The live streaming module 200 is also responsible for providing content items (e.g., video advertisements) to the viewer client device 110. For example, the content item may be initially provided by a third party system (e.g., an advertiser) and processed by the ingestion server 106. The ingest server 106 processes the provided content items and stores the content items in the content store 120. The content server 104 retrieves the content item located in the content store 120 and provides the content item to the viewer client device for display on the user interface 180 of the viewer client device 110. As one example, the content item will be displayed on the viewer client device 110 to temporarily replace the live stream. Once the viewer client device 110 plays the content item for its duration, the viewer client device 110 returns to playing the live stream at the generated anchor.
Live streaming module
Fig. 2 depicts a live streaming module 200 and its associated modules according to one embodiment. In this example embodiment, live stream module 200 includes an anchor generation module 210, a stream communication module 220, an anchor analyzer module 230, an anchor list 240, a Video On Demand (VOD) generator module 250, and a search module 260. In some embodiments, live stream module 200 has a different module and/or logical structure than those described herein, and functionality may be distributed among the modules and/or logical structures in a different manner than that described herein.
The anchor generation module 210 generates one or more anchors to be associated with the live stream. Each anchor represents an appropriate timestamp in the live stream for the viewer client device 110 to access the live stream. For example, in a game flow, an anchor may be associated with a point in time corresponding to the start of a new game. As another example, the creator may switch from a first topic to a second topic during a live stream.
The anchor generation module 210 allows the creator to create an anchor through the graphical user interface 180 presented on the creator client device 108. The creator can at his/her discretion choose to place the anchor at the current timestamp of the ongoing live stream. For example, the creator provides user input (e.g., clicking a button or dragging and dropping) on a graphical user interface. As another example, the creator may manually specify a timestamp that occurs earlier in the live stream at a later time to generate the anchor. This is useful for creators who may forget to generate anchors in real time. In response to user input to generate the anchor in the live stream, the creator client device 108 sends an anchor generation request to the anchor generation module 210, and the anchor generation module 210 then proceeds to generate the anchor. In various embodiments, the anchor generation module 210 can provide a notification to the viewer client device 110 that is currently accessing the live stream when a new anchor is generated.
Each anchor is associated with a live stream and specifies: 1) A timestamp within the duration of the live stream, and 2) a validity duration. For example, the timestamp of the live stream corresponds to a point in the live stream that coincides with the time the creator provided the input to create the anchor. As another example, the timestamp corresponds to a time manually specified by the creator.
The validity duration of an anchor describes a period of time for which the anchor is valid after generation. Once the validity duration of the anchor expires, the viewer client device 110 can no longer access the live stream starting from the anchor. In some embodiments, the validity duration of the anchor is predetermined by the anchor generation module 210. In other embodiments, the validity duration of each anchor may be manually specified by the creator. For example, before the live stream begins, the anchor generation module 210 may prompt the creator to enter a default validity duration (e.g., 5 minutes) for each anchor to be generated during the live stream. Additionally, the anchor generation module 210 may prompt the creator to enter the validity duration of each generated anchor in real-time (e.g., immediately after creation of the creator-specified anchor).
The generation of the anchor may also be performed automatically by the anchor generation module 210 without intervention by the creator. The anchor generation module 210 may implement a machine learning model that analyzes the creator's preferences and/or features to understand the possible locations of appropriate anchors. For example, when the author considers what to say for the next topic, the author may tend to last for silent moments that exceed a threshold time. Thus, when a silence duration longer than a threshold occurs in a stream, the machine learning model may choose to embed an anchor in the live stream. As another example, the creator may use a particular phrase that indicates that the new theme is starting (e.g., "good, shift). The machine learning model may be trained specifically to recognize the creator's tendency or used phrases and generate anchors accordingly.
Each generated anchor is stored in an anchor list 240. The anchor list 240 may be a readable data file or database table that stores the associated stream, identifiers of the anchors (e.g., anchor 1, anchor 2, etc.), timestamps, and validity durations associated with each anchor.
The stream communication module 220 receives the live stream from the creator client device 108 and is responsible for processing, storing, and/or buffering the stream and transmitting the stream to one or more viewer client devices 110. One example for processing the stream includes transcoding a live stream received from the creator client device 108. For example, the video and audio may have been previously encoded by the creator client device 108. The video may be in h.264 format and the audio in Advanced Audio Coding (AAC) format. The stream communication module 220 may transcode video to a different format, video resolution, and/or frame rate and transcode audio to a different format or a different bitrate. The transcoded video and audio are transmitted by the stream communication module 220 to the viewer client device 110 according to standard protocols, such as real-time transport protocol (RTP), real-time messaging protocol (RTMP), user Datagram Protocol (UDP), transmission Control Protocol (TCP).
The stream communication module 220 handles communication with the various viewer client devices 110. For example, the stream communication module 220 receives requests from various viewer client devices 110 to access the live stream and additionally provides the live stream starting at a timestamp specified by the generated anchor. One type of request is a join request originating from a viewer client device 110 that newly accesses a live stream. Another type of request is a rejoin request from a viewer client device 110 that was previously accessing the live stream, was temporarily exited, and is now attempting to rejoin the stream.
In a use case where a join request is received, in response to receiving the join request from the viewer client device 110, the stream communication module 220 provides a timestamp associated with the join request to the anchor analyzer module 230. The anchor analyzer module 230 selects an anchor from the anchor list 240 based on the provided timestamp associated with the join request. Details regarding the analysis and selection of anchors are described further below.
The stream communication module 220 receives the identified anchors from the anchor analyzer module 230 from the anchor list. The identified anchor specifies a timestamp of the live stream from when the viewer client device 110 started accessing the live stream. Thus, the stream communication module 220 provides the live stream to the client device 110 starting at the timestamp specified in the selected anchor.
A use case for receiving a rejoin request includes where the viewer client device 110 accesses a live stream, transfers from the live stream to play the content item, and then attempts to rejoin the live stream upon completion of the content item. By way of example, the content item is an advertisement for temporarily replacing a live stream displayed on the viewer client device 110. The advertisement may be a TrueView advertisement that allows a user to skip the advertisement after a threshold period of time (e.g., 5 seconds). Thus, the user may complete the content item by providing a user input (e.g., a click) to skip the content item after a threshold amount of time. When the content item is finished playing, the viewer client device 110 sends a rejoin request to the streaming communication module 220. Thus, anchors for live streams are advantageous because they enable the viewer client device 110 to rejoin a live stream at the appropriate timestamp after viewing a content item.
In order to enable the viewer client device 110 to leave the live stream and play the content item as appropriate, the stream communication module 220 provides further instructions to the viewer client device 110 in addition to the content item. As one example, the instructions include encoding/decoding information of the content item such that the viewer client device 110 can adequately playback video and audio data of the content item. As another example, the streaming communication module 220 also transmits the departure interval. The departure interval represents the length of time that the viewer client device 110 can access the live stream before being transferred from the live stream to the content item. Upon expiration of the departure time interval, the viewer client device 110 temporarily exits the live stream to display the content item. When the viewer client device 110 exits the live stream, it records a timestamp (e.g., a departure timestamp) of the live stream corresponding to when it exited.
While the content item is temporarily played by the viewer client device 110 (i.e., consistent with or after the departure timestamp), the anchor generation module 210 can generate additional anchors for the live stream. When the streaming communication module 220 receives the rejoin request after terminating playing the content item, the streaming communication module 220 also receives a departure timestamp from the viewer client device 110. The stream communication module 220 passes the received departure timestamp to the anchor analyzer module 230 so that the appropriate anchor can be identified given the rejoin request. When the stream communication module 220 receives the identified appropriate anchor from the anchor analyzer module 230, the stream communication module 220 provides a live stream starting from a timestamp specified by the appropriate anchor. Thus, the stream communication module 220 allows the viewer client device 110 to rejoin the live stream by providing the live stream starting from the identified anchor. More generally, the implementation of the generated anchor allows the user of the viewer client device 110 to not miss any or a very small number of live streams or rejoin at the appropriate anchor point when being turned to view the content item.
The stream communication module 220 can provide information to the viewer client device 110 indicating that the live stream is currently in a "semi-live" state. That is, the live stream (consisting of content generated in real-time (e.g., by being captured by a camera)) is displayed to the viewer with a (deliberate) delay that depends on the identified anchor; the delay may be selected to be greater than the delay on the live stream that the display system will use for buffering purposes. For example, the viewer client device 110 displays an indication of the semi-live status on a Graphical User Interface (GUI) to a viewing user on the user interface 180. The indication may be a colored button or indicator. In addition, the viewer client device 110 may also present selectable options to the user on the GUI. When the GUI receives user input, the viewer client device 110 sends a request to the stream communication module 220 to access the live segment of the live stream. This therefore provides the user of the viewer client device 110 with control over viewing the live stream in a live or semi-live state. In response to the request, the stream communication module 220 provides the live segment of the live stream to the viewer client device 110. The viewer client device 110 may change the indication on the GUI to display a different indicator (e.g., a different color or a different button) so that the user can easily understand that the live stream is now in the live state.
The anchor analyzer module 230 selects an appropriate anchor from the anchor list 240 so that the viewer client device 110 can join or rejoin the live stream at the appropriate timestamp specified by the anchor. The anchor analyzer module 230 selects an anchor as the appropriate anchor based on the timestamp specified by the anchor, the validity duration specified by the anchor, and the timestamp associated with the join or rejoin request sent by the client device 110. The anchor analyzer module 230 may default to the case where no anchor is selected. In this case, the anchor analyzer module 230 instructs the stream communication module 220 to provide the live stream to the viewer client device 110 at its current live time (rather than starting from the anchor).
The anchor analyzer module 230 identifies the appropriate anchor from the anchor list 240 through a process that depends on the type of request (e.g., join or re-join request) sent by the viewer client device 110. For example, if the viewer client device 110 newly joins the live stream (e.g., a join request), the anchor analyzer module 230 retrieves the anchor list 240 that includes all generated anchors associated with the live stream. Alternatively, if the viewer client device is rejoining the live stream (e.g., a rejoin request), the anchor analyzer module 230 retrieves an anchor list that includes only anchors that were generated when the content item was played on the viewer client device 110 (or during a brief predetermined time before the content item began to play on the viewer client device).
Among the anchors in the retrieved anchor list 240, the anchor analyzer module 230 determines which anchors remain valid based on the validity duration associated with each anchor. To do so, the anchor analyzer module 230 calculates the difference between the timestamp specified by the anchor and the timestamp associated with when the join or rejoin request was sent ("current time"). The difference is compared to a validity duration associated with the identified anchor. If the difference is below the validity duration, indicating that the anchor is valid, the anchor analyzer module 230 marks the anchor as valid. Alternatively, if the difference between the current time and the timestamp specified by the identified anchor is greater than the validity duration, the anchor is marked as invalid. Invalid anchors are ignored and not considered further, while valid anchors are further analyzed. In the event that all anchors in the anchor list 240 are not valid, the anchor analyzer module 230 continues with the default condition and instructs the streaming communication module 220 to provide the live stream in the live state.
After identifying a valid anchor, the anchor analyzer module 230 identifies the anchor according to whether the observer client device 110 has sent a join request or a rejoin request to the streaming communication module 220. If the viewer client device 110 newly joins the live stream, the anchor analyzer module 230 identifies and selects the latest anchor in the anchor list 240. The newest anchor specifies a timestamp in the live stream that is more recent than the timestamps specified by all other anchors in the anchor list 240.
If the viewer client device 110 rejoins the live stream after being temporarily transferred (e.g., turned to view the content item), the anchor analyzer module 230 identifies when the viewer client device 110 exits the live stream (e.g., time of departure). The departure time may be sent by the viewer client device 110 in advance with the rejoin request. The anchor analyzer module 230 selects the anchor with the timestamp closest to the identified departure time. The timestamp of the anchor closest to the identified departure time may occur before the identified departure time, meaning that the viewer client device 110 will replay a portion of the live stream upon rejoining the live stream at that anchor. In this case, the viewer client device 110 avoids skipping any portion of the live stream. Alternatively, the timestamp of the anchor closest to the identified departure time may occur after the identified departure time. Thus, the viewer client device 110 can rejoin the live stream at the appropriate timestamp of the anchor while missing very little of the live stream.
Once the anchor analyzer module 230 identifies the appropriate anchor, the anchor analyzer module 230 instructs the stream communication module 220 to send the live stream to the viewer client device 110 starting from the selected anchor. The stream communication module 220 may do this by sending the live stream along with the identified anchor.
After the live stream is complete, a Video On Demand (VOD) generator module 250 takes the stream and generates VOD to be stored in the content store 120. Thus, the viewer client device 110 may access VOD at a later time and display the live stream even though it is no longer a live streaming transmission. In generating VOD, the VOD generator module 250 associates the generated anchor, which was originally created during the live stream, with VOD. For example, the VOD generator module 250 encodes the dropped anchor with the stream. In addition, the VOD generator module 250 creates an associated data file (or database table) that includes a timestamp specified in the stream by each anchor and a tag (e.g., a descriptive key) that describes each anchor. For example, the anchor may instruct the creator to switch from talking about the subject of the dog to the subject of the cat at a timestamp in the stream. Thus, the data file may tag the anchor with a particular topic about the cat at the timestamp. The data file may include multiple tags for each anchor.
The search module 260 enables the user of the viewer client device 110 to effectively search for anchors that are of interest to VOD. Thus, the search module 260 provides improved search granularity so that the viewer client device 110 can access a particular anchor within VOD without having to access the VOD from scratch. For example, the search module 260 receives a search query and parses the query to obtain keywords. The search module 260 searches the content store 120 for anchors in the VOD that match the query or keywords in the query. For example, if a query from a client device searches for a "puppy," the search module 260 searches the metadata files associated with each VOD to identify an anchor labeled with the subject of the "puppy. The match may be a text string match between the search query and a keyword associated with the anchor. The search module 260 returns search results tagged with anchors matching the topic to the viewer client device 110 that sent the query. If the user of the viewer client device 110 selects an anchor indicating that he/she is interested in viewing VOD starting from that anchor, the search module 260 retrieves the appropriate video segment in VOD starting at that anchor from the content store 120 and provides it to the viewer client device 110. This enables the user to view relevant clips of the VOD file without having to view the entire VOD that may not be relevant in its entirety to the query provided.
Software module
FIG. 3A depicts software modules 300A and their associated modules on the creator client device 108, according to one embodiment. Software module 300A includes a stream generator module 305 and a stream processing module 310.
The stream generator module 305 generates video and audio for streams obtained from hardware (e.g., a camera) or software (e.g., a video game) sources communicatively coupled to a portion of or running on the viewer client device 110. The generated stream is stored in the stream memory 315. The stream generator module 305 sets the characteristics of the live stream including video resolution, video frame rate, and audio bit rate. Alternatively, the characteristics of the live stream may be set by the creator to provide his/her viewer with an optimal live stream viewing experience.
The stream generator module 305 passes the portions of the live stream to the stream processing module 310 as they are captured. Thus, the stream processing module 310 can process and send the stream while the stream generator module 305 continues to record new portions of the live stream. The stream processing module 310 encodes video and audio according to their characteristics (e.g., resolution, frame rate, bit rate). As an example, video is encoded using an h.264 encoder, while audio is separately encoded using an AAC encoder. Once encoded, the stream processing module 310 continues to send the encoded video and audio to the stream hosting server 150.
FIG. 3B depicts software modules 300B and their associated modules on viewer client device 110, according to one embodiment. Software module 300B enables viewer client device 110 to access the live stream. In various embodiments, software module 300B includes a user interface manager 350, a request module 355, and a playback module 365. In some embodiments, the software modules 300A/300B of the creator client device 108 or the viewer client device 110 have different modules and/or logical structures than those described herein, and functionality may be distributed among the modules and/or logical structures in a manner different than that described herein.
The user interface manager 350 receives information from a user of the client device 110 and provides information to the user of the client device 110 through the user interface 180. For example, the client device may be a mobile client device (e.g., a cellular telephone) having a touch display interface. Thus, the user interface manager 350 receives touch input and also displays the live stream for viewing through the user interface 180. The user interface manager 350 may provide information during the live stream. As previously described, the user interface manager 350 provides a GUI on the user interface 180 of the viewer client device 110. The GUI may provide an indication that the current stream is in a semi-live state (e.g., a yellow button) rather than a live state (e.g., a green button). As another example, user interface manager 350 may provide a notification whenever a new anchor is generated in the live stream.
The user interface manager 350 presents the VOD with anchor to the viewer client device 110. While VOD is displayed, the user interface manager 350 may present additional selectable options through the user interface 180. For example, the selectable option may be a forward or backward arrow displayed on the user interface 180. When user input is received on the forward arrow, the user interface manager 350 identifies a subsequent anchor (e.g., an anchor specifying the next timestamp in the VOD) and displays the VOD at that anchor. Similarly, if user input is received on a backward arrow, the user interface manager 350 identifies the previous anchor (e.g., the anchor specifying the previous timestamp in VOD) and displays VOD at the previous anchor. The operation of identifying subsequent or previous anchors may be performed by a user interface manager of the query stream hosting server 150.
The user interface manager 350 may maintain a counter that tracks the number of times the user starts or skips from an anchor in the VOD. The counter indicates the popularity of the anchor in VOD. The updated counter information may be provided to the stream hosting server 150 to further improve the search function. For example, the viewer client device 110 may send a search for the term "puppy" and then receive a particular anchor in the VOD associated with the "puppy". If most viewer client devices 110 that have provided a "puppy" search query eventually begin displaying VOD at the anchor (e.g., do not skip the anchor), this information may be provided back to the hosting server 150. Alternatively, if most viewer client devices 110 that have provided a "puppy" search query briefly display VOD starting from the anchor, but stop viewing quickly, the keyword "puppy" may be a bad topic association with the anchor. The stream hosting server 150 can use this information to adjust the keyword tags associated with the anchors and further update the ranking algorithm used to run the search query that identifies the anchors in the VOD content.
The user interface manager 350 receives input indicating that the user wants to access the live stream. The user interface manager 350 provides the input to the request module 355. The request module 355 is configured to provide a variety of different requests from the viewer client device 110 to the stream hosting server 150. As a first example, in response to receiving user input from user interface manager 350, request module 355 sends a join or rejoin request to stream hosting server 150 (depending on whether the user is a new join or a rejoin). In a second example, the request module 355 may send a user query to the stream hosting server 150 to search for anchors of VOD that may be relevant to the user query. Each of these examples is described further below.
Referring to the first example, when the viewer client device 110 desires to access a live stream, the request module 355 determines whether to send a join request or a rejoin request. For example, if the viewer client device 110 newly accesses a live stream, the request module 355 chooses to send a join request. The request module 355 selects to send a rejoin request if the viewer client device 110 has previously accessed the live stream and is temporarily transferred (e.g., 1-5 minutes). In some cases, the request module 355 chooses to send a join request rather than a rejoin request even though the viewer client has previously accessed the overflow. For example, the request module 355 determines that the viewer client device has previously accessed the live stream, but exited the stream before a threshold amount of time (e.g., 30 minutes, 1 hour). Thus, the request module 355 treats the viewer client device 110 as a new join request.
The request module 355 may send a rejoin request to the stream hosting server 150 along with the timestamp retrieved from the timestamp storage 370. The included timestamps help the stream hosting server 150 determine when the viewer client device 110 previously left the live. For example, the viewer client device 110 may have previously accessed the live stream and subsequently transferred to view the content item at the exit timestamp of the live stream. Thus, when the viewer client device 110 attempts to rejoin the stream, the request module 355 sends the departure time to the stream hosting server 150 along with the rejoin request. The stream hosting server 150 determines an anchor that was generated when the client device 110 played the content item according to the departure time.
Referring now to the second example, the request module 355 also processes the submitted user query to search for anchors associated with a particular topic of interest in VOD. The request module 355 sends the search request to the search module 260 of the stream hosting server 150. For example, the request module 355 may send a search request for a "puppy". In return, the viewer client device 110 receives a list of anchors associated with the subject of the "puppy". The anchor list can be presented in an order ranked according to a search algorithm used by the search module 260. Thus, the user may select and play VOD from anchors that are relevant to the particular topic of interest included in the search query.
In some embodiments, the software module 300B of the viewer client device 110 also includes an anchor analyzer module 230 and is responsible for identifying the appropriate anchor to begin accessing the live stream. Thus, instead of the anchor analyzer module 230 being a module of the stream hosting server 150, this embodiment includes the anchor analyzer module 230 in the viewer client device 110.
The anchor analyzer module 230 on the observer client device 110 receives the anchor list 240 from the stream hosting server 150. As one example, the anchor analyzer module 230 automatically identifies the appropriate anchor based on the timestamp of each anchor in the anchor list 240 and the timestamp associated with the join or rejoin request. As previously described, if the request is a join request, the anchor analyzer module 230 selects the anchor that specifies the most recent (most recent) timestamp. If the request is a rejoin request, the anchor analyzer module 230 selects the anchor that specifies the timestamp closest to the departure time.
As a second example, the anchor analyzer module 230 may query a user of the user client device 110 for user input to identify an appropriate anchor. The anchor analyzer module 230 presents the anchors in the anchor list 240 on the user interface 180 of the viewer client device 110 and receives user input specifying the appropriate anchors for joining or rejoining the stream. In this example, the anchor analyzer module 230 provides the user with final control over where to begin viewing in the live stream.
The playback module 365 receives the live stream from the stream hosting server 150 to be played on the viewer client device 110 based on the identified anchor. The live stream may contain additional instructions in the metadata file regarding how the playback module 365 plays the live stream (e.g., decoder, video resolution, and audio bitrate). For example, the playback module 365 can receive the live stream and associated audio files and can decode them separately before playing them on the user interface manager 350 of the viewer client device 110.
Playback module 365a also receives a content item from stream hosting server 150 to play on client device 110. The content items may be stored in the client content store 375. Additionally, the content item may have associated instructions (e.g., stored in a metadata file associated with the content item) that instruct the client device 110 to play the content item at a departure timestamp of the live stream. Thus, the client device 110 automatically turns to playing the content item at the departure timestamp. The departure timestamp can be stored in a timestamp storage 370 and used for further analysis by the anchor analyzer module 360 when the client device 110 is to rejoin the live stream.
Providing live streaming
Fig. 4 depicts an example flow diagram of the stream hosting server 150 providing a live stream to be played on the client device 110 based on the generated anchor according to one embodiment. The stream hosting server 150 receives 405 a live stream from the creator client device 108. The stream hosting server 150 receives 410 a request to generate an anchor from the creator client device 108 at a timestamp of the live stream.
When the live stream is in progress, the stream hosting server 150 generates 415 an anchor. As described above, each anchor is generated with a timestamp and a validity duration. The stream hosting server 150 receives 420 a request (e.g., a join request or a rejoin request) from a client device and determines 425 valid anchors based on a validity duration associated with each anchor. From the valid anchor list, the stream hosting server 150 identifies 430 an anchor. For example, if the received request is a join request, the stream hosting server 150 identifies an anchor that specifies the most recent timestamp. If the received request is a rejoin request, the stream hosting server 150 identifies the anchor specifying the timestamp closest to the departure timestamp. Once the stream hosting server 150 identifies the anchor, the stream hosting server 150 provides 435 the live stream to the viewer client device 110 to begin playing at the timestamp specified by the identified anchor.
Request and play of live streams
Fig. 5 depicts an example flow diagram for playback of a received live stream by the viewer client device 110 based on a generated anchor, according to one embodiment. The viewer client device 110 receives 505 a user input specifying a desire to access the live stream. For example, a user may provide touch input through the user interface 180. The viewer client device 110 determines 510 the type of request sent on behalf of the user. For example, the viewer client device 110 determines whether the viewer client device 110 is newly accessing the live stream or returning to the live stream after the transfer. Thus, the request may be a join request or a rejoin request. The viewer client device sends 515 a request to the stream administration server 150 to access the live stream. If the viewer client device 110 is sending a rejoin request, the request also includes a departure timestamp associated with the viewer client device 110 that previously left the live stream.
The viewer client device 110 receives 520 the live stream and the identified anchor specifying a timestamp of the live stream. If the viewer client device 110 newly joins the live stream, the identified anchor is the most recently generated anchor associated with the live stream. If the viewer client device 110 rejoins the live stream, the identified anchor specifies a timestamp closest to the departure time corresponding to when the viewer client device 110 left the live stream. The viewer client device 110 plays 525 the live stream for the user at the timestamp specified by the identified anchor.
Overview
The foregoing description of embodiments of the present disclosure has been presented for purposes of illustration; it is not intended to be exhaustive or to limit the disclosure to the precise form disclosed. One skilled in the relevant art will appreciate that many modifications and variations are possible in light of the above disclosure.
Some portions of the present specification describe embodiments of the disclosure in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are commonly used by those skilled in the data processing arts to effectively convey the substance of their work to others skilled in the art. These operations, while described functionally, computationally, or logically, are understood to be implemented by computer programs or equivalent electrical circuits or microcode, or the like. Moreover, it has also proven convenient at times, to refer to these arrangements of operations as modules, without loss of generality. The described operations and their associated modules may be embodied in software, firmware, hardware, or any combination thereof. In one embodiment, the software modules are implemented as a computer program product. The computer program product may include a computer readable medium having computer program code embodied therewith, the computer program code executable by a computer processor to perform any or all of the steps, operations or processes described. Alternatively, the computer program product may be a signal encoding the computer program code and transmitted via a signal path (e.g., a radio path, an electrical signal path, or an optical path) without being recorded on a non-transitory recording medium.
Embodiments of the present disclosure may also relate to apparatuses for performing the operations herein. This apparatus may be specially constructed for the required purposes, and/or it may comprise a general purpose computing device selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a non-transitory tangible computer readable storage medium or any type of medium suitable for storing electronic instructions, which may be coupled to a computer system bus. Further, any of the computing systems mentioned in the specification may include a single processor, or may be architectures employing multiple processor designs for increased computing capability.
Embodiments of the present disclosure may also relate to products produced by the computing processes described herein. Such an article of manufacture may comprise information produced by a computing process, where the information is stored on a non-transitory tangible computer readable storage medium, and may include any embodiment of a computer program product or other combination of data described herein.
Finally, the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Therefore, it is intended that the scope of the disclosure be limited not by this detailed description, but rather by any claims that issue on this application based hereon. Accordingly, the disclosure of the embodiments of the disclosure is intended to be illustrative, but not limiting, of the scope of the disclosure, which is set forth in the following claims.
Claims (20)
1. A computer-implemented method, comprising:
receiving, by an application on a viewer client device, user input to access a live stream;
sending, by the application on the viewer client device, a request to access the live stream;
presenting, by the application on the viewer client device, information that allows a user to indicate one of a plurality of anchors associated with the live stream;
receiving the live stream and an indicated anchor specifying a timestamp of the live stream; and
displaying, by the application on the viewer client device, the live stream starting at the timestamp specified by the identified anchor.
2. The computer-implemented method of claim 1, wherein the transmitted request to access the live stream is based on whether the viewer client device previously accessed the live stream for a threshold amount of time is one of a join request or a re-join request.
3. The computer-implemented method of claim 1, wherein the transmitted request to access the live stream is a join request, and wherein the identified anchor specifies a timestamp of the live stream that is closest to a timestamp associated with the transmitted join request to access the live stream.
4. The computer-implemented method of claim 1, further comprising:
receiving, on the viewer client device, a content item to be presented to a user;
identifying an departure time interval of the live stream associated with the content item;
in response to expiration of the departure time interval, displaying the received content item in place of the live stream; and
storing a departure timestamp of the live stream corresponding to a time at which the received content item was displayed in place of the live stream.
5. The computer-implemented method of claim 4, wherein the request to access the live stream is a rejoin request and is sent in response to the display of the received content item to the user having been completed.
6. The computer-implemented method of claim 2, wherein the transmitted request to access the live stream is a rejoin request, and wherein the indicated anchor specifies a timestamp that is closest to the departure timestamp of the live stream.
7. The computer-implemented method of claim 1, further comprising:
providing an indication that the live stream is currently in a semi-live state; and
providing a selectable indication that, when selected, converts the live stream in a semi-live state to a live segment of the live stream.
8. A non-transitory computer-readable medium storing instructions that, when executed by a processor of a viewer client device, cause the processor to perform operations comprising:
receiving, by an application on the viewer client device, user input to access a live stream;
sending, by the application on the viewer client device, a request to access the live stream;
presenting, by the application on the viewer client device, information that allows a user to indicate one of a plurality of anchors associated with the live stream;
receiving the live stream and an indicated anchor specifying a timestamp of the live stream; and
displaying, by the application on the viewer client device, the live stream starting at the timestamp specified by the identified anchor.
9. The non-transitory computer-readable medium of claim 8, wherein the transmitted request to access the live stream is based on whether the viewer client device previously accessed the live stream for a threshold amount of time is one of a join request or a re-join request.
10. The non-transitory computer-readable medium of claim 8, wherein the transmitted request to access the live stream is a join request, and wherein the identified anchor specifies a timestamp of the live stream that is closest to a timestamp associated with the transmitted join request to access the live stream.
11. The non-transitory computer-readable medium of claim 8, wherein the operations further comprise:
receiving, on the viewer client device, a content item to be presented to a user;
identifying an departure time interval of the live stream associated with the content item;
in response to expiration of the departure time interval, displaying the received content item in place of the live stream; and
storing a departure timestamp of the live stream corresponding to a time at which the received content item was displayed in place of the live stream.
12. The non-transitory computer-readable medium of claim 11, wherein the request to access the live stream is a rejoin request and is sent in response to the display of the received content item to the user having been completed.
13. The non-transitory computer-readable medium of claim 9, wherein the transmitted request to access the live stream is a rejoin request, and wherein the indicated anchor specifies a timestamp that is closest to the departure timestamp of the live stream.
14. The non-transitory computer-readable medium of claim 8, wherein the operations further comprise:
providing an indication that the live stream is currently in a semi-live state; and
providing a selectable indication that, when selected, converts the live stream in a semi-live state to a live segment of the live stream.
15. The non-transitory computer-readable medium of claim 8, wherein the indicated anchor is associated with a validity duration.
16. A system, comprising:
a memory; and
a processor coupled to the memory to perform operations comprising:
receiving, by an application on a viewer client device, user input to access a live stream;
sending, by the application on the viewer client device, a request to access the live stream;
presenting, by the application on the viewer client device, information that allows a user to indicate one of a plurality of anchors associated with the live stream;
receiving the live stream and an indicated anchor specifying a timestamp of the live stream; and
displaying, by the application on the viewer client device, the live stream starting at the timestamp specified by the identified anchor.
17. The system of claim 16, wherein the transmitted request to access the live stream is based on whether the viewer client device previously accessed the live stream for a threshold amount of time is one of a join request or a re-join request.
18. The system of claim 16, wherein the transmitted request to access the live stream is a join request, and wherein the identified anchor specifies a timestamp of the live stream that is closest to a timestamp associated with the transmitted join request to access the live stream.
19. The system of claim 16, wherein the operations further comprise:
receiving, on the viewer client device, a content item to be presented to a user;
identifying an departure time interval of the live stream associated with the content item;
in response to expiration of the departure time interval, displaying the received content item in place of the live stream; and
storing a departure timestamp of the live stream corresponding to a time at which the received content item was displayed in place of the live stream.
20. The system of claim 19, wherein the request to access the live stream is a rejoin request and is sent in response to the received content item having completed being displayed to the user.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202210662897.9A CN115209169B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/339,874 US10652294B2 (en) | 2016-10-31 | 2016-10-31 | Anchors for live streams |
US15/339,874 | 2016-10-31 | ||
PCT/US2017/054159 WO2018080722A1 (en) | 2016-10-31 | 2017-09-28 | Anchors for live streams |
CN201780067750.2A CN109891896B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
CN202210662897.9A CN115209169B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780067750.2A Division CN109891896B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
Publications (2)
Publication Number | Publication Date |
---|---|
CN115209169A true CN115209169A (en) | 2022-10-18 |
CN115209169B CN115209169B (en) | 2023-12-05 |
Family
ID=60117768
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780067750.2A Active CN109891896B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
CN202210662483.6A Pending CN115225924A (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
CN202210662897.9A Active CN115209169B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780067750.2A Active CN109891896B (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
CN202210662483.6A Pending CN115225924A (en) | 2016-10-31 | 2017-09-28 | Anchor for live streaming |
Country Status (4)
Country | Link |
---|---|
US (3) | US10652294B2 (en) |
EP (2) | EP4164228A1 (en) |
CN (3) | CN109891896B (en) |
WO (1) | WO2018080722A1 (en) |
Families Citing this family (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10868741B2 (en) * | 2015-06-05 | 2020-12-15 | Microsoft Technology Licensing, Llc | Anchor shortening across streaming nodes |
US10652294B2 (en) * | 2016-10-31 | 2020-05-12 | Google Llc | Anchors for live streams |
EP3791561B1 (en) * | 2018-05-11 | 2023-09-06 | Microsoft Technology Licensing, LLC | Anchor shortening across streaming nodes |
US11044291B2 (en) * | 2018-09-28 | 2021-06-22 | Microsft Technology Licensing, LLC | Enhanced anchor protocol for event stream processing |
US11095522B2 (en) * | 2019-08-21 | 2021-08-17 | Microsoft Technology Licensing, Llc | Dynamic scaling for data processing streaming system |
CN110636321A (en) * | 2019-09-30 | 2019-12-31 | 北京达佳互联信息技术有限公司 | Data processing method, device, system, mobile terminal and storage medium |
US11226966B2 (en) * | 2019-10-02 | 2022-01-18 | Microsoft Technology Licensing, Llc | Journaling of streaming anchor resource(s) |
CN111770355B (en) * | 2020-07-09 | 2022-07-01 | 北京达佳互联信息技术有限公司 | Media server determination method, device, server and storage medium |
CN112235594B (en) * | 2020-10-20 | 2022-06-14 | 广州博冠信息科技有限公司 | Live broadcast and microphone connecting method and device, computer readable medium and electronic equipment |
CN113630657A (en) * | 2021-08-03 | 2021-11-09 | 广东九联科技股份有限公司 | Video playing optimization method and system based on hls protocol |
CN114157914A (en) * | 2021-11-30 | 2022-03-08 | 深圳Tcl数字技术有限公司 | Multimedia playing method, device, storage medium and electronic equipment |
US20230231895A1 (en) * | 2021-12-30 | 2023-07-20 | 17Live Japan Inc. | System and method for accessing streaming data |
CN114827664B (en) * | 2022-04-27 | 2023-10-20 | 咪咕文化科技有限公司 | Multi-path live broadcast mixed stream method, server, terminal equipment, system and storage medium |
CN116389844A (en) * | 2023-02-20 | 2023-07-04 | 北京字跳网络技术有限公司 | Interaction method, interaction device, electronic equipment, storage medium and program product |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060143669A1 (en) * | 2004-12-23 | 2006-06-29 | Bitband Technologies Ltd. | Fast channel switching for digital TV |
US20110268427A1 (en) * | 2010-04-30 | 2011-11-03 | Brelay Herve | Methods and apparatuses for a projected pvr experience |
US20120282951A1 (en) * | 2011-01-10 | 2012-11-08 | Samsung Electronics Co., Ltd. | Anchoring and sharing locations and enjoyment experience information on a presentation timeline for multimedia content streamed over a network |
CN105191337A (en) * | 2013-03-05 | 2015-12-23 | 英国电讯有限公司 | Provision of video data |
US20160277802A1 (en) * | 2015-03-20 | 2016-09-22 | Twitter, Inc. | Live video stream sharing |
Family Cites Families (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7764863B1 (en) * | 2002-03-06 | 2010-07-27 | Bigband Networks Inc. | System and method for providing trick modes |
US20080051029A1 (en) * | 2006-08-25 | 2008-02-28 | Bradley James Witteman | Phone-based broadcast audio identification |
US20080049704A1 (en) * | 2006-08-25 | 2008-02-28 | Skyclix, Inc. | Phone-based broadcast audio identification |
EP2481217A4 (en) * | 2009-09-26 | 2014-02-19 | Disternet Technology Inc | System and method for micro-cloud computing |
US20110093885A1 (en) * | 2009-10-21 | 2011-04-21 | Tandberg Television Inc. | Bookmark calibration for video on demand applications incorporating dynamic advertising |
US8543724B2 (en) * | 2010-04-30 | 2013-09-24 | Digital Keystone, Inc. | Methods and apparatuses for a projected PVR experience |
US8738736B2 (en) * | 2010-11-23 | 2014-05-27 | Edgecast Networks, Inc. | Scalable content streaming system with server-side archiving |
US20120173749A1 (en) * | 2011-01-03 | 2012-07-05 | Kunal Shah | Apparatus and Method for Providing On-Demand Multicast of Live Media Streams |
US20130064287A1 (en) * | 2011-09-14 | 2013-03-14 | Mobitv, Inc. | Management of resources for live stream variant processing |
JP2013192062A (en) * | 2012-03-14 | 2013-09-26 | Toshiba Corp | Video distribution system, video distribution apparatus, video distribution method and program |
US9100460B2 (en) * | 2012-06-28 | 2015-08-04 | Adobe Systems Incorporated | Media stream fragment request |
US20150208103A1 (en) * | 2012-08-08 | 2015-07-23 | National University Of Singapore | System and Method for Enabling User Control of Live Video Stream(s) |
WO2015042962A1 (en) * | 2013-09-30 | 2015-04-02 | Telefonaktiebolaget L M Ericsson(Publ) | System and method of a link surfed http live streaming broadcasting system |
US9503794B2 (en) * | 2014-05-08 | 2016-11-22 | Google Inc. | Serving a live stream as an advertisement |
WO2016109450A1 (en) * | 2014-12-29 | 2016-07-07 | Neon Labs Inc. | Selecting a high-valence representative image |
EP3262523B1 (en) * | 2015-02-27 | 2019-12-04 | DivX, LLC | System and method for frame duplication and frame extension in live video encoding and streaming |
US10148719B2 (en) * | 2015-06-05 | 2018-12-04 | Microsoft Technology Licensing, Llc. | Using anchors for reliable stream processing |
US10652294B2 (en) * | 2016-10-31 | 2020-05-12 | Google Llc | Anchors for live streams |
-
2016
- 2016-10-31 US US15/339,874 patent/US10652294B2/en active Active
-
2017
- 2017-09-28 CN CN201780067750.2A patent/CN109891896B/en active Active
- 2017-09-28 EP EP22204588.2A patent/EP4164228A1/en not_active Withdrawn
- 2017-09-28 CN CN202210662483.6A patent/CN115225924A/en active Pending
- 2017-09-28 WO PCT/US2017/054159 patent/WO2018080722A1/en unknown
- 2017-09-28 CN CN202210662897.9A patent/CN115209169B/en active Active
- 2017-09-28 EP EP17784748.0A patent/EP3533227B1/en active Active
-
2020
- 2020-05-11 US US16/872,351 patent/US11082468B2/en active Active
-
2021
- 2021-08-02 US US17/392,154 patent/US11930062B2/en active Active
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060143669A1 (en) * | 2004-12-23 | 2006-06-29 | Bitband Technologies Ltd. | Fast channel switching for digital TV |
US20110268427A1 (en) * | 2010-04-30 | 2011-11-03 | Brelay Herve | Methods and apparatuses for a projected pvr experience |
US20120282951A1 (en) * | 2011-01-10 | 2012-11-08 | Samsung Electronics Co., Ltd. | Anchoring and sharing locations and enjoyment experience information on a presentation timeline for multimedia content streamed over a network |
CN105191337A (en) * | 2013-03-05 | 2015-12-23 | 英国电讯有限公司 | Provision of video data |
US20160277802A1 (en) * | 2015-03-20 | 2016-09-22 | Twitter, Inc. | Live video stream sharing |
Also Published As
Publication number | Publication date |
---|---|
EP3533227A1 (en) | 2019-09-04 |
US11082468B2 (en) | 2021-08-03 |
EP3533227B1 (en) | 2023-01-25 |
US11930062B2 (en) | 2024-03-12 |
CN109891896A (en) | 2019-06-14 |
CN109891896B (en) | 2022-07-05 |
WO2018080722A1 (en) | 2018-05-03 |
US20210367989A1 (en) | 2021-11-25 |
US10652294B2 (en) | 2020-05-12 |
EP4164228A1 (en) | 2023-04-12 |
CN115209169B (en) | 2023-12-05 |
US20180124141A1 (en) | 2018-05-03 |
CN115225924A (en) | 2022-10-21 |
US20200344281A1 (en) | 2020-10-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN109891896B (en) | Anchor for live streaming | |
US11909794B2 (en) | Method to re-synchronize live media streams, commands, and on-screen events transmitted through different internet pathways | |
US20220150572A1 (en) | Live video streaming services | |
US9530452B2 (en) | Video preview creation with link | |
US8332530B2 (en) | User interface including concurrent display of video program, histogram, and transcript | |
US8806341B2 (en) | Method and apparatus for navigating a media program via a histogram of popular segments | |
US9979931B2 (en) | Transmitting a digital media stream that is already being transmitted to a first device to a second device and inhibiting presenting transmission of frames included within a sequence of frames until after an initial frame and frames between the initial frame and a requested subsequent frame have been received by the second device | |
US20100242066A1 (en) | Method of Performing Random Seek Preview for Streaming Video | |
US11006180B2 (en) | Media clipper system | |
US11451885B1 (en) | Methods and systems for providing dynamic summaries of missed content from a group watching experience | |
US20240121451A1 (en) | Video processing method and apparatus, storage medium, and device | |
JP5043711B2 (en) | Video evaluation apparatus and method | |
US8055779B1 (en) | System and method using data keyframes | |
US20230300430A1 (en) | Method and system to highlight video segments in a video stream | |
CA3211145A1 (en) | Instant video trimming and stitching and associated methods and systems | |
US11882326B2 (en) | Computer system and method for broadcasting audiovisual compositions via a video platform | |
US20220394323A1 (en) | Supplmental audio generation system in an audio-only mode |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
CN110692054A - Predicting unobservable parameters of digital components - Google Patents
Predicting unobservable parameters of digital components Download PDFInfo
- Publication number
- CN110692054A CN110692054A CN201880035900.6A CN201880035900A CN110692054A CN 110692054 A CN110692054 A CN 110692054A CN 201880035900 A CN201880035900 A CN 201880035900A CN 110692054 A CN110692054 A CN 110692054A
- Authority
- CN
- China
- Prior art keywords
- request
- candidate
- requested
- parameter
- component
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9038—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/214—Generating training patterns; Bootstrap methods, e.g. bagging or boosting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
- G06N20/10—Machine learning using kernel methods, e.g. support vector machines [SVM]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
- G06N20/20—Ensemble learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
Abstract
Systems, methods, devices, and techniques for improving the efficiency of selecting digital components to be presented in an electronic document and reducing the latency of presenting digital components in an electronic document. In some implementations, the content distribution system uses the predictive metrics of the candidate set of components to determine items to present in the electronic document in response to the request. The metric prediction model may generate the prediction metric by means of a parameter predictor model that predicts values of unobservable parameters associated with requests for digital components.
Description
Cross Reference to Related Applications
This application claims priority to U.S. application serial No. 62/557,655, filed on 12/9/2017, the entire contents of which are incorporated herein by reference.
Technical Field
This description relates generally to data processing and, more particularly, to predicting values of unobservable parameters for selecting digital components.
Background
The internet facilitates the exchange of information and the execution of transactions between users worldwide. The wide range of connections between internet-enabled devices allows digital content to be distributed to end users on a significant scale, for example, for presentation in electronic documents such as web pages or application interfaces. In some instances, digital components from multiple different sources may be integrated into a single electronic document to create a composite document (e.g., a host electronic document). For example, a main portion of the content included in the electronic document may be selected (or specified) by a publisher of the electronic document. A secondary portion of content (e.g., digital third party content) may be distributed on behalf of a third party (e.g., an entity that is not a publisher of an electronic document).
Disclosure of Invention
This document describes systems, methods, devices, and other techniques for selecting a digital component to be displayed in an electronic document, such as a web page or a graphical interface of an application on a user device. In some implementations, the digital component is selected for display in the document by a content distribution system that makes the digital component available for distribution on behalf of many different independent content providers. The content provider may be separate from the publisher of the electronic document (e.g., a third party content provider) so the content distribution system selects content to be presented in the electronic document based on an evaluation process that optimizes one or more selection criteria. For example, the content distribution system may select a digital component that is determined to be relevant to a user query submitted at a particular website based on topic similarity between the website and the digital component, or based on these and additional criteria. For example, a creative related to sukiosks (e.g., a digital component) may be selected for presentation in a web page related to travel in aspen, colorado, while another creative related to home improvement services may be presented in response to a query for "kitchen remodeling".
The content distribution system relies in part on the context of a digital component request (e.g., a third-party content request) to determine the digital components to return to the user device in response to the request. The context of the request may indicate the values of one or more parameters (referred to as "selection parameters" or "request parameters") that the content distribution system uses to select the appropriate and relevant components for the request. For example, the context of the request may include identification information of the electronic document in which the selected digital component is to be displayed (e.g., a URL of a web page or an identifier of an application), parameters associated with the display of the digital component within the electronic document, identification information of a user agent in which the document is presented (e.g., a web browser identifier, a brand/model/category of the user device), screen size and/or resolution, a geographic location of the user device, a current time of day at which the request was submitted, keywords describing the content of the electronic document, a search query that the user submitted to initiate a search (if the digital item is to be included in a search results page), or a combination of these and other parameters.
In some instances, many of the selection parameters that form the context of the request are observable features, as they may be measured/observed directly and reported from the user equipment when the request for the digital component is made. However, other parameters may not be observable, such that they cannot be easily measured or timely reported to the content distribution system for use by the system in selecting digital components for a request. For example, in some content distribution schemes, the location where the digital component will be presented in the host electronic document is one such unobservable parameter: for the content selection process, it may not be known a priori by the system. Because documents typically include dynamic elements that change for each service, the exact display location of the third party digital component may not be known until all elements are actually identified and surfaced at the user device, for example. However, the display position, in particular the vertical display position, may have a significant effect on the effect of the display of the digital component. For example, such parameters may affect whether a content item is effectively displayed within a document.
This document describes techniques for predicting values of unobservable selection parameters for vertical display positions of digital components. In some implementations, the content distribution system processes observable parameters that are actually available in the request (or that can be indirectly derived from information in the request) using a parameter prediction model to predict the value of unobservable parameters, such as the vertical display position of the digital component. The predicted values of the unobservable parameters may then be considered along with other prediction inputs to predict a prediction metric (e.g., estimated click-through rate, conversion rate, or other likelihood of user interaction with the item) for a candidate numeric component that the content distribution system uses to determine whether the item should be returned in response to the request. In some implementations, the metric prediction model generates a predicted metric based on values of the predicted unobservable parameters, observable selection parameters associated with the request, and distribution parameters associated with the candidate digital components. Further, the parametric prediction model may be part of a metric prediction model. For example, the metric and parametric prediction models may be machine learning models (e.g., neural networks), where the machine learning models are jointly trained and where the output of the parametric prediction model is processed by a first hidden layer of the metric prediction model after a last layer of the parametric prediction model.
In some implementations, the content distribution system processes observable parameters that are actually available in the request (or that can be indirectly derived from information in the request) using a parameter prediction model to predict the value of unobservable parameters, such as the vertical display position of the digital component. The predicted values of the unobservable parameters may then be considered along with other prediction inputs to select candidate digital components that the content distribution system returns in response to the request. In some implementations, the performance prediction model generates predicted performance metrics based on values of the predicted unobservable parameters, observable selection parameters associated with the request, and distribution parameters associated with the candidate digital content item. Furthermore, the parametric prediction model may be part of a performance prediction model. For example, the performance prediction model and the parametric prediction model may be machine learning models (e.g., neural networks), where the machine learning models are jointly trained and where the output of the parametric prediction model is processed by a first hidden layer of the performance prediction model after a last layer of the parametric prediction model.
In certain instances, some embodiments of the subject matter described herein can realize one or more of the following advantages. First, the content distribution system may use predicted selection parameters instead of observed (e.g., measured) parameters to more efficiently select digital components for presentation in the electronic document, thereby reducing latency in returning the selected digital components to the user device. For example, a browser at the user device may begin loading a web page. As part of the initial loading process, the browser may execute machine-readable instructions (e.g., scripts) in the page that cause the device to request the third-party digital component from the content distribution system. The script may configure the device to embed a set of observable parameters in the request, such as parameters characterizing a browsing session, user device, web page, and/or other features. Some parameters may be determined quickly and immediately, while other parameters (e.g., vertical display position) may not be determinable until a later time. However, parameters that may not be determinable until a later time may affect how efficiently different types or forms of digital components may be displayed, and may thus facilitate selection of digital components to be displayed to provide an improved display. Rather than waiting for identification of these potential parameters, the device may transmit a request with information about parameters that may be immediately determined, and the content distribution system may then predict the potential parameters based in part on the immediately determinable parameters. In this way, the distribution system has the benefit of utilizing non-observable parameters (e.g., potential parameters that cannot be observed at the user device within a defined time period or before content selection has occurred) without waiting for actual values of these parameters to become available. The system may therefore select and return the digital component to the user device in response to the request at an earlier time, thereby reducing the latency of responding to the request and reducing the time required for the browser to fully render the web page with the third party digital component. The returned digital components may be better suited for the display and/or interface such that the selected digital components are more efficiently displayed to the user. In particular, the use of predicted potential parameters may allow the display of content to be improved.
Second, in some implementations, the size and complexity of third-party content requests sent from user devices to the content distribution system may be reduced by eliminating some observed or measured parameters from the request. The content distribution system may then predict the values of one or more parameters that are not included in the request, rather than relying on the user device to report the values directly to the system as part of the request. Parameters that are not included in the request may be unobservable parameters because these parameters are not determinable at the user equipment within desired constraints (e.g., time or processing constraints). The transmission of requests of smaller size may save network bandwidth and advantageously may reduce the processing burden on the user equipment generating the request and the distribution system receiving and parsing the request.
Third, some embodiments of the subject matter disclosed herein may improve the ability of a content distribution system to select more relevant digital components for presentation in an electronic document. For example, rather than using unobservable parameters of a request in advance, the system may predict the values of those parameters, which in some instances may significantly affect the predicted metrics of the candidate numeric components and improve the ability of the system to select items to return (e.g., items that may be better suited to the display environment and/or user) in response to the request.
Fourth, in some implementations, the content distribution system can more efficiently generate prediction metrics for candidate digital components by evaluating terms using a metric prediction model with embedded parameter prediction submodels. By embedding the parameter prediction model as a component of the metric prediction model and combining the training models, the system can generate prediction metrics based on a single request rather than separate, serialized requests first for predicted values of unobservable request parameters and then prediction metrics in separate stages. Furthermore, the model may be maintained more easily because retraining based on new training data may be performed jointly on the model, e.g., rather than postponing training of the metric prediction model until the parametric prediction model is fully trained.
Additional features and advantages will be recognized and understood by those skilled in the art based upon the entire specification, claims, and drawings.
Drawings
FIG. 1 is a block diagram of an example environment in which third-party digital content is distributed for presentation in an electronic document.
2A-2C depict screen shots of an example electronic document having a display area reserved for presenting third party digital components.
FIG. 3 is a block diagram of an example content distribution system that selects digital components for presentation in an electronic document.
FIG. 4A is a block diagram of an example metric prediction model with an embedded parametric predictor model.
FIG. 4B is a block diagram of an example parametric prediction model implemented separately from a metric prediction model.
FIG. 5 is a flow diagram of an example process for selecting one or more digital components to return for presentation in an electronic document in response to a request.
FIG. 6 is a flow diagram of an example process for training a metric prediction model with an embedded parametric predictor model.
FIG. 7 depicts an example computing device and mobile computing device that may be applied to implement the computer-implemented methods and other techniques disclosed herein.
Like numbers and designations in the drawings indicate like elements.
Detailed Description
This document describes systems, methods, devices, and other techniques for predicting values of parameters used by a content distribution system in selecting third-party digital components to be presented in an electronic interface (e.g., an interface of an electronic document) at a user device. The selection uses predicted parameters generated based on actual parameters. The predicted parameters allow the digital components that are more suitable for display to the user to be selected. For example, in some implementations, the selected digital component may predict parameters of the user device and/or display environment that are not available at the time the request is transmitted, such that the predicted parameters are considered in selecting content, such that the selected digital component is more suitable for display at the user device.
In some implementations, the content distribution system can use a metric prediction model to estimate a likelihood that user interaction with a digital component in the electronic interface will occur. The prediction may be determined based on prediction inputs representing observed selection parameters from the request for electronic content, distribution parameters associated with the candidate digital components, and predicted values of one or more unobservable parameters as determined by a parameter prediction model at the content distribution system. These and other embodiments are described in more detail with respect to the accompanying drawings.
As used throughout this document, the phrase "digital component" refers to a discrete unit of digital content or digital information (e.g., a video clip, an audio clip, a multimedia clip, an image, text, or another unit of content). The digital component may be electronically stored in the physical storage device as a single file or in a collection of files, and the digital component may take the form of a video file, an audio file, a multimedia file, an image file, or a text file, and include advertising information such that the advertisement is a type of digital component.
FIG. 1 is a block diagram of an example environment 100 in which third-party digital content is distributed for presentation with an electronic document. The example environment 100 includes a Network 102, such as a Local Area Network (LAN), Wide Area Network (WAN), the internet, or a combination thereof. The network 102 connects an electronic document server 104, a user device 106, a third-party content server 108, and a third-party content distribution system 110 (also referred to as a content distribution system). The example environment 100 may include a number of different electronic document servers 104, user devices 106 (e.g., client computers), and third-party content servers 108.
An electronic document is data that presents a collection of content at a user device 106. Examples of electronic documents include web pages, word processing documents, Portable Document Format (PDF) documents, images, videos, search result pages, and feeds. A native application (e.g., an "app"), such as an application installed on a mobile, tablet, or desktop computing device, is also an example of an electronic document (e.g., presenting a graphical application interface at the user device 106). The electronic document may be provided by the electronic document server 104 to the user device 106. For example, the electronic document server 104 may include a server hosting a publisher's website. In this example, the user device 106 may initiate a request for a given publisher web page, and the electronic server 104 hosting the given publisher web page may respond to the request by transmitting machine-executable instructions that initiate presentation of the given web page at the user device 106.
In another example, the electronic document server 104 may include an app server from which the user device 106 may download apps (e.g., local applications). In this example, the user device 106 may download files needed to install the app at the user device 106, and then locally execute the downloaded app.
The electronic document may include various contents. For example, the electronic document may include static content (e.g., text or other specified content) within the electronic document itself and/or that does not change over time. The electronic document may also include dynamic content that may change over time or on a per-request basis. For example, a publisher of a given electronic document may maintain a data source that is used to populate (post) portions of the electronic document. In this example, the given electronic document may include a tag or script that causes the user device 106 to request content from a data source when the given electronic document is processed (e.g., rendered or executed) by the user device 106. The user device 106 integrates content obtained from the data source into the presentation of the given electronic document to create a composite electronic document that includes the content obtained from the data source.
In some instances, a given electronic document may include a third-party tag or a third-party script that references the third-party content distribution system 110. In these instances, the third party tag or third party script is executed by the user device 106 when a given electronic document is processed by the user device 106. Execution of the third party tag or third party script configures the user device 106 to generate a request for third party content 112 that is transmitted to the third party content distribution system 110 over the network 102. For example, a third party tag or third party script may enable the user device 106 to generate a packet data request including a header and payload data. The request 112 may include data that defines a context of the request and that may be used by the third-party content distribution system 110 in selecting one or more third-party digital components for presentation in the electronic document. The context of the request may include parameters collected or determined by the user device 106, such as the name (or network location) of the server to which the third-party content is being requested, the name (or network location) of the requesting device (e.g., user device 106), and/or other information that the third-party content distribution system 110 may use to select the third-party content to provide in response to the request. The parameters included in the request 112 may be referred to as observable parameters because they represent actual values of the parameters associated with the request (e.g., as opposed to predicted/estimated values or unobservable parameters that cannot be observed due to inherent or prescribed constraints). The request 112 may be sent by the user device 106 to a server of the third-party content distribution system 110 over the network 102 (e.g., a telecommunications network). In some implementations, the request 112 can include data specifying keywords associated with the electronic document, references to the electronic document (e.g., URLs), available locations of the electronic document that are available for rendering third-party content (e.g., third-party content slots), sizes of the available locations, and/or media types that are eligible for rendering at the locations, and can be provided to the content distribution system 110. Similarly, data specifying keywords associated with the electronic document or an entity referenced by the electronic document (e.g., a person, place, or thing) can also be included in the request 112 (e.g., as payload data) and provided to the content distribution system 110 to facilitate identification of the third-party digital component.
The request 112 may also include data related to other information, such as information that the user has provided (e.g., a search query), geographic information indicating the state or area from which the request was submitted, or other information that provides context of the environment in which the third party content is to be displayed (e.g., the type of device at which the third party content is to be displayed, such as a mobile device or tablet device). Data specifying characteristics of the user device 106 may also be provided in the request 112, such as information identifying a model of the user device 106, a configuration of the user device 106, or a size (e.g., a physical size or resolution) of an electronic display (e.g., a touchscreen or desktop monitor) on which the electronic document is presented. The request 112 may be sent over a packet network, for example, and the request 112 itself may be formatted as packet data having a header and payload data. The header may specify the destination of the packet and the payload data may include any of the information discussed above.
In response to receiving the request 112 and/or using the information included in the request 112, the third-party content distribution system 110 selects third-party content to be presented with the given electronic document. In some implementations, the third-party content is selected in less than one second to avoid errors that may result from delaying selection of the third-party content. For example, the delay in providing third-party content in response to the request 112 may result in a page loading error at the user device 106, or cause portions of the electronic document to remain unfilled even after other portions of the electronic document are presented at the user device 106. Further, as the latency of providing third party content to the user device 106 increases, the electronic document is more likely to no longer be presented at the user device 106 when the third party content, thereby negatively impacting the user's experience with the electronic document. Further, for example, if the electronic document is no longer presented at the user device 106 when the third-party content is provided, the delay in providing the third-party content may result in a failed delivery of the third-party content.
In some implementations, the third-party content distribution system 110 is implemented in a distributed computing system that includes, for example, a server and a collection 114 of multiple computing devices that interconnect and identify and distribute third-party content in response to requests 112. The set of multiple computing devices 114 operate together to identify a set of third party content that is eligible to be presented in an electronic document from among the millions of available corpora of third party content (3PC 1-x). Millions of available third party content may be indexed, for example, in the third party corpus database 116. Each third-party content index entry may reference corresponding third-party content and/or include distribution parameters (DP1-DPx) that regulate distribution of the corresponding third-party content.
In some implementations, the distribution parameters for a particular third-party digital component can include distribution keywords, where the keywords must match (e.g., by the electronic document or terms specified in the request 112) in order for the third-party content to qualify for presentation. The distribution parameters may also require that the request 112 include information specifying a particular geographic area (e.g., country, state, or city) and/or information specifying that the request 112 originates from a particular type of user device (e.g., mobile device or tablet device) for third party content to qualify for presentation. The distribution parameters may also specify a bid and/or budget for distributing particular third-party content.
The identification of eligible third party content may be partitioned into a plurality of tasks 117a-117c that are then distributed among the computing devices within the set 114 of multiple computing devices. For example, different computing devices in the collection 114 can each analyze different portions of the third party corpus database 116 to identify various third party content having distribution parameters that match the information included in the request 112. In some implementations, each given computing device in the set 114 can analyze a different data dimension (or set of dimensions) and communicate the results of the analysis (Res 1-Res 3)118a-118c back to the third-party content distribution system 110. For example, the results 118a-118c provided by each of the computing devices in the set may identify a subset of third-party content that is eligible for distribution in response to the request and/or a subset of third-party content that has certain distribution parameters or attributes.
The third-party content distribution system 110 aggregates the results 118a-118c received from the set of multiple computing devices 114 and uses information associated with the aggregated results to select one or more instances of third-party content to be provided in response to the request 112. For example, the third-party content distribution system 110 may select a set of winning (winning) third-party digital components based on the results of one or more content evaluation processes, as discussed in more detail below. For example, the distribution system 1100 may predict unobservable parameters that are not specified in the request 112 and use the predicted parameters and other parameters to determine how effectively the digital component is to be displayed. Determining how efficiently the digital component is to be displayed may be based on, for example, compatibility between the display environment and the digital component. The compatibility between the display environment and the digital component may be determined based on the received parameters associated with the display environment and the predicted parameters associated with the display environment and the stored parameters associated with the digital component. In some implementations, if the digital component is returned to the device in response to the request 112 and presented to the user, the received and predicted parameters can be used to estimate how likely the user will click on the digital component or otherwise interact with the item. In turn, the third-party content distribution system 110 may generate reply data 120 (e.g., digital data representing a reply) and send the reply data 120 back over the network 102, where the reply data 120 enables the user device 106 to integrate the winning set of third-party content into a given electronic document such that the winning set of third-party content and the content of the electronic document are presented together at the display of the user device 106.
In some implementations, the user device 106 executes instructions included in the reply data 120 that configure the user device 106 and enable the user device 106 to obtain a winning set of third-party content from one or more third-party content servers. For example, the instructions in the reply data 120 may include a network location (e.g., a Uniform Resource Locator (URL)) and a script that causes the user device 106 to send a Third-Party Request (3 PR)121 to the Third-Party content server 108 to obtain the given winning Third-Party content from the Third-Party content server 108. In response to the request, the third-party content server 108 will send third-party data (TP data) 122 to the user device 106, where the third-party data 122 causes the given winning third-party content to be incorporated into the electronic document and presented at the user device 106.
2A-2C depict screen shots of an example electronic document 202 presented in different contexts. In this example, document 202 is a web page of an online news site. As shown in FIG. 2A, the document 202 includes a plurality of content slots 208 and 214 that define respective areas of the electronic document 202 for displaying third party digital components. The third-party content distribution system may select components for display in slots 208 and 214 based on a request from the user device in which document 202 is presented. FIG. 2A is a zoomed out view of document 202, showing the entire document length and width. In the reduced view, all four content slots 208, 210, 212, and 214 can be seen at the same time as each other. However, in practice, the document 202 may be larger than the viewing area provided on the screen of the user device, such that only a portion of the document 202 is displayed within the viewing area at a time. An application on the user device may provide controls that allow the document to be panned, scrolled, or zoomed, for example, to enable the user to view different portions of the document 202. Fig. 2B is a screenshot of an electronic document 202 within a relatively large viewing area 204 (e.g., in a web browser interface on a larger screen of a user device (e.g., a desktop LCD monitor)). In contrast, fig. 2C is a screenshot illustrating document 202 within a smaller viewing area 208 of a native application on mobile computing device 206.
FIG. 3 is a block diagram of an example content distribution system 300 that selects digital components for presentation in an electronic document. The system 300 is generally configured to select one or more digital components in response to a request for third party content from the user device 302 based on the received and predicted parameters. The system may also select a digital component based at least in part on the prediction metrics of the set of candidate digital components. The system 300 performs a two-stage process to determine the prediction metric. First, the system 300 processes the prediction inputs corresponding to the first subset of observable selection parameters associated with the request (and optionally the prediction inputs corresponding to the distribution parameters associated with the candidate digital components) to predict (e.g., calculate, determine, or derive) values for one or more unobservable selection parameters (e.g., vertical display positions where the digital components will be presented in an electronic document presented at the user device 302). Next, the system 300 processes the prediction inputs corresponding to the second subset of observable selection parameters associated with the request, the distribution parameters associated with the candidate digital component, and the predicted values of the one or more unobservable selection parameters to determine a prediction metric for the candidate digital component. The process for determining the prediction metrics and selecting the winning digital component in response to the request is discussed in more detail with respect to fig. 5.
The content distribution system 300 may include a front end server 304, one or more third party content servers 306, a metric prediction engine 308, and a content selection engine 310. In some implementations, the third-party content server 306 is separate from the content distribution system 300 and may be maintained, for example, by a separate third-party content provider or a network of third-party content providers. In general, each of servers 304, 306, 308, and 310 may be implemented with one or more computers that operate separately or in coordination with each other at one or more locations. All or some of servers 304, 306, 308, and 310 may be integrated on common computer hardware, or they may be implemented separately on different computers having physically different hardware. The division of operations performed by servers 304, 306, 308, and 310 as discussed herein is by way of example only. In some embodiments, other configurations of computers configured to perform similar operations similar to those discussed herein may be provided.
The front-end server 304 provides an interface for the content distribution system 300 to interact with other computers over a communications network (e.g., the internet or a local area network). For example, FIG. 3 shows a front-end server 304 in communication with a client computer 302. The front-end server 304 receives requests for third-party content, performs initial processing of the received requests, forwards information derived from the requests to other appropriate components of the content distribution system 300, and sends responses generated by the system 300 in response to the requests. In some implementations, the front-end server 304 includes a controller 312, a request manager 314, and a network interface 316.
The controller 312 coordinates operations between the various components of the front-end server 304.
The request manager 312 is configured to analyze third party requests and perform various preprocessing operations on third party content requests received by the system 300. In some implementations, the request manager 312 can parse the request to identify a value for a parameter, where the system 300 is configured to use the parameter as an input for selecting the third-party digital component. For example, request manager 312 may extract values corresponding to observable selection parameters specified in the request. Observable parameters refer to parameters that have actual values specified in the request (e.g., rather than predicted values) or that have actual values that the content distribution system can derive from information in the request. For example, the request may specify a value for an observable parameter (such as an identity of a user agent at the user device 302 in which the electronic interface is presented, a geographic location of the user device 302 at the time the request was submitted, a time of day associated with the request, a search query associated with the request, a reference to an electronic document in which the requested digital component is to be presented, a keyword derived from content of the electronic document and/or the search query, or a combination of all or some of these and other parameters). In some implementations, the content distribution system 300 can indirectly derive observable parameters from data specified in the request, even if the request does not directly specify observable parameters. For example, the request may include data identifying a user account associated with the request, and the distribution system may then access profile data for users registered to the user account in order to obtain data that the system may use to customize its content selection according to the user profile.
Third-party content server 306 maintains information for digital components that one or more third-party content providers have made available for distribution. In some implementations, the third-party content server 306 can be implemented as the third-party content server 108 (FIG. 1). The third-party content server 306 may include a digital component storage 324 (e.g., one or more non-volatile memory storage devices) that stores digital components that are already available for distribution. The database 318 may maintain an index 320 of available digital components stored in a storage 324. The database 318 may also store data representing the distribution parameters for each digital component. In some implementations, the distribution parameters of the numeric component include distribution keywords that describe the numeric component (e.g., keywords that describe the subject matter of the item or keywords associated with the product or service represented in the item) and a bid amount for the item (e.g., an amount that can be charged to the creator of the item per click or per 1000 exposures (impressions) of the item). The distribution parameters may also include information specifying a particular geographic region (e.g., country, state, or city) and/or information specifying that the request originated from a particular type of user device (e.g., mobile device or tablet device) for the digital component to qualify for presentation. The distribution parameters may also specify intrinsic properties of the digital component, such as size, format, and/or type (e.g., text, image, or video) of the digital component.
In addition to or instead of the vertical display position, the parametric prediction model 328 may also be configured to predict other unobservable selection parameters. For example, if any of the following parameters are not available to the distribution system at service time in response to a request, the model 328 may predict display attributes of the electronic document in which the digital component will be displayed, display attributes of the device or system at which the digital component will be displayed (e.g., screen size/resolution, category/brand/model of device), user agent or device type/category, number of other third-party digital components to be presented in the document with the requested third-party digital component, attributes of those other digital components, characteristics of search results to be presented in the electronic document with the requested third-party digital component. In some implementations, the model 328 may be configured to predict observable selection parameters in the event that observable parameters are not available to the distribution and selection system (e.g., due to a failure of a system component or the inability of a client device to report certain parameters). If the observed (e.g., measured) value of the parameter is not available, then the predictive model 328 may predict the value of the parameter for use as a backup.
The distribution system 300 further includes a content selection engine 310. The content selection engine 310 is configured to select a particular digital component to be presented in the electronic document at the user device 302 in response to a third-party content request. The content selection engine 310 selects digital content items based on the received and predicted parameters. The content selection engine 310 may select the digital component based on the predictive metrics of the digital component and optionally further based on additional factors such as a bid amount associated with the digital component. For example, the scoring module 330 may score the set of candidate numeric components based on their predictive metrics, bid amounts, and none, one, or more additional factors. The ranking module 332 may rank the candidate digital components based on their scores, and the selection module 324 may then select winning third-party content based on the scores and/or rankings. For example, the n (e.g., 1, 2, 3, or more) highest ranked candidate number components may be selected as the winning content to be presented at the user device 302.
FIG. 4A is a block diagram 400 of an example metric prediction model 402 with an embedded parameter predictor model 404. Metric prediction model 402, including parameter predictor model 404, may be implemented on one or more computers at one or more locations, for example, as part of metric prediction engine 308. As with models 326 and 328 (fig. 3), metric prediction model 402 is configured to generate predicted metrics for candidate digital components given a select set of parameters of a third-party content request, and parameter prediction model 404 is configured to generate predicted values for unobservable parameters for which actual values cannot be determined directly or indirectly from the request. The parameter prediction model 404 processes the subsets of prediction inputs 408a-408n to generate predicted values 410 of the unobservable parameters. Another portion of the metric prediction model 402 then processes another subset of the prediction inputs 406a-406n and the predicted inputs based on the predicted values 410 of the unobservable parameters to generate prediction metrics 412.
In some implementations, the parametric predictor model 404 is attached to the first layer of the main portion of the metric prediction model 402. In this manner, the output of parametric prediction model 404 (e.g., predicted values 410 of the unobservable selection parameters) are fed to the first layer of the majority of metric prediction model 402 as are the other prediction inputs in first subsets 406a-406 n.
In an alternative embodiment, FIG. 4B is a block diagram 450 of the example parametric prediction model 404 independent of the metric prediction model 402. In this embodiment, parametric prediction model 404 is separate from metric prediction model 402. For example, parametric prediction model 404 may be fully trained independently of metric prediction model 402, and metric prediction model 402 may thereafter be trained using the fully trained parametric prediction model 404. More details of training metric prediction model 402 and parameter prediction model are discussed with respect to fig. 6.
As with the embodiment depicted in fig. 4A, metric prediction model 402 is configured to generate predicted metrics for candidate digital components given a selection parameter set of a third-party content request, and parameter prediction model 404 is configured to generate predicted values for unobservable parameters for which actual values cannot be determined directly or indirectly from the request. The parameter prediction model 404 processes the subsets of prediction inputs 408a-408n to generate predicted values 410 of the unobservable parameters. Metric prediction model 402 then processes another subset of the predicted inputs 406a-406n and the predicted inputs based on predicted values 410 of the unobservable parameters to generate prediction metrics 412.
FIG. 5 is a flow diagram of an example process 500 for selecting one or more third-party digital components to return for presentation in an electronic document at a user device in response to a request. Process 500 may be performed by a content distribution system, such as system 110 or 300, using a metric prediction model (e.g., model 326 or 402) and a parametric prediction model (e.g., model 328 or 404).
At stage 502, the system receives a request for a digital component to be incorporated into a presentation of an electronic document (e.g., an electronic interface) at a user device. The request may be a packet data request initiated based on automatic or user input at the user equipment. For example, a user may browse a website that includes a search function that allows the user to search for the website itself, or for items hosted outside of the website, or both. A user may submit a search query through a search interface displayed on a web page to cause the device to submit a search request. The results page to be presented in response to the search may include slots reserved for third party digital components, either as the search results themselves or as supplemental annotations presented with the search results. The search request itself may comprise the third-party content request, or a separate third-party content request may be generated in addition to the search request, such that the third-party content request is sent to the content distribution system separately from the search request sent to the search system.
The third-party content request may include a set of values that at least partially define a context of the request. The values specified in the request may correspond to observable parameters that may be measured, collected, or otherwise observed by the user device 106 at the time the request is generated. For example, the request may specify a value for an observable parameter (such as an identity of a user agent at a user device in which the electronic interface is presented, a geographic location of the user device at the time the request was submitted, a time of day associated with the request, a search query associated with the request, a reference to an electronic document in which the requested digital component is to be presented, a keyword derived from content of the electronic document and/or the search query, or a combination of all or some of these and other parameters). In some implementations, the content distribution system can indirectly derive observable parameters from data specified in the request, even if the request does not directly specify observable parameters.
At stage 506, the distribution system generates a predicted value for the one or more unobservable parameters of the request. An unobservable parameter is typically a parameter that is not specified in the third party digital component request, and for which the actual value of the parameter cannot be indirectly derived from the data specified in the request. The non-observable parameter may be associated with display of the content item. An exemplary unobservable parameter is the display location of the requested third party digital component in the electronic document. It may not be feasible for the user device to efficiently or accurately determine the absolute position (e.g., in terms of coordinates or number of pixels offset from the original position) at which the third-party digital component will actually be displayed in the electronic document when the third-party content request is generated and sent, which may be before the document is fully rendered. However, the display location of the digital third party component may significantly affect how the component is displayed. For example, the display location may affect whether the digital component is effectively displayed. Such an efficient display of the digital component may vary, for example, based on the properties of the device on which the component is to be displayed. In some embodiments, the location may affect the likelihood that the user actually views and interacts with the digital component in the electronic document. In some implementations, the vertical display position may be particularly important. For example, a digital component that is displayed at a prominent location near the top of the document when the document is initially loaded may be more efficiently displayed to the user, and may, for example, be desired to achieve a higher rate of user interaction (e.g., clicking) than if the digital component were displayed at a less prominent location near the bottom of the document (not visible unless the user scrolls to the bottom of the document). As an example, process 500 will be described with respect to a single unobservable parameter, but some implementations of the techniques described herein may predict values for multiple unobservable parameters.
In some embodiments, the system generates predicted values of the unobservable parameters using a parametric prediction model. The parametric prediction model may be a machine learning model, such as an artificial neural network or a support vector machine. As discussed with respect to fig. 4A and 4B, the parametric prediction model may be part of a larger metric prediction model, or it may be implemented as a stand-alone model. Prediction inputs derived from values of the requested first subset of observable parameters may be processed by a parameter prediction model to generate predicted values of the unobservable parameters. For example, to predict the vertical display position of the requested third party component, prediction input representing the identity of the user agent, the screen size or resolution of the user device display, and the planned layout (projected layout) of the electronic document may be processed by a parametric prediction model that makes the prediction. In some implementations, one or more prediction inputs to the parametric prediction model may be derived, at least in part, from distribution parameters associated with the candidate digital component being evaluated. For example, different candidates may have different formats or sizes, which will result in different vertical display positions. In some implementations, the predicted vertical display position can be characterized by the distance of a reference point (e.g., the topmost pixel) in the numeric component from the top of the document or interface in which the item is to be displayed.
At stage 508, the system identifies a set of candidate number components. Candidate digital components may be selected based on items that satisfy one or more qualification criteria of the request. For example, items in an appropriate format and having distribution parameters that meet the required selection criteria may be selected from an index of available third party digital components in response to a request for evaluation as candidates to be returned.
At stage 510, the system selects a particular candidate digital component from the set of candidate digital components for evaluation.
At stage 512, the system may identify a value of a distribution parameter associated with the selected candidate digital component. In some implementations, the distribution parameters of the candidate numeric components include distribution keywords that describe the candidate numeric components (e.g., keywords that describe the subject matter of the item or keywords associated with the product or service represented in the item) and bid amounts of the item (e.g., the amount that can be charged to the creator of the item per click or per 1000 exposures to the item). The distribution parameters may also include information specifying a particular geographic region (e.g., country, state, or city) and/or information specifying that the request originated from a particular type of user device (e.g., mobile device or tablet device) for the digital component to qualify for presentation. The distribution parameters may also specify intrinsic properties of the digital component, such as size, format, and/or type (e.g., text, image, or video) of the digital component.
At stage 514, the system may generate a prediction input to a metric prediction model that maps the prediction input to the prediction metrics of the candidate number components. The prediction input to the metric prediction model may be generated based on actual values of the requested observable parameters, predicted values of the unobservable parameters, values of the distribution parameters of the candidate numerical components, or a combination of these. Some prediction inputs may directly represent specific request or distribution parameters. For example, the first predictive input may represent a keyword specified in the request, and the second predictive input may represent a keyword associated with the candidate number component. In some implementations, a given predictive input is generated based on a plurality of parameters. For example, rather than the model processing separate prediction inputs for the keywords specified in the request and the keywords associated with the candidate numeric components, the metric prediction engine may instead generate a single prediction input that represents, for example, a degree of similarity between the requested keywords and the keywords from the distribution parameters of the candidate numeric components. The metric prediction model may include a portion that processes a second subset of the prediction inputs that is partially or completely different from the prediction inputs that the parametric prediction model processes to generate predicted values of the unobservable parameters.
At stage 516, the system may process the prediction input with a metric prediction model to generate a prediction metric for the candidate digital component. The prediction metric is a value that represents the projected performance of the candidate digital component if selected as a winning term and displayed in the electronic document at the user device. The performance of the digital component may be related to how useful/relevant it is to the user of the user device when presented in the electronic document, or to the user group when presented in an electronic document at a respective user device of the user group. In some embodiments, the usefulness or relevance of a numeric component is measured by its click rate. For example, the third party digital component presented in the electronic document may include a hyperlink function. As a result, when the user selects (e.g., "clicks") a linked digital component in a document, the user device may be redirected to another document (e.g., another website or another interface of a local application) associated with the digital component. Higher user interaction (e.g., click) rates with third party digital components may indicate greater relevance of the terms, and thus are considered higher performance terms. The prediction metric may thus indicate a likelihood that one or more forms of user interaction (e.g., clicks) with the candidate numeric component will occur if the item is returned to the user device and presented in the electronic document. The metric prediction model may be trained on historical data indicating whether the user is interacting with third party components in various contexts characterized by observable request parameters, unobservable request parameters, distribution parameters, or a combination of such parameters. More details regarding training the metric prediction model are described with respect to FIG. 6.
At stage 518, the system determines whether any additional terms remain in the set of candidate digital components for evaluation (e.g., terms for which prediction metrics have not been determined). If additional terms remain, process 500 returns to stage 510 where new candidate number components are selected and evaluated. Stage 510 and 518 are repeated until a termination condition occurs, such as no candidate number components remain for evaluation with respect to the prediction metric.
At stage 520, the system selects one or more winning digital components from the set of candidate digital components. The winning numeric component is selected based on the received request and a predicted value of the one or more unobservable selection parameters of the request. The digital component may be selected based at least in part on a prediction metric of the digital component. In some implementations, the content selection engine scores each of the candidate digital components, ranks the candidate digital components based on their scores, and then selects one or more of the highest ranked candidate digital components as the winning digital component of the request. The score of the digital component may be based exclusively on the prediction metric, or may be based on a number of factors including the prediction metric. In some embodiments, the score of the candidate digital component is a function of the predictive metric of the candidate digital component, the bid amount of the candidate digital component, and optionally one or more additional factors. A numerical component with higher performance and a higher bid amount may be more likely to be selected as winning content than other items with lower performance scores or bid amounts.
At stage 522, the content distribution system provides data to the user device, where the data enables and optionally causes the user device to present the winning digital component in the presentation of the electronic document. In some implementations, the content distribution system itself can store the digital components on behalf of third-party content providers, and can send the winning items directly to the user device. In other implementations, the content distribution system may return instructions to the user device to access the winning third-party content at one or more specified addresses of the content stored at the third-party content server. In still other implementations, the content distribution system may instruct the independent third-party content server to deliver the winning third-party content to the user device.
In some implementations, the system can be adapted to return a digital component that is presented via a digital assistant device (e.g., a device without a display that relies primarily on verbal interaction with a user to receive queries/commands/instructions and output responses to the user). In these implementations, the digital component may be audibly presented by the digital assistant device, for example, through one or more speakers of the device. For example, a user may provide a spoken input representing a voice query to a digital assistant device. The device may communicate to the content distribution system an audio or textual representation of the spoken input/voice query, as well as context data indicative of one or more observed selection parameters of the voice query request (e.g., a user identifier, a time of day, a previous query in a voice session). The digital assistant device may use all or some of the observed selection parameters to predict unobservable (e.g., potential) parameters, and may use the observed and predicted parameter values to evaluate candidate digital components and select one or more digital components to be returned to the digital assistant device.
FIG. 6 is a flow diagram of an example process 600 for training metric and parametric prediction models. In this example, the parametric prediction model is embedded in the metric prediction model, and the models are jointly trained. Process 600 may be performed by a system of training computing systems (e.g., one or more computers at one or more locations). The metric and parametric prediction models that are the subject of training herein may be the metric prediction models 326 and 402 and the parametric prediction models 328 and 404 previously described. In this example, the metric prediction model and the parametric prediction model are neural network machine learning models.
At stage 602, the system obtains a set of training samples. The training samples may each include a set of predicted inputs and a target user action. In some implementations, the training samples represent historical instances of the served third-party digital content. The prediction input may characterize, for example, selection parameters associated with a third-party content request, distribution parameters associated with a digital component selected as a winning item in response to the request and returned for display in the electronic document, or a combination of these. The target user action indicates whether the user interacted with (e.g., clicked on) the third-party component in the display of the electronic document.
The prediction input in each training sample may comprise a common set of prediction inputs present in all or most training samples. These common prediction inputs may characterize the request and/or distribution parameters that are easily collected and recorded in the service log. For example, the common prediction input may characterize the requested observable parameter, but may exclude unobservable parameters that require additional instrumentation to determine and may be computationally difficult or expensive to obtain. However, a small portion of the training samples may further include "scarce" prediction inputs characterized by parameters that are only available for a portion (e.g., a small portion, such as 1-3%) of the historical context of the served content. In some implementations, the scarce predictive input may correspond to an unobservable parameter, such as a vertical display position of a third-party digital component in the electronic document. For example, over a period of time, for each instance of the third-party content selection process, the content distribution system may historically anonymize and record the unobservable request parameters and distribution parameters of the winning third-party content requested. Common prediction inputs in the training samples can be derived from the recorded data. Further, for one percent of traffic, for example, the user device may be configured to report a scarcity parameter, such as the actual vertical display position, to an analytics server of the content distribution system. In these examples, the training samples may further include prediction inputs representing sparse parameters that are not available in most other samples.
At stage 604, the system initializes a training state for the metric prediction model and the parameter prediction submodel. The training state of a neural network, such as a metric prediction model or a parametric predictor model, represents the current values of internal parameters of the network, such as weights of neurons in one or more hidden layers of the network. The state of the network may be initialized with random values and then iteratively updated during the training process 600 described herein. Stages 606-626 describe the operation of a single training iteration (cycle) for a particular training sample, but these stages 606-626 may be repeated in additional training iterations for additional training samples until the training termination condition is met. For example, training may stop after a predetermined number of training iterations, after the verification model has reached one or more performance criteria, and/or after all training samples have been processed.
At stage 608, the system determines whether the training samples include a scarce prediction input.
If the training samples do not include actual sparse prediction inputs, process 600 proceeds from stage 608 to stage 612 and a first subset of the common prediction inputs are processed by the parameter predictor model according to its current state to predict the sparse prediction inputs. At stage 614, the metric prediction model then processes the second subset of common prediction inputs and the predicted sparse prediction inputs according to the current state of the model to generate a predicted user action for the digital component corresponding to the current training sample. For example, the parametric predictor model may process a first subset of the common prediction inputs to predict vertical display positions of digital components in the electronic document, and then the metric prediction model may process other prediction inputs and the predicted vertical display positions to generate predicted user actions. The predicted user interaction may be a score representing a likelihood that the user will interact with (e.g., click on) the digital component given the conditions indicated by the prediction input.
If the training sample does include actual sparse prediction inputs, the process proceeds from stage 608 to stage 610 where the metric prediction model processes all prediction inputs, including both common prediction inputs and actual sparse prediction inputs, to generate a score for the predicted user action.
At stage 616, the system determines a first output error between the predicted user action and the target user action of the training sample based on the loss function. At stage 618, the system then updates the current state of the metric-prediction model based on the first output error. Updating the current state of the model may include adjusting weights of neurons in the neural network so as to minimize the first output error. In some embodiments, the training system uses machine learning techniques such as stochastic gradient descent with back propagation to adjust the current values of the internal parameters of the neural network and optimize the loss function. However, to prevent the first output error between the predicted user action and the target user action from affecting the parameter predictor model, the training system may implement a stopping gradient that isolates the parameter predictor model from the rest of the metric prediction model. Thus, when the error propagates back through the neural network of the metric prediction model, the error does not result in a modification of the current state of the parameter prediction submodel.
In contrast, in some embodiments, the training system may update the state of the parameter predictor models only during training iterations for which the training samples include actual, scarce prediction inputs. In this case, process 600 may branch further to stage 622 after stage 610. At stage 622, the system processes the first subset of prediction inputs using the parametric predictor model and generates prediction values for the scarce prediction inputs. At stage 624, the system determines a second output error between the actual scarce prediction input and the predicted scarce prediction input. At stage 626, the system then updates the current state of the parameter predictor sub-model based on the second output error. In some embodiments, the training system adjusts the current values of the internal parameters of the portion of the metric-predictive neural network corresponding to the parameter-predictor model using a machine learning technique, such as stochastic gradient descent with back propagation, in order to optimize the loss function and minimize the second output error.
Fig. 7 illustrates an example of a computing device 700 and a mobile computing device that may be used to implement the techniques described herein. Computing device 1000 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Mobile computing devices are intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
The memory 704 stores information within the computing device 700. In some implementations, the memory 704 is a volatile memory unit or units. In some implementations, the memory 704 is a non-volatile memory unit or units. The memory 704 may also be another form of computer-readable medium, such as a magnetic or optical disk.
The storage device 706 is capable of providing mass storage for the computing device 700. In some implementations, the storage device 706 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state storage device, or an array of devices including devices in a storage area network or other configurations. The computer program product may also contain instructions that, when executed, perform one or more methods, such as the methods described above. The computer program product may be tangibly embodied in a computer or machine-readable medium, such as the memory 704, the storage device 706, or memory on the processor 702.
The high-speed interface 708 manages ultra-wideband (wideband-intensive) operation of the computing device 700, while the low-speed interface 712 manages lower ultra-wideband operation. Such allocation of functions is exemplary only. In some implementations, the high-speed interface 708 is coupled to the memory 704, the display 716 (e.g., through a graphics processor or accelerator), and high-speed expansion ports 710, which may receive various expansion cards (not shown). In an embodiment, low-speed interface 712 is coupled to storage device 706 and low-speed expansion port 714. The low-speed expansion port, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a network device such as a switch or router, for example, through a network adapter.
The computing device 700 may be implemented in a number of different forms, as shown. For example, it may be implemented as a standard server 720, or multiple times in a group of such servers. Further, it may be implemented in a personal computer such as a laptop computer 722. It may also be implemented as part of a rack server system 724. Alternatively, components from computing device 700 may be combined with other components in a mobile device (not shown), such as mobile computing device 750. Each of such devices may contain one or more of computing device 700 and mobile computing device 750, and an entire system may be made up of multiple computing devices in communication with each other.
The mobile computing device 750 includes a processor 752, a memory 764, an input/output device such as a display 754, a communication interface 766, and a transceiver 768, among other components. The mobile computing device 750 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of the processor 752, the memory 764, the display 754, the communication interface 766, and the transceiver 768, are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
The processor 752 can execute instructions within the mobile computing device 750, including instructions stored in the memory 764. The processor 752 may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor 752 may provide, for example, for coordination of the other components of the mobile computing device 750, such as control of user interfaces, applications run by the mobile computing device 750, and wireless communication by the mobile computing device 750.
The memory 764 stores information within the mobile computing device 750. The memory 764 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units. Expansion Memory 774 may also be provided and connected to mobile computing device 750 through expansion interface 772, which may include, for example, a SIMM (Single In Line Memory Module) card interface. Such expansion memory 774 may provide additional storage space for mobile computing device 750, or may also store applications or other information for mobile computing device 750. Specifically, expansion memory 774 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory 774 may be provided as a security module for mobile computing device 750, and may be programmed with instructions that permit secure use of mobile computing device 750. In addition, secure applications may be provided via the SIMM card, as well as additional information, such as placing identification information on the SIMM card in a non-hackable manner.
The Memory may include, for example, flash Memory and/or NVRAM Memory (Non-Volatile random access Memory), as discussed below. The computer program product contains instructions which, when executed, perform one or more methods, such as the methods described above. The computer program product may be a computer-or machine-readable medium, such as the memory 764, expansion memory 774, or memory on processor 752. In some implementations, the computer program product may be received in a propagated signal, for example, via transceiver 768 or external interface 762.
The mobile computing device 750 may communicate wirelessly through the communication interface 766, which may include digital signal processing circuitry if necessary. Communication interface 766 may provide communication under various modes or protocols, such as GSM voice calls (Global System for mobile communications), SMS (Short Message Service), EMS (Enhanced Messaging Service), or MMS messages (Multimedia Messaging Service), CDMA (Code Division Multiple Access), TDMA (Time Division Multiple Access), PDC (Personal Digital cell), WCDMA (Wideband Code Division Multiple Access), CDMA2000, or GPRS (General Packet Radio Service), among others. Such communication may occur through transceiver 768, for example, using radio frequencies. Further, short-range communication may occur, such as using a bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 770 may provide additional navigation-related and location-related wireless data to mobile computing device 750, which may be used as appropriate by applications running on mobile computing device 750.
The mobile computing device 750 may also communicate audibly using an audio codec 760 that may receive spoken information from a user and convert it into usable digital information. Audio codec 760 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 750. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.), and may also include sound generated by applications running on the mobile computing device 750.
The mobile computing device 750 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 780. It may also be implemented as part of a smartphone 782, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, Integrated circuitry, specially designed ASICs (Application Specific Integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and may be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms machine-readable medium and computer-readable medium refer to any computer program product, apparatus and/or Device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a Programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term machine-readable signal refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a Display device (e.g., a CRT (Cathode Ray Tube) or LCD (Liquid Crystal Display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, verbal, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a Local Area Network (LAN), a Wide Area Network (WAN), and the internet.
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Where systems, methods, devices, and other techniques herein collect or may make use of personal information about a user, the user may be provided with an opportunity to control whether programs or features collect user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location), or whether and/or how to receive content from a content server that may be more relevant to the user. In addition, certain data may be processed in one or more ways before it is stored or used in order to remove personally identifiable information. For example, the identity of the user may be processed so that no personal identity information can be determined for the user, or the geographic location of the user where the location information is obtained (such as city, ZIP code, or state level) may be summarized so that no particular location of the user can be determined. Thus, the user may control how information about the user is collected and used by the content server.
Although various embodiments have been described in detail above, other modifications are possible. Moreover, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems. Accordingly, other implementations are within the scope of the following claims.
Claims (31)
1. A computer-implemented method, comprising:
receiving, by a computing system, a request for a digital component to be presented in an electronic interface at a user device;
determining a context for the request, the context indicating an actual value of an observable parameter for the request;
generating a predicted value for the requested unobservable parameter based on actual values for a first subset of the requested observable parameters;
generating one or more numerical components based on a predicted value of the requested unobservable parameter and a context indicative of actual values of a second subset of the requested observable parameters; and
data is provided to the user device to cause the user device to present the one or more digital components in the electronic interface.
2. The method of claim 1, wherein the requested unobservable parameter represents a vertical display position of the requested numeric component in an electronic interface at the user device.
3. The method of claim 1 or 2, wherein generating one or more digital components comprises:
identifying a set of candidate number components; and
one or more digital components are selected from the set of candidate digital components.
4. The method of claim 3, further comprising:
for each candidate digital component in the set of candidate digital components, determining a predicted likelihood that a user interaction with the candidate digital component will occur if the candidate digital component is returned to the user device in response to the request;
wherein selecting one or more digital components from the set of candidate digital components is based on the predicted likelihood.
5. The method of claim 4, wherein determining a predicted likelihood comprises:
(i) generating a predicted value of the requested unobservable parameter based on the actual values of the first subset of the requested observable parameters, an
(ii) Generating the predicted likelihood of user interaction with the candidate digital component based on the predicted value.
6. The method of any preceding claim, wherein the performance prediction engine is further configured to:
(i) generating a prediction input for a performance prediction model based on a predicted value of the requested unobservable parameter, an actual value of the requested at least first observable parameter, and a value of the at least first distribution parameter of the candidate number components, an
(ii) The prediction input is processed with a performance prediction model to determine predicted performance metrics for the candidate digital components.
7. The method of claim 6, wherein the performance prediction engine is further configured to: generating a prediction value for the requested unobservable parameter using an unobservable parameter prediction model,
wherein an unobservable parameter prediction model is part of the performance prediction model, the unobservable parameter prediction model generating a predicted value of the requested unobservable parameter for use as one of the prediction inputs to the performance prediction model before the predicted performance metric is determined.
8. A method according to any preceding claim, wherein, for each candidate digital component among at least some of the set of candidate digital components identified in the digital content database, the predicted performance metric of the candidate digital component is indicative of a predicted click-through rate ("CTR") of the candidate digital component.
9. The method of any preceding claim, wherein:
the requested set of observable parameters includes parameters indicative of at least one of: an identity of a user agent at a user device in which the electronic interface is presented, a geographic location associated with the request, a time of day associated with the request, a search query associated with the request or keywords derived from the search query, or an identity of the electronic interface in which the requested digital component is to be presented, and
the first distribution parameter associated with a given candidate numeric component is a keyword associated with the candidate numeric component or a bid amount associated with the candidate numeric component.
10. A computing system, comprising:
one or more computers; and
one or more computer-readable media having instructions stored thereon that, when executed by one or more computers, cause the one or more computers to implement the method of any preceding claim.
11. A computing system, comprising:
one or more computers; and
one or more computer-readable media having instructions stored thereon that, when executed by one or more computers, cause the one or more computers to perform:
a front-end interface configured to receive a request for a numeric component to be presented in an electronic interface at a user device, the request indicating actual values of a set of observable parameters of the request that represent context of the request;
a digital component database storing data identifying a set of candidate digital components and a value of a distribution parameter for each candidate digital component;
a metric prediction engine configured to generate, for each candidate digital component of at least some of the set of candidate digital components identified in the digital component database, a prediction metric indicating a likelihood that user interaction with the candidate digital component will occur if the candidate digital content time is returned to the user device in response to the request,
wherein the prediction metric is generated based on: (i) a predicted value of the requested unobservable parameter, (ii) an actual value of at least a first observable parameter of the request from the requested set of observable parameters, and (iii) a value of at least a first distribution parameter of the candidate numerical component,
wherein the predicted value of the requested unobservable parameter is generated based on an actual value of a second observable parameter of the request from the set of observable parameters of the request; and
a content selection engine configured to select one or more digital components to be returned to the user device in response to the request based on the predicted metrics of the one or more digital components,
wherein the front-end interface is further configured to provide data to the user device to cause the user device to present the one or more digital components in the electronic interface.
12. The computing system of claim 11, wherein the requested unobservable parameter represents a vertical display position of the requested numeric component in an electronic interface at the user device.
13. The computing system of claim 11, wherein the metric prediction engine is further configured to:
(i) generating a prediction input of a metric prediction model based on a predicted value of the requested unobservable parameter, an actual value of the requested at least first observable parameter, and a value of the at least first distribution parameter of the candidate number component, an
(ii) The prediction input is processed with a prediction model to determine a prediction metric for the candidate digital component.
14. The computing system of claim 13, wherein the metric prediction engine is further configured to generate a predicted value of the requested unobservable parameter using an unobservable parameter prediction model,
wherein an unobservable parameter prediction model is part of the metric prediction model that generates a predicted value of the requested unobservable parameter for use as one of the prediction inputs to the prediction model before the prediction metric is determined.
15. The computing system of claim 11, wherein, for each candidate digital component among at least some of the set of candidate digital components identified in the digital component database, the prediction metric for the candidate digital component indicates a predicted click rate ("CTR") for the candidate digital component.
16. The computing system of claim 11, wherein:
the requested set of observable parameters includes parameters indicative of at least one of: an identity of a user agent at a user device in which the electronic interface is presented, a geographic location associated with the request, a time of day associated with the request, a search query associated with the request or keywords derived from the search query, or an identity of the electronic interface in which the requested digital component is to be presented, and
the first distribution parameter associated with a given candidate numeric component is a keyword associated with the candidate numeric component or a bid amount associated with the candidate numeric component.
17. A computer-implemented method, comprising:
receiving, by a computing system, a request for a digital component to be presented in an electronic interface at a user device;
determining a context for the request, the context indicating an actual value of an observable parameter for the request;
identifying a set of candidate number components;
for each candidate digital component in the set of candidate digital components, determining a predicted likelihood that a user interaction with the candidate digital component will occur if the candidate digital component is returned to the user device in response to the request, wherein determining the predicted likelihood comprises:
(i) generating a predicted value of the requested unobservable parameter based on the actual values of the first subset of the requested observable parameters, an
(ii) Generating a predicted likelihood of user interaction with a candidate digital component based on a predicted value of the requested unobservable parameter, an actual value of a second subset of the requested observable parameters, and values of one or more distribution parameters associated with the candidate digital component;
selecting one or more digital components from a set of candidate digital components based on a predicted likelihood of user interaction with the one or more digital components; and
data is provided to the user device to cause the user device to present the one or more digital components in the electronic interface.
18. The computer-implemented method of claim 17, wherein the requested unobservable parameter represents a display location of the requested digital component in an electronic interface at the user device.
19. The computer-implemented method of claim 18, wherein the display position indicates a vertical position of the requested digital component in an electronic interface at the user device.
20. The computer-implemented method of claim 17, wherein determining the context of the request comprises parsing the request to extract actual values of observable parameters of the request from content of the request.
21. The computer-implemented method of claim 17, wherein determining a predicted likelihood of user interaction with the candidate digital component comprises processing a prediction input with a metric prediction model to generate a predicted likelihood, wherein the prediction input is derived from a predicted value of the requested unobservable parameter, actual values of the second subset of the requested observable parameters, and values of one or more distribution parameters associated with the candidate digital component.
22. The computer-implemented method of claim 21, wherein generating predicted values of the requested unobservable parameters comprises processing second prediction inputs with an unobservable parameter prediction model that is different from at least a first portion of the metric prediction model, wherein the second prediction inputs are derived from actual values of the first subset of the requested observable parameters.
23. The computer-implemented method of claim 22, wherein the unobservable parameter prediction model is a second part of the metric prediction model, wherein the unobservable parameter prediction model and the metric prediction model are jointly trained.
24. The computer-implemented method of claim 22, wherein the unobservable parameter prediction model is completely different from the metric prediction model, wherein the unobservable parameter prediction model and the metric prediction model are trained separately.
25. The computer-implemented method of claim 21, wherein the metric prediction model and the metric prediction model are machine learning models.
26. The computer-implemented method of claim 17, wherein:
the electronic interface is a web page or application interface presented at the user device, and
the digital component is a third party media item distributed on behalf of a third party other than the publisher or developer of the web page or application interface.
27. The computer-implemented method of claim 17, wherein the predicted likelihood of user interaction with the candidate numeric component represents a predicted click rate ("CTR") of the candidate numeric component.
28. The computer-implemented method of claim 17, wherein the requested observable parameters include at least one of: an identity of a user agent at a user device in which the electronic interface is presented, a geographic location associated with the request, a time of day associated with the request, a search query associated with the request or a keyword derived from the search query, or an identity of the electronic interface in which the requested digital component is to be presented.
29. The computer-implemented method of claim 28, wherein the requested observable parameter includes an identity of the electronic interface in which the requested numeric component is to be presented, wherein the identity of the electronic interface is represented by an address of a web page or web site providing the electronic interface.
30. The computer-implemented method of claim 17, wherein the distribution parameters associated with each of at least some of the set of candidate numeric components include at least one of a keyword associated with the candidate numeric component or a bid amount associated with the candidate numeric component.
31. A computing system, comprising:
one or more processors; and
one or more computer-readable media having instructions stored thereon that, when executed by one or more processors, cause the one or more processors to perform operations comprising:
receiving a request for a digital component to be presented in an electronic interface at a user device;
determining a context for the request, the context indicating an actual value of an observable parameter for the request;
identifying a set of candidate number components;
for each candidate digital component in the set of candidate digital components, determining a predicted likelihood that a user interaction with the candidate digital component will occur if the candidate digital component is returned to the user device in response to the request, wherein determining the predicted likelihood comprises:
(i) generating a predicted value of the requested unobservable parameter based on the actual values of the first subset of the requested observable parameters, an
(ii) Generating a predicted likelihood of user interaction with a candidate digital component based on a predicted value of the requested unobservable parameter, an actual value of a second subset of the requested observable parameters, and values of one or more distribution parameters associated with the candidate digital component;
selecting one or more digital components from a set of candidate digital components based on a predicted likelihood of user interaction with the one or more digital components; and
data is provided to the user device to cause the user device to present the one or more digital components in the electronic interface.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762557655P | 2017-09-12 | 2017-09-12 | |
US62/557,655 | 2017-09-12 | ||
PCT/US2018/050652 WO2019055506A1 (en) | 2017-09-12 | 2018-09-12 | Predicting non-observable parameters for digital components |
Publications (1)
Publication Number | Publication Date |
---|---|
CN110692054A true CN110692054A (en) | 2020-01-14 |
Family
ID=63794630
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880035900.6A Pending CN110692054A (en) | 2017-09-12 | 2018-09-12 | Predicting unobservable parameters of digital components |
Country Status (4)
Country | Link |
---|---|
US (1) | US20190080019A1 (en) |
EP (1) | EP3682346A1 (en) |
CN (1) | CN110692054A (en) |
WO (1) | WO2019055506A1 (en) |
Families Citing this family (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10733262B2 (en) | 2017-10-05 | 2020-08-04 | Adobe Inc. | Attribute control for updating digital content in a digital medium environment |
US10657118B2 (en) | 2017-10-05 | 2020-05-19 | Adobe Inc. | Update basis for updating digital content in a digital medium environment |
US11551257B2 (en) | 2017-10-12 | 2023-01-10 | Adobe Inc. | Digital media environment for analysis of audience segments in a digital marketing campaign |
US10685375B2 (en) | 2017-10-12 | 2020-06-16 | Adobe Inc. | Digital media environment for analysis of components of content in a digital marketing campaign |
US10795647B2 (en) | 2017-10-16 | 2020-10-06 | Adobe, Inc. | Application digital content control using an embedded machine learning module |
US11544743B2 (en) | 2017-10-16 | 2023-01-03 | Adobe Inc. | Digital content control based on shared machine learning properties |
US10991012B2 (en) * | 2017-11-01 | 2021-04-27 | Adobe Inc. | Creative brief-based content creation |
US10853766B2 (en) | 2017-11-01 | 2020-12-01 | Adobe Inc. | Creative brief schema |
US10671798B2 (en) * | 2018-02-01 | 2020-06-02 | Google Llc | Digital component backdrop rendering |
US10957307B2 (en) * | 2019-03-28 | 2021-03-23 | Microsoft Technology Licensing, Llc | Modular language model adaptation |
US11526736B2 (en) * | 2019-08-15 | 2022-12-13 | Intel Corporation | Methods, systems, articles of manufacture and apparatus to map workloads |
US11394732B1 (en) * | 2019-09-10 | 2022-07-19 | NortonLifeLock Inc. | Systems and methods for adaptively managing data drift in a classifier |
US20240143345A1 (en) * | 2019-12-23 | 2024-05-02 | Myplanet Internet Solutions Ltd | Method and system for recognizing user intent and updating a graphical user interface |
US11593819B2 (en) * | 2021-06-09 | 2023-02-28 | Maplebear Inc. | Training a model to predict likelihoods of users performing an action after being presented with a content item |
US11829239B2 (en) | 2021-11-17 | 2023-11-28 | Adobe Inc. | Managing machine learning model reconstruction |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030149937A1 (en) * | 1999-04-02 | 2003-08-07 | Overture Services, Inc. | Method and system for optimum placement of advertisements on a webpage |
US20140068011A1 (en) * | 2012-08-29 | 2014-03-06 | Google Inc. | Predicting content performance with interest data |
US9367524B1 (en) * | 2012-06-06 | 2016-06-14 | Google, Inc. | Systems and methods for selecting web page layouts including content slots for displaying content items based on predicted click likelihood |
EP3121772A1 (en) * | 2015-07-20 | 2017-01-25 | Accenture Global Services Limited | Common data repository for improving transactional efficiencies across one or more communication channels |
US20170098239A1 (en) * | 2015-10-02 | 2017-04-06 | Adobe Systems Incorporated | Prediction of content performance in content delivery based on presentation context |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080086368A1 (en) * | 2006-10-05 | 2008-04-10 | Google Inc. | Location Based, Content Targeted Online Advertising |
WO2018036493A1 (en) * | 2016-08-25 | 2018-03-01 | 腾讯科技（深圳）有限公司 | Information processing method and apparatus, display terminal, and storage medium |
US10575033B2 (en) * | 2017-09-05 | 2020-02-25 | Adobe Inc. | Injecting targeted ads into videos |
-
2018
- 2018-09-12 EP EP18783197.9A patent/EP3682346A1/en active Pending
- 2018-09-12 US US16/129,154 patent/US20190080019A1/en active Pending
- 2018-09-12 CN CN201880035900.6A patent/CN110692054A/en active Pending
- 2018-09-12 WO PCT/US2018/050652 patent/WO2019055506A1/en active Search and Examination
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030149937A1 (en) * | 1999-04-02 | 2003-08-07 | Overture Services, Inc. | Method and system for optimum placement of advertisements on a webpage |
US9367524B1 (en) * | 2012-06-06 | 2016-06-14 | Google, Inc. | Systems and methods for selecting web page layouts including content slots for displaying content items based on predicted click likelihood |
US20140068011A1 (en) * | 2012-08-29 | 2014-03-06 | Google Inc. | Predicting content performance with interest data |
EP3121772A1 (en) * | 2015-07-20 | 2017-01-25 | Accenture Global Services Limited | Common data repository for improving transactional efficiencies across one or more communication channels |
US20170098239A1 (en) * | 2015-10-02 | 2017-04-06 | Adobe Systems Incorporated | Prediction of content performance in content delivery based on presentation context |
Also Published As
Publication number | Publication date |
---|---|
WO2019055506A1 (en) | 2019-03-21 |
US20190080019A1 (en) | 2019-03-14 |
EP3682346A1 (en) | 2020-07-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN110692054A (en) | Predicting unobservable parameters of digital components | |
US10445753B1 (en) | Determining popular and trending content characteristics | |
US10977056B2 (en) | System for utilizing one or more data sources to generate a customized interface | |
US20120265607A1 (en) | Click-to-reveal content | |
JP2019536172A (en) | Retrieving and retrieving keyed data that is maintained using a keyed database | |
US10025933B2 (en) | System for utilizing one or more data sources to generate a customized set of operations | |
US10289748B2 (en) | Optimizing transmission of digital components | |
US11586684B2 (en) | Serving multiple content items responsive to a single request | |
WO2014200627A1 (en) | Systems and methods for selecting and serving content items based on view probability | |
US20180033051A1 (en) | Interest based delivery system and method in a content recommendation network | |
US11397737B2 (en) | Triggering local extensions based on inferred intent | |
JP6557357B2 (en) | Device-based filtering of content items associated with mobile applications | |
US10958747B2 (en) | Digital component transmission | |
CN108781223B (en) | System, method, and medium for providing third-party content | |
US9922340B1 (en) | Evaluating attribution models based on simulated activity streams | |
JP6617193B2 (en) | Optimized digital component analysis system | |
WO2013016869A1 (en) | Delivery of two-way interactive content | |
WO2023191811A1 (en) | Transfer machine learning for attribute prediction | |
US20190335019A1 (en) | Damping transmission requirement variations | |
US20170085672A1 (en) | Commercial-Interest-Weighted User Profiles | |
JP7223164B2 (en) | Data integrity optimization | |
US20240005040A1 (en) | Cardinality models for privacy-sensitive assessment of digital component transmission reach | |
RU2805513C1 (en) | Method and server for sending targeted message to user's electronic device | |
US10810349B1 (en) | Predicting expansion directions for expandable content item environments | |
US20200342497A1 (en) | Method of and server for transmitting targeted message to user electronic device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
WO2016036851A1 - Method and system for determining edit rules for rewriting phrases - Google Patents
Method and system for determining edit rules for rewriting phrases Download PDFInfo
- Publication number
- WO2016036851A1 WO2016036851A1 PCT/US2015/048131 US2015048131W WO2016036851A1 WO 2016036851 A1 WO2016036851 A1 WO 2016036851A1 US 2015048131 W US2015048131 W US 2015048131W WO 2016036851 A1 WO2016036851 A1 WO 2016036851A1
- Authority
- WO
- WIPO (PCT)
- Prior art keywords
- edit
- phrase
- phrases
- post
- rule
- Prior art date
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/253—Grammatical analysis; Style critique
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/169—Annotation, e.g. comment data or footnotes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/205—Parsing
- G06F40/221—Parsing markup language streams
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/237—Lexical tools
- G06F40/242—Dictionaries
Definitions
- a user may enter text in one or more applications and be provided with one or more rewrites of the text by the one or more applications.
- the provided rewrites may be based on one or more terms in the text a nd may provide the user with options that may be selected to replace the text. For example, a user may be provided with one or more terms to replace a misspelled term that has been entered by the user.
- the present disclosure generally pertains to technical features related to
- the edit rules may be determined based on identified edits of phrases by users in a plurality of documents. Some implementations are directed to identifying a large qua ntity of user edits in documents, wherein each of the user edits indicates a change from a pre-edit phrase to a post-edit phrase (e.g., an edit of phrase "A" to phrase "B"). Edit rules may then be determined based on the pre-edit a nd post-edit phrases of the identified edits a nd the edit rules may be stored for later utilization. As one example, the identified edits may include a large number of edits from phrase "A" to phrase "B” and a la rge number of edits from phrase "A" to phrase "C”.
- an edit rule may be determined that associates phrase "A" with phrase "B” and/or phrase “C”.
- the edit rule may be stored and utilized to determine, for a future phrase conforming to phrase "A", one or more rephrasings of the future phrase based on phrase "B” and/or phrase "C".
- the rephrasings may be utilized for various purposes such as presenting the rephrasings to a user as candidate rephrasings for the future phrase, a utomatically rewriting the future phrase, etc.
- the identified user edits in documents may include, or be restricted to, edits in documents that have at least a threshold maturity level.
- those user edits from documents that have at least a threshold maturity level may be given a greater weight in determining edit rules than those user edits from documents that do not have at least a threshold maturity level.
- a document maturity level generally indicates the completeness of the document and identifying edits from documents with at least a threshold maturity level may help avoid utilizing early and potentially less useful edits of users in determining edit rules.
- Various techniques may be utilized to determine a document maturity level.
- a document maturity level may be determined based on identifying that at least a threshold amount of time has elapsed since creation of the document, identifying at least a threshold time period since the document has last been modified (i.e., identifying a "break" by a user), identifying that the document editor has changed from one user to a second user, and/or identifying that the document has been emailed, published, or otherwise provided to one or more additional users.
- An edit rule determined based on identified edits generally indicates one or more edits or rephrases that have been utilized by users to change a first phrase to one or more second phrases.
- the second phrases may represent, for example: one or more corrections to grammatical issues with the first phrase, a n improvement in clarity with respect to the first phrase, a condensed or expanded version of the first phrase, a nd/or a n im provement in quality to the first phrase.
- an edit rule may define an explicit
- an edit rule may define one or more characteristics associated with a pre-edit phrase a nd/or one or more post-edit phrases.
- an edit rule may include one or more categories of terms in the pre-edit phrase and/or post-edit phrase(s) of the edit rule.
- a set of user edits may be determined that includes pre-edit phrases with the format "[noun] are [adjective]” and with post-edit phrases with the format "[plural noun] are [adjective].”
- the identified edits may include one or more pre-edit phrases of the format "[noun] are [adjective]” and post-edit phrases of the format "[noun] is [adjective].”
- weights of the two post-edit phrase formats may be determined based on counts of edits of each type.
- a set of edits may be determined that have pre-edit phrases conforming to the format "[noun] are [adjective]," such as a set of edits that includes Edit 1 of "The cat are cute” to "The cats are cute,” Edit 2 of "Dog are loyal” to “Dogs are loyal,” and Edit 3 of "Bob are smart” to "Bob is smart.”
- An edit rule may be determined from the set of edits for pre-edit phrases of the subset of the format "[noun] are [adjective];” and an edit rule may be determined that has a post-edit phrase of "[noun] are [adjective]," with an edit weight of .6667 for edits to "[plural noun] are [adjective]” and an edit weight of .3333 for edits to "[noun] is [adjective].”
- edit rules may be determined based on user edits that conform to one or more attributes and may be associated with those attributes ( e.g., for more prominent future use in rephrasing in situations where one or more of those attributes are present). For example, a n edit rule may be determined that is specific to a type of document and it may be utilized only for determining candidate rephrasings for other documents of that type and/or candidate rephrasings generated on that edit rule may be favored for other documents of that type. For instance, edits from documents that are patent applications may be identified and one or more edit rules may be determined that are a pplicable to other documents that are patent applications but that may not be applicable to other documents that are personal letters.
- an edit rule may be determined that is specific to a group of users having one or more shared or similar attributes. For example, an edit rule may be determined from edits of a group of users in a geographic region a nd the edit rule may not be a pplied to future documents associated with users in a second geographic region or rephrasings generated based on the edit rule may be given less favorable treatment for future documents associated with users in the second region (e.g., due to regional colloquialisms, regional differences in word usage, different la nguages).
- ranking and/or scoring edit rules may facilitate increased use of edit rules deemed effective, and culling of less-effective edit rules. Having fewer, more effective edit rules may ease the burden on computing systems that apply edit rules, saving computing resources such as memory and/or processing cycles.
- a computer implemented method includes: identifying, from at least one database, edits from a plurality of users, wherein each of the edits identifies one of a plurality of pre-edit phrases and an associated one of a plurality of post-edit phrases and each of a plurality of the edits is based on a user implemented change of the one of the pre-edit phrases to the one of the post-edit phrases in one of a plurality of mature documents; determining an edit rule pre-edit phrase based on a set of one or more of the pre-edit phrases identified by the edits; determining one or more edit rule post-edit phrases based on one or more of the post-edit phrases associated with the set of the one or more pre-edit phrases; defining an edit rule that associates the edit rule pre-edit phrase with the edit rule post-edit phrases; and storing the edit rule for automatically determining, for a future phrase conforming to the edit rule pre-edit phrase, a rephrasing of the future phrase based on
- At least one document of the mature documents may be identified as mature based on at least one of: a creation time of the document; an amount of time since the document was last modified; and a user associated with the document. In some of those instances, the document may be identified as mature if the user is not the creator of the document.
- the method may further include determining a given edit of the edits and storing the given edit in the database.
- the given edit may be from a given document of the mature documents and the method may further include: determining the given document is mature, wherein determining the given edit may be based on determining the given document is mature. Determining the given document is mature may based on at least one of: a creation time of the document; an amount of time since the document was last modified; and a user associated with the document.
- the method may further include: determining the set of the one or more of the pre- edit phrases based on at least one characteristic associated with each of the pre-edit phrases of the set.
- the characteristic may indicate a purpose for the mature documents on which the pre-edit phrases of the set are based.
- the characteristic may indicative of one or more attributes of users associated with the documents on which the pre- edit phrases of the set are based.
- Determining the one or more edit rule post-edit phrases may include: identifying a first post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; determining a first count of associations of the first post-edit phrase with the one or more pre-edit phrases of the set; and based on the first count of associations satisfying a threshold, determining at least one of the edit rule post-edit phrases based on the first post- edit phrase.
- the threshold may be a fixed threshold.
- the method may further include: identifying a second post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; and determining a second count of associations of the second post-edit phrase with the one or more pre-edit phrases of the set, wherein the threshold is based on the second count of associations.
- the method may further include: identifying a first post-edit phrase and a second post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; determining a first edit rule post-edit phrase of the edit rule post-edit phrases based on the first post-edit phrase; and determining a second edit rule post-edit phrase of the edit rule post-edit phrases based on the second post-edit phrase.
- the method may further include: determining a first count of associations of the first post-edit phrase with the one or more pre-edit phrases of the set; and determining a second count of associations of the second post-edit phrase with the one or more pre-edit phrases of the set, and wherein defining the edit rule includes: defining a first association of the edit rule pre-edit phrase with the first edit rule post-edit phrase and assigning a first weight to the first association, the first weight determined based on the first count of associations; and defining a second association of the edit rule pre-edit phrase with the second edit rule post-edit phrase and assigning a second weight to the second association, the second weight determined based on the second count of associations.
- the method may further include: identifying a first post-edit phrase associated with the set of one or more pre-edit phrases; determining a first edit rule post-edit phrase of the edit rule post-edit phrases based on the first post-edit phrase; and wherein defining the first edit rule include: defining an association of the edit rule pre-edit phrase with the first edit rule post-edit phrase and assigning a weight to the association, the weight determined based on one or more edit experience measures of one or more of the users that implemented change of the pre-edit phrases of the set to the first post-edit phrase.
- a given edit experience measure of a given user of the users may be based on one of: quality of previous edits of the given user and number of other edits performed by the given user.
- the pre-edit phrases of the set and the edit rule pre-edit phrase may each include only terms.
- the edit rule pre-edit phrase may include one or more category identifiers, each of the category identifiers indicating one of: a part of speech, a category of entities, and a set of terms.
- At least one of the edit rule post-edit phrases may include one or more category identifiers, each of the category identifiers indicating one of: a part of speech, a category of entities, and a set of terms.
- the method may further include: determining the category identifiers based on identifying members associated with the category identifiers in a plurality of the post-edit phrases associated with the set of the one or more pre-edit phrases.
- At least one of the edit rule post-edit phrases may include only terms.
- the method may further include: identifying a current document; identifying a phrase in the current document; determining the phrase conforms to the edit rule pre-edit phrase; a nd providing a candidate rephrasing of the phrase based on an edit rule post-edit phrase of the edit rule post-edit phrases.
- the method may further include: identifying a selection of the candidate rephrasing to replace the phrase in the current document; and adjusting, based on the selection, a weight associated with the edit rule post- edit phrase for the edit rule.
- providing the candidate rephrasing may be based on an attribute of the current document.
- the method may further include: identifying an editor associated with the current document; and wherein providing the candidate rephrasing is further based on an attribute of the user.
- implementations may include a non-transitory computer readable storage medium storing instructions executable by a processor to perform a method such as one or more of the methods described herein.
- implementations may include a system including memory and one or more processors operable to execute instructions, stored in the memory, to perform a method such as one or more of the methods described herein.
- FIG. 1 is a block diagram of an example environment in which one or more edit rules may be determined based on identified user edits in documents and/or in which determined edit rules may be applied to future phrases.
- FIG. 2 illustrates examples of identified sets of edits that may be utilized to determine one or more edit rules.
- FIG. 3 illustrates examples of edit rules that may be determined based on identified edits.
- FIG. 4 is an illustration of an example interface for providing rephrasing suggestions to a user.
- FIG. 5 is a flowchart of an example method for determining an edit rule based on a plurality of user edits identified in documents.
- FIG. 6 is a flowchart of an example method for providing candidate rephrasings based on a n edit rule.
- FIG. 7 illustrates a block diagram of an example computer system.
- FIG. 1 illustrates a block diagram of an example environment in which one or more edit rules may be determined based on identified edits of phrases in documents and/or in which determined edit rules may be applied to future phrases.
- the example environment includes a communication network 101 that facilitates com munication between the various components in the environment.
- the com munication network 101 may include the I nternet, one or more intra nets, and/or one or more bus subsystems.
- the communication network 101 may optionally utilize one or more standard communications technologies, protocols, and/or inter-process communication techniques.
- the example environment also includes a computing device 105 executing a n application 106, an edit identification system 110, an edit rule system 115, a document data base 120, and an entity database 125.
- Computing device 105 may be a computer coupled to one or more components illustrated in FIG. 1 through one or more networks 101 such as a local area network (LAN) or wide area network (WAN) such as the I nternet.
- the computing device 105 may be, for example, a desktop computing device, a laptop computing device, a ta blet computing device, a mobile phone computing device, a computing device of a vehicle of the user (e.g., an in-vehicle communications system, an in-vehicle entertainment system, an in-vehicle navigation system), or a wearable apparatus of the user that includes a computing device (e.g., a watch of the user having a com puting device, glasses of the user having a computing device).
- a computing device e.g., a watch of the user having a com puting device, glasses of the user having a computing device.
- Application 106 is an application that is executing on computing device 105 and may be utilized, for example, to provide a user with a n interface to create and/or edit one or more documents. Users may utilize application 106 to create a document (e.g., a word processing document, a n email, a blog posting, an instant message), access an already created document, and/or edit a document that has been created previously by the user and/or one or more other users. [0032] As described herein, user edits with documents via computing device 105 may be utilized to determine edit rules. Although only a single computing device 105 is illustrated in FIG.
- edits by multiple users via multiple computing devices may be utilized to determine edit rules according to techniques described herein.
- rephrasing suggestions determined based on edit rules may be presented to users via one or more applications executing on computing devices such as via application 106 of computing device 105.
- Application 106 is one example of an application but is not meant to be limiting.
- Other example applications include sta nd-alone word processing document applications, email applications, search applications, personal assistant a pplications, etc.
- Documents that are created by one or more users may be stored in document database 120.
- the term "database” will be used broadly to refer to any collection of data.
- the data of the data base does not need to be structured in a ny particular way, or structured at all, and it can be stored on storage devices in one or more locations.
- the document database 120 may include multiple collections of data, each of which may be organized and accessed differently.
- document database 120 may include multiple storage devices each storing document for only a single user.
- a storage device of document database 120 may be integrated into computing device 105 and/or may be remotely accessible via com munication network 101 to only one user.
- document data base 120 may include documents from multiple users a nd document data base 120 may be remotely accessible to multiple users, each of which may limit access to documents created by that user.
- a user may allow one or more components, such as edit identification system 110, to access one or more documents created by the user.
- a user may grant another user permission to view and/or edit one or more documents.
- a user may create a document, store the document in document database 120, and grant permission to one or more users to access and edit the document.
- Edit identification system 110 generally identifies edits of phrases by users in documents.
- An edit is a change of a phrase (pre-edit phrase) to a second phrase (post-edit phrase) by a user that is editing a document.
- Edits may include, for example, adding one or more characters to a phrase (e.g., adding one or more terms), removing one or more characters from a phrase (e.g., deleting one or more terms), altering the position of one or more terms in a phrase, and/or changing one or more characters of a phrase.
- a user may edit a phrase to, for example, clarify one or more terms, correct spelling and/or grammar in a phrase, add additional information to a phrase, a nd/or compress information in a phrase.
- Examples of edits include changing "The bill was 1000" to "The bill was $1,000.00” (clarification of a term), "Dogs and cats is animals” to “Dogs and cats are animals” (grammatical correction), "Bill and Sue are friends” to "They are friends” (compression of information), a nd "Spiders have eight legs and ants have six” to "Spiders have eight legs and ants have six legs” (clarification of a term).
- a n edit may be associated with one or more attributes of the document in which the edit was made (e.g., a type associated with the document, a maturity level of the document), one or more attributes of a user that created the pre-edit string of the edit (e.g., a group of which the user is a member), one or more attributes of a user that created the post-edit string of the edit (may be the same or different from the user that created the pre-edit string), a time and/or date when the edit occurred, and/or other information related to the edit.
- edit identification system 110 may identify edits and/or patterns of edits only if the edits occur in mature documents.
- a mature document is a document that has been created by a user and that has reached at least a threshold level of completeness.
- edit identification system 110 may not identify edits from documents that are in the early stages of composition and/or edit identification system 110 may only identify edits that occur after a document has reached a maturity level.
- edit identification system 110 may associate an edit with a n indication of a maturity level of the document in which the edit was made (e.g., indications such as "not mature”, “mature”, “very mature”). I n some of those
- the weight given to the edit in determining an edit rule based on the edit may be based on the maturity level of the document in which the edit was made. I n some im plementations, limiting edits to mature documents and/or to portions of documents that are beyond an initial draft phase (or otherwise taking into account the maturity level of
- edit identification system 110 may be a component executing, in whole or in part, on computing device 105.
- edit identification system 110 may identify user edits locally from application 106 and provide the edits to edit rule system 115 via communication network 101.
- edit identification system may be included as part of application 106 and may identify user edits and store the edits with additional information in one or more databases.
- application 106 may store those documents in document database 120, along with information pertaining to edits of those documents, such as pre-edit phrases, post-edit phrases, users and/or attributes of users that performed the edit, edit time, and/or other information associated with edit.
- Document maturity engine 135 may identify a maturity level for documents.
- the maturity level of a document may be utilized, for example, to determine whether the document is a mature document.
- whether a document is a mature document may be utilized to determine whether edits to the document are stored for potential use in determining an edit rule and/or to determine whether stored edits to the document will be used in determining an edit rule.
- a mature document is a document that has been sufficiently edited by one or more users such that subsequent edits to the document are useful in determining edit rules. For example, early in the creation of a document, the user may add new sentences, make significant changes to sentences, and/or otherwise make significant adjustments to a document. In some implementations, it may not be desirable to determine one or more edit rules based on those early changes. In some of those
- edits to a document may not be identified from the document and/or stored for usage in determining edit rules until a maturity level of the document is indicative of the document being completion mature document.
- document maturity engine 135 may determine a maturity level for a document based on a time period since the document was initially created. For example, document maturity engine 135 may identify a creation time of a document and determine a document maturity level that is indicative of maturity based on whether the document has been created for at least a threshold time period. In some implementations, the threshold time period may be determined based on one or more characteristics of the document. For example, a threshold time period of an email may be less than a threshold time period of a legal document since emails typically reach a mature level of completion before more complex documents. In some implementations, a threshold time period may be determined based on one or more characteristics of a user associated with the document.
- documents of a user that typically completes documents in a shorter period of time may have a threshold time period that is shorter than a user that is identified as taking longer to complete documents.
- a document may be determined to be mature when a user other than the creator of the document edits the document.
- a break in time between initial creation of a document and edits may be an indication that a draft of the document was completed, such as an indication that the user stopped composition of the document and resumed editing at a later period of time after completing a draft of the document.
- Parser 130 may identify document edits by a user, each of the edits including a pre- edit phrase that has been edited by a user to a post-edit phrase. For example, parser 130 may identify a string of text in a document as a phrase. In some implementations, parser 130 may identify a phrase by one or more delineating features of text from the document (text that is included in the phrase or separate from the phrase). For example, parser 130 may identify a phrase based on punctuation in text. For instance, parser 130 may identify the text between periods as phrase, text separated by one or more commas as a phrase, multiple sentences of text between periods and including one or more periods as a phrase, etc.
- parser 130 may identify grammatical information associated with one or more terms in text. In some implementations, the grammatical information may be utilized by parser 130 to identify phrases. In some implementations, the grammatical information may be associated with identified pre-edit and post-edit phrases and one or more edit rules may be determined based on the grammatical information. . Parser 130 may be configured to identify and annotate various types of grammatical information in one or more segments of a document. For example, the parser 130 may include a part of speech tagger configured to annotate terms in one or more segments with their grammatical roles.
- parser 130 may additionally and/or alternatively include a dependency parser configured to determine syntactic relationships between terms in one or more segments.
- the dependency parser may determine which terms modify other terms, subjects and verbs of sentences, and so forth (e.g., a parse tree)— and may make annotations of such dependencies.
- parser 130 may identify a prepositional phrase as a phrase by determining parts of speech of one or more terms and identifying the terms that conform to a prepositional phrase format (e.g.,
- parser 130 may additionally and/or alternatively include an entity tagger configured to annotate entity references in one or more segments such as references to people, organizations, locations, and so forth.
- entity tagger may annotate all references to a given person in one or more segments of a document.
- the entity tagger may annotate references to an entity at a high level of granularity (e.g., to enable identification of all references to an entity type such as people) and/or a lower level of granularity (e.g., to enable identification of all references to a particular entity such as a particular person).
- parser 130 may additionally and/or alternatively include a coreference resolver configured to group, or "cluster,” references to the same entity based on one or more contextual cues. For example, "Daenerys Targaryen,” “Khaleesi,” and “she" in one or more segments may be grouped together based on referencing the same entity. I n some
- the coreference resolver may use data outside of a textual segment (e.g., metadata or a knowledge graph) to cluster references. For instance, a document that is a message may only contain a reference to "you” and the coreference resolver may resolve the reference to "you” to a person to which the message is addressed.
- a textual segment e.g., metadata or a knowledge graph
- parser 130 may be configured to identify an edit by identifying a change in one or more characters of a string and determining a phrase that includes the characters that were changed. For example, parser 130 may identify a change of a series of characters, identify the pre-edit phrase that was in the document before the edit, a nd identify the post-edit phrase that is in the document after the edit. I n some implementations, parser 130 may provide one or more components with the edit (i.e., the phrases and, in some insta nces, additional information related to the edit, such as the document, document type, user attributes, etc.).
- parser 130 may store edits in document database 120 for later utilization, provide edits to edit pattern engine 140 to identify edits that conform to a pattern, a nd/or provide one or more edits to edit rule system 115 to update an existing edit rule (e.g., to add new post-edit phrases to an existing rule based on new post-edit phrases identified in one or more new edits).
- parser 130 may determine that an edit is complete based on one or more actions (or inactions) of the user that is performing the edit. For example, parser 130 may determine that an edit is complete based a threshold length of time in which the user has not entered any characters. Also, for example, parser 130 may determine that an edit is complete when the user has indicated a different part of the document, such as by clicking in a different part of the document and/or moving a mouse to a different part of the document. Also, for example, parser 130 may determine that an edit is complete when the user otherwise performs an action other tha n entering characters (scrolling, saving the document, right clicking a mouse, etc.).
- parser 130 may store a nd/or provide edits as the terms of the edits themselves (optionally canonicalized) and/or a combination of one or more categories and/or terms. For example, parser 130 may identify a pre-edit phrase of "The bill is 1000" and identify one or more entities associated with terms of the phrase, such as
- Parser 130 may store the pre-edit phrase as "The bill is [number 1000],” “The [noun] is 1000,” and/or one or more other representations of the phrase "The bill is 1000.” Parser 130 may identify one or more categories of terms in phrases via entity database 125.
- a user may be editing a document and edit a sentence from "The bill was 1000.” to "The bill was $1,000.”
- Parser 130 may identify a change in characters (i.e., the addition of a "$" and ",") followed by inaction of the user for a threshold period of time, and identify the pre-edit phrase and the post-edit phrase of the edit.
- Parser 130 may identify the phrases based on the phrases beginning with a capital letter a nd ending with a period (i.e., identifying a whole sentence as a phrase), and the post-edit phrase being located in the same relative position of the document as the pre-edit phrase.
- Parser 130 may store the edit in documents database 120 for later utilization by one or more components. I n some
- parser 130 may additionally identify the document, one or more attributes of the document, the editing user, one or more attributes of the user, and/or additiona l information that may be stored with the edit.
- parser 130 may identify edits from a particular set of edits in a document. For example, parser 130 may identify only the last 20% of edits to a document. Also, for example, parser 130 may identify one or more portions of a document that document maturity engine 135 has identified as mature and identity only those edits that are present in the mature portion of the document. I n some im plementations, parser 130 may identify multiple edits of a set of characters as separate edits. For example, parser 130 may identify an edit of Phrase A to Phrase B and subsequently an edit of Phrase B to Phrase C.
- parser may identify an edit with Phrase A as the pre-edit phrase a nd Phrase B as the post-edit phrase, an edit with Phrase A as the pre-edit phrase and Phrase C as the post- edit phrase, and/or an edit with Phrase B as the pre-edit phrase a nd Phrase C as the post-edit phrase.
- illustrated examples of identified sets of edits that may be utilized to determine one or more edit rules are provided.
- the illustration includes pre-edit phrases 200A, 205A, 210A, 215A, 220A, 225A, and 230A; and corresponding post-edit phrases 200B, 205B, 210B, 215B, 220B, 225B, and 230B.
- the illustrated pre-edit phrases and post-edit phrases may be identified by a component that shares one or more characteristics with parser 130 from edits made by users in a plurality of documents. I n addition to explicit pre-edit phrases of 200A, 205A, 210A, 220A, 225A, and 230A, a pre-edit phrase 215A of "The bill is
- [#1000]" may be identified by parser 130 from an explicit edit in a document with one or more tokens of a pre-edit phrase replaced with a category or entity representing the one or more tokens; in this case, an entity associated with the number 1000.
- Each of the pre-edit phrases is associated with the post-edit phrase that was identified by parser 130 as replacing the respective pre-edit phrase in a document.
- the edits may be stored in a database for later utilization by one or more systems.
- Edit pattern engine 140 utilizes the edits identified by parser one or more edits to identify a set of edits that have identical or similar pre-edit phrases.
- parser 130 may provide edits to edit pattern engine 140 as the edits are identified in one or more documents.
- parser 130 may be a component executing on computing device 105 and parser 130 may provide edits from mature documents as users perform the edits. I n some implementations, parser 130 may store edits and/or edits that include one or more terms replaced by an entity or category in document database 120 and edit pattern engine 140 may identify the edits at a later time.
- Edit pattern engine 140 may identify edits with identical or similar pre-edit phrases as a set of edits that is potentially suitable for determining an edit rule. For example, edit pattern engine 140 may identify a plurality of edits that have pre-edit phrases of "The bill is 1000" as a set to provide to edit rule system 115 for determining a rule. In some
- edit pattern engine 140 may identify one or more edits that include categories and/or entities as determined by parser 130. For example, edit pattern e ngine 140 may identify one or more edits that parser 130 stored as "The bill is [representation of 1000]."
- edit pattern engine 140 may identify edits that include pre-edit phrases with a similar pattern or that are otherwise similar. For example, referring again to FIG. 2, edit pattern engine 140 may identify the pre-edit phrases 220A, 225A, and 230A as conforming to a pattern of "[noun] and [noun] is [noun]." In some implementations, edit pattern engine 140 may identify additional edits as the edits are determined by parser 130. For example, edit pattern engine 140 may identify 220A, 225A, a nd 230A from document database 120, and parser 130 may later provide an edit with a pre-edit phrase of "She and I is adults" to edit pattern engine 140 to include with the other conforming edits.
- edit pattern engine 140 may identify edits that are associated with similar additional information. For example, parser 130 may determine an edit from a document and store the edit with one or more attributes of the document, such as a document type. Edit pattern engine 140 may identify a set of edits that have similar pre-edit phrases a nd that are additionally associated with the same document type. As used herein, a document type of a document may be based on a file name extension of the document, an application utilized to create the document, content of the document, or other attributes of the document that enable assignment of the document type to the document. As another example, parser 130 may identify one or more attributes of the user that performed an edit and store the one or more attributes with the edit.
- Edit pattern engine 140 may identify a set of edits that have similar pre-edit phrases and that are additionally are associated with users with the same or similar attributes. I n some implementations, edit pattern engine 140 may identify a set of edits without regard to additional attributes that may be associated with the edits (i.e., identify edits based solely on similarity of pre-edit phrases).
- edit pattern engine 140 may identify edits that include similar information but in a different order. For example, edit pattern engine 140 may identify a set of edits that include edits of the phrase "yesterday's news" to one or more other phrases, such as an edit to "The news of yesterday" and/or an edit to "August 10's news” that occurred on August 11. Edit pattern engine 140 may identify the set based on, for example, similarity between entities associated with one or more terms of the user pre-edit and/or post- edit phrases, similarity of one or more terms of the pre-edit and post-edit phrases, and/or one or more other techniques as described herein.
- Edit rule system 115 may utilize a set of edits identified by edit pattern engine 140 to determine a n edit rule based on the edits of the set.
- An edit rule associates a pre-edit phrase with one or more potential post-edit phrases.
- An edit rule may be utilized to a utomatically determine one or more rephrasings of a future phrase that conforms to the pre-edit phrase of the edit rule. For example, an edit rule may be determined from a plurality of edits that each include a pre-edit phrase of "The bill is 1000," and an associated post-edit phrase.
- rephrasing suggestion engine 160 may identify the edit rule with "The bill is 1000" as the pre-edit phrase, and provide the user with one or more of the associated post-edit phrases as a suggestion for rephrasing the phrase.
- edit rules examples of edit rules that may be determined based on identified edits are illustrated.
- the three illustrated edit rules may be determined by edit rule system 115 based on the edits illustrated in FIG. 2.
- edit rule 300 may be determined based on edit pattern engine 140 identifying edits with a pre-edit phrase of "The bill is 1000" and providing the edits to edit rule system 115.
- Edit rule system 115 may
- edit rule 300 with a pre-edit phrase that is same as the pre-edit phrases of the identified edits (i.e., 200A, 205A, and 210A), and post-edit phrases (300B, 300C, and 300D) that correspond to the identified post-edit phrases of the edits (200B, 205B, and 210B).
- edit rule system 115 may determine a rule wherein the pre-edit phrase includes categories of one or more terms.
- edit rule 305 includes a pre-edit phrase 305A of "The bill is [#1000]” (with [#1000] denoting a category of
- Edit rule 305 may be determined based edits that includes pre-edit phrases that conform to the pattern of pre-edit phrase 305A.
- edit pattern engine 140 may identify pre-edit phrases 200A, 205A, and 210A, a nd provide the associated edits to edit rule system 115, which may determine a pattern of the pre-edit phrases a nd further determine an edit rule based on the associated post-edit phrases.
- Edit rule 305 includes one potential post-edit phrase 305B; however, one or more additional phrases may be included with the edit rule based on the edits utilized to determine the edit rule, as is illustrated with respect to edit rule 300.
- edit rule system 115 may determine a n edit rule based on a combination of phrases and patterns. For example, edit rule system 115 may determine edit rule 300 and/or edit rule 305 based on a provided set of edits that includes the pre-edit phrases of 200A, 205A, 210A, a nd 215A.
- edit rule system 115 may determine an edit rule that includes one or more patterns as post-edit phrases.
- rule 310 may be determined from a set of edits that includes the second set of edits illustrated in FIG. 2 (i.e., edits with pre-edit phrases of 220A, 225A, and 230A).
- rule 310 includes a pattern for the pre-edit phrase 310A of the edit rule that generalizes the pre-edit phrases of the identified edits, and a post-edit phrase that generalizes the post-edit phrases of the identified edits.
- pre-edit phrase 220A of "Cats and dogs is animals” may be annotated with parts of speech and a parse tree by parser 130.
- Edit pattern engine 140 may identify other edits that have been annotated with the same or similar parts of speech and parse tree by parser 130, such as pre-edit phrase 225A and pre-edit phrase 230A.
- Edit pattern engine 140 may provide the edits to edit rule system 115, which may determine an edit rule that includes the identified pattern of the pre-edit phrases of the edits, "[noun] and [noun] is [plural noun]," and further post-edit phrases 310B and 310C based on the post-edit phrases of the provided edits (i.e., post-edits 220B, 225B, a nd 230B).
- edit rule system 115 may determine an edit rule that rearranges one or more terms of a phrase to determine rephrasings.
- edit rule system 115 may determine a rule that rephrases "[Name]'s [object]” to "the [object] of [Name]” from a set of edits that includes edits of "Bob's car” to "The car of Bob," and "Jim's job” to "the job of Jim.”
- edit rules may be determined that include synonyms of terms from a pre-edit phrase in one or more of the post-edit phrases ⁇ e.g., "Jim's job” edited to "Jim's career” and/or "Jim's occupation” may be utilized to determine an edit rule of "[Name]'s job” to "The [synonym of job] of [Name]”).
- an edit rule may be associated with one or more attributes.
- edit rule system 115 may determine an edit rule from a set of edits that were identified by parser 130 in documents with an identified document type.
- Edit rule system 115 may associate the document type with the edit rule to indicate that the edit rule is for use in determining rephrasings of phrases in documents of the same type.
- edit rule system 115 may identify multiple document types that are associated with the edits that were utilized to determine an edit rule and determine weights for various types of associated documents.
- edit pattern engine 140 may provide 100 edits, 40 of which came from emails and 60 of which came from blog entries, a nd edit rule system 115 may determine weights for the resulting edit rule that are more indicative of usefulness of the edit rule for suggesting rephrasings in future emails and less indicative of usefulness of the edit rule for suggesting rephrasings in future blog entries.
- edit rule system 115 may associate one or more attributes of users with an edit rule. For example, edit pattern engine 140 may determine a set of edits that were performed by users with a particular attribute and associate the attribute with the edit rule for later utilization in suggestion rephrasings to users with that attribute. I n some implementations, only post-edit phrases that are identified at least a threshold number of times may be included as post-edit phrases of an edit rule.
- edit weighting engine 145 may determine weights for one or more post-edit phrases of edit rules. I n some implementations, the weights may be determined based on the edits that were utilized to determine a rule. For example, referring to FIG. 3, the post-edit phrases 300B, 300C, and 300D of edit rule 300 may each be weighted based on a count of edits that were utilized to determine the rule.
- edit weighting engine 145 may determine a weight for 300B that is more indicative of rephrasing with 300B than a weight for 300C.
- edit weighting engine 145 may determine weights for one or more post-edit phrases of edit rules based on an editor experience measure associated with one or more users that implemented changes from the pre-edit phrase to a post-edit phrase.
- An editor experience measure for a given user may be determined based on, for example, the num ber of documents that the given user has previously edited, the num ber of edits that the given user has performed, analysis of quality of writing by the user (including or restricted to the quality of the document in which the user implemented the edit), and/or other indications of a writing skill level of the user.
- a n edit rule may be determined with a pre-edit phrase of Phrase A and post-edit phrases of Phrase B a nd Phrase C.
- Edit weighting engine 145 may identify five edits of Phrase A to Phrase B by one or more users that all have editor experience measures that are highly indicative of editor experience and further identify five edits of Phrase A to Phrase C by one or more users with editor experience measures that are less indicative of editor experience.
- An edit rule may be determined for rephrasing of Phrase A to post-edit phrases of Phrase B and Phrase C.
- Edit weighting engine 145 may determine a weight for the post-edit phrases of the edit rule such that Phrase B is more indicative of rephrasing than Phrase C based on the editor experience measures of the users that implemented the change to Phrase B being more indicative of quality edits than rephrasings of Phrase A to Phrase C.
- rephrasing suggestion engine 160 may identify a phrase that conforms to one or more pre-edit phrases of edit rules, and determine one or more rephrasings of the phrase based on those edit rules. In some implementations, rephrasing suggestion engine 160 may identify the phrase in a document bei ng actively edited by a user and provide one or more of the determined rephrasings to the user as options for replacing the phrase.
- the presentation of rephrasings determined based on the post-edit phrases may be provided to the user based on the weights (e.g., a rephrasing determined based on an edit rule post-edit phrase with the weight most indicative of rephrasing may be provided most prominently to the user).
- the weights e.g., a rephrasing determined based on an edit rule post-edit phrase with the weight most indicative of rephrasing may be provided most prominently to the user.
- a n illustration of a n example interface for providing rephrasing suggestions to a user is provided.
- the user may be composing document 400, which includes phrase 405 of "The bill was 1000.”
- the user is provided with suggestions 410 that present the user with rephrasings that have been determined based on one or more edit rules.
- phrase 405 conforms to the pre-edit phrase of rule 300 of FIG. 3, and rephrasing suggestion engine 160 may provide suggestions 410 based on the post-edit phrases of rule 300.
- the suggestions may be provided to the user automatically upon detection of edit rules that conform to the phrase 405 and/or following a n input by the user such as a selection of the phrase 405 and/or an interface element.
- rephrasing suggestion engine 160 may replace a phrase that conforms to a pre-edit phrase of a rule with a post-edit phrase of the rule.
- the phrase "The bill was 1000" may be identified in a
- document a nd rephrasing suggestion engine 160 may replace the phrase in the document with a post-edit phrase of the edit rule.
- the replacement may be done automatically, optionally after the user selects the post-edit phrase from suggestions 410.
- rephrasing suggestion engine 160 may identify a document type a nd/or an attribute of a user and only identify edit rules that are associated with that document type and/or that attribute. For example, rephrasing suggestion engine 160 may identify a document type for document 400 and only provide rephrasing suggestions based on edit rules that are associated with that document type. Also, for example, rephrasing suggestion engine 160 may identify the user that is editing document 400 and only provide rephrasing suggestions that are associated with one or more attributes that are additionally associated with the user.
- rephrasing suggestion engine 160 may provide one or more suggestions based on weights that are determined for one or more post-edit phrases associated with an edit rule. For example, rephrasing suggestion engine 160 may provide only suggestions based on post-edit phrases that satisfy a threshold weight. Also, for example, rephrasing suggestion engine 160 may provide only a certain number of suggestions based on those post-edit phrases with the highest weights. Also, for example, rephrasing suggestion engine 160 may provide suggestions in a n order that is determined based on associated weights of post-edit phrases. For instance, referring to FIG.
- suggestions 410 may be provided in an order based on weights associated with the post-edit phrases of an edit rule ⁇ i.e., "The bill is $1000" may have a weight that is more indicative of frequency in past identified edits than "The bill is 1,000").
- interaction weighting engine 150 may identify a rephrasing suggestion that a user has selected and/or otherwise shown interest in a nd adjust the weight of one or more post-edit phrases of an edit rule. For example, referring to FIG. 4, a user may select "The bill is 1,000" as a rephrasing of phrase 405, and interaction weighting engine 150 may "increase” a weight associated with the post-edit phrase "The bill is 1,000" for the associated edit rule (and/or "decrease” a weight associated with "The bill is $1000).
- FIG. 5 a flowchart of an example method for determining a n edit rule based on a plurality of user edits identified in documents is provided.
- Other implementations may perform the steps in a different order, omit certain steps, and/or perform different and/or additional steps than those illustrated in FIG. 5.
- FIG. 5 will be described with reference to one or more components of FIG. 1 that may perform the method, such as edit identification system 110 a nd/or edit rule system 115.
- a plurality of edits are identified.
- the edits may be identified by a component that shares one or more characteristics with edit
- parser 130 may identify one or more edits in a document by identifying a change of one or more characters in the document, and identifying a phrase that includes the changed characters.
- parser 130 may tag one or more tokens of the phrase with entities and/or categories of terms.
- parser 130 may identify terms in a phrase by parts of speech, entities, general categories, and/or other characteristics of the terms.
- parser 130 may utilize one or more tags associated with terms of a document to determine the phrase (e.g., selecting an entire prepositional phrase as a phrase).
- edits may be identified from mature documents.
- parser 130 may identify edits from documents that have been created for at least a threshold period of time. Also, for example, parser 130 may identify edits that occurred after a period of time without edits (e.g., a break by a user that may indicate com pletion of a first draft).
- parser 130 may identify edits from particular portions of one or more documents that have been determined to be mature. For example, parser 130 may identify only edits that occur in the last five pages of a document.
- parser 130 may identify only a last portion of edits from a document, such as the last 20% of edits to a document and/or the last 100 edits to a document.
- the pre-edit phrases of the identified edits are utilized to determine a pre-edit phrase for an edit rule.
- the pre-edit phrase of the edit rule may be determined by identifying edits that have the same pre-edit phrase.
- the pre-edit phrase of the edit rule may include one or more categories of terms that are determined by parser 130. For example, a component that shares one or more characteristics with edit pattern engine 140 may determine a pre-edit phrase of "[noun] and [noun] is [noun]" based on identifying a plurality of edits with pre-edit phrases that conform to the pattern.
- one or more post-edit phrases are determined for the edit rule.
- the post-edit phrases are determined based on the post-edit phrases of the edits that were identified a nd utilized to determine the pre-edit phrase of the edit rule.
- a plurality of edits may be identified by edit pattern engine 140 that include a plurality of post-edit phrases that were determined by parser 130.
- the post-edit phrases may be utilized by one or more components to determine post-edit phrases for the pre-edit phrase.
- the post-edit phrases include one or more categories and/or characteristics that are related to the post-edit phrases of the edits.
- a post-edit phrase of an edit rule may include one or more indications of nouns a nd/or categories of nouns.
- a pre-edit phrase of an edit rule may include "[animal] is animals" and the post-edit phrase may additionally include "[animal] are animals” as an indication that the identified pre-edit phrases of edit include the name of an animal and the post-edit phrase for each of the edits may include the same animal as the corresponding pre-edit phrase and/or another term that is an animal.
- the edit rule is stored for later utilization to determine one or more rephrasings for a future phrase conforming to the pre-edit phrase of the edit rule.
- the edit rule may be stored in document database 120 and utilized to determine one or more candidate rephrasings of a phrase that is identified in a document of a user.
- rephrasings of phrases may be determined based on edit rules utilizing a method that shares one or more characteristics with the process illustrated in FIG. 6.
- FIG. 6 a flowchart of an example method for providing candidate rephrasings based on an edit rule is provided.
- Other implementations may perform the steps in a different order, omit certain steps, and/or perform different and/or additional steps than those illustrated in FIG. 6.
- FIG. 6 will be described with reference to one or more components of FIG. 1 that may perform the method, such as rephrasing suggestion engine 160.
- a phrase is identified.
- the phrase may be identified in a document.
- the identified phrase may be provided by a user while editing a document.
- Phrases may be identified by one or more components, such as parser 130, based on, for example, one or more terms in the phrase, punctuation of the phrase, tags of one or more terms of a phrase, and/or other techniques to determine a phrase from a document of text.
- the phrase is determined to conform to a pre-edit phrase of an edit rule.
- an edit rule may include one or more terms and the phrase may be determined to conform to the edit rule if the phrase includes the same terms.
- the phrase may be determined to conform to the phrase if the phrase includes terms that are associated with the corresponding categories in the pre-edit phrase of the edit rule.
- the edit rule may be associated with a particular document attribute and/or user attribute, and only edit rules that are associated with that document attribute and/or edits that were performed by a user with that particular attribute may be utilized to determine whether a phrase conforms to a pre- edit phrase of an edit rule.
- one or more candidate rephrasings of the phrase may be determined based on the post-edit phrases of the edit rule.
- a user may be provided with one or more of the post-edit phrases as a candidate rewrite of the phrase.
- the phrase may be identified in a document of a user and the user may be provided with a prompt that indicates one or more phrases that may be utilized to rephrase and/or rewrite the phrase.
- one or more candidate rephrases may be provided based on weights associated with the rephrasings.
- weights may be associated with the rephrasings based on counts of edits that previously included each of the post-edit phrases, and the rephrasings may be provided based on the weights (e.g., only the top weighted rephrasings are provided, only a certain percentage of the highest weighted rephrasings are provided, only rephrasings with a threshold weight, rephrasings provided in an order based on weights).
- FIG. 7 is a block diagram of an example computer system 710.
- Computer system 710 typically includes at least one processor 714 which com municates with a number of peripheral devices via bus subsystem 712.
- peripheral devices may include a storage subsystem 724, including, for example, a memory subsystem 725 and a file storage subsystem 726, user interface input devices 722, user interface output devices 720, a nd a network interface subsystem 716.
- the input and output devices allow user interaction with computer system 710.
- Network interface subsystem 716 provides a n interface to outside networks and is coupled to corresponding interface devices in other computer systems.
- User interface input devices 722 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices. I n general, use of the term "input device” is intended to include all possible types of devices and ways to input information into computer system 710 or onto a communication network.
- User interface output devices 720 may include a display subsystem, a printer, a fax machine, or non-visual displays such as a udio output devices.
- the display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image.
- the display subsystem may also provide non-visual display such as via audio output devices.
- output device is intended to include all possible types of devices and ways to output information from computer system 710 to the user or to another machine or computer system.
- Storage subsystem 724 stores programming and data constructs that provide the functionality of some or all of the modules described herein.
- the storage subsystem 724 may include the logic to determine an edit rule based on a plurality of edits of users.
- the storage subsystem 724 may include the logic to determine one or more candidate rephrasings of a phrase based on an edit rule.
- Memory 725 used in the storage subsystem can include a number of memories including a main random access memory (RAM) 730 for storage of instructions and data during program execution and a read only memory (ROM) 732 in which fixed instructions are stored.
- a file storage subsystem 726 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges.
- the modules implementing the functionality of certain implementations may be optionally stored by file storage subsystem 726 in the storage subsystem 724, or in other machines accessible by the processor(s) 714.
- Bus subsystem 712 provides a mechanism for letting the various components and subsystems of computer system 710 communicate with each other as intended. Although bus subsystem 712 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses.
- Computer system 710 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computer system 710 depicted in FIG. 7 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of computer system 710 are possible having more or fewer components than the computer system depicted in FIG. 7.
Abstract
Methoda and system related to determining an edit rule based on a plurality of edits. Some implementations are directed to identifying the plurality of edits in one or more documents and determining an edit rule based on the pre-edit and post-edit phrases of the edits. Some implementations are directed to identifying the edits from one or more mature documents. The determined edit rule may be utilized to determine one or more candidate rephrasings of a subsequent phrase.
Description
METHOD AND SYSTEM FOR DETERMINING EDIT RULES FOR REWRITING
PHRASES
Background
[0001] A user may enter text in one or more applications and be provided with one or more rewrites of the text by the one or more applications. The provided rewrites may be based on one or more terms in the text a nd may provide the user with options that may be selected to replace the text. For example, a user may be provided with one or more terms to replace a misspelled term that has been entered by the user.
Summary
[0002] The present disclosure generally pertains to technical features related to
determining edit rules for rewriting phrases. The edit rules may be determined based on identified edits of phrases by users in a plurality of documents. Some implementations are directed to identifying a large qua ntity of user edits in documents, wherein each of the user edits indicates a change from a pre-edit phrase to a post-edit phrase (e.g., an edit of phrase "A" to phrase "B"). Edit rules may then be determined based on the pre-edit a nd post-edit phrases of the identified edits a nd the edit rules may be stored for later utilization. As one example, the identified edits may include a large number of edits from phrase "A" to phrase "B" and a la rge number of edits from phrase "A" to phrase "C". Based on those identified edits, an edit rule may be determined that associates phrase "A" with phrase "B" and/or phrase "C". The edit rule may be stored and utilized to determine, for a future phrase conforming to phrase "A", one or more rephrasings of the future phrase based on phrase "B" and/or phrase "C". The rephrasings may be utilized for various purposes such as presenting the rephrasings to a user as candidate rephrasings for the future phrase, a utomatically rewriting the future phrase, etc.
[0003] I n some implementations, the identified user edits in documents may include, or be restricted to, edits in documents that have at least a threshold maturity level. I n some versions of those implementations, those user edits from documents that have at least a threshold maturity level may be given a greater weight in determining edit rules than those user edits from documents that do not have at least a threshold maturity level. A document maturity level generally indicates the completeness of the document and identifying edits from
documents with at least a threshold maturity level may help avoid utilizing early and potentially less useful edits of users in determining edit rules. Various techniques may be utilized to determine a document maturity level. For example, a document maturity level may be determined based on identifying that at least a threshold amount of time has elapsed since creation of the document, identifying at least a threshold time period since the document has last been modified (i.e., identifying a "break" by a user), identifying that the document editor has changed from one user to a second user, and/or identifying that the document has been emailed, published, or otherwise provided to one or more additional users.
[0004] An edit rule determined based on identified edits generally indicates one or more edits or rephrases that have been utilized by users to change a first phrase to one or more second phrases. The second phrases may represent, for example: one or more corrections to grammatical issues with the first phrase, a n improvement in clarity with respect to the first phrase, a condensed or expanded version of the first phrase, a nd/or a n im provement in quality to the first phrase. I n some implementations, an edit rule may define an explicit
transformation of a pre-edit phrase represented as an n-gram to one or more post-edit phrases represented as n-grams. For example, multiple user edits of phrase "A" to phrase "B" may be identified and an edit rule that defines phrase "B" as a post-edit phrase of phrase "A" may be determined based on the multiple user edits. Also, for example, additional user edits of phrase "A" may be identified that indicate that multiple users changed phrase "A" to phrase "C", and an edit rule may be determined that defines both phrase "B" and phrase "C" as post-edit phrases of phrase "A". Weights may optionally be determined for each of the post-edit phrases ("B" and "C") for the pre-edit phrase "A". Each weight may generally indicate the likelihood of rephrasing the pre-edit phrase "A" to the respective post-edit phrase a nd may be based on, for example, counts of identified edits from String A to the respective post-edit phrase.
[0005] I n some implementations, an edit rule may define one or more characteristics associated with a pre-edit phrase a nd/or one or more post-edit phrases. For example, an edit rule may include one or more categories of terms in the pre-edit phrase and/or post-edit phrase(s) of the edit rule. For example, a set of user edits may be determined that includes pre-edit phrases with the format "[noun] are [adjective]" and with post-edit phrases with the format "[plural noun] are [adjective]." Also, for example, the identified edits may include one
or more pre-edit phrases of the format "[noun] are [adjective]" and post-edit phrases of the format "[noun] is [adjective]." In some implementations, weights of the two post-edit phrase formats may be determined based on counts of edits of each type. As an example, a set of edits may be determined that have pre-edit phrases conforming to the format "[noun] are [adjective]," such as a set of edits that includes Edit 1 of "The cat are cute" to "The cats are cute," Edit 2 of "Dog are loyal" to "Dogs are loyal," and Edit 3 of "Bob are smart" to "Bob is smart." An edit rule may be determined from the set of edits for pre-edit phrases of the subset of the format "[noun] are [adjective];" and an edit rule may be determined that has a post-edit phrase of "[noun] are [adjective]," with an edit weight of .6667 for edits to "[plural noun] are [adjective]" and an edit weight of .3333 for edits to "[noun] is [adjective]."
[0006] I n some implementations, edit rules may be determined based on user edits that conform to one or more attributes and may be associated with those attributes ( e.g., for more prominent future use in rephrasing in situations where one or more of those attributes are present). For example, a n edit rule may be determined that is specific to a type of document and it may be utilized only for determining candidate rephrasings for other documents of that type and/or candidate rephrasings generated on that edit rule may be favored for other documents of that type. For instance, edits from documents that are patent applications may be identified and one or more edit rules may be determined that are a pplicable to other documents that are patent applications but that may not be applicable to other documents that are personal letters. As another example, an edit rule may be determined that is specific to a group of users having one or more shared or similar attributes. For example, an edit rule may be determined from edits of a group of users in a geographic region a nd the edit rule may not be a pplied to future documents associated with users in a second geographic region or rephrasings generated based on the edit rule may be given less favorable treatment for future documents associated with users in the second region (e.g., due to regional colloquialisms, regional differences in word usage, different la nguages).
[0007] Determining edit rules for rewriting phrases, scoring a nd/or ranking those edit rules, and/or applying edit rules to rewrite phrases give rise to various advantages. For exa mple, to manually edit electronic documents, productivity software such as word processors may be required. Such software typically includes various usability features such as graphical user interfaces that are intended make the user's job easier, but that require com puting resources
such as memory and/or processor cycles to render. Moreover, users must spend time making edits, and being human, they may be prone to mistakes. By creating effective edit rules than can be applied automatically by a computing system, the need for users to open electronic documents and spend time making edits may be reduced, which in turn may reduce mistakes and/or free up computing resources. Moreover, avoiding human mistakes may reduce the need for additional downstream editing, freeing up even more computing resources.
Additionally or alternatively, ranking and/or scoring edit rules may facilitate increased use of edit rules deemed effective, and culling of less-effective edit rules. Having fewer, more effective edit rules may ease the burden on computing systems that apply edit rules, saving computing resources such as memory and/or processing cycles.
[0008] In some implementations, a computer implemented method is provided that includes: identifying, from at least one database, edits from a plurality of users, wherein each of the edits identifies one of a plurality of pre-edit phrases and an associated one of a plurality of post-edit phrases and each of a plurality of the edits is based on a user implemented change of the one of the pre-edit phrases to the one of the post-edit phrases in one of a plurality of mature documents; determining an edit rule pre-edit phrase based on a set of one or more of the pre-edit phrases identified by the edits; determining one or more edit rule post-edit phrases based on one or more of the post-edit phrases associated with the set of the one or more pre-edit phrases; defining an edit rule that associates the edit rule pre-edit phrase with the edit rule post-edit phrases; and storing the edit rule for automatically determining, for a future phrase conforming to the edit rule pre-edit phrase, a rephrasing of the future phrase based on at least one of the edit rule post-edit phrases.
[0009] This method and other implementations of technology disclosed herein may each optionally include one or more of the following features.
[0010] At least one document of the mature documents may be identified as mature based on at least one of: a creation time of the document; an amount of time since the document was last modified; and a user associated with the document. In some of those instances, the document may be identified as mature if the user is not the creator of the document.
[0011] The method may further include determining a given edit of the edits and storing the given edit in the database. In some of those instances, the given edit may be from a given
document of the mature documents and the method may further include: determining the given document is mature, wherein determining the given edit may be based on determining the given document is mature. Determining the given document is mature may based on at least one of: a creation time of the document; an amount of time since the document was last modified; and a user associated with the document.
[0012] The method may further include: determining the set of the one or more of the pre- edit phrases based on at least one characteristic associated with each of the pre-edit phrases of the set. In some of those instances, the characteristic may indicate a purpose for the mature documents on which the pre-edit phrases of the set are based. The characteristic may indicative of one or more attributes of users associated with the documents on which the pre- edit phrases of the set are based.
[0013] Determining the one or more edit rule post-edit phrases may include: identifying a first post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; determining a first count of associations of the first post-edit phrase with the one or more pre-edit phrases of the set; and based on the first count of associations satisfying a threshold, determining at least one of the edit rule post-edit phrases based on the first post- edit phrase. The threshold may be a fixed threshold. In some instances, the method may further include: identifying a second post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; and determining a second count of associations of the second post-edit phrase with the one or more pre-edit phrases of the set, wherein the threshold is based on the second count of associations.
[0014] The method may further include: identifying a first post-edit phrase and a second post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; determining a first edit rule post-edit phrase of the edit rule post-edit phrases based on the first post-edit phrase; and determining a second edit rule post-edit phrase of the edit rule post-edit phrases based on the second post-edit phrase. In some of those instances the method may further include: determining a first count of associations of the first post-edit phrase with the one or more pre-edit phrases of the set; and determining a second count of associations of the second post-edit phrase with the one or more pre-edit phrases of the set, and wherein defining the edit rule includes: defining a first association of the edit rule pre-edit
phrase with the first edit rule post-edit phrase and assigning a first weight to the first association, the first weight determined based on the first count of associations; and defining a second association of the edit rule pre-edit phrase with the second edit rule post-edit phrase and assigning a second weight to the second association, the second weight determined based on the second count of associations.
[0015] The method may further include: identifying a first post-edit phrase associated with the set of one or more pre-edit phrases; determining a first edit rule post-edit phrase of the edit rule post-edit phrases based on the first post-edit phrase; and wherein defining the first edit rule include: defining an association of the edit rule pre-edit phrase with the first edit rule post-edit phrase and assigning a weight to the association, the weight determined based on one or more edit experience measures of one or more of the users that implemented change of the pre-edit phrases of the set to the first post-edit phrase. A given edit experience measure of a given user of the users may be based on one of: quality of previous edits of the given user and number of other edits performed by the given user.
[0016] The pre-edit phrases of the set and the edit rule pre-edit phrase may each include only terms.
[0017] The edit rule pre-edit phrase may include one or more category identifiers, each of the category identifiers indicating one of: a part of speech, a category of entities, and a set of terms.
[0018] At least one of the edit rule post-edit phrases may include one or more category identifiers, each of the category identifiers indicating one of: a part of speech, a category of entities, and a set of terms. The method may further include: determining the category identifiers based on identifying members associated with the category identifiers in a plurality of the post-edit phrases associated with the set of the one or more pre-edit phrases.
[0019] At least one of the edit rule post-edit phrases may include only terms.
[0020] The method may further include: identifying a current document; identifying a phrase in the current document; determining the phrase conforms to the edit rule pre-edit phrase; a nd providing a candidate rephrasing of the phrase based on an edit rule post-edit phrase of the edit rule post-edit phrases. I n some of those instances, the method may further
include: identifying a selection of the candidate rephrasing to replace the phrase in the current document; and adjusting, based on the selection, a weight associated with the edit rule post- edit phrase for the edit rule. In some of those instances, providing the candidate rephrasing may be based on an attribute of the current document. In some of those instances, the method may further include: identifying an editor associated with the current document; and wherein providing the candidate rephrasing is further based on an attribute of the user.
[0021] Other implementations may include a non-transitory computer readable storage medium storing instructions executable by a processor to perform a method such as one or more of the methods described herein. Yet another implementation may include a system including memory and one or more processors operable to execute instructions, stored in the memory, to perform a method such as one or more of the methods described herein.
[0022] It should be appreciated that all combinations of the foregoing concepts and additional concepts described in greater detail herein are contemplated as being part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are contemplated as being part of the subject matter disclosed herein.
Brief Description of the Drawings
[0023] FIG. 1 is a block diagram of an example environment in which one or more edit rules may be determined based on identified user edits in documents and/or in which determined edit rules may be applied to future phrases.
[0024] FIG. 2 illustrates examples of identified sets of edits that may be utilized to determine one or more edit rules.
[0025] FIG. 3 illustrates examples of edit rules that may be determined based on identified edits.
[0026] FIG. 4 is an illustration of an example interface for providing rephrasing suggestions to a user.
[0027] FIG. 5 is a flowchart of an example method for determining an edit rule based on a plurality of user edits identified in documents.
[0028] FIG. 6 is a flowchart of an example method for providing candidate rephrasings based on a n edit rule.
[0029] FIG. 7 illustrates a block diagram of an example computer system.
Detailed Description
[0030] FIG. 1 illustrates a block diagram of an example environment in which one or more edit rules may be determined based on identified edits of phrases in documents and/or in which determined edit rules may be applied to future phrases. The example environment includes a communication network 101 that facilitates com munication between the various components in the environment. I n some implementations, the com munication network 101 may include the I nternet, one or more intra nets, and/or one or more bus subsystems. The communication network 101 may optionally utilize one or more standard communications technologies, protocols, and/or inter-process communication techniques. The example environment also includes a computing device 105 executing a n application 106, an edit identification system 110, an edit rule system 115, a document data base 120, and an entity database 125.
[0031] Computing device 105 may be a computer coupled to one or more components illustrated in FIG. 1 through one or more networks 101 such as a local area network (LAN) or wide area network (WAN) such as the I nternet. The computing device 105 may be, for example, a desktop computing device, a laptop computing device, a ta blet computing device, a mobile phone computing device, a computing device of a vehicle of the user (e.g., an in-vehicle communications system, an in-vehicle entertainment system, an in-vehicle navigation system), or a wearable apparatus of the user that includes a computing device (e.g., a watch of the user having a com puting device, glasses of the user having a computing device). Additional and/or alternative client devices may be provided. Application 106 is an application that is executing on computing device 105 and may be utilized, for example, to provide a user with a n interface to create and/or edit one or more documents. Users may utilize application 106 to create a document (e.g., a word processing document, a n email, a blog posting, an instant message), access an already created document, and/or edit a document that has been created previously by the user and/or one or more other users.
[0032] As described herein, user edits with documents via computing device 105 may be utilized to determine edit rules. Although only a single computing device 105 is illustrated in FIG. 1, it is understood that edits by multiple users via multiple computing devices may be utilized to determine edit rules according to techniques described herein. As also described herein, rephrasing suggestions determined based on edit rules may be presented to users via one or more applications executing on computing devices such as via application 106 of computing device 105. Application 106 is one example of an application but is not meant to be limiting. Other example applications include sta nd-alone word processing document applications, email applications, search applications, personal assistant a pplications, etc.
[0033] Documents that are created by one or more users may be stored in document database 120. In this specification, the term "database" will be used broadly to refer to any collection of data. The data of the data base does not need to be structured in a ny particular way, or structured at all, and it can be stored on storage devices in one or more locations. Thus, for example, the document database 120 may include multiple collections of data, each of which may be organized and accessed differently. I n some implementations, document database 120 may include multiple storage devices each storing document for only a single user. For example, a storage device of document database 120 may be integrated into computing device 105 and/or may be remotely accessible via com munication network 101 to only one user. I n some implementations, document data base 120 may include documents from multiple users a nd document data base 120 may be remotely accessible to multiple users, each of which may limit access to documents created by that user. For example, a user may allow one or more components, such as edit identification system 110, to access one or more documents created by the user. Also, for example, a user may grant another user permission to view and/or edit one or more documents. For instance, a user may create a document, store the document in document database 120, and grant permission to one or more users to access and edit the document.
[0034] Edit identification system 110 generally identifies edits of phrases by users in documents. An edit is a change of a phrase (pre-edit phrase) to a second phrase (post-edit phrase) by a user that is editing a document. Edits may include, for example, adding one or more characters to a phrase (e.g., adding one or more terms), removing one or more
characters from a phrase (e.g., deleting one or more terms), altering the position of one or more terms in a phrase, and/or changing one or more characters of a phrase. A user may edit a phrase to, for example, clarify one or more terms, correct spelling and/or grammar in a phrase, add additional information to a phrase, a nd/or compress information in a phrase. Examples of edits include changing "The bill was 1000" to "The bill was $1,000.00" (clarification of a term), "Dogs and cats is animals" to "Dogs and cats are animals" (grammatical correction), "Bill and Sue are friends" to "They are friends" (compression of information), a nd "Spiders have eight legs and ants have six" to "Spiders have eight legs and ants have six legs" (clarification of a term).
[0035] I n some implementations, a n edit may be associated with one or more attributes of the document in which the edit was made (e.g., a type associated with the document, a maturity level of the document), one or more attributes of a user that created the pre-edit string of the edit (e.g., a group of which the user is a member), one or more attributes of a user that created the post-edit string of the edit (may be the same or different from the user that created the pre-edit string), a time and/or date when the edit occurred, and/or other information related to the edit. I n some implementations, edit identification system 110 may identify edits and/or patterns of edits only if the edits occur in mature documents. A mature document is a document that has been created by a user and that has reached at least a threshold level of completeness. As one example, edit identification system 110 may not identify edits from documents that are in the early stages of composition and/or edit identification system 110 may only identify edits that occur after a document has reached a maturity level. I n some implementations, edit identification system 110 may associate an edit with a n indication of a maturity level of the document in which the edit was made (e.g., indications such as "not mature", "mature", "very mature"). I n some of those
im plementations, the weight given to the edit in determining an edit rule based on the edit may be based on the maturity level of the document in which the edit was made. I n some im plementations, limiting edits to mature documents and/or to portions of documents that are beyond an initial draft phase (or otherwise taking into account the maturity level of
documents), may enable edit rules to be determined based on more mea ningful edits and extraneous early edits, which may not be useful in determining certain edit rules, may be ignored and/or given less weight.
[0036] In some implementations, edit identification system 110 may be a component executing, in whole or in part, on computing device 105. For example, edit identification system 110 may identify user edits locally from application 106 and provide the edits to edit rule system 115 via communication network 101. In some implementations, edit identification system may be included as part of application 106 and may identify user edits and store the edits with additional information in one or more databases. For example, for documents created via application 106, application 106 may store those documents in document database 120, along with information pertaining to edits of those documents, such as pre-edit phrases, post-edit phrases, users and/or attributes of users that performed the edit, edit time, and/or other information associated with edit.
[0037] Document maturity engine 135 may identify a maturity level for documents. The maturity level of a document may be utilized, for example, to determine whether the document is a mature document. In some implementations, whether a document is a mature document may be utilized to determine whether edits to the document are stored for potential use in determining an edit rule and/or to determine whether stored edits to the document will be used in determining an edit rule. Generally, a mature document is a document that has been sufficiently edited by one or more users such that subsequent edits to the document are useful in determining edit rules. For example, early in the creation of a document, the user may add new sentences, make significant changes to sentences, and/or otherwise make significant adjustments to a document. In some implementations, it may not be desirable to determine one or more edit rules based on those early changes. In some of those
implementations, edits to a document may not be identified from the document and/or stored for usage in determining edit rules until a maturity level of the document is indicative of the document being completion mature document.
[0038] In some implementations, document maturity engine 135 may determine a maturity level for a document based on a time period since the document was initially created. For example, document maturity engine 135 may identify a creation time of a document and determine a document maturity level that is indicative of maturity based on whether the document has been created for at least a threshold time period. In some implementations, the threshold time period may be determined based on one or more characteristics of the
document. For example, a threshold time period of an email may be less than a threshold time period of a legal document since emails typically reach a mature level of completion before more complex documents. In some implementations, a threshold time period may be determined based on one or more characteristics of a user associated with the document. For example, documents of a user that typically completes documents in a shorter period of time may have a threshold time period that is shorter than a user that is identified as taking longer to complete documents. Also, for example, a document may be determined to be mature when a user other than the creator of the document edits the document. In some
implementations, other indications of time may be utilized to determine maturity of a document. For example, a break in time between initial creation of a document and edits may be an indication that a draft of the document was completed, such as an indication that the user stopped composition of the document and resumed editing at a later period of time after completing a draft of the document.
[0039] Parser 130 may identify document edits by a user, each of the edits including a pre- edit phrase that has been edited by a user to a post-edit phrase. For example, parser 130 may identify a string of text in a document as a phrase. In some implementations, parser 130 may identify a phrase by one or more delineating features of text from the document (text that is included in the phrase or separate from the phrase). For example, parser 130 may identify a phrase based on punctuation in text. For instance, parser 130 may identify the text between periods as phrase, text separated by one or more commas as a phrase, multiple sentences of text between periods and including one or more periods as a phrase, etc.
[0040] In some implementations, parser 130 may identify grammatical information associated with one or more terms in text. In some implementations, the grammatical information may be utilized by parser 130 to identify phrases. In some implementations, the grammatical information may be associated with identified pre-edit and post-edit phrases and one or more edit rules may be determined based on the grammatical information. . Parser 130 may be configured to identify and annotate various types of grammatical information in one or more segments of a document. For example, the parser 130 may include a part of speech tagger configured to annotate terms in one or more segments with their grammatical roles. For example, the part of speech tagger may tag each term with its part of speech such as
"noun," "verb," "adjective," "pronoun," etc. (parts of speech are denoted herein with square brackets). Also, for example, in some implementations, parser 130 may additionally and/or alternatively include a dependency parser configured to determine syntactic relationships between terms in one or more segments. For example, the dependency parser may determine which terms modify other terms, subjects and verbs of sentences, and so forth (e.g., a parse tree)— and may make annotations of such dependencies. For example, parser 130 may identify a prepositional phrase as a phrase by determining parts of speech of one or more terms and identifying the terms that conform to a prepositional phrase format (e.g.,
[preposition] +[noun] ).
[0041] I n some implementations, parser 130 may additionally and/or alternatively include an entity tagger configured to annotate entity references in one or more segments such as references to people, organizations, locations, and so forth. For example, the entity tagger may annotate all references to a given person in one or more segments of a document. The entity tagger may annotate references to an entity at a high level of granularity (e.g., to enable identification of all references to an entity type such as people) and/or a lower level of granularity (e.g., to enable identification of all references to a particular entity such as a particular person). The entity tagger may rely on content of the document to resolve a particular entity and/or may optionally communicate with a knowledge graph or other entity database to resolve a particular entity, such as entity database 125. Also, for example, in some im plementations, parser 130 may additionally and/or alternatively include a coreference resolver configured to group, or "cluster," references to the same entity based on one or more contextual cues. For example, "Daenerys Targaryen," "Khaleesi," and "she" in one or more segments may be grouped together based on referencing the same entity. I n some
im plementations, the coreference resolver may use data outside of a textual segment (e.g., metadata or a knowledge graph) to cluster references. For instance, a document that is a message may only contain a reference to "you" and the coreference resolver may resolve the reference to "you" to a person to which the message is addressed.
[0042] I n some implementations, parser 130 may be configured to identify an edit by identifying a change in one or more characters of a string and determining a phrase that includes the characters that were changed. For example, parser 130 may identify a change of a
series of characters, identify the pre-edit phrase that was in the document before the edit, a nd identify the post-edit phrase that is in the document after the edit. I n some implementations, parser 130 may provide one or more components with the edit (i.e., the phrases and, in some insta nces, additional information related to the edit, such as the document, document type, user attributes, etc.). For example, parser 130 may store edits in document database 120 for later utilization, provide edits to edit pattern engine 140 to identify edits that conform to a pattern, a nd/or provide one or more edits to edit rule system 115 to update an existing edit rule (e.g., to add new post-edit phrases to an existing rule based on new post-edit phrases identified in one or more new edits).
[0043] I n some implementations, parser 130 may determine that an edit is complete based on one or more actions (or inactions) of the user that is performing the edit. For example, parser 130 may determine that an edit is complete based a threshold length of time in which the user has not entered any characters. Also, for example, parser 130 may determine that an edit is complete when the user has indicated a different part of the document, such as by clicking in a different part of the document and/or moving a mouse to a different part of the document. Also, for example, parser 130 may determine that an edit is complete when the user otherwise performs an action other tha n entering characters (scrolling, saving the document, right clicking a mouse, etc.).
[0044] I n some implementations, parser 130 may store a nd/or provide edits as the terms of the edits themselves (optionally canonicalized) and/or a combination of one or more categories and/or terms. For example, parser 130 may identify a pre-edit phrase of "The bill is 1000" and identify one or more entities associated with terms of the phrase, such as
identifying "1000" as a number and/or as a representation of the number 1,000. Parser 130 may store the pre-edit phrase as "The bill is [number 1000]," "The [noun] is 1000," and/or one or more other representations of the phrase "The bill is 1000." Parser 130 may identify one or more categories of terms in phrases via entity database 125.
[0045] As an example, a user may be editing a document and edit a sentence from "The bill was 1000." to "The bill was $1,000." Parser 130 may identify a change in characters (i.e., the addition of a "$" and ",") followed by inaction of the user for a threshold period of time, and identify the pre-edit phrase and the post-edit phrase of the edit. Parser 130 may identify the phrases based on the phrases beginning with a capital letter a nd ending with a period (i.e.,
identifying a whole sentence as a phrase), and the post-edit phrase being located in the same relative position of the document as the pre-edit phrase. Parser 130 may store the edit in documents database 120 for later utilization by one or more components. I n some
im plementations, parser 130 may additionally identify the document, one or more attributes of the document, the editing user, one or more attributes of the user, and/or additiona l information that may be stored with the edit.
[0046] I n some implementations, parser 130 may identify edits from a particular set of edits in a document. For example, parser 130 may identify only the last 20% of edits to a document. Also, for example, parser 130 may identify one or more portions of a document that document maturity engine 135 has identified as mature and identity only those edits that are present in the mature portion of the document. I n some im plementations, parser 130 may identify multiple edits of a set of characters as separate edits. For example, parser 130 may identify an edit of Phrase A to Phrase B and subsequently an edit of Phrase B to Phrase C. I n some im plementations, parser may identify an edit with Phrase A as the pre-edit phrase a nd Phrase B as the post-edit phrase, an edit with Phrase A as the pre-edit phrase and Phrase C as the post- edit phrase, and/or an edit with Phrase B as the pre-edit phrase a nd Phrase C as the post-edit phrase.
[0047] Referring to FIG. 2, illustrated examples of identified sets of edits that may be utilized to determine one or more edit rules are provided. The illustration includes pre-edit phrases 200A, 205A, 210A, 215A, 220A, 225A, and 230A; and corresponding post-edit phrases 200B, 205B, 210B, 215B, 220B, 225B, and 230B. The illustrated pre-edit phrases and post-edit phrases may be identified by a component that shares one or more characteristics with parser 130 from edits made by users in a plurality of documents. I n addition to explicit pre-edit phrases of 200A, 205A, 210A, 220A, 225A, and 230A, a pre-edit phrase 215A of "The bill is
[#1000]" may be identified by parser 130 from an explicit edit in a document with one or more tokens of a pre-edit phrase replaced with a category or entity representing the one or more tokens; in this case, an entity associated with the number 1000. Each of the pre-edit phrases is associated with the post-edit phrase that was identified by parser 130 as replacing the respective pre-edit phrase in a document. The edits may be stored in a database for later utilization by one or more systems.
[0048] Edit pattern engine 140 utilizes the edits identified by parser one or more edits to identify a set of edits that have identical or similar pre-edit phrases. In some implementations, parser 130 may provide edits to edit pattern engine 140 as the edits are identified in one or more documents. For example, parser 130 may be a component executing on computing device 105 and parser 130 may provide edits from mature documents as users perform the edits. I n some implementations, parser 130 may store edits and/or edits that include one or more terms replaced by an entity or category in document database 120 and edit pattern engine 140 may identify the edits at a later time.
[0049] Edit pattern engine 140 may identify edits with identical or similar pre-edit phrases as a set of edits that is potentially suitable for determining an edit rule. For example, edit pattern engine 140 may identify a plurality of edits that have pre-edit phrases of "The bill is 1000" as a set to provide to edit rule system 115 for determining a rule. In some
im plementations, edit pattern engine 140 may identify one or more edits that include categories and/or entities as determined by parser 130. For example, edit pattern e ngine 140 may identify one or more edits that parser 130 stored as "The bill is [representation of 1000]."
[0050] I n some implementations, edit pattern engine 140 may identify edits that include pre-edit phrases with a similar pattern or that are otherwise similar. For example, referring again to FIG. 2, edit pattern engine 140 may identify the pre-edit phrases 220A, 225A, and 230A as conforming to a pattern of "[noun] and [noun] is [noun]." In some implementations, edit pattern engine 140 may identify additional edits as the edits are determined by parser 130. For example, edit pattern engine 140 may identify 220A, 225A, a nd 230A from document database 120, and parser 130 may later provide an edit with a pre-edit phrase of "She and I is adults" to edit pattern engine 140 to include with the other conforming edits.
[0051] I n some implementations, edit pattern engine 140 may identify edits that are associated with similar additional information. For example, parser 130 may determine an edit from a document and store the edit with one or more attributes of the document, such as a document type. Edit pattern engine 140 may identify a set of edits that have similar pre-edit phrases a nd that are additionally associated with the same document type. As used herein, a document type of a document may be based on a file name extension of the document, an application utilized to create the document, content of the document, or other attributes of
the document that enable assignment of the document type to the document. As another example, parser 130 may identify one or more attributes of the user that performed an edit and store the one or more attributes with the edit. Edit pattern engine 140 may identify a set of edits that have similar pre-edit phrases and that are additionally are associated with users with the same or similar attributes. I n some implementations, edit pattern engine 140 may identify a set of edits without regard to additional attributes that may be associated with the edits (i.e., identify edits based solely on similarity of pre-edit phrases).
[0052] As another example of a set of edits, edit pattern engine 140 may identify edits that include similar information but in a different order. For example, edit pattern engine 140 may identify a set of edits that include edits of the phrase "yesterday's news" to one or more other phrases, such as an edit to "The news of yesterday" and/or an edit to "August 10's news" that occurred on August 11. Edit pattern engine 140 may identify the set based on, for example, similarity between entities associated with one or more terms of the user pre-edit and/or post- edit phrases, similarity of one or more terms of the pre-edit and post-edit phrases, and/or one or more other techniques as described herein.
[0053] Edit rule system 115 may utilize a set of edits identified by edit pattern engine 140 to determine a n edit rule based on the edits of the set. An edit rule associates a pre-edit phrase with one or more potential post-edit phrases. An edit rule may be utilized to a utomatically determine one or more rephrasings of a future phrase that conforms to the pre-edit phrase of the edit rule. For example, an edit rule may be determined from a plurality of edits that each include a pre-edit phrase of "The bill is 1000," and an associated post-edit phrase. Based on a future phrase of "The bill is 1000," rephrasing suggestion engine 160 may identify the edit rule with "The bill is 1000" as the pre-edit phrase, and provide the user with one or more of the associated post-edit phrases as a suggestion for rephrasing the phrase.
[0054] For example, referring to FIG. 3, examples of edit rules that may be determined based on identified edits are illustrated. The three illustrated edit rules may be determined by edit rule system 115 based on the edits illustrated in FIG. 2. For example, edit rule 300 may be determined based on edit pattern engine 140 identifying edits with a pre-edit phrase of "The bill is 1000" and providing the edits to edit rule system 115. Edit rule system 115 may
determine edit rule 300 with a pre-edit phrase that is same as the pre-edit phrases of the
identified edits (i.e., 200A, 205A, and 210A), and post-edit phrases (300B, 300C, and 300D) that correspond to the identified post-edit phrases of the edits (200B, 205B, and 210B).
[0055] I n some implementations, edit rule system 115 may determine a rule wherein the pre-edit phrase includes categories of one or more terms. For example, edit rule 305 includes a pre-edit phrase 305A of "The bill is [#1000]" (with [#1000] denoting a category of
representations of the number 1,000). Edit rule 305 may be determined based edits that includes pre-edit phrases that conform to the pattern of pre-edit phrase 305A. For example, edit pattern engine 140 may identify pre-edit phrases 200A, 205A, and 210A, a nd provide the associated edits to edit rule system 115, which may determine a pattern of the pre-edit phrases a nd further determine an edit rule based on the associated post-edit phrases. Edit rule 305 includes one potential post-edit phrase 305B; however, one or more additional phrases may be included with the edit rule based on the edits utilized to determine the edit rule, as is illustrated with respect to edit rule 300. I n some implementations, edit rule system 115 may determine a n edit rule based on a combination of phrases and patterns. For example, edit rule system 115 may determine edit rule 300 and/or edit rule 305 based on a provided set of edits that includes the pre-edit phrases of 200A, 205A, 210A, a nd 215A.
[0056] I n some implementations, edit rule system 115 may determine an edit rule that includes one or more patterns as post-edit phrases. For example, referring again to FIG. 3, rule 310 may be determined from a set of edits that includes the second set of edits illustrated in FIG. 2 (i.e., edits with pre-edit phrases of 220A, 225A, and 230A). As illustrated, rule 310 includes a pattern for the pre-edit phrase 310A of the edit rule that generalizes the pre-edit phrases of the identified edits, and a post-edit phrase that generalizes the post-edit phrases of the identified edits. For example, pre-edit phrase 220A of "Cats and dogs is animals" may be annotated with parts of speech and a parse tree by parser 130. Edit pattern engine 140 may identify other edits that have been annotated with the same or similar parts of speech and parse tree by parser 130, such as pre-edit phrase 225A and pre-edit phrase 230A. Edit pattern engine 140 may provide the edits to edit rule system 115, which may determine an edit rule that includes the identified pattern of the pre-edit phrases of the edits, "[noun] and [noun] is [plural noun]," and further post-edit phrases 310B and 310C based on the post-edit phrases of the provided edits (i.e., post-edits 220B, 225B, a nd 230B). As another example, edit rule
system 115 may determine an edit rule that rearranges one or more terms of a phrase to determine rephrasings. For example, edit rule system 115 may determine a rule that rephrases "[Name]'s [object]" to "the [object] of [Name]" from a set of edits that includes edits of "Bob's car" to "The car of Bob," and "Jim's job" to "the job of Jim." Also, for example, edit rules may be determined that include synonyms of terms from a pre-edit phrase in one or more of the post-edit phrases {e.g., "Jim's job" edited to "Jim's career" and/or "Jim's occupation" may be utilized to determine an edit rule of "[Name]'s job" to "The [synonym of job] of [Name]").
[0057] I n some implementations, an edit rule may be associated with one or more attributes. For example, edit rule system 115 may determine an edit rule from a set of edits that were identified by parser 130 in documents with an identified document type. Edit rule system 115 may associate the document type with the edit rule to indicate that the edit rule is for use in determining rephrasings of phrases in documents of the same type. Also, for example, edit rule system 115 may identify multiple document types that are associated with the edits that were utilized to determine an edit rule and determine weights for various types of associated documents. For instance, edit pattern engine 140 may provide 100 edits, 40 of which came from emails and 60 of which came from blog entries, a nd edit rule system 115 may determine weights for the resulting edit rule that are more indicative of usefulness of the edit rule for suggesting rephrasings in future emails and less indicative of usefulness of the edit rule for suggesting rephrasings in future blog entries. In some implementations, edit rule system 115 may associate one or more attributes of users with an edit rule. For example, edit pattern engine 140 may determine a set of edits that were performed by users with a particular attribute and associate the attribute with the edit rule for later utilization in suggestion rephrasings to users with that attribute. I n some implementations, only post-edit phrases that are identified at least a threshold number of times may be included as post-edit phrases of an edit rule.
[0058] I n some implementations, edit weighting engine 145 may determine weights for one or more post-edit phrases of edit rules. I n some implementations, the weights may be determined based on the edits that were utilized to determine a rule. For example, referring to FIG. 3, the post-edit phrases 300B, 300C, and 300D of edit rule 300 may each be weighted based on a count of edits that were utilized to determine the rule. For instance, if 200 edits
were identified with a pre-edit phrase of "The bill is 1000" and a post-edit phrase of "The bill is 1,000," and 300 edits were identified with the same pre-edit phrase and a post-edit phrase of "The bill is 10.00," edit weighting engine 145 may determine a weight for 300B that is more indicative of rephrasing with 300B than a weight for 300C.
[0059] I n some implementations, edit weighting engine 145 may determine weights for one or more post-edit phrases of edit rules based on an editor experience measure associated with one or more users that implemented changes from the pre-edit phrase to a post-edit phrase. An editor experience measure for a given user may be determined based on, for example, the num ber of documents that the given user has previously edited, the num ber of edits that the given user has performed, analysis of quality of writing by the user (including or restricted to the quality of the document in which the user implemented the edit), and/or other indications of a writing skill level of the user.
[0060] As an example, a n edit rule may be determined with a pre-edit phrase of Phrase A and post-edit phrases of Phrase B a nd Phrase C. Edit weighting engine 145 may identify five edits of Phrase A to Phrase B by one or more users that all have editor experience measures that are highly indicative of editor experience and further identify five edits of Phrase A to Phrase C by one or more users with editor experience measures that are less indicative of editor experience. An edit rule may be determined for rephrasing of Phrase A to post-edit phrases of Phrase B and Phrase C. Edit weighting engine 145 may determine a weight for the post-edit phrases of the edit rule such that Phrase B is more indicative of rephrasing than Phrase C based on the editor experience measures of the users that implemented the change to Phrase B being more indicative of quality edits than rephrasings of Phrase A to Phrase C.
[0061] I n some implementations, rephrasing suggestion engine 160 may identify a phrase that conforms to one or more pre-edit phrases of edit rules, and determine one or more rephrasings of the phrase based on those edit rules. In some implementations, rephrasing suggestion engine 160 may identify the phrase in a document bei ng actively edited by a user and provide one or more of the determined rephrasings to the user as options for replacing the phrase. I n implementations where the post-edit phrases of edit rules are weighted for the edit rules, the presentation of rephrasings determined based on the post-edit phrases may be provided to the user based on the weights (e.g., a rephrasing determined based on an edit rule
post-edit phrase with the weight most indicative of rephrasing may be provided most prominently to the user). Although examples herein are described with respect to utilizing edit rules to determine rephrasings of phrases in documents, edit rules may be utilized to determine rephrasings of phrases that are not associated with a document. For example, edit rules may be utilized to determine rephrasings of as spoken or typed queries of users that are provided to a search system, a tra nslation system, or other system.
[0062] Referring to FIG. 4, a n illustration of a n example interface for providing rephrasing suggestions to a user is provided. The user may be composing document 400, which includes phrase 405 of "The bill was 1000." The user is provided with suggestions 410 that present the user with rephrasings that have been determined based on one or more edit rules. For example, phrase 405 conforms to the pre-edit phrase of rule 300 of FIG. 3, and rephrasing suggestion engine 160 may provide suggestions 410 based on the post-edit phrases of rule 300. The suggestions may be provided to the user automatically upon detection of edit rules that conform to the phrase 405 and/or following a n input by the user such as a selection of the phrase 405 and/or an interface element. I n some implementations, rephrasing suggestion engine 160 may replace a phrase that conforms to a pre-edit phrase of a rule with a post-edit phrase of the rule. For example, the phrase "The bill was 1000" may be identified in a
document a nd rephrasing suggestion engine 160 may replace the phrase in the document with a post-edit phrase of the edit rule. The replacement may be done automatically, optionally after the user selects the post-edit phrase from suggestions 410.
[0063] I n some implementations, rephrasing suggestion engine 160 may identify a document type a nd/or an attribute of a user and only identify edit rules that are associated with that document type and/or that attribute. For example, rephrasing suggestion engine 160 may identify a document type for document 400 and only provide rephrasing suggestions based on edit rules that are associated with that document type. Also, for example, rephrasing suggestion engine 160 may identify the user that is editing document 400 and only provide rephrasing suggestions that are associated with one or more attributes that are additionally associated with the user.
[0064] I n some implementations, rephrasing suggestion engine 160 may provide one or more suggestions based on weights that are determined for one or more post-edit phrases
associated with an edit rule. For example, rephrasing suggestion engine 160 may provide only suggestions based on post-edit phrases that satisfy a threshold weight. Also, for example, rephrasing suggestion engine 160 may provide only a certain number of suggestions based on those post-edit phrases with the highest weights. Also, for example, rephrasing suggestion engine 160 may provide suggestions in a n order that is determined based on associated weights of post-edit phrases. For instance, referring to FIG. 4, suggestions 410 may be provided in an order based on weights associated with the post-edit phrases of an edit rule {i.e., "The bill is $1000" may have a weight that is more indicative of frequency in past identified edits than "The bill is 1,000").
[0065] I n some implementations, interaction weighting engine 150 may identify a rephrasing suggestion that a user has selected and/or otherwise shown interest in a nd adjust the weight of one or more post-edit phrases of an edit rule. For example, referring to FIG. 4, a user may select "The bill is 1,000" as a rephrasing of phrase 405, and interaction weighting engine 150 may "increase" a weight associated with the post-edit phrase "The bill is 1,000" for the associated edit rule (and/or "decrease" a weight associated with "The bill is $1000).
[0066] Referring to FIG. 5, a flowchart of an example method for determining a n edit rule based on a plurality of user edits identified in documents is provided. Other implementations may perform the steps in a different order, omit certain steps, and/or perform different and/or additional steps than those illustrated in FIG. 5. For convenience, aspects of FIG. 5 will be described with reference to one or more components of FIG. 1 that may perform the method, such as edit identification system 110 a nd/or edit rule system 115.
[0067] At step 500, a plurality of edits are identified. I n some implementations, the edits may be identified by a component that shares one or more characteristics with edit
identification system 110. For example, a component that shares one or more characteristics with parser 130 may identify one or more edits in a document by identifying a change of one or more characters in the document, and identifying a phrase that includes the changed characters. I n some implementations, parser 130 may tag one or more tokens of the phrase with entities and/or categories of terms. For example, parser 130 may identify terms in a phrase by parts of speech, entities, general categories, and/or other characteristics of the terms. I n some implementations, parser 130 may utilize one or more tags associated with
terms of a document to determine the phrase (e.g., selecting an entire prepositional phrase as a phrase).
[0068] I n some implementations, edits may be identified from mature documents. For example, parser 130 may identify edits from documents that have been created for at least a threshold period of time. Also, for example, parser 130 may identify edits that occurred after a period of time without edits (e.g., a break by a user that may indicate com pletion of a first draft). I n some implementations, parser 130 may identify edits from particular portions of one or more documents that have been determined to be mature. For example, parser 130 may identify only edits that occur in the last five pages of a document. I n some implementations, parser 130 may identify only a last portion of edits from a document, such as the last 20% of edits to a document and/or the last 100 edits to a document.
[0069] At step 505, the pre-edit phrases of the identified edits are utilized to determine a pre-edit phrase for an edit rule. I n some implementations, the pre-edit phrase of the edit rule may be determined by identifying edits that have the same pre-edit phrase. I n some im plementations, the pre-edit phrase of the edit rule may include one or more categories of terms that are determined by parser 130. For example, a component that shares one or more characteristics with edit pattern engine 140 may determine a pre-edit phrase of "[noun] and [noun] is [noun]" based on identifying a plurality of edits with pre-edit phrases that conform to the pattern.
[0070] At step 510, one or more post-edit phrases are determined for the edit rule. I n some im plementations, the post-edit phrases are determined based on the post-edit phrases of the edits that were identified a nd utilized to determine the pre-edit phrase of the edit rule. For example, a plurality of edits may be identified by edit pattern engine 140 that include a plurality of post-edit phrases that were determined by parser 130. The post-edit phrases may be utilized by one or more components to determine post-edit phrases for the pre-edit phrase. I n some implementations, the post-edit phrases include one or more categories and/or characteristics that are related to the post-edit phrases of the edits. For example, a post-edit phrase of an edit rule may include one or more indications of nouns a nd/or categories of nouns. For example, a pre-edit phrase of an edit rule may include "[animal] is animals" and the post-edit phrase may additionally include "[animal] are animals" as an indication that the
identified pre-edit phrases of edit include the name of an animal and the post-edit phrase for each of the edits may include the same animal as the corresponding pre-edit phrase and/or another term that is an animal.
[0071] At step 515, the edit rule is stored for later utilization to determine one or more rephrasings for a future phrase conforming to the pre-edit phrase of the edit rule. For example, the edit rule may be stored in document database 120 and utilized to determine one or more candidate rephrasings of a phrase that is identified in a document of a user. In some implementations, rephrasings of phrases may be determined based on edit rules utilizing a method that shares one or more characteristics with the process illustrated in FIG. 6.
[0072] Referring to FIG. 6, a flowchart of an example method for providing candidate rephrasings based on an edit rule is provided. Other implementations may perform the steps in a different order, omit certain steps, and/or perform different and/or additional steps than those illustrated in FIG. 6. For convenience, aspects of FIG. 6 will be described with reference to one or more components of FIG. 1 that may perform the method, such as rephrasing suggestion engine 160.
[0073] At step 600, a phrase is identified. In some implementations, the phrase may be identified in a document. For example, the identified phrase may be provided by a user while editing a document. Phrases may be identified by one or more components, such as parser 130, based on, for example, one or more terms in the phrase, punctuation of the phrase, tags of one or more terms of a phrase, and/or other techniques to determine a phrase from a document of text.
[0074] At step 605, the phrase is determined to conform to a pre-edit phrase of an edit rule. For example, an edit rule may include one or more terms and the phrase may be determined to conform to the edit rule if the phrase includes the same terms. Also, for example, in instances where a pre-edit phrase includes categories of terms, the phrase may be determined to conform to the phrase if the phrase includes terms that are associated with the corresponding categories in the pre-edit phrase of the edit rule. In some implementations, the edit rule may be associated with a particular document attribute and/or user attribute, and only edit rules that are associated with that document attribute and/or edits that were performed by a user
with that particular attribute may be utilized to determine whether a phrase conforms to a pre- edit phrase of an edit rule.
[0075] At step 610, one or more candidate rephrasings of the phrase may be determined based on the post-edit phrases of the edit rule. I n some implementations, a user may be provided with one or more of the post-edit phrases as a candidate rewrite of the phrase. For example, the phrase may be identified in a document of a user and the user may be provided with a prompt that indicates one or more phrases that may be utilized to rephrase and/or rewrite the phrase. I n some implementations, one or more candidate rephrases may be provided based on weights associated with the rephrasings. For example, weights may be associated with the rephrasings based on counts of edits that previously included each of the post-edit phrases, and the rephrasings may be provided based on the weights (e.g., only the top weighted rephrasings are provided, only a certain percentage of the highest weighted rephrasings are provided, only rephrasings with a threshold weight, rephrasings provided in an order based on weights).
[0076] FIG. 7 is a block diagram of an example computer system 710. Computer system 710 typically includes at least one processor 714 which com municates with a number of peripheral devices via bus subsystem 712. These peripheral devices may include a storage subsystem 724, including, for example, a memory subsystem 725 and a file storage subsystem 726, user interface input devices 722, user interface output devices 720, a nd a network interface subsystem 716. The input and output devices allow user interaction with computer system 710. Network interface subsystem 716 provides a n interface to outside networks and is coupled to corresponding interface devices in other computer systems.
[0077] User interface input devices 722 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices. I n general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computer system 710 or onto a communication network.
[0078] User interface output devices 720 may include a display subsystem, a printer, a fax machine, or non-visual displays such as a udio output devices. The display subsystem may
include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image. The display subsystem may also provide non-visual display such as via audio output devices. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computer system 710 to the user or to another machine or computer system.
[0079] Storage subsystem 724 stores programming and data constructs that provide the functionality of some or all of the modules described herein. For example, the storage subsystem 724 may include the logic to determine an edit rule based on a plurality of edits of users. As another example, the storage subsystem 724 may include the logic to determine one or more candidate rephrasings of a phrase based on an edit rule.
[0080] These software modules are generally executed by processor 714 alone or in combination with other processors. Memory 725 used in the storage subsystem can include a number of memories including a main random access memory (RAM) 730 for storage of instructions and data during program execution and a read only memory (ROM) 732 in which fixed instructions are stored. A file storage subsystem 726 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. The modules implementing the functionality of certain implementations may be optionally stored by file storage subsystem 726 in the storage subsystem 724, or in other machines accessible by the processor(s) 714.
[0081] Bus subsystem 712 provides a mechanism for letting the various components and subsystems of computer system 710 communicate with each other as intended. Although bus subsystem 712 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses.
[0082] Computer system 710 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computer system 710 depicted in FIG. 7 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of computer
system 710 are possible having more or fewer components than the computer system depicted in FIG. 7.
[0083] While several implementations have been described and illustrated herein, a variety of other means and/or structures for performing the function and/or obtaining the results and/or one or more of the advantages described herein may be utilized, and each of such variations and/or modifications is deemed to be within the scope of the implementations described herein. More generally, all parameters, dimensions, materials, and configurations described herein are meant to be exemplary and that the actual parameters, dimensions, materials, and/or configurations will depend upon the specific application or applications for which the teachings is/are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific
implementations described herein. It is, therefore, to be understood that the foregoing implementations are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, implementations may be practiced otherwise than as specifically described and claimed. Implementations of the present disclosure are directed to each individual feature, system, article, material, kit, and/or method described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
Claims
1. A computer implemented method, comprising:
identifying, by one or more processors from at least one database, edits from a plurality of users, wherein each of the edits identifies one of a plurality of pre-edit phrases a nd a n associated one of a plurality of post-edit phrases and each of a plurality of the edits is based on a user implemented change of the one of the pre-edit phrases to the one of the post-edit phrases in one of a plurality of mature documents;
determining, by the one or more processors, an edit rule pre-edit phrase based on a set of one or more of the pre-edit phrases identified by the edits;
determining, by the one or more processors, one or more edit rule post-edit phrases based on one or more of the post-edit phrases associated with the set of the one or more pre-edit phrases;
defining, by the one or more processors, an edit rule that associates the edit rule pre-edit phrase with the edit rule post-edit phrases; and
storing, by the one or more processors, the edit rule for automatically determining, for a future phrase conforming to the edit rule pre-edit phrase, a rephrasing of the future phrase based on at least one of the edit rule post-edit phrases.
2. The method of claim 1, wherein at least one document of the mature documents is identified as mature based on at least one of:
a creation time of the document;
an amount of time since the document was last modified; and
a user associated with the document.
3. The method of claim 2, wherein the document is identified as mature if the user is not the creator of the document.
4. The method of claim 1, further comprising:
determining, by the one or more processors, a given edit of the edits and storing the given edit in the database.
5. The method of claim 4, wherein the given edit is from a given document of the mature documents and further comprising:
determining, by the one or more processors, the given document is mature;
wherein determining the given edit is based on determining the given document is mature.
6. The method of claim 5, wherein determining the given document is mature is based on at least one of:
a creation time of the document;
an amount of time since the document was last modified; and
a user associated with the document.
7. The method of claim 1, further comprising:
determining, by the one or more processors, the set of the one or more of the pre-edit phrases based on at least one characteristic associated with each of the pre- edit phrases of the set.
8. The method of claim 7, wherein the characteristic indicates a purpose for the mature documents on which the pre-edit phrases of the set are based.
9. The method of claim 7, wherein the characteristic is indicative of one or more attributes of users associated with the documents on which the pre-edit phrases of the set are based.
10. The method of claim 1, wherein determining the one or more edit rule post-edit
phrases comprises:
identifying a first post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases;
determining a first count of associations of the first post-edit phrase with the one or more pre-edit phrases of the set; and
based on the first count of associations satisfying a threshold, determining at least one of the edit rule post-edit phrases based on the first post-edit phrase.
11. The method of claim 10, further comprising:
identifying, by the one or more processors, a second post-edit phrase of the post-edit phrases associated with the set of one or more pre-edit phrases; and
determining a second count of associations of the second post-edit phrase with the one or more pre-edit phrases of the set;
wherein the threshold is based on the second count of associations.
12. The method of claim 1, further comprising:
identifying, by the one or more processors, a first post-edit phrase and a second post-edit phrase of the post-edit phrases associated with the set of one or more pre- edit phrases;
determining, by the one or more processors, a first edit rule post-edit phrase of the edit rule post-edit phrases based on the first post-edit phrase; and
determining, by the one or more processors, a second edit rule post-edit phrase of the edit rule post-edit phrases based on the second post-edit phrase.
13. The method of claim 12, further comprising:
determining, by the one or more processors, a first count of associations of the first post-edit phrase with the one or more pre-edit phrases of the set; and
determining, by the one or more processors, a second count of associations of the second post-edit phrase with the one or more pre-edit phrases of the set;
wherein defining the edit rule comprises:
defining a first association of the edit rule pre-edit phrase with the first edit rule post-edit phrase and assigning a first weight to the first association, the first weight determined based on the first count of associations; and defining a second association of the edit rule pre-edit phrase with the second edit rule post-edit phrase and assigning a second weight to the second association, the second weight determined based on the second count of associations.
14. The method of claim 1, further comprising:
identifying, by the one or more processors, a first post-edit phrase associated with the set of one or more pre-edit phrases;
determining, by the one or more processors, a first edit rule post-edit phrase of the edit rule post-edit phrases based on the first post-edit phrase; and
wherein defining the first edit rule comprises:
defining an association of the edit rule pre-edit phrase with the first edit rule post-edit phrase and assigning a weight to the association, the weight determined based on one or more edit experience measures of one or more of the users that implemented change of the pre-edit phrases of the set to the first post-edit phrase.
15. The method of claim 14, wherein a given edit experience measure of a given user of the users is based on one of: quality of previous edits of the given user and number of other edits performed by the given user.
16. The method of claim 1, wherein the edit rule pre-edit phrase includes one or more
category identifiers, each of the category identifiers indicating one of: a part of speech, a category of entities, and a set of terms.
17. The method of claim 1, wherein at least one of the edit rule post-edit phrases includes one or more category identifiers, each of the category identifiers indicating one of: a part of speech, a category of entities, and a set of terms.
18. The method of claim 17, further comprising:
determining, by the one or more processors, the category identifiers based on identifying members associated with the category identifiers in a plurality of the post- edit phrases associated with the set of the one or more pre-edit phrases.
19. The method of claim 1, further comprising:
identifying, by the one or more processors, a current document;
identifying, by the one or more processors, a phrase in the current document; determining, by the one or more processors, the phrase conforms to the edit rule pre-edit phrase; and
providing, by the one or more processors, a candidate rephrasing of the phrase based on an edit rule post-edit phrase of the edit rule post-edit phrases.
20. The method of claim 19, further comprising:
identifying, by the one or more processors, a selection of the candidate rephrasing to replace the phrase in the current document; and
adjusting, by the one or more processors, based on the selection, a weight associated with the edit rule post-edit phrase for the edit rule.
21. The method of claim 19, wherein providing the candidate rephrasing is based on an attribute of the current document.
22. The method of claim 19, further comprising:
identifying, by the one or more processors, an editor associated with the current document; and
wherein providing the candidate rephrasing is further based on an attribute of the editor.
23. A system, comprising:
memory storing instructions;
one or more processors operable to execute the instructions in the memory, wherein the instructions comprise instructions to:
identify, from at least one database, edits from a plurality of users, wherein each of the edits identifies one of a plurality of pre-edit phrases and an associated one of a plurality of post-edit phrases and each of a plurality of the edits is based on a user implemented change of the one of the pre-edit phrases to the one of the post-edit phrases in one of a plurality of mature documents;
determine an edit rule pre-edit phrase based on a set of one or more of the pre- edit phrases identified by the edits;
determine one or more edit rule post-edit phrases based on one or more of the post-edit phrases associated with the set of the one or more pre-edit phrases;
define an edit rule that associates the edit rule pre-edit phrase with the edit rule post-edit phrases; and
store the edit rule for automatically determining, for a future phrase conforming to the edit rule pre-edit phrase, a rephrasing of the future phrase based on at least one of the edit rule post-edit phrases.
24. A non-transitory computer readable storage medium storing at least one program
configured for execution by at least one processor of a computer system, the at least one program comprising instructions to:
identify, from at least one database, edits from a plurality of users, wherein each of the edits identifies one of a plurality of pre-edit phrases and an associated one of a plurality of post-edit phrases and each of a plurality of the edits is based on a user implemented change of the one of the pre-edit phrases to the one of the post-edit phrases in one of a plurality of mature documents;
determine an edit rule pre-edit phrase based on a set of one or more of the pre- edit phrases identified by the edits;
determine one or more edit rule post-edit phrases based on one or more of the post-edit phrases associated with the set of the one or more pre-edit phrases;
define an edit rule that associates the edit rule pre-edit phrase with the edit rule post-edit phrases; and
store the edit rule for automatically determining, for a future phrase conforming to the edit rule pre-edit phrase, a rephrasing of the future phrase based on at least one of the edit rule post-edit phrases.
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462044858P | 2014-09-02 | 2014-09-02 | |
US62/044,858 | 2014-09-02 | ||
US14/591,734 US9639522B2 (en) | 2014-09-02 | 2015-01-07 | Methods and apparatus related to determining edit rules for rewriting phrases |
US14/591,734 | 2015-01-07 |
Publications (1)
Publication Number | Publication Date |
---|---|
WO2016036851A1 true WO2016036851A1 (en) | 2016-03-10 |
Family
ID=55402693
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/US2015/048131 WO2016036851A1 (en) | 2014-09-02 | 2015-09-02 | Method and system for determining edit rules for rewriting phrases |
Country Status (2)
Country | Link |
---|---|
US (1) | US9639522B2 (en) |
WO (1) | WO2016036851A1 (en) |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104660494B (en) * | 2015-02-11 | 2018-11-27 | 深圳市奔跑科技有限公司 | A kind of communication system |
US10325026B2 (en) * | 2015-09-25 | 2019-06-18 | International Business Machines Corporation | Recombination techniques for natural language generation |
US10824798B2 (en) | 2016-11-04 | 2020-11-03 | Semantic Machines, Inc. | Data collection for a new conversational dialogue system |
WO2018148441A1 (en) | 2017-02-08 | 2018-08-16 | Semantic Machines, Inc. | Natural language content generator |
US11069340B2 (en) | 2017-02-23 | 2021-07-20 | Microsoft Technology Licensing, Llc | Flexible and expandable dialogue system |
WO2018156978A1 (en) | 2017-02-23 | 2018-08-30 | Semantic Machines, Inc. | Expandable dialogue system |
US10762892B2 (en) | 2017-02-23 | 2020-09-01 | Semantic Machines, Inc. | Rapid deployment of dialogue system |
US11132499B2 (en) | 2017-08-28 | 2021-09-28 | Microsoft Technology Licensing, Llc | Robust expandable dialogue system |
US10740555B2 (en) * | 2017-12-07 | 2020-08-11 | International Business Machines Corporation | Deep learning approach to grammatical correction for incomplete parses |
US10902188B2 (en) * | 2018-08-20 | 2021-01-26 | International Business Machines Corporation | Cognitive clipboard |
US11429779B2 (en) | 2019-07-01 | 2022-08-30 | Microsoft Technology Licensing, Llc | Method and system for intelligently suggesting paraphrases |
US11157707B2 (en) | 2019-07-23 | 2021-10-26 | International Business Machines Corporation | Natural language response improvement in machine assisted agents |
US11636274B2 (en) * | 2020-05-14 | 2023-04-25 | Google Llc | Systems and methods to identify most suitable grammar suggestions among suggestions from a machine translation model |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2002029622A1 (en) * | 2000-10-02 | 2002-04-11 | Vialanguage, Inc. | Machine editing system incorporating dynamic rules database |
US20070073532A1 (en) * | 2005-09-29 | 2007-03-29 | Microsoft Corporation | Writing assistance using machine translation techniques |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH06259420A (en) | 1993-03-10 | 1994-09-16 | Fuji Xerox Co Ltd | Sentence editing support device |
US5903858A (en) | 1995-06-23 | 1999-05-11 | Saraki; Masashi | Translation machine for editing a original text by rewriting the same and translating the rewrote one |
US5828991A (en) | 1995-06-30 | 1998-10-27 | The Research Foundation Of The State University Of New York | Sentence reconstruction using word ambiguity resolution |
US7428520B2 (en) * | 2004-11-15 | 2008-09-23 | Becton, Dickinson And Company | Graphical user interface for use with open expert system |
US20070219773A1 (en) * | 2006-03-17 | 2007-09-20 | Xerox Corporation | Syntactic rule development graphical user interface |
US20080052290A1 (en) * | 2006-08-25 | 2008-02-28 | Jonathan Kahn | Session File Modification With Locking of One or More of Session File Components |
US8019595B1 (en) | 2006-09-11 | 2011-09-13 | WordRake Holdings, LLC | Computer processes for analyzing and improving document readability |
-
2015
- 2015-01-07 US US14/591,734 patent/US9639522B2/en not_active Expired - Fee Related
- 2015-09-02 WO PCT/US2015/048131 patent/WO2016036851A1/en active Application Filing
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2002029622A1 (en) * | 2000-10-02 | 2002-04-11 | Vialanguage, Inc. | Machine editing system incorporating dynamic rules database |
US20070073532A1 (en) * | 2005-09-29 | 2007-03-29 | Microsoft Corporation | Writing assistance using machine translation techniques |
Non-Patent Citations (2)
Title |
---|
ACROLINX: "Definition of post-editing rules for English, French, German and Japanese", ACCEPT AUTOMATED COMMUNITY CONTENT EDITING PORTAL, 26 August 2013 (2013-08-26), XP055231707, Retrieved from the Internet <URL:http://www.accept.unige.ch/Products/D_2_3_Post-editing_rules.pdf> [retrieved on 20151126] * |
PIERRETTE BOUILLON ET AL: "Definition of Post-Editing Rules for English, French, German and Japanese", ACCEPT AUTOMATED COMMUNITY CONTENT EDITING PORTAL, 30 June 2014 (2014-06-30), XP055231708, Retrieved from the Internet <URL:http://www.accept.unige.ch/Products/D-2-4-Definition-of-Post-editing-Rules.pdf> [retrieved on 20151126] * |
Also Published As
Publication number | Publication date |
---|---|
US9639522B2 (en) | 2017-05-02 |
US20160062981A1 (en) | 2016-03-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9639522B2 (en) | Methods and apparatus related to determining edit rules for rewriting phrases | |
JP7163355B2 (en) | Identification of tasks in messages | |
US10248718B2 (en) | Generating a domain ontology using word embeddings | |
US20180341871A1 (en) | Utilizing deep learning with an information retrieval mechanism to provide question answering in restricted domains | |
CN107247707B (en) | Enterprise association relation information extraction method and device based on completion strategy | |
US9864741B2 (en) | Automated collective term and phrase index | |
AU2016269573B2 (en) | Input entity identification from natural language text information | |
US8027948B2 (en) | Method and system for generating an ontology | |
CN107704512B (en) | Financial product recommendation method based on social data, electronic device and medium | |
US10102191B2 (en) | Propagation of changes in master content to variant content | |
RU2726728C2 (en) | Identification of query templates and associated aggregate statistics among search queries | |
US9817821B2 (en) | Translation and dictionary selection by context | |
US20160132501A1 (en) | Determining answers to interrogative queries using web resources | |
WO2014140955A1 (en) | Detecting and executing data re-ingestion to improve accuracy in nlp system | |
US20190220519A1 (en) | Generating output for presentation in response to user interface input, where the input and/or the output include chatspeak | |
US9336186B1 (en) | Methods and apparatus related to sentence compression | |
US11961045B2 (en) | Increasing dimensionality of data structures | |
AU2017201629B2 (en) | Identifying trends associated with topics from natural language text | |
JP2012155699A (en) | Method and apparatus for evaluation information extraction | |
US20190303437A1 (en) | Status reporting with natural language processing risk assessment | |
US20190012302A1 (en) | Annotations of textual segments based on user feedback | |
US20190019094A1 (en) | Determining suitability for presentation as a testimonial about an entity | |
CN113157888A (en) | Multi-knowledge-source-supporting query response method and device and electronic equipment | |
US20190018893A1 (en) | Determining tone differential of a segment | |
US20220343087A1 (en) | Matching service requester with service providers |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
121 | Ep: the epo has been informed by wipo that ep was designated in this application |
Ref document number: 15763176Country of ref document: EPKind code of ref document: A1 |
|
NENP | Non-entry into the national phase |
Ref country code: DE |
|
122 | Ep: pct application non-entry in european phase |
Ref document number: 15763176Country of ref document: EPKind code of ref document: A1 |
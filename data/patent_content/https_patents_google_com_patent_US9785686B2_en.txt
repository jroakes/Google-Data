US9785686B2 - Corroborating facts in electronic documents - Google Patents
Corroborating facts in electronic documents Download PDFInfo
- Publication number
- US9785686B2 US9785686B2 US14/616,537 US201514616537A US9785686B2 US 9785686 B2 US9785686 B2 US 9785686B2 US 201514616537 A US201514616537 A US 201514616537A US 9785686 B2 US9785686 B2 US 9785686B2
- Authority
- US
- United States
- Prior art keywords
- fact
- terms
- hypothetical
- query
- facts
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G06F17/30554—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/248—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/04—Inference or reasoning models
- G06N5/041—Abduction
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/23—Updating
- G06F16/2365—Ensuring data consistency and integrity
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/242—Query formulation
- G06F16/2425—Iterative querying; Query formulation based on the results of a preceding query
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24575—Query processing with adaptation to user needs using context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
- G06F16/3344—Query execution using natural language analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G06F17/30011—
-
- G06F17/30371—
-
- G06F17/30395—
-
- G06F17/30528—
-
- G06F17/30684—
-
- G06F17/30867—
Definitions
- This invention pertains in general to fact databases and, more particularly, to derivation and corroboration of facts for the databases.
- Web search engines may be unhelpful to users in this regard, as they generally do not provide a simple, succinct answer to factual queries such as the ones described above. Rather, web search engines provide to the user a list of web pages that are determined to match the query, and the user has to sort through the matching web pages to find the answer.
- search engines draw their facts from a single source, such as a particular encyclopedia. This restriction limits the types of questions that these engines can answer. For instance, a search engine based on an encyclopedia is unlikely to answer many questions concerning popular culture, such as questions about movies, songs or the like, and is also unlikely to answer many questions about products, services, retail and wholesale businesses and so on. If the set of sources used by such a search engine were to be expanded, however, such expansion might introduce the possibility of contradictory or ambiguous answers. Furthermore, as the universe of sources expands, information may be drawn from untrustworthy sources or sources of unknown reliability.
- Embodiments of the present invention address the problems described above and other problems by providing a method, system, and computer program product for identifying facts described by electronic documents.
- the method, system, and computer program product define a query, the query posing a question having an answer formed of terms from the electronic documents, and create one or more hypothetical facts in response to the query and the electronic documents. Each hypothetical fact represents a possible answer to the query.
- the hypothetical facts are corroborated using the electronic documents to identify a likely correct fact. The likely correct fact is presented as the answer to the query.
- FIG. 1 shows a system architecture adapted to manage a fact repository according to one embodiment.
- FIGS. 2( a )-2( d ) are block diagrams illustrating a data structure for facts within the repository of FIG. 1 according to some embodiments.
- FIG. 2( e ) is a block diagram illustrating an alternate data structure for facts and objects according to some embodiments.
- FIG. 3 is a high-level block diagram illustrating modules within a corroboration module according to one embodiment.
- FIG. 4 is a high-level block diagram illustrating modules within the hypothesis testing module of the corroboration module according to one embodiment.
- FIG. 5 is a flow chart illustrating steps performed by the corroboration module to present a likely correct fact.
- FIG. 6 is a flow chart illustrating steps performed by the hypothesis testing module according to one embodiment.
- FIG. 1 shows a system architecture 100 adapted to manage a fact repository 115 according to one embodiment.
- FIG. 1 shows components used to add facts into, and retrieve facts from the repository 115 .
- the system architecture 100 includes a network 104 , through which any number of document hosts 102 communicate with a data processing system 106 , along with any number of object requesters 152 , 154 .
- Document hosts 102 store electronic documents and provide access to documents.
- a document is comprised of any machine-readable data including any combination of text, graphics, multimedia content, etc.
- a document may be encoded in a markup language, such as Hypertext Markup Language (HTML), i.e., a web page, in a interpreted language (e.g., JavaScript) or in any other computer readable or executable format.
- HTML Hypertext Markup Language
- a document can include one or more hyperlinks to other documents.
- a typical document will include one or more facts within its content.
- a document stored in a document host 102 may be located and/or identified by a Uniform Resource Locator (URL), or Web address, or any other appropriate form of identification and/or location.
- URL Uniform Resource Locator
- a document host 102 is implemented by a computer system, and typically includes a server adapted to communicate over the network 104 via networking protocols (e.g., TCP/IP), as well as application and presentation protocols (e.g., HTTP, HTML, SOAP, D-HTML, Java).
- networking protocols e.g., TCP/IP
- application and presentation protocols e.g., HTTP, HTML, SOAP, D-HTML, Java.
- the documents stored by a host 102 are typically held in a file directory, a database, or other data repository.
- a host 102 can be implemented in any computing device (e.g., from a PDA or personal computer, a workstation, mini-computer, or mainframe, to a cluster or grid of computers), as well as in any processor architecture or operating system.
- Data processing system 106 includes one or more importers 108 , one or more janitors 110 , a build engine 112 , a service engine 114 , and the fact repository 115 (also called simply the “repository”).
- Importers 108 operate to process documents received from the document hosts 102 , read the data content of documents, and extract facts (as operationally and programmatically defined within the data processing system 106 ) from such documents.
- the importers 108 also determine the subject or subjects with which the facts are associated, and extract such facts into individual items of data, for storage in the repository 115 .
- there are different types of importers 108 for different types of documents for example, dependent on the format or document type.
- Janitors 110 operate to process facts extracted by importer 108 .
- This processing can include but is not limited to, data cleansing, object merging, and fact induction.
- Other types of janitors 110 may be implemented, depending on the types of data management functions desired, such as translation, compression, spelling or grammar correction, and the like.
- Various janitors 110 act on facts to normalize attribute names and values, and delete duplicate and near-duplicate facts so an object does not have redundant information. For example, we might find on one page that Britney Spears' birthday is “12/2/1981” while on another page that her date of birth is “Dec. 2, 1981.” Birthday and Date of birth might both be rewritten as “Birth Date” by one janitor and then another janitor might notice that 12/2/1981 and Dec. 2, 1981 are different forms of the same date. It would choose the preferred form, remove the other fact and combine the source lists for the two facts. As a result when you look at the source pages for this fact, on some you will find an exact match of the fact and on others text that is considered to be synonymous with the fact.
- Build engine 112 builds and manages the repository 115 .
- Service engine 114 is an interface for querying the repository 115 .
- Service engine 114 's main function is to process queries, score matching objects, and return them to the caller but it is also used by the janitors 110 .
- Repository 115 stores factual information extracted from a plurality of documents that are located on document hosts 102 .
- a document from which a particular fact may be extracted is a source document (or “source”) of that particular fact.
- source a source of a fact includes that fact (or a synonymous fact) within its contents.
- Repository 115 contains one or more facts.
- each fact is associated with exactly one object.
- One implementation for this association includes in each fact an object ID that uniquely identifies the object of the association.
- any number of facts may be associated with an individual object, by including the object ID for that object in the facts.
- objects themselves are not physically stored in the repository 115 , but rather are defined by the set or group of facts with the same associated object ID, as described below. Further details about facts in repository 115 are described below, in relation to FIGS. 2( a )-2( d ) .
- the components of the data processing system 106 will be distributed over multiple computers, communicating over a network.
- repository 115 may be deployed over multiple servers.
- the janitors 110 may be located on any number of different computers. For convenience of explanation, however, the components of the data processing system 106 are discussed as though they were implemented on a single computer.
- document hosts 102 are located on data processing system 106 instead of being coupled to data processing system 106 by a network.
- importer 108 may import facts from a database that is a part of or associated with data processing system 106 .
- FIG. 1 also includes components for accessing repository 115 on behalf of one or more object requesters 152 , 154 .
- Object requesters are entities that request objects from repository 115 .
- Object requesters 152 , 154 may be understood as clients of the system 106 , and can be implemented in any computer device or architecture.
- a first object requester 152 is located remotely from system 106
- a second object requester 154 is located in data processing system 106 .
- the blog may include a reference to an object whose facts are in repository 115 .
- An object requester 152 such as a browser displaying the blog will access data processing system 106 so that the information of the facts associated with the object can be displayed as part of the blog web page.
- janitor 110 or other entity considered to be part of data processing system 106 can function as object requester 154 , requesting the facts of objects from repository 115 .
- FIG. 1 shows that data processing system 106 includes a memory 107 and one or more processors 116 .
- Memory 107 includes importers 108 , janitors 110 , build engine 112 , service engine 114 , and requester 154 , each of which are implemented as instructions stored in memory 107 and executable by processor 116 .
- Memory 107 also includes repository 115 .
- Repository 115 can be stored in a memory of one or more computer systems or in a type of memory such as a disk.
- FIG. 1 also includes a computer readable medium 118 containing, for example, at least one of importers 108 , janitors 110 , build engine 112 , service engine 114 , requester 154 , and at least some portions of repository 115 .
- FIG. 1 also includes a computer readable medium 118 containing, for example, at least one of importers 108 , janitors 110 , build engine 112 , service engine 114 , requester 154 , and at
- data processing system 106 also includes one or more input/output devices 120 that allow data to be input and output to and from data processing system 106 .
- data processing system 106 also includes standard software components such as operating systems and the like and further includes standard hardware components not shown in the figure for clarity of example.
- the contents of the facts in the repository 115 are also indexed in index 127 .
- the index 127 maintains a term index, which maps terms to ⁇ object, fact, field, token ⁇ tuples, where “field” is, e.g., an attribute or value.
- the service engine 114 is adapted to receive keyword queries from clients such as object requestors 154 , and communicates with the index 127 to retrieve the facts that are relevant to user's search query. For a generic query containing one or more terms, the service engine 114 assumes the scope is at the object level. Thus, any object with one or more of the query terms somewhere (not necessarily on the same fact) will match the query for purposes of being ranked in the search results.
- the query syntax can also be used to limit results to only certain objects, attributes, and/or values.
- the ranking (score) of an object is a linear combination of relevance scores for each of the facts.
- the relevance score for each fact is based on whether the fact includes one or more query terms (a hit) in either the attribute or value portion of the fact.
- Each hit is scored based on the frequency of the term that is hit, with more common terms getting lower scores, and rarer terms getting higher scores (e.g., using a TD-IDF based term weighting model).
- the fact score is then adjusted based on additional factors.
- each fact's score is also adjusted by its associated confidence measure and by its importance measure. Since each fact is independently scored, the facts most relevant and important to any individual query can be determined, and selected. In one embodiment, a selected number (e.g., 5) of the top scoring facts are retrieved in response to query.
- FIG. 2( a ) shows an example format of a data structure for facts within repository 115 according to some embodiments.
- the repository 115 includes facts 204 .
- Each fact 204 includes a unique identifier for that fact, such as a fact ID 210 .
- Each fact 204 includes at least an attribute 212 and a value 214 .
- a fact associated with an object representing George Washington may include an attribute of “date of birth” and a value of “Feb. 22, 1732.”
- all facts are stored as alphanumeric characters since they are extracted from web pages.
- facts also can store binary data values.
- Other embodiments, however, may store fact values as mixed types, or in encoded formats.
- each fact is associated with an object ID 209 that identifies the object that the fact describes.
- object ID 209 identifies the object that the fact describes.
- objects are not stored as separate data entities in memory.
- the facts associated with an object contain the same object ID, but no physical object exists.
- objects are stored as data entities in memory, and include references (for example, pointers or IDs) to the facts associated with the object.
- the logical data structure of a fact can take various forms; in general, a fact is represented by a tuple that includes a fact ID, an attribute, a value, and an object ID.
- the storage implementation of a fact can be in any underlying physical data structure.
- FIG. 2( b ) shows an example of facts having respective fact IDs of 10 , 20 , and 30 in repository 115 .
- Facts 10 and 20 are associated with an object identified by object ID “ 1 .”
- Fact 10 has an attribute of “Name” and a value of “China.”
- Fact 20 has an attribute of “Category” and a value of “Country.”
- the object identified by object ID “ 1 ” has a name fact 205 with a value of “China” and a category fact 206 with a value of “Country.”
- Fact 30 208 has an attribute of “Property” and a value of “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- the object identified by object ID “ 2 ” has a property fact with a fact ID of 30 and a value of “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- each fact has one attribute and one value.
- the number of facts associated with an object is not limited; thus while only two facts are shown for the “China” object, in practice there may be dozens, even hundreds of facts associated with a given object.
- the value fields of a fact need not be limited in size or content. For example, a fact about the economy of “China” with an attribute of “Economy” could have a value including several paragraphs of text, numbers, perhaps even tables of figures. This content can be formatted, for example, in a markup language. For example, a fact having an attribute “original html” might have a value of the original html text taken from the source document.
- FIG. 2( b ) shows the explicit coding of object ID, fact ID, attribute, and value
- content of the fact can be implicitly coded as well (e.g., the first field being the object ID, the second field being the fact ID, the third field being the attribute, and the fourth field being the value).
- Other fields include but are not limited to: the language used to state the fact (English, etc.), how important the fact is, the source of the fact, a confidence value for the fact, and so on.
- FIG. 2( c ) shows an example object reference table 210 that is used in some embodiments. Not all embodiments include an object reference table.
- the object reference table 210 functions to efficiently maintain the associations between object IDs and fact IDs. In the absence of an object reference table 210 , it is also possible to find all facts for a given object ID by querying the repository to find all facts with a particular object ID. While FIGS. 2( b ) and 2( c ) illustrate the object reference table 210 with explicit coding of object and fact IDs, the table also may contain just the ID values themselves in column or pair-wise arrangements.
- FIG. 2( d ) shows an example of a data structure for facts within repository 115 , according to some embodiments of the invention showing an extended format of facts.
- the fields include an object reference link 216 to another object.
- the object reference link 216 can be an object ID of another object in the repository 115 , or a reference to the location (e.g., table row) for the object in the object reference table 210 .
- the object reference link 216 allows facts to have as values other objects. For example, for an object “United States,” there may be a fact with the attribute of “president” and the value of “George W. Bush,” with “George W. Bush” being an object having its own facts in repository 115 .
- the value field 214 stores the name of the linked object and the link 216 stores the object identifier of the linked object.
- this “president” fact would include the value 214 of “George W. Bush”, and object reference link 216 that contains the object ID for the for “George W. Bush” object.
- facts 204 do not include a link field 216 because the value 214 of a fact 204 may store a link to another object.
- Each fact 204 also may include one or more metrics 218 .
- a metric provides an indication of the some quality of the fact.
- the metrics include a confidence level and an importance level.
- the confidence level indicates the likelihood that the fact is correct.
- the importance level indicates the relevance of the fact to the object, compared to other facts for the same object.
- the importance level may optionally be viewed as a measure of how vital a fact is to an understanding of the entity or concept represented by the object.
- Each fact 204 includes a list of one or more sources 220 that include the fact and from which the fact was extracted.
- Each source may be identified by a Uniform Resource Locator (URL), or Web address, or any other appropriate form of identification and/or location, such as a unique document identifier.
- URL Uniform Resource Locator
- the facts illustrated in FIG. 2( d ) include an agent field 222 that identifies the importer 108 that extracted the fact.
- the importer 108 may be a specialized importer that extracts facts from a specific source (e.g., the pages of a particular web site, or family of web sites) or type of source (e.g., web pages that present factual information in tabular form), or an importer 108 that extracts facts from free text in documents throughout the Web, and so forth.
- a name fact 207 is a fact that conveys a name for the entity or concept represented by the object ID.
- a name fact 207 includes an attribute 224 of “name” and a value, which is the name of the object. For example, for an object representing the country Spain, a name fact would have the value “Spain.”
- a name fact 207 being a special instance of a general fact 204 , includes the same fields as any other fact 204 ; it has an attribute, a value, a fact ID, metrics, sources, etc.
- the attribute 224 of a name fact 207 indicates that the fact is a name fact, and the value is the actual name.
- the name may be a string of characters.
- An object ID may have one or more associated name facts, as many entities or concepts can have more than one name. For example, an object ID representing Spain may have associated name facts conveying the country's common name “Spain” and the official name “Kingdom of Spain.” As another example, an object ID representing the U.S. Patent and Trademark Office may have associated name facts conveying the agency's acronyms “PTO” and “USPTO” as well as the official name “United States Patent and Trademark Office.” If an object does have more than one associated name fact, one of the name facts may be designated as a primary name and other name facts may be designated as secondary names, either implicitly or explicitly.
- a property fact 208 is a fact that conveys a statement about the entity or concept represented by the object ID.
- Property facts are generally used for summary information about an object.
- a property fact 208 being a special instance of a general fact 204 , also includes the same parameters (such as attribute, value, fact ID, etc.) as other facts 204 .
- the attribute field 226 of a property fact 208 indicates that the fact is a property fact (e.g., attribute is “property”) and the value is a string of text that conveys the statement of interest.
- the value of a property fact may be the text string “Bill Clinton was the 42nd President of the United States from 1993 to 2001.”
- Some object IDs may have one or more associated property facts while other objects may have no associated property facts.
- the data structure of the repository 115 may take on other forms. Other fields may be included in facts and some of the fields described above may be omitted.
- each object ID may have additional special facts aside from name facts and property facts, such as facts conveying a type or category (for example, person, place, movie, actor, organization, etc.) for categorizing the entity or concept represented by the object ID.
- an object's name(s) and/or properties may be represented by special records that have a different format than the general facts records 204 .
- null object As described previously, a collection of facts is associated with an object ID of an object.
- An object may become a null or empty object when facts are disassociated from the object.
- a null object can arise in a number of different ways.
- One type of null object is an object that has had all of its facts (including name facts) removed, leaving no facts associated with its object ID.
- Another type of null object is an object that has all of its associated facts other than name facts removed, leaving only its name fact(s).
- the object may be a null object only if all of its associated name facts are removed.
- a null object represents an entity or concept for which the data processing system 106 has no factual information and, as far as the data processing system 106 is concerned, does not exist.
- facts of a null object may be left in the repository 115 , but have their object ID values cleared (or have their importance to a negative value). However, the facts of the null object are treated as if they were removed from the repository 115 . In some other embodiments, facts of null objects are physically removed from repository 115 .
- FIG. 2( e ) is a block diagram illustrating an alternate data structure 290 for facts and objects according to some embodiments.
- an object 290 contains an object ID 292 and references or points to facts 294 .
- Each fact includes a fact ID 295 , an attribute 297 , and a value 299 .
- an object 290 actually exists in memory 107 .
- FIG. 3 is a high-level block diagram illustrating modules within a corroboration module 300 according to one embodiment.
- the corroboration module 300 analyzes electronic documents on the document hosts 102 and/or stored elsewhere on the network 104 to identify hypothetical facts contained therein that might answer a query.
- the corroboration module 300 corroborates the hypothetical facts using the documents to identify hypothetical facts that are likely correct.
- the likely correct facts are presented on a web page, stored in the repository 115 to support future fact queries, and/or utilized for other purposes.
- the corroboration module 300 is located on an object requestor 152 , 154 as described with respect to FIG. 1 . In other embodiments, the corroboration module 300 is implemented as a janitor 110 or is located on another data processing system in communication with the repository 115 .
- the term “module” refers to computer program logic and/or data for providing the specified functionality.
- a module can be implemented in hardware, firmware, and/or software. Some embodiments have different and/or additional modules than those shown in FIG. 3 . Moreover, the functionalities can be distributed among the modules in a different manner than described here.
- a query interface module 310 defines a search query having a set of query terms.
- the query interface module 310 can define the query based on an explicit query provided by a user. For example, the query interface module 310 can receive a query that the user enters into a text box on a page of a web site. Likewise, the query interface module 310 can define a query based on other user actions and/or in response to other data, such as queries derived based on a user's web browsing history. In some embodiments, the query interface module 310 defines queries in real time, as they are provided by users. In other embodiments, the query interface module 310 defines a set of queries based on historical data. For example, the query interface module 310 can receive a set of historical queries provided by users over a time period (e.g., the prior week), and/or based on other historical data.
- a time period e.g., the prior week
- the defined query poses a question having an answer composed of terms from the electronic documents.
- the query interface module 310 defines the query “Who did William Frawley play”?
- a correct answer to this query is the name “Fred Mertz,” as that is the name of the character played by William Frawley in the TV series “I Love Lucy,” his most famous role.
- Another correct answer is “Bub,” the role he played on “My Three Sons.”
- a query parsing module 312 parses the defined query to identify possible attribute names and/or values contained within it.
- the query parsing module 312 filters out noise words. Noise words are commonly occurring words that do not serve to limit the query. Examples of noise words include “a,” “and,” “is,” and “the,” although the specific words filtered by the parsing module 312 depend upon the embodiment.
- the query parsing module 312 searches the repository 115 for objects, facts, or attributes that correspond to the filtered query terms.
- the query parsing module 312 identifies an object having a “name” attribute with the value “William Frawley” and an attribute type called “play.”
- the William Frawley object need not have an existing “play” attribute; rather, the object need only be capable of having such an attribute to match the query.
- the query parsing module 312 identifies the fact “name: William Frawley” and the attribute name “play” based on the defined query.
- a hypothesis generation module 314 generates a set of hypothetical facts that satisfy the query.
- the hypothesis generation module 314 identifies a set of electronic documents that have terms corresponding to the query. For example, one embodiment of the module 314 executes a search for web pages on the Internet that contain the filtered terms from the query.
- the hypothesis generation module 314 analyzes the set of corresponding documents to identify a set of terms corresponding to the query. In one embodiment, the hypothesis generation module 314 identifies snippets of text surrounding the query terms in the documents. The hypothesis generation module 314 filters the noise words out of the text snippets, and identifies the terms (i.e., single words) that occur most frequently in the snippets.
- the hypothesis generation module 314 identifies a set of common terms related to the query. Each term fall into one of three categories: 1) the term is not an answer to the query; 2) the term is the answer to the query; or 3) the term is a partial answer to the query. For purposes of this description, assume that the terms identified by the hypothesis generation module 314 in response to the query “who did William Frawley play” include “Vivian” (wrong), “Love” (wrong), and “Fred” (partial).
- the hypothesis generation module 314 creates an object having any real facts from the repository that matched the query, and a set of hypothetical facts based on the attributes from the repository that matched the query and the identified common terms.
- each hypothetical fact includes an attribute that matched the query, and a single word common term.
- the object has facts as follows:
- the “name” fact is a real fact extracted from the repository
- the “Play” facts are hypothetical facts having values from the terms identified by the hypothesis generation module 314 from the document snippets.
- the facts having the “Play” attribute represent hypothetical answers to the question posed by the query.
- the hypothesis testing module 316 receives the object created by the hypothesis generation module 314 and tests the hypothetical facts contained therein to determine whether any of them are correct or partial answers to the query. In one embodiment, the hypothesis testing module 316 performs the test by determining how many documents support the facts, and/or expanded versions of the hypothetical facts. A hypothetical fact that is supported by enough documents to surpass a threshold, and not contained within another hypothetical fact having at least the same number of supporting documents, is treated as a likely correct fact and an answer to the query.
- a fact presentation module 318 presents the identified one or more likely correct facts. This presentation can take a variety of forms depending upon the embodiment. In one embodiment, the fact presentation module 318 presents a likely correct fact to the user that provided the search query by, for example, displaying it on a web page provided to the user. In another embodiment, the fact presentation module 318 presents the fact by storing it in the repository 115 . In the example described here, there is an existing object in the repository 115 for William Frawley. The fact presentation module 318 therefore adds the facts “Play: ‘Fred Mertz’” and “Play: ‘Bub’” to that object so they can be used to answer future queries.
- an embodiment of the fact presentation module 318 creates a new object having the true and likely correct facts from the object created by the hypothesis generation module 314 .
- the likely correct facts are not added directly to the repository 115 , but instead are filtered for accuracy.
- the corroborated facts can be added to a queue that allows the facts to be examined by human administrators before being added to the repository 115 .
- FIG. 4 is a high-level block diagram illustrating modules within the hypothesis testing module 316 according to one embodiment. Some embodiments have different and/or additional modules than those shown in FIG. 4 . Moreover, the functionalities can be distributed among the modules in a different manner than described here.
- a document identification module 410 receives an object having at least one hypothetical fact and identifies a set of documents from the document hosts 102 or elsewhere that are relevant to the object.
- the documents on the document hosts 102 examined by the document identification module 410 are drawn from particular domains, such as web pages known to describe facts about certain subjects. In other embodiments, the documents are not drawn from any particular domain.
- a document is relevant to an object if the document contains a term, such as an attribute name or value, from the object.
- a term such as an attribute name or value
- the document identification module 410 identifies a document as relevant if it includes “Play” or “Fred.”
- the document identification module 410 typically identifies a large set of documents. Some documents might include terms from many of facts, while others will include a term from only one fact.
- a fact research module 412 determines whether a document in the set identified by the document identification module 410 supports a particular true or hypothetical fact from an object. In one embodiment, the fact research module 412 determines whether a document mentions both the attribute (e.g., “Play”) and value (e.g., “Fred Mertz”) of the fact. If the document mentions a fact, it is added to the source list for the fact because the document supports (i.e., corroborates) the fact.
- the attribute e.g., “Play”
- value e.g., “Fred Mertz”
- a fact expansion module 414 analyzes a document that supports a hypothetical fact and attempts to expand the number of terms in the value of the hypothetical fact. A value is expanded by examining the document in which it appears for contextual clues supporting an expansion. An embodiment of the fact expansion module 414 analyzes the HTML or other markup language of the document to determine whether a value mentioned in it can be expanded to include terms adjacent to the value. A value is expanded to include the terms within the smallest enclosing intertag (e.g., that is between the same set of HTML “open” and “close” tags).
- the terms “Fred” and “Mertz” are within the ⁇ font> tags.
- the fact expansion module 414 when operating on a fact with the value “Fred,” will expand the value to “Fred Mertz” because the term “Mertz” is within the smallest enclosing set of intertags.
- One embodiment of the fact expansion module 414 limits the number of terms in an expanded fact based on a threshold. For example, the fact expansion module 414 can limit the value of a fact to a maximum of 20 terms.
- Some embodiments of the fact expansion module 414 utilize contextual clues other than intertags to expand the values of hypothetical facts. For example, one embodiment identifies attribute names and values that appear in tables of the document. An attribute name appearing in a left-hand column of row table is assumed to have a corresponding value in an adjacent column. The fact expansion module 414 expands the value of the hypothetical fact to include the contents of the adjacent column.
- a fact evaluation module 416 evaluates a set of one or more hypothetical facts and determines whether any of the facts are likely correct. An embodiment of the fact evaluation module 416 declares a fact likely correct if the number of documents supporting the fact surpasses a threshold and the value of the fact is not contained within another fact having at least the same number of supporting documents, as described above.
- FIG. 5 is a flow chart illustrating steps performed by the corroboration module 300 to present a likely correct fact according to one embodiment.
- Those of skill in the art will recognize that different embodiments can perform different and/or additional steps than the ones shown in FIG. 5 . Likewise, the steps can be performed in different orders.
- a query is defined 510 .
- the query can be defined based on real-time user input, based on historical queries received by a search engine, or through other techniques.
- the query is parsed 512 to remove noise words, and to identify any objects, facts, or attributes in the repository 115 matching the remaining terms.
- the corroboration module 300 analyzes documents on the document hosts 102 to identify 514 common terms related to the query.
- the corroboration module 300 creates 516 an object having real and hypothetical facts based on the identified objects, facts, and attributes and the common terms related to the query. These values of the hypothetical facts are expanded and corroborated 518 using electronic documents to identify facts that are most likely correct. As described above, in one embodiment a fact is most likely correct if it is not contained within another fact having at least the same number of supporting documents, and the number of supporting documents surpasses a threshold. The likely correct facts are presented 520 , and one embodiment of the corroboration module 300 adds 522 the selected fact to the repository 115 .
- FIG. 6 is a flow chart illustrating steps performed by the hypothesis testing module 316 according to one embodiment.
- the steps illustrated in FIG. 6 generally correspond to the “corroborate hypothetical facts” 518 step of FIG. 5 , although can also be performed by other steps of FIG. 5 .
- Those of skill in the art will recognize that different embodiments can perform different and/or additional steps than the ones shown in FIG. 6 . Likewise, the steps can be performed in different orders.
- the hypothesis testing module 316 receives an object containing one or more hypothetical facts.
- the module 316 searches the documents on the document hosts 102 to identify 610 documents such as web pages that are relevant to the object. For 612 each identified document, and for each hypothetical fact, the hypothesis testing module 316 determines whether the document under consideration mentions the attribute and the value of the fact. If a hypothetical fact is mentioned by a document, the module 316 adds the document to the list of sources for the fact (if it is not already listed). The hypothesis testing module 316 also determines 616 whether it is possible to expand the value of a fact based on contextual clues in the document.
- the module creates 618 a new hypothetical fact having the expanded value (and the same attribute as the original fact on which it is based). This new, expanded, hypothetical fact is stored in the object and analyzed in the same manner as the other facts within the object.
- the hypothesis testing module 316 makes 620 two passes through the identified documents to ensure that each hypothetical fact generated in the first pass has the opportunity to be corroborated by each document.
- the hypothesis testing module 316 outputs 622 the highest-ranked hypothetical facts.
- the highest ranking facts are those that have enough supporting documents to surpass a threshold, and are not contained within another fact having at least the same level of support.
- an embodiment of the corroboration module 300 analyzes defined queries in view of corroborating documents to identify likely correct facts that answer the queries. These likely correct facts are saved in a repository 115 in one embodiment, from where they can be used to answer subsequent queries.
Abstract
Description
Fact | Supporting Documents | ||
Play: “Vivian” | 15 | ||
Play: “Vivian Vance” | 10 | ||
Play: “Fred” | 35 | ||
Play: “Fred Mertz” | 35 | ||
Play: “Bub” | 33 | ||
Also assume that the threshold for a hypothetical fact to be considered likely correct is 30 supporting documents. In this example, the facts having the values “Vivian” and “Vivian Vance” fall below the threshold. The fact having the value “Fred” has enough support to surpass the threshold, but is contained within another fact “Fred Mertz” having the same level of support. Thus, the “Fred Mertz” fact is treated as likely correct while the “Fred” fact is not. The “Bub” fact also has enough support to be treated as likely correct.
... | ||
<tr> | ||
<td>played</td> | ||
<td><font color=blue>Fred Mertz</font><td> | ||
</tr> | ||
... | ||
In this example, the terms “Fred” and “Mertz” are within the <font> tags. Thus, the
Claims (30)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/616,537 US9785686B2 (en) | 2006-09-28 | 2015-02-06 | Corroborating facts in electronic documents |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/536,504 US8954412B1 (en) | 2006-09-28 | 2006-09-28 | Corroborating facts in electronic documents |
US14/616,537 US9785686B2 (en) | 2006-09-28 | 2015-02-06 | Corroborating facts in electronic documents |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/536,504 Continuation US8954412B1 (en) | 2006-09-28 | 2006-09-28 | Corroborating facts in electronic documents |
Publications (2)
Publication Number | Publication Date |
---|---|
US20150317367A1 US20150317367A1 (en) | 2015-11-05 |
US9785686B2 true US9785686B2 (en) | 2017-10-10 |
Family
ID=52443718
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/536,504 Active 2032-04-28 US8954412B1 (en) | 2006-09-28 | 2006-09-28 | Corroborating facts in electronic documents |
US14/616,537 Active US9785686B2 (en) | 2006-09-28 | 2015-02-06 | Corroborating facts in electronic documents |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/536,504 Active 2032-04-28 US8954412B1 (en) | 2006-09-28 | 2006-09-28 | Corroborating facts in electronic documents |
Country Status (1)
Country | Link |
---|---|
US (2) | US8954412B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170220650A1 (en) * | 2016-01-29 | 2017-08-03 | Integral Search International Ltd. | Patent searching method in connection to matching degree |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9311404B2 (en) * | 2011-09-08 | 2016-04-12 | International Business Machines Corporation | Obscuring search results to increase traffic to network sites |
CN103714084B (en) | 2012-10-08 | 2018-04-03 | 腾讯科技（深圳）有限公司 | The method and apparatus of recommendation information |
US10176264B2 (en) | 2015-12-01 | 2019-01-08 | Microsoft Technology Licensing, Llc | Generating topic pages based on data sources |
US10263877B1 (en) | 2016-08-12 | 2019-04-16 | Pinterest, Inc. | Generating collections of sets based on user provided annotations |
US10303771B1 (en) * | 2018-02-14 | 2019-05-28 | Capital One Services, Llc | Utilizing machine learning models to identify insights in a document |
US11210288B2 (en) | 2020-05-12 | 2021-12-28 | Coupang Corp. | Systems and methods for reducing database query latency |
US20220253470A1 (en) * | 2021-02-05 | 2022-08-11 | SparkCognition, Inc. | Model-based document search |
Citations (155)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4888690A (en) | 1985-01-11 | 1989-12-19 | Wang Laboratories, Inc. | Interactive error handling means in database management |
US4899292A (en) | 1988-03-02 | 1990-02-06 | Image Storage/Retrieval Systems, Inc. | System for storing and retrieving text and associated graphics |
US5010478A (en) | 1986-04-11 | 1991-04-23 | Deran Roger L | Entity-attribute value database system with inverse attribute for selectively relating two different entities |
US5202982A (en) | 1990-03-27 | 1993-04-13 | Sun Microsystems, Inc. | Method and apparatus for the naming of database component files to avoid duplication of files |
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5528550A (en) | 1993-05-28 | 1996-06-18 | Texas Instruments Incorporated | Apparatus, systems and methods for implementing memory embedded search arithmetic logic unit |
US5528549A (en) | 1993-05-28 | 1996-06-18 | Texas Instruments Incorporated | Apparatus, systems and methods for distributed signal processing |
US5544051A (en) | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5664109A (en) | 1995-06-07 | 1997-09-02 | E-Systems, Inc. | Method for extracting pre-defined data items from medical service records generated by health care providers |
US5778378A (en) | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US5815415A (en) | 1996-01-19 | 1998-09-29 | Bentley Systems, Incorporated | Computer system for portable persistent modeling |
US5832479A (en) | 1992-12-08 | 1998-11-03 | Microsoft Corporation | Method for compressing full text indexes with document identifiers and location offsets |
US5870739A (en) | 1996-09-20 | 1999-02-09 | Novell, Inc. | Hybrid query apparatus and method |
US5905980A (en) | 1996-10-31 | 1999-05-18 | Fuji Xerox Co., Ltd. | Document processing apparatus, word extracting apparatus, word extracting method and storage medium for storing word extracting program |
US5938717A (en) | 1996-03-04 | 1999-08-17 | Laser Technology, Inc. | Speed detection and image capture system for moving vehicles |
US5946692A (en) | 1997-05-08 | 1999-08-31 | At & T Corp | Compressed representation of a data base that permits AD HOC querying |
JPH11265400A (en) | 1998-03-13 | 1999-09-28 | Omron Corp | Information processor, its method, network system, and recording medium |
US5963940A (en) * | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US6014661A (en) | 1996-05-06 | 2000-01-11 | Ivee Development Ab | System and method for automatic analysis of data bases and for user-controlled dynamic querying |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6038560A (en) | 1997-05-21 | 2000-03-14 | Oracle Corporation | Concept knowledge base search and retrieval system |
US6101515A (en) | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US6105020A (en) | 1999-10-11 | 2000-08-15 | International Business Machines Corporation | System and method for identifying and constructing star joins for execution by bitmap ANDing |
US6105030A (en) | 1998-02-27 | 2000-08-15 | Oracle Corporation | Method and apparatus for copying data that resides in a database |
US6192357B1 (en) | 1998-11-03 | 2001-02-20 | Platinum Technology, Inc. | Method and apparatus for optimizing query generation by selectively utilizing attributes or key values |
US6216138B1 (en) | 1994-04-22 | 2001-04-10 | Brooks Automation Inc. | Computer interface system for automatically generating graphical representations of computer operations linked together according to functional relationships |
US6222540B1 (en) | 1997-11-21 | 2001-04-24 | Portola Dimensional Systems, Inc. | User-friendly graphics generator including automatic correlation |
US6249784B1 (en) | 1999-05-19 | 2001-06-19 | Nanogen, Inc. | System and method for searching and processing databases comprising named annotated text strings |
US6263335B1 (en) * | 1996-02-09 | 2001-07-17 | Textwise Llc | Information extraction system and method using concept-relation-concept (CRC) triples |
US6263328B1 (en) | 1999-04-09 | 2001-07-17 | International Business Machines Corporation | Object oriented query model and process for complex heterogeneous database queries |
US20010016828A1 (en) | 1998-03-09 | 2001-08-23 | Junglee Corporation | Method and system for integrating transaction mechanisms over multiple internet sites |
US6304864B1 (en) * | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
US6311189B1 (en) | 1998-03-11 | 2001-10-30 | Altavista Company | Technique for matching a query to a portion of media |
US6326962B1 (en) | 1996-12-23 | 2001-12-04 | Doubleagent Llc | Graphic user interface for database system |
US6327574B1 (en) | 1998-07-07 | 2001-12-04 | Encirq Corporation | Hierarchical models of consumer attributes for targeting content in a privacy-preserving manner |
US20020010909A1 (en) | 1999-10-05 | 2002-01-24 | Dietrich Charisius | Methods and systems for finding and displaying linked objects |
US6377943B1 (en) | 1999-01-20 | 2002-04-23 | Oracle Corp. | Initial ordering of tables for database queries |
US20020055954A1 (en) | 2000-08-01 | 2002-05-09 | Matthias Breuer | Methods and systems for inputting data into spreadsheet documents |
US20020065814A1 (en) | 1997-07-01 | 2002-05-30 | Hitachi, Ltd. | Method and apparatus for searching and displaying structured document |
US20020065815A1 (en) | 2000-10-04 | 2002-05-30 | Xcelerix, Inc. | Systems and methods for searching a database |
JP2002157276A (en) | 2000-11-16 | 2002-05-31 | Hitachi Software Eng Co Ltd | Method and system for supporting solution of problem |
US20020128818A1 (en) | 1996-12-02 | 2002-09-12 | Ho Chi Fai | Method and system to answer a natural-language question |
US20020154175A1 (en) | 2001-01-04 | 2002-10-24 | James Abello | System and method for visualizing massive multi-digraphs |
US6480194B1 (en) | 1996-11-12 | 2002-11-12 | Silicon Graphics, Inc. | Computer-related method, system, and program product for controlling data visualization in external dimension(s) |
US20020173984A1 (en) | 2000-05-22 | 2002-11-21 | Robertson James A. | Method and system for implementing improved containers in a global ecosystem of interrelated services |
JP2002540506A (en) | 1999-03-19 | 2002-11-26 | アスク ジーヴス インコーポレイテッド | Glamor template query system |
US20030005036A1 (en) | 2001-04-06 | 2003-01-02 | Michael Mitzenmacher | Distributed, compressed Bloom filter Web cache server |
US6519631B1 (en) | 1999-08-13 | 2003-02-11 | Atomica Corporation | Web-based information retrieval |
US6529900B1 (en) | 1999-01-14 | 2003-03-04 | International Business Machines Corporation | Method and apparatus for data visualization |
US20030046288A1 (en) | 2001-08-31 | 2003-03-06 | Severino Donna M. | Method and apparatus for data storage and retrieval |
US20030069880A1 (en) | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20030097357A1 (en) | 2000-05-18 | 2003-05-22 | Ferrari Adam J. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US20030115485A1 (en) | 2001-12-14 | 2003-06-19 | Milliken Walter Clark | Hash-based systems and methods for detecting, preventing, and tracing network worms and viruses |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US20030120659A1 (en) | 2000-03-20 | 2003-06-26 | Sridhar Mandayam Anandampillai | Systems for developing websites and methods therefor |
US20030120373A1 (en) | 2001-12-26 | 2003-06-26 | Eames John D. | System and method for analyzing controlling forming sections of a paper machine in operation |
US20030120644A1 (en) | 2001-12-17 | 2003-06-26 | International Business Machines Corporation | Method, apparatus, and computer program product for locating data in large datasets |
US6606659B1 (en) | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US6609123B1 (en) | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US20030182171A1 (en) | 2002-03-19 | 2003-09-25 | Marc Vianello | Apparatus and methods for providing career and employment services |
US6629097B1 (en) | 1999-04-28 | 2003-09-30 | Douglas K. Keith | Displaying implicit associations among items in loosely-structured data sets |
JP2003281173A (en) | 2002-03-22 | 2003-10-03 | Toshiba Corp | Information collection system, information collecting method and program for causing computer to collect information |
US20030195872A1 (en) | 1999-04-12 | 2003-10-16 | Paul Senn | Web-based information content analyzer and information dimension dictionary |
US6643641B1 (en) | 2000-04-27 | 2003-11-04 | Russell Snyder | Web search engine with graphic snapshots |
US20030208665A1 (en) | 2002-05-01 | 2003-11-06 | Jih-Kwon Peir | Reducing data speculation penalty with early cache hit/miss prediction |
US20030208486A1 (en) | 2002-04-25 | 2003-11-06 | International Machines Business Machines | Dynamic end user specific customization of an application's physical data layer through a data repository abstraction layer |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US20040015566A1 (en) | 2002-07-19 | 2004-01-22 | Matthew Anderson | Electronic item management and archival system and method of operating the same |
US20040030731A1 (en) | 2002-04-03 | 2004-02-12 | Liviu Iftode | System and method for accessing files in a network |
US20040107125A1 (en) | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US20040122844A1 (en) | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20040123240A1 (en) | 2002-12-20 | 2004-06-24 | International Business Machines Corporation | Automatic completion of dates |
US20040122846A1 (en) | 2002-12-19 | 2004-06-24 | Ibm Corporation | Fact verification system |
US20040125137A1 (en) | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
US6772150B1 (en) | 1999-12-10 | 2004-08-03 | Amazon.Com, Inc. | Search query refinement using related search phrases |
US20040167909A1 (en) | 2002-12-06 | 2004-08-26 | Attensity Corporation | Methods and products for integrating mixed format data |
US6801548B1 (en) | 2000-06-15 | 2004-10-05 | Cisco Technology, Inc. | Channel ordering for communication signals split for matrix switching |
US20040220904A1 (en) | 2003-04-30 | 2004-11-04 | International Business Machines Corporation | Information retrieval system and method using index ANDing for improving performance |
US20040236655A1 (en) | 2003-05-19 | 2004-11-25 | Pacific Edge Software, Inc. | Method and system for object-oriented management of multi-dimensional data |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20040255237A1 (en) | 2003-06-10 | 2004-12-16 | Simon Tong | Document search engine including highlighting of confident results |
US20040260714A1 (en) | 2003-06-20 | 2004-12-23 | Avijit Chatterjee | Universal annotation management system |
WO2004114163A2 (en) | 2003-02-19 | 2004-12-29 | Insightful Corporation | Method and system for enhanced data searching |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050022009A1 (en) | 2003-06-05 | 2005-01-27 | Aguilera Macros K. | System and method for preventing replay attacks |
US6850896B1 (en) | 1999-10-28 | 2005-02-01 | Market-Touch Corporation | Method and system for managing and providing sales data using world wide web |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050039033A1 (en) | 2003-07-25 | 2005-02-17 | Activeviews, Inc. | Method and system for building a report for execution against a data store |
US20050050016A1 (en) | 2003-09-02 | 2005-03-03 | International Business Machines Corporation | Selective path signatures for query processing over a hierarchical tagged data structure |
US20050055327A1 (en) | 2003-09-08 | 2005-03-10 | International Business Machines Corporation | Uniform search system and method for selectively sharing distributed access-controlled documents |
US20050060277A1 (en) | 2003-09-15 | 2005-03-17 | Zlatanov Teodore Zlatkov | Computer systems and methods for platform independent presentation design |
US20050057566A1 (en) | 2003-09-11 | 2005-03-17 | International Business Machines Corporation | Rich graphic visualization generation from abstract data representation |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050076012A1 (en) | 2003-09-23 | 2005-04-07 | Udi Manber | Personalized searchable library with highlighting capabilities |
US20050086222A1 (en) | 2003-10-16 | 2005-04-21 | Wang Ji H. | Semi-automatic construction method for knowledge base of encyclopedia question answering system |
US20050086520A1 (en) | 2003-08-14 | 2005-04-21 | Sarang Dharmapurikar | Method and apparatus for detecting predefined signatures in packet payload using bloom filters |
US6885990B1 (en) | 1999-05-31 | 2005-04-26 | Nippon Telegraph And Telephone Company | Speech recognition based on interactive information retrieval scheme using dialogue control to reduce user stress |
US20050108630A1 (en) | 2003-11-19 | 2005-05-19 | Wasson Mark D. | Extraction of facts from text |
US20050120004A1 (en) | 2003-10-17 | 2005-06-02 | Stata Raymond P. | Systems and methods for indexing content for fast and scalable retrieval |
US6928436B2 (en) | 2002-02-28 | 2005-08-09 | Ilog Sa | Interactive generation of graphical visualizations of large data structures |
US20050187898A1 (en) | 2004-02-05 | 2005-08-25 | Nec Laboratories America, Inc. | Data Lookup architecture |
US20050216464A1 (en) | 2004-03-27 | 2005-09-29 | Microsoft Corporation | Automated authoring tool and method to facilitate inclusion of maps and other geographical data into travelogues |
US20050219929A1 (en) | 2004-03-30 | 2005-10-06 | Navas Julio C | Method and apparatus achieving memory and transmission overhead reductions in a content routing network |
US20050217052A1 (en) | 2004-03-11 | 2005-10-06 | Baskerville Taurris D | Bracket assembly |
US6961723B2 (en) | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20050256825A1 (en) | 2003-06-20 | 2005-11-17 | International Business Machines Corporation | Viewing annotations across multiple applications |
US6968343B2 (en) | 2000-09-01 | 2005-11-22 | Borland Software Corporation | Methods and systems for integrating process modeling and project planning |
US20050268212A1 (en) | 2004-05-28 | 2005-12-01 | Michael Dagel | System, apparatus, and method for desktop-based creation and publication of a periodic community newsletter |
US20060004851A1 (en) | 2004-07-02 | 2006-01-05 | Graphlogic Inc. | Object process graph relational database interface |
US20060020582A1 (en) | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | Method and system for processing abstract derived entities defined in a data abstraction model |
US20060047838A1 (en) | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US20060053175A1 (en) | 2004-09-03 | 2006-03-09 | Biowisdom Limited | System and method for creating, editing, and utilizing one or more rules for multi-relational ontology creation and maintenance |
US7013308B1 (en) | 2000-11-28 | 2006-03-14 | Semscript Ltd. | Knowledge storage and retrieval system and method |
US20060064429A1 (en) | 2004-09-18 | 2006-03-23 | Chi Yao | Method and apparatus for providing assets reports categorized by attribute |
US7031955B1 (en) | 2001-04-27 | 2006-04-18 | I2 Technologies Us, Inc. | Optimization using a multi-dimensional data model |
US20060085465A1 (en) | 2004-10-15 | 2006-04-20 | Oracle International Corporation | Method(s) for updating database object metadata |
US20060085386A1 (en) | 2004-10-19 | 2006-04-20 | Microsoft Corporation | Two pass calculation to optimize formula calculations for a spreadsheet |
US7043521B2 (en) | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
US20060112110A1 (en) | 2004-11-23 | 2006-05-25 | International Business Machines Corporation | System and method for automating data normalization using text analytics |
US20060136585A1 (en) | 2004-12-06 | 2006-06-22 | Bmc Software, Inc. | Resource reconciliation |
US20060149700A1 (en) | 2004-11-11 | 2006-07-06 | Gladish Randolph J | System and method for automatic geospatial web network generation via metadata transformation |
US20060173824A1 (en) | 2005-02-01 | 2006-08-03 | Metalincs Corporation | Electronic communication analysis and visualization |
US7100083B2 (en) | 2000-08-04 | 2006-08-29 | Sun Microsystems, Inc. | Checks for product knowledge management |
US20060206508A1 (en) | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20060224582A1 (en) | 2005-03-31 | 2006-10-05 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US20060248456A1 (en) | 2005-05-02 | 2006-11-02 | Ibm Corporation | Assigning a publication date for at least one electronic document |
US7146538B2 (en) | 2003-03-28 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Bus interface module |
US7158983B2 (en) | 2002-09-23 | 2007-01-02 | Battelle Memorial Institute | Text analysis technique |
US20070022085A1 (en) | 2005-07-22 | 2007-01-25 | Parashuram Kulkarni | Techniques for unsupervised web content discovery and automated query generation for crawling the hidden web |
US20070055656A1 (en) | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
US20070067108A1 (en) | 2005-03-03 | 2007-03-22 | Buhler Jeremy D | Method and apparatus for performing biosequence similarity searching |
US20070073663A1 (en) | 2005-09-26 | 2007-03-29 | Bea Systems, Inc. | System and method for providing full-text searching of managed content |
US20070143353A1 (en) | 2005-12-05 | 2007-06-21 | Tianlong Chen | Apparatus and Method for On-Demand In-Memory Database Management Platform |
US20070179965A1 (en) | 2006-01-27 | 2007-08-02 | Hogue Andrew W | Designating data objects for analysis |
US20070203867A1 (en) | 2006-01-27 | 2007-08-30 | Hogue Andrew W | Data object visualization |
US20070203868A1 (en) | 2006-01-27 | 2007-08-30 | Betz Jonathan T | Object categorization for information extraction |
US20070271249A1 (en) | 2003-06-20 | 2007-11-22 | Cragun Brian J | Heterogeneous multi-level extendable indexing for general purpose annotation systems |
US20080005064A1 (en) | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US20080097958A1 (en) | 2004-06-17 | 2008-04-24 | The Regents Of The University Of California | Method and Apparatus for Retrieving and Indexing Hidden Pages |
US20080104019A1 (en) | 2006-10-26 | 2008-05-01 | Microsoft Corporation | Associating Geographic-Related Information with Objects |
US20080209444A1 (en) | 2007-02-27 | 2008-08-28 | Garrett Andrew J | Method, system and program product for defining imports into and exports out from a database system using spread sheets by use of a control language |
US7421432B1 (en) | 1999-12-15 | 2008-09-02 | Google Inc. | Hypertext browser assistant |
US20090100048A1 (en) | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Mixed Media Reality Retrieval of Differentially-weighted Links |
US7669115B2 (en) | 2000-05-30 | 2010-02-23 | Outlooksoft Corporation | Method and system for facilitating information exchange |
US7953720B1 (en) | 2005-03-31 | 2011-05-31 | Google Inc. | Selecting the best answer to a fact query from among a set of potential answers |
US8112441B2 (en) | 2005-07-15 | 2012-02-07 | Indxit Sytems Inc. | Systems and methods for data indexing and processing |
US8352388B2 (en) * | 2002-05-22 | 2013-01-08 | Estes Timothy W | Knowledge discovery agent system and method |
US8463810B1 (en) * | 2006-06-01 | 2013-06-11 | Monster Worldwide, Inc. | Scoring concepts for contextual personalized information retrieval |
US8510321B2 (en) * | 2006-08-03 | 2013-08-13 | International Business Machines Corporation | Information retrieval from relational databases using semantic queries |
-
2006
- 2006-09-28 US US11/536,504 patent/US8954412B1/en active Active
-
2015
- 2015-02-06 US US14/616,537 patent/US9785686B2/en active Active
Patent Citations (160)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4888690A (en) | 1985-01-11 | 1989-12-19 | Wang Laboratories, Inc. | Interactive error handling means in database management |
US5010478A (en) | 1986-04-11 | 1991-04-23 | Deran Roger L | Entity-attribute value database system with inverse attribute for selectively relating two different entities |
US4899292A (en) | 1988-03-02 | 1990-02-06 | Image Storage/Retrieval Systems, Inc. | System for storing and retrieving text and associated graphics |
US5202982A (en) | 1990-03-27 | 1993-04-13 | Sun Microsystems, Inc. | Method and apparatus for the naming of database component files to avoid duplication of files |
US5475819A (en) | 1990-10-02 | 1995-12-12 | Digital Equipment Corporation | Distributed configuration profile for computing system |
US5832479A (en) | 1992-12-08 | 1998-11-03 | Microsoft Corporation | Method for compressing full text indexes with document identifiers and location offsets |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5528549A (en) | 1993-05-28 | 1996-06-18 | Texas Instruments Incorporated | Apparatus, systems and methods for distributed signal processing |
US5528550A (en) | 1993-05-28 | 1996-06-18 | Texas Instruments Incorporated | Apparatus, systems and methods for implementing memory embedded search arithmetic logic unit |
US5544051A (en) | 1993-09-17 | 1996-08-06 | Digital Equipment Corporation | Document management system using multiple threaded processes and having asynchronous repository responses and no busy cursor |
US5560005A (en) | 1994-02-25 | 1996-09-24 | Actamed Corp. | Methods and systems for object-based relational distributed databases |
US6216138B1 (en) | 1994-04-22 | 2001-04-10 | Brooks Automation Inc. | Computer interface system for automatically generating graphical representations of computer operations linked together according to functional relationships |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US5664109A (en) | 1995-06-07 | 1997-09-02 | E-Systems, Inc. | Method for extracting pre-defined data items from medical service records generated by health care providers |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US5963940A (en) * | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6006221A (en) | 1995-08-16 | 1999-12-21 | Syracuse University | Multilingual document retrieval system and method using semantic vector matching |
US5815415A (en) | 1996-01-19 | 1998-09-29 | Bentley Systems, Incorporated | Computer system for portable persistent modeling |
US6263335B1 (en) * | 1996-02-09 | 2001-07-17 | Textwise Llc | Information extraction system and method using concept-relation-concept (CRC) triples |
US5938717A (en) | 1996-03-04 | 1999-08-17 | Laser Technology, Inc. | Speed detection and image capture system for moving vehicles |
US5778378A (en) | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US6014661A (en) | 1996-05-06 | 2000-01-11 | Ivee Development Ab | System and method for automatic analysis of data bases and for user-controlled dynamic querying |
US6101515A (en) | 1996-05-31 | 2000-08-08 | Oracle Corporation | Learning system for classification of terminology |
US5870739A (en) | 1996-09-20 | 1999-02-09 | Novell, Inc. | Hybrid query apparatus and method |
US5905980A (en) | 1996-10-31 | 1999-05-18 | Fuji Xerox Co., Ltd. | Document processing apparatus, word extracting apparatus, word extracting method and storage medium for storing word extracting program |
US6480194B1 (en) | 1996-11-12 | 2002-11-12 | Silicon Graphics, Inc. | Computer-related method, system, and program product for controlling data visualization in external dimension(s) |
US20020128818A1 (en) | 1996-12-02 | 2002-09-12 | Ho Chi Fai | Method and system to answer a natural-language question |
US6326962B1 (en) | 1996-12-23 | 2001-12-04 | Doubleagent Llc | Graphic user interface for database system |
US5946692A (en) | 1997-05-08 | 1999-08-31 | At & T Corp | Compressed representation of a data base that permits AD HOC querying |
US6038560A (en) | 1997-05-21 | 2000-03-14 | Oracle Corporation | Concept knowledge base search and retrieval system |
US20020065814A1 (en) | 1997-07-01 | 2002-05-30 | Hitachi, Ltd. | Method and apparatus for searching and displaying structured document |
US6222540B1 (en) | 1997-11-21 | 2001-04-24 | Portola Dimensional Systems, Inc. | User-friendly graphics generator including automatic correlation |
US6105030A (en) | 1998-02-27 | 2000-08-15 | Oracle Corporation | Method and apparatus for copying data that resides in a database |
US20010016828A1 (en) | 1998-03-09 | 2001-08-23 | Junglee Corporation | Method and system for integrating transaction mechanisms over multiple internet sites |
US6311189B1 (en) | 1998-03-11 | 2001-10-30 | Altavista Company | Technique for matching a query to a portion of media |
JPH11265400A (en) | 1998-03-13 | 1999-09-28 | Omron Corp | Information processor, its method, network system, and recording medium |
US6327574B1 (en) | 1998-07-07 | 2001-12-04 | Encirq Corporation | Hierarchical models of consumer attributes for targeting content in a privacy-preserving manner |
US6192357B1 (en) | 1998-11-03 | 2001-02-20 | Platinum Technology, Inc. | Method and apparatus for optimizing query generation by selectively utilizing attributes or key values |
US6529900B1 (en) | 1999-01-14 | 2003-03-04 | International Business Machines Corporation | Method and apparatus for data visualization |
US6377943B1 (en) | 1999-01-20 | 2002-04-23 | Oracle Corp. | Initial ordering of tables for database queries |
US6584464B1 (en) | 1999-03-19 | 2003-06-24 | Ask Jeeves, Inc. | Grammar template query system |
JP2002540506A (en) | 1999-03-19 | 2002-11-26 | アスク ジーヴス インコーポレイテッド | Glamor template query system |
US6263328B1 (en) | 1999-04-09 | 2001-07-17 | International Business Machines Corporation | Object oriented query model and process for complex heterogeneous database queries |
US20030195872A1 (en) | 1999-04-12 | 2003-10-16 | Paul Senn | Web-based information content analyzer and information dimension dictionary |
US6304864B1 (en) * | 1999-04-20 | 2001-10-16 | Textwise Llc | System for retrieving multimedia information from the internet using multiple evolving intelligent agents |
US6629097B1 (en) | 1999-04-28 | 2003-09-30 | Douglas K. Keith | Displaying implicit associations among items in loosely-structured data sets |
US6249784B1 (en) | 1999-05-19 | 2001-06-19 | Nanogen, Inc. | System and method for searching and processing databases comprising named annotated text strings |
US20040107125A1 (en) | 1999-05-27 | 2004-06-03 | Accenture Llp | Business alliance identification in a web architecture |
US6885990B1 (en) | 1999-05-31 | 2005-04-26 | Nippon Telegraph And Telephone Company | Speech recognition based on interactive information retrieval scheme using dialogue control to reduce user stress |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US6519631B1 (en) | 1999-08-13 | 2003-02-11 | Atomica Corporation | Web-based information retrieval |
US6609123B1 (en) | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US20020010909A1 (en) | 1999-10-05 | 2002-01-24 | Dietrich Charisius | Methods and systems for finding and displaying linked objects |
US6105020A (en) | 1999-10-11 | 2000-08-15 | International Business Machines Corporation | System and method for identifying and constructing star joins for execution by bitmap ANDing |
US6850896B1 (en) | 1999-10-28 | 2005-02-01 | Market-Touch Corporation | Method and system for managing and providing sales data using world wide web |
US6772150B1 (en) | 1999-12-10 | 2004-08-03 | Amazon.Com, Inc. | Search query refinement using related search phrases |
US7421432B1 (en) | 1999-12-15 | 2008-09-02 | Google Inc. | Hypertext browser assistant |
US6718324B2 (en) | 2000-01-14 | 2004-04-06 | International Business Machines Corporation | Metadata search results ranking system |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US6606659B1 (en) | 2000-01-28 | 2003-08-12 | Websense, Inc. | System and method for controlling access to internet sites |
US20030120659A1 (en) | 2000-03-20 | 2003-06-26 | Sridhar Mandayam Anandampillai | Systems for developing websites and methods therefor |
US6643641B1 (en) | 2000-04-27 | 2003-11-04 | Russell Snyder | Web search engine with graphic snapshots |
US20030097357A1 (en) | 2000-05-18 | 2003-05-22 | Ferrari Adam J. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US20020173984A1 (en) | 2000-05-22 | 2002-11-21 | Robertson James A. | Method and system for implementing improved containers in a global ecosystem of interrelated services |
US7669115B2 (en) | 2000-05-30 | 2010-02-23 | Outlooksoft Corporation | Method and system for facilitating information exchange |
US6801548B1 (en) | 2000-06-15 | 2004-10-05 | Cisco Technology, Inc. | Channel ordering for communication signals split for matrix switching |
US20020055954A1 (en) | 2000-08-01 | 2002-05-09 | Matthias Breuer | Methods and systems for inputting data into spreadsheet documents |
US7100083B2 (en) | 2000-08-04 | 2006-08-29 | Sun Microsystems, Inc. | Checks for product knowledge management |
US20030217052A1 (en) | 2000-08-24 | 2003-11-20 | Celebros Ltd. | Search engine method and apparatus |
US6968343B2 (en) | 2000-09-01 | 2005-11-22 | Borland Software Corporation | Methods and systems for integrating process modeling and project planning |
US6832218B1 (en) | 2000-09-22 | 2004-12-14 | International Business Machines Corporation | System and method for associating search results |
US20020065815A1 (en) | 2000-10-04 | 2002-05-30 | Xcelerix, Inc. | Systems and methods for searching a database |
JP2002157276A (en) | 2000-11-16 | 2002-05-31 | Hitachi Software Eng Co Ltd | Method and system for supporting solution of problem |
US7013308B1 (en) | 2000-11-28 | 2006-03-14 | Semscript Ltd. | Knowledge storage and retrieval system and method |
US20120036145A1 (en) * | 2000-11-28 | 2012-02-09 | True Knowledge Ltd. | Knowledge storage and retrieval system and method |
US20020154175A1 (en) | 2001-01-04 | 2002-10-24 | James Abello | System and method for visualizing massive multi-digraphs |
US20030005036A1 (en) | 2001-04-06 | 2003-01-02 | Michael Mitzenmacher | Distributed, compressed Bloom filter Web cache server |
US7031955B1 (en) | 2001-04-27 | 2006-04-18 | I2 Technologies Us, Inc. | Optimization using a multi-dimensional data model |
US6961723B2 (en) | 2001-05-04 | 2005-11-01 | Sun Microsystems, Inc. | System and method for determining relevancy of query responses in a distributed network search mechanism |
US20030046288A1 (en) | 2001-08-31 | 2003-03-06 | Severino Donna M. | Method and apparatus for data storage and retrieval |
US20030069880A1 (en) | 2001-09-24 | 2003-04-10 | Ask Jeeves, Inc. | Natural language query processing |
US20060206508A1 (en) | 2001-11-13 | 2006-09-14 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
US20030115485A1 (en) | 2001-12-14 | 2003-06-19 | Milliken Walter Clark | Hash-based systems and methods for detecting, preventing, and tracing network worms and viruses |
US20030120644A1 (en) | 2001-12-17 | 2003-06-26 | International Business Machines Corporation | Method, apparatus, and computer program product for locating data in large datasets |
US20030120373A1 (en) | 2001-12-26 | 2003-06-26 | Eames John D. | System and method for analyzing controlling forming sections of a paper machine in operation |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US6928436B2 (en) | 2002-02-28 | 2005-08-09 | Ilog Sa | Interactive generation of graphical visualizations of large data structures |
US20030182171A1 (en) | 2002-03-19 | 2003-09-25 | Marc Vianello | Apparatus and methods for providing career and employment services |
US7043521B2 (en) | 2002-03-21 | 2006-05-09 | Rockwell Electronic Commerce Technologies, Llc | Search agent for searching the internet |
JP2003281173A (en) | 2002-03-22 | 2003-10-03 | Toshiba Corp | Information collection system, information collecting method and program for causing computer to collect information |
US20040030731A1 (en) | 2002-04-03 | 2004-02-12 | Liviu Iftode | System and method for accessing files in a network |
US20030208486A1 (en) | 2002-04-25 | 2003-11-06 | International Machines Business Machines | Dynamic end user specific customization of an application's physical data layer through a data repository abstraction layer |
US20030208665A1 (en) | 2002-05-01 | 2003-11-06 | Jih-Kwon Peir | Reducing data speculation penalty with early cache hit/miss prediction |
US8352388B2 (en) * | 2002-05-22 | 2013-01-08 | Estes Timothy W | Knowledge discovery agent system and method |
US20040015566A1 (en) | 2002-07-19 | 2004-01-22 | Matthew Anderson | Electronic item management and archival system and method of operating the same |
US7158983B2 (en) | 2002-09-23 | 2007-01-02 | Battelle Memorial Institute | Text analysis technique |
US20040167909A1 (en) | 2002-12-06 | 2004-08-26 | Attensity Corporation | Methods and products for integrating mixed format data |
US20040122844A1 (en) | 2002-12-18 | 2004-06-24 | International Business Machines Corporation | Method, system, and program for use of metadata to create multidimensional cubes in a relational database |
US20040122846A1 (en) | 2002-12-19 | 2004-06-24 | Ibm Corporation | Fact verification system |
US20040123240A1 (en) | 2002-12-20 | 2004-06-24 | International Business Machines Corporation | Automatic completion of dates |
US20040125137A1 (en) | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
WO2004114163A2 (en) | 2003-02-19 | 2004-12-29 | Insightful Corporation | Method and system for enhanced data searching |
US7146538B2 (en) | 2003-03-28 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Bus interface module |
US20040220904A1 (en) | 2003-04-30 | 2004-11-04 | International Business Machines Corporation | Information retrieval system and method using index ANDing for improving performance |
US20040236655A1 (en) | 2003-05-19 | 2004-11-25 | Pacific Edge Software, Inc. | Method and system for object-oriented management of multi-dimensional data |
US20050022009A1 (en) | 2003-06-05 | 2005-01-27 | Aguilera Macros K. | System and method for preventing replay attacks |
US20040255237A1 (en) | 2003-06-10 | 2004-12-16 | Simon Tong | Document search engine including highlighting of confident results |
US20050256825A1 (en) | 2003-06-20 | 2005-11-17 | International Business Machines Corporation | Viewing annotations across multiple applications |
US20070271249A1 (en) | 2003-06-20 | 2007-11-22 | Cragun Brian J | Heterogeneous multi-level extendable indexing for general purpose annotation systems |
US20040260714A1 (en) | 2003-06-20 | 2004-12-23 | Avijit Chatterjee | Universal annotation management system |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050039033A1 (en) | 2003-07-25 | 2005-02-17 | Activeviews, Inc. | Method and system for building a report for execution against a data store |
US20050086520A1 (en) | 2003-08-14 | 2005-04-21 | Sarang Dharmapurikar | Method and apparatus for detecting predefined signatures in packet payload using bloom filters |
US20050050016A1 (en) | 2003-09-02 | 2005-03-03 | International Business Machines Corporation | Selective path signatures for query processing over a hierarchical tagged data structure |
US20050055327A1 (en) | 2003-09-08 | 2005-03-10 | International Business Machines Corporation | Uniform search system and method for selectively sharing distributed access-controlled documents |
US20050057566A1 (en) | 2003-09-11 | 2005-03-17 | International Business Machines Corporation | Rich graphic visualization generation from abstract data representation |
US20050060277A1 (en) | 2003-09-15 | 2005-03-17 | Zlatanov Teodore Zlatkov | Computer systems and methods for platform independent presentation design |
US20050076012A1 (en) | 2003-09-23 | 2005-04-07 | Udi Manber | Personalized searchable library with highlighting capabilities |
US20050086222A1 (en) | 2003-10-16 | 2005-04-21 | Wang Ji H. | Semi-automatic construction method for knowledge base of encyclopedia question answering system |
US20050120004A1 (en) | 2003-10-17 | 2005-06-02 | Stata Raymond P. | Systems and methods for indexing content for fast and scalable retrieval |
US20050108630A1 (en) | 2003-11-19 | 2005-05-19 | Wasson Mark D. | Extraction of facts from text |
US20050187898A1 (en) | 2004-02-05 | 2005-08-25 | Nec Laboratories America, Inc. | Data Lookup architecture |
US20050217052A1 (en) | 2004-03-11 | 2005-10-06 | Baskerville Taurris D | Bracket assembly |
US20050216464A1 (en) | 2004-03-27 | 2005-09-29 | Microsoft Corporation | Automated authoring tool and method to facilitate inclusion of maps and other geographical data into travelogues |
US20050219929A1 (en) | 2004-03-30 | 2005-10-06 | Navas Julio C | Method and apparatus achieving memory and transmission overhead reductions in a content routing network |
US20050268212A1 (en) | 2004-05-28 | 2005-12-01 | Michael Dagel | System, apparatus, and method for desktop-based creation and publication of a periodic community newsletter |
US20080097958A1 (en) | 2004-06-17 | 2008-04-24 | The Regents Of The University Of California | Method and Apparatus for Retrieving and Indexing Hidden Pages |
US20060047838A1 (en) | 2004-06-25 | 2006-03-02 | Abhishek Chauhan | Inferring server state in a stateless communication protocol |
US20060004851A1 (en) | 2004-07-02 | 2006-01-05 | Graphlogic Inc. | Object process graph relational database interface |
US20060020582A1 (en) | 2004-07-22 | 2006-01-26 | International Business Machines Corporation | Method and system for processing abstract derived entities defined in a data abstraction model |
US20060053175A1 (en) | 2004-09-03 | 2006-03-09 | Biowisdom Limited | System and method for creating, editing, and utilizing one or more rules for multi-relational ontology creation and maintenance |
US20060064429A1 (en) | 2004-09-18 | 2006-03-23 | Chi Yao | Method and apparatus for providing assets reports categorized by attribute |
US20060085465A1 (en) | 2004-10-15 | 2006-04-20 | Oracle International Corporation | Method(s) for updating database object metadata |
US20060085386A1 (en) | 2004-10-19 | 2006-04-20 | Microsoft Corporation | Two pass calculation to optimize formula calculations for a spreadsheet |
US20060149700A1 (en) | 2004-11-11 | 2006-07-06 | Gladish Randolph J | System and method for automatic geospatial web network generation via metadata transformation |
US20060112110A1 (en) | 2004-11-23 | 2006-05-25 | International Business Machines Corporation | System and method for automating data normalization using text analytics |
US20060136585A1 (en) | 2004-12-06 | 2006-06-22 | Bmc Software, Inc. | Resource reconciliation |
US20060173824A1 (en) | 2005-02-01 | 2006-08-03 | Metalincs Corporation | Electronic communication analysis and visualization |
US20070067108A1 (en) | 2005-03-03 | 2007-03-22 | Buhler Jeremy D | Method and apparatus for performing biosequence similarity searching |
US7953720B1 (en) | 2005-03-31 | 2011-05-31 | Google Inc. | Selecting the best answer to a fact query from among a set of potential answers |
US20060224582A1 (en) | 2005-03-31 | 2006-10-05 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US8065290B2 (en) | 2005-03-31 | 2011-11-22 | Google Inc. | User interface for facts query engine with snippets from information sources that include query terms and answer terms |
US20060248456A1 (en) | 2005-05-02 | 2006-11-02 | Ibm Corporation | Assigning a publication date for at least one electronic document |
US20080005064A1 (en) | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
US8112441B2 (en) | 2005-07-15 | 2012-02-07 | Indxit Sytems Inc. | Systems and methods for data indexing and processing |
US20070022085A1 (en) | 2005-07-22 | 2007-01-25 | Parashuram Kulkarni | Techniques for unsupervised web content discovery and automated query generation for crawling the hidden web |
US20070055656A1 (en) | 2005-08-01 | 2007-03-08 | Semscript Ltd. | Knowledge repository |
US20070073663A1 (en) | 2005-09-26 | 2007-03-29 | Bea Systems, Inc. | System and method for providing full-text searching of managed content |
US20070143353A1 (en) | 2005-12-05 | 2007-06-21 | Tianlong Chen | Apparatus and Method for On-Demand In-Memory Database Management Platform |
US20070203867A1 (en) | 2006-01-27 | 2007-08-30 | Hogue Andrew W | Data object visualization |
US20070203868A1 (en) | 2006-01-27 | 2007-08-30 | Betz Jonathan T | Object categorization for information extraction |
US20070179965A1 (en) | 2006-01-27 | 2007-08-02 | Hogue Andrew W | Designating data objects for analysis |
US8463810B1 (en) * | 2006-06-01 | 2013-06-11 | Monster Worldwide, Inc. | Scoring concepts for contextual personalized information retrieval |
US8620909B1 (en) * | 2006-06-01 | 2013-12-31 | Monster Worldwide, Inc. | Contextual personalized searching across a hierarchy of nodes of a knowledge base |
US20090100048A1 (en) | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Mixed Media Reality Retrieval of Differentially-weighted Links |
US8510321B2 (en) * | 2006-08-03 | 2013-08-13 | International Business Machines Corporation | Information retrieval from relational databases using semantic queries |
US20080104019A1 (en) | 2006-10-26 | 2008-05-01 | Microsoft Corporation | Associating Geographic-Related Information with Objects |
US20080209444A1 (en) | 2007-02-27 | 2008-08-28 | Garrett Andrew J | Method, system and program product for defining imports into and exports out from a database system using spread sheets by use of a control language |
Non-Patent Citations (109)
Title |
---|
Anick, Using Terminological Feedback for Web Search Refinement-A Log-based Study, ACM 2003, SIGIR '03, Toronto, Canada, Jul. 28-Aug. 1, 2003, 8 pgs. |
Anick, Using Terminological Feedback for Web Search Refinement—A Log-based Study, ACM 2003, SIGIR '03, Toronto, Canada, Jul. 28-Aug. 1, 2003, 8 pgs. |
Bharat, Personalized, interactive news on the web, May 5, 1997, 22 pgs. |
Bloom filter, Wikipedia, Feb. 13, 2005, 4 pgs. |
Bloom, Space/time trade-offs in hash coding with allowable errors, Jul. 1970, 5 pgs. |
Brill, An analysis of the askMSR question-answering system, Jul. 2002, 8 pgs. |
Brin, Extracting patterns and relations from the world wide web, 1999, 12 pgs. |
Brin, The anatomy of a large-scale hypertextual search engine, 1998, 11 pgs. |
Cao, Bloom filters-the math, Jul. 5, 1998, 6 pgs. |
Cao, Bloom filters—the math, Jul. 5, 1998, 6 pgs. |
Chang, IEPAD: Information extraction based on pattern discovery, May 1-5, 2001, 8 pgs. |
Chesnais, The fishwrap personalized new system, community networking, Jun. 20-22, 1995, 8 pgs. |
Chu-Carroll, A multi-strategy and multi-source approach to question answering, 2006, 8 pgs. |
Clarke, FrontPage 2002 tutorials-adding functionality to your website with FrontPage 2002 part II-navigation, Apr. 2002, 8 pgs. |
Clarke, FrontPage 2002 tutorials—adding functionality to your website with FrontPage 2002 part II—navigation, Apr. 2002, 8 pgs. |
Cowie, MOQA: Meaning-oriented question answering, 2004, 15 pgs. |
Dean, MapReduce: Simplified data processing on large clusters, 2004, 13 pgs. |
Etzioni, Web-scale information extraction in knowitall (preliminary results), May 17-20, 2004, 11 pgs. |
Freitag, Boosted wrapped induction, 2000, 7 pgs. |
Google, International Preliminary Report on Patentability, PCT/US2007/061158, Jul. 29, 2008, 7 pgs. |
Google, International Search Report / Written Opinion, PCT/US06/007639, Sep. 13, 2006, 5 pgs. |
Google, International Search Report / Written Opinion, PCT/US07/061156, Feb. 11, 2008, 5 pgs. |
Google, International Search Report / Written Opinion, PCT/US07/061157, Feb. 15, 2008, 10 pgs. |
Google, International Search Report / Written Opinion, PCT/US2006/010965, Jul. 5, 2006, 4 pgs. |
Google, Office Action, CA 2610208, Sep. 21, 2011, 3 pgs. |
Google, Office Action, JP 2008-504204, Oct. 12, 2011, 4 pgs. |
Guha, Disambiguating people in search, May 17-22, 2004, 9 pgs. |
Guha, Object co-identification on the semantic web, May 17-22, 2004, 9 pgs. |
Hogue, Decision on Appeal, U.S. Appl. No. 11/342,277, Jan. 24, 2014, 7 pgs. |
Hogue, Final Office Action, U.S. Appl. No. 11/356,679, Dec. 3, 2013, 22 pgs. |
Hogue, Notice of Allowance, U.S. Appl. No. 11/356,679, Oct. 2, 2014, 16 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/097,676, Dec. 31, 2007, 13 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/097,676, Jun. 28, 2007, 12 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/341,907, Dec. 17, 2009, 22 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/341,907, Jan. 8, 2008, 13 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/341,907, Jul. 24, 2009, 17 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/341,907, Jul. 27, 2010, 21 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/341,907, Jul. 31, 2008, 17 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/341,907, Nov. 24, 2008, 14 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,277, Aug. 18, 2008, 26 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,277, Dec. 16, 2009, 25 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,277, Dec. 8, 2008, 23 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,277, Jan. 22, 2008, 21 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,277, Jul. 26, 2010, 26 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,277, Jul. 27, 2009, 21 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,290, Aug. 7, 2008, 39 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,290, Jan. 24, 2008, 36 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,293, Apr. 3, 2009, 13 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,293, Jan. 18, 2008, 13 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,293, Jun. 18, 2010, 22 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,293, May 20, 2008, 18 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,293, Oct. 21, 2009, 15 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/342,293, Sep. 29, 2008, 14 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Dec. 18, 2009, 16 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Feb. 29, 2012, 15 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Jul. 20, 2010, 21 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Jul. 30, 2009, 15 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Jun. 21, 2011, 15 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Mar. 16, 2009, 20 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Mar. 29, 2013, 24 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, May 13, 2008, 19 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,679, Sep. 24, 2008, 19 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,851, Apr. 1, 2009, 9 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,851, Apr. 7, 2008, 15 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,851, Nov. 12, 2009, 10 pgs. |
Hogue, Office Action, U.S. Appl. No. 11/356,851, Oct. 16, 2008, 10 pgs. |
Hogue, Tree pattern inference and matching for wrapper induction on the world wide web, Jun. 2004, 106 pgs. |
Ilyas, Rank-aware query optimization, Jun. 13-18, 2004, 12 pgs. |
Information entropy, Wikipedia, May 3, 2006, 9 pgs. |
Information theory, Wikipedia, May 3, 2006, 12 pgs. |
Jones, Bootstrapping for text learning tasks, 1999, 12 pgs. |
Kamba, An interactive, personalized, newspaper on the web, 1993, 12 pgs. |
Kehlenbeck, Office Action, U.S. Appl. No. 11/357,748, Jan. 23, 2007, 10 pgs. |
Kehlenbeck, Office Action, U.S. Appl. No. 11/357,748, Sep. 11, 2007, 19 pgs. |
Kosseim, Answer formulation for question-answering, Oct. 1, 2007, 11 pgs. |
Lin, Question answering from web using knowledge annotation and knowledge mining techniques, Nov. 3-8, 2003, 8 pgs. |
Liu, Mining data records in web pages, 2000, 10 pgs. |
McCallum, Object consolidation by graph partitioning with a conditionally-trained distance metric, Aug. 24-27, 2003, 6 pgs. |
Mihalcea, PageRank on semantic networks, with application to word sense disambiguation, Aug. 23-27, 2004, 7 pgs. |
Mihalcea, TextRank: bringing order into texts, Jul. 2004, 8 pgs. |
Nyberg, The JAVELIN question-answering system at TREC2003: a multi strategy approach with dynamic planning, Nov. 18-21, 2003, 9 pgs. |
Ogden, Improving cross-language text retrieval with human interactions, 2000, 9 pgs. |
Prager, IBM's piquant in TREC2003, Nov. 18-21, 2003, 10 pgs. |
Prager, Question answering using constraint satisfaction: QA-by-dossier-with-constraints, 2004, 8 pgs. |
Ramakrishnan, Is question answering an acquired skill?, May 17, 2004, 10 pgs. |
Ritchford, Final Office Action, U.S. Appl. No. 13/292,017, Oct. 25, 2013, 17 pgs. |
Ritchford, Final Office Action, U.S. Appl. No. 13/292,030, Apr. 25, 2014, 16 pgs. |
Ritchford, Office Action, U.S. Appl. No. 11/356,728, Jan. 28, 2010, 50 pgs. |
Ritchford, Office Action, U.S. Appl. No. 11/356,728, May 21, 2008, 25 pgs. |
Ritchford, Office Action, U.S. Appl. No. 11/356,728, May 27, 2009, 34 pgs. |
Ritchford, Office Action, U.S. Appl. No. 11/356,728, Nov. 26, 2008, 25 pgs. |
Ritchford, Office Action, U.S. Appl. No. 11/356,728, Oct. 7, 2010, 54 pgs. |
Ritchford, Office Action, U.S. Appl. No. 13/292,017, Apr. 24, 2012, 9 pgs. |
Ritchford, Office Action, U.S. Appl. No. 13/292,017, Feb. 1, 2013, 15 pgs. |
Ritchford, Office Action, U.S. Appl. No. 13/292,017, Jun. 16, 2014, 15 pgs. |
Ritchford, Office Action, U.S. Appl. No. 13/292,030, Jan. 4, 2013, 15 pgs. |
Ritchford, Office Action, U.S. Appl. No. 13/292,030, Jan. 6, 2014, 16 pgs. |
Ritchford, Office Action, U.S. Appl. No. 13/292,030, May 1, 2012, 11 pgs. |
Rochelle, Office Action, U.S. Appl. No. 11/749,679, Mar. 22, 2010, 8 pgs. |
Rochelle, Office Action, U.S. Appl. No. 11/749,679, Oct. 8, 2010, 8 pgs. |
The Math Works, Using Matlab Graphics, Dec. 1996, 52 pgs. |
Thompson, Freshman publishing experiment offers made-to-order newspapers, 1994, 4 pgs. |
Vespe, Office Action, U.S. Appl. No. 11/535,843, Aug. 18, 2009, 16 pgs. |
Vespe, Office Action, U.S. Appl. No. 11/535,843, Dec. 23, 2008, 15 pgs. |
Zhao, Decision on Appeal, U.S. Appl. No. 11/536,504, Nov. 21, 2013, 8 pgs. |
Zhao, Final Office Action, U.S. Appl. No. 11/536,504, Feb. 23, 2009, 19 pgs. |
Zhao, Notice of Allowance, U.S. Appl. No. 11/536,504, Feb. 6, 2014, 16 pgs. |
Zhao, Notice of Allowance, U.S. Appl. No. 11/536,504, Jun. 4, 2014, 17 pgs. |
Zhao, Office Action, U.S. Appl. No. 11/536,504, Aug. 14, 2008, 19 pgs. |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170220650A1 (en) * | 2016-01-29 | 2017-08-03 | Integral Search International Ltd. | Patent searching method in connection to matching degree |
US10037365B2 (en) * | 2016-01-29 | 2018-07-31 | Integral Search International Ltd. | Computer-implemented patent searching method in connection to matching degree |
Also Published As
Publication number | Publication date |
---|---|
US20150317367A1 (en) | 2015-11-05 |
US8954412B1 (en) | 2015-02-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9558186B2 (en) | Unsupervised extraction of facts | |
US9785686B2 (en) | Corroborating facts in electronic documents | |
US9092495B2 (en) | Automatic object reference identification and linking in a browseable fact repository | |
US8954426B2 (en) | Query language | |
US7778952B2 (en) | Displaying facts on a linear graph | |
US7454398B2 (en) | Support for object search | |
US20170300524A1 (en) | Entity Normalization Via Name Normalization | |
US8055674B2 (en) | Annotation framework | |
US7774328B2 (en) | Browseable fact repository | |
US9208229B2 (en) | Anchor text summarization for corroboration | |
US7672971B2 (en) | Modular architecture for entity normalization | |
US7953720B1 (en) | Selecting the best answer to a fact query from among a set of potential answers | |
US8812435B1 (en) | Learning objects and facts from documents | |
US7464090B2 (en) | Object categorization for information extraction | |
US8244689B2 (en) | Attribute entropy as a signal in object normalization | |
US7792837B1 (en) | Entity name recognition | |
US7590628B2 (en) | Determining document subject by using title and anchor text of related documents | |
US20140359409A1 (en) | Learning Synonymous Object Names from Anchor Texts | |
US8682913B1 (en) | Corroborating facts extracted from multiple sources | |
US7739212B1 (en) | System and method for updating facts in a fact repository |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ZHAO, SHUBIN;CZUBA, KRZYSZTOF;SIGNING DATES FROM 20150717 TO 20150720;REEL/FRAME:036154/0888 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
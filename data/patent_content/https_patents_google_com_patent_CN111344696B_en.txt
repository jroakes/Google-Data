CN111344696B - System and method for evaluating advertisements - Google Patents
System and method for evaluating advertisements Download PDFInfo
- Publication number
- CN111344696B CN111344696B CN201980005505.8A CN201980005505A CN111344696B CN 111344696 B CN111344696 B CN 111344696B CN 201980005505 A CN201980005505 A CN 201980005505A CN 111344696 B CN111344696 B CN 111344696B
- Authority
- CN
- China
- Prior art keywords
- asset
- analysis module
- text strings
- value
- overall
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0242—Determining effectiveness of advertisements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
- G06Q30/0255—Targeted advertisements based on user history
- G06Q30/0256—User search
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/41—Indexing; Data structures therefor; Storage structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/049—Temporal neural networks, e.g. delay elements, oscillating neurons or pulsed inputs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N7/00—Computing arrangements based on specific mathematical models
- G06N7/01—Probabilistic graphical models, e.g. probabilistic networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0242—Determining effectiveness of advertisements
- G06Q30/0244—Optimization
Abstract
A system and method are disclosed for dynamically analyzing and providing the quality of one or more content items as they are received by a data processing system, or substantially near that time. The systems and methods described herein may maintain and update quality scores for improving previously created content items before they are released. The one or more content items may include one or more assets (e.g., one or more titles, one or more descriptions, images, videos, etc.). The data processing system may use a numerical analysis method, using a training model, to determine the overall quality of the content item received by the data processing system (e.g., estimate the click through).
Description
Cross Reference to Related Applications
This application claims priority from U.S. provisional patent application 62/732,487 entitled "system and method for evaluating advertisements" filed 2018, 9, 17, which is hereby incorporated by reference in its entirety.
Background
In a computer network environment, such as the internet, third-party content providers provide content items that are displayed on end-user computing devices. These third-party content items, such as advertisements, may be linked to web pages associated with third-party content providers. These third-party content items may include content that identifies the third-party content provider that provided the content item.
Disclosure of Invention
One technical problem addressed by the present disclosure is that it is difficult to determine the number of interactions a content item may receive without first publishing the content item. For example, a content provider may wish to know the number of clicks a content item may receive in order to understand the impact of a vote in the content item. However, simply publishing the content item and collecting the data afterwards may be expensive for the content provider, and the content provider may wish to know the expected effect of the content item campaign before the campaign begins. The challenge addressed in the present disclosure relates to evaluating the estimated quality (e.g., number of interactions) that a third-party user may have with a content item provided by a content provider. Systems and methods in the present disclosure may calculate an estimated quality of a content item generated using a text string and a target keyword based on numerical data collected from analytical assets (e.g., text, images, videos, etc.) provided by a content provider.
At least one aspect of the present disclosure relates to a method of evaluating a content item using numerical criteria. The method may include receiving, by an asset reception module, a plurality of text strings. Each of the plurality of text strings may include a token (token). The method may include receiving, by an asset reception module, a plurality of target keywords. The method may include retrieving, by the asset analysis module, the one or more synonyms and the one or more roots of each token in each of the plurality of text strings from the database. The method may include, for each text string of the plurality of text strings, selecting, by the asset analysis module, a first text string from the plurality of text strings. The method may include, for each text string of the plurality of text strings, determining, by the asset analysis module, a number of matching tokens in the first text string and the unselected text string based on the number of tokens, the number of roots of the tokens, and the number of synonyms of the tokens. The method may include, for each of a plurality of text strings, dividing, by an asset analysis module, a number of matching tokens by a number of tokens in a first text string to determine an asset mix value for the first text string. The method may include summing, by the asset analysis module, each asset mix value of each text string to calculate an overall asset mix value. The method may include determining, by the asset analysis module, a number of categories for each of the plurality of text strings using a category determination model. The method may include summing, by the asset analysis module, a number of categories for each of the plurality of text strings to calculate an overall category coverage value. The method may include retrieving, by the asset analysis module, each of a plurality of target keywords to estimate a flow value. The method may include counting, by the asset analysis module, a number of occurrences of the selected target keyword in each of the plurality of text strings to generate a target keyword count associated with the respective target keyword. The method may include multiplying, by the asset analysis module, each of the target keyword counts by an estimated flow value of the respective target keyword to calculate a weighted keyword value associated with the respective target keyword. The method may include summing, by the asset analysis module, each weighted keyword value to calculate a keyword coverage value. The method may include determining, by the asset scoring module, an overall content item score using a content scoring model based on the number of text strings, the number of tokens in the text strings, an overall asset mix value, an overall category coverage value, and an overall keyword coverage value. The method may include providing, by an asset scoring module, to a content provider computing device, an overall content item score associated with a plurality of text strings and a plurality of target keywords.
In some implementations, the method may include identifying, by the asset reception module, whether the plurality of text strings are present at a location in a database, wherein the location is determined based on an identifier received from the content provider computing device. In some implementations, the method may include storing, by the asset reception module, the plurality of text strings based on the locations in the database in response to determining that the plurality of text strings are not present at the locations in the database.
In some implementations, the method can include storing, by the asset scoring module, the overall content item score in a database. In some implementations, the method can include retrieving, by the asset scoring module, a plurality of overall content item scores from a database. Each of the plurality of overall content item scores may be associated with a plurality of text strings. In some implementations, the method can include ranking, by the asset scoring module, the plurality of overall content item scores to create a ranked list of content item scores. In some implementations, the method can include providing, by the asset scoring module, the ranked list of content item scores to the content provider computing device.
In some implementations, the method may include comparing, by the asset analysis module, a sum of a number of categories of each of the plurality of text strings to a first predefined threshold to create a first relationship. In some implementations, the method may include comparing, by the asset analysis module, a sum of the number of categories for each of the plurality of text strings to a second predefined threshold to create a second relationship. In some implementations, the method can include calculating, by the asset analysis module, a category coverage value based on the first relationship and the second relationship.
In some implementations, the method may include receiving, by the asset reception module, the target location from the content provider computing device. In some implementations, the method may include retrieving, by the asset analysis module, a plurality of location keywords associated with the target location. In some implementations, the method may include counting, by the asset analysis module, a number of occurrences of each of a plurality of location keywords in each of a plurality of text strings to generate a location keyword count associated with the respective location keyword. In some implementations, the method can include summing, by the asset analysis module, each of the location keyword counts to calculate the location correlation value. In some implementations, the method can include determining an overall content item score based on the position correlation value.
In some implementations, the method can include receiving, by the asset reception module, a first address from the content provider computing device, the first address associated with the landing page. In some implementations, the method can include accessing, by the asset analysis module, a landing page associated with the first address to retrieve a plurality of landing page indicia. In some implementations, the method can include counting, by the asset analysis module, a number of indicia in the plurality of text strings that match an indicia in the plurality of landing page indicia to determine a landing page relevance value. In some implementations, the method can include determining an overall content item score based on the position correlation value.
In some implementations, the method can include determining, by the asset analysis module, whether the landing page is a home page or a multi-product page. In some implementations, the method can include determining, by the asset analysis module, a landing page relevance value based on determining whether the landing page is a home page or a multi-product page.
At least another aspect of the present disclosure is directed to a system for evaluating content items using numerical criteria, comprising one or more processors. The system may receive a plurality of text strings via a network. Each of the plurality of text strings may include a marker. The system may receive a plurality of target keywords via a network. The system may retrieve from the database one or more synonyms and one or more roots for each token in each of the plurality of text strings. For each of the plurality of text strings, the system may select a first text string from the plurality of text strings. For each of the plurality of text strings, the system may determine a number of matching tokens in the first text string and the unselected text string based on the number of tokens, the number of token roots, and the number of synonyms of the tokens. For each of the plurality of text strings, the system may divide the number of matching tokens by the number of tokens in the first text string to determine an asset mix value for the first text string. The system may sum each asset mix value for each text string to calculate an overall asset mix value. The system may determine a number of categories for each of the plurality of text strings using a category determination model. The system may sum the number of categories for each of the plurality of text strings to calculate an overall category coverage value. The system may retrieve each of the plurality of target keywords to estimate a flow value. The system may count a number of occurrences of the selected target keyword in each of the plurality of text strings to generate a target keyword count associated with the respective target keyword. The system may multiply each of the target keyword counts by the estimated flow value of the respective target keyword to calculate a weighted keyword value associated with the respective target keyword. The system may sum each weighted key value to compute a key coverage value. The system may determine an overall content item score using a content scoring model based on the number of text strings, the number of tokens in the text strings, an overall asset mix value, an overall category coverage value, and an overall keyword coverage value. The system may provide, via a network, an overall content item score associated with a plurality of text strings and a plurality of target keywords.
In some implementations, the system can identify a location in the database where the plurality of text strings exist, where the location is determined based on an identifier received from the content provider computing device. In some implementations, in response to determining that the plurality of text strings is not present at the location in the database, the system may store the plurality of text strings at the location in the database.
In some implementations, the system can store the overall content item scores in a database. In some implementations, the system can retrieve a plurality of overall content item scores from a database. Each of the plurality of overall content item scores may be associated with a plurality of text strings. In some implementations, the system can rank the plurality of overall content item scores to create a ranked list of content item scores. In some implementations, the system can include providing the ranked list of content item scores to a content provider computing device.
In some implementations, the system can compare a sum of a number of categories for each of the plurality of text strings to a first predefined threshold to create a first relationship. In some implementations, the system can compare a sum of a number of categories for each of the plurality of text strings to a first predefined threshold to create a first relationship. In some implementations, the system can compare a sum of the number of categories for each of the plurality of text strings to a second predefined threshold to create a second relationship. In some implementations, the system can calculate the category coverage value based on the first relationship and the second relationship.
In some embodiments, the system may receive the target location via a network. In some implementations, the system can retrieve a plurality of location keywords associated with the target location from a database. In some implementations, the system can count a number of occurrences of each of a plurality of location keywords in each of a plurality of text strings to generate a location keyword count associated with the respective location keyword. In some implementations, the system can sum each of the position key counts to calculate the position correlation value. In some implementations, the system can determine the overall content item score based on the location relevance value.
In some implementations, the system can receive a first address via the network, the first address associated with a landing page. In some implementations, the system can access a landing page associated with the first address to retrieve a plurality of landing page indicia. In some implementations, the system can count a number of indicia in the plurality of text strings that match an indicia in the plurality of landing page indicia to determine a landing page relevance value. In some implementations, the system can determine the overall content item score based on the location relevance value.
In some implementations, the system can determine whether the landing page is a home page or a multi-product page. In some implementations, the system can calculate a landing page relevance value based on determining whether the landing page is a home page or a multi-product page. In some implementations, the system can determine a number of categories for each of the plurality of text strings based on a recurrent neural network model. In some implementations, the system can determine the overall content item score using a linear regression model-based content scoring model.
Drawings
These and other aspects and features of the present embodiments will become apparent to those ordinarily skilled in the art upon review of the following description of specific embodiments in conjunction with the accompanying figures, in which:
FIG. 1 is a block diagram depicting one embodiment of an environment for evaluating one or more content items in real-time in a computer network environment in accordance with an illustrative embodiment.
FIG. 2 is a flowchart of an example method of evaluating one or more content items in accordance with an illustrative embodiment.
FIG. 3 is a flowchart of an example method of calculating an overall asset mix value in accordance with an illustrative embodiment.
FIG. 4 is a flowchart of an example method of computing an overall category coverage value in accordance with an illustrative embodiment.
FIG. 5 is a flowchart of an example method of computing an overall key coverage value in accordance with an illustrative embodiment.
FIG. 6 is a block diagram illustrating a general architecture of a computer system that may be used to implement the elements of the systems and methods described and illustrated herein, in accordance with an illustrative embodiment.
Detailed Description
The following is a more detailed description of various concepts and implementations related to methods, apparatus and systems for assessing the quality of a content item using a numerical method. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways, as the described concepts are not limited to any particular implementation.
The content item provider may provide the increased awareness of the content items and provide the user with related content. To determine whether a content item is properly serving a desired function, a content item provider typically relies on one or more evaluations determined after the content item is published to a user. For example, a Click Through Rate (CTR) is used to assess the quality of the content item. The CTR represents the number of times a given content item is "clicked on" when the given content item is presented to a user. However, such post-release evaluation of the quality of the content item is an imperfect measure, since the content item provider is only aware of the quality of the content item after release of the content item, which may take days or weeks. Such delays in evaluating the quality of the content item may cause the content item provider to expend additional resources for the intended purpose.
The present disclosure provides systems and methods for dynamically analyzing and providing the quality of one or more content items at or near the time of creation. In some implementations, the one or more content items can be created by the at least one data processing system based on a plurality of assets (e.g., one or more titles and one or more descriptions, text strings, images, videos, etc.), as will be discussed below. Based on the assets, the data processing system can create one or more content items. This creation of content items based on the assets provided may be referred to as Responsive Search ADs (RSA). Further, according to some embodiments, while providing content item quality in such a real-time manner, the data processing system may also provide one or more suggestions to the content item provider for modifying the provided assets. In this way, the content item provider can modify the content item accordingly before publishing the content item, if desired. Note that in this disclosure, text strings may also be referred to as assets, titles, and descriptions.
Referring now to FIG. 1, a system or environment 100 for evaluating one or more content items in real-time in a computer network environment is depicted in accordance with an illustrative embodiment. The environment 100 may include at least one computer network 105. The network 105 may be a computer network, which may include one or more local area networks, wide area networks, private networks, public networks, and the internet. The environment 100 may include at least one content provider 115. The environment 100 may include at least one content publisher. Environment 100 may include at least one end user. The environment 100 may include at least one data processing system 110. The data processing system 110 may include at least one database 150. Database 150 may include any computer-readable storage medium. The data processing system 110 may include at least one asset receiving module 130, at least one asset analysis module 135, and at least one asset scoring module 140.
Each of the components of the environment 100 (e.g., the network 105, the database 150, the asset reception module 130, the asset analysis module 135, and the asset scoring module 140) may be implemented using components of a computing system 600 described in detail herein in connection with fig. 6. For example, the data processing system 110 may include a server or other computing device. The content provider computing device 115 may also include a server or other computing device. The content publisher computing device 120 may also include a server or other computing device. The end-user computing devices 125 may also include servers or other computing devices. Each of the components of the data processing system 110 may perform the functions described in detail herein.
The network 105 may include a computer network (such as the internet, a local area network, a wide area network, a metropolitan area network, or other local area network, an intranet, a satellite network), other computer networks such as voice or data mobile telephone communication networks, and combinations thereof. The data processing system 110 of the environment 100 may communicate via the network 105, for example with at least one content provider computing device 115, at least one content publisher computing device 120, or at least one end user computing device 125. The network 105 may be any form of computer network that relays information between the content provider computing device 115, the data processing system 110, and one or more content sources (e.g., web servers, content item servers, etc.). For example, the Network 105 may include the internet and/or other types of data networks, such as a Local Area Network (LAN), Wide Area Network (WAN), cellular Network, satellite Network, or other types of data networks. The network 105 may also include any number of computing devices (e.g., computers, servers, routers, network switches, etc.) configured to receive and/or transmit data within the network 105. The network 105 may also include any number of hardwired and/or wireless connections. For example, the user computing device 125 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) with a transceiver that is hardwired (e.g., by fiber optic cable, CAT5 cable, etc.) to other computing devices in the network 105.
The content provider computing device 115 may comprise a server or other computing device operated by a content provider entity to provide content items, such as assets for creating display of content items on information resources of the end user computing device 125. Assets provided by the content provider via the content provider computing device 115 can include third party text-based titles (e.g., text strings including one or more tags) and descriptions (e.g., text strings including one or more tags) to create content items for display on information resources provided by the content publisher computing device 120.
In some implementations, the title provided by the content item provider (e.g., a merchant selling women's shoes) may include one or more of the following: "STORE", "fashion and comfort", "fashion women's shoes", "shopping on the internet today", "free delivery", "top brands with low price", "official STORE website", "fashion on various occasions", "confident shopping", and the like. The description provided by the merchant may include one or more of: "find your favorite brand and latest style in one place. Waiting, today place a order! "," orders are delivered free of charge over $ 50. A variety of fashionable and comfortable shoes, and various high-quality women's shoes of STORE, the price of which is so high that you can't get rid of the hands. Purchase immediately! "and the like. In some implementations, "STORE" may be used as a key. In some implementations, the content item provider can also provide more than one keyword to the data processing system 110.
The information resources may include websites or web pages that include primary content such as content provided by the content publisher computing device 120. Content items may also be displayed on the search results web page. For example, the content provider computing device 115 may provide or be a source of content items or other content items for display in a content slot of a content web page (such as a corporate web page that provides primary content of the web page by a corporation), or for display on a search results landing page provided by a search engine. Content items associated with the content provider computing device 115 may be displayed on information resources other than web pages, such as content displayed as part of the execution of an application on a smartphone or other end-user computing device 125.
The content publisher computing device 120 may include a server or other computing device operated by a content publishing entity to provide primary content for display via the network 105. For example, the content publisher computing device 120 may include a web page operator that provides primary content for display on a web page. The primary content may include content other than that provided by the content publisher computing device 120, and the web page may include a content slot configured to display third party content items from the content provider computing device 115. For example, the content publisher computing device 120 may operate a website of a company and may provide content about the company that is displayed on a webpage of the website. The web page may include a content slot configured to display third-party content items of the content provider computing device 115. In some implementations, the content publisher computing device 120 includes a search engine computing device (e.g., a server) of a search engine operator operating a search engine website. The primary content of the search engine web page (e.g., results or landing web page) can include search results as well as third party content items displayed in the content slots, such as content items from the content provider computing device 115. In some implementations, the content publisher computing device 120 can include a server for providing video content.
The end-user computing devices 125 may include computing devices configured to communicate via the network 105 to display data, such as content provided by the content publisher computing device 120 (e.g., primary web page content or other information resources) and content provided by the content provider computing device 115 (e.g., third-party content items configured to be displayed in content slots of a web page). The end-user computing devices 125, the content provider computing devices 115, and the content publisher computing devices 120 may include desktop computers, laptop computers, tablet computers, smart phones, personal digital assistants, mobile devices, consumer computing devices, servers, clients, digital video recorders, set-top boxes for televisions, video game consoles, or any other computing devices configured to communicate via the network 105. The end-user computing device 125 may be a communication device through which the end-user submits a request to receive content. The requests may be requests to a search engine, and the requests may include search queries. In some implementations, the request can include a request to access a web page.
The content provider computing device 115, the content publisher computing device 120, and the end user computing device 125 may include a processor and memory, i.e., processing circuitry. The memory stores machine instructions that, when executed by the processor, cause the processor to perform one or more of the operations described herein. The processor may include a microprocessor, an Application-Specific Integrated circuit (ASIC), a Field-Programmable Gate Array (FPGA), the like, or a combination thereof. The memory may include, but is not limited to, an electronic, optical, magnetic storage or transmission device, or any other storage or transmission device capable of providing a processor with program instructions. The Memory may also include a floppy disk, a CD-ROM, a DVD, a magnetic disk, a Memory chip, an ASIC, an FPGA, a Read-Only Memory (ROM), a Random-Access Memory (RAM), an Electrically-Erasable Read-Only Memory (EEPROM), an Erasable Programmable Read-Only Memory (EPROM), a flash Memory, an optical medium, or any other suitable Memory from which a processor may Read instructions. The instructions may include code from any suitable computer programming language.
The content provider computing device 115, the content publisher computing device 120, and the end user computing device 125 may also include one or more user interface devices. In general, a user interface device refers to any electronic device that communicates data to a user by generating sensory information (e.g., a visualization on a display, one or more sounds, etc.) and/or converts sensory information received from a user into electronic signals (e.g., a keyboard, a mouse, a pointing device, a touch screen display, a microphone, etc.). According to various implementations, the one or more user interface devices may be inside the housings of the content provider computing device 115, the content publisher computing device 120, and the end user computing device 125 (e.g., built-in displays, microphones, etc.), or outside the housings of the content provider computing device 115, the content publisher computing device 120, and the end user computing device 125 (e.g., a monitor connected to the user computing device 125, a speaker connected to the user computing device 125, etc.). For example, the content provider computing device 115, the content publisher computing device 120, and the end user computing device 125 may include electronic displays that visually display web pages using web page data received from one or more content sources via the network 105 and/or from the data processing system 110. In some implementations, the content placement campaign manager or third-party content provider may communicate with the data processing system 110 via the content provider computing device 115. In some implementations, the content provider can communicate with the data processing system 110 via a user interface displayed on a user interface device of the content provider computing device 115.
The data processing system 110 may include at least one server. For example, the data processing system 110 may include multiple servers located in at least one data center or server farm. In some implementations, the data processing system 110 includes a content placement system, such as a content item server or a content item placement system. The data processing system 110 may include at least one asset receiving module 130, at least one asset analysis module 135, at least one asset scoring module 140, and at least one database 150. Each of the asset reception module 130, the asset analysis module 135, and the asset scoring module 140 may include at least one processing unit, server, virtual server, circuit, engine, agent, device, or other logic device, such as a programmable logic array configured to communicate with the database 150 and other computing devices (e.g., the content provider computing device 115, the content publisher computing device 120, or the end user computing device 125) via the network 105.
The asset reception module 130, the asset analysis module 135, and the asset scoring module 140 may include or execute at least one computer program or at least one script. In some implementations, the asset reception module 130, the asset analysis module 135, and the asset scoring module 140 may be separate components, a single component, or part of the data processing system 110. The asset reception module 130, asset analysis module 135, and asset scoring module 140 may include a combination of software and hardware, for example, configured to execute one or more scripts to: (a) receiving one or more text strings (e.g., title and description) for scoring one or more content items; (b) receiving one or more target keywords; (c) searching synonyms and roots; (d) calculating an overall asset mix value; (e) calculating the overall category coverage; (f) calculating an overall keyword coverage value; (g) determining an overall content item score; and (h) provide the overall content item score to the content provider computing device 115.
The data processing system 110 may also include one or more content repositories or databases 150. The database 150 may be located locally in the data processing system 110. In some embodiments, the database 150 may be remote from the data processing system 110, but may be in communication with the data processing system 110 via the network 105. The database 150 may include web pages, content items, primary video content, content item campaign managers, content provider feedback, third party content, and annotations, etc. to serve the end user computing devices 125.
The asset reception module 130 may receive one or more assets (e.g., text strings) provided by the content provider through the content provider computing device 115. In some implementations, the content provider can provide any number (e.g., can be between 2 and 15) of text-based titles, as well as any number of text-based descriptions. The headings and descriptions may occur in any order. In some implementations, the content provider may include at least one of the plurality of keywords in each title in the first subset of titles and not include any keywords in each title in the second subset of titles.
The asset reception module 130 may receive one or more target keywords provided by the content provider through the content provider computing device 115. In some implementations, any number of target keywords may be provided by the content provider. The target keywords may be any word, phrase, or symbol combination, and the content provider may indicate the target interaction audience or text string category to the asset analysis module 135. For example, the target keyword may be "STORE" and the content provider may provide the keyword to the asset reception module 130 to indicate that the text asset is related to a STORE. In another example, the target keyword may be "FOOD", which may indicate that the textual asset is related to FOOD. Although the keywords included herein have been shown as single words in all capital letters, it should be understood that the target keywords can be any word, phrase, or combination of symbols readable by the computing device. The asset reception module 130 may receive one or more target locations provided by the content provider through the content provider computing device 115. The asset reception module 130 may receive the address from the content provider computing device 115. The address may correspond to a landing page associated with a text string and a target keyword provided by a content provider. The landing page may be a web page.
In response to receiving the assets provided by the content provider, the asset reception module 130 may store the assets in the database 150. In database 150, asset reception module 130 may rank or group assets provided by the content provider in association with the identity of the content provider. Thus, once the asset reception module 130 receives any newly offered assets from the content provider 115, the asset reception module 130 may determine whether the newly offered assets already exist in the database 150 at the location associated with the content provider. In some implementations, the location in the database can be determined based on an identifier associated with the content provider computing device 115. In some implementations, if a newly offered asset already exists in the database 150, the asset reception module 130 may communicate or interact with the asset scoring module 140 to retrieve an existing asset score in the database 150; and if the newly provisioned asset does not exist in the database 150, the asset reception module 130 may communicate or interact with the asset analysis module 135 to evaluate the asset, as will be discussed below.
The asset analysis module 135 may analyze the asset mix of assets received by the asset reception module 130. In some implementations, a mix of assets can be referred to as a metric that measures whether the assets can reasonably create an advertisement. Continuing with the above example in which the advisor is a merchant selling women's shoes, the asset analysis module 135 may evaluate a mix of assets provided by the merchant by analyzing whether the plurality of assets are related to each other and/or whether there are some of the plurality of assets.
The asset analysis module 135 may calculate an asset mix for the asset by determining the number of tokens common to the text strings received by the asset reception module 130. It should be noted that the overall asset mix value is calculated from the individual asset mix values of each of the text strings. In some implementations, the asset mix module may calculate an asset mix score for each of the text strings and then aggregate the individual asset mix scores into an overall asset mix value. In some implementations, the asset analysis module 135 can tokenize text strings. Each token of the text string may comprise a word, phrase, or combination of symbols readable by the computing device. When it is determined that the token is shared between two text strings, the asset analysis module may also determine synonyms, roots, and context information about the token in each text string. For example, the first text string may contain the token "SHOES (SHOES)" and the second text string may contain the keyword "footwar (SHOES)". The asset analysis module may determine that the first and second text strings contain matching tokens because the token "SHOES" is very similar to "foodwear".
The asset analysis module 135 may retrieve one or more synonyms and one or more roots for each token contained in each of the text strings received by the asset reception module 130. The asset analysis module 135 may retrieve synonyms and roots in the database 150. The asset analysis module 135 may also retrieve synonyms and roots from the content provider computing device 115. The asset analysis module 135 may also use a lookup table to retrieve synonyms and roots. The asset analysis module 135 may also use language processing models (e.g., LSTM, recurrent neural networks, etc.) to determine synonyms and roots for each token in each text asset.
In the example case where the content provider computing device 115 provides assets that are "biscuit good" and "fast-running shoes," the asset analysis module 135 may determine that the two assets are not related to each other, and thus, the asset analysis module 135 may determine that the asset mix metric of the two assets is high. In another case where a merchant offers assets that are "popular shoes" and "shoes everyone is talking about," the asset analysis module 135 may determine that the two assets are duplicate with respect to each other and, therefore, the asset analysis module 135 may determine that the asset mix metric for the two assets is low. In yet another case where the merchant provides the assets of "fashion shoes" and "buy your favorite immediately," the asset analysis module 135 may determine that the two assets are complementary to each other, and thus, the asset analysis module 135 may determine that the asset mix metric of the two assets is medium to high. Such asset mix metrics may then be used to determine an overall content item score for one or more content items created based on the received assets.
The asset analysis module 135 may determine an asset mix value for each of the text strings received by the asset reception module 130. To determine the asset mix value of the text string, the asset analysis module 135 may first select the text string. In some implementations, the asset analysis module 135 may compare the selected text string to each of the remaining text strings received by the asset reception module 130. The asset analysis module 135 may sequentially compare the selected text string with all other text strings one by one. The asset analysis module 135 may compare the text string to all other text strings in parallel, or using a combination of sequential and parallel processing. Asset reception module 130 may select a second text string from the remaining text strings.
The asset analysis module 135 may determine the number of matching tokens in the first and second text strings based on the number of tokens in the first text string, synonyms of tokens in each text string, and the root of the token text string. Matching tokens may be similar tokens, synonymous tokens, perfectly matching tokens, or tokens that share a root word or meaning. The asset analysis module 135 may determine matching tokens by counting the number of perfectly matching tokens in the first and second text strings, such as incrementing a register for each perfectly matching token by one. In some implementations, the asset analysis module 135 may increment a register when there is an inaccurate match between the two tokens of the first text string and the second text string. An inexact match may include two tokens that are synonyms of each other, such as "SHOE" and "FOOTWEAR". In some implementations, the asset analysis module 135 may increase the count by a value proportional to the degree of match between the two tokens of the first and second text strings. The degree of match between two tokens may be determined by the weight value associated with the synonym of the token. For example, "SHOE" and "FOOTWEAR" are not perfect matches. As described above, the asset analysis module 135 may retrieve "foodwear" as a synonym for "SHOE," and also retrieve weight values associated with the relationship between the two words. In some implementations, the asset analysis module 135 may increase the count of matching markers by a weight value to reflect an inexact match between the two markers. The asset analysis module 135 may continue to select different text strings and perform the above-described actions until the indicia of the first text string has been compared to the indicia of all other text strings received by the asset reception module 130. The asset analysis module 135 may increment or otherwise increase the count of each text string received by the asset reception module 130. The asset analysis module 135 may also retrieve weight values in the database 150 that indicate that the two markers are complementary to each other. If the asset analysis module 135 determines that the two tokens are complementary to each other, it may increment the count associated with the text string by a complementary weight value. In this way, the asset analysis module 135 may provide a greater asset mix value for a text string if the indicia of the text string is complementary to the indicia in other text strings. For example, two labels such as "SHOES" and "FAVORI TES (favorites)" may have high complementary weight values, while labels "SHOES" and "FOOTWEAR" may have low complementary weight values.
The asset analysis module 135 may divide the number of matching tokens by the number of tokens in the first text string to determine an asset mix value for the first text string. In some implementations, the asset analysis module 135 does not divide the number of matching tokens by the number of tokens in the first text string. In some implementations, the asset analysis module 135 may use the number of matching tokens between the first text string and the second text string as the asset mix value for the first text string. Although it has been described above that the asset mix value of the first text string is calculated using only the first text string and the second text string, it should be understood that the asset analysis module 135 may repeat this process for each text string received by the asset reception module 130. In this way, the asset analysis module 135 may calculate an asset mix value for each text string.
The asset analysis module 135 may aggregate the asset mix values for each text string to calculate an overall asset mix value. The overall asset mix value may be a numerical estimate of the diversity, similarity, or complementarity of the text strings. The asset analysis module 135 may calculate an overall asset mix value by summing each asset mix value for each text string. In some implementations, the asset analysis module 135 may calculate the overall asset mix value for the text string by taking the average of the asset mix values for the text string. In some implementations, the asset analysis module 135 may calculate the overall asset mix value by inputting the asset mix value for each text string into the asset mix model. The asset mix model may be any type of machine learning model (e.g., a deep neural network, a recurrent neural network, a linear regression, a support vector machine, etc.). In some implementations, the asset analysis module 135 may store the overall content item scores in the database 150.
The asset analysis module 135 may analyze the category coverage of assets received by the asset reception module 130. In some embodiments, the category coverage of multiple assets may be referred to as a pair: the number of titles included in the number of assets, the variety of titles included in the number of assets, the number of asset categories (e.g., brand categories, promotion categories, business information categories, etc.), and/or a metric describing whether the number of assets differs from other assets. The asset analysis module 135 may calculate a category coverage value for each text string received by the asset reception module 130. The category coverage value may be a measure of how well the text string reflects the predetermined category.
The asset analysis module 135 may determine a category coverage value for each text string received by the asset reception module 130. In some implementations, the category coverage value is a measure of the number of categories reflected by the text string. In some embodiments, the number of possible categories is fixed and predetermined. The category coverage value may be a count of how many categories are associated with one or more labels in the text string. The asset analysis module 135 may determine a category coverage value for the text string by entering the text string into a category coverage model. The category coverage model may output a number that reflects the number of categories reflected by the text string. The category overlay model may output a set of numbers representing each category reflected by the text string. The class coverage model may be any type of machine learning model (e.g., a recurrent neural network, a convolutional neural network, a deep neural network, a linear regression, a random forest, etc.). In some implementations, the asset analysis module 135 may determine the category coverage value for the text string by inputting the tagged subset of text strings into a category coverage model.
In some implementations, the asset analysis module 135 may compare the number of text strings received by the asset reception module 130 to a predetermined number of text strings (e.g., 2). For example, if the asset analysis module 135 has determined that the number of titles is greater than the predetermined number, the asset analysis module 135 may determine the first category coverage metric as high; and if the asset analysis module 135 has determined that the number of titles is less than or equal to the predetermined number, the asset analysis module 135 may determine the first category coverage metric as low.
In some implementations, the asset analysis module 135 may compare the variety of titles included in the number of assets. The asset analysis module 135 may predefine a plurality of text string (e.g., title) categories. In response to the asset reception module 130 receiving the titles and communicating with the asset analysis module 135, the asset analysis module 135 may determine a corresponding title category for each received title and determine how many different title categories the received titles are distributed over. If the number of different title categories is less than a first threshold (e.g., N), the asset analysis module 135 may determine that the second category coverage metric is low; if the number of different title categories is equal to or greater than a first threshold (e.g., N) and less than a second threshold (e.g., M), the asset analysis module 135 may determine that the second category coverage metric is medium; and if the number of different title categories is equal to or greater than a second threshold (e.g., M), the asset analysis module 135 may determine that the second category coverage metric is high.
In some implementations, the asset analysis module 135 may determine whether the at least two text strings received by the asset reception module 130 are different (e.g., substantially different) from other text strings, which may include other titles and/or other descriptions. For example, a content provider selling women's shoes provides such a description: "find your favorite brand and latest style in one place. Waiting, today place a order! "and" your favorite brand "are used herein. Today place orders! ", the asset analysis module 135 may determine that the two descriptions are repeated relative to each other, and thus, the asset analysis module 135 may determine that the third category coverage metric is low. If the description is "find your favorite brand and latest style in one place. Waiting, today place a order! The "and" order is a free delivery over $ 50. A wide variety of fashionable and comfortable shoes ", the asset analysis module 135 may determine that the two descriptions are different from each other, and therefore, the asset analysis module 135 may determine that the third category coverage metric is high.
In some implementations, the asset analysis module 135 can aggregate (e.g., average) the category coverage metrics for each text string to estimate an overall category coverage metric. For example, the asset analysis module 135 may sum each category coverage value for each text string into an overall category coverage value. In some implementations, the asset analysis module 135 may sum each category coverage value for each text string such that the calculated overall category coverage value represents the total number of unique categories reflected by the text string. In some implementations, the asset analysis module may average each category coverage value for each text string to calculate an overall category coverage value. In some implementations, the asset analysis module 135 can enter the category coverage value for each text string into the overall category coverage model. The overall category override model may output a value that may be used as an overall category override for the text string received by asset reception module 130. Such overall category coverage metrics may then be used to estimate an overall content item score for one or more content items created based on the received text strings. In some implementations, the asset analysis module 135 can present the category coverage metrics separately from the overall metrics, which are based not only on the category coverage, but also on other factors, such as the character length of the text string or other overall content item quality signals. In some implementations, the asset analysis module 135 may provide estimated category coverage metrics and overall metrics for the full content item before providing the number and distribution of text strings (e.g., minimal title and minimal description).
In some implementations, the asset analysis module 135 may compare each of the category coverage value metrics for each asset to a predefined threshold. For example, the asset analysis module 135 may compare the category coverage of the first text string to a first predefined threshold (e.g., 3 categories) and determine that the category coverage of the first text string is greater than the first predefined threshold. The asset analysis module 135 may compare the category coverage of the first text string to a second predefined threshold (e.g., 10 categories) and determine that the category coverage of the first text string is less than the second predefined threshold. The asset analysis module 135 may calculate and update a keyword coverage value for the first text string based on a relationship to a first predefined threshold and a relationship to a second predefined threshold. For example, the category coverage value of the first text string may be determined to be "GOOD", or a numerical value indicating a relationship with a first predefined threshold or a second predefined threshold. The asset analysis module 135 may perform these operations on each of the text strings.
The asset analysis module 135 may retrieve the estimated flow value for each of the keywords received by the asset reception module 130. The estimated flow value may be retrieved from a database (e.g., database 150). If a particular keyword is used in the content item, the estimated flow value may correspond to the number of interactions expected for the particular keyword. In some implementations, the estimated flow value may correspond to the number of searches for a particular keyword. For example, the click-through rate for a content item containing the keyword "DISCOUNT" may be very high. Thus, the estimated traffic value for the search key "DISCOUNT" in the database will be greater than the estimated traffic value for a key that did not achieve a high click-through rate. In some implementations, the asset analysis module 135 can retrieve the estimated flow value from the content provider computing device 115. In some implementations, the asset analysis module 135 can retrieve the estimated flow value in the content publisher computing device 120. In some implementations, the asset analysis module 135 can retrieve the estimated flow value in one or more end user computing devices 125.
The asset analysis module 135 may analyze the keyword coverage of the text string received by the asset reception module 130. In some implementations, the keyword override of multiple assets can be referred to as a measure of whether the selected keyword in a content item combination that is creating the content item is also used by any or a sufficient number of received text strings. In some implementations, such metrics may be referred to as keyword coverage metrics. As described above, the asset analysis module 135 may aggregate (e.g., average) the asset mix metrics, overall category coverage metrics, and keyword coverage metrics of the received assets to estimate overall content item scores for one or more content items created based on the received assets. In some implementations, the overall content item score can be classified into a number of different levels, such as "INCOMPLETE", "POOR", "AVERAGE", "GOOD", and "EXCELLENT".
The asset analysis module 135 may count the number of occurrences of each of the target keywords received by the asset reception module 130 in each of the text strings received by the asset reception module 130. Counting the number of occurrences may include determining the number of exact matches in the text string. In some implementations, the asset analysis module 135 may retrieve synonyms and roots for each target keyword in the database 150. The asset analysis module may also retrieve similarity weight values corresponding to the similarity between the keywords and their potential synonyms and/or roots. The asset analysis module 135 may also retrieve synonyms and/or roots and associated weight values from a lookup table. The asset analysis module 135 may also retrieve synonyms and/or roots and their associated weight values according to a language processing model. The asset analysis module 135 may increment the count associated with each target keyword upon determining that the keyword or one of its synonyms or roots is present in the text string. The asset analysis module 135 may scan the tags of each text string to determine if the target keyword or similar target keywords match. In some implementations, the asset analysis module may increase the associated count by the determined similarity weight value. In this manner, the count may reflect the coverage of the target keyword in the text string received by the asset reception module 130. The number of occurrences of each target key may be equal to the counter value associated with the target key.
The asset analysis module 135 may multiply the number of occurrences of each target keyword by the estimated flow value of the respective target keyword to calculate a weighted keyword coverage value for the respective target keyword. The estimated flow value may be an estimated click-through rate, an estimated factor reflecting a number of interactions with a content item including a target keyword, or another factor related to keyword flow. In some implementations, the estimated traffic value may be an estimated search rate, reflecting the number of times a particular keyword has been searched. The asset analysis module 135 may also determine a weighted keyword value by inputting the estimated flow value and the number of occurrences of each target keyword into a weighted keyword model. The weighted keyword model may be any type of machine learning model (e.g., neural network, linear regression model, support vector machine, etc.).
The asset analysis module 135 may aggregate each weighted keyword value to calculate an overall keyword coverage value for the target keyword and text string received by the asset reception module 130. In some implementations, the asset analysis module 135 may sum each of the weighted keyword values to calculate an overall keyword coverage value. In some implementations, the asset analysis module 135 may average each of the keyword coverage values to calculate an overall keyword coverage value. In some implementations, the asset analysis module 135 may calculate the overall keyword coverage value by inputting each keyword coverage value into the overall keyword coverage model. The entire keyword overlay model may be any machine learning model (e.g., neural network, linear regression, support vector machine, random forest, etc.).
The asset analysis module 135 may retrieve location keywords in the database 150 that are related to the target location provided by the content provider. For example, the asset analysis module 135 may access the database using the target location as a key value and retrieve a data record in the database 150 that contains a key corresponding to the key value. The asset analysis module 135 may also retrieve one or more estimated flow values for each location keyword retrieved from the database 150. The asset analysis module 135 may count the number of occurrences of each position key in each text string received by the asset reception module 130. The asset analysis module 135 may generate a location keyword count value corresponding to the number of occurrences of the location keyword in the text string. Counting the number of occurrences may include determining the number of exact matches in the text string. In some implementations, the asset analysis module 135 may retrieve synonyms and roots for each location keyword in the database 150. The asset analysis module may also retrieve similarity weight values corresponding to the similarity between the keywords and their potential synonyms and/or roots. The asset analysis module 135 may also retrieve synonyms and/or roots and associated weight values from a lookup table. The asset analysis module 135 may also retrieve synonyms and/or roots and their associated weight values according to a language processing model. The asset analysis module 135 may increment the count associated with each target keyword upon determining that the keyword or one of its synonyms or roots is present in the text string. The asset analysis module 135 may scan the tags of each text string to determine if a location keyword or similar location keyword matches. In some implementations, the asset analysis module may increase the associated count by the determined similarity weight value. In this manner, the count may reflect the coverage of location keywords in the text string received by the asset reception module 130.
The asset analysis module 135 may aggregate each of the location keyword counts to calculate a location relevance value of the target location to the text string received by the asset reception module 130. In some implementations, the asset analysis module 135 may sum each of the location keyword counts to calculate a location relevance value. In some implementations, the asset analysis module 135 may average each of the location keyword counts to calculate a location relevance value. In some implementations, the asset analysis module 135 may calculate the location relevance value by inputting each of the location keyword counts into a location relevance model. The location correlation model may be any machine learning model (e.g., neural network, linear regression, support vector machine, random forest, etc.).
The asset analysis module 135 may access a landing page associated with the address received by the asset reception module 130. The asset analysis module 135 may determine whether the landing page is a home page or a multi-product page by analyzing the contents of the landing page. In some implementations, the content provider can indicate, via the content provider computing device, an address to a home page or multi-product page or other kind of web page. The asset analysis module 135 may parse the landing page to determine one or more landing page tokens. The asset analysis module 135 may count the number of matches between indicia included in the text string received from the content provider and landing page indicia to determine a landing page relevance value. In some implementations, the landing page relevance value is equal to a number of token matches between the landing page token and the text string token. In some implementations, token matching may be based on similarity and synonyms, such as the calculations described above with respect to asset mix values.
The asset scoring module 140 may determine whether at least one content item may be created based on the received text string. Before, concurrently with, or after the asset analysis module 135 evaluates one or more of the above-described metrics, the asset scoring module 140 may combine at least a subset of the text strings to create one or more content items. For example, in response to asset reception module 130 receiving a title "STORE: gadgets "," multiple options of 100 "," warranty for life ", and" free delivery of orders over $ 99 ", and" made of durable, high quality materials. Any color you need is customized. Trusted STORE "and" your satisfaction "are our first mission. We provide preferential pricing and non-disputed ordering "the asset scoring module 140 can be made by combining the" STORE gadget "and" life-long "headings and" from durable, high quality materials. Any color you need is customized. A trusted STORE. "to create a content item.
The asset scoring module 140 may also determine an overall content item score based on the number of content items that the asset scoring module 140 creates using the received assets. For example, if more than a given number (e.g., 3) of content items can be created, the asset analysis module 135 can determine that the asset has an average quality, and if more than another given number (e.g., 8-10) of content items can be created, the asset analysis module 135 can determine that the asset has a higher quality.
The asset analysis module 135 may provide one or more operational items of one or more created content items to the content provider computing device 115 via the network 105. In some implementations, the asset analysis module 135 may provide one or more operational terms according to the metrics. For example, if the asset analysis module 135 has determined that the number of text strings received is insufficient (e.g., below a certain threshold, etc.), the asset analysis module 135 may provide an action item, such as "add more title". In another example, if the asset analysis module 135 has determined that the received titles are indistinguishable relative to each other (e.g., the asset mix value is below a predefined threshold, etc.), the asset analysis module 135 may provide an operation term, e.g., "enter a more distinguishable title". In another example, if the asset analysis module 135 has determined that the received descriptions are indistinguishable relative to each other (e.g., the asset mix value is below a predefined threshold, etc.), the asset analysis module 135 may provide an operation term, e.g., "enter a more distinguishable description". In yet another example, if the asset analysis module 135 has determined that the received title does not include the selected or most important keywords (e.g., the keyword coverage metric is below a certain threshold, etc.), the asset analysis module 135 may provide an action term, e.g., "include the most important keywords in the title".
The asset scoring module 140 may determine an overall content item score using a content scoring model. The asset scoring module 140 may determine the overall content item score by inputting any one of a number of text strings, a number of tokens in a text string, an overall asset mix value, an overall category coverage value, a location relevance value, a landing page relevance value, and an overall keyword coverage value into the content scoring model. In some implementations, the content scoring model can provide four outputs, including "POOR (POOR)", "FAIR (GOOD)", "GOOD (GOOD)", and "EXCELLENT". In some implementations, the content scoring model is a linear regression model. In some implementations, the content scoring model is a different type of machine learning model (e.g., a neural network, a support vector machine, a random forest, etc.). In some implementations, the overall content item score is a numerical value. The overall content item score may indicate a relationship between the content item and the potential click-through rate of the content item generated by the asset scoring module 140. The overall content item score may be an estimated number of interactions with the generated content item. The asset scoring module 140 may calculate an increase in the number of interactions between the previous overall content item score and the generated overall content item score based on the overall content item score. In some implementations, the increase in the number of interactions may be a percentage increase (e.g., "click volume increase 55%").
In some implementations, the asset analysis module 135 can provide the overall content item scores for the one or more created content items and corresponding operational items to the content provider computing device 115 via the network 105 at the same time the asset scoring module 140 creates the one or more content items and prior to providing the content items for display on the end user computing device 125. In some implementations, the asset analysis module 135 can store respective content item scores for various content items created by different combinations of assets in the database 150. The asset scoring module 140 may provide the overall content item score and the corresponding operation item(s) for each of the various created content items as persistent columns for display on the content provider computing device 115 via the network 105. In some implementations, the overall content item scores and/or corresponding operational items can be categorized and filtered by the content item provider and/or the asset scoring module 140. In some implementations, the asset scoring module 140 can provide an increase in the number of interactions determined by the content scoring model. For example, if the estimated click-through rate determined by the content scoring model is greater than a previously calculated click-through rate, the asset scoring module 140 may provide a percentage increase in the click-through rate to the content provider computing device 115.
Referring to FIG. 2, a flow diagram of a method 200 of evaluating one or more text strings based on numerical information is depicted. The method 200 may be implemented or performed using the data processing system 110 described in detail above in connection with FIG. 1 or the computer system 600 described below in connection with FIG. 6. The asset reception module may receive a text string (205). The asset reception module may receive a target keyword (210). The asset analysis module may retrieve synonyms and roots (215). The asset analysis module may calculate an overall asset mix value (220). The asset analysis module may calculate an overall category coverage value (225). The asset analysis module may calculate a keyword coverage value (230). The asset scoring module may determine an overall content item score (235). The asset scoring module may provide an overall content item score (240).
An asset reception module (e.g., asset reception module 130) may receive the text string (205). For example, the asset reception module 130 may receive a plurality of text strings for creating one or more content items. The text string may include a first number of titles and a second number of descriptions, each including one or more tags. In some implementations, the asset reception module 130 may receive the text string from the content provider computing device (e.g., 115) via a network (e.g., 105). The text strings may also be retrieved in a database (e.g., database 150).
An asset receiving module (e.g., asset receiving module 130) may receive the target keyword (210). For example, the asset reception module 130 may receive a plurality of target keywords related to one or more content items. Keywords may include words, phrases, or any combination of computer-readable symbols. In some implementations, the target keyword can be received from a content provider computing device (e.g., content provider computing device 115) via a network (e.g., 105). The target keyword may also be retrieved in a database (e.g., database 150). The target keyword may also include a target location. The target keyword may also include an address associated with a landing page associated with the text string received at (205).
An asset analysis module (e.g., asset analysis module 135) may retrieve the synonyms and the root words (215). For example, the asset analysis module may access a database (e.g., database 150) to retrieve synonyms and roots associated with the tokens in the text string received at (205). The asset analysis module may also tokenize the text strings received in (205). Synonyms and/or roots may be retrieved by accessing a lookup table. In some embodiments, synonyms and/or roots may be retrieved by accessing a language processing model (e.g., a recurrent neural network, LSTM, etc.).
An asset analysis module (e.g., asset analysis module 135) may calculate an overall asset mix value (220). For example, the asset analysis module may determine the number of matching tokens in the text string received at (205) to determine the overall asset mix value. In some embodiments, the overall asset mix value may be calculated by performing the method 300 in conjunction with FIG. 3. In some implementations, the overall asset mix value may be calculated based on similarities between text strings based on synonyms and roots of tokens included in the text strings.
An asset analysis module (e.g., asset analysis module 135) may calculate an overall category coverage value (220). In some implementations, the overall category coverage value is proportional to the number of categories to which the indicia in the text string received in (205) relate. For example, an asset analysis module (e.g., asset analysis module 135) may calculate a category coverage value for each text string using a category coverage model. The asset analysis module may aggregate the category coverage values for each text string into an overall category coverage value. In some implementations, the asset analysis module may use the method 400 in conjunction with FIG. 4 to calculate an overall category coverage value.
An asset analysis module (e.g., asset analysis module 135) may calculate a keyword coverage value (230). In some implementations, the keyword override value is proportional to a number of times the target keyword received in (205) appears as a token in the text string (205). For example, an asset analysis module (e.g., asset analysis module 135) may calculate a keyword coverage value for each target keyword by calculating the number of occurrences of each target keyword in the text string received at (205). The asset analysis module may aggregate the keyword coverage values for each target keyword to create an overall keyword coverage value. In some implementations, the asset analysis module may use the method 500 in conjunction with FIG. 5 to calculate the overall keyword coverage value.
An asset scoring module (e.g., asset scoring module 140) may determine an overall content item score (235). For example, the asset scoring module may determine the overall content item score by inputting any one of a number of text strings, a number of tokens in a text string, an overall asset mix value, an overall category coverage value, a location relevance value, a landing page relevance value, and an overall keyword coverage value into the content scoring model. In some implementations, the content scoring model can provide four outputs, including "POOR (POOR)", "FAIR (GOOD)", "GOOD (GOOD)", and "EXCELLENT". In some implementations, the content scoring model can provide a numerical output. In some implementations, the content scoring model can be a linear regression model. In some implementations, the content scoring model can output a value corresponding to the estimated traffic increase based on a previous overall content item score.
An asset scoring module (e.g., asset scoring module 140) may provide an overall content item score (240). For example, the asset scoring module may provide the overall content item score to a content provider (e.g., content provider computing device 115) via a network (e.g., network 105). In some implementations, the asset scoring module can store the overall content item scores in a database, such as database 150.
Referring now to FIG. 3, a flow diagram of a method 300 of calculating an overall asset mix value is depicted. The method 300 may be implemented or performed using the data processing system 110 described in detail above in connection with FIG. 1 or the computer system 600 described below in connection with FIG. 6. The asset analysis module may select the ith text string (305). The asset analysis module may enumerate tags for text strings that are not currently selected (310). The asset analysis module may determine the number of matching markers (315). The asset analysis module may divide the matching token by the number of tokens in the ith text string (320). The asset analysis module may determine whether all text strings have been compared. The asset analysis module may add i to a register (330). The asset analysis module may sum the individual asset mix values (335).
An asset analysis module (e.g., asset analysis module 135) may select the ith text string (305). For example, the asset analysis module may enumerate N text strings and assign an index value to each text string. The asset analysis module may select a text string with an index value equal to the count register i. In some embodiments, i may be equal to 1 in the first iteration of the loop in the method. Selecting the text string may include enumerating tokens of the text string to create a list of selected tokens. In some embodiments, the selected indicia may comprise a word, phrase, or any combination of computer-readable symbols.
An asset analysis module (e.g., asset analysis module 135) may enumerate tags for text strings that are not currently selected (310). For example, the asset analysis module may traverse each currently unselected text string (e.g., all text strings that are not the ith text string) and parse the tokens included in the unselected text strings to create a list of unselected tokens. In some embodiments, the unselected tags may include a combination of words, phrases, or any computer-readable symbols.
An asset analysis module (e.g., asset analysis module 135) may determine the number of matching markers (315). For example, the asset analysis module may compare each tag in the selected tag list to a list of unselected tags and determine how many matches occurred. In some implementations, matches may be determined based on exact matches or similarity matches between synonyms or roots. In some implementations, synonyms and roots may be retrieved in a database (e.g., database 150). In some implementations, synonyms and roots may be determined based on a language processing model. In some embodiments, synonyms and roots have matching weight values. The match weight value may be a number less than or equal to 1 for calculating a partial match between two tokens.
An asset analysis module (e.g., asset analysis module 135) may divide the number of matching tokens by the number of tokens in the ith text string (320) to calculate an asset mix value for the ith text string. For example, if the selected text string has 4 tokens that match the unselected text string, and the selected text string consists of 5 tokens, then the asset mix value of the selected text string is equal to 0.8.
An asset analysis module (e.g., asset analysis module 135) may determine whether all text strings have been processed (325). In some implementations, the asset analysis module may determine whether all text strings have been processed by comparing the value i of the count register to the total number of text strings N. If the values match (e.g., i ═ N), then the method 300 may move to (335) to determine the overall asset mix value. If the values do not match, or if not all text strings have been processed, the method 300 increments the count register by i (330) and selects the next text string in (305).
An asset analysis module (e.g., asset analysis module 135) may sum (335) the individual asset mix values. In some implementations, the asset analysis module may add the asset mix values of each text string together to calculate an overall asset mix value. In some implementations, the asset analysis module may average the asset mix values for each text string to calculate an overall asset mix value. In some implementations, the asset analysis module may input the asset mix value for each text string into the asset mix model to determine the overall asset mix value.
Referring now to FIG. 4, a flow diagram of a method 400 of calculating an overall category coverage value is depicted. The method 300 may be implemented or performed using the data processing system 110 described in detail above in connection with FIG. 1 or the computer system 600 described below in connection with FIG. 6. The asset analysis module may select the ith text string (405). The asset analysis module may apply the selected text string to a category coverage model (410). The asset analysis module may receive the number of categories as output (415). The asset analysis module may compare i in the count register to the number of text strings, N, to determine whether all text strings have been processed (420). The asset analysis module may increment the count register by i (425). The asset analysis module may sum the category coverage values for each text string (430).
An asset analysis module (e.g., asset analysis module 135) may select the ith text string (405). For example, the asset analysis module may enumerate N text strings and assign an index value to each text string. The asset analysis module may select a text string with an index value equal to the count register i. In some embodiments, i may be equal to 1 in the first iteration of the loop in the method. Selecting the text string may include enumerating tokens of the text string to create a list of selected tokens. In some embodiments, the selected indicia may comprise a word, phrase, or any combination of computer-readable symbols.
An asset analysis module (e.g., asset analysis module 135) may apply the selected text string to the category coverage model (410). In some implementations, the asset analysis module can apply each tag of the selected text string to the model sequentially. In some implementations, the asset analysis module can apply each tag of the selected text string to the category coverage model in parallel. In some embodiments, the class coverage model is based on a recurrent neural network. In some implementations, the category coverage model is based on any other type of machine learning model (e.g., LSTM, linear regression, etc.).
An asset analysis module (e.g., asset analysis module 135) may receive as output the number of categories encompassed by the selected text string (415). In some embodiments, the number of categories is a number between 0 and 15. In some embodiments, the output of the class coverage model is one of the following four signals: "POOR (POOR)", "FAIR (still)", "GOOD (GOOD)", and "EXCELLENT", where each of the four signals indicates the relative category coverage of the selected text string.
An asset analysis module (e.g., asset analysis module 135) may determine whether all text strings have been processed (420). In some implementations, the asset analysis module may determine whether all text strings have been processed by comparing the value i of the count register to the total number of text strings N. If the values match (e.g., i-N), the method 400 may move to (430) to determine an overall asset mix value. If the values do not match, or if not all text strings have been processed, the method 400 increments the count register by i (425) and selects the next text string in (405).
An asset analysis module (e.g., asset analysis module 135) may sum (430) the various category coverage values. In some implementations, the asset analysis module may sum the category coverage values for each text string together to calculate an overall category coverage value. In some implementations, the asset analysis module may sum each category coverage value for each text string such that the calculated overall category coverage value represents the total number of unique categories reflected by the text string. In some implementations, the asset analysis module may average the category coverage values for each text string to calculate an overall category coverage value. In some implementations, the asset analysis module can input the category coverage value for each text string into a second category coverage model to determine an overall category coverage value.
Referring now to FIG. 5, a flow diagram of a method 500 of calculating an overall key coverage value is depicted. The method 500 may be implemented or performed using the data processing system 110 described in detail above in connection with FIG. 1 or the computer system 600 described below in connection with FIG. 6. The asset analysis module may select the ith target keyword (505). The asset analysis module may retrieve an estimated flow factor for the selected target keyword (510). The asset analysis module may select the jth text string (515). The asset analysis module may count instances of selected keywords in the text string (520). The asset analysis module may determine whether all text strings have been selected (525). The asset analysis module may increment the count register by j. The asset analysis module may multiply the keyword count by the estimated traffic factor (535). The asset analysis module may determine whether all target keywords have been selected (540). The asset analysis module may increment the count register by i. The asset analysis module may sum each of the weighted keyword counts (550).
An asset analysis module (e.g., asset analysis module 135) may select the jth target keyword (505). For example, the asset analysis module may enumerate N target keywords and assign an index value to each target keyword. The asset analysis module may select a target key with an index value equal to i in the count register. In some embodiments, i may be equal to 1 in the first iteration of the loop in the method. In some implementations, the selected target keywords can include any combination of words, phrases, or computer-readable symbols.
An asset analysis module (e.g., asset analysis module 135) may retrieve an estimated flow factor associated with the selected target keyword (510). In some embodiments, the estimated flow factor may be a value between 0 and 1. In some implementations, when a particular keyword is included in the content item, the estimated flow factor may be a value corresponding to an estimated click-through rate for the keyword. In some implementations, the estimated traffic factor may be a value corresponding to an estimated search rate for a particular keyword. In some implementations, the estimated flow factor may be retrieved in a database (e.g., database 150).
An asset analysis module (e.g., asset analysis module 135) may select the jth text string (515). For example, the asset analysis module may enumerate M text strings and assign an index value to each text string. The asset analysis module may select a text string with an index value equal to the count register j. In some embodiments, j may be equal to 1 in the first iteration of the loop. Selecting the text string may include enumerating tokens of the text string to create a list of selected tokens. In some embodiments, the selected indicia may comprise a word, phrase, or any combination of computer-readable symbols.
An asset analysis module (e.g., asset analysis module 135) may count instances of the selected keywords in the selected text string (520). For example, if the selected keyword appears twice in the selected text string, the asset analysis module may increment the counter associated with the selected keyword by 2. In some implementations, the asset analysis module may retrieve one or more synonyms or roots of the target keyword in a database (e.g., database 150). Synonyms or roots may include similarity weight values. In some implementations, if the asset analysis module determines that a synonym or root word exists in the selected text string, the asset analysis module may increment a counter associated with the target keyword by a similarity weight value associated with the synonym or root word.
An asset analysis module (e.g., asset analysis module 135) may determine whether all text strings have been processed (525). In some implementations, the asset analysis module may determine whether all text strings have been processed by comparing the value j of the count register to the total number M of text strings. If the values match (e.g., j ═ M), method 500 may move to (535). If the values do not match, or if not all text strings have been processed, the method 500 increments the count register by j (530) and selects the next text string at (515).
An asset analysis module (e.g., asset analysis module 135) may multiply the keyword count value by an estimated traffic factor associated with the target keyword (535) to calculate a weighted keyword value for the selected target keyword. In some embodiments, the multiplication applies a weight to the key that is proportional to the estimated flow of the key. In some implementations, the asset analysis module does not multiply the keyword count by the estimated flow value.
An asset analysis module (e.g., asset analysis module 135) may determine whether all target keywords have been processed (540). In some implementations, the asset analysis module may determine whether all target keywords have been processed by comparing the value i of the count register to the total number N of text strings. If the values match (e.g., i ═ N), method 500 may move to (550). If the values do not match, or if not all target keys have been processed, the method 500 increments the count register by i (545) and selects the next target key in (505).
An asset analysis module (e.g., asset analysis module 135) may sum the weighted keyword coverage values (550). In some implementations, the asset analysis module may add the weighted keyword coverage values for each target keyword together to calculate an overall keyword coverage value. In some implementations, the asset analysis module may average the weighted keyword coverage values for each target keyword to calculate an overall weighted keyword coverage value. In some implementations, the asset analysis module can input the weighted keyword coverage value for each target keyword into a keyword coverage model to determine an overall keyword coverage value.
Referring now to FIG. 6, a general architecture of an illustrative computer system 600 is depicted in accordance with some embodiments, which computer system 600 may be used to implement any of the computer systems discussed herein (including data processing system 110 and its components, such as various modules 130 and 140). Computer system 600 may be used to provide information for display over network 105. The computer system 600 of fig. 6 includes one or more processors 620 communicatively coupled to a memory 625, one or more communication interfaces 605, one or more output devices 610 (e.g., one or more display units), and one or more input devices 615. The processor 620 may be included in the data processing system 110 or other components of the system 110, such as the various modules 130 and 140.
In computer system 600 of fig. 6, memory 625 may include any computer-readable storage medium and may store computer instructions, such as processor-executable instructions for implementing the various functions described herein for the various systems, as well as any relevant data generated thereby or received via a communication interface or input device(s), if present. Referring again to the system 110 of FIG. 1, the data processing system 110 may include a memory 625 to store information related to inventory availability of one or more content units, subscriptions of one or more content units, and the like. Memory 625 may include database 150. The processor(s) 620 shown in fig. 6 may be used to execute instructions stored in the memory 625, and in so doing, may also read from or write to the memory various information processed and/or generated in accordance with the execution of the instructions.
The processor 620 of the computer system 600 shown in fig. 6 may also be communicatively coupled to or control the communication interface 605 to send or receive various information in accordance with the execution of instructions. For example, communication interface(s) 605 may be coupled to a wired or wireless network, bus, or other communication means, and thus may allow computer system 600 to send information to and receive information from other devices (e.g., other computer systems). Although not explicitly shown in the system of fig. 1, one or more communication interfaces facilitate the flow of information between components of the system 600. In some implementations, the communication interface can be configured (e.g., via various hardware or software components) to provide a website as an access portal to at least some aspects of the computer system 600. Examples of communication interface 605 include a user interface (e.g., a web page) through which a user can communicate with computer system 600.
For example, an output device 610 of the computer system 600 shown in FIG. 6 may be provided to allow various information to be viewed or otherwise perceived in connection with execution of the instructions. For example, an input device 615 may be provided to allow a user to manually adjust, select, enter data, or interact with the processor in any of a variety of ways during execution of instructions. Additional information regarding the general computer system architecture that may be used for the various systems discussed herein is further provided herein.
Implementations of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied in tangible media, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a computer storage medium for execution by, or to control the operation of, data processing apparatus. The program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can comprise a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The features disclosed herein may be implemented on a smart television module (or connected television module, hybrid television module, etc.), which may include a processing module configured to combine an internet connection with a more traditional television program source (e.g., received via cable, satellite, over-the-air, or other signal). The smart television module may be physically incorporated into a television set or may comprise a separate device such as a set-top box, a blu-ray or other digital media player, a game console, a hotel television system, and other companion devices. The smart television module may be configured to allow viewers to search for and locate videos, movies, photos, and other content on a network, on a local cable television channel, on a satellite television channel, or stored on a local hard drive. A Set-Top Box (STB) or Set-Top Unit (STU) may include an information device that may contain a tuner and connect to a television and an external signal source, convert the signal into content, and then display it on a television screen or other display device. The smart television module may be configured to provide a home screen or top-level screen that includes icons for a plurality of different applications (e.g., a web browser and a plurality of streaming media services, a connected cable or satellite media source, other network "channels," etc.). The smart television module may also be configured to provide an electronic program guide to the user. A companion application for the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, to allow the user to control the smart television module, and so forth. In alternative embodiments, these features may be implemented on a laptop or other personal computer, smartphone, other mobile phone, handheld computer, tablet PC, or other computing device.
The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The terms "data processing apparatus," "data processing system," "user device" or "computing device" include all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or a plurality or combination of the foregoing. The apparatus can include special purpose logic circuitry, such as a Field Programmable Gate Array (FPGA) or an Application-Specific Integrated Circuit (ASIC). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures. The module 130 and 140 may include or share one or more data processing devices, computing devices, or processors.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files such as files that store one or more modules, sub programs, or portions of code. A computer program can be deployed to be run on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the operation of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Also, the computer can be embedded in another device, e.g., a mobile phone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), as examples. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and storage devices, including by way of example semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices, magnetic disks (e.g., an internal hard disk or a removable disk), magneto-optical disks, and CD-ROM and DVD-ROM optical disks). The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
In preparation for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can also be used to prepare for interaction with the user; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form including acoustic, speech, or tactile input. Further, the computer is able to interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on a user's client device in response to a request received from the web browser.
Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an internetwork (e.g., the Internet), and a peer-to-peer network (e.g., an ad hoc peer-to-peer network).
A computing system, such as system 600 or data processing system 110, may include clients and servers. For example, the data processing system 110 may include one or more data centers or one or more servers in a server farm. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., HTML pages) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular implementations of the systems and methods described herein. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as occurring in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve satisfactory results. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results.
In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, but rather it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products. For example, the module 130 and 140 may be part of the data processing system 110, a single module, a logical device having one or more processing modules, one or more servers, or part of a search engine.
Having now described some illustrative embodiments, it is to be understood that the foregoing description is intended to be illustrative and not restrictive, and that this description is given by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, these acts and those elements may be combined in other ways to accomplish the same objectives. Acts, elements and features discussed only in connection with one embodiment are not intended to be excluded from a similar role in other embodiments or implementations.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "involving," "characterized by," and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative implementations consisting of the items specifically listed thereafter. In one embodiment, the systems and methods described herein consist of each combination of one, more than one, or all of the described elements, acts, or components.
Any reference herein to an implementation or element or act of the systems and methods in the singular may also include an implementation of a plurality of such elements, and any reference herein to any implementation or element or act in the plural may also include an implementation that includes only a single element. References in the singular or plural form are not intended to limit the presently disclosed system or method, its components, acts or elements to a single or multiple configurations. References to any action or element based on any information, action, or element may include implementations in which the action or element is based, at least in part, on any information, action, or element.
Any embodiment disclosed herein may be combined with any other embodiment, and references to "an embodiment," "some embodiments," "an alternate embodiment," "various embodiments," "one embodiment," etc. are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. These terms, as used herein, do not necessarily all refer to the same implementation. Any implementation may be combined with any other implementation, including or exclusively, in any manner consistent with aspects and implementations disclosed herein.
References to "or" may be construed as inclusive such that any term described using "or" may mean any of a single, more than one, and all of the described terms.
Where technical features in the figures, detailed description or any claim are followed by reference signs, the reference signs have been included for the sole purpose of increasing the intelligibility of the figures, detailed description, and claims. Accordingly, neither the reference signs nor their absence have any limiting effect on the scope of any claim elements.
Claims (20)
1. A method of evaluating a content item using numerical criteria, comprising:
receiving, by an asset reception module, a plurality of text strings, each of the plurality of text strings including a marker;
receiving, by an asset receiving module, a plurality of target keywords;
retrieving, by the asset analysis module, from the database, the one or more synonyms and the one or more roots of each token in each of the plurality of text strings;
for each text string of the plurality of text strings:
selecting, by the asset analysis module, a first text string from the plurality of text strings;
determining, by the asset analysis module, a number of matching tokens in the first text string and the unselected text string based on the number of tokens, the number of roots of the tokens, and the number of synonyms of the tokens;
dividing, by the asset analysis module, the number of matching tokens by the number of tokens in the first text string to determine an asset mix value for the first text string;
summing, by the asset analysis module, each asset mix value of each text string to calculate an overall asset mix value;
determining, by the asset analysis module, a number of categories for each of the plurality of text strings using a category determination model;
summing, by the asset analysis module, the number of categories for each of the plurality of text strings to calculate an overall category coverage value;
retrieving, by the asset analysis module, an estimated flow value for each of a plurality of target keywords;
counting, by the asset analysis module, a number of occurrences of the selected target keyword in each of the plurality of text strings to generate a target keyword count associated with the respective target keyword;
multiplying, by the asset analysis module, each of the target keyword counts by an estimated flow value of the respective target keyword to calculate a weighted keyword value associated with the respective target keyword;
summing, by the asset analysis module, each of the weighted keyword values to compute a keyword coverage value;
determining, by the asset scoring module, an overall content item score using a content scoring model based on the number of text strings, the number of tokens in the text strings, the overall asset mix value, the overall category coverage value, and the overall keyword coverage value; and
overall content item ratings associated with the plurality of text strings and the plurality of target keywords are provided to the content provider computing device by the asset scoring module.
2. The method of claim 1, further comprising:
identifying, by an asset reception module, whether the plurality of text strings are present at a location in the database, wherein the location is determined based on an identifier received from the content provider computing device; and
storing, by the asset reception module, the plurality of text strings at the location in the database in response to determining that the plurality of text strings are not present in the database based on the location.
3. The method of claim 2, further comprising:
storing, by the asset scoring module, the overall content item score in a database;
retrieving, by an asset scoring module, a plurality of whole content item scores from a database, each of the whole content item scores being associated with a plurality of text strings;
ranking, by the asset scoring module, the plurality of overall content item scores to create a ranked list of content item scores;
an ordered list of content item scores is provided by an asset scoring module to a content provider computing device.
4. The method of claim 1, wherein summing the number of categories for each of the plurality of text strings to calculate an overall category coverage value further comprises:
comparing, by the asset analysis module, a sum of a number of categories of each of the plurality of text strings to a first predefined threshold to create a first relationship;
comparing, by the asset analysis module, a sum of the number of categories for each of the plurality of text strings to a second predefined threshold to create a second relationship; and
calculating, by the asset analysis module, a category coverage value based on the first relationship and the second relationship.
5. The method of claim 1, summing each of the weighted key values to compute a key coverage value further comprising:
receiving, by an asset reception module, a target location from a content provider computing device;
retrieving, by the asset analysis module, a plurality of location keywords associated with the target location;
counting, by an asset analysis module, a number of occurrences of each of a plurality of location keywords in each of the plurality of text strings to generate a location keyword count associated with the respective location keyword; and
each of the location keyword counts is summed by the asset analysis module to calculate a location relevance value.
6. The method of claim 5, wherein determining the overall content item score is based on a position relevance value.
7. The method of claim 1, further comprising:
receiving, by an asset reception module, a first address from a content provider computing device, the first address associated with a landing page;
accessing, by the asset analysis module, a landing page associated with the first address to retrieve a plurality of landing page indicia; and
the number of indicia in the plurality of text strings that match an indicia in the plurality of landing page indicia is counted by the asset analysis module to determine a landing page relevance value.
8. The method of claim 7, wherein determining the overall content item score is based on the landing page relevance value.
9. The method of claim 7, wherein determining the landing page relevance value further comprises:
determining, by the asset analysis module, whether the landing page is a home page or a multi-product page; and
determining, by the asset analysis module, a landing page relevance value based on the determination of whether the landing page is a home page or a multi-product page.
10. The method of claim 1, wherein:
determining, by the asset analysis module, a number of categories for each of the plurality of text strings based on the recurrent neural network model; and
the determination by the asset analysis module of the overall content item score using the content scoring model is based on a linear regression model.
11. A system comprising one or more processors configured to:
receiving, via a network, a plurality of text strings, each of the plurality of text strings including a token;
receiving a plurality of target keywords via a network;
retrieving from a database one or more synonyms and one or more roots for each token in each of a plurality of text strings;
for each text string of the plurality of text strings:
selecting a first text string from a plurality of text strings;
determining a number of matching tokens in the first text string and the unselected text string based on the number of tokens, the number of token roots, and the number of synonyms of the tokens;
dividing the number of matching tokens by the number of tokens in the first text string to determine an asset mix value for the first text string;
summing each asset mix value of each text string to calculate an overall asset mix value;
determining a number of categories for each of the plurality of text strings using a category determination model;
summing the number of categories for each of the plurality of text strings to calculate an overall category coverage value;
retrieving an estimated flow value for each of a plurality of target keywords;
counting a number of occurrences of the selected target keyword in each of the plurality of text strings to generate a target keyword count associated with the respective target keyword;
multiplying each of the target keyword counts by an estimated flow value of the respective target keyword to calculate a weighted keyword value associated with the respective target keyword;
summing each weighted key value to compute a key coverage value;
determining an overall content item score using a content scoring model based on the number of text strings, the number of tokens in the text strings, an overall asset mix value, an overall category coverage value, and an overall keyword coverage value; and
overall content item ratings associated with the plurality of text strings and the plurality of target keywords are provided via a network.
12. The system of claim 11, further configured to:
identifying whether the plurality of text strings are present at a location in a database, wherein the location is determined based on an identifier received from a content provider computing device; and
in response to determining that the plurality of text strings does not exist at the location in the database, storing the plurality of text strings at the location in the database.
13. The system of claim 12, further configured to:
storing the overall content item score at the location in a database;
retrieving a plurality of overall content item scores from a database, each overall content item score of the plurality of overall content item scores being associated with a plurality of text strings;
ranking the plurality of overall content item scores to create a ranked list of content item scores;
an ordered list of content item scores is provided to a content provider computing device.
14. The system of claim 11, further configured to:
comparing a sum of a number of categories of each of the plurality of text strings to a first predefined threshold to create a first relationship;
comparing a sum of the number of categories for each of the plurality of text strings to a second predefined threshold to create a second relationship; and
a category coverage value is calculated based on the first relationship and the second relationship.
15. The system of claim 11, further configured to:
receiving a target location via a network;
retrieving a plurality of location keywords associated with the target location from a database;
counting a number of occurrences of each of a plurality of position keywords in each of the plurality of text strings to generate a position keyword count associated with the respective position keyword; and
each of the position key counts is summed to calculate a position relevance value.
16. The system of claim 15, further configured to:
an overall content item score is determined based on the location relevance value.
17. The system of claim 11, further configured to:
receiving a first address via a network, the first address associated with a landing page;
accessing a landing page associated with the first address to retrieve a plurality of landing page indicia; and
counting a number of indicia in the plurality of text strings that match an indicia in the plurality of landing page indicia to determine a landing page relevance value.
18. The system of claim 17, further configured to:
an overall content item score is determined based on the location relevance value.
19. The system of claim 17, further configured to:
determining whether the landing page is a home page or a multi-product page; and
a landing page relevance value is determined based on a determination of whether the landing page is a home page or a multi-product page.
20. The system of claim 11, further configured to:
determining a number of categories for each of a plurality of text strings based on a recurrent neural network model; and
determining the overall content item score using the content scoring model is based on a linear regression model.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862732487P | 2018-09-17 | 2018-09-17 | |
US62/732,487 | 2018-09-17 | ||
PCT/US2019/051363 WO2020060949A1 (en) | 2018-09-17 | 2019-09-16 | Systems and methods for assessing advertisement |
Publications (2)
Publication Number | Publication Date |
---|---|
CN111344696A CN111344696A (en) | 2020-06-26 |
CN111344696B true CN111344696B (en) | 2021-05-25 |
Family
ID=69887896
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980005505.8A Active CN111344696B (en) | 2018-09-17 | 2019-09-16 | System and method for evaluating advertisements |
Country Status (4)
Country | Link |
---|---|
US (1) | US10963916B2 (en) |
EP (1) | EP3688619A4 (en) |
CN (1) | CN111344696B (en) |
WO (1) | WO2020060949A1 (en) |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11281854B2 (en) * | 2019-08-21 | 2022-03-22 | Primer Technologies, Inc. | Limiting a dictionary used by a natural language model to summarize a document |
US11514013B2 (en) * | 2020-01-08 | 2022-11-29 | International Business Machines Corporation | Data governance with custom attribute based asset association |
US11720751B2 (en) * | 2021-01-11 | 2023-08-08 | Oracle International Corporation | Global, model-agnostic machine learning explanation technique for textual data |
CN116805918B (en) * | 2023-04-27 | 2024-02-23 | 无锡控博科技有限公司 | Resource pool capacity monitoring and early warning system for UCMP cloud management service platform |
Family Cites Families (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7363308B2 (en) * | 2000-12-28 | 2008-04-22 | Fair Isaac Corporation | System and method for obtaining keyword descriptions of records from a large database |
WO2006133229A2 (en) * | 2005-06-06 | 2006-12-14 | Better, Inc. | System and method for generating effective advertisements in electronic commerce |
US8001105B2 (en) * | 2006-06-09 | 2011-08-16 | Ebay Inc. | System and method for keyword extraction and contextual advertisement generation |
US7873640B2 (en) * | 2007-03-27 | 2011-01-18 | Adobe Systems Incorporated | Semantic analysis documents to rank terms |
US20080249855A1 (en) * | 2007-04-04 | 2008-10-09 | Yahoo! Inc. | System for generating advertising creatives |
KR100893273B1 (en) * | 2007-05-04 | 2009-04-17 | 엔에이치엔(주) | Method and system of advertisement examination using keyword comparison |
US7747600B2 (en) * | 2007-06-13 | 2010-06-29 | Microsoft Corporation | Multi-level search |
US8638363B2 (en) * | 2009-02-18 | 2014-01-28 | Google Inc. | Automatically capturing information, such as capturing information using a document-aware device |
US20110282858A1 (en) * | 2010-05-11 | 2011-11-17 | Microsoft Corporation | Hierarchical Content Classification Into Deep Taxonomies |
US10331785B2 (en) | 2012-02-17 | 2019-06-25 | Tivo Solutions Inc. | Identifying multimedia asset similarity using blended semantic and latent feature analysis |
US10325033B2 (en) | 2016-10-28 | 2019-06-18 | Searchmetrics Gmbh | Determination of content score |
-
2019
- 2019-09-16 EP EP19863874.4A patent/EP3688619A4/en not_active Withdrawn
- 2019-09-16 US US16/760,621 patent/US10963916B2/en active Active
- 2019-09-16 WO PCT/US2019/051363 patent/WO2020060949A1/en unknown
- 2019-09-16 CN CN201980005505.8A patent/CN111344696B/en active Active
Also Published As
Publication number | Publication date |
---|---|
US10963916B2 (en) | 2021-03-30 |
CN111344696A (en) | 2020-06-26 |
EP3688619A1 (en) | 2020-08-05 |
US20200402098A1 (en) | 2020-12-24 |
WO2020060949A1 (en) | 2020-03-26 |
EP3688619A4 (en) | 2020-08-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP5899275B2 (en) | System and method for scoring quality of advertisement and content in online system | |
CN111344696B (en) | System and method for evaluating advertisements | |
JP6267344B2 (en) | Content selection using quality control | |
US20170345048A1 (en) | Attribution Marketing Recommendations | |
US8893012B1 (en) | Visual indicator based on relative rating of content item | |
JP5646787B1 (en) | Integrated market for advertising and content in online systems | |
US8548981B1 (en) | Providing relevance- and diversity-influenced advertisements including filtering | |
US9501499B2 (en) | Methods and systems for creating image-based content based on text-based content | |
US20100250335A1 (en) | System and method using text features for click prediction of sponsored search advertisements | |
US20150254714A1 (en) | Systems and methods for keyword suggestion | |
US20170323230A1 (en) | Evaluating keyword performance | |
US8751520B1 (en) | Query suggestions with high utility | |
WO2014052608A1 (en) | Dynamic product content generation | |
US20140372202A1 (en) | Predicting performance of content items using loss functions | |
CN109804368A (en) | For providing the system and method for contextual information | |
US10217132B1 (en) | Content evaluation based on users browsing history | |
US20160275569A1 (en) | Method and system for advertisement coordination | |
US9720983B1 (en) | Extracting mobile application keywords | |
US9208260B1 (en) | Query suggestions with high diversity | |
US20160267551A1 (en) | Method and system for advertisement coordination | |
US20210365962A1 (en) | Systems and methods of selecting visual elements based on sentiment analysis | |
US20150363793A1 (en) | Systems and methods for collecting and using retail item inspection data | |
US10366414B1 (en) | Presentation of content items in view of commerciality | |
US20160267531A1 (en) | Method and system for advertisement coordination | |
US20160275568A1 (en) | Method and system for advertisement coordination |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
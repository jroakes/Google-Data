EP1800224B1 - Methods and systems for selecting a language for text segmentation - Google Patents
Methods and systems for selecting a language for text segmentation Download PDFInfo
- Publication number
- EP1800224B1 EP1800224B1 EP05802157A EP05802157A EP1800224B1 EP 1800224 B1 EP1800224 B1 EP 1800224B1 EP 05802157 A EP05802157 A EP 05802157A EP 05802157 A EP05802157 A EP 05802157A EP 1800224 B1 EP1800224 B1 EP 1800224B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- language
- segmented
- frequency
- characters
- string
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 title claims description 45
- 230000011218 segmentation Effects 0.000 title description 31
- 230000006870 function Effects 0.000 description 6
- 238000010586 diagram Methods 0.000 description 4
- 238000013500 data storage Methods 0.000 description 3
- 239000003814 drug Substances 0.000 description 3
- 229940079593 drug Drugs 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 241000447437 Gerreidae Species 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 239000002245 particle Substances 0.000 description 1
- 238000003672 processing method Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/232—Orthographic correction, e.g. spell checking or vowelisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/263—Language identification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
Definitions
- the present invention relates generally to text segmentation and, more particularly, to selecting a language for text segmentation.
- Text processing methods and systems exist that attempt to Interpret data representing text. Text processing is made more difficult when text comprising a string of characters is received that has no breaks indicating words or other tokens.
- the characters can be segmented into tokens in order to interpret the string. Tokens can be words, acronyms, abbreviations, proper names, geographical names, stock market ticker symbols, or other tokens.
- Tokens can be words, acronyms, abbreviations, proper names, geographical names, stock market ticker symbols, or other tokens.
- a string of characters may be segmented into multiple combinations of segmented strings of characters using existing methods and systems. Selecting the correct language to use when segmenting the text can produce more meaningful results.
- US 6272456 discloses a method of identifying a language of a text input in which multiple sets of n-gram language profiles are used. Scoring of each language is based on frequency parameters of matched n-gram reference letter sequences to the text input.
- Embodiments of the present invention comprise methods for selecting a language for text segmentation.
- embodiments of the present invention provide a method for improving segmenting a string of characters, such as a domain name, into multiple tokens or words by selecting the correct language for the string of characters.
- a number of potential or candidate languages for the string of characters may be selected based on a variety of signals, such as linguistics associated with the string of characters, an IP address associated with the user, a character set used for the string of characters, browser settings of a browser application program associated with the user, and any top-level domain associated with the string of characters.
- the string of characters may be segmented into many segmented results using each candidate language.
- Each segmented result can be a particular combination of words or other tokens.
- the string of characters "usedrugs” can be segmented into the following segmented results for the English language: “used rugs”, “use drugs”, “us ed rugs”, etc. From this number of segmented results for each candidate language, an operable segmented result and an operable language can be identified based on the number of documents or search queries in the operable language that contain the operable segmented result.
- segmented results with the highest probability of being the best operable segmented result can be selected for each candidate language.
- a search engine can determine the number of documents or search queries containing a selected segmented result and can do this for each selected segmented result in each candidate language.
- the segmented result that occurs with the greatest frequency in documents or search queries in the particular language may be identified as the best operable segmented result.
- the language associated with the best operable segmented result may be identified as the best operable language.
- Language signals used to determine the candidate languages can also be used to select the operable language.
- the operable segmented result and operable language can be used for a variety of functions, including selecting advertisements based on the language and result
- Figure 1 is a diagram illustrating an exemplary system in which exemplary embodiments of the present invention may operate.
- the present invention may operate, and be embodied in, other systems as well
- Figure 1 is a diagram illustrating an exemplary environment for implementation of an embodiment of the present invention.
- the system 100 shown in Figure 1 comprises multiple client devices 102a-n in communication with a server device 104 and a server device 150 over a network 106.
- the network 106 shown comprises the Internet.
- other networks such as an intranet, WAN, or LAN may be used.
- methods according to the present invention may operate within a single computer.
- the client devices 102a-n shown in Figure 1 each comprise a computer-readable medium, such as a random access memory (RAM) 108 coupled to a processor 110.
- the processor 110 executes computer-executable program instructions stored in memory 108.
- Such processors may comprise a microprocessor, an ASIC, and state machines.
- Such processors comprise, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps describe herein.
- Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102a, with computer-readable instructions.
- suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other suitable medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic ® , Java ® , Python TM , Perl ® , and JavaScript ® .
- Client devices 102a-n may also comprise a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices.
- client devices 102a-n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices.
- a client device 102a may be any suitable type of processor-based platform that is connected to a network 106 and that interacts with one or more application programs.
- Client devices 102a-n may operate on any operating system capable of supporting a browser or browser-enabled application, such as Microsoft® Windows® or LinuxTM.
- the client devices 102a-n shown include, for example, personal computers executing a browser application program such as Microsoft Corporation's Internet ExplorerTM, Netscape Communication Corporation's Netscape NavigatorTM, and Apple® Computer, Inc.'s SafariTM.
- a server device 104 and a server device 150 are also coupled to the network 106.
- the server device 104 can comprise a server executing a segmentation engine application program and server device 150 can comprise a server executing a search engine application program. Similar to the client devices 102a-n, the server device 104 and server device 150 shown in Figure 1 comprise a processor 116 coupled to a computer-readable memory 118 and a processor 152 coupled to a computer-readable memory 154, respectively.
- Server devices 104 and 150 depicted as single computer systems, may be implemented as a network of computer processors. Examples of server devices 104,150 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.
- Client processor 110 and the server processors 116, 152 can be any of a number of computer processors, as described above, such as processors from Intel ® Corporation of Santa Clara, California and Motorola ® Corporation of Schaumburg, Illinois
- Memory. 118 contains a segmentation application program, also known as a segmentation engine 120.
- the server device 104 or related device, can access the network 106 to receive strings of characters from other devices or systems connected to the network 106. Characters can include, for example, marks or symbols used in a writing system, including data representing a character, such as ASCII, Unicode, ISO 8859-1, Shift-JIS, and EBCDIC or any other suitable character set.
- the segmentation engine 120 can receive a string of characters, such as a domain name, from a server device on the network 106 when a user 112a attempts to direct a web browser application to a domain name that is not active.
- the segmentation engine 120 identifies candidate languages for the string of characters, segments the string of characters into potential combinations of tokens for each candidate language, and selects a particular language and combination to associate with the string of characters.
- a token can comprise a word, a proper name, a geographic name, an abbreviation, an acronym, a stock market ticker symbol, or other tokens.
- the segmentation engine 120 can include a segmentation processor 122, a frequency processor 124, and a language processor 126. In the example shown in Figure 1 , each comprises computer code residing in the memory 118.
- To language processor 126 can identify a candidate language or languages for the string of characters.
- the language processor 126 can use signals to identify a number of candidate languages for the string of characters.
- the language processor can use linguistics, the IP address of the user, a character set used for the string of characters, browser settings of a browser application program associated with the user, and a top-level domain associated with the string of characters to determine the candidate languages for the string of characters.
- the segmentation processor 122 can determine a list of potential combinations of tokens or segmented results from the string of characters for each candidate language.
- the token processor 124 determines a probability for each segmented result in the list and selects the top segmented results for each language based on the probability.
- the probability for a segmented result can be based on frequency values associated with the individual tokens in the result.
- the unsegmented string of characters may be included as a segmented result.
- the frequency processor 124 can perform a frequency search or cause one to be performed on the top-selected segmented results of each candidate language.
- the frequency processor 124 can include a spell-checking functionality or can call a spelt-checking functionality residing elsewhere to perform a spell check on the selected segmented results. Any spell corrected results can be included in the frequency search.
- the frequency processor sends the selected segmented results to the server device 150 to perform a frequency search on the selected segmented results.
- a frequency search can determine the frequency of occurrence for each particular segmented result as described below. Based on the frequency search a best or operable segmented result can be identified by the segmentation processor 122.
- the language associated with the operable result can be identified by the segmentation processor 122 as the operable language for the string of characters.
- the operable segmented result and the operable language can be sent to an advertising server that can select advertisements targeted based on one or both of the operable language and the segmented result.
- Other functions and characteristics of the segmentation processor 122, the frequency processor 124, and the language processor 126 are further described below.
- Server device 104 also provides access to other storage elements, such as a token storage element, in the example shown a token database 120.
- the token database 120 can be used to store tokens and frequency information associated with each token.
- the token database 120 can also store the language or languages associated with each token.
- Data storage elements may include any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs.
- the server device 104 can access other similar types of data storage devices.
- the server device 150 can include a server executing a search engine application program, such as the GoogleTM search engine.
- the server device 150 can comprise a related information server or an advertising server.
- Memory 154 contains the search engine application program, also known as a search engine 156.
- the search engine 156 can locate relevant information from the network 106 in response to a search query from a user 112a and can maintain a search log of search queries.
- the search engine 156 can also perform a frequency search in response to a frequency search request from the frequency processor 124.
- the search engine 156 can provide a search result set to a user 112a or frequency information to the segmentation engine 120 via the network 106.
- the server device 150 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems coupled to the network 106.
- Articles include, for example, documents, emails, instant messenger messages, database entries, web pages of various formats, such as HTML, XML, XHTML, Portablc Document Format (PDF) files, and media files, such as image files, audio files, and video files, or any other documents or groups of documents or information of any suitable type whatsoever.
- An indexer 158 can be used to index the articles in memory 154 or on another data storage device, such as an index 160.
- the index may also include the language or languages associated with each article. In one embodiment, there are multiple indexes each containing a portion of the total articles indexed. It should be appreciated that other suitable methods for indexing articles in lieu of or in combination with crawling may be used, such as manual submission.
- the search engine 156 can perform a frequency search in a number of suitable ways.
- the search engine 156 can perform a web search using each top selected segmented result as a search query and can search for articles containing the search query in the candidate language of the segmented result.
- a frequency search result set can be generated and can comprise one or more article identifiers.
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article.
- an article identifier can comprise a URL associated with an article.
- the frequency processor 124 can use the number of article identifiers in each frequency search result set as a representation of the number of occurrences of the respective segmented result.
- the frequency processor 124 can interface directly with the indexer 158.
- the indexer 158 can determine, for each top selected segmented result, the number of articles in the associated candidate language in which the segmented result appears. This information can be sent to the frequency processor 124.
- the search engine 156 and/or the frequency processor 124 can determine, for each selected segmented result, the number of occurrences in search queries in the associated candidate language from the search log and the frequency processor 124 can determine a frequency of occurrence based on this search log information.
- the number of articles or search queries in a frequency search associated with a segmented result may be normalized based on the total number of articles or search queries in the associated language.
- server devise 104 may comprise a single physical or logical server.
- the system 100 shown in Figure 1 is merely exemplary, and is used to help explain method illustrated in Figure 2 .
- One exemplary method according to the present invention comprises identifying at least a first candidate language and a second candidate language associated with a string of characters, determining at least a first segmented result associated with the first candidate language from the string of characters and a second segmented result associated with the second candidate language from the string of characters, determining a first frequency of occurrence for the first segmented result and a second frequency of occurrence for the second segmented result, and identifying an operable language from the first candidate language and the second candidate language based at least in part on the first frequency of occurrence and the second frequency of occurrence. More than two candidate languages can be identified and more than two segmented results can be determined. For example, three candidate languages can be identified and four segmented results can be determined for each candidate language.
- the operable language can be identified based in part on identifying an operable segmented result from the first segmented result and the second segmented result based at least in part on the first frequency of occurrence and the second frequency of occurrence.
- a first candidate language and a second candidate language may be identified based in part on one or more language signals.
- the language signals can comprise at least one of linguistics associated with the string of characters, an IP address of a user associated with the string of characters, a character set used for the string of characters, browser settings of a browser application program associated with a user, and a top-level domain associated with the string of characters.
- identifying the operable language may be based at least in part on language signals.
- identifying the operable language from the first candidate language and the second candidate language based at least in part on the first frequency of occurrence and the second frequency of occurrence can comprise selecting the first candidate language if the first frequency of occurrence is greater than the second frequency of occurrence.
- the string of characters can comprise a domain name.
- the first segmented result can comprise a first combination of tokens and the second segmented result comprises a second combination of tokens.
- determining the first frequency of occurrence for the first segmented result can comprise determining a number of articles in the first candidate language containing the first segmented result and normalizing the number of articles based on a total number of articles in the first candidate language and determining the number of articles in the first language containing the first segmented result can comprise determining a number of article identifiers in a search result set generated in response to a search query comprising the first segmented result.
- determining the number of particles in the first language containing the first segmented result can comprise accessing an index of articles.
- determining the first frequency of occurrence can comprise determining a number of occurrences of the first segmented result in a plurality of search queries in the first candidate language and normalizing the number of occurrences based on a total number of search queries in the first candidate language.
- the method may also comprise selecting an article based at least in part on the operable language or the operable segmented result (or both) and the article can comprise an advertisement.
- determining the first segmented result can comprise determining a plurality of segmented results in the first candidate language from the string of characters, and identifying the first segmented result from the plurality of segmented results in the first candidate language. Identifying the first segmented result can comprise calculating a probability value for each of the plurality of segmented results. A first probability value associated with the first segmented result can be based at least in part on a frequency of each token within the first segmented result.
- Another exemplary method comprises determining a first segmented result in a first candidate language and a second segmented result in a second candidate language from a domain name, determining a first frequency of occurrence for the first segmented result in at least one of an article index, a text index, and a search result set, determining a second frequency of occurrence for the second segmented result, if the first frequency of occurrence is greater than the second frequency of occurrence, then selecting the first candidate language as an operable language, if the second frequency of occurrence is greater than the first frequency of occurrence, then selecting the second candidate language as the operable language, selecting an advertisement based at least in part on the operable language, wherein the advertisement includes text in the operable language, and causing a display of the advertisement in association with a web page associated with the domain name.
- Figure 2 illustrates an exemplary method 200 for selecting a language for text segmentation, in accordance with one embodiment of the invention.
- This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention.
- the method 200 shown in Figure 2 can be executed or otherwise performed by one or a combination of various systems.
- the method 200 is described below as carried out by the system 100 shown in Figure 1 by way of example, and various elements of the system 100 are referenced in explaining the example method of Figure 2 .
- Block 202 the example method begins.
- Block 202 is followed by block 204, in which a string of characters can be accessed by the segmentation engine 120.
- a string of characters can be received or accessed from a device connected to network 106, for example, or from another device.
- the string of characters can be a domain name associated with an inactive or non-existent website received from an advertising server associated with the domain name.
- Block 204 is followed by block 205, in which candidate languages for the string of characters are identified.
- the language processor 126 can use one or more language signals to determine a number of candidate languages for the string of characters. For example, the language processor can identify, based on language signals, English, French and Spanish as the three candidate languages for the string of characters.
- Some of the language signals used can be, for example, linguistics associated with the string of characters, the IP address of a user associated with the string of characters, the character set used for the string of characters, browser settings of a browser application program associated with the user associated with the string of characters, and a top-level domain associated with the string of characters.
- Linguistics can be used, for example, to determine if the structure or nature of the string of characters indicates that it is in a particular language. For example, certain languages have a tendency to start or end with a certain group of characters and use general patterns.
- the IP address of the user can indicate the location and country of the user. From the country information a language or languages associated with the country can be used as candidate languages.
- the character set of the string of characters can indicate a language or languages associated with the string of characters.
- a Cyrillic character set can indicate Russian or some other Slavic language.
- the browser settings for a browser application program of a user associated with the character string can indicate a language and/or a character set associated with the character string.
- the language and character set settings of the user's browser application program can be passed in an HTTP header along with the string of characters.
- a top-level domain associated with the string of characters can indicate a country.
- a top-level domain can be the highest level of hierarchy after the root. In a domain name, the top-level domain is the portion of the domain name that appears farthest to the right.
- the top-level domain is “.uk” and can indicate the United Kingdom.
- the top-level domain “.ru” can indicate Russia.
- the country associated with the top-level domain can be used in determining a candidate language, such as "ru” indicates Russia, which indicates that the associated string of characters may be in the Russian language.
- Some top-level domains may indicate more than one language. For example, ".ch” can indicate Switzerland and can indicate that the string of characters can be associated with French, German, or Italian. Other suitable signals and methods of identifying candidate languages for the string of characters may be used.
- Block 206 is followed by block 208, in which a plurality of segmented results is generated from the string of characters by segmenting the string of characters for each of the candidate languages. Segmenting the string of characters may include parsing the characters in the string into a plurality of combinations of tokens and can be performed by the segmentation processor 122. The segmentation processor 122 can develop a list of segmented results for each candidate language. Each segmented result can be a particular combination of tokens or a single token.
- the string of characters "assocomunicazioni” can be segmented in Italian into “asso comunicazioni” and other segmented results and can be segmented in French into “asso com uni Ceiioni” and other segmented results.
- the string of characters “maisonblanche” can be segmented in French into “maison blanche” and other segmented results and can be segmented in English into “mai son blanc he” and other segmented results.
- the string of characters “usedrugs” can be segmented in English into the segmented results including “used rugs", “use drugs”, "us ed rugs”, “u sed rugs", “usedrugs”, etc. Segmented results can also be generated for the other candidate languages, such as, in the example above, French and Spanish.
- the unsegmented string of characters may be included as a segmented result.
- the segmentation processor 122 can utilize tokens from the token database 126 in the segmentation process.
- Various methods can be used to segment the string of characters, such as the segmentation techniques described in PCT International Patent publication No. WO2005/069199 entitled “Methods and Systems for Text Segmentation” filed December 30, 2003.
- Block 208 is followed by block 210, in which the top segmented results are determined for each candidate language.
- the top segmented results can be determined by the segmentation processor 122 and can be the results with the highest probability of being the best or operable segmented result.
- the segmented results can be ranked based on a probability value determined for each segmented result
- a probability value can be determined by summing frequency values associated with the individual tokens within each individual segmented result.
- a probability value can be determined by a complex function involving summing the logarithms of the frequency values associated with the individual tokens within each individual segmented result.
- a number of the top ranking segmented results can then be selected. For example, the segmented results for each candidate language can be ranked and the top three results of each candidate language can be selected.
- Block 210 is followed by block 212, in which a frequency search is performed for the top, selected segmented results for each candidate language.
- the frequency search can be performed by the frequency processor 124 in conjunction with the search engine 156.
- the segmentation processor 122 can pass the selected segmented results to the frequency processor 124, which can determine the frequency of occurrence for each of the segmented results in a corpus of articles or search queries.
- the frequency processor 124 can determine the frequency of occurrence for the segmented results based on articles indexed by a search engine 156. In one example, the frequency processor 124 can send the top selected segmented results to the search engine 156 via the network 106.
- the search engine 156 can perform a search for each of the segmented results in the indexed articles by using each segmented result as a search query.
- the frequency processor 124 can send each segmented result for each candidate language surrounded by quotation marks to the search engine 156 as a search query, so that the search engine 156 performs the search on the exact segmented phrase in articles in the particular language.
- the search engine 156 can generate a search result set containing a number of article identifiers responsive to the search query.
- the search engine 156 can send the search result set for each of the segmented results back to the frequency processor 124 via the network 106.
- the frequency processor 124 can determine from each search result set, based on the number of article identifiers, the frequency with which each segmented result occurs.
- the frequency processor 124 can send the top, selected segmented results to the indexer 158 via the network 106.
- the indexer 158 can access the index 160 to determine the number of articles in the particular language in which a segmented result occurs and can do this for each of the selected segmented results.
- the index 160 may be multiple indexes and the indexer 158 can check a fraction of the total index for each segmented result. The indexer 158 can then pass the number of occurrences associated with each segmented result to the frequency processor 124 via the network 106.
- the frequency processor 124 can send the top, selected segmented results to the search engine 156 via the network 106 to determine the number of occurrences of the segmented results in search queries.
- the search engine 156 can, for each segmented result in the associated language, determine the number of times that the segmented result was used as a search query or part of a search query. The number of occurrences in search queries for each segmented result can be sent by the search engine 156 to the frequency processor 124 via the network 106.
- the frequency processor 124 can send these segmented results and the segmented results associated with other candidate languages to the search engine 156.
- the search engine 156 can, for example, use these results as search queries and generate search result sets for each segmented result.
- the search engine 156 can use "used rugs" as a search query and determine a search result set for the search query containing article identifiers associated with articles in English containing the phrase "used rugs".
- the search engine 156 can do the same for the segmented results associated with other candidate languages.
- the search engine 156 can determine, from associated search logs containing prior received search queries, the number of times search queries containing the segmented results was received. For example, the search engine 156 can search its search logs for the number of times a search query containing the phrase "used rugs" was received.
- the indexer 158 of the search engine 156 can receive the search results and determine the number of articles in the index 160 or a portion of the index 160 containing the segmented results. For example, the indexer 158 can search through the index 160 or a portion of the index 160 for the number of English language articles containing "used rugs".
- a spell-checking function can also be included in the frequency search.
- the frequency processor 124 can include or can call a spell-checking function, so that the top, selected segmented results can be spell checked.
- the spell-checking function can determine correct or preferred spellings for the individual tokens in each segmented result.
- the frequency processor 124 can perform a frequency search on the top segmented results as well as any spelling-corrected segmented results to determine a frequency of occurrence for both results. For example, if a segmented result is "basebal game” and the spelling-corrected result is "baseball game", a frequency search can be performed for both of these results.
- each frequency of occurrence for the segmented results is a normalized value based on the number of total articles or search queries in the particular language. For example, if a segmented result in English language occurs in 70 English language articles or search queries and there are a total number of 1000 English articles or search queries, the frequency of occurrence for this English segmented result is 0.07 (70/1000). Similarly, if a segmented result in French occurs in 60 French language articles or search queries and there are a total number of 400 French language articles or search queries, the frequency of occurrence for this French segmented result is 0.15 (60/400). This way the frequency of occurrence takes into consideration the prevalence of the particular language in The corpus of articles or search results and is not inherently weighted to more prevalent languages.
- Block 212 is followed by block 214, in which the operable language and operable. segmented result are identified.
- the frequency processor 124 can identify the operable language and operable segmented result. For example, the frequency processor 124 can select the segmented result that has the highest associated frequency of occurrence. As explained above, the frequency of occurrence can be a normalized value based on the number of articles or search queries containing the segmented result and the total number of articles or search queries in the particular language. Additional signals can also be used to determine the operable segmented result.
- the frequency processor 124 can take into account an objective ranking (such as the PageRankTM ranking algorithm for web articles) of the articles containing each segmented result and use the objective ranking to weigh the articles containing each segmented result. The number of times the segmented result occurs in an article and the location of the segmented result in the articles can also be used to weigh the articles containing a segmented result.
- the candidate language associated with the operable segmented result can be selected as the operable language
- the language signals used to identify the candidate languages in block 206 may be used in the determination of the operable language. If the language signals indicate that the string of characters is most likely a particular language, these signals can be used to more heavily weight this language.
- the language signals such as linguistics, the IP address of an associated user, the character set used for the string of characters, browser settings of browser application program associated with a user, and top-level domain associated with the string of characters, may indicate that the language associated with the string of characters is a particular language, such as French, for example.
- the frequency of occurrence information for a segmented result in another language, such as English, for example, may be close to or exceed the frequency of occurrence information for another segmented result in French.
- the language signals can be used to weight the French language in order to cause the selection of French as the operative language in this example.
- the method 200 ends.
- the operable language and operable segmented result can be used in a variety of ways.
- the operable language and/or operable segmented result can be used in the selection of advertisements.
- a user 112a may attempt to navigate his browser application to the website "usedrugs.com” by entering this string of characters into the browser application. If no such website exists at the domain name "usedrugs.com", the user's browser application may be redirected to a third-party website.
- the third-party website may desire to place advertisements and/or links relevant to the domain name entered by the user on a web page being viewed by the user.
- the third-party website can send the domain name "usedrugs.com” to the segmentation engine 120.
- the segmentation engine 120 can use the methods and systems described above to return an operable language and an operable segmented result to the third party website or an advertising server associated with the website.
- the operable segmented result can be "used rugs" and the operable language can be English.
- the third-party website or advertising server can cause the display of advertisements and/or links relevant to the phrase "used rugs" in English on the web page being viewed by the user and can ensure that the language used on the website is English.
- the operable language can also be used in the selection of the language used in status messages displayed to the user.
- first and second are used herein merely to differentiate one item from another item.
- the terms first and second are not used to indicate first or second in time, first or second in a list, or other order, unless explicitly noted.
- the "second” may come in time or in a list before the "first”, unless it is otherwise explicitly indicated.
Description
- The present invention relates generally to text segmentation and, more particularly, to selecting a language for text segmentation.
- Text processing methods and systems exist that attempt to Interpret data representing text. Text processing is made more difficult when text comprising a string of characters is received that has no breaks indicating words or other tokens. When processing such strings of characters using existing methods and systems, the characters can be segmented into tokens in order to interpret the string. Tokens can be words, acronyms, abbreviations, proper names, geographical names, stock market ticker symbols, or other tokens. Generally, a string of characters may be segmented into multiple combinations of segmented strings of characters using existing methods and systems. Selecting the correct language to use when segmenting the text can produce more meaningful results.
-
US 6272456 discloses a method of identifying a language of a text input in which multiple sets of n-gram language profiles are used. Scoring of each language is based on frequency parameters of matched n-gram reference letter sequences to the text input. - The present invention can be defined by claims 1 and 14.
- Exemplary embodiments are discussed in the Detailed Description, and further description of the invention is provided there. Advantages offered by the various embodiments of the present invention may be further understood by examining this specification.
- These and other features, aspects, and advantages of the present invention are better understood when the following Detained Description is read with reference to the accompanying drawings, wherein:
-
Figure 1 illustrates a diagram of a system suitable for implementing a method of identifying a language for text segmentation; and -
Figure 2 illustrates a flow diagram of a method of identifying a language for text segmentation. - Embodiments of the present invention comprise methods for selecting a language for text segmentation. There are multiple embodiments of the present invention. By way of introduction and example, embodiments of the present invention provide a method for improving segmenting a string of characters, such as a domain name, into multiple tokens or words by selecting the correct language for the string of characters. A number of potential or candidate languages for the string of characters may be selected based on a variety of signals, such as linguistics associated with the string of characters, an IP address associated with the user, a character set used for the string of characters, browser settings of a browser application program associated with the user, and any top-level domain associated with the string of characters. The string of characters may be segmented into many segmented results using each candidate language. Each segmented result can be a particular combination of words or other tokens. For example, the string of characters "usedrugs" can be segmented into the following segmented results for the English language: "used rugs", "use drugs", "us ed rugs", etc. From this number of segmented results for each candidate language, an operable segmented result and an operable language can be identified based on the number of documents or search queries in the operable language that contain the operable segmented result.
- For example, segmented results with the highest probability of being the best operable segmented result can be selected for each candidate language. A search engine can determine the number of documents or search queries containing a selected segmented result and can do this for each selected segmented result in each candidate language. In one embodiment, the segmented result that occurs with the greatest frequency in documents or search queries in the particular language may be identified as the best operable segmented result. The language associated with the best operable segmented result may be identified as the best operable language. Language signals used to determine the candidate languages can also be used to select the operable language. The operable segmented result and operable language can be used for a variety of functions, including selecting advertisements based on the language and result
- This introduction is given to introduce the reader to the general subject matter of the application. By no means is the invention limited to such subject matter. Exemplary embodiments are described below.
- Various systems in accordance with the present invention may be constructed.
Figure 1 is a diagram illustrating an exemplary system in which exemplary embodiments of the present invention may operate. The present invention may operate, and be embodied in, other systems as well - Referring now to the drawings in which like numerals indicate like elements throughout the several figures,
Figure 1 is a diagram illustrating an exemplary environment for implementation of an embodiment of the present invention. Thesystem 100 shown inFigure 1 comprisesmultiple client devices 102a-n in communication with aserver device 104 and aserver device 150 over anetwork 106. In one example thenetwork 106 shown comprises the Internet. In other examples, other networks, such as an intranet, WAN, or LAN may be used. Moreover, methods according to the present invention may operate within a single computer. - The
client devices 102a-n shown inFigure 1 each comprise a computer-readable medium, such as a random access memory (RAM) 108 coupled to aprocessor 110. Theprocessor 110 executes computer-executable program instructions stored inmemory 108. Such processors may comprise a microprocessor, an ASIC, and state machines. Such processors comprise, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps describe herein. Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as theprocessor 110 ofclient 102a, with computer-readable instructions. Other examples of suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other suitable medium from which a computer processor can read instructions. Also, various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless. The instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic®, Java®, Python™, Perl®, and JavaScript®. -
Client devices 102a-n may also comprise a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices. Examples ofclient devices 102a-n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, aclient device 102a may be any suitable type of processor-based platform that is connected to anetwork 106 and that interacts with one or more application programs.Client devices 102a-n may operate on any operating system capable of supporting a browser or browser-enabled application, such as Microsoft® Windows® or Linux™. Theclient devices 102a-n shown include, for example, personal computers executing a browser application program such as Microsoft Corporation's Internet Explorer™, Netscape Communication Corporation's Netscape Navigator™, and Apple® Computer, Inc.'s Safari™. - Through the
client devices 102a-n,users 112a-n can communicate over thenetwork 106 with each other and with other systems and devices coupled to thenetwork 106. As shown inFigure 1 , aserver device 104 and aserver device 150 are also coupled to thenetwork 106. - The
server device 104 can comprise a server executing a segmentation engine application program andserver device 150 can comprise a server executing a search engine application program. Similar to theclient devices 102a-n, theserver device 104 andserver device 150 shown inFigure 1 comprise aprocessor 116 coupled to a computer-readable memory 118 and aprocessor 152 coupled to a computer-readable memory 154, respectively.Server devices Client processor 110 and theserver processors - Memory. 118 contains a segmentation application program, also known as a
segmentation engine 120. Theserver device 104, or related device, can access thenetwork 106 to receive strings of characters from other devices or systems connected to thenetwork 106. Characters can include, for example, marks or symbols used in a writing system, including data representing a character, such as ASCII, Unicode, ISO 8859-1, Shift-JIS, and EBCDIC or any other suitable character set. In one example, thesegmentation engine 120 can receive a string of characters, such as a domain name, from a server device on thenetwork 106 when auser 112a attempts to direct a web browser application to a domain name that is not active. - In one example, the
segmentation engine 120 identifies candidate languages for the string of characters, segments the string of characters into potential combinations of tokens for each candidate language, and selects a particular language and combination to associate with the string of characters. A token can comprise a word, a proper name, a geographic name, an abbreviation, an acronym, a stock market ticker symbol, or other tokens. Thesegmentation engine 120 can include asegmentation processor 122, afrequency processor 124, and alanguage processor 126. In the example shown inFigure 1 , each comprises computer code residing in thememory 118. - To
language processor 126 can identify a candidate language or languages for the string of characters. In one example, thelanguage processor 126 can use signals to identify a number of candidate languages for the string of characters. For example, the language processor can use linguistics, the IP address of the user, a character set used for the string of characters, browser settings of a browser application program associated with the user, and a top-level domain associated with the string of characters to determine the candidate languages for the string of characters. - The
segmentation processor 122 can determine a list of potential combinations of tokens or segmented results from the string of characters for each candidate language. In one example, thetoken processor 124 determines a probability for each segmented result in the list and selects the top segmented results for each language based on the probability. The probability for a segmented result can be based on frequency values associated with the individual tokens in the result. In one example, the unsegmented string of characters may be included as a segmented result. - The
frequency processor 124 can perform a frequency search or cause one to be performed on the top-selected segmented results of each candidate language. Thefrequency processor 124 can include a spell-checking functionality or can call a spelt-checking functionality residing elsewhere to perform a spell check on the selected segmented results. Any spell corrected results can be included in the frequency search. In one example, the frequency processor sends the selected segmented results to theserver device 150 to perform a frequency search on the selected segmented results. A frequency search can determine the frequency of occurrence for each particular segmented result as described below. Based on the frequency search a best or operable segmented result can be identified by thesegmentation processor 122. The language associated with the operable result can be identified by thesegmentation processor 122 as the operable language for the string of characters. In one example, the operable segmented result and the operable language can be sent to an advertising server that can select advertisements targeted based on one or both of the operable language and the segmented result. Other functions and characteristics of thesegmentation processor 122, thefrequency processor 124, and thelanguage processor 126 are further described below. -
Server device 104 also provides access to other storage elements, such as a token storage element, in the example shown atoken database 120. Thetoken database 120 can be used to store tokens and frequency information associated with each token. Thetoken database 120 can also store the language or languages associated with each token. Data storage elements may include any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs. Theserver device 104 can access other similar types of data storage devices. - The
server device 150 can include a server executing a search engine application program, such as the Google™ search engine. In other examples, theserver device 150 can comprise a related information server or an advertising server. In another example, there can bemultiple server devices 150. -
Memory 154 contains the search engine application program, also known as asearch engine 156. Thesearch engine 156 can locate relevant information from thenetwork 106 in response to a search query from auser 112a and can maintain a search log of search queries. Thesearch engine 156 can also perform a frequency search in response to a frequency search request from thefrequency processor 124. Thesearch engine 156 can provide a search result set to auser 112a or frequency information to thesegmentation engine 120 via thenetwork 106. - In one example, the
server device 150, or related device, has previously performed a crawl of thenetwork 106 to locate articles, such as web pages, stored at other devices or systems coupled to thenetwork 106. Articles include, for example, documents, emails, instant messenger messages, database entries, web pages of various formats, such as HTML, XML, XHTML, Portablc Document Format (PDF) files, and media files, such as image files, audio files, and video files, or any other documents or groups of documents or information of any suitable type whatsoever. Anindexer 158 can be used to index the articles inmemory 154 or on another data storage device, such as anindex 160. The index may also include the language or languages associated with each article. In one embodiment, there are multiple indexes each containing a portion of the total articles indexed. It should be appreciated that other suitable methods for indexing articles in lieu of or in combination with crawling may be used, such as manual submission. - The
search engine 156 can perform a frequency search in a number of suitable ways. In one example, thesearch engine 156 can perform a web search using each top selected segmented result as a search query and can search for articles containing the search query in the candidate language of the segmented result. In this example, a frequency search result set can be generated and can comprise one or more article identifiers. An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article. In one example, an article identifier can comprise a URL associated with an article. Thefrequency processor 124 can use the number of article identifiers in each frequency search result set as a representation of the number of occurrences of the respective segmented result. - In another example, the
frequency processor 124 can interface directly with theindexer 158. Theindexer 158 can determine, for each top selected segmented result, the number of articles in the associated candidate language in which the segmented result appears. This information can be sent to thefrequency processor 124. In still another example, thesearch engine 156 and/or thefrequency processor 124 can determine, for each selected segmented result, the number of occurrences in search queries in the associated candidate language from the search log and thefrequency processor 124 can determine a frequency of occurrence based on this search log information. In one embodiment, the number of articles or search queries in a frequency search associated with a segmented result may be normalized based on the total number of articles or search queries in the associated language. - It should be noted that systems may have different architecture than that which is shown in
Figure 1 . For example, in some systems server devise 104 may comprise a single physical or logical server. Thesystem 100 shown inFigure 1 is merely exemplary, and is used to help explain method illustrated inFigure 2 . - Various methods in accordance with embodiments of the present invention may be carried out. One exemplary method according to the present invention comprises identifying at least a first candidate language and a second candidate language associated with a string of characters, determining at least a first segmented result associated with the first candidate language from the string of characters and a second segmented result associated with the second candidate language from the string of characters, determining a first frequency of occurrence for the first segmented result and a second frequency of occurrence for the second segmented result, and identifying an operable language from the first candidate language and the second candidate language based at least in part on the first frequency of occurrence and the second frequency of occurrence. More than two candidate languages can be identified and more than two segmented results can be determined. For example, three candidate languages can be identified and four segmented results can be determined for each candidate language.
- The operable language can be identified based in part on identifying an operable segmented result from the first segmented result and the second segmented result based at least in part on the first frequency of occurrence and the second frequency of occurrence. A first candidate language and a second candidate language may be identified based in part on one or more language signals. The language signals can comprise at least one of linguistics associated with the string of characters, an IP address of a user associated with the string of characters, a character set used for the string of characters, browser settings of a browser application program associated with a user, and a top-level domain associated with the string of characters. In one embodiment, identifying the operable language may be based at least in part on language signals.
- In one example, identifying the operable language from the first candidate language and the second candidate language based at least in part on the first frequency of occurrence and the second frequency of occurrence can comprise selecting the first candidate language if the first frequency of occurrence is greater than the second frequency of occurrence. The string of characters can comprise a domain name. The first segmented result can comprise a first combination of tokens and the second segmented result comprises a second combination of tokens.
- In one embodiment, determining the first frequency of occurrence for the first segmented result can comprise determining a number of articles in the first candidate language containing the first segmented result and normalizing the number of articles based on a total number of articles in the first candidate language and determining the number of articles in the first language containing the first segmented result can comprise determining a number of article identifiers in a search result set generated in response to a search query comprising the first segmented result.
- In one embodiment, determining the number of particles in the first language containing the first segmented result can comprise accessing an index of articles. In another embodiment, determining the first frequency of occurrence can comprise determining a number of occurrences of the first segmented result in a plurality of search queries in the first candidate language and normalizing the number of occurrences based on a total number of search queries in the first candidate language.
- The method may also comprise selecting an article based at least in part on the operable language or the operable segmented result (or both) and the article can comprise an advertisement. In one embodiment, determining the first segmented result can comprise determining a plurality of segmented results in the first candidate language from the string of characters, and identifying the first segmented result from the plurality of segmented results in the first candidate language. Identifying the first segmented result can comprise calculating a probability value for each of the plurality of segmented results. A first probability value associated with the first segmented result can be based at least in part on a frequency of each token within the first segmented result.
- Another exemplary method comprises determining a first segmented result in a first candidate language and a second segmented result in a second candidate language from a domain name, determining a first frequency of occurrence for the first segmented result in at least one of an article index, a text index, and a search result set, determining a second frequency of occurrence for the second segmented result, if the first frequency of occurrence is greater than the second frequency of occurrence, then selecting the first candidate language as an operable language, if the second frequency of occurrence is greater than the first frequency of occurrence, then selecting the second candidate language as the operable language, selecting an advertisement based at least in part on the operable language, wherein the advertisement includes text in the operable language, and causing a display of the advertisement in association with a web page associated with the domain name.
-
Figure 2 illustrates anexemplary method 200 for selecting a language for text segmentation, in accordance with one embodiment of the invention. This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention. Themethod 200 shown inFigure 2 can be executed or otherwise performed by one or a combination of various systems. Themethod 200 is described below as carried out by thesystem 100 shown inFigure 1 by way of example, and various elements of thesystem 100 are referenced in explaining the example method ofFigure 2 . - Referring to
Fig. 2 , inblock 202, the example method begins.Block 202 is followed byblock 204, in which a string of characters can be accessed by thesegmentation engine 120. A string of characters can be received or accessed from a device connected to network 106, for example, or from another device. In one embodiment, the string of characters can be a domain name associated with an inactive or non-existent website received from an advertising server associated with the domain name. -
Block 204 is followed by block 205, in which candidate languages for the string of characters are identified. In one example, thelanguage processor 126 can use one or more language signals to determine a number of candidate languages for the string of characters. For example, the language processor can identify, based on language signals, English, French and Spanish as the three candidate languages for the string of characters. - Some of the language signals used can be, for example, linguistics associated with the string of characters, the IP address of a user associated with the string of characters, the character set used for the string of characters, browser settings of a browser application program associated with the user associated with the string of characters, and a top-level domain associated with the string of characters. Linguistics can be used, for example, to determine if the structure or nature of the string of characters indicates that it is in a particular language. For example, certain languages have a tendency to start or end with a certain group of characters and use general patterns. The IP address of the user can indicate the location and country of the user. From the country information a language or languages associated with the country can be used as candidate languages. The character set of the string of characters can indicate a language or languages associated with the string of characters. For example, a Cyrillic character set can indicate Russian or some other Slavic language. The browser settings for a browser application program of a user associated with the character string can indicate a language and/or a character set associated with the character string. For example, the language and character set settings of the user's browser application program can be passed in an HTTP header along with the string of characters. A top-level domain associated with the string of characters can indicate a country. A top-level domain can be the highest level of hierarchy after the root. In a domain name, the top-level domain is the portion of the domain name that appears farthest to the right. For example, for the domain name "usedrugs.co.uk", the top-level domain is ".uk" and can indicate the United Kingdom. The top-level domain ".ru" can indicate Russia. The country associated with the top-level domain can be used in determining a candidate language, such as "ru" indicates Russia, which indicates that the associated string of characters may be in the Russian language. Some top-level domains may indicate more than one language. For example, ".ch" can indicate Switzerland and can indicate that the string of characters can be associated with French, German, or Italian. Other suitable signals and methods of identifying candidate languages for the string of characters may be used.
-
Block 206 is followed byblock 208, in which a plurality of segmented results is generated from the string of characters by segmenting the string of characters for each of the candidate languages. Segmenting the string of characters may include parsing the characters in the string into a plurality of combinations of tokens and can be performed by thesegmentation processor 122. Thesegmentation processor 122 can develop a list of segmented results for each candidate language. Each segmented result can be a particular combination of tokens or a single token. For example, the string of characters "assocomunicazioni" can be segmented in Italian into "asso comunicazioni" and other segmented results and can be segmented in French into "asso com uni cazioni" and other segmented results. In another example, the string of characters "maisonblanche" can be segmented in French into "maison blanche" and other segmented results and can be segmented in English into "mai son blanc he" and other segmented results. In another example, the string of characters "usedrugs" can be segmented in English into the segmented results including "used rugs", "use drugs", "us ed rugs", "u sed rugs", "usedrugs", etc. Segmented results can also be generated for the other candidate languages, such as, in the example above, French and Spanish. The unsegmented string of characters may be included as a segmented result. - The
segmentation processor 122 can utilize tokens from thetoken database 126 in the segmentation process. Various methods can be used to segment the string of characters, such as the segmentation techniques described in PCT International Patent publication No.WO2005/069199 -
Block 208 is followed byblock 210, in which the top segmented results are determined for each candidate language. The top segmented results can be determined by thesegmentation processor 122 and can be the results with the highest probability of being the best or operable segmented result. In one embodiment, the segmented results can be ranked based on a probability value determined for each segmented result In one embodiment, a probability value can be determined by summing frequency values associated with the individual tokens within each individual segmented result. In another embodiment, a probability value can be determined by a complex function involving summing the logarithms of the frequency values associated with the individual tokens within each individual segmented result. A number of the top ranking segmented results can then be selected. For example, the segmented results for each candidate language can be ranked and the top three results of each candidate language can be selected. -
Block 210 is followed byblock 212, in which a frequency search is performed for the top, selected segmented results for each candidate language. The frequency search can be performed by thefrequency processor 124 in conjunction with thesearch engine 156. In one example, thesegmentation processor 122 can pass the selected segmented results to thefrequency processor 124, which can determine the frequency of occurrence for each of the segmented results in a corpus of articles or search queries. - example, the
frequency processor 124 can determine the frequency of occurrence for the segmented results based on articles indexed by asearch engine 156. In one example, thefrequency processor 124 can send the top selected segmented results to thesearch engine 156 via thenetwork 106. Thesearch engine 156 can perform a search for each of the segmented results in the indexed articles by using each segmented result as a search query. For example, thefrequency processor 124 can send each segmented result for each candidate language surrounded by quotation marks to thesearch engine 156 as a search query, so that thesearch engine 156 performs the search on the exact segmented phrase in articles in the particular language. In one example, for each segmented result, thesearch engine 156 can generate a search result set containing a number of article identifiers responsive to the search query. Thesearch engine 156 can send the search result set for each of the segmented results back to thefrequency processor 124 via thenetwork 106. Thefrequency processor 124 can determine from each search result set, based on the number of article identifiers, the frequency with which each segmented result occurs. - In another example, the
frequency processor 124 can send the top, selected segmented results to theindexer 158 via thenetwork 106. Theindexer 158 can access theindex 160 to determine the number of articles in the particular language in which a segmented result occurs and can do this for each of the selected segmented results. In one example, theindex 160 may be multiple indexes and theindexer 158 can check a fraction of the total index for each segmented result. Theindexer 158 can then pass the number of occurrences associated with each segmented result to thefrequency processor 124 via thenetwork 106. - In still another example, the
frequency processor 124 can send the top, selected segmented results to thesearch engine 156 via thenetwork 106 to determine the number of occurrences of the segmented results in search queries. For example, thesearch engine 156 can, for each segmented result in the associated language, determine the number of times that the segmented result was used as a search query or part of a search query. The number of occurrences in search queries for each segmented result can be sent by thesearch engine 156 to thefrequency processor 124 via thenetwork 106. - For example, if the
segmentation processor 122 determines that the selected segmented results for the string of characters "usedrugs" in English are "used rugs", "use drugs", and "us ed rugs", thefrequency processor 124 can send these segmented results and the segmented results associated with other candidate languages to thesearch engine 156. Thesearch engine 156 can, for example, use these results as search queries and generate search result sets for each segmented result. For example, thesearch engine 156 can use "used rugs" as a search query and determine a search result set for the search query containing article identifiers associated with articles in English containing the phrase "used rugs". Thesearch engine 156 can do the same for the segmented results associated with other candidate languages. In another example, thesearch engine 156 can determine, from associated search logs containing prior received search queries, the number of times search queries containing the segmented results was received. For example, thesearch engine 156 can search its search logs for the number of times a search query containing the phrase "used rugs" was received. In still another example, theindexer 158 of thesearch engine 156 can receive the search results and determine the number of articles in theindex 160 or a portion of theindex 160 containing the segmented results. For example, theindexer 158 can search through theindex 160 or a portion of theindex 160 for the number of English language articles containing "used rugs". - A spell-checking function can also be included in the frequency search. For example, the
frequency processor 124 can include or can call a spell-checking function, so that the top, selected segmented results can be spell checked. The spell-checking function can determine correct or preferred spellings for the individual tokens in each segmented result. Thefrequency processor 124 can perform a frequency search on the top segmented results as well as any spelling-corrected segmented results to determine a frequency of occurrence for both results. For example, if a segmented result is "basebal game" and the spelling-corrected result is "baseball game", a frequency search can be performed for both of these results. - In one embodiment, each frequency of occurrence for the segmented results is a normalized value based on the number of total articles or search queries in the particular language. For example, if a segmented result in English language occurs in 70 English language articles or search queries and there are a total number of 1000 English articles or search queries, the frequency of occurrence for this English segmented result is 0.07 (70/1000). Similarly, if a segmented result in French occurs in 60 French language articles or search queries and there are a total number of 400 French language articles or search queries, the frequency of occurrence for this French segmented result is 0.15 (60/400). This way the frequency of occurrence takes into consideration the prevalence of the particular language in The corpus of articles or search results and is not inherently weighted to more prevalent languages.
-
Block 212 is followed byblock 214, in which the operable language and operable. segmented result are identified. In one example thefrequency processor 124 can identify the operable language and operable segmented result. For example, thefrequency processor 124 can select the segmented result that has the highest associated frequency of occurrence. As explained above, the frequency of occurrence can be a normalized value based on the number of articles or search queries containing the segmented result and the total number of articles or search queries in the particular language. Additional signals can also be used to determine the operable segmented result. For example, thefrequency processor 124 can take into account an objective ranking (such as the PageRank™ ranking algorithm for web articles) of the articles containing each segmented result and use the objective ranking to weigh the articles containing each segmented result. The number of times the segmented result occurs in an article and the location of the segmented result in the articles can also be used to weigh the articles containing a segmented result. The candidate language associated with the operable segmented result can be selected as the operable language. - In one embodiment, the language signals used to identify the candidate languages in
block 206 may be used in the determination of the operable language. If the language signals indicate that the string of characters is most likely a particular language, these signals can be used to more heavily weight this language. For example, the language signals, such as linguistics, the IP address of an associated user, the character set used for the string of characters, browser settings of browser application program associated with a user, and top-level domain associated with the string of characters, may indicate that the language associated with the string of characters is a particular language, such as French, for example. The frequency of occurrence information for a segmented result in another language, such as English, for example, may be close to or exceed the frequency of occurrence information for another segmented result in French. The language signals can be used to weight the French language in order to cause the selection of French as the operative language in this example. In 216, themethod 200 ends. - The operable language and operable segmented result can be used in a variety of ways. The operable language and/or operable segmented result can be used in the selection of advertisements. For example, a
user 112a may attempt to navigate his browser application to the website "usedrugs.com" by entering this string of characters into the browser application. If no such website exists at the domain name "usedrugs.com", the user's browser application may be redirected to a third-party website. The third-party website may desire to place advertisements and/or links relevant to the domain name entered by the user on a web page being viewed by the user. The third-party website can send the domain name "usedrugs.com" to thesegmentation engine 120. Thesegmentation engine 120 can use the methods and systems described above to return an operable language and an operable segmented result to the third party website or an advertising server associated with the website. For example, the operable segmented result can be "used rugs" and the operable language can be English. The third-party website or advertising server can cause the display of advertisements and/or links relevant to the phrase "used rugs" in English on the web page being viewed by the user and can ensure that the language used on the website is English. The operable language can also be used in the selection of the language used in status messages displayed to the user. - While the above description contains many specifics, these specifics should not be construed as limitations on the scope of the invention, but merely as exemplifications of the disclosed embodiments. Those skilled in the art will envision any other possible variations that are within the scope of the invention. The terms first and second are used herein merely to differentiate one item from another item. The terms first and second are not used to indicate first or second in time, first or second in a list, or other order, unless explicitly noted. For example, the "second" may come in time or in a list before the "first", unless it is otherwise explicitly indicated.
Claims (14)
- A computer-implemented method (200), comprising:receiving (204) a string of characters having no token-delineating breaks;identifying (206) at least a first candidate language and a second candidate language for the string of characters;determining (208) at least a first segmented result comprising a first plurality of tokens associated with the first candidate language that includes the string of characters and a second segmented result comprising a second plurality of tokens associated with the second candidate language that includes the string of characters;determining (210, 212) a first frequency of occurrence of the first segmented result in at least one of a search engine index or logs of search queries received by a search engine (156) and a second frequency of occurrence of the second segmented result in at least one of a search engine index or logs of search queries received by a search engine (156); andidentifying (214) an operable language from the first candidate language and the second candidate language based at least in part on the first frequency of occurrence and the second frequency of occurrence.
- The computer-implemented method (200) of claim 1, wherein identifying (206) the first candidate language comprises identifying the first candidate language based on at least one language signal selected from the group consisting of an IP address of a user associated with the string of characters, a character set associated with the string of characters, a browser setting of a browser application program associated with a user associated with the string of characters, and a top-level domain associated with the string of characters.
- The computer-implemented method (200) of claim 2, wherein identifying (206) the operable language is based at least in part on at the least one language signal.
- The computer-implemented method (200) of claim 1, wherein determining (212) the first frequency of occurrence of the first segmented result in the search engine index comprises normalizing the first frequency based on a number of search engine index entries corresponding to the first candidate language and determining the first frequency of occurrence of the first segmented result in logs of search queries received by the search engine comprises normalizing the first frequency based on a number of search queries in the logs corresponding to the first candidate language.
- The computer-implemented method (200) of claim 1, further comprising providing an advertisement selected based on the operable language.
- The computer-implemented method (200) of claim 1, wherein determining (212) the first segmented result comprises:determining a plurality of segmented results in the first candidate language from the string of characters, wherein each segmented result contains a different plurality of tokens than each of the other segmented results; andidentifying the first segmented result from the plurality of segmented results based on a probability value associated with each of the plurality of segmented results.
- The computer-implemented method (200) of claim 6, wherein a first probability value associated with the first segmented result is based at least in part on a frequency of each token within the first segmented result.
- The computer-implemented method (200) of claim 1, further comprising providing an advertisement based on the operable language.
- The computer-implemented method (200) of claim 1, wherein determining (212) the first frequency of occurrence comprises employing the search engine (156) to identify a number of articles in the first candidate language that are responsive to a first query containing the first segmented result and determining the second frequency of occurrence comprises employing the search engine (156) to identify a number of articles in the second candidate language that are responsive to a second query containing the second segmented result.
- The computer-implemented method (200) of claim 9, wherein determining (212) the first frequency comprises normalizing the first frequency based on a number of total articles in the first candidate language that are indexed by the search engine.
- The computer-implemented method (200) of claim 9, wherein employing the search engine (156) to identify the number of articles in the first candidate language comprises executing in the search engine a search query containing the first segmented result and determining a number of article identifiers in a result set generated by the search engine as a result of executing the search query.
- The computer-implemented method (200) of claim 9, wherein employing the search engine (156) to identify the number of articles in the first candidate language comprises determining a number of entries in an index (160) associated with the search engine (156) that correspond to one or more of the first plurality of tokens.
- The computer-implemented method (200) of claim 1, comprising:selecting an advertisement based at least in part on the operable language, wherein the advertisement includes text in the operable language; andcausing a display of the advertisement in association with a web page associated with a domain name.
- A computer-readable medium containing program code adapted, when said program is loaded onto a computer, to make the computer execute the procedure (200) of any one of claims 1 to 13
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP12175207.5A EP2511832B1 (en) | 2004-09-30 | 2005-09-28 | Method, system and computer program product for text segmentation |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/955,660 US7996208B2 (en) | 2004-09-30 | 2004-09-30 | Methods and systems for selecting a language for text segmentation |
PCT/US2005/035010 WO2006039398A2 (en) | 2004-09-30 | 2005-09-28 | Methods and systems for selecting a language for text segmentation |
Related Child Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12175207.5A Division-Into EP2511832B1 (en) | 2004-09-30 | 2005-09-28 | Method, system and computer program product for text segmentation |
EP12175207.5A Division EP2511832B1 (en) | 2004-09-30 | 2005-09-28 | Method, system and computer program product for text segmentation |
Publications (2)
Publication Number | Publication Date |
---|---|
EP1800224A2 EP1800224A2 (en) | 2007-06-27 |
EP1800224B1 true EP1800224B1 (en) | 2012-08-29 |
Family
ID=35985934
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12175207.5A Active EP2511832B1 (en) | 2004-09-30 | 2005-09-28 | Method, system and computer program product for text segmentation |
EP05802157A Active EP1800224B1 (en) | 2004-09-30 | 2005-09-28 | Methods and systems for selecting a language for text segmentation |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12175207.5A Active EP2511832B1 (en) | 2004-09-30 | 2005-09-28 | Method, system and computer program product for text segmentation |
Country Status (8)
Country | Link |
---|---|
US (4) | US7996208B2 (en) |
EP (2) | EP2511832B1 (en) |
JP (1) | JP5148278B2 (en) |
CN (3) | CN102831107B (en) |
CA (1) | CA2581902C (en) |
DK (1) | DK1800224T3 (en) |
ES (1) | ES2395168T3 (en) |
WO (1) | WO2006039398A2 (en) |
Families Citing this family (141)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8645137B2 (en) | 2000-03-16 | 2014-02-04 | Apple Inc. | Fast, language-independent method for user authentication by voice |
US7680648B2 (en) | 2004-09-30 | 2010-03-16 | Google Inc. | Methods and systems for improving text segmentation |
US8677377B2 (en) | 2005-09-08 | 2014-03-18 | Apple Inc. | Method and apparatus for building an intelligent automated assistant |
US8255376B2 (en) | 2006-04-19 | 2012-08-28 | Google Inc. | Augmenting queries with synonyms from synonyms map |
US8442965B2 (en) | 2006-04-19 | 2013-05-14 | Google Inc. | Query language identification |
US8380488B1 (en) | 2006-04-19 | 2013-02-19 | Google Inc. | Identifying a property of a document |
US8762358B2 (en) * | 2006-04-19 | 2014-06-24 | Google Inc. | Query language determination using query terms and interface language |
GB2454147B (en) * | 2006-09-01 | 2014-03-12 | Research In Motion Ltd | Method for identifying language of text in a handheld electronic device and a handheld electronic device incorporating the same |
US7689408B2 (en) * | 2006-09-01 | 2010-03-30 | Microsoft Corporation | Identifying language of origin for words using estimates of normalized appearance frequency |
US8423908B2 (en) * | 2006-09-08 | 2013-04-16 | Research In Motion Limited | Method for identifying language of text in a handheld electronic device and a handheld electronic device incorporating the same |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
DE602006016604D1 (en) * | 2006-09-18 | 2010-10-14 | Lg Electronics Inc | Method for managing voice information for text input, method for text input and mobile terminal |
US20100153569A1 (en) * | 2007-03-09 | 2010-06-17 | Ghost, Inc. | System and Method for a Virtual Hosted Operating System |
US8977255B2 (en) | 2007-04-03 | 2015-03-10 | Apple Inc. | Method and system for operating a multi-function portable electronic device using voice-activation |
US9754022B2 (en) * | 2007-10-30 | 2017-09-05 | At&T Intellectual Property I, L.P. | System and method for language sensitive contextual searching |
US8165869B2 (en) * | 2007-12-10 | 2012-04-24 | International Business Machines Corporation | Learning word segmentation from non-white space languages corpora |
US9330720B2 (en) | 2008-01-03 | 2016-05-03 | Apple Inc. | Methods and apparatus for altering audio output signals |
US8996376B2 (en) | 2008-04-05 | 2015-03-31 | Apple Inc. | Intelligent text-to-speech conversion |
US10496753B2 (en) | 2010-01-18 | 2019-12-03 | Apple Inc. | Automatically adapting user interfaces for hands-free interaction |
US8464150B2 (en) * | 2008-06-07 | 2013-06-11 | Apple Inc. | Automatic language identification for dynamic text processing |
US20100030549A1 (en) | 2008-07-31 | 2010-02-04 | Lee Michael M | Mobile device having human language translation capability with positional feedback |
US9356907B2 (en) | 2008-08-05 | 2016-05-31 | HeyWire, Inc. | Messaging system having multiple number, dual mode phone support |
US20120221962A1 (en) | 2008-08-05 | 2012-08-30 | Eugene Lee Lew | Social messaging hub system |
JP2011530875A (en) | 2008-08-05 | 2011-12-22 | メディアフレンズ，インク． | SMS technology for computerized equipment |
US11172067B1 (en) | 2008-08-05 | 2021-11-09 | HeyWire, Inc. | Call center mobile messaging |
US10241644B2 (en) | 2011-06-03 | 2019-03-26 | Apple Inc. | Actionable reminder entries |
US9858925B2 (en) | 2009-06-05 | 2018-01-02 | Apple Inc. | Using context information to facilitate processing of commands in a virtual assistant |
US10241752B2 (en) | 2011-09-30 | 2019-03-26 | Apple Inc. | Interface for a virtual digital assistant |
US10706373B2 (en) | 2011-06-03 | 2020-07-07 | Apple Inc. | Performing actions associated with task items that represent tasks to perform |
US9431006B2 (en) | 2009-07-02 | 2016-08-30 | Apple Inc. | Methods and apparatuses for automatic speech recognition |
KR101083455B1 (en) * | 2009-07-17 | 2011-11-16 | 엔에이치엔(주) | System and method for correction user query based on statistical data |
US10705794B2 (en) | 2010-01-18 | 2020-07-07 | Apple Inc. | Automatically adapting user interfaces for hands-free interaction |
US10553209B2 (en) | 2010-01-18 | 2020-02-04 | Apple Inc. | Systems and methods for hands-free notification summaries |
US10276170B2 (en) | 2010-01-18 | 2019-04-30 | Apple Inc. | Intelligent automated assistant |
US10679605B2 (en) | 2010-01-18 | 2020-06-09 | Apple Inc. | Hands-free list-reading by intelligent automated assistant |
US8682667B2 (en) | 2010-02-25 | 2014-03-25 | Apple Inc. | User profiling for selecting user specific voice input processing information |
US8635205B1 (en) * | 2010-06-18 | 2014-01-21 | Google Inc. | Displaying local site name information with search results |
CN101882226B (en) * | 2010-06-24 | 2013-07-24 | 汉王科技股份有限公司 | Method and device for improving language discrimination among characters |
US20120004899A1 (en) * | 2010-07-04 | 2012-01-05 | Taymoor Arshi | Dynamic ad selection for ad delivery systems |
CN102455997A (en) * | 2010-10-27 | 2012-05-16 | 鸿富锦精密工业（深圳）有限公司 | Component name extraction system and method |
US9262612B2 (en) | 2011-03-21 | 2016-02-16 | Apple Inc. | Device access using voice authentication |
US10057736B2 (en) | 2011-06-03 | 2018-08-21 | Apple Inc. | Active transport based notifications |
US8994660B2 (en) | 2011-08-29 | 2015-03-31 | Apple Inc. | Text correction processing |
US10134385B2 (en) | 2012-03-02 | 2018-11-20 | Apple Inc. | Systems and methods for name pronunciation |
US9483461B2 (en) | 2012-03-06 | 2016-11-01 | Apple Inc. | Handling speech synthesis of content for multiple languages |
US9280610B2 (en) | 2012-05-14 | 2016-03-08 | Apple Inc. | Crowd sourcing information to fulfill user requests |
US9721563B2 (en) | 2012-06-08 | 2017-08-01 | Apple Inc. | Name recognition system |
US9495129B2 (en) | 2012-06-29 | 2016-11-15 | Apple Inc. | Device, method, and user interface for voice-activated navigation and browsing of a document |
CN103631802B (en) * | 2012-08-24 | 2015-05-20 | 腾讯科技（深圳）有限公司 | Song information searching method, device and corresponding server |
US9576574B2 (en) | 2012-09-10 | 2017-02-21 | Apple Inc. | Context-sensitive handling of interruptions by intelligent digital assistant |
US9547647B2 (en) | 2012-09-19 | 2017-01-17 | Apple Inc. | Voice-based media searching |
US9218335B2 (en) * | 2012-10-10 | 2015-12-22 | Verisign, Inc. | Automated language detection for domain names |
US8713433B1 (en) * | 2012-10-16 | 2014-04-29 | Google Inc. | Feature-based autocorrection |
US9368114B2 (en) | 2013-03-14 | 2016-06-14 | Apple Inc. | Context-sensitive handling of interruptions |
WO2014144579A1 (en) | 2013-03-15 | 2014-09-18 | Apple Inc. | System and method for updating an adaptive speech recognition model |
KR101759009B1 (en) | 2013-03-15 | 2017-07-17 | 애플 인크. | Training an at least partial voice command system |
WO2014197334A2 (en) | 2013-06-07 | 2014-12-11 | Apple Inc. | System and method for user-specified pronunciation of words for speech synthesis and recognition |
US9582608B2 (en) | 2013-06-07 | 2017-02-28 | Apple Inc. | Unified ranking with entropy-weighted information for phrase-based semantic auto-completion |
WO2014197336A1 (en) | 2013-06-07 | 2014-12-11 | Apple Inc. | System and method for detecting errors in interactions with a voice-based digital assistant |
WO2014197335A1 (en) | 2013-06-08 | 2014-12-11 | Apple Inc. | Interpreting and acting upon commands that involve sharing information with remote devices |
US10176167B2 (en) | 2013-06-09 | 2019-01-08 | Apple Inc. | System and method for inferring user intent from speech inputs |
KR101959188B1 (en) | 2013-06-09 | 2019-07-02 | 애플 인크. | Device, method, and graphical user interface for enabling conversation persistence across two or more instances of a digital assistant |
WO2014200731A1 (en) | 2013-06-13 | 2014-12-18 | Apple Inc. | System and method for emergency calls initiated by voice command |
US9213910B2 (en) | 2013-11-06 | 2015-12-15 | Xerox Corporation | Reinforcement learning approach to character level segmentation of license plate images |
US9430463B2 (en) | 2014-05-30 | 2016-08-30 | Apple Inc. | Exemplar-based natural language processing |
US9760559B2 (en) | 2014-05-30 | 2017-09-12 | Apple Inc. | Predictive text input |
US9966065B2 (en) | 2014-05-30 | 2018-05-08 | Apple Inc. | Multi-command single utterance input method |
US10078631B2 (en) | 2014-05-30 | 2018-09-18 | Apple Inc. | Entropy-guided text prediction using combined word and character n-gram language models |
US9715875B2 (en) | 2014-05-30 | 2017-07-25 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US9785630B2 (en) | 2014-05-30 | 2017-10-10 | Apple Inc. | Text prediction using combined word N-gram and unigram language models |
US9842101B2 (en) | 2014-05-30 | 2017-12-12 | Apple Inc. | Predictive conversion of language input |
US10170123B2 (en) | 2014-05-30 | 2019-01-01 | Apple Inc. | Intelligent assistant for home automation |
US9740687B2 (en) | 2014-06-11 | 2017-08-22 | Facebook, Inc. | Classifying languages for objects and entities |
US9338493B2 (en) | 2014-06-30 | 2016-05-10 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US10659851B2 (en) | 2014-06-30 | 2020-05-19 | Apple Inc. | Real-time digital assistant knowledge updates |
US10446141B2 (en) | 2014-08-28 | 2019-10-15 | Apple Inc. | Automatic speech recognition based on user feedback |
US9818400B2 (en) | 2014-09-11 | 2017-11-14 | Apple Inc. | Method and apparatus for discovering trending terms in speech requests |
US10789041B2 (en) | 2014-09-12 | 2020-09-29 | Apple Inc. | Dynamic thresholds for always listening speech trigger |
US10074360B2 (en) | 2014-09-30 | 2018-09-11 | Apple Inc. | Providing an indication of the suitability of speech recognition |
US9886432B2 (en) | 2014-09-30 | 2018-02-06 | Apple Inc. | Parsimonious handling of word inflection via categorical stem + suffix N-gram language models |
US9668121B2 (en) | 2014-09-30 | 2017-05-30 | Apple Inc. | Social reminders |
US10127911B2 (en) | 2014-09-30 | 2018-11-13 | Apple Inc. | Speaker identification and unsupervised speaker adaptation techniques |
US9646609B2 (en) | 2014-09-30 | 2017-05-09 | Apple Inc. | Caching apparatus for serving phonetic pronunciations |
US10552013B2 (en) | 2014-12-02 | 2020-02-04 | Apple Inc. | Data detection |
US9711141B2 (en) | 2014-12-09 | 2017-07-18 | Apple Inc. | Disambiguating heteronyms in speech synthesis |
US9865280B2 (en) | 2015-03-06 | 2018-01-09 | Apple Inc. | Structured dictation using intelligent automated assistants |
US9721566B2 (en) | 2015-03-08 | 2017-08-01 | Apple Inc. | Competing devices responding to voice triggers |
US10567477B2 (en) | 2015-03-08 | 2020-02-18 | Apple Inc. | Virtual assistant continuity |
US9886953B2 (en) | 2015-03-08 | 2018-02-06 | Apple Inc. | Virtual assistant activation |
US9899019B2 (en) | 2015-03-18 | 2018-02-20 | Apple Inc. | Systems and methods for structured stem and suffix language models |
US9842105B2 (en) | 2015-04-16 | 2017-12-12 | Apple Inc. | Parsimonious continuous-space phrase representations for natural language processing |
US10360309B2 (en) * | 2015-04-30 | 2019-07-23 | Salesforce.Com, Inc. | Call center SMS-MMS language router |
US10083688B2 (en) | 2015-05-27 | 2018-09-25 | Apple Inc. | Device voice control for selecting a displayed affordance |
US10127220B2 (en) | 2015-06-04 | 2018-11-13 | Apple Inc. | Language identification from short strings |
US9578173B2 (en) | 2015-06-05 | 2017-02-21 | Apple Inc. | Virtual assistant aided communication with 3rd party service in a communication session |
US10101822B2 (en) | 2015-06-05 | 2018-10-16 | Apple Inc. | Language input correction |
US10186254B2 (en) | 2015-06-07 | 2019-01-22 | Apple Inc. | Context-based endpoint detection |
US10255907B2 (en) | 2015-06-07 | 2019-04-09 | Apple Inc. | Automatic accent detection using acoustic models |
US11025565B2 (en) | 2015-06-07 | 2021-06-01 | Apple Inc. | Personalized prediction of responses for instant messaging |
US10671428B2 (en) | 2015-09-08 | 2020-06-02 | Apple Inc. | Distributed personal assistant |
US10747498B2 (en) | 2015-09-08 | 2020-08-18 | Apple Inc. | Zero latency digital assistant |
US9734142B2 (en) | 2015-09-22 | 2017-08-15 | Facebook, Inc. | Universal translation |
US9697820B2 (en) | 2015-09-24 | 2017-07-04 | Apple Inc. | Unit-selection text-to-speech synthesis using concatenation-sensitive neural networks |
US11010550B2 (en) | 2015-09-29 | 2021-05-18 | Apple Inc. | Unified language modeling framework for word prediction, auto-completion and auto-correction |
US10366158B2 (en) | 2015-09-29 | 2019-07-30 | Apple Inc. | Efficient word encoding for recurrent neural network language models |
US11587559B2 (en) | 2015-09-30 | 2023-02-21 | Apple Inc. | Intelligent device identification |
CN108776709B (en) * | 2015-10-27 | 2020-05-19 | 上海智臻智能网络科技股份有限公司 | Computer-readable storage medium and dictionary updating method |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10049668B2 (en) | 2015-12-02 | 2018-08-14 | Apple Inc. | Applying neural network language models to weighted finite state transducers for automatic speech recognition |
US10223066B2 (en) | 2015-12-23 | 2019-03-05 | Apple Inc. | Proactive assistance based on dialog communication between devices |
US10446143B2 (en) | 2016-03-14 | 2019-10-15 | Apple Inc. | Identification of voice inputs providing credentials |
US10180930B2 (en) | 2016-05-10 | 2019-01-15 | Go Daddy Operating Company, Inc. | Auto completing domain names comprising multiple languages |
US10430485B2 (en) | 2016-05-10 | 2019-10-01 | Go Daddy Operating Company, LLC | Verifying character sets in domain name requests |
US9934775B2 (en) | 2016-05-26 | 2018-04-03 | Apple Inc. | Unit-selection text-to-speech synthesis based on predicted concatenation parameters |
US9972304B2 (en) | 2016-06-03 | 2018-05-15 | Apple Inc. | Privacy preserving distributed evaluation framework for embedded personalized systems |
US10249300B2 (en) | 2016-06-06 | 2019-04-02 | Apple Inc. | Intelligent list reading |
US10049663B2 (en) | 2016-06-08 | 2018-08-14 | Apple, Inc. | Intelligent automated assistant for media exploration |
DK179309B1 (en) | 2016-06-09 | 2018-04-23 | Apple Inc | Intelligent automated assistant in a home environment |
US10586535B2 (en) | 2016-06-10 | 2020-03-10 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
US10490187B2 (en) | 2016-06-10 | 2019-11-26 | Apple Inc. | Digital assistant providing automated status report |
US10067938B2 (en) | 2016-06-10 | 2018-09-04 | Apple Inc. | Multilingual word prediction |
US10192552B2 (en) | 2016-06-10 | 2019-01-29 | Apple Inc. | Digital assistant providing whispered speech |
US10509862B2 (en) | 2016-06-10 | 2019-12-17 | Apple Inc. | Dynamic phrase expansion of language input |
DK179415B1 (en) | 2016-06-11 | 2018-06-14 | Apple Inc | Intelligent device arbitration and control |
DK179049B1 (en) | 2016-06-11 | 2017-09-18 | Apple Inc | Data driven natural language event detection and classification |
DK179343B1 (en) | 2016-06-11 | 2018-05-14 | Apple Inc | Intelligent task discovery |
DK201670540A1 (en) | 2016-06-11 | 2018-01-08 | Apple Inc | Application integration with a digital assistant |
WO2018013511A1 (en) | 2016-07-11 | 2018-01-18 | Salesforce.Com, Inc. | System and method to use a mobile number in conjunction with a non-telephony internet connected device |
US10043516B2 (en) | 2016-09-23 | 2018-08-07 | Apple Inc. | Intelligent automated assistant |
US10380247B2 (en) | 2016-10-28 | 2019-08-13 | Microsoft Technology Licensing, Llc | Language-based acronym generation for strings |
US10593346B2 (en) | 2016-12-22 | 2020-03-17 | Apple Inc. | Rank-reduced token representation for automatic speech recognition |
US10180935B2 (en) * | 2016-12-30 | 2019-01-15 | Facebook, Inc. | Identifying multiple languages in a content item |
DK201770439A1 (en) | 2017-05-11 | 2018-12-13 | Apple Inc. | Offline personal assistant |
DK179745B1 (en) | 2017-05-12 | 2019-05-01 | Apple Inc. | SYNCHRONIZATION AND TASK DELEGATION OF A DIGITAL ASSISTANT |
DK179496B1 (en) | 2017-05-12 | 2019-01-15 | Apple Inc. | USER-SPECIFIC Acoustic Models |
DK201770431A1 (en) | 2017-05-15 | 2018-12-20 | Apple Inc. | Optimizing dialogue policy decisions for digital assistants using implicit feedback |
DK201770432A1 (en) | 2017-05-15 | 2018-12-21 | Apple Inc. | Hierarchical belief states for digital assistants |
DK179560B1 (en) | 2017-05-16 | 2019-02-18 | Apple Inc. | Far-field extension for digital assistant services |
CN109492225A (en) * | 2018-11-08 | 2019-03-19 | 大连瀚闻资讯有限公司 | A kind of public feelings information text handling method of rare foreign languages country |
CN111079408B (en) * | 2019-12-26 | 2023-05-30 | 北京锐安科技有限公司 | Language identification method, device, equipment and storage medium |
US11915167B2 (en) | 2020-08-12 | 2024-02-27 | State Farm Mutual Automobile Insurance Company | Claim analysis based on candidate functions |
Family Cites Families (104)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4839853A (en) * | 1988-09-15 | 1989-06-13 | Bell Communications Research, Inc. | Computer information retrieval using latent semantic structure |
US5325298A (en) * | 1990-11-07 | 1994-06-28 | Hnc, Inc. | Methods for generating or revising context vectors for a plurality of word stems |
US5423032A (en) * | 1991-10-31 | 1995-06-06 | International Business Machines Corporation | Method for extracting multi-word technical terms from text |
AU687358B2 (en) * | 1992-07-24 | 1998-02-26 | United States Of America, As Represented By The Secretary, Department Of Health And Human Services, The | Peptides useful as internal standards for microsequencing and methods for their use |
US5377280A (en) | 1993-04-19 | 1994-12-27 | Xerox Corporation | Method and apparatus for automatic language determination of European script documents |
US5454046A (en) * | 1993-09-17 | 1995-09-26 | Penkey Corporation | Universal symbolic handwriting recognition system |
US5619709A (en) | 1993-09-20 | 1997-04-08 | Hnc, Inc. | System and method of context vector generation and retrieval |
US5499360A (en) * | 1994-02-28 | 1996-03-12 | Panasonic Technolgies, Inc. | Method for proximity searching with range testing and range adjustment |
US5548507A (en) * | 1994-03-14 | 1996-08-20 | International Business Machines Corporation | Language identification process using coded language words |
US5794177A (en) * | 1995-07-19 | 1998-08-11 | Inso Corporation | Method and apparatus for morphological analysis and generation of natural language text |
US6067552A (en) * | 1995-08-21 | 2000-05-23 | Cnet, Inc. | User interface system and method for browsing a hypertext database |
US5913040A (en) | 1995-08-22 | 1999-06-15 | Backweb Ltd. | Method and apparatus for transmitting and displaying information between a remote network and a local computer |
US5778364A (en) * | 1996-01-02 | 1998-07-07 | Verity, Inc. | Evaluation of content of a data set using multiple and/or complex queries |
US5966686A (en) * | 1996-06-28 | 1999-10-12 | Microsoft Corporation | Method and system for computing semantic logical forms from syntax trees |
EP0822502A1 (en) * | 1996-07-31 | 1998-02-04 | BRITISH TELECOMMUNICATIONS public limited company | Data access system |
US6009382A (en) * | 1996-08-19 | 1999-12-28 | International Business Machines Corporation | Word storage table for natural language determination |
US6002998A (en) * | 1996-09-30 | 1999-12-14 | International Business Machines Corporation | Fast, efficient hardware mechanism for natural language determination |
US5778363A (en) * | 1996-12-30 | 1998-07-07 | Intel Corporation | Method for measuring thresholded relevance of a document to a specified topic |
US7437351B2 (en) * | 1997-01-10 | 2008-10-14 | Google Inc. | Method for searching media |
US6285999B1 (en) * | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6076051A (en) * | 1997-03-07 | 2000-06-13 | Microsoft Corporation | Information retrieval utilizing semantic representation of text |
US6119164A (en) * | 1997-04-15 | 2000-09-12 | Full Circle Software, Inc. | Method and apparatus for distributing over a network unsolicited information to a targeted audience |
US6006222A (en) * | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6185559B1 (en) * | 1997-05-09 | 2001-02-06 | Hitachi America, Ltd. | Method and apparatus for dynamically counting large itemsets |
US6233575B1 (en) * | 1997-06-24 | 2001-05-15 | International Business Machines Corporation | Multilevel taxonomy based on features derived from training documents classification using fisher values as discrimination values |
US6505150B2 (en) * | 1997-07-02 | 2003-01-07 | Xerox Corporation | Article and method of automatically filtering information retrieval results using test genre |
US5933822A (en) * | 1997-07-22 | 1999-08-03 | Microsoft Corporation | Apparatus and methods for an information retrieval system that employs natural language processing of search results to improve overall precision |
US6760746B1 (en) * | 1999-09-01 | 2004-07-06 | Eric Schneider | Method, product, and apparatus for processing a data request |
US6014665A (en) * | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) * | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) * | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US5845278A (en) * | 1997-09-12 | 1998-12-01 | Inioseek Corporation | Method for automatically selecting collections to search in full text searches |
US5974412A (en) * | 1997-09-24 | 1999-10-26 | Sapient Health Network | Intelligent query system for automatically indexing information in a database and automatically categorizing users |
US6134532A (en) * | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6230168B1 (en) * | 1997-11-26 | 2001-05-08 | International Business Machines Corp. | Method for automatically constructing contexts in a hypertext collection |
US6289342B1 (en) * | 1998-01-05 | 2001-09-11 | Nec Research Institute, Inc. | Autonomous citation indexing and literature browsing using citation context |
US6640006B2 (en) * | 1998-02-13 | 2003-10-28 | Microsoft Corporation | Word segmentation in chinese text |
US6421675B1 (en) * | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US6272456B1 (en) * | 1998-03-19 | 2001-08-07 | Microsoft Corporation | System and method for identifying the language of written text having a plurality of different length n-gram profiles |
GB9806085D0 (en) * | 1998-03-23 | 1998-05-20 | Xerox Corp | Text summarisation using light syntactic parsing |
US6044375A (en) * | 1998-04-30 | 2000-03-28 | Hewlett-Packard Company | Automatic extraction of metadata using a neural network |
US6334131B2 (en) * | 1998-08-29 | 2001-12-25 | International Business Machines Corporation | Method for cataloging, filtering, and relevance ranking frame-based hierarchical information structures |
US6466901B1 (en) * | 1998-11-30 | 2002-10-15 | Apple Computer, Inc. | Multi-language document search and retrieval system |
US6298348B1 (en) * | 1998-12-03 | 2001-10-02 | Expanse Networks, Inc. | Consumer profiling system |
US6324519B1 (en) * | 1999-03-12 | 2001-11-27 | Expanse Networks, Inc. | Advertisement auction system |
US6167369A (en) * | 1998-12-23 | 2000-12-26 | Xerox Company | Automatic language identification using both N-gram and word information |
US6269189B1 (en) * | 1998-12-29 | 2001-07-31 | Xerox Corporation | Finding selected character strings in text and providing information relating to the selected character strings |
US6678681B1 (en) * | 1999-03-10 | 2004-01-13 | Google Inc. | Information extraction from a database |
US6826559B1 (en) * | 1999-03-31 | 2004-11-30 | Verizon Laboratories Inc. | Hybrid category mapping for on-line query tool |
US6493702B1 (en) | 1999-05-05 | 2002-12-10 | Xerox Corporation | System and method for searching and recommending documents in a collection using share bookmarks |
US6493703B1 (en) * | 1999-05-11 | 2002-12-10 | Prophet Financial Systems | System and method for implementing intelligent online community message board |
US7065500B2 (en) * | 1999-05-28 | 2006-06-20 | Overture Services, Inc. | Automatic advertiser notification for a system for providing place and price protection in a search result list generated by a computer network search engine |
US6269361B1 (en) * | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
US6314419B1 (en) * | 1999-06-04 | 2001-11-06 | Oracle Corporation | Methods and apparatus for generating query feedback based on co-occurrence patterns |
AU6200300A (en) | 1999-06-24 | 2001-01-09 | Simpli.Com | Search engine interface |
US6601026B2 (en) * | 1999-09-17 | 2003-07-29 | Discern Communications, Inc. | Information retrieval by natural language querying |
US6754873B1 (en) | 1999-09-20 | 2004-06-22 | Google Inc. | Techniques for finding related hyperlinked documents using link-based analysis |
US6453315B1 (en) * | 1999-09-22 | 2002-09-17 | Applied Semantics, Inc. | Meaning-based information organization and retrieval |
US6816857B1 (en) | 1999-11-01 | 2004-11-09 | Applied Semantics, Inc. | Meaning-based advertising and document relevance determination |
JP2001101186A (en) * | 1999-09-30 | 2001-04-13 | Oki Electric Ind Co Ltd | Machine translating device |
US7107218B1 (en) * | 1999-10-29 | 2006-09-12 | British Telecommunications Public Limited Company | Method and apparatus for processing queries |
US6968308B1 (en) * | 1999-11-17 | 2005-11-22 | Microsoft Corporation | Method for segmenting non-segmented text using syntactic parse |
JP3803219B2 (en) * | 1999-12-14 | 2006-08-02 | 三菱電機株式会社 | Full-text search device and full-text search method |
US6691108B2 (en) * | 1999-12-14 | 2004-02-10 | Nec Corporation | Focused search engine and method |
US6678409B1 (en) * | 2000-01-14 | 2004-01-13 | Microsoft Corporation | Parameterized word segmentation of unsegmented text |
US6615209B1 (en) * | 2000-02-22 | 2003-09-02 | Google, Inc. | Detecting query-specific duplicate documents |
US20020002452A1 (en) * | 2000-03-28 | 2002-01-03 | Christy Samuel T. | Network-based text composition, translation, and document searching |
US6754872B2 (en) * | 2000-05-22 | 2004-06-22 | Sarnoff Corporation | Method and apparatus for reducing channel distortion in a wireless communications network |
GB2362971B (en) | 2000-05-30 | 2004-03-24 | Com Nation Ltd | A method of searching the internet and an internet search engine |
US6810375B1 (en) * | 2000-05-31 | 2004-10-26 | Hapax Limited | Method for segmentation of text |
US7136854B2 (en) * | 2000-07-06 | 2006-11-14 | Google, Inc. | Methods and apparatus for providing search results in response to an ambiguous search query |
US6529903B2 (en) * | 2000-07-06 | 2003-03-04 | Google, Inc. | Methods and apparatus for using a modified index to provide search results in response to an ambiguous search query |
AU2001255845A1 (en) * | 2000-07-28 | 2002-02-13 | The Penn State Research Foundation | A process for fabricating hollow electroactive devices |
US6766320B1 (en) * | 2000-08-24 | 2004-07-20 | Microsoft Corporation | Search engine with natural language-based robust parsing for user query and relevance feedback learning |
CA2323883C (en) * | 2000-10-19 | 2016-02-16 | Patrick Ryan Morin | Method and device for classifying internet objects and objects stored oncomputer-readable media |
US6917937B1 (en) | 2000-11-01 | 2005-07-12 | Sas Institute Inc. | Server-side object filtering |
US7054803B2 (en) * | 2000-12-19 | 2006-05-30 | Xerox Corporation | Extracting sentence translations from translated documents |
US6714939B2 (en) * | 2001-01-08 | 2004-03-30 | Softface, Inc. | Creation of structured data from plain text |
US6658423B1 (en) * | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US6526440B1 (en) * | 2001-01-30 | 2003-02-25 | Google, Inc. | Ranking search results by reranking the results based on local inter-connectivity |
JP3408525B2 (en) * | 2001-02-08 | 2003-05-19 | 松下電器産業株式会社 | SRAM device |
JP2002245470A (en) * | 2001-02-16 | 2002-08-30 | Merukomu Service Kk | Language specifying device, translating device, and language specifying method |
US8001118B2 (en) * | 2001-03-02 | 2011-08-16 | Google Inc. | Methods and apparatus for employing usage statistics in document retrieval |
US7860706B2 (en) * | 2001-03-16 | 2010-12-28 | Eli Abir | Knowledge system method and appparatus |
US6738764B2 (en) * | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
WO2002095614A1 (en) * | 2001-05-24 | 2002-11-28 | Izumi Suzuki | Method for identifying language/character code system |
JP2003186789A (en) * | 2001-12-18 | 2003-07-04 | Logo Vista Corp | Electronic mail translation system |
US6978264B2 (en) * | 2002-01-03 | 2005-12-20 | Microsoft Corporation | System and method for performing a search and a browse on a query |
US7716161B2 (en) | 2002-09-24 | 2010-05-11 | Google, Inc, | Methods and apparatus for serving relevant advertisements |
JP4184344B2 (en) * | 2002-11-06 | 2008-11-19 | 株式会社野村鍍金 | Surface treatment method for vacuum member |
US7249012B2 (en) * | 2002-11-20 | 2007-07-24 | Microsoft Corporation | Statistical method and apparatus for learning translation relationships among phrases |
FR2848688A1 (en) * | 2002-12-17 | 2004-06-18 | France Telecom | Text language identifying device for linguistic analysis of text, has analyzing unit to analyze chain characters of words extracted from one text, where each chain is completed so that each time chains are found in word |
US20040119740A1 (en) * | 2002-12-24 | 2004-06-24 | Google, Inc., A Corporation Of The State Of California | Methods and apparatus for displaying and replying to electronic messages |
CN100429648C (en) * | 2003-05-28 | 2008-10-29 | 洛昆多股份公司 | Automatic segmentation of texts comprising chunsk without separators |
US7370034B2 (en) * | 2003-10-15 | 2008-05-06 | Xerox Corporation | System and method for performing electronic information retrieval using keywords |
US20050086065A1 (en) * | 2003-10-16 | 2005-04-21 | Nokia Corporation | Automatic field completion in capacity-constrained media |
US20050131872A1 (en) * | 2003-12-16 | 2005-06-16 | Microsoft Corporation | Query recognizer |
US8392249B2 (en) * | 2003-12-31 | 2013-03-05 | Google Inc. | Suggesting and/or providing targeting criteria for advertisements |
US7359851B2 (en) * | 2004-01-14 | 2008-04-15 | Clairvoyance Corporation | Method of identifying the language of a textual passage using short word and/or n-gram comparisons |
US20050289473A1 (en) | 2004-03-17 | 2005-12-29 | Carl Gustafson | Method and system for providing search information via a communications network |
US7409334B1 (en) * | 2004-07-22 | 2008-08-05 | The United States Of America As Represented By The Director, National Security Agency | Method of text processing |
US7792814B2 (en) | 2005-09-30 | 2010-09-07 | Sap, Ag | Apparatus and method for parsing unstructured data |
US7761458B1 (en) | 2006-02-01 | 2010-07-20 | Hewlett-Packard Development Company, L.P. | Segmentation of a data sequence |
US7747633B2 (en) | 2007-07-23 | 2010-06-29 | Microsoft Corporation | Incremental parsing of hierarchical files |
-
2004
- 2004-09-30 US US10/955,660 patent/US7996208B2/en active Active
-
2005
- 2005-09-28 CN CN201210288916.2A patent/CN102831107B/en active Active
- 2005-09-28 ES ES05802157T patent/ES2395168T3/en active Active
- 2005-09-28 CA CA2581902A patent/CA2581902C/en not_active Expired - Fee Related
- 2005-09-28 JP JP2007534758A patent/JP5148278B2/en active Active
- 2005-09-28 DK DK05802157.7T patent/DK1800224T3/en active
- 2005-09-28 WO PCT/US2005/035010 patent/WO2006039398A2/en active Application Filing
- 2005-09-28 EP EP12175207.5A patent/EP2511832B1/en active Active
- 2005-09-28 CN CN201210063033.1A patent/CN102708095B/en active Active
- 2005-09-28 EP EP05802157A patent/EP1800224B1/en active Active
- 2005-09-29 CN CN2005800411370A patent/CN101095138B/en active Active
-
2011
- 2011-08-08 US US13/205,087 patent/US8306808B2/en not_active Expired - Fee Related
-
2012
- 2012-09-15 US US13/620,821 patent/US8489387B2/en active Active
- 2012-09-15 US US13/620,752 patent/US20130018648A1/en not_active Abandoned
Also Published As
Publication number | Publication date |
---|---|
CA2581902C (en) | 2013-05-07 |
US8306808B2 (en) | 2012-11-06 |
CN102708095A (en) | 2012-10-03 |
ES2395168T3 (en) | 2013-02-08 |
US20130013288A1 (en) | 2013-01-10 |
CN102831107B (en) | 2016-01-20 |
WO2006039398A8 (en) | 2007-03-22 |
DK1800224T3 (en) | 2012-11-19 |
CA2581902A1 (en) | 2006-04-13 |
JP5148278B2 (en) | 2013-02-20 |
US20060074628A1 (en) | 2006-04-06 |
WO2006039398A3 (en) | 2006-07-06 |
CN101095138A (en) | 2007-12-26 |
EP1800224A2 (en) | 2007-06-27 |
CN102708095B (en) | 2015-09-30 |
US7996208B2 (en) | 2011-08-09 |
EP2511832A3 (en) | 2013-03-20 |
US8489387B2 (en) | 2013-07-16 |
US20130018648A1 (en) | 2013-01-17 |
EP2511832A2 (en) | 2012-10-17 |
WO2006039398A2 (en) | 2006-04-13 |
JP2008515107A (en) | 2008-05-08 |
CN102831107A (en) | 2012-12-19 |
CN101095138B (en) | 2012-08-29 |
EP2511832B1 (en) | 2014-05-14 |
US20110301939A1 (en) | 2011-12-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP1800224B1 (en) | Methods and systems for selecting a language for text segmentation | |
US8849852B2 (en) | Text segmentation | |
US8255376B2 (en) | Augmenting queries with synonyms from synonyms map | |
US8762358B2 (en) | Query language determination using query terms and interface language | |
US7475063B2 (en) | Augmenting queries with synonyms selected using language statistics | |
US8417695B2 (en) | Identifying related concepts of URLs and domain names | |
US9652529B1 (en) | Methods and systems for augmenting a token lexicon | |
US7835903B2 (en) | Simplifying query terms with transliteration | |
US7937396B1 (en) | Methods and systems for identifying paraphrases from an index of information items and associated sentence fragments | |
JP2005182817A (en) | Query recognizer | |
EP1700250B1 (en) | Method and system for text segmentation | |
US20220382753A1 (en) | Narrowing synonym dictionary results using document attributes | |
US7302645B1 (en) | Methods and systems for identifying manipulated articles |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20070427 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC NL PL PT RO SE SI SK TR |
|
AX | Request for extension of the european patent |
Extension state: AL BA HR MK YU |
|
DAX | Request for extension of the european patent (deleted) | ||
17Q | First examination report despatched |
Effective date: 20110524 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE INC. |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: MANDELSON, JACOB LEONInventor name: ELBAZ, GILAD ISRAEL |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IS IT LI LT LU LV MC NL PL PT RO SE SI SK TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4DRef country code: DERef legal event code: R081Ref document number: 602005035918Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNERS: HARO CARBAJAL, ELBA TERESA, COLIMA, MX; MANDELSON, JACOB, LEON, PASADENA, CALIF., US; GOOGLE, INC., MOUNTAIN VIEW, CALIF., US |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 573384Country of ref document: ATKind code of ref document: TEffective date: 20120915 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602005035918Country of ref document: DEEffective date: 20121025 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: T3 |
|
REG | Reference to a national code |
Ref country code: DKRef legal event code: T3 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 573384Country of ref document: ATKind code of ref document: TEffective date: 20120829 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4DEffective date: 20120829 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20121229 |
|
REG | Reference to a national code |
Ref country code: ESRef legal event code: FG2ARef document number: 2395168Country of ref document: ESKind code of ref document: T3Effective date: 20130208 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20121231Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20121130Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: BEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: MCFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20120930 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20120930Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20121129Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20120930Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20120928 |
|
26N | No opposition filed |
Effective date: 20130530 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602005035918Country of ref document: DEEffective date: 20130530 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20120829 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20120928 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20050928 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: ESPayment date: 20150928Year of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20150917Year of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DKPayment date: 20150928Year of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20150926Year of fee payment: 11 |
|
REG | Reference to a national code |
Ref country code: DKRef legal event code: EBPEffective date: 20160930 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MMEffective date: 20161001 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20161001 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: STEffective date: 20170531 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160930 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160930 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602005035918Country of ref document: DERepresentative=s name: PATENTANWAELTE STROHSCHAENK, URI, STRASSER & K, DERef country code: DERef legal event code: R081Ref document number: 602005035918Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ESFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160929 |
|
REG | Reference to a national code |
Ref country code: ESRef legal event code: FD2AEffective date: 20181127 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602005035918Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0017270000Ipc: G06F0040200000 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230524 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230927Year of fee payment: 19 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20230927Year of fee payment: 19 |
CN115668140A - Generating selectable suggestions using a temporary machine learning model when using a default suggestion model is unreasonable - Google Patents
Generating selectable suggestions using a temporary machine learning model when using a default suggestion model is unreasonable Download PDFInfo
- Publication number
- CN115668140A CN115668140A CN202080101369.5A CN202080101369A CN115668140A CN 115668140 A CN115668140 A CN 115668140A CN 202080101369 A CN202080101369 A CN 202080101369A CN 115668140 A CN115668140 A CN 115668140A
- Authority
- CN
- China
- Prior art keywords
- suggestion
- model
- application
- data
- computing device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/217—Validation; Performance evaluation; Active pattern learning techniques
- G06F18/2178—Validation; Performance evaluation; Active pattern learning techniques based on feedback of a supervisor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
- G06N20/20—Ensemble learning
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/02—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail using automatic reactions or user delegation, e.g. automatic replies or chatbot-generated messages
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
- H04L51/046—Interoperability with other network applications or services
Abstract
The embodiments set forth herein relate to selectively relying on additional suggestion model(s) in generating a selectable suggestion while also maintaining access to a default suggestion model. One or more additional multi-domain Machine Learning (ML) models can be used to generate selectable suggestions, the models being selectable for client applications regardless of whether the default suggestion model is still useful for generating suitable suggestions. In some implementations, as the client application employs various additional multi-domain ML models, particular models can be identified as suggestions to improve the client application based at least on user feedback and/or other data. Particular models can then be selected to replace and/or supplement the default suggestion models in order to provide more accurate suggestions that when selected initiate actions that can save time and computational resources.
Description
Background
Humans may participate in human-computer conversations using interactive software applications, also referred to herein as "automated assistants" (also referred to as "digital agents", "chat robots", "interactive personal assistants", "intelligent personal assistants", "session agents", and the like). For example, a human being (which may be referred to as a "user" when they interact with the automated assistant) may provide commands and/or requests using spoken natural language input (i.e., utterances) and/or by providing textual (e.g., typed) natural language input, which may in some cases be converted to text and then processed.
In some contexts (contexts), a user may be presented with selectable suggestions for causing a computing device to perform a particular operation, such as invoking an automated assistant to initiate an action. Such suggestions can be based on application content rendered at the computing device when the user, for example, sends a message, browses the internet, and/or otherwise interacts with the application. While some applications can include native modules or Application Programming Interfaces (APIs) for generating such suggestions, there may be situations where the process for generating suggestions is inadequate. For example, when processed using a previously-employed suggestion model, corresponding text between users may not cause any suitable suggestion(s) to appear at an interface of the computing device (e.g., at an interface of an application and/or an interface of an automated assistant).
Such situations can result in the user missing an opportunity to initialize an automated assistant or other application to complete a task that saves time, energy, and other resources. Further, while the default suggestion model may be advantageous in certain contexts, updates to the default suggestion model (or replacement of the default suggestion model with an alternate suggestion model) may not be pushed to the user device frequently. This lack of rapid model updates and/or model replacements may prevent the identification of time and/or energy saving action recommendation(s). These suggestions may be determined using the updated suggestion model(s) rather than using the default suggestion model(s). The updated recommendation model(s) can be more robust than (e.g., provide greater coverage than) the default recommendation model(s). However, while such updated proposed models may be more robust, they may lack accuracy and may interrupt other services if deployed too quickly (e.g., before sufficient training and/or validation). Such lack of accuracy and service interruption can also result in waste of various device and/or network resources when rendering and/or selecting inaccurate suggestion(s).
Disclosure of Invention
Embodiments set forth herein relate to selectively relying on additional suggestion models in generating selectable suggestions related to application content generated by a client application. The client application may otherwise employ a suggestion process (e.g., a rule-based approach, application suggestion model, and/or other process) to render selectable suggestions to the user. For example, the selectable suggestion may be a selectable graphical user interface element that, when selected, causes another application to initiate an action. For example, the client application can be a messaging application that renders a GUI element that can be selected, which when selected causes the automated assistant to initiate an action (e.g., schedule an event). The action can be based on the content of a conversation between users of the messaging application, with prior permission by the user. To identify a particular action to suggest, a messaging application or a separate application (e.g., an automated assistant) can process certain application content using an application suggestion model, which can be a default model associated with the automated assistant. In some cases, delays and mismanagement of computing resources may result when automated assistants rely on inadequately tested proposed models. To ensure efficient transitions between the suggestion models, the default suggestion model can remain available at the time of generating the suggestion, and other additional suggestion models can be relied upon simultaneously and/or additionally under certain conditions.
For example, a user can use a messaging application to communicate with another user regarding a particular event. A particular event can be characterized by application content rendered at an interface of a messaging application. The first suggestion model can be relied upon by default in processing application content to facilitate rendering of selectable suggestion elements for a user. In some implementations, processing of the application content using the first suggestion model can result in, for example, suggesting one or more automated assistant commands invoked by the user. However, when the process does or does not result in any suggestions being identified and/or any suggestions having a threshold probability and/or threshold score being identified, a second suggestion model can be used to help identify suggestions to render.
In some implementations, the application content can be further processed using the second suggestion model to generate one or more selectable suggestions for the user. For example, the automated assistant can employ the second suggestion mode and/or one or more additional suggestion models to help identify one or more assistant actions that may be useful to the user and/or otherwise conserve computing resources. When the automated assistant identifies an assistant action or other content to be suggested by the messaging application, the automated assistant can transmit the assistant action or other content to the messaging application. In response, the messaging application can select to render, for example, a selectable suggestion element that identifies an assistant action identified using the second suggestion model. In this manner, the messaging application can continue to rely on suggestions generated using a default process to render suggestions (e.g., using the first suggestion model), but can also selectively transition to rely on other additional suggestion models available via the automated assistant or other application.
In some implementations, the task of the first application can be to select a suitable additional suggestion model from a plurality of different additional suggestion models. The first application can be provided at the client computing device along with a second application that can provide an interface through which the user can receive suggestions. The first application can be updated over the network connection to allow the client application to access additional proposed models that have recently become available. The second application can optionally be updated over the network connection and can attempt to generate suggestions for the user regardless of whether the first application is updated. For example, the second application can employ an Application Programming Interface (API) to interact with the first application to receive suggestion data from the first application. Initially, the second application can execute a function such as an attribute _ suggestion (application _ content (), application _ suggestion _ model) to receive a suggestion based on the application content and the application suggestion model. The slot value "application _ content ()" can refer to application content generated by the second application, and the slot value "application _ recommendation _ model" can identify a model that the first application will use when processing the application content. The first application can support the "application _ proposal _ model" even after the first application is updated to provide access to one or more different additional suggestion models.
For example, when an updated first application receives a request from a second application to facilitate execution of a function, the updated first application can process "application _ content ()" to facilitate providing suggested data to the second application. In some implementations, the second application can choose not to render the suggestion based on the application content when processing "application _ content ()" using "application _ presentation _ model" fails to result in identifying the suggestion. However, the first application can optionally use "application _ content ()" along with another model to continue to identify suggestions. For example, based on application content, the first application can identify one or more additional suggestion models to employ in generating suggestions from the application content. In some embodiments, the additional proposed models can be considered "experimental models" by the entity providing the first application, and thus the entity can avoid assigning the additional proposed models as default models without prior testing. Thus, by allowing a first application to generate suggestion data using an additional suggestion model, the additional suggestion model can be tested without significantly impacting the operability of a second application that otherwise relies on a different application suggestion model. In other words, the entity providing the model for the second application is able to test and/or train other proposed models without completely revoking access to other suitable application proposed models during testing.
When the first application has identified a suitable additional suggestion model to test, the first application can generate suggestion data using the additional suggestion model and the application content — although the second application does not request that the first application explicitly employ the additional suggestion model. The second application can then determine whether to render one or more selectable suggested elements based on the suggestion data. In some implementations, user feedback (e.g., input and/or other user engagement) can be identified when the second application uses a particular additional suggestion model to render selectable suggestion elements. The user feedback can be embodied as feedback data accessible to the first application and/or an entity providing the first application, subject to prior permission by the user. That particular additional suggestion model can then be further trained based on feedback data from a variety of different devices and/or user interactions. This can improve the accuracy of user suggestions that can be rendered by a particular application using additional suggestion models.
The above description is provided as an overview of some embodiments of the disclosure. Further description of these and other embodiments is described in more detail below.
Other embodiments may include a non-transitory computer-readable storage medium storing instructions executable by one or more processors (e.g., central processing unit(s) (CPU), graphics processing unit(s) (GPU), and/or tensor processing unit(s) (TPU)) to perform a method, such as one or more of the methods described above and/or elsewhere herein. Other embodiments may include a system of one or more computers including one or more processors operable to execute stored instructions to perform a method, such as one or more of the methods described above and/or elsewhere herein.
It should be understood that all combinations of the foregoing concepts and additional concepts described in greater detail herein are considered a part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are considered part of the subject matter disclosed herein.
Drawings
1A, 1B, and 1C illustrate views of a user interacting with a computing device capable of using one or more suggestion models to perform a trial process for generating suggestions while supporting one or more existing default suggestion models.
FIG. 2 illustrates a system that involves selectively relying on additional suggestion model(s) in generating a selectable suggestion while also maintaining access to a default suggestion model.
Fig. 3A and 3B illustrate a method for preserving the use of a default proposed model while allowing other models to be employed to determine the accuracy of the other models.
FIG. 4 is a block diagram of an example computer system.
Detailed Description
1A, 1B, and 1C illustrate views 100, 140, and 160 of a user 110 interacting with a computing device 112, the computing device 112 being capable of performing a trial process for generating recommendations using one or more recommendation models while supporting one or more existing default recommendation models. For example, fig. 1A illustrates a view 100 of a user 110 interacting with a computing device 112 to access a messaging application 102. Upon interacting with computing device 112, messaging application 102 can render application content, such as natural language content of a group message between user 110 and one or more other people, as shown in state 108. The user 110 can use their hand 114 to enter natural language content into the field 106 of the messaging application 102. One or more portions of content rendered at the interface 116 (e.g., text displayed at the interface 116) can be considered application content, which can be the basis of one or more suggestions that can be rendered at the interface 116 of the computing device 112. The suggestions can be rendered as selectable suggestion elements that, when selected, can cause one or more applications to run to facilitate assisting a user in performing operations related to application content. For example, the selectable suggestion elements can include content that can: provided to the automated assistant as a spoken command, incorporated into an input field of an application, communicated to another device and/or application, and/or otherwise used to assist the user 110 and/or the device or module in performing one or more operations.
In some implementations, the messaging application 102 can request the suggestion data 124 by communicating the suggestion request 122 to additional applications 120 that can be accessed via the computing device 112. In response to receiving the suggestion request 122, the additional application 120 can access a first suggestion model 126-A of the one or more different suggestion models 126. In some implementations, the additional application 120 and/or the messaging application 102 can identify the first suggestion model 126-a based on the first suggestion model 126-a having been previously used when processing prior application content and/or generating one or more suggestions for the messaging application 102. Additionally or alternatively, the additional application 120 and/or the messaging application 102 can identify the first suggestion model 126-a based on the first suggestion model 126-a being assigned as a default model for use in processing application content and generating one or more suggestions for the messaging application 102.
In some implementations, the additional applications 120 can include a suggestion engine 118, the suggestion engine 118 employing one or more suggestion models in generating suggestion data 124 for the messaging application 102. Additionally or alternatively, the suggestion data 124 can be used by the messaging application 102 and/or the additional applications 120 to render one or more selectable suggestion elements at an interface of the computing device 112. In some implementations, the additional application 120 may generate the suggestion data 124 using the first suggestion model 126-a, but determine that the suggestion data 124 does not identify suggestions suitable for rendering to the user 110. For example, one or more suggestions can be assigned a probability that does not satisfy a threshold established based on one or more users' interactions with various selectable suggestion elements. Additionally or alternatively, the additional application 120 may attempt to generate suggestion data using the first suggestion model 126-a, but the process of generating suggestion data may not result in suggestions that can be identified.
When the additional application 120 fails to identify one or more suggestions, or fails to identify one or more suggestions that are suitable for rendering at the interface 116, the additional application 120 and/or the messaging application 102 can employ different suggestion models in order to identify other suggestions (e.g., corresponding to one or more other actions). In some implementations, the additional applications 120 can generate suggestion data using different suggestion model(s) without explicit requests from the messaging application 102 for: (i) Use a different recommendation model and/or (ii) attempt to generate other recommendation data. Additionally or alternatively, the additional applications 120 can generate suggestion data using the application content when the suggestion data 124 is determined to be suitable for rendering to the user 110.
As provided in view 140 of FIG. 1B, the additional applications 120 can access application content 146, which can characterize the content of the interface 116 provided in FIG. 1A and/or FIG. 1B. The additional applications 120 can process the application content 146 using the second suggestion model 126-B. The second suggestion model 126-B can be different from the first suggestion model 126-A and can optionally be trained using at least some amount of training data not used to train the first suggestion model 126-A. Additionally or alternatively, the second suggestion model 126-B can be a different type of machine learning model than the machine learning model of the first suggestion model 126-A. For example, the second proposed model 126-B can be a multi-domain neural network model, while the first proposed model 126-A may not be a multi-domain neural network model.
The additional applications 120 can generate suggestion data 148 based on processing the application content 146 using the suggestion engine 118 and the second suggestion model 126-B. Suggestion data 148 can be provided by additional applications 120 to messaging application 102, and messaging application 102 can render one or more selectable suggestion elements 144 based on suggestion data 148. Additionally or alternatively, the additional applications 120 can generate suggestion data 148 to render one or more selectable suggestion elements 144 based on the suggestion data 148. The user 110 can select a selectable suggestion element 144 (as shown in state 150) by: using their hands 114; providing a spoken utterance (e.g., "assistant, tell me delivery options nearby"; and/or providing another input within a threshold period of time indicating that the user 110 intends to initiate an action associated with the selectable suggestion elements 144.
In some embodiments, the first suggestion model 126-A can remain available to help generate suggestions, while the second suggestion model 126-B can also be used to help generate suggestions. Other suggestion models 126 can also be available while the first suggestion model 126-a remains available, at least for use in processing data to facilitate generating suggestions that can be selected and/or other content for assisting one or more users. For example, the second suggestion model 126-B can be used by the computing device 112 as a test for determining the accuracy and/or suitability of suggestions generated using the second suggestion model 126-B. While the test is in progress, the additional application 120 can utilize the first suggestion model 126-A, which can be a suggestion model that has been reliably used by the additional application 120 to provide suitable suggestion data prior to the test. In this way, testing of various models will not interrupt the reliable process of generating recommendations-at least until the tested models have historically been used to generate reliable recommendation data. For example, the suggestion data can be considered reliable when one or more probabilities and/or scores of particular suggestions characterized by the suggestion data satisfy a threshold. In some implementations, the second suggestion model 126-B can be assigned as a replacement for the first suggestion model 126-A when it is determined that the second suggestion model 126-B is useful for generating suggestions that are at least as suitable as suggestions generated using the first suggestion model 126-A. For example, a degree of correlation between a suggestion generated using the second suggestion model 126-B and another suggestion generated using the first suggestion model 126-A can be determined. When the degree of correlation satisfies a threshold, the second suggestion model 126-B can be assigned as a default suggestion model and/or replace the first suggestion model 126-A. Additionally or alternatively, when the degree of correlation fails to satisfy a threshold, the second suggestion model 126-B can be further trained and/or can be further evaluated as the second suggestion model 126-B is continuously tested.
In some implementations, when the user 110 selects the selectable suggestion elements 144, the feedback data 162 can be generated by the messaging application 102 and/or the additional application 120 and processed by the additional application 120. The feedback data 162 can be used to further refine the accuracy of the proposed model, and/or to further train the proposed model. For example, in response to the user 110 selecting the selectable suggestion element 144 within a threshold period of time, the additional application 120 (e.g., automated assistant) can be invoked and initiate an internet search for "nearby delivery options". When the additional applications 120 identify search results for suggestion to the user 110, the additional applications 120 can cause links to the search results to be populated in the fields 106 of the messaging application 102.
The user's 110 selection of the suggestion(s) can be characterized by feedback data 162 provided from the messaging application 102 to the additional applications 120. The feedback data 162 can then be processed by the additional application 120 and/or a separate application or device to further train the second proposed model 126-B. In some implementations, the second suggestion model 126-B is trained using training data 164 generated by the additional application 120 based on the feedback data 162. Additionally or alternatively, the second suggestion model 126-B can be further trained such that suggestions generated using the second suggestion model 126-B will correspond to probabilities that the threshold is met more frequently. In some implementations, the second suggestion model 126-B can be accessed via a remote computing device that is trained using feedback data from a variety of different client devices and/or a variety of different users with prior permission by the user. When it is determined after testing that the second proposed model 126-B is sufficiently trained, the second proposed model 126-B can be assigned to replace the first proposed model 126-A. In other words, when the second suggestion model 126-B is sufficiently trained, the second suggestion model 126-B can be assigned as a "default" model to use in generating suggestions-rather than the first suggestion model 126-A as the "default" model.
FIG. 2 illustrates a system 200 that selectively relies on additional suggestion model(s) in generating suggestions that can be selected, while also maintaining access to and/or employing a default suggestion model. Automated assistant 204 can operate as part of an assistant application provided at one or more computing devices, such as computing device 202 and/or a server device. The user can interact with the automated assistant 204 via assistant interface(s) 220, the assistant interface 220 can be a microphone, a camera, a touch screen display, a user interface, and/or any other device capable of providing an interface between the user and an application. For example, a user can initialize automated assistant 204 by providing verbal, textual, and/or graphical input to assistant interface 220 to cause automated assistant 204 to initialize one or more actions (e.g., provide data, control peripherals, access agents, generate input and/or output, etc.). Alternatively, automated assistant 204 can be initialized based on processing of context data 236 using one or more trained machine learning models. Context data 236 can characterize one or more features of an environment that automated assistant 204 can access, and/or predict one or more features of a user intending to interact with automated assistant 204.
The computing device 202 can include a display device, which can be a display panel that includes a touch interface for receiving touch inputs and/or gestures to allow a user to control the computing device 202 or an application 234 of another device via the touch interface. In some implementations, the computing device 202 can be free of a display device, providing audible user interface output, and not graphical user interface output. Further, the computing device 202 can provide a user interface, such as a microphone, for receiving spoken natural language input from the user. In some implementations, the computing device 202 can include a touch interface and can lack a camera, but can optionally include one or more other sensors.
In various implementations, all or less than all aspects of automated assistant 204 can be implemented on computing device 202. In some of these implementations, aspects of automated assistant 204 are implemented via computing device 202 and can interface with server devices that can implement other aspects of automated assistant 204. The server device can optionally serve multiple users and their associated assistant applications via multiple threads. In implementations in which all or less than all aspects of automated assistant 204 are implemented via computing device 202, automated assistant 204 can be an application separate from the operating system of computing device 202 (e.g., installed "on top" of the operating system) -or can alternatively be implemented directly by the operating system of computing device 202 (e.g., an application considered to be the operating system, but integrated with the operating system).
In some implementations, the automated assistant 204 can include an input processing engine 206 that can employ a number of different modules to process input and/or output of the computing device 202 and/or the server device. For example, the input processing engine 206 can include a speech processing engine 208 that can process audio data received at the assistant interface 220 to identify text contained in the audio data. Audio data can be transmitted from, for example, the computing device 202 to a server device to conserve computing resources at the computing device 202 when a network connection is available. Additionally or alternatively, the audio data can be processed exclusively at the computing device 202.
The process for converting audio data to text can include: a speech recognition algorithm that can use a neural network, and/or a statistical model for identifying a set of audio data corresponding to a word or phrase. The text converted from the audio data can be parsed by the data parsing engine 210 and made available to the automated assistant 204 as text data that can be used to generate and/or identify command phrase(s), intent(s), action(s), slot value(s), and/or any other content specified by the user. In some implementations, the output data provided by the data parsing engine 210 can be provided to the parameter engine 212 to determine whether the user provided input corresponding to a particular intent, action, and/or routine that can be performed by the automated assistant 204 and/or an application or agent that can be accessed via the automated assistant 204. For example, assistant data 238 can be stored at the server device and/or computing device 202 and can include data defining one or more actions that can be performed by the automated assistant 204 and parameters needed to perform the actions. The parameter engine 212 can generate one or more parameters for the intent, action, and/or slot value and provide the one or more parameters to the output generation engine 214. The output generation engine 214 can communicate with the assistant interface 220 for providing output to a user using one or more parameters and/or communicate with one or more applications 234 for providing output to the one or more applications 234.
In some implementations, the automated assistant 204 can be an application that can be installed "on top" of the operating system of the computing device 202 and/or can itself form a portion (or all) of the operating system of the computing device 202. Automated assistant applications include, and/or have access to, on-device speech recognition, on-device natural language understanding, and on-device fulfillment. For example, on-device speech recognition can be performed using an on-device speech recognition module that processes audio data (detected by the microphone (s)) using an end-to-end speech recognition machine learning model stored locally at the computing device 202. On-device speech recognition generates recognized text for spoken utterances (if any) present in the audio data. Further, on-device Natural Language Understanding (NLU) can be performed, for example, using an on-device NLU module that processes recognized text generated using on-device speech recognition, and optionally context data, to generate NLU data.
The NLU data can include intent(s) corresponding to the spoken utterance and optional parameter(s) (e.g., bin values) for the intent(s). On-device fulfillment can be performed using an on-device fulfillment module that utilizes NLU data (from the on-device NLU), and optionally other local data, to determine action(s) to take to resolve intent(s) (and optionally parameter(s) for the intent) of the spoken utterance. This can include determining local and/or remote responses (e.g., answers) to the spoken utterance, interaction(s) with locally installed application(s) for execution based on the spoken utterance, command(s) transmitted to internet of things (IoT) device(s) (directly or via corresponding remote system (s)) based on the spoken utterance, and/or other analytic action(s) to be performed based on the spoken utterance. Fulfillment on the device can then initiate local and/or remote execution/enforcement of the determined action(s) to resolve the spoken utterance.
In various embodiments, at least remote speech processing, remote NLU, and/or remote fulfillment can be selectively utilized. For example, the recognized text can be at least selectively transmitted to the remote automation assistant component(s) for remote NLU and/or remote fulfillment. For example, the recognized text can optionally be transmitted for remote execution in parallel with execution on the device, or transmitted in response to a failure of the NLU on the device and/or fulfillment on the device. However, on-device speech processing, on-device NLUs, on-device fulfillment, and/or on-device execution can be prioritized, at least because of the reduction in delay they provide in resolving the spoken utterance (because there are no client-server round trips(s) required to resolve the spoken utterance). Further, the on-device functionality can be the only functionality available without or with limited network connectivity.
In some implementations, the computing device 202 can include one or more applications 234 that can be provided by a third party entity that is different from the entity that provides the computing device 202 and/or the automated assistant 204. An application state engine of the automated assistant 204 and/or the computing device 202 can access the application data 230 to determine one or more actions that can be performed by the one or more applications 234, as well as a state of each of the one or more applications 234 and/or a state of a respective device associated with the computing device 202. The device data 232 can be accessed by the automated assistant 204 and/or a device state engine of the computing device 202 to determine one or more actions that can be performed by the computing device 202 and/or one or more devices associated with the computing device 202. Moreover, application data 230 and/or any other data (e.g., device data 232) can be accessed by automated assistant 204 to generate context data 236 that can characterize the context in which a particular application 234 and/or device is executing, and/or the context in which a particular user is accessing computing device 202, accessing application 234, and/or any other device or module. When one or more applications 234 execute at the computing device 202, the device data 232 can characterize the current operating state of each application 234 executing at the computing device 202. Further, the application data 230 can characterize one or more features of the executing application 234, such as content of one or more graphical user interfaces rendered in the direction of the one or more applications 234.
In some implementations, the computing device 202 can include a suggestion request engine 222 that can process requests received from one or more applications 234 of the computing device 202 and/or a separate computing device. The request can cause the automated assistant 204 to identify one or more actions, content, and/or other data that can be suggested to the user. For example, the suggestion request can cause suggestion request engine 222 to access content rendered by an application providing the suggestion request. Additionally or alternatively, the suggestion request can cause the suggestion request engine 222 to access content that is currently, previously, or will ultimately be rendered at the interface of the computing device 202, with prior permission by the user. The content accessed by the suggestion request engine 222 can then be processed according to a suggestion process.
In some implementations, the suggestion process can be selected using a content processing engine 216, which content processing engine 216 can identify a particular suggestion process based on the suggestion request. For example, the content processing engine 216 can initially identify a suggestion process that was previously used to provide a suggestion for the application 234 that provided the suggestion request. Additionally or alternatively, the content processing engine 216 can initially identify a suggestion process that is assigned as a default suggestion process for the application 234 providing the suggestion request. Processing of content, which can include application data 230, device data 232, and/or context data 236, can result in generation of suggestion data. The suggestion data can characterize one or more suggestions that can be rendered at an interface of the computing device 202 to assist a user in initiating a particular action and/or accessing certain other content. However, in some cases, processing of the content using the default suggestion process may not result in any suggestions being identified.
When the content processing engine 216 has completed processing the content using the initial suggestion process (e.g., using a first suggestion model of the suggestion models 228), the content processing engine 216 can process the content or other content using another suggestion model (e.g., a second suggestion model of the suggestion models 228). The other proposed model can be, but is not limited to, a test model or experimental model that the entity uses to determine the accuracy of the other proposed model. For example, the first suggestion model can be a default suggestion model that the automated assistant 204 previously used when generating suggestions, and the second suggestion model can be a model trained using different training data relative to the training data used to train the first suggestion model. Additionally or alternatively, the first proposed model can be a different type of proposed model than the second proposed model.
When the content processing engine 216 processes content using other suggestion models, the content processing engine 216 can generate additional suggestion data. The additional suggestion data can characterize the same or different suggestions as those identified based on processing the content using the initial suggestion process. The application providing the suggestion request can receive each instance of suggestion data from the automated assistant 204 and selectively render one or more selectable suggestion elements using the suggestion data. Additionally or alternatively, the automated assistant 204 can selectively render one or more selectable suggestion elements using instances of suggestion data.
In some implementations, the automated assistant 204 can include a feedback processing engine 218 that can process input characterizing interactions between a user and one or more selectable suggested elements. The processing of the input can produce feedback data that can be used by the model assignment engine 226 to assign accuracy values to the respective proposed models. In some implementations, the automated assistant 204 can assign the second proposed model as a "default" model when it is determined that the accuracy of the second proposed model is greater than the accuracy of the first proposed model. In some implementations, each model can be available at a separate server device, and each model can be trained from feedback data from a variety of different users and/or a variety of their respective devices. Additionally or alternatively, a training engine 224 can be provided at the automated assistant 204 to locally train each model according to the feedback data generated by the feedback processing engine 218.
In some implementations, the second proposed model can be maintained at the server computing device in order to conserve computing resources at the client computing device, at least until the second proposed model has been deemed sufficiently accurate to be provided to the client computing device. Maintaining a "default" model at a client computing device can reserve computing resources, such as network bandwidth, that could otherwise be consumed by transferring data to various server devices over various network connections. Furthermore, maintaining a default model at the client computing device-no other experimental models at the client computing device-can mitigate delays between generating recommendations because experiments on other models are not performed exclusively at the client computing device. Thus, by limiting the hosting of certain models to server computing devices, computing resources of the client computing device, such as memory and processing bandwidth, can be conserved.
In some implementations, the model assignment engine 226 can generate and/or modify model data that characterizes the applicability of a particular model for use in generating selectable suggestions associated with an application. The model assignment engine 226 can modify model data associated with a particular proposed model based on feedback data generated from interactions between the user and the proposed elements that can be selected. When an interaction is determined to be a positive interaction and/or when corresponding feedback data is determined to satisfy a threshold, the model data can be modified to reflect the determination. Additionally or alternatively, when it is determined that the feedback data of one or more interactions meets a threshold, the model data can be modified to assign the corresponding proposed model as a default proposed model. Additionally or alternatively, when an interaction is determined to be a negative interaction and/or when corresponding data is determined not to satisfy a threshold, the model data can be modified to reflect the determination. Additionally or alternatively, when it is determined that the feedback data for one or more interactions does not satisfy the threshold, the model data can be modified to further characterize the corresponding proposed model as less accurate when used to generate the proposal. Changes in the model data can then be used to rank certain models over others, and ultimately assign the most accurate model as the default model for use in generating suggestions for a particular application and/or applications.
Fig. 3A and 3B illustrate methods 300 and 320 for preserving the use of default proposed models while allowing other models to be employed to determine the accuracy of the other models. The method 300 can be performed by one or more computing devices, applications, and/or any other apparatus or module that can be associated with an automated assistant. The method 300 can include an operation 302 of determining whether a suggestion request has been received. Suggestion requests can be received from an application with which the user is interacting, and suggestion requests can be received by additional applications, such as automated assistants or other applications. The suggestion request can include data that causes the automated assistant to process the suggestion request using a suggestion model to facilitate the automated assistant providing the suggestion data back to the application.
When it is determined that a suggestion request has been received, the method 300 can proceed to operation 304, otherwise the additional application can proceed to determine whether a suggestion request has been received. Operation 304 can include determining whether a current suggestion process is available to generate suggestions for the application. The current suggestion process can be a process that includes processing application content using a set of rules, one or more machine learning models, and/or any other means or module for generating suggestion data for an application. When the current suggestion process is not available to generate suggestions, the method 300 can proceed to operation 308. Otherwise, when the current proposed procedure is available, the method 300 can proceed to operation 306.
When it is determined that another suggestion model is available, the method 300 can proceed to operation 310, which operation 310 can include generating additional suggestion data using the other suggestion model. When generating additional suggestion data, the additional applications can use other suggestion models and application content, which can be the same or different than the application content used by the current suggestion process of operation 306. For example, application content for other suggestion models can be screenshots, while other application content for the current suggestion process may not include screenshots. Rather, other application content for the current suggested process can include different screenshots and/or different application data that the application and/or additional applications can access.
When it is determined that another suggestion is not available, the method 300 can optionally proceed from operation 308 to optional operation 312, which optional operation 312 can include providing one or more default suggestions. The default suggestion can be, but is not limited to, a selectable suggestion element that, when selected, causes the additional application to initialize and perform a default action. For example, the default action can be by audibly and/or visually asking the user what help the user wishes to obtain (e.g., "what do i can you. Additionally or alternatively, the default action can be to access a separate device and/or application, and/or to access the internet. Thereafter, the method 300 can proceed to operation 302 and continue monitoring for suggestion requests.
When operation 310 is performed, the method 300 can proceed from operation 310 to operation 314, which operation 314 can include causing the application to render one or more selectable suggestion elements based on the generated suggestion data and/or the additional suggestion data. For example, the selectable element(s) can be rendered by the application or additional applications and, when selected, can cause the application and/or additional applications to initiate performance of one or more actions. The method 300 can continue from operation 314, via a continuation element "a" (circled at method 300 of fig. 3A) to a continuation element "a" (circled at method 320 of fig. 3B), to optional operation 316.
In some implementations, operation 316 can be an optional operation to determine a correlation between the suggestion data generated according to the current suggestion process and additional suggestion data generated using other suggestion models. Thereafter, other proposed models can be trained based on whether the degree of correlation satisfies a threshold. Additionally or alternatively, other suggestion models can be trained based on whether the user interacts with selectable suggestion elements generated using the other suggestion models. In this way, other suggestion models can be trained to provide suggestions that are otherwise provided via the current suggestion process, and can also be trained to provide suggestions with which the user is more likely to interact, thereby encouraging the user to employ additional applications to perform operations that conserve computing resources. The method 300 can proceed to operation 302 via continuation element "B" to continue determining whether a suggestion request has been received from the application.
Fig. 4 is a block diagram 400 of an example computer system 410. Computing device 410 typically includes at least one processor 414, which communicates with a number of peripheral devices via a bus subsystem 412. These peripheral devices may include a storage subsystem 424 (including, for example, a memory subsystem 424 and a file storage subsystem 426), a user interface output device 420, a user interface input device 422, and a network interface subsystem 416. The input and output devices allow a user to interact with the computing device 410. Network interface subsystem 416 provides an interface to external networks and couples to corresponding interface devices in other computing devices.
The user interface input devices 422 may include a keyboard, a pointing device such as a mouse, trackball, touchpad, or tablet, a scanner, a touch screen incorporated into a display, a device such as a voice recognition system, a microphone, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information to computing device 410 or over a communication network.
User interface output devices 420 may include a display subsystem, a printer, a fax machine, or a non-visual display such as an audio output device. The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or some other mechanism for creating a visual image. The display subsystem may also provide non-visual displays, such as via an audio output device. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computing device 410 to a user or to another machine or computing device.
These software modules are typically executed by the processor 414 alone or in combination with other processors. The memory 425 used in the storage subsystem 424 can include a number of memories including a main Random Access Memory (RAM) 430 for storing instructions and data during program execution and a Read Only Memory (ROM) 432 in which fixed instructions are stored. File storage subsystem 426 is capable of providing permanent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges. Modules implementing the functionality of certain embodiments may be stored by file storage subsystem 426 in storage subsystem 424, or in other machines accessible by processor(s) 414.
Where the systems described herein collect personal information about a user (or referred to herein generally as a "participant") or can use personal information, the user can be provided with an opportunity to control whether programs or functions collect user information (e.g., information about the user's social network, social behavior or activity, profession, user preferences, or the user's current geographic location), or whether and/or how to receive content from a content server that may be more relevant to the user. In addition, certain data may be processed in one or more ways before it is stored or used, so that the personal identity information is removed. For example, the user's identity may be processed so that no personal identity information of the user can be determined, or the user's geographic location may be summarized where geographic location information is obtained (such as to the city, zip code, or state level), so that no particular geographic location of the user can be determined. Thus, the user may control how information about the user is collected and/or used.
Although several embodiments have been described and illustrated herein, various other means and/or structures for performing the function and/or obtaining the result and/or one or more of the advantages described herein may be utilized and each such variation and/or modification is considered to be within the scope of the embodiments described herein. More generally, all parameters, dimensions, materials, and configurations described herein are meant to be exemplary, and the actual parameters, dimensions, materials, and/or configurations will depend upon the particular application or applications for which the teachings are directed. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific embodiments described herein. It is, therefore, to be understood that the foregoing embodiments are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, the embodiments may be practiced otherwise than as specifically described and claimed. Embodiments of the present disclosure are directed to each individual feature, system, article, material, kit, and/or method described herein. Moreover, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
In some embodiments, a method implemented by one or more processors is set forth as including the operations of: a request is received to generate suggested data using application content, wherein the application content is generated by an application accessible via a computing device. The method can further include the operations of: in response to receiving the request, processing the application content using a first suggestion model to generate the suggestion data. The method can further include the operations of: based on processing the application content, determining whether the suggested data is insufficient to render at an interface of the computing device. The method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device: causing processing of the application content using a second suggestion model to facilitate generation of additional suggestion data, wherein the first suggestion model is designated as a default suggestion model relative to generation of selectable suggestions associated with the application. The method may further comprise the operations of: determining that the additional suggestion data is sufficient to render at an interface of the computing device, and causing the computing device to render one or more selectable suggestions based on the additional suggestion data.
In some embodiments, the method may further comprise the operations of: when it is determined that the suggested data is insufficient to render at the interface of the computing device: processing feedback data characterizing interactions between a user and the one or more selectable suggestions based on the additional suggestion data, and, based on processing the feedback data, determining whether the interactions between the user and the one or more selectable suggestions result in selection of a particular selectable suggestion of the one or more selectable suggestions. In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device, and when the interaction between the user and the one or more selectable suggestions results in the selection of the particular selectable suggestion: causing the second suggestion model to be designated as the default suggestion model with respect to generating selectable suggestions associated with the application.
In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device, and when the interaction between the user and the one or more selectable suggestions results in the selection of the particular selectable suggestion: causing the first suggestion model to no longer be designated as the default suggestion model based on the selection of the particular selectable suggestion by the user. The method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device, and when the interaction between the user and the one or more selectable suggestions results in the selection of the particular selectable suggestion: causing both the first suggestion model and the second suggestion model to be assigned for use when providing subsequently selectable suggestions for the application. In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device: processing feedback data characterizing interactions between a user and the one or more selectable suggestions based on the additional suggestion data; and determining, based on processing the feedback data, whether to designate the second suggestion model as the default suggestion model instead of the first suggestion model or whether to use the second suggestion model in combination with the first suggestion model as an additional default suggestion model.
In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device, and when it is determined that the second suggestion model is designated as the default suggestion model or the additional default suggestion model: causing the second suggestion model to be designated as the default suggestion model or the additional default suggestion model with respect to generating selectable suggestions associated with the application. In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device, and when it is determined that the second suggestion model is designated as the default suggestion model or the additional default suggestion model: causing the second proposed model to be provided to the computing device from a server computing device, wherein the first proposed model is stored at the computing device. In some embodiments, the method may further comprise the operations of: when it is determined that the recommendation data is insufficient to render at the interface of the computing device, and when the feedback data fails to satisfy a threshold designating the second recommendation model as the default recommendation model: based on the feedback data failing to meet the threshold, modifying model data characterizing a suitability of the second suggestion model for use in generating selectable suggestions associated with the application.
In some implementations, causing the application content to be processed using the second suggestion model includes: transmitting the application content to a server computing device, wherein the server computing device provides access to the second suggestion model. In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is sufficient to render at the interface of the computing device: causing the computing device to render one or more other selectable suggestions based on the suggestion data, and causing the application content to be processed using the second suggestion model to facilitate generating the additional suggestion data. In some embodiments, the method may further comprise the operations of: when it is determined that the suggested data is sufficient to render at the interface of the computing device: determining a degree of correlation between the additional recommendation data generated using the second recommendation model and the recommendation data generated using the first recommendation model.
In some embodiments, the method may further comprise the operations of: when it is determined that the suggested data is sufficient to render at the interface of the computing device: modifying model data characterizing applicability of the second proposed model relative to other models based on the degree of relevance for use in generating a selectable proposal associated with the application. The method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device: determining respective relevance between the application content and one or more additional ones of the other suggestion models accessible to the computing device, and identifying the second suggestion model based on a degree of relevance of the second suggestion model relative to other degrees of relevance between the application content and the other suggestion models.
In some embodiments, the method may further comprise the operations of: when it is determined that the suggestion data is insufficient to render at the interface of the computing device: determining respective correlations between the application and one or more additional ones of the other proposed models accessible to the computing device, and identifying the second proposed model based on the degree of correlation of the second proposed model relative to other degrees of correlation between the application and the other proposed models. In some embodiments, the second proposed model is a multi-domain neural network model. In some embodiments, the method may further comprise: accessing the application content in response to receiving the request, wherein the application content characterizes one or more operations performed by the application, and wherein the operations of the one or more operations include rendering a graphical user interface containing content generated during an interaction between the user and another user. In some implementations, the request is received by an automated assistant that is responsive to a spoken utterance from the user. In some implementations, the additional suggested data characterizes one or more assistant actions that can be initiated via the automated assistant.
In yet another embodiment, a method implemented by one or more processors is set forth as including operations such as: processing, by a first application, application content according to a suggestion generation process for generating first suggestion data, wherein the application content is provided at least in part via a second application accessed by a user via a computing device, and wherein the suggestion generation process has previously been used to generate selectable suggestions based on other application content previously provided via the second application. In some embodiments, the method may further comprise the operations of: processing, by the first application, the application content using a suggestion model for generating second suggestion data, wherein the suggestion generation process is different from processing the application content using the suggestion model, and wherein the suggestion model was not previously used to process the other application content previously provided via the second application. In some embodiments, the method may further comprise the operations of: rendering, by the first application, an interface of the computing device: a first selectable suggestion element based on the first suggestion data and the suggestion generation process, and a second selectable suggestion element based on the second suggestion data and the suggestion model.
In some implementations, processing the application content according to the suggestion generation process includes: accessing an image of graphical content being rendered at a graphical user interface of the computing device, wherein the first selectable suggestion element is different from the second selectable suggestion element.
In yet another embodiment, a method implemented by one or more processors is set forth as including operations such as: rendering, by an application, an interface of a computing device of content based on interactions between a user and the application. The method may further comprise the operations of: receiving suggestion data from an additional application characterizing one or more actions that can be performed by the additional application, wherein the suggestion data is generated using a suggestion generation process that has previously been used to generate selectable suggestions using prior application content of the application. The method may further comprise the operations of: receiving additional suggestion data from the additional application characterizing one or more other actions that can be performed by the additional application, wherein the additional suggestion data is generated using a suggestion model that was not previously available to the additional application to generate the selectable suggestion from the prior application content. The method may further comprise the operations of: rendering, by the application, the interface of the computing device: a first selectable suggestion element based on the suggestion data, wherein selection of the first selectable suggestion element by the user causes the additional application to initiate performance of the one or more actions, and a second selectable suggestion element based on the additional suggestion data, wherein individual selection of the second selectable suggestion element by the user causes the additional application to initiate performance of the one or more other actions.
In some embodiments, the method may further comprise the operations of: after causing the interface of the computing device to render the first selectable suggestion element and the second selectable suggestion element: in response to the user interacting with the second selectable suggestion element, causing the additional application to continue to employ the suggestion model while generating subsequent suggestion data for the application. In some embodiments, the method may further comprise the operations of: after causing the interface of the computing device to render the first selectable suggestion element and the second selectable suggestion element: responsive to the user not interacting with the second selectable suggestion element within a threshold period of time, causing the additional application to no longer employ the suggestion model when generating further suggestion data for the application.
Claims (27)
1. A method implemented by one or more processors, the method comprising:
receiving a request to generate suggested data using application content,
wherein the application content is generated by an application accessible via a computing device;
in response to receiving the request, process the application content using a first suggestion model to generate the suggestion data;
based on processing the application content, determining whether the suggestion data is insufficient to render at an interface of the computing device; and
when it is determined that the suggested data is insufficient to render at the interface of the computing device:
causing the application content to be processed using a second suggestion model to facilitate generating additional suggestion data,
wherein the first suggestion model is designated as a default suggestion model with respect to generating selectable suggestions associated with the application,
determining that the additional suggestion data is sufficient to render at the interface of the computing device, an
Causing the computing device to render one or more selectable suggestions based on the additional suggestion data.
2. The method of claim 1, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device:
processing feedback data characterizing interactions between a user and the one or more selectable suggestions based on the additional suggestion data, and
based on processing the feedback data, determining whether the interaction between the user and the one or more selectable suggestions results in selection of a particular selectable suggestion of the one or more selectable suggestions.
3. The method of claim 2, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device, an
When the interaction between the user and the one or more selectable suggestions results in the selection of the particular selectable suggestion:
causing the second suggestion model to be designated as the default suggestion model with respect to generating selectable suggestions associated with the application.
4. The method of claim 2 or 3, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device, an
When the interaction between the user and the one or more selectable suggestions results in the selection of the particular selectable suggestion:
causing the first suggestion model to no longer be designated as the default suggestion model based on the selection of the particular selectable suggestion by the user.
5. The method of any of claims 2 to 4, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device, an
When the interaction between the user and the one or more selectable suggestions results in the selection of the particular selectable suggestion:
causing both the first suggestion model and the second suggestion model to be assigned for use in providing subsequently selectable suggestions for the application.
6. The method of claim 1, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device:
processing feedback data characterizing interactions between a user and the one or more selectable suggestions based on the additional suggestion data, and
based on processing the feedback data, determining whether to designate the second suggestion model as the default suggestion model instead of the first suggestion model or whether to combine the second suggestion model with the first suggestion model to serve as an additional default suggestion model.
7. The method of claim 6, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device, an
When it is determined that the second suggestion model is designated as the default suggestion model or the additional default suggestion model:
causing the second suggestion model to be designated as the default suggestion model or the additional default suggestion model with respect to generating selectable suggestions associated with the application.
8. The method of claim 6, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device, an
When it is determined that the second suggestion model is designated as the default suggestion model or the additional default suggestion model:
cause the second proposed model to be provided from a server computing device to the computing device,
wherein the first proposed model is stored at the computing device.
9. The method of claim 6, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device, an
When the feedback data fails to satisfy a threshold that designates the second proposed model as the default proposed model:
based on the feedback data failing to meet the threshold, modifying model data characterizing suitability of the second proposed model for use in generating a selectable proposal associated with the application.
10. The method of any preceding claim, wherein causing the application content to be processed using the second suggestion model comprises:
transmitting the application content to a server computing device,
wherein the server computing device provides access to the second proposed model.
11. The method of any preceding claim, further comprising:
when it is determined that the suggestion data is sufficient to render at the interface of the computing device:
causing the computing device to render one or more other selectable suggestions based on the suggestion data, an
Causing the application content to be processed using the second suggestion model to facilitate generating the additional suggestion data.
12. The method of claim 11, further comprising:
when it is determined that the suggested data is sufficient to render at the interface of the computing device:
determining a degree of correlation between the additional recommendation data generated using the second recommendation model and the recommendation data generated using the first recommendation model.
13. The method of claim 12, further comprising:
when it is determined that the suggested data is sufficient to render at the interface of the computing device:
modifying model data characterizing applicability of the second proposed model relative to other models based on the degree of correlation for use in generating selectable suggestions associated with the application.
14. The method of any preceding claim, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device:
determining respective correlations between the application content and one or more additional ones of the other suggestion models accessible to the computing device, and
identifying the second suggestion model based on a degree of relevance of the second suggestion model relative to other degrees of relevance between the application content and the other suggestion models.
15. The method of any of claims 1 to 12, further comprising:
when it is determined that the suggested data is insufficient to render at the interface of the computing device:
determining respective correlations between the application and one or more additional ones of the other proposed models accessible to the computing device, an
Identifying the second proposed model based on a degree of relevance of the second proposed model relative to other degrees of relevance between the application and the other proposed models.
16. The method of any of the preceding claims, wherein the second proposed model is a multi-domain neural network model.
17. The method of any preceding claim, further comprising:
accessing the application content in response to receiving the request,
wherein the application content characterizes one or more operations performed by the application, an
Wherein an operation of the one or more operations comprises rendering a graphical user interface comprising content generated during an interaction between the user and another user.
18. The method of any of the preceding claims, wherein the request is received by an automated assistant that is responsive to a spoken utterance from the user.
19. The method of claim 18, wherein the additional suggested data characterizes one or more assistant actions that can be initiated via the automated assistant.
20. A method implemented by one or more processors, the method comprising:
processing, by the first application, the application content according to a suggestion generation process for generating first suggestion data,
wherein the application content is provided at least in part via a second application accessed by a user via a computing device, an
Wherein the suggestion generation process has previously been used to generate selectable suggestions based on other application content previously provided via the second application;
processing, by the first application, the application content using a suggestion model for generating second suggestion data,
wherein the suggestion generation process is different from processing the application content using the suggestion model, an
Wherein the suggestion model was not previously used to process the other application content previously provided via the second application; and
rendering, by the first application, an interface of the computing device:
a first selectable suggestion element based on the first suggestion data and the suggestion generation process, an
A second selectable suggestion element based on the second suggestion data and the suggestion model.
21. The method of claim 20, wherein processing the application content according to the suggestion generation process comprises:
accessing an image of graphical content being rendered at a graphical user interface of the computing device,
wherein the first selectable suggestion element is different from the second selectable suggestion element.
22. A method implemented by one or more processors, the method comprising:
causing, by an application, an interface of a computing device to render content based on interactions between a user and the application;
receiving suggestion data from an additional application characterizing one or more actions that can be performed by the additional application,
wherein the suggestion data is generated using a suggestion generation process that has previously been used to generate selectable suggestions using prior application content of the application;
receive additional suggestion data from the additional application characterizing one or more other actions that can be performed by the additional application,
wherein the additional suggestion data is generated using a suggestion model that was previously unavailable to the additional application to generate the selectable suggestion from the prior application content; and
rendering, by the application, the interface of the computing device:
based on a first selectable suggestion element of the suggestion data,
wherein selection of the first selectable suggestion element by the user causes the additional application to initiate performance of the one or more actions, an
A second selectable suggestion element based on the additional suggestion data,
wherein individual selection of the second selectable suggestion element by the user causes the additional application to initiate performance of the one or more other actions.
23. The method of claim 22, further comprising:
after causing the interface of the computing device to render the first selectable suggestion element and the second selectable suggestion element:
in response to the user interacting with the second selectable suggestion element, causing the additional application to continue to employ the suggestion model while generating subsequent suggestion data for the application.
24. The method of claim 22, further comprising:
after causing the interface of the computing device to render the first selectable suggestion element and the second selectable suggestion element:
responsive to the user not interacting with the second selectable suggestion element within a threshold period of time, causing the additional application to no longer employ the suggestion model when generating further suggestion data for the application.
25. A computer program product comprising instructions which, when executed by one or more processors, cause the one or more processors to carry out the method according to any one of the preceding claims.
26. A computer-readable storage medium comprising instructions that, when executed by one or more processors, cause the one or more processors to perform the method of any one of claims 1-24.
27. A system comprising one or more processors configured to perform the method of any one of claims 1 to 24.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2020/035290 WO2021242257A1 (en) | 2020-05-29 | 2020-05-29 | Generating a selectable suggestion using a provisional machine learning model when use of a default suggestion model is inconsequential |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115668140A true CN115668140A (en) | 2023-01-31 |
Family
ID=72193562
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080101369.5A Pending CN115668140A (en) | 2020-05-29 | 2020-05-29 | Generating selectable suggestions using a temporary machine learning model when using a default suggestion model is unreasonable |
Country Status (4)
Country | Link |
---|---|
US (1) | US20220147775A1 (en) |
EP (1) | EP4133370A1 (en) |
CN (1) | CN115668140A (en) |
WO (1) | WO2021242257A1 (en) |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10970646B2 (en) * | 2015-10-01 | 2021-04-06 | Google Llc | Action suggestions for user-selected content |
-
2020
- 2020-05-29 CN CN202080101369.5A patent/CN115668140A/en active Pending
- 2020-05-29 EP EP20760975.1A patent/EP4133370A1/en active Pending
- 2020-05-29 US US17/252,218 patent/US20220147775A1/en active Pending
- 2020-05-29 WO PCT/US2020/035290 patent/WO2021242257A1/en unknown
Also Published As
Publication number | Publication date |
---|---|
EP4133370A1 (en) | 2023-02-15 |
WO2021242257A1 (en) | 2021-12-02 |
US20220147775A1 (en) | 2022-05-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN111052229A (en) | Automatically determining a language for speech recognition of a spoken utterance received via an automated assistant interface | |
CN110998717A (en) | Automatically determining language for speech recognition of a spoken utterance received through an automated assistant interface | |
US11934895B2 (en) | Determining whether and/or when to provide notifications, based on application content, to mitigate computationally wasteful application-launching behavior | |
EP4086904A1 (en) | Speaker awareness using speaker dependent speech model(s) | |
US20230298583A1 (en) | Suggesting an alternative interface when environmental interference is expected to inhibit certain automated assistant interactions | |
US20230169980A1 (en) | Detecting and handling failures in other assistants | |
JP2022528218A (en) | Proposed automation assistant for third-party vehicle computing devices with restricted architecture | |
US20230385022A1 (en) | Automated assistant performance of a non-assistant application operation(s) in response to a user input that can be limited to a parameter(s) | |
US20220147775A1 (en) | Generating a selectable suggestion using a provisional machine learning model when use of a default suggestion model is inconsequential | |
EP3791384A1 (en) | Speech recognition hypothesis generation according to previous occurrences of hypotheses terms and/or contextual data | |
US11481686B1 (en) | Selectively rendering a keyboard interface in response to an assistant invocation in certain circumstances | |
US20240054994A1 (en) | Condition dependent scalable utilities for an automated assistant | |
US11189264B2 (en) | Speech recognition hypothesis generation according to previous occurrences of hypotheses terms and/or contextual data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
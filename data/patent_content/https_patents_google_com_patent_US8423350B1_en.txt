US8423350B1 - Segmenting text for searching - Google Patents
Segmenting text for searching Download PDFInfo
- Publication number
- US8423350B1 US8423350B1 US12/470,394 US47039409A US8423350B1 US 8423350 B1 US8423350 B1 US 8423350B1 US 47039409 A US47039409 A US 47039409A US 8423350 B1 US8423350 B1 US 8423350B1
- Authority
- US
- United States
- Prior art keywords
- specific
- unigram
- information
- grams
- data structure
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
Definitions
- This specification relates to segmenting text for searching.
- An n-gram is a sequence of n consecutive tokens, e.g., words or characters.
- An n-gram has an order, which is a number of tokens in the n-gram. For example, a 1-gram (or unigram) includes one token; a 2-gram (or bi-gram) includes two tokens.
- segment text for searching e.g., searching searchable resources, hereinafter also referred to as resources, including, for example, glossaries or dictionaries
- segment text for searching e.g., searching searchable resources, hereinafter also referred to as resources, including, for example, glossaries or dictionaries
- the lesser order n-grams are search candidates (e.g., queries) for the search.
- Lesser order n-grams are derived from the n-gram. For example, for an n-gram “abc” (a 3-gram including tokens, “a”, “b”, and “c”), the lesser order n-grams include: “a”, “b”, “c”, “ab”, and “bc”.
- each of the n-grams is used as a query to search for matches in the glossary, or in some implementations, to build an index in a glossary.
- Segmenting the n-grams using conventional techniques can be represented by an algorithm of order of n 2 time complexity, or O(n 2 ).
- Many of the typical segmentations consist of combinations of words (e.g., phrases) that are unlikely to be found in the glossary.
- “scientist says he will spill the” is a phrase that is unlikely to be found in a glossary or be useful as an entry in a glossary, whereas “spill the beans” is more likely to be found in a glossary or be useful as an entry in a glossary.
- the phrases “spill the beans” and “spilled the beans” should be associated with a same entry in a glossary, whereas the phrase “spill the bean” should not be associated with the same entry.
- conventional techniques may treat stems of a word as the same. For example, the stem of “spilled” is “spill”, and the stem of “beans” is “bean”.
- conventional techniques may process the phrase “spilled the beans” to produce the phrase “spill the bean”, by mapping “spilled” to “spill” and “beans” to “bean”.
- a mapping of “spilled the beans” to “spill the bean” would result in “spilled the beans” being associated with a glossary entry “spill the bean”, when they should not be associated.
- This specification describes technologies relating to searching.
- one aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving text; segmenting the text into one or more unigrams; filtering the one or more unigrams to identify one or more core unigrams; and generating a searchable resource, including: for each of the one or more core unigrams: identifying a stem, indexing the stem, and associating one or more second n-grams with the indexed stem, where each of the one or more second n-grams is derived from the text and includes a core unigram that is related to the indexed stem.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- a unigram includes a term.
- An n-gram includes a sequence of one or more terms.
- the method further includes associating content with the one or more second n-grams.
- the content includes an image, audio, video, text, or a document.
- another aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving text; segmenting the text into one or more unigrams; filtering the one or more unigrams to identify one or more core unigrams; for each of the one or more core unigrams: identifying a stem, searching an index to identify one or more second n-grams that are related to the stem, and comparing the one or more second n-grams to the text to identify a group of the one or more second n-grams that are included in the text; searching a resource for each n-gram in the group; and providing content associated with each of the n-grams found in the resource.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- the resource is a glossary.
- the resource is a dictionary.
- the content includes an image, audio, video, text, or a document.
- the method further includes removing duplicates of each of the one or more second n-grams before comparing the one or more second n-grams to the text.
- the method further includes stemming the text before comparing the one or more second n-grams to the text.
- Segmenting n-grams into one or more unigrams for searching can reduce a number of segmentations thereby: (i) increasing an efficiency of searching (e.g., from O(n 2 ) to O(n)); and (ii) increasing an efficiency of generating a resource (e.g., a glossary or dictionary) by reducing unlikely entry candidates.
- a resource e.g., a glossary or dictionary
- FIG. 1 is a block diagram illustrating an example model for an observed sequence of terms.
- FIG. 2 is a block diagram illustrating an example data structure that includes n-gram sets and related n-gram subsets.
- FIG. 3 is a block diagram illustrating an example n-gram element.
- FIG. 4 is a flow chart showing an example process for segmenting text for indexing.
- FIG. 5 is a flow chart showing another example process for segmenting text for searching.
- FIG. 6 is a schematic diagram of a generic computer system.
- FIG. 1 is a block diagram illustrating an example model for an observed sequence 100 of terms.
- the observed sequence 100 can be a sentence: “Alleged scientist says he will spill the beans.”
- the sentence includes stop-words, e.g., common unigrams that are not likely to have a corresponding entry in a glossary.
- the sentence is processed to remove the stop-words. For example, a list of stop-words can be used to identify and filter out the stop-words. The remaining unigrams can be used to generate an index or used to search an existing index of a resource (e.g., a glossary or a dictionary).
- a resource e.g., a glossary or a dictionary
- the example sentence includes the unigrams “alleged”, “scientist”, “says”, “he”, “will”, “spill”, “the”, and “beans”.
- the stop-words can be identified as the unigrams “says”, “he”, “will”, and “the” by using a stop list, for example.
- the identification can be made based on a relative frequency that a unigram occurs in training data. Typically, as the relative frequency of the unigram occurring in training data increases, a likelihood that the unigram is so common as not to be useful in a glossary or dictionary increases.
- the remaining unigrams “alleged”, “scientist”, “spill”, and “beans” can be identified as core n-grams because they are more likely to have corresponding entries in a resource (e.g., phrases in a glossary) than the stop-words. Because the unigrams that are identified as stop-words are less likely to be useful (e.g., found or searched for in a resource), they can be excluded from use in generating or searching an index of the resource.
- the resource can be implemented in various searchable data structures.
- FIG. 2 is a block diagram illustrating an example data structure 200 (e.g., one or more tables for a glossary or a dictionary) that includes n-gram sets 210 (e.g., term sets) and related n-gram subsets 212 and 222 (e.g., term subsets).
- the table is implemented as a Bigtable as described in further detail in Chang et al., Bigtable: A Distributed Storage System for Structured Data, 7 th USENIX Symposium on Operating Systems Design and Implementation (OSDI '06), Nov. 6-8 2006, Seattle, Wash., USENIX Association 2006, pp. 205-218.
- the data structure 200 can include multiple rows that are indexed by a row key.
- a row key can be a string of text generated and indexed by a hash technique, for example.
- Each row corresponds to an n-gram set (e.g., n-gram set 210 ).
- Each row includes one or more columns.
- Each column can include a protocol buffer that includes an n-gram subset that is associated with a single language.
- a protocol buffer is a language and platform neutral, extensible technique for serializing structured data (e.g., by encoding structured data according to Google's data interchange format, Protocol Buffers, as described in further detail in Google Code: Protocol Buffers , available at http://code.google.com/p/protobuf/).
- N-gram set 210 can include n-gram subsets that each include terms in a different language.
- n-gram set 210 includes an n-gram subset 212 that includes terms (e.g., n-grams) that are in English and n-gram subset 222 that includes terms that are in Hindi.
- each term in the n-gram subset 212 is a synonym of each of the other terms in the n-gram subset 212 , in a first language
- each term in the n-gram subset 222 is a synonym of each of the other terms in the n-gram subset 222 , in a second language, for example.
- the implementation described previously can be considered a three-level hierarchy, where the three levels are represented by n-gram sets (1) that include n-gram subsets (2), which further include n-gram elements (3).
- a two-level hierarchy is used.
- the data structure 200 can include two levels: an n-gram set (1), e.g., n-gram set 210 ; and n-gram elements (2), e.g., n-gram elements 214 and 224 .
- n-gram elements 214 and 224 can be associated with synonyms (e.g., “left” and “remaining”).
- Each n-gram element (e.g., n-gram element 214 , or n-gram element 224 ) can include information related to an n-gram, as described below.
- FIG. 3 is a block diagram illustrating an example n-gram element 300 (e.g., n-gram element 214 ).
- the n-gram element 300 can correspond to a glossary entry or a dictionary entry (e.g., for a term).
- the n-gram element 300 includes a term 310 (e.g., an n-gram), a stem 320 , grammar information 330 , language information 340 , description information 350 , and notes 360 .
- the term 310 is an n-gram that occurs in an observed sequence of terms (e.g., the observed sequence 100 ).
- the term 310 can be an n-gram “accounts”.
- the stem 320 is a stem that is related to the term 310 .
- the stem 320 can be the n-gram “account”.
- a stem of a phrase (or an n-gram with multiple words) can be an ordered sequence of stems of each of the individual words in the phrase.
- the grammar information 330 can be used to distinguish between different linguistic categories that the term 310 may belong to.
- “accounts” can be a noun or a verb.
- An n-gram set can be generated for each linguistic category that the term 310 belongs to.
- a first n-gram set can be associated with the noun “accounts”
- a second n-gram set can be associated with the verb “accounts”.
- POS part-of-speech
- the language information 340 can be used to indicate the language of the term 310 .
- a tag “en-US” can be used to indicate that a term “elevator” represents an English word as it is used in the United States.
- a tag “en-UK” can be used to indicate that a term “lift” (e.g., a synonym for “elevator”) represents an English word as it is used in the United Kingdom.
- the n-gram element 300 can also include description information 350 and notes 360 .
- the description information 350 can be any information that describes the term 310 .
- a user can provide the description information 350 .
- the notes 360 include any information that a user provides to be associated with the n-gram element 300 .
- the notes 360 can be indicative information that is used by a translator.
- An example of indicative information is a note to the translator stating that “‘account’ in English may be translated to ‘on account of’ in Grund (German) or ‘bank account’ in Konto (German)”.
- the n-gram element 300 also includes additional information 370 (or content).
- the type of the additional information 370 can depend on the resource that the data structure represents. For example, if the resource is a dictionary, the additional information 370 can include one or more definitions of the term 310 . As another example, if the resource is a glossary, the additional information 370 can include content that is related to the term 310 , e.g., images, audio, video, text, or documents.
- a second data structure (e.g., Bigtable) is used as an index for one or more first data structures (e.g., data structure 200 ).
- the second data structure can be used to “reverse map” a unigram (e.g., a term from an observed sequence of terms) to one or more row keys of one or more first data structures.
- the second data structure can be a table of cells that is indexed by unigrams in an n-gram.
- Each cell can include a protocol buffer that includes one or more row keys that identify n-gram elements in the one or more first data structures.
- each cell also includes scope information that defines the scope of a search (e.g., data hierarchies that should be searched).
- ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇ ⁇
- the first data structure and second data structure can be generated using information obtained from training data (e.g., text data), for example.
- the training data can include a sequence of one or more n-grams.
- FIG. 4 is a flow chart showing an example process 400 for segmenting text for indexing.
- the system receives 410 text.
- the system can receive one or more sources of text, e.g., one or more glossaries or parallel corpora.
- the system segments 420 the text into one or more unigrams.
- the system first segments the text (e.g., into n-grams) to be associated with n-gram sets. Then, for each n-gram set, the system segments the n-grams into one or more unigrams.
- the system can use statistical analysis (e.g., probabilities of the n-grams being words), dictionaries, or manual analysis to segment the text into one or more unigrams.
- the system filters 430 the one or more unigrams to identify one or more core unigrams.
- the system can use a stop list to filter out stop-words to identify the one or more core unigrams.
- the system generates 440 a searchable resource. For each of the one or more core unigrams, the system identifies a stem, indexes the stem, and associates one or more second n-grams with the indexed stem. For example, the system can identify the stem by using stemming techniques (e.g., brute force, suffix stripping, lemmatization, stochastic techniques). In addition, the system can use a hashing technique to index the stem. The system can derive each of the one or more second n-grams from the text. Each of the one or more second n-grams includes a core unigram that is related to the indexed stem. For example, the system generates a glossary or dictionary from the indexed stems and associated second n-grams.
- stemming techniques e.g., brute force, suffix stripping, lemmatization, stochastic techniques.
- the system can use a hashing technique to index the stem.
- the system can derive each of the one or more
- the system receives the sentence (an 8-gram), and as a further example, first segments the sentence to produce an n-gram “spill the beans”.
- the n-gram “spill the beans” is associated with a first n-gram set (e.g., n-gram set 210 ).
- “scientist” is associated with a second n-gram set.
- the system segments “spill the beans” into the unigrams “spill”, “the”, and “beans”. Then, the system filters out the stop-words, thereby removing “the”.
- the system identifies the stems of “spill” and “beans” as “spill” and “bean”, respectively.
- the system indexes “spill” and “bean”, and associates “spill the beans” with “spill” and “bean” in the index in the second data structure, for example.
- an index e.g., row key
- an associated row is generated for “spill the beans”.
- the information e.g., 310 - 370 ) in the n-gram subset is also populated.
- the term 310 is “spill the beans”
- the stem 320 is “spill the bean”
- the grammar information 330 is a tag that indicates an idiom
- the language information 340 is “en-US”.
- the first data structure and the second data structure can also be searched using information obtained from text data.
- the text data is similarly segmented into unigrams.
- FIG. 5 is a flow chart showing another example process 500 for segmenting text for searching.
- the system receives 510 text.
- the system can receive a source of text, e.g., a web page, or document, to be translated that includes the text.
- the system segments 520 the text into one or more unigrams.
- the system can use statistical analysis (e.g., probabilities of the n-grams being words), dictionaries, or manual analysis to segment the text into one or more unigrams.
- the system filters 530 the one or more unigrams to identify one or more core unigrams.
- the system can use a stop list to filter out stop-words to identify the one or more core unigrams.
- the system For each of the one or more core unigrams, the system identifies 540 a stem, searches an index to identify one or more second n-grams that are related to the stem, and compares the one or more second n-grams to the text to identify a group of the one or more second n-grams that are included in the text. For example, the system can identify the stem by using stemming techniques (e.g., brute force, suffix stripping, lemmatization, stochastic techniques).
- a second data structure is used as an index, as described previously. For a unigram (e.g., a term from an observed sequence of terms), duplicate row keys of one or more first data structures can be retrieved from the second data structure.
- Duplicates of a row key can be removed before identifying n-gram sets in the one or more first data structures, resulting in the identification of each n-gram set only once.
- the group of one or more second n-grams can include n-grams that are duplicates. Duplicate n-grams can be removed from the group of one or more second n-grams before comparing the unique second n-grams in the group to the text to determine if any of the unique second n-grams are included in the text.
- the system searches 550 a resource for each n-gram in the group, and provides 560 content associated with each of the n-grams found in the resource. For example, the system searches a glossary for each n-gram in the group, and provides images, audio, video, text, or documents associated with each of the n-grams found in the resource. Furthermore, information (e.g., translations) associated with any of the one or more second n-grams that are included in the text can be provided.
- information e.g., translations
- the system receives the sentence, and as a further example, segments the sentence into the unigrams “alleged”, “scientist”, “says”, “he”, “will”, “spill”, “the”, and “beans”. Then, the system filters out stop-words, thereby removing “says”, “he”, “will, and “the”. The system identifies the stems of “alleged”, “scientist”, “spill”, and “beans” as “allege”, “scientist”, “spill” and “bean”, respectively.
- the system searches an index and may identify “al privilege”; “scientist” and “prominent scientist”; “spill the beans” (for the stem “spill”); “bean” and “spill the beans” (for the stem “bean”).
- duplicate results of “spill the beans” can be identified by the system. For example, “spill the beans” can be associated with the stem “spill” and with the stem “bean”.
- the system removes a duplicate of “spill the beans”.
- the system compares “al privilege”, “scientist”, “prominent scientist”, “spill”, “bean” and “spill the beans” with the sentence and determines that “allege”, “scientist”, “spill”, “bean”, and “spill the beans” are included in the sentence.
- the system compares the identified n-grams to a stemmed sentence, e.g., a stemmed representation of the sentence. For example, the system can compare “al privilege”, “scientist”, “prominent scientist”, “spill”, “bean”, and “spill the bean” to the stemmed sentence “allitis scientist say he will spill the bean”.
- the system provides information (e.g., content including, for example, images, audio, video, text, or documents, stored in additional information 370 ) associated with entries for “al privilege”, “scientist”, “spill”, “bean”, and “spill the beans”.
- information e.g., content including, for example, images, audio, video, text, or documents, stored in additional information 370 .
- n-gram subsets (and related information) that are associated with the target language (e.g., stored in language information 340 ).
- the system can return n-gram subsets 222 that are associated with the target language (e.g., as indicated by language information included in n-gram element 224 ).
- Resources e.g., dictionaries and glossaries
- Generating resources from text data and searching the resources can be used in applications, including, for example, translating text from one language to another language (e.g., manual translation, machine translation), transliterating text from one writing system to another writing system, detecting plagiarism, and data mining (e.g., finding information including, for example, definitions, synonyms, images, and related documents).
- data mining e.g., finding information including, for example, definitions, synonyms, images, and related documents.
- FIG. 6 is a schematic diagram of a generic computer system 600 .
- the system 600 can be used for practicing operations described in association with the techniques described previously (e.g., processes 400 and 500 ).
- the system 600 can include a processor 610 , a memory 620 , a storage device 630 , and input/output devices 640 .
- Each of the components 610 , 620 , 630 , and 640 are interconnected using a system bus 650 .
- the processor 610 is capable of processing instructions for execution within the system 600 .
- Such executed instructions can implement one or more components of a system, for segmenting text for searching as in FIGS. 4 and 5 , for example.
- the processor 610 is a single-threaded processor.
- the processor 610 is a multi-threaded processor.
- the processor 610 is capable of processing instructions stored in the memory 620 or on the storage device 630 to display graphical information for a user interface on the input/output device 640 .
- the memory 620 is a computer readable medium including, for example, volatile or non-volatile that stores information within the system 600 .
- the memory 620 could store the data structure 200 , for example.
- the storage device 630 is capable of providing persistent storage for the system 600 .
- the storage device 630 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, or other suitable persistent storage means.
- the input/output device 640 provides input/output operations for the system 600 .
- the input/output device 640 includes a keyboard and/or pointing device.
- the input/output device 640 includes a display unit for displaying graphical user interfaces.
- the input/output device 640 can provide input/output operations for a system, for segmenting text for searching as in FIGS. 4 and 5 .
- the segmentation system can include computer software components to segment text for searching. Examples of such software components include a segmentation engine to segment first n-grams into one or more unigrams, a filtering engine to identify core unigrams, a stemming engine to identify stems of the core unigrams; an indexing engine to index the stems, a searching engine to search the index, and a comparison engine to associate second n-grams with indexed stems or compare the second n-grams to the first n-grams.
- Such software components can be persisted in storage device 630 , memory 620 or can be obtained over a network connection, to name a few examples.
- An electronic document (which for brevity was simply referred to as a document) does not necessarily correspond to a file.
- a document may be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a tangible program carrier for execution by, or to control the operation of, data processing apparatus.
- the tangible program carrier can be a computer-readable medium.
- the computer-readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/470,394 US8423350B1 (en) | 2009-05-21 | 2009-05-21 | Segmenting text for searching |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/470,394 US8423350B1 (en) | 2009-05-21 | 2009-05-21 | Segmenting text for searching |
Publications (1)
Publication Number | Publication Date |
---|---|
US8423350B1 true US8423350B1 (en) | 2013-04-16 |
Family
ID=48049230
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/470,394 Expired - Fee Related US8423350B1 (en) | 2009-05-21 | 2009-05-21 | Segmenting text for searching |
Country Status (1)
Country | Link |
---|---|
US (1) | US8423350B1 (en) |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140297252A1 (en) * | 2012-12-06 | 2014-10-02 | Raytheon Bbn Technologies Corp. | Active error detection and resolution for linguistic translation |
US20140309986A1 (en) * | 2013-04-11 | 2014-10-16 | Microsoft Corporation | Word breaker from cross-lingual phrase table |
US9128982B2 (en) * | 2010-12-23 | 2015-09-08 | Nhn Corporation | Search system and search method for recommending reduced query |
US20160127398A1 (en) * | 2014-10-30 | 2016-05-05 | The Johns Hopkins University | Apparatus and Method for Efficient Identification of Code Similarity |
WO2016077016A1 (en) * | 2014-11-10 | 2016-05-19 | Oracle International Corporation | Automatic generation of n-grams and concept relations from linguistic input data |
US9495357B1 (en) * | 2013-05-02 | 2016-11-15 | Athena Ann Smyros | Text extraction |
US20170011116A1 (en) * | 2015-07-07 | 2017-01-12 | Google Inc. | Generating elements of answer-seeking queries and elements of answers |
US20180011929A1 (en) * | 2016-07-08 | 2018-01-11 | Newvoicemedia, Ltd. | Concept-based search and categorization |
US10262061B2 (en) | 2015-05-19 | 2019-04-16 | Oracle International Corporation | Hierarchical data classification using frequency analysis |
US11861301B1 (en) * | 2023-03-02 | 2024-01-02 | The Boeing Company | Part sorting system |
Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4706212A (en) * | 1971-08-31 | 1987-11-10 | Toma Peter P | Method using a programmed digital computer system for translation between natural languages |
US5706496A (en) * | 1995-03-15 | 1998-01-06 | Matsushita Electric Industrial Co., Ltd. | Full-text search apparatus utilizing two-stage index file to achieve high speed and reliability of searching a text which is a continuous sequence of characters |
US5835888A (en) * | 1996-06-10 | 1998-11-10 | International Business Machines Corporation | Statistical language model for inflected languages |
US5937422A (en) * | 1997-04-15 | 1999-08-10 | The United States Of America As Represented By The National Security Agency | Automatically generating a topic description for text and searching and sorting text by topic using the same |
US5946648A (en) * | 1996-06-28 | 1999-08-31 | Microsoft Corporation | Identification of words in Japanese text by a computer system |
US6405161B1 (en) * | 1999-07-26 | 2002-06-11 | Arch Development Corporation | Method and apparatus for learning the morphology of a natural language |
US20040044952A1 (en) * | 2000-10-17 | 2004-03-04 | Jason Jiang | Information retrieval system |
US20050112577A1 (en) * | 2001-12-28 | 2005-05-26 | Yasuo Uemura | Rna sequence analyzer, and rna sequence analysis method, program and recording medium |
US20050143972A1 (en) * | 1999-03-17 | 2005-06-30 | Ponani Gopalakrishnan | System and methods for acoustic and language modeling for automatic speech recognition with large vocabularies |
US20090030862A1 (en) * | 2007-03-20 | 2009-01-29 | Gary King | System for estimating a distribution of message content categories in source data |
US20090043797A1 (en) * | 2007-07-27 | 2009-02-12 | Sparkip, Inc. | System And Methods For Clustering Large Database of Documents |
US20090157382A1 (en) * | 2005-08-31 | 2009-06-18 | Shmuel Bar | Decision-support expert system and methods for real-time exploitation of documents in non-english languages |
US20090193011A1 (en) * | 2008-01-25 | 2009-07-30 | Sasha Blair-Goldensohn | Phrase Based Snippet Generation |
US20100076745A1 (en) * | 2005-07-15 | 2010-03-25 | Hiromi Oda | Apparatus and Method of Detecting Community-Specific Expression |
US20100198857A1 (en) * | 2009-02-04 | 2010-08-05 | Yahoo! Inc. | Rare query expansion by web feature matching |
US7792840B2 (en) * | 2005-08-26 | 2010-09-07 | Korea Advanced Institute Of Science And Technology | Two-level n-gram index structure and methods of index building, query processing and index derivation |
US7925498B1 (en) * | 2006-12-29 | 2011-04-12 | Google Inc. | Identifying a synonym with N-gram agreement for a query phrase |
US8255948B1 (en) * | 2008-04-23 | 2012-08-28 | Google Inc. | Demographic classifiers from media content |
-
2009
- 2009-05-21 US US12/470,394 patent/US8423350B1/en not_active Expired - Fee Related
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4706212A (en) * | 1971-08-31 | 1987-11-10 | Toma Peter P | Method using a programmed digital computer system for translation between natural languages |
US5706496A (en) * | 1995-03-15 | 1998-01-06 | Matsushita Electric Industrial Co., Ltd. | Full-text search apparatus utilizing two-stage index file to achieve high speed and reliability of searching a text which is a continuous sequence of characters |
US5835888A (en) * | 1996-06-10 | 1998-11-10 | International Business Machines Corporation | Statistical language model for inflected languages |
US5946648A (en) * | 1996-06-28 | 1999-08-31 | Microsoft Corporation | Identification of words in Japanese text by a computer system |
US5937422A (en) * | 1997-04-15 | 1999-08-10 | The United States Of America As Represented By The National Security Agency | Automatically generating a topic description for text and searching and sorting text by topic using the same |
US20050143972A1 (en) * | 1999-03-17 | 2005-06-30 | Ponani Gopalakrishnan | System and methods for acoustic and language modeling for automatic speech recognition with large vocabularies |
US6928404B1 (en) * | 1999-03-17 | 2005-08-09 | International Business Machines Corporation | System and methods for acoustic and language modeling for automatic speech recognition with large vocabularies |
US6405161B1 (en) * | 1999-07-26 | 2002-06-11 | Arch Development Corporation | Method and apparatus for learning the morphology of a natural language |
US20040044952A1 (en) * | 2000-10-17 | 2004-03-04 | Jason Jiang | Information retrieval system |
US20050112577A1 (en) * | 2001-12-28 | 2005-05-26 | Yasuo Uemura | Rna sequence analyzer, and rna sequence analysis method, program and recording medium |
US20100076745A1 (en) * | 2005-07-15 | 2010-03-25 | Hiromi Oda | Apparatus and Method of Detecting Community-Specific Expression |
US7792840B2 (en) * | 2005-08-26 | 2010-09-07 | Korea Advanced Institute Of Science And Technology | Two-level n-gram index structure and methods of index building, query processing and index derivation |
US20090157382A1 (en) * | 2005-08-31 | 2009-06-18 | Shmuel Bar | Decision-support expert system and methods for real-time exploitation of documents in non-english languages |
US7925498B1 (en) * | 2006-12-29 | 2011-04-12 | Google Inc. | Identifying a synonym with N-gram agreement for a query phrase |
US20090030862A1 (en) * | 2007-03-20 | 2009-01-29 | Gary King | System for estimating a distribution of message content categories in source data |
US20090043797A1 (en) * | 2007-07-27 | 2009-02-12 | Sparkip, Inc. | System And Methods For Clustering Large Database of Documents |
US20090193011A1 (en) * | 2008-01-25 | 2009-07-30 | Sasha Blair-Goldensohn | Phrase Based Snippet Generation |
US8255948B1 (en) * | 2008-04-23 | 2012-08-28 | Google Inc. | Demographic classifiers from media content |
US20100198857A1 (en) * | 2009-02-04 | 2010-08-05 | Yahoo! Inc. | Rare query expansion by web feature matching |
Cited By (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9128982B2 (en) * | 2010-12-23 | 2015-09-08 | Nhn Corporation | Search system and search method for recommending reduced query |
US9710463B2 (en) * | 2012-12-06 | 2017-07-18 | Raytheon Bbn Technologies Corp. | Active error detection and resolution for linguistic translation |
US20140297252A1 (en) * | 2012-12-06 | 2014-10-02 | Raytheon Bbn Technologies Corp. | Active error detection and resolution for linguistic translation |
US20140309986A1 (en) * | 2013-04-11 | 2014-10-16 | Microsoft Corporation | Word breaker from cross-lingual phrase table |
US9330087B2 (en) * | 2013-04-11 | 2016-05-03 | Microsoft Technology Licensing, Llc | Word breaker from cross-lingual phrase table |
US9495357B1 (en) * | 2013-05-02 | 2016-11-15 | Athena Ann Smyros | Text extraction |
US9772991B2 (en) | 2013-05-02 | 2017-09-26 | Intelligent Language, LLC | Text extraction |
US20160127398A1 (en) * | 2014-10-30 | 2016-05-05 | The Johns Hopkins University | Apparatus and Method for Efficient Identification of Code Similarity |
US10152518B2 (en) | 2014-10-30 | 2018-12-11 | The Johns Hopkins University | Apparatus and method for efficient identification of code similarity |
US9805099B2 (en) * | 2014-10-30 | 2017-10-31 | The Johns Hopkins University | Apparatus and method for efficient identification of code similarity |
WO2016077016A1 (en) * | 2014-11-10 | 2016-05-19 | Oracle International Corporation | Automatic generation of n-grams and concept relations from linguistic input data |
CN107077466A (en) * | 2014-11-10 | 2017-08-18 | 甲骨文国际公司 | The lemma mapping of general ontology in Computer Natural Language Processing |
US9678946B2 (en) | 2014-11-10 | 2017-06-13 | Oracle International Corporation | Automatic generation of N-grams and concept relations from linguistic input data |
US9582493B2 (en) | 2014-11-10 | 2017-02-28 | Oracle International Corporation | Lemma mapping to universal ontologies in computer natural language processing |
US9842102B2 (en) | 2014-11-10 | 2017-12-12 | Oracle International Corporation | Automatic ontology generation for natural-language processing applications |
CN107077466B (en) * | 2014-11-10 | 2019-06-21 | 甲骨文国际公司 | The lemma mapping of general ontology in Computer Natural Language Processing |
US10262061B2 (en) | 2015-05-19 | 2019-04-16 | Oracle International Corporation | Hierarchical data classification using frequency analysis |
US20170011116A1 (en) * | 2015-07-07 | 2017-01-12 | Google Inc. | Generating elements of answer-seeking queries and elements of answers |
US10592540B2 (en) * | 2015-07-07 | 2020-03-17 | Google Llc | Generating elements of answer-seeking queries and elements of answers |
US20180011929A1 (en) * | 2016-07-08 | 2018-01-11 | Newvoicemedia, Ltd. | Concept-based search and categorization |
EP3482304A4 (en) * | 2016-07-08 | 2020-03-11 | Newvoicemedia US Inc. | Concept-based search and categorization |
US11861301B1 (en) * | 2023-03-02 | 2024-01-02 | The Boeing Company | Part sorting system |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8423350B1 (en) | Segmenting text for searching | |
US8706474B2 (en) | Translation of entity names based on source document publication date, and frequency and co-occurrence of the entity names | |
US8972432B2 (en) | Machine translation using information retrieval | |
US10002123B2 (en) | Named entity extraction from a block of text | |
US8731901B2 (en) | Context aware back-transliteration and translation of names and common phrases using web resources | |
US8521516B2 (en) | Linguistic key normalization | |
US8527522B2 (en) | Confidence links between name entities in disparate documents | |
RU2592395C2 (en) | Resolution semantic ambiguity by statistical analysis | |
RU2579699C2 (en) | Resolution of semantic ambiguity using language-independent semantic structure | |
US8280721B2 (en) | Efficiently representing word sense probabilities | |
US10579733B2 (en) | Identifying codemixed text | |
JP2010531492A (en) | Word probability determination | |
US20100153396A1 (en) | Name indexing for name matching systems | |
RU2579873C2 (en) | Resolution of semantic ambiguity using semantic classifier | |
KR20150017507A (en) | Method and system for Context-sensitive Spelling Correction Rules using Korean WordNet | |
Küçük | Automatic compilation of language resources for named entity recognition in Turkish by utilizing Wikipedia article titles | |
Vilares et al. | Managing misspelled queries in IR applications | |
US9965546B2 (en) | Fast substring fulltext search | |
Pouliquen et al. | Automatic construction of multilingual name dictionaries | |
Ganjisaffar et al. | qspell: Spelling correction of web search queries using ranking models and iterative correction | |
Randhawa et al. | Study of spell checking techniques and available spell checkers in regional languages: a survey | |
Nasharuddin et al. | Cross-lingual information retrieval | |
Purev et al. | Language resources for Mongolian | |
Wang et al. | Web-based pattern learning for named entity translation in Korean–Chinese cross-language information retrieval | |
Zitouni et al. | Cross-language information propagation for arabic mention detection |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHANDRA, SUNIL;CHOPRA, HARSHIT;SHANMUGAM, SIDDAARTH;REEL/FRAME:022882/0118Effective date: 20090521 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20210416 |
US20180357487A1 - Media contextual information for a displayed resource - Google Patents
Media contextual information for a displayed resource Download PDFInfo
- Publication number
- US20180357487A1 US20180357487A1 US15/621,211 US201715621211A US2018357487A1 US 20180357487 A1 US20180357487 A1 US 20180357487A1 US 201715621211 A US201715621211 A US 201715621211A US 2018357487 A1 US2018357487 A1 US 2018357487A1
- Authority
- US
- United States
- Prior art keywords
- media data
- user device
- buffered media
- data
- buffered
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000012545 processing Methods 0.000 claims abstract description 102
- 238000000034 method Methods 0.000 claims abstract description 59
- 239000000872 buffer Substances 0.000 claims abstract description 28
- 230000004044 response Effects 0.000 claims abstract description 14
- 230000008569 process Effects 0.000 claims description 30
- 230000008859 change Effects 0.000 claims description 18
- 238000004891 communication Methods 0.000 claims description 7
- 230000003190 augmentative effect Effects 0.000 claims description 3
- 238000001514 detection method Methods 0.000 claims description 3
- 238000005070 sampling Methods 0.000 claims 1
- 238000004590 computer program Methods 0.000 abstract description 13
- 230000003993 interaction Effects 0.000 description 9
- 230000009471 action Effects 0.000 description 7
- 230000003139 buffering effect Effects 0.000 description 7
- 238000010586 diagram Methods 0.000 description 6
- 238000012015 optical character recognition Methods 0.000 description 5
- 230000008901 benefit Effects 0.000 description 4
- 238000004422 calculation algorithm Methods 0.000 description 4
- 238000003825 pressing Methods 0.000 description 4
- 230000002035 prolonged effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000001755 vocal effect Effects 0.000 description 3
- 230000001419 dependent effect Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 230000000737 periodic effect Effects 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000026676 system process Effects 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 238000003708 edge detection Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 238000010079 rubber tapping Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000000699 topical effect Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 238000010792 warming Methods 0.000 description 1
Images
Classifications
-
- G06K9/00751—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/783—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/432—Query formulation
- G06F16/434—Query formulation using image data, e.g. images, photos, pictures taken by a user
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/60—Information retrieval; Database structures therefor; File system structures therefor of audio data
- G06F16/68—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/683—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G06F17/30047—
-
- G06F17/30864—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/768—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using context analysis, e.g. recognition aided by known co-occurring patterns
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/46—Extracting features or characteristics from the video content, e.g. video fingerprints, representative shots or key frames
- G06V20/47—Detecting features for summarising video content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/70—Labelling scene content, e.g. deriving syntactic or semantic representations
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/45—Management operations performed by the client for facilitating the reception of or the interaction with the content or administrating data related to the end-user or to the client device itself, e.g. learning user preferences for recommending movies, resolving scheduling conflicts
- H04N21/462—Content or additional data management, e.g. creating a master electronic program guide from data received from the Internet and a Head-end, controlling the complexity of a video stream by scaling the resolution or bit-rate based on the client capabilities
- H04N21/4622—Retrieving content or additional data from different sources, e.g. from a broadcast channel and the Internet
Definitions
- User devices now provide access to a wide variety of information. For example, digital image files, video and/or audio files, as well as resources for particular subjects or particular news articles, are accessible over the Internet. This information may be viewed in web browsers running on a user device and native applications running on a user device. Search engines crawl and index these resources to facilitate searching of the resources. Thus, for just about any subject in which a user may be interested, there is a large amount of information that is readily available to the user.
- Many user devices are now also being used to consume streaming content, such as “on demand” video. For example, many users now watch television programs and other videos primarily by use of mobile devices or laptop computer and tablets. Additionally, many televisions that are now available have “smart” capabilities that enable the televisions to be used as web browsers and to run native applications that present content from particular content providers.
- a user may desire information related to content that a user is viewing on a user device. Such information in this application is referred to as “contextual information,” as the information desired by the user is in the context of the active web page or media.
- Some user devices can provide an image of content that is displayed in an active window of a user device.
- a search system processes the image to identify entities and concepts and performs a search for those entities and concepts, and then provides one or more search results to the user device.
- This specification describes technologies relating to media contextual information responsive to a portion of buffered media that encompasses at least a buffered time period.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of storing in a buffer, on a first user device, media data as buffered media data, the buffered media data being a most recent portion of media data received at the first user device, the most recent portion inclusive of the media data received from a present time to a prior time that is fixed relative to the present time; responsive to a search operation invocation at the present time, sending the buffered media data to a search processing system that is remote from the first user device; and receiving, from the search processing system and in response to the buffered media data, contextual information regarding an entity that the data processing system identified from processing the buffered media data.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Contextual information about media consumed by a user on a user device can be determined from buffered media data and presented to the user. This enables a user to receive additional information about the consumed media.
- the contextual information provided using the buffered media data can be query-independent, which eliminates a user's need to seek information using a search query that expresses the user's specific informational need. Instead, the user's informational need is expressed by the content of the buffered media data. Accordingly, when considered in the aggregate, thousands of erroneous and inaccurate queries are avoided, which, in turn, provides a more efficient use of search system resources. In other words, multiple erroneous query processing cycles are avoided, which reduces processing resources required and reduces overall system bandwidth requirements (or, alternatively, enables a larger number of users to be serviced without a commensurate increase in processing resources). This improvement in the technological field of search processing is thus another distinct advantage realized by the systems and methods described below.
- the contextual information from buffered media data can be augmented with a user's search query, e.g., by a voice command such as “Show me what other movies he was in.”
- a voice command such as “Show me what other movies he was in.”
- server-side query resources e.g., querying processing and bandwidth
- the search system can use the contextual content of the buffered media data to refine the search query.
- This also improves the technological field of search processing and information provided to the user, and is thus another distinct advantage realized by the systems and methods described below.
- the buffered content when the buffered content is video content, the buffered content may be a series of individual frames that each requires a threshold change in content from a prior video frame.
- Such buffering results in a smaller set of video data that is transmitted than if the buffering stored every frame of video.
- the information loss due to not storing each video frame is reduced. This also improves the technological field of search processing and information provided to the user, as the buffered data that is sent is relative compact, which conserves bandwidth, but does not suffer from a concomitant information loss, which reduces the impact on information gain from the data.
- FIGS. 1A and 1B are block diagrams of example environments in which contextual information about buffered media is provided.
- FIG. 2 is a flow diagram of an example process for providing buffered media data to receive contextual information.
- FIG. 3 is a block diagram of an example search processing system that processes a buffered media data request.
- FIG. 4 is a flow diagram of an example process for providing contextual information based on buffered media data.
- a user may desire information related to content that a user is viewing on a user device. Such information in this application is referred to as “contextual information,” as the information desired by the user is in the context of the active web page or media.
- Some user devices can provide an image of content that is displayed in an active window of a user device.
- a search system processes the image to identify entities and concepts and performs a search for those entities and concepts, and then provides one or more search results to the user device.
- a most recent frame of video does not always accurately express the user's informational need. For example, a user may be watching a basketball game, and desire information about a particular player shooting a free throw.
- the image may not accurately depict the interest of the user, i.e., the player that is shooting the free throw.
- audio data such as a song
- a screen shot or image of an active window is even less likely to accurately convey the user's informational need.
- a user device implementing the systems and methods described below enables determining contextual information from buffered media data for content consumed at a user device.
- the buffered media data is stored in a buffer on the user device.
- this buffered media data includes media for a predefined amount of time for the most recently consumed content at the user device. This predefined amount of time is also referred to as a “buffered time period.”
- the buffered time period is inclusive of a time period that provides for multiple frames of video and/or multiple audio samples for audio data.
- the buffered media data may include the last 5-10 seconds of previously consumed media.
- the buffered media data can be for media data consumed from two or more active applications running on a user device.
- the media data for each of the multiple applications is stored in a buffer as separate respective instances of buffered media data.
- the application for which the user device has a primary focus is determined, and the only the buffered media data for the executing application for which the user device has a primary focus is selected and sent to the search processing system.
- the user device Responsive to a search operation invocation at a present time, the user device sends the buffered media data to a search processing system.
- the invocation of the search operation can be the result from different types of user interaction models.
- One interaction model requires a non-textual user input, such as the prolonged pressing of an input button.
- Another interaction model requires a textual user input, such as the typing in or speaking of a query. Search operation invocation is described in more detail below.
- Contextual information regarding an entity or entities that the data processing system identified from processing the buffered media data is then provided to the user device in response.
- the data may be provided in a variety of ways, and the way the results or results are presented may depend on the query. For example, if the query issues an informational query, e.g., “Tell me about that player shooting the free throw,” then the data may be a list of search results. Conversely, if the query has a dominant intent, e.g., a query about a particular characteristic of a particular person, e.g., “Show me the shooter's free throw percentage and other stats for the season,” then the results may be presented as a single response, or in the form of a contextual card.
- an informational query e.g., “Tell me about that player shooting the free throw”
- the results may be presented as a single response, or in the form of a contextual card.
- the user can consume media on one device and receive contextual information on a second device that is different from the first.
- a user may consume media on a television and receive the contextual information on a mobile device (e.g., tablet, mobile phone, etc.).
- a mobile device e.g., tablet, mobile phone, etc.
- FIGS. 1A and 1B are block diagrams of example environments in which contextual information about buffered media is provided.
- FIG. 1A depicts requesting contextual information and receiving a contextual information card during presentation of media
- FIG. 1B depicts presenting media on a first user device and presenting the contextual information card on a second different user device.
- a user device 110 is used to obtain contextual information for media consumed at the user device 110 .
- the user device 110 is an electronic device that is capable of requesting and receiving resources over a network.
- Example user devices 110 include mobile communication devices (e.g., smart phones, tablets, laptop computers, etc.), and other computing or computer devices (e.g., televisions, desktops, etc.) that can send and receive data over a network, such as the Internet.
- the user device 110 can display information, such as web resources. These may include HTML pages, electronic documents, images files, video files, audio files, text message conversations, e-mails, graphical user interfaces of applications, etc.
- the user device 110 can present media 114 using an application 112 .
- Media 114 is images, video, audio, text, or some combination of the like that a user consumes using an application running on a user device 110 .
- the media 114 may be a professional basketball game presented at the user device using an application 112 from a sports broadcasting provider.
- the application 112 can include native applications and/or browser-based applications.
- a native application generates environment instances for display on a user device within an environment of the native application, and operates independent of a browser application on the user device.
- a native application is an application specifically designed to run on a particular user device operating system and machine firmware. Native applications thus differ from browser-based applications and browser-rendered resources. The latter require all, or at least some, elements or instructions downloaded from a web server each time they are instantiated or rendered.
- browser-based applications and browser-rendered resources can be processed by all web capable user devices within the browser and thus are not operating system specific.
- the user device 110 by use of a buffering process 101 , stores buffered media data 121 in a buffer 120 .
- the buffered media data 121 is visually depicted as a most recent frame of video of multiple video frames stored in the buffer 120 .
- the buffered media data 121 is a most recent portion of streaming media data received at the first user device.
- the most recent portion inclusive of the streaming media data received from a present time to a prior time that is fixed relative to the present time and includes multiple frames of video or multiple samples of audio data.
- the buffered media data 121 may include the last 5, 10, 15, or 20 seconds of previously consumed media.
- the user device 110 is presenting media 114 , and the user has invoked a search operation and sent a buffered media request 118 to the search processing system 122 .
- a search operation can be invoked a number of different ways, and will be described in more detail below.
- the search processing system 122 process the buffered media data 121 that is sent with the buffered media request 118 , and provides contextual information 124 in response.
- the contextual information is provided in the form of a contextual card 124 user interface element.
- other user interface elements may be used, for example, chat bubbles, selectable linked notes or footnotes, etc.
- the contextual information card 124 may include contextual information about the media 114 presented by the application 112 , such as images, text, audio, and video, and one or more commands 126 .
- the commands 126 can include a search command that may invoke a separate search in a search user interface, a reviews command that may retrieve reviews of the media, and a share command, which may generate a screen shot of the application 112 and a URI of the environment instance and send the screen shot and the URI to another user device.
- the commands 126 can include a questions command that may provide additional questions a user can ask about the contextual information or the topicality of the contextual information.
- the user device 110 invokes a separate search query or request seeking results or answers for the additional question.
- the user device 110 will receive the answer to the separate search query, as either an additional contextual card, a different user interface, etc.
- the contextual card 124 is but one example of how contextual information may be provided. Other ways of providing contextual information include search results that link to resources, an answer if the buffered media request 118 , along with query terms input by the user, is interpreted as a question, and the like.
- FIG. 1A shows the contextual information being presented on the user device 110 .
- contextual information can be presented on a device that is separate from a device that is displaying the media data.
- FIG. 1B is a figure that depicts presenting media on a first user device 160 -A and presenting the contextual information on a second different user device 160 -B.
- the user device 160 -B is executing an application that controls the displaying of media on the user device 160 -A.
- the application may be a TV application that allows the user, by use of the user device 160 -B, to select content and change channels for the user device 160 -A.
- the user device 160 -B may also execute a buffering process 101 as described with reference to FIG. 1A .
- the user device 106 -A may execute the buffering process and store the buffered media data, as indicated by the phantom process 101 on the user device 160 -A.
- the user device 160 -B which may be, for example, a mobile device or tablet computer, may be used to invoke a search operation in the same manner as described with reference to FIG. 1A , and as will be described in more detail below.
- the buffered media request 118 is sent to the search processing system 122 (either from the user device 160 -B, if the user device 160 -B is storing the buffered media data, or from the device 160 -A, if the device 160 -A is storing the buffered media data).
- the search processing system 122 receives the buffered media request 118 and data indicating results are to be sent to the user device 160 -B.
- the search processing system 122 then provides the contextual information to the user device 160 -B.
- the search operation may be invoked by use of the user device 160 -B, but the contextual information may be displayed on the user device 160 -A.
- the user device 160 -B may be used to invoke a buffered media request by one of the persons and the results may be displayed on the device 160 -A for all persons to see.
- the buffered media data is a most recent portion of streaming media data received at the first user device.
- the most recent portion of the media data is inclusive of the media data received from a present time to a prior time that is fixed relative to the present time. For example, if the prior time is 20 seconds, then the buffered media data is for the last 5 seconds of presented media. In some implementations, more the buffered media data may be for a longer period of time than what is sent in a buffered media request.
- the buffered media data may store data for up to 30 seconds, but only send buffered media data that corresponds to only the last five seconds of data. Should the user indicate dissatisfaction with the contextual information provided, then the user device may send additional buffered media data in a next request, e.g., for the last 20 seconds.
- the user device 110 can buffer media data 121 from multiple active applications.
- An active application is an application running on the user device 110 that a user is engaging with. For example, if a user is listening to music using a media application and viewing a video weather report using a weather application or using a web browser, the user device receives buffered media data 121 from the media application 112 and the weather application/web browser.
- the media data for each of the multiple applications is stored in a buffer as separate respective instances of buffered media data.
- the application for which the user device has a primary focus is determined, and only the buffered media data for the executing application for which the user device has a primary focus is selected and sent to the search processing system.
- the primary focus is determined by an active window. For example, if a user is watching the weather video and the audio player window is in the background while presenting a song, the application showing the weather video is determined to have the primary focus.
- the primary focus may be determined, in part, by the query terms. For example, assume the user is watching the weather video and the audio player window is in the background. The user utters the query “Assistant, who is the lead singer?” Using semantic rules, the user device will determine that the dominant intent of the verbal input to media being presented. In this example, the dominant intent based on the query terms “lead singer,” relates higher to the song than to the weather video, and thus the system will select buffered media data of the song for processing.
- the user device 110 samples a media frame from the received media data according to an interval number of video frames. This is done to conserve space when buffering video media data. For example, the user device may only sample every nth frame of the media data, where N can include any number, for example, every second frame, fifth frame, tenth frame, etc.
- the user device 110 stores each sampled media frame in the buffer.
- the user device 110 stores samples media frames to reduce the amount of buffered media data 121 stored in the buffer for each active application. This enables the buffer to capture the same amount of media using less data.
- the user device 110 stores media frames based on a threshold change of content between adjacent media frames.
- the user device 110 determines, for each media frame, whether the media frame has a threshold change in content from a previously received media frame.
- the threshold change in content can be based on a totality of change in the content presented in the adjacent frames, a change in the dominate content presented in the adjacent frames, or a combination thereof. Any appropriate image processing technique can be used to determine a measure of change between video frames.
- the threshold change in content can be based on similarity scores of content presented in the media frame. A similarity score indicates how similar the content in a particular frame is to the content in a prior frame.
- Edge detection, scale invariant transform processing, and color distribution are example processing techniques that can be performed on each frame and the results compared to determine the similarity of content between the frames. For example, and continuing with the basketball example, if a first frame presented and stored includes the particular player shooting a free-throw shot and the next frame presented is a frame that includes sports announcers, the user device will detect, by use of the image processing techniques, a threshold change of content from the particular player to the sports announcers. In this instance, the user device 110 stores the sports announcer frame, because a threshold change in content occurred.
- the buffer erases the buffer media data, each time the buffered media data is sent to the search processing system 122 .
- the user device sends a portion of the buffered media data stored in the buffer, but does not erase the portion of buffered media data that is sent to search processing system 122 .
- the buffer stores a predefined amount of time and erases buffered media data according to a first in first out data storage scheme.
- the user device Responsive to a search operation invocation at a present time, the user device sends the buffered media data to a search processing system.
- the invocation of the search operation can be the result from different types of user interaction models.
- One interaction model requires a non-textual user input, such as the prolonged pressing of an input button.
- the user device When such an action is detected, the user device generates a query-independent search request that sends the buffered media data to the search system for processing.
- the request is “query-independent” the request does not include a query that includes terms that were directly input by the user.
- the user device 110 When the user device 110 invokes a search operation without verbal or textual input from the user, the user device 110 sends the buffered media request 118 to the search processing system 122 as a query-independent request.
- the query-independent request 118 includes the buffered media data 121 and does not include query terms input by the user. However, the buffered media request 118 may include other data even if it is query independent, such as a URI for the source of the buffered media, the application presenting the media data, and the like.
- the user device 110 may be presenting some media 114 in an application 112 .
- the media 114 includes, for example, some video that may include graphics 115 and text 116 .
- the user may generate an indication for contextual information, e.g., by pressing a button 111 , e.g., a “home” button, for three seconds (i.e., long press) or tapping the screen according to a predefined tap pattern, etc.
- the user device sends a buffered media request 118 as a query-dependent request to the search processing system 122 .
- the buffered media 121 the request may also include information about the media application, the URI of the source of the received media, and other information that are not query terms input by the user.
- the user device 110 can provide buffered media data to the search process system 122 periodically.
- the user device 110 pursuant to a user selection to send the buffered media data periodically, may send a query-independent request to the search processing system 122 every N seconds, e.g., where N is every 10, 20 or 30 seconds.
- the search processing system 122 determines contextual information for the particular portion of received buffered media data 121 and sends the determined contextual information to the user device 110 .
- the user device 110 receives contextual information about the buffered media data stored in the buffer iteratively and according to a set period of time.
- Periodic updates of information may be useful when watching sporting events, for example.
- a user may be provided with updated statistics that are relevant to what has been previously displayed. For example, during a basketball game, when a player is shooting a free throw, statistics specific to the player may be presented. However, when the video depicts all the players of both teams, then statics regarding each team and the game history between the teams may be presented.
- the user device sends a query-independent request to the search processing system 122 based on a threshold change in content presented in the media.
- the threshold change can be done in the same manner as described above. Once a threshold change in content is detected, the user device generates a query-independent request for contextual information and sends the request to the search processing system 122 .
- Another interaction model is a user input that includes search terms and that includes a signal to include the buffered media data, either by typing in a query or speaking a query using an assistant process or voice recognition process.
- a signal may also require that the query be ambiguous, or the query specify the media data. For example, assume a query uttered to an assistant and is ambiguous, e.g., “What is his free throw percentage for the season?”
- the user device using a semantic model, will determine the pronoun “his” does not include an antecedent, and thus will include the buffered media data with the query.
- the user device will determine that the noun “song” and the verb “listening” in the phrase means the query refers to the song currently being presented by the user device, and may send the query and the buffered media to the search system.
- the query uttered to the assistant refers to the buffered media, e.g., “Tell me more about the lead singer of the song I'm listening to”
- the user device will determine that the noun “song” and the verb “listening” in the phrase means the query refers to the song currently being presented by the user device, and may send the query and the buffered media to the search system.
- the assistant process will not provide the buffered media with the query. This is because a well formed query that is not ambiguous and that is not determined to refer to the buffered media is interpreted by the user device, by use of semantic processing, as complete expression of the user's informational need.
- FIG. 2 is a flow diagram of an example process 200 for providing buffered media data to receive contextual information.
- the process 200 is implemented in a user device.
- the buffered media data is a most recent portion of streaming media data presented at the user device, and is inclusive of the media data presented from a present time to a prior time that is fixed relative to the present time.
- the user device stores buffered media data in a buffer ( 210 )
- the user device may be executing a buffering process 101 that buffers media data, such as streaming audio and video media, or audio and video media that is being played from a stored recording on the user device, in a memory buffer on the user device.
- the user device responsive to search operation invocation, sends the buffered media data to a search processing system ( 220 ).
- the data processing system is distinct from the first user device 160 -A and the second user device 160 -B.
- the data processing system 122 determines contextual information of the buffered media data 121 .
- the search operation invocations may be done as described above, e.g., by a long press of a button; by an assistant process receiving a voice input; by a user inputting a text query; or by a periodic process that automatically sends the buffered media data to the search processing system.
- the buffered media data may be sent as query-independent request, or with a query, as described above.
- the user device receives contextual information responsive to the buffered media data ( 230 ).
- the contextual information may be in the form of search results, a contextual card, an answer, or any other form that the search system determines is appropriate for the buffered media data request.
- the user device may then display the information to one or more users.
- FIG. 3 An example search processing system is shown in FIG. 3 , and FIG. 4 describes an example process for providing contextual information in response to a buffered media data request.
- the data processing system 122 includes an entity identification engine 320 , a ranking engine 330 , a search engine 340 , and a search engine front end 350 .
- the search processing system 122 can process the buffered media data in a variety of ways. For example, video media can be processed for audio recognition, object recognition, person recognition and character recognition. Based on the results, the search system can form a query to search one or more corpora. Additionally, if a query is received with the buffered media request, then the query can be augmented with the results.
- voice and speech recognition can be used, as well as audio track matching, to identify songs, speeches and other relevant information to which the audio data pertains.
- the search engine based on the audio processing results, can form a query to search one or more corpora.
- One example search processing system 122 is described with reference to FIG. 3 .
- the process 400 of FIG. 4 can be implemented in the search processing system, and operation of the search processing system is described with reference to FIG. 4 .
- the search processing system 122 receives the buffered media data ( 410 ). For example, the search processing system 122 receives the buffered media data request 118 to provide contextual information responsive to the buffered media request.
- the entity identification engine 320 performs content detection on the buffered media data to identify entities ( 420 ).
- An entity may be one or more topical items of content within the media.
- the text, sound, graphics and video may relate to particular persons, places, things or concepts.
- the entities can include the particular player, the game of basketball, the player's team, the opposing team, the National Basketball Association, and the like.
- the entity identification engine 320 processes the audio portions and video portions (if any) of the buffered media.
- the image portions are a frame of a video image.
- the entity identification engine 320 maintains the positional integrity of the sound and the accompanying frames of the video technology. Thus, a mapping of sound to video frame is created for analyzing the media.
- the entity identification engine 320 uses optical character recognition (OCR) to identify entities within the image portions of the buffered media data.
- OCR optical character recognition
- a variety of OCR algorithms can be used to identify the entities.
- the OCR algorithms derive text and graphics from the buffered media data.
- the entity identification engine 320 analyzes each frame to determine which entities are present in each frame.
- the OCR algorithms use the derived text and object recognition to give each entity a label.
- the label is a naming convention for the entity.
- the entity identification engine 320 can, in some implementations, determine the position of each entity relative to other entities included in the frame, and the amount of the display that each entity occupies. For example, assume a presented frame includes a torso and head shot of particular player shooting a free-throw shot and also includes a shot of another player standing behind the particular player. Also assume the head and torso of the particular player take up 50% of the display area, and the image of the other player takes up 10% of the display area. The entity identification engine 320 can generate proportionality scores for the particular player and the other player, which are dependent on the amount of display area an object occupies. Here, the proportionality score will be higher for the particular player than for the other player. This score can be used by the ranking engine 330 to rank the entities.
- the entity identification engine 320 can, in some implementations, determine the time of each entity relative to other entities included in the buffered media data and/or the amount of overall time that each entity is displayed. For example, for a five second portion of buffered video, assume that from seconds five to four (measured in the past from the present time), sports announcers are shown; then from seconds four to the present time, the particular basketball player is shown. The particular basketball is displayed closest in time to the present time, and occupies 80% of the buffered media time, while the sports announcers are most distant in time, and occupy 20% of the buffered media time.
- the ranking engine 330 ranks the entities identified from the buffered media data ( 430 ). Any appropriate ranking process may be used. In some implementations, the entities within content of the buffered media data at a time closer to current time are prioritized higher than entities within content of the buffered media data at a time further away from current time. Referring back the basketball game example, because the particular basketball is displayed closest in time to the present time, and occupies 80% of the buffered media time, while the sports announcers are most distant in time, and occupy 20% of the buffered media time, the particular basketball player will have a higher ranking than the sports announcers. A variety of time ranking functions may be use, e.g.,
- r(e) is a rank score for entity e
- t_receny is a time measure from the most recent time of the buffer data that the entity was last depicted (or mentioned, for audio data) with a minimum value of 0;
- t_duration is a time measure of the duration of the buffered video time that the entity is depicted in the buffered video, with a maximum value of 100%;
- f( ) is a ranking function
- the ranking engine 330 also prioritizes entities within the frame of the media based on the determined locations of the entities. For example, entities that are closer to the foreground relative to entities that are further in background receive higher priority. For example, in a video with sports announcers in the foreground and basketball players in the background warming up, the sports announcers receive higher priority than the basketball players do because the sports announcers are in the foreground and the basketball players are in the background.
- the proportionality scores can be used to determine whether an entity is in the foreground or background relative to other entities.
- query terms may be used to weigh the entities detected in the buffered media data.
- the entities may be used to disambiguate the query terms, as described above.
- the ranking engine 330 selects an entity that is ranking highest relative to the other entities ( 440 ).
- the several entities with the top rank may be selected.
- piecewise linear interpolation beginning from the top ranked entity may be used to determine a significant break in rank scores.
- the item selection engine receives the identified entities and the ranking for each of the entities. Based on the entities that are identified entities, the one or more highest ranked entities are identified and transmitted to the search engine 340 .
- the query may be used to determine how many entities to select. For example, if the query is “What is his free throw percentage?”, then only one entity may be selected, as the query speaks of a subject in the singular. However, if the query refers to a plural, e.g., “What are their names?” then two or more entities may be selected.
- the search engine 340 conducts a search on the entity or top ranked entities and provides the resulting contextual information to the user device ( 450 ).
- the search engine 340 may use the entities and, if provided, the query terms to conduct the search of one or more corpora.
- a variety of query rewriting, synonym generation, and other query processing algorithms can be used.
- the contextual information that is provided may be in the form of a contextual card, a series of search results, an answer and an interpreted question, or other forms.
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by a content server.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device for displaying information to the user
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's user device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include users and servers.
- a user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other.
- a server transmits data (e.g., an HTML, page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device).
- Data generated at the user device e.g., a result of the user interaction
Abstract
Description
- User devices now provide access to a wide variety of information. For example, digital image files, video and/or audio files, as well as resources for particular subjects or particular news articles, are accessible over the Internet. This information may be viewed in web browsers running on a user device and native applications running on a user device. Search engines crawl and index these resources to facilitate searching of the resources. Thus, for just about any subject in which a user may be interested, there is a large amount of information that is readily available to the user.
- Many user devices are now also being used to consume streaming content, such as “on demand” video. For example, many users now watch television programs and other videos primarily by use of mobile devices or laptop computer and tablets. Additionally, many televisions that are now available have “smart” capabilities that enable the televisions to be used as web browsers and to run native applications that present content from particular content providers.
- A user may desire information related to content that a user is viewing on a user device. Such information in this application is referred to as “contextual information,” as the information desired by the user is in the context of the active web page or media. Some user devices can provide an image of content that is displayed in an active window of a user device. A search system processes the image to identify entities and concepts and performs a search for those entities and concepts, and then provides one or more search results to the user device.
- This specification describes technologies relating to media contextual information responsive to a portion of buffered media that encompasses at least a buffered time period.
- In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of storing in a buffer, on a first user device, media data as buffered media data, the buffered media data being a most recent portion of media data received at the first user device, the most recent portion inclusive of the media data received from a present time to a prior time that is fixed relative to the present time; responsive to a search operation invocation at the present time, sending the buffered media data to a search processing system that is remote from the first user device; and receiving, from the search processing system and in response to the buffered media data, contextual information regarding an entity that the data processing system identified from processing the buffered media data. Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- Particular embodiments of the subject matter described in this specification can be implemented so as to realize one or more of the following advantages. Contextual information about media consumed by a user on a user device can be determined from buffered media data and presented to the user. This enables a user to receive additional information about the consumed media.
- In some implementations, the contextual information provided using the buffered media data can be query-independent, which eliminates a user's need to seek information using a search query that expresses the user's specific informational need. Instead, the user's informational need is expressed by the content of the buffered media data. Accordingly, when considered in the aggregate, thousands of erroneous and inaccurate queries are avoided, which, in turn, provides a more efficient use of search system resources. In other words, multiple erroneous query processing cycles are avoided, which reduces processing resources required and reduces overall system bandwidth requirements (or, alternatively, enables a larger number of users to be serviced without a commensurate increase in processing resources). This improvement in the technological field of search processing is thus another distinct advantage realized by the systems and methods described below.
- In other implementations, the contextual information from buffered media data can be augmented with a user's search query, e.g., by a voice command such as “Show me what other movies he was in.” This results more efficient use of server-side query resources (e.g., querying processing and bandwidth) because the search system can use the contextual content of the buffered media data to refine the search query. This also improves the technological field of search processing and information provided to the user, and is thus another distinct advantage realized by the systems and methods described below.
- In still other implementations, when the buffered content is video content, the buffered content may be a series of individual frames that each requires a threshold change in content from a prior video frame. Such buffering results in a smaller set of video data that is transmitted than if the buffering stored every frame of video. Moreover, by requiring each video frame that is buffered to have the threshold change in content from a prior video frame, the information loss due to not storing each video frame is reduced. This also improves the technological field of search processing and information provided to the user, as the buffered data that is sent is relative compact, which conserves bandwidth, but does not suffer from a concomitant information loss, which reduces the impact on information gain from the data.
- The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIGS. 1A and 1B are block diagrams of example environments in which contextual information about buffered media is provided. -
FIG. 2 is a flow diagram of an example process for providing buffered media data to receive contextual information. -
FIG. 3 is a block diagram of an example search processing system that processes a buffered media data request. -
FIG. 4 is a flow diagram of an example process for providing contextual information based on buffered media data. - Like reference numbers and designations in the various drawings indicate like elements.
- Overview
- A user may desire information related to content that a user is viewing on a user device. Such information in this application is referred to as “contextual information,” as the information desired by the user is in the context of the active web page or media. Some user devices can provide an image of content that is displayed in an active window of a user device. A search system processes the image to identify entities and concepts and performs a search for those entities and concepts, and then provides one or more search results to the user device. However, a most recent frame of video does not always accurately express the user's informational need. For example, a user may be watching a basketball game, and desire information about a particular player shooting a free throw. If the user invokes a search just after the video switches to another view, e.g., multiple players attempting to catch a rebound from the missed shot, the image may not accurately depict the interest of the user, i.e., the player that is shooting the free throw. Moreover, for audio data, such as a song, a screen shot or image of an active window is even less likely to accurately convey the user's informational need.
- A user device implementing the systems and methods described below enables determining contextual information from buffered media data for content consumed at a user device. The buffered media data is stored in a buffer on the user device. Typically, this buffered media data includes media for a predefined amount of time for the most recently consumed content at the user device. This predefined amount of time is also referred to as a “buffered time period.” The buffered time period is inclusive of a time period that provides for multiple frames of video and/or multiple audio samples for audio data. For example, the buffered media data may include the last 5-10 seconds of previously consumed media.
- In some implementations, the buffered media data can be for media data consumed from two or more active applications running on a user device. The media data for each of the multiple applications is stored in a buffer as separate respective instances of buffered media data. When a search operation is invoked that requires the buffered media, in some implementations, the application for which the user device has a primary focus is determined, and the only the buffered media data for the executing application for which the user device has a primary focus is selected and sent to the search processing system.
- Responsive to a search operation invocation at a present time, the user device sends the buffered media data to a search processing system. The invocation of the search operation can be the result from different types of user interaction models. One interaction model requires a non-textual user input, such as the prolonged pressing of an input button. Another interaction model requires a textual user input, such as the typing in or speaking of a query. Search operation invocation is described in more detail below.
- Contextual information regarding an entity or entities that the data processing system identified from processing the buffered media data is then provided to the user device in response. The data may be provided in a variety of ways, and the way the results or results are presented may depend on the query. For example, if the query issues an informational query, e.g., “Tell me about that player shooting the free throw,” then the data may be a list of search results. Conversely, if the query has a dominant intent, e.g., a query about a particular characteristic of a particular person, e.g., “Show me the shooter's free throw percentage and other stats for the season,” then the results may be presented as a single response, or in the form of a contextual card.
- In some implementations, the user can consume media on one device and receive contextual information on a second device that is different from the first. For example, a user may consume media on a television and receive the contextual information on a mobile device (e.g., tablet, mobile phone, etc.).
- These features and additional features are described in more detail below.
- Example Operation Environments
-
FIGS. 1A and 1B are block diagrams of example environments in which contextual information about buffered media is provided.FIG. 1A depicts requesting contextual information and receiving a contextual information card during presentation of media, andFIG. 1B depicts presenting media on a first user device and presenting the contextual information card on a second different user device. - With reference to
FIG. 1A , auser device 110 is used to obtain contextual information for media consumed at theuser device 110. Theuser device 110 is an electronic device that is capable of requesting and receiving resources over a network.Example user devices 110 include mobile communication devices (e.g., smart phones, tablets, laptop computers, etc.), and other computing or computer devices (e.g., televisions, desktops, etc.) that can send and receive data over a network, such as the Internet. - The
user device 110 can display information, such as web resources. These may include HTML pages, electronic documents, images files, video files, audio files, text message conversations, e-mails, graphical user interfaces of applications, etc. In addition, as depicted inFIG. 1A , theuser device 110 can presentmedia 114 using anapplication 112.Media 114 is images, video, audio, text, or some combination of the like that a user consumes using an application running on auser device 110. For example, themedia 114 may be a professional basketball game presented at the user device using anapplication 112 from a sports broadcasting provider. - The
application 112 can include native applications and/or browser-based applications. As used herein, a native application generates environment instances for display on a user device within an environment of the native application, and operates independent of a browser application on the user device. A native application is an application specifically designed to run on a particular user device operating system and machine firmware. Native applications thus differ from browser-based applications and browser-rendered resources. The latter require all, or at least some, elements or instructions downloaded from a web server each time they are instantiated or rendered. Furthermore, browser-based applications and browser-rendered resources can be processed by all web capable user devices within the browser and thus are not operating system specific. - The
user device 110, by use of abuffering process 101, stores bufferedmedia data 121 in abuffer 120. The bufferedmedia data 121 is visually depicted as a most recent frame of video of multiple video frames stored in thebuffer 120. The bufferedmedia data 121 is a most recent portion of streaming media data received at the first user device. The most recent portion inclusive of the streaming media data received from a present time to a prior time that is fixed relative to the present time and includes multiple frames of video or multiple samples of audio data. For example, the bufferedmedia data 121 may include the last 5, 10, 15, or 20 seconds of previously consumed media. - In
FIG. 1A , theuser device 110 is presentingmedia 114, and the user has invoked a search operation and sent a bufferedmedia request 118 to thesearch processing system 122. A search operation can be invoked a number of different ways, and will be described in more detail below. Thesearch processing system 122 process the bufferedmedia data 121 that is sent with the bufferedmedia request 118, and providescontextual information 124 in response. In the example shown inFIG. 1A , the contextual information is provided in the form of acontextual card 124 user interface element. However, other user interface elements may be used, for example, chat bubbles, selectable linked notes or footnotes, etc. Thecontextual information card 124 may include contextual information about themedia 114 presented by theapplication 112, such as images, text, audio, and video, and one or more commands 126. - The
commands 126 can include a search command that may invoke a separate search in a search user interface, a reviews command that may retrieve reviews of the media, and a share command, which may generate a screen shot of theapplication 112 and a URI of the environment instance and send the screen shot and the URI to another user device. - In addition, the
commands 126 can include a questions command that may provide additional questions a user can ask about the contextual information or the topicality of the contextual information. When a user interacts with one of the additional questions, theuser device 110 invokes a separate search query or request seeking results or answers for the additional question. Theuser device 110 will receive the answer to the separate search query, as either an additional contextual card, a different user interface, etc. - The
contextual card 124 is but one example of how contextual information may be provided. Other ways of providing contextual information include search results that link to resources, an answer if the bufferedmedia request 118, along with query terms input by the user, is interpreted as a question, and the like. -
FIG. 1A shows the contextual information being presented on theuser device 110. However, contextual information can be presented on a device that is separate from a device that is displaying the media data. For example,FIG. 1B is a figure that depicts presenting media on a first user device 160-A and presenting the contextual information on a second different user device 160-B. In this example, the user device 160-B is executing an application that controls the displaying of media on the user device 160-A. For example, the application may be a TV application that allows the user, by use of the user device 160-B, to select content and change channels for the user device 160-A. The user device 160-B may also execute abuffering process 101 as described with reference toFIG. 1A . Alternative, the user device 106-A may execute the buffering process and store the buffered media data, as indicated by thephantom process 101 on the user device 160-A. - The user device 160-B, which may be, for example, a mobile device or tablet computer, may be used to invoke a search operation in the same manner as described with reference to
FIG. 1A , and as will be described in more detail below. Again, the bufferedmedia request 118 is sent to the search processing system 122 (either from the user device 160-B, if the user device 160-B is storing the buffered media data, or from the device 160-A, if the device 160-A is storing the buffered media data). Thesearch processing system 122 receives the bufferedmedia request 118 and data indicating results are to be sent to the user device 160-B. Thesearch processing system 122 then provides the contextual information to the user device 160-B. - In an alternative implementation, the search operation may be invoked by use of the user device 160-B, but the contextual information may be displayed on the user device 160-A. For example, if multiple persons are watching a sports program, the user device 160-B may be used to invoke a buffered media request by one of the persons and the results may be displayed on the device 160-A for all persons to see.
- Buffered Media Data
- As described above, the buffered media data is a most recent portion of streaming media data received at the first user device. The most recent portion of the media data is inclusive of the media data received from a present time to a prior time that is fixed relative to the present time. For example, if the prior time is 20 seconds, then the buffered media data is for the last 5 seconds of presented media. In some implementations, more the buffered media data may be for a longer period of time than what is sent in a buffered media request. For example, the buffered media data may store data for up to 30 seconds, but only send buffered media data that corresponds to only the last five seconds of data. Should the user indicate dissatisfaction with the contextual information provided, then the user device may send additional buffered media data in a next request, e.g., for the last 20 seconds.
- The
user device 110 can buffermedia data 121 from multiple active applications. An active application is an application running on theuser device 110 that a user is engaging with. For example, if a user is listening to music using a media application and viewing a video weather report using a weather application or using a web browser, the user device receives bufferedmedia data 121 from themedia application 112 and the weather application/web browser. In addition, the media data for each of the multiple applications is stored in a buffer as separate respective instances of buffered media data. When a search operation is invoked that requires the buffered media, in some implementations, the application for which the user device has a primary focus is determined, and only the buffered media data for the executing application for which the user device has a primary focus is selected and sent to the search processing system. - In some implementations, the primary focus is determined by an active window. For example, if a user is watching the weather video and the audio player window is in the background while presenting a song, the application showing the weather video is determined to have the primary focus. Alternatively, if the user utters a query, the primary focus may be determined, in part, by the query terms. For example, assume the user is watching the weather video and the audio player window is in the background. The user utters the query “Assistant, who is the lead singer?” Using semantic rules, the user device will determine that the dominant intent of the verbal input to media being presented. In this example, the dominant intent based on the query terms “lead singer,” relates higher to the song than to the weather video, and thus the system will select buffered media data of the song for processing.
- In some implementations, the
user device 110 samples a media frame from the received media data according to an interval number of video frames. This is done to conserve space when buffering video media data. For example, the user device may only sample every nth frame of the media data, where N can include any number, for example, every second frame, fifth frame, tenth frame, etc. Theuser device 110 stores each sampled media frame in the buffer. Theuser device 110 stores samples media frames to reduce the amount of bufferedmedia data 121 stored in the buffer for each active application. This enables the buffer to capture the same amount of media using less data. - In some implementations, the
user device 110 stores media frames based on a threshold change of content between adjacent media frames. Theuser device 110 determines, for each media frame, whether the media frame has a threshold change in content from a previously received media frame. The threshold change in content can be based on a totality of change in the content presented in the adjacent frames, a change in the dominate content presented in the adjacent frames, or a combination thereof. Any appropriate image processing technique can be used to determine a measure of change between video frames. The threshold change in content can be based on similarity scores of content presented in the media frame. A similarity score indicates how similar the content in a particular frame is to the content in a prior frame. Edge detection, scale invariant transform processing, and color distribution are example processing techniques that can be performed on each frame and the results compared to determine the similarity of content between the frames. For example, and continuing with the basketball example, if a first frame presented and stored includes the particular player shooting a free-throw shot and the next frame presented is a frame that includes sports announcers, the user device will detect, by use of the image processing techniques, a threshold change of content from the particular player to the sports announcers. In this instance, theuser device 110 stores the sports announcer frame, because a threshold change in content occurred. - In some implementations, the buffer erases the buffer media data, each time the buffered media data is sent to the
search processing system 122. In other implementations, the user device sends a portion of the buffered media data stored in the buffer, but does not erase the portion of buffered media data that is sent to searchprocessing system 122. In other implementations, the buffer stores a predefined amount of time and erases buffered media data according to a first in first out data storage scheme. - Search Operation Invocation
- Responsive to a search operation invocation at a present time, the user device sends the buffered media data to a search processing system. The invocation of the search operation can be the result from different types of user interaction models. One interaction model requires a non-textual user input, such as the prolonged pressing of an input button. When such an action is detected, the user device generates a query-independent search request that sends the buffered media data to the search system for processing. The request is “query-independent” the request does not include a query that includes terms that were directly input by the user.
- When the
user device 110 invokes a search operation without verbal or textual input from the user, theuser device 110 sends the bufferedmedia request 118 to thesearch processing system 122 as a query-independent request. The query-independent request 118 includes the bufferedmedia data 121 and does not include query terms input by the user. However, the bufferedmedia request 118 may include other data even if it is query independent, such as a URI for the source of the buffered media, the application presenting the media data, and the like. - One way to invoke a search operation without verbal or textual input from the user is by a prolonged pressing of an input button. For example, the
user device 110 may be presenting somemedia 114 in anapplication 112. Themedia 114 includes, for example, some video that may includegraphics 115 andtext 116. The user may generate an indication for contextual information, e.g., by pressing abutton 111, e.g., a “home” button, for three seconds (i.e., long press) or tapping the screen according to a predefined tap pattern, etc. In response, the user device sends a bufferedmedia request 118 as a query-dependent request to thesearch processing system 122. In addition, the bufferedmedia 121, the request may also include information about the media application, the URI of the source of the received media, and other information that are not query terms input by the user. - Other ways of generating a query-independent request can also be used. For example, in some implementations, the
user device 110 can provide buffered media data to thesearch process system 122 periodically. Theuser device 110, pursuant to a user selection to send the buffered media data periodically, may send a query-independent request to thesearch processing system 122 every N seconds, e.g., where N is every 10, 20 or 30 seconds. For each iteration, thesearch processing system 122 determines contextual information for the particular portion of receivedbuffered media data 121 and sends the determined contextual information to theuser device 110. Thus, theuser device 110 receives contextual information about the buffered media data stored in the buffer iteratively and according to a set period of time. Periodic updates of information may be useful when watching sporting events, for example. In such operation, a user may be provided with updated statistics that are relevant to what has been previously displayed. For example, during a basketball game, when a player is shooting a free throw, statistics specific to the player may be presented. However, when the video depicts all the players of both teams, then statics regarding each team and the game history between the teams may be presented. - In another implementation, the user device sends a query-independent request to the
search processing system 122 based on a threshold change in content presented in the media. The threshold change can be done in the same manner as described above. Once a threshold change in content is detected, the user device generates a query-independent request for contextual information and sends the request to thesearch processing system 122. - Another interaction model is a user input that includes search terms and that includes a signal to include the buffered media data, either by typing in a query or speaking a query using an assistant process or voice recognition process. Such a signal may also require that the query be ambiguous, or the query specify the media data. For example, assume a query uttered to an assistant and is ambiguous, e.g., “What is his free throw percentage for the season?” The user device, using a semantic model, will determine the pronoun “his” does not include an antecedent, and thus will include the buffered media data with the query. Alternatively, where the query uttered to the assistant refers to the buffered media, e.g., “Tell me more about the lead singer of the song I'm listening to”, the user device will determine that the noun “song” and the verb “listening” in the phrase means the query refers to the song currently being presented by the user device, and may send the query and the buffered media to the search system.
- Conversely, when the query is well formed and not ambiguous, e.g., “What is today's weather forecast?”, then the assistant process will not provide the buffered media with the query. This is because a well formed query that is not ambiguous and that is not determined to refer to the buffered media is interpreted by the user device, by use of semantic processing, as complete expression of the user's informational need.
- Example User Device Process Flow
-
FIG. 2 is a flow diagram of anexample process 200 for providing buffered media data to receive contextual information. Theprocess 200 is implemented in a user device. The buffered media data is a most recent portion of streaming media data presented at the user device, and is inclusive of the media data presented from a present time to a prior time that is fixed relative to the present time. - The user device stores buffered media data in a buffer (210) For example, the user device may be executing a
buffering process 101 that buffers media data, such as streaming audio and video media, or audio and video media that is being played from a stored recording on the user device, in a memory buffer on the user device. - The user device, responsive to search operation invocation, sends the buffered media data to a search processing system (220). The data processing system is distinct from the first user device 160-A and the second user device 160-B. In some implementations, the
data processing system 122 determines contextual information of the bufferedmedia data 121. The search operation invocations may be done as described above, e.g., by a long press of a button; by an assistant process receiving a voice input; by a user inputting a text query; or by a periodic process that automatically sends the buffered media data to the search processing system. The buffered media data may be sent as query-independent request, or with a query, as described above. - The user device (or another user device separate from the sending user device) receives contextual information responsive to the buffered media data (230). The contextual information may be in the form of search results, a contextual card, an answer, or any other form that the search system determines is appropriate for the buffered media data request. The user device may then display the information to one or more users.
- Search Processing System
- An example search processing system is shown in
FIG. 3 , andFIG. 4 describes an example process for providing contextual information in response to a buffered media data request. Thedata processing system 122 includes anentity identification engine 320, aranking engine 330, asearch engine 340, and a search enginefront end 350. Thesearch processing system 122 can process the buffered media data in a variety of ways. For example, video media can be processed for audio recognition, object recognition, person recognition and character recognition. Based on the results, the search system can form a query to search one or more corpora. Additionally, if a query is received with the buffered media request, then the query can be augmented with the results. Similarly, with audio data, voice and speech recognition can be used, as well as audio track matching, to identify songs, speeches and other relevant information to which the audio data pertains. The search engine, based on the audio processing results, can form a query to search one or more corpora. - One example
search processing system 122 is described with reference toFIG. 3 . Theprocess 400 ofFIG. 4 can be implemented in the search processing system, and operation of the search processing system is described with reference toFIG. 4 . - The
search processing system 122 receives the buffered media data (410). For example, thesearch processing system 122 receives the bufferedmedia data request 118 to provide contextual information responsive to the buffered media request. - The
entity identification engine 320 performs content detection on the buffered media data to identify entities (420). An entity may be one or more topical items of content within the media. For example, the text, sound, graphics and video may relate to particular persons, places, things or concepts. For example, in the frame with the particular basketball player shooting a free throw, the entities can include the particular player, the game of basketball, the player's team, the opposing team, the National Basketball Association, and the like. - The
entity identification engine 320 processes the audio portions and video portions (if any) of the buffered media. In some implementations, the image portions are a frame of a video image. For video in the buffered media data, theentity identification engine 320 maintains the positional integrity of the sound and the accompanying frames of the video technology. Thus, a mapping of sound to video frame is created for analyzing the media. - The
entity identification engine 320 uses optical character recognition (OCR) to identify entities within the image portions of the buffered media data. A variety of OCR algorithms can be used to identify the entities. The OCR algorithms derive text and graphics from the buffered media data. Theentity identification engine 320 analyzes each frame to determine which entities are present in each frame. The OCR algorithms use the derived text and object recognition to give each entity a label. The label is a naming convention for the entity. - In addition, the
entity identification engine 320 can, in some implementations, determine the position of each entity relative to other entities included in the frame, and the amount of the display that each entity occupies. For example, assume a presented frame includes a torso and head shot of particular player shooting a free-throw shot and also includes a shot of another player standing behind the particular player. Also assume the head and torso of the particular player take up 50% of the display area, and the image of the other player takes up 10% of the display area. Theentity identification engine 320 can generate proportionality scores for the particular player and the other player, which are dependent on the amount of display area an object occupies. Here, the proportionality score will be higher for the particular player than for the other player. This score can be used by theranking engine 330 to rank the entities. - In addition, the
entity identification engine 320 can, in some implementations, determine the time of each entity relative to other entities included in the buffered media data and/or the amount of overall time that each entity is displayed. For example, for a five second portion of buffered video, assume that from seconds five to four (measured in the past from the present time), sports announcers are shown; then from seconds four to the present time, the particular basketball player is shown. The particular basketball is displayed closest in time to the present time, and occupies 80% of the buffered media time, while the sports announcers are most distant in time, and occupy 20% of the buffered media time. - The
ranking engine 330 ranks the entities identified from the buffered media data (430). Any appropriate ranking process may be used. In some implementations, the entities within content of the buffered media data at a time closer to current time are prioritized higher than entities within content of the buffered media data at a time further away from current time. Referring back the basketball game example, because the particular basketball is displayed closest in time to the present time, and occupies 80% of the buffered media time, while the sports announcers are most distant in time, and occupy 20% of the buffered media time, the particular basketball player will have a higher ranking than the sports announcers. A variety of time ranking functions may be use, e.g., - r(e)=f(t_recency, t_duration %)
- where
- r(e) is a rank score for entity e;
- t_receny is a time measure from the most recent time of the buffer data that the entity was last depicted (or mentioned, for audio data) with a minimum value of 0;
- t_duration is a time measure of the duration of the buffered video time that the entity is depicted in the buffered video, with a maximum value of 100%; and
- f( ) is a ranking function.
- In some implementations, the
ranking engine 330 also prioritizes entities within the frame of the media based on the determined locations of the entities. For example, entities that are closer to the foreground relative to entities that are further in background receive higher priority. For example, in a video with sports announcers in the foreground and basketball players in the background warming up, the sports announcers receive higher priority than the basketball players do because the sports announcers are in the foreground and the basketball players are in the background. In some implementations, the proportionality scores can be used to determine whether an entity is in the foreground or background relative to other entities. - Other ways of ranking entities can also be used instead of, or in addition to, the processes described above. For example, if query terms are provided with the buffered media data, the query terms may be used to weigh the entities detected in the buffered media data. Alternatively, or in addition, the entities may be used to disambiguate the query terms, as described above.
- The
ranking engine 330 selects an entity that is ranking highest relative to the other entities (440). Alternatively, the top N ranked entities may be selected, where N=2 or more. In another implementation, if several entities are top ranked and have very similar ranks scores, and then there is a significant break in the ranks scores for a next ranked entity, then the several entities with the top rank may be selected. In this latter implementations, piecewise linear interpolation beginning from the top ranked entity may be used to determine a significant break in rank scores. The item selection engine receives the identified entities and the ranking for each of the entities. Based on the entities that are identified entities, the one or more highest ranked entities are identified and transmitted to thesearch engine 340. - If a query is provided with the buffered media data, the query may be used to determine how many entities to select. For example, if the query is “What is his free throw percentage?”, then only one entity may be selected, as the query speaks of a subject in the singular. However, if the query refers to a plural, e.g., “What are their names?” then two or more entities may be selected.
- The
search engine 340 conducts a search on the entity or top ranked entities and provides the resulting contextual information to the user device (450). Thesearch engine 340 may use the entities and, if provided, the query terms to conduct the search of one or more corpora. A variety of query rewriting, synonym generation, and other query processing algorithms can be used. The contextual information that is provided may be in the form of a contextual card, a series of search results, an answer and an interpreted question, or other forms. - Additional Implementation Details
- In situations in which the systems discussed here collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by a content server.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- The term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's user device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a user computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- The computing system can include users and servers. A user and server are generally remote from each other and typically interact through a communication network. The relationship of user and server arises by virtue of computer programs running on the respective computers and having a user-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML, page) to a user device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the user device). Data generated at the user device (e.g., a result of the user interaction) can be received from the user device at the server.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of features specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (22)
Priority Applications (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/621,211 US10679068B2 (en) | 2017-06-13 | 2017-06-13 | Media contextual information from buffered media data |
PCT/US2018/018918 WO2018231286A1 (en) | 2017-06-13 | 2018-02-21 | Media contextual information for a displayed resource |
EP18709843.9A EP3593257A1 (en) | 2017-06-13 | 2018-02-21 | Media contextual information for a displayed resource |
US16/891,465 US11714851B2 (en) | 2017-06-13 | 2020-06-03 | Media contextual information for a displayed resource |
US18/228,628 US20230376531A1 (en) | 2017-06-13 | 2023-07-31 | Media contextual information for a displayed resource |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/621,211 US10679068B2 (en) | 2017-06-13 | 2017-06-13 | Media contextual information from buffered media data |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/891,465 Continuation US11714851B2 (en) | 2017-06-13 | 2020-06-03 | Media contextual information for a displayed resource |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180357487A1 true US20180357487A1 (en) | 2018-12-13 |
US10679068B2 US10679068B2 (en) | 2020-06-09 |
Family
ID=61599592
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/621,211 Active 2038-01-27 US10679068B2 (en) | 2017-06-13 | 2017-06-13 | Media contextual information from buffered media data |
US16/891,465 Active 2037-08-16 US11714851B2 (en) | 2017-06-13 | 2020-06-03 | Media contextual information for a displayed resource |
US18/228,628 Pending US20230376531A1 (en) | 2017-06-13 | 2023-07-31 | Media contextual information for a displayed resource |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/891,465 Active 2037-08-16 US11714851B2 (en) | 2017-06-13 | 2020-06-03 | Media contextual information for a displayed resource |
US18/228,628 Pending US20230376531A1 (en) | 2017-06-13 | 2023-07-31 | Media contextual information for a displayed resource |
Country Status (3)
Country | Link |
---|---|
US (3) | US10679068B2 (en) |
EP (1) | EP3593257A1 (en) |
WO (1) | WO2018231286A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11044514B2 (en) * | 2017-09-28 | 2021-06-22 | Tencent Technology (Shenzhen) Company Limited | Method for displaying bullet comment information, method for providing bullet comment information, and device |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10848819B2 (en) | 2018-09-25 | 2020-11-24 | Rovi Guides, Inc. | Systems and methods for adjusting buffer size |
US11265597B2 (en) * | 2018-10-23 | 2022-03-01 | Rovi Guides, Inc. | Methods and systems for predictive buffering of related content segments |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110247042A1 (en) * | 2010-04-01 | 2011-10-06 | Sony Computer Entertainment Inc. | Media fingerprinting for content determination and retrieval |
US20120143817A1 (en) * | 2010-12-03 | 2012-06-07 | Salesforce.Com, Inc. | Social files |
US9747285B1 (en) * | 2011-06-23 | 2017-08-29 | Adam Laufer | Geolocation systems and methods for searching for entertainment events |
Family Cites Families (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010053968A1 (en) | 2000-01-10 | 2001-12-20 | Iaskweb, Inc. | System, method, and computer program product for responding to natural language queries |
US7389181B2 (en) | 2004-08-31 | 2008-06-17 | Visre, Inc. | Apparatus and method for producing video drive-by data corresponding to a geographic location |
US7996419B2 (en) | 2004-03-31 | 2011-08-09 | Google Inc. | Query rewriting with entity detection |
US8606781B2 (en) | 2005-04-29 | 2013-12-10 | Palo Alto Research Center Incorporated | Systems and methods for personalized search |
US7788266B2 (en) | 2005-08-26 | 2010-08-31 | Veveo, Inc. | Method and system for processing ambiguous, multi-term search queries |
US20070060114A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Predictive text completion for a mobile communication facility |
KR100828539B1 (en) | 2005-09-20 | 2008-05-13 | 후지제롯쿠스 가부시끼가이샤 | Detection method of two dimensional code, detection device thereof, and storage medium having detection program storaged therein |
US7917286B2 (en) | 2005-12-16 | 2011-03-29 | Google Inc. | Database assisted OCR for street scenes and other images |
US7818315B2 (en) | 2006-03-13 | 2010-10-19 | Microsoft Corporation | Re-ranking search results based on query log |
US7818332B2 (en) | 2006-08-16 | 2010-10-19 | Microsoft Corporation | Query speller |
US7689613B2 (en) | 2006-10-23 | 2010-03-30 | Sony Corporation | OCR input to search engine |
US7739596B2 (en) * | 2007-04-06 | 2010-06-15 | Yahoo! Inc. | Method and system for displaying contextual advertisements with media |
US20080270110A1 (en) | 2007-04-30 | 2008-10-30 | Yurick Steven J | Automatic speech recognition with textual content input |
US8321406B2 (en) | 2008-03-31 | 2012-11-27 | Google Inc. | Media object query submission and response |
US8391618B1 (en) | 2008-09-19 | 2013-03-05 | Adobe Systems Incorporated | Semantic image classification and search |
US20100306249A1 (en) | 2009-05-27 | 2010-12-02 | James Hill | Social network systems and methods |
US8670597B2 (en) | 2009-08-07 | 2014-03-11 | Google Inc. | Facial recognition with social network aiding |
US9135277B2 (en) | 2009-08-07 | 2015-09-15 | Google Inc. | Architecture for responding to a visual query |
US9087059B2 (en) | 2009-08-07 | 2015-07-21 | Google Inc. | User interface for presenting search results for multiple regions of a visual query |
US8515185B2 (en) | 2009-11-25 | 2013-08-20 | Google Inc. | On-screen guideline-based selective text recognition |
US20110128288A1 (en) | 2009-12-02 | 2011-06-02 | David Petrou | Region of Interest Selector for Visual Queries |
US8977639B2 (en) | 2009-12-02 | 2015-03-10 | Google Inc. | Actionable search results for visual queries |
US9852156B2 (en) | 2009-12-03 | 2017-12-26 | Google Inc. | Hybrid use of location sensor data and visual query to return local listings for visual query |
US8392435B1 (en) | 2010-04-14 | 2013-03-05 | Google Inc. | Query suggestions for a document based on user history |
US8316019B1 (en) | 2010-06-23 | 2012-11-20 | Google Inc. | Personalized query suggestions from profile trees |
US8788434B2 (en) | 2010-10-28 | 2014-07-22 | Google Inc. | Search with joint image-audio queries |
US8473433B2 (en) | 2010-11-04 | 2013-06-25 | At&T Intellectual Property I, L.P. | Systems and methods to facilitate local searches via location disambiguation |
US20120191745A1 (en) | 2011-01-24 | 2012-07-26 | Yahoo!, Inc. | Synthesized Suggestions for Web-Search Queries |
US20120215533A1 (en) | 2011-01-26 | 2012-08-23 | Veveo, Inc. | Method of and System for Error Correction in Multiple Input Modality Search Engines |
TWI544350B (en) | 2011-11-22 | 2016-08-01 | Inst Information Industry | Input method and system for searching by way of circle |
US8984012B2 (en) | 2012-06-20 | 2015-03-17 | Microsoft Technology Licensing, Llc | Self-tuning alterations framework |
US8935246B2 (en) | 2012-08-08 | 2015-01-13 | Google Inc. | Identifying textual terms in response to a visual query |
US9342567B2 (en) | 2013-08-23 | 2016-05-17 | International Business Machines Corporation | Control for persistent search results and iterative searching |
US10002191B2 (en) | 2013-12-31 | 2018-06-19 | Google Llc | Methods, systems, and media for generating search results based on contextual information |
AU2016291674B2 (en) * | 2015-07-16 | 2021-08-26 | Inscape Data, Inc. | Systems and methods for partitioning search indexes for improved efficiency in identifying media segments |
-
2017
- 2017-06-13 US US15/621,211 patent/US10679068B2/en active Active
-
2018
- 2018-02-21 EP EP18709843.9A patent/EP3593257A1/en not_active Withdrawn
- 2018-02-21 WO PCT/US2018/018918 patent/WO2018231286A1/en active Search and Examination
-
2020
- 2020-06-03 US US16/891,465 patent/US11714851B2/en active Active
-
2023
- 2023-07-31 US US18/228,628 patent/US20230376531A1/en active Pending
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110247042A1 (en) * | 2010-04-01 | 2011-10-06 | Sony Computer Entertainment Inc. | Media fingerprinting for content determination and retrieval |
US9264785B2 (en) * | 2010-04-01 | 2016-02-16 | Sony Computer Entertainment Inc. | Media fingerprinting for content determination and retrieval |
US20120143817A1 (en) * | 2010-12-03 | 2012-06-07 | Salesforce.Com, Inc. | Social files |
US20120143917A1 (en) * | 2010-12-03 | 2012-06-07 | Salesforce.Com, Inc. | Social files |
US8498994B2 (en) * | 2010-12-03 | 2013-07-30 | Salesforce.Com, Inc. | Social files |
US8756221B2 (en) * | 2010-12-03 | 2014-06-17 | Salesforce.Com, Inc. | Social files |
US20140244689A1 (en) * | 2010-12-03 | 2014-08-28 | Salesforce.Com, Inc. | Social files |
US9171180B2 (en) * | 2010-12-03 | 2015-10-27 | Salesforce.Com, Inc. | Social files |
US20160019241A1 (en) * | 2010-12-03 | 2016-01-21 | Salesforce.Com, Inc. | Social files |
US9424283B2 (en) * | 2010-12-03 | 2016-08-23 | Salesforce.Com, Inc. | Social files |
US20170024577A1 (en) * | 2010-12-03 | 2017-01-26 | Salesforce.Com, Inc. | Social files |
US9747285B1 (en) * | 2011-06-23 | 2017-08-29 | Adam Laufer | Geolocation systems and methods for searching for entertainment events |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11044514B2 (en) * | 2017-09-28 | 2021-06-22 | Tencent Technology (Shenzhen) Company Limited | Method for displaying bullet comment information, method for providing bullet comment information, and device |
Also Published As
Publication number | Publication date |
---|---|
WO2018231286A1 (en) | 2018-12-20 |
US11714851B2 (en) | 2023-08-01 |
EP3593257A1 (en) | 2020-01-15 |
US10679068B2 (en) | 2020-06-09 |
US20200293787A1 (en) | 2020-09-17 |
US20230376531A1 (en) | 2023-11-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10311101B2 (en) | Methods, systems, and media for searching for video content | |
US20230376531A1 (en) | Media contextual information for a displayed resource | |
JP5851507B2 (en) | Method and apparatus for internet search | |
AU2010286374B2 (en) | Framework for selecting and presenting answer boxes relevant to user input as query suggestions | |
JP6838098B2 (en) | Knowledge panel contextualizing | |
KR101506380B1 (en) | Infinite browse | |
US20170270159A1 (en) | Determining query results in response to natural language queries | |
US10152521B2 (en) | Resource recommendations for a displayed resource | |
KR20140027285A (en) | Localized translation of keywords | |
CN110874436B (en) | Network system for third party content based contextual course recommendation | |
US11574013B1 (en) | Query recommendations for a displayed resource | |
US11003667B1 (en) | Contextual information for a displayed resource | |
US20240046964A1 (en) | Video Timed Anchors | |
CN109791545B (en) | Contextual information for resources including display of images | |
US11151129B1 (en) | Modifying query in discourse context | |
US10467300B1 (en) | Topical resource recommendations for a displayed resource | |
US20200401638A1 (en) | Method of and system for generating search query completion suggestion on search engine | |
CN113420209A (en) | Recommendation method, device and equipment based on weather search and storage medium | |
US20210232659A1 (en) | Query recommendations for a displayed resource |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BADR, IBRAHIM;REEL/FRAME:042794/0793Effective date: 20170623 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP, ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
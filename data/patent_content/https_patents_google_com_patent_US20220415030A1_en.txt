US20220415030A1 - AR-Assisted Synthetic Data Generation for Training Machine Learning Models - Google Patents
AR-Assisted Synthetic Data Generation for Training Machine Learning Models Download PDFInfo
- Publication number
- US20220415030A1 US20220415030A1 US17/778,085 US201917778085A US2022415030A1 US 20220415030 A1 US20220415030 A1 US 20220415030A1 US 201917778085 A US201917778085 A US 201917778085A US 2022415030 A1 US2022415030 A1 US 2022415030A1
- Authority
- US
- United States
- Prior art keywords
- virtual object
- training
- scene
- image
- computing devices
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/77—Processing image or video features in feature spaces; using data integration or data reduction, e.g. principal component analysis [PCA] or independent component analysis [ICA] or self-organising maps [SOM]; Blind source separation
- G06V10/774—Generating sets of training patterns; Bootstrap methods, e.g. bagging or boosting
- G06V10/7747—Organisation of the process, e.g. bagging or boosting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/60—Type of objects
- G06V20/64—Three-dimensional objects
Definitions
- the present disclosure relates generally to machine learning. More particularly, the present disclosure relates to computer-implemented systems and methods which can generate synthetic data from three-dimensional imagery such as augmented reality mapped environments and/or virtual objects. Aspects of the present disclosure can further include using the synthetic data for training machine learned models.
- Machine learning algorithms rely on data to learn patterns from images. However, collecting and labeling real data can be both expensive and time-consuming. As a result, it may be more economical and scalable to generate synthetic images rather than collecting and annotating real images.
- Typical techniques for generating synthetic images result in synthetic images that are of lower quality and “realism” relative to real world imagery (e.g., the synthetic images look “fake”). Because machine learning techniques are reliant upon training data, the use of unrealistic synthetic images can cause machine learning models trained on such synthetic images to exhibit poorer performance relative to those trained on real imagery. Therefore, generating photo-realistic synthetic images that better approximate real world imagery is highly desirable. Needed still are methods in the art for synthetic data generation for applications such as machine learning.
- the present disclosure is directed to systems and methods for generating synthetic training data using augmented reality (AR) techniques.
- images of a scene can be used to generate a three-dimensional mapping of the scene.
- the three-dimensional mapping may be associated with the images to indicate locations for positioning a virtual object.
- implementations can generate an augmented image depicting the virtual object within the scene at a position and orientation.
- the augmented image can then be stored in a machine learning dataset and associated with a label based on aspects of the virtual object.
- the augmented images can be automatically labeled using example systems and methods to indicate the object position such as coordinate locations of bounding box edges. Other features such as an object name may also be used to label augmented images. Alternatively or additionally, the augmented image as a whole may be assigned a label to indicate properties such as image realism or conformance with natural laws such as gravity.
- FIG. 1 depicts a block diagram of an example computing system according to example embodiments of the present disclosure.
- FIG. 2 depicts a block diagram of an example method for generating synthetic data according to example embodiments of the present disclosure.
- FIGS. 3 A and 3 B depict example illustrations of a virtual object defining multiple seats which together form a bounding box according to example aspects of embodiments of the present disclosure.
- FIG. 4 depicts an example virtual coordinate frame that can be used to define aspects, such as coordinate locations, of example embodiments according to the present disclosure.
- FIG. 5 depicts an example illustration demonstrating how perspective information such as camera pose may be used in some implementations to limit or discard certain views from the AR scene or the augmented image according to example embodiments of the present disclosure.
- FIG. 6 A depicts example augmented images generated according to example embodiments of the present disclosure.
- FIGS. 6 B- 6 D further illustrate features such as metadata that can be associated with the augmented images of FIG. 6 A .
- FIG. 6 B shows example bounding boxes for the virtual objects included in the example augmented images of FIG. 6 A
- FIG. 6 C shows example depth and segmentation masks for the virtual objects included in the example augmented images of FIG. 6 A
- FIG. 6 D shows example visibility masks for the virtual objects included in the example augmented images of FIG. 6 A .
- FIGS. 7 A- 7 F depict example augmented images generated according to example embodiments of the present disclosure. These images display the same AR scene including various virtual objects such as boxes ( 7 A, 7 B, and 7 E) and shoes ( 7 C, 7 D, and 7 F).
- boxes 7 A, 7 B, and 7 E
- shoes 7 C, 7 D, and 7 F.
- the present disclosure is directed to systems and methods for generating synthetic training data for machine-learned models as well as using the synthetic training data to train machine-learned models.
- aspects of example systems and methods can include automated labeling of the synthetic training data to streamline training machine-learned models using supervised learning techniques.
- computer vision models provide a machine learning tool for interpreting a three-dimensional (3D) environment for uses such as object detection and classification.
- 3D three-dimensional
- To classify an object in a scene can require a model to not only understand what features of an object can be used to identify it with high confidence but also to search the scene for regions to use for classification or areas that may be obscured due to other imagery.
- training computer vision models can require larger and more complex labeling when compared to other machine learned models.
- Example implementations of the disclosure can use augmented reality (AR) techniques to generate synthetic training data.
- Generating the synthetic training data can include obtaining a virtual object such as a 3D model of a real object (e.g., a shoe) and positioning the virtual object in an augmented reality scene (AR scene).
- the AR scene can be understood as including one or more image frames depicting a physical location that can be associated with more detailed information about the 3D environment of the location such as depth. This information can be derived solely from the imagery using an AR engine or can be generated based on one or more of: the camera pose (e.g., camera position and orientation), lighting, or other sensor data (e.g., depth sensor data) that can be used to generate a point-cloud or mesh grid of physical items or surfaces within the scene.
- the AR scene and the virtual object can be combined to produce synthetic training data by utilizing AR technology to augment one or more image frames that depict the scene, thereby generating an augmented image displaying at least a portion of the virtual object at a location in
- Example advantages of the present disclosure include automated labeling of synthetic training data.
- the augmented image can further be stored as a training image within a machine learning training dataset.
- Implementations can also associate a training label with the training image in the machine learning dataset, the label indicating one or more of: identifies the virtual object (e.g., a shoe, a vase, or a camera), indicates the position of the virtual object (e.g., a coordinate point in the AR scene or an area in the augmented image), or indicates the orientation of the virtual object within the scene (e.g., an angle based on a reference frame).
- the virtual object e.g., a shoe, a vase, or a camera
- indicates the position of the virtual object e.g., a coordinate point in the AR scene or an area in the augmented image
- indicates the orientation of the virtual object within the scene e.g., an angle based on a reference frame.
- the training object can be described by a virtual model.
- Virtual models can be constructed, for example, by 3D scanners or multi-camera systems that can stitch together images to create a volume representing the object including features such as size, shape, color, or other physical attributes.
- an augmented image and/or a virtual scene can be generated for training machine-learned models (e.g., computer vision models).
- Machine-learned models trained on a dataset that includes such augmented images/virtual scenes may exhibit higher performance relative to those trained on synthetic imagery or a smaller training set of manually labelled images/scenes.
- the augmented image can include or otherwise be associated with one or more labels defining ground truth aspects of the virtual object (e.g., position within the AR scene, orientation relative to a camera, contact area(s), etc.) and/or the AR scene (e.g., camera position, depth information, coordinate locations, etc.) that can be used in subsequently training a computer vision or other machine learned model.
- the virtual object e.g., position within the AR scene, orientation relative to a camera, contact area(s), etc.
- the AR scene e.g., camera position, depth information, coordinate locations, etc.
- implementations of the present disclosure focus on generation of high-quality data by taking advantage of the control, precision, and realism provided by AR rendering engines and environments. Further, disclosed implementations can leverage the data associated with the virtual object and/or the virtual environment to automatically produce labeled training data.
- One example of obtaining data of a scene in augmented reality may include utilizing a device to capture one or more video sequences of a scene (e.g., a session).
- the device can include a personal device such as a smartphone that includes an AR engine configured for AR generation (e.g., ARKit or ARCore).
- the AR engine can be configured to estimate features and planes with 3D coordinates, as well as lighting of the scene.
- a world frame can be defined depending on one or more configurations.
- a gravity configuration can include 3 axes: a y-axis pointed up, parallel to gravity, a z-axis pointing outward from the screen (or normal to the camera), and an x-axis perpendicular to both the y-axis and z-axis.
- an origin can be defined as the initial position of the device during the session.
- the AR session data can be used to construct an AR scene using a suitable AR engine and/or application.
- the AR session data may include one or more image frames that depict a scene.
- the one or more image frames may depict the scene from various positions and/or camera angles that together can be used to generate a mapping of the scene including objects and or surfaces depicted in the scene.
- the image frames may be associated with depth data that can be also be used in generating the mapping of the scene.
- implementations can include obtaining the AR session data using an AR device
- alternative implementations may access saved AR session data or may access video data which includes one or more image frames and/or other sensor data that together have sufficient information for generating an AR view of a scene.
- generally implementations according to the present disclosure can include obtaining data that comprises one or more image frames that depict a scene.
- implementations of the disclosure can include obtaining a three-dimensional model of an object (e.g., a virtual object).
- Techniques for obtaining the virtual object can include object scanning, multi-view cameras, or other image stitching methods to generate a substantially accurate representation of the object in 3D.
- a model of a virtual object can also be accessed from a database.
- a reference frame can be determined for placing the model in the AR scene.
- a reference frame can include defining one or more seats that represent possible planar regions on the exterior of the virtual object for positioning the virtual object in the AR scene.
- the planar regions do not need to be on or in contact with the virtual object and may be understood as representing a hypothetical volume encompassing the virtual object or a region of the hypothetical volume.
- the one or more seats can together define a bounding box having a rectangular volume that encapsulates the entirety of the virtual object.
- Each face of the rectangular volume can be considered one seat (6 seats total) for positioning the object in the AR scene.
- further seats can be included.
- certain objects may be better defined by volumes composed of 10 or more planar faces which may provide greater control in placing objects that include curved surfaces.
- the number of seats may be limited (e.g., 1 seat total) to indicate a correct or preferred orientation for the virtual object.
- the one or more seats may be used to define an orientation axis.
- the augmented image can depict one or more instances of the virtual object within the scene.
- a seat can be chosen (e.g., at random, based on an input, otherwise encoded in hardware and/or software, etc.).
- the seat can describe a bottom region for the virtual object, thus setting a first orientation.
- a second orientation can be determined by rotating the virtual object about the axis normal to the seat. As an example for illustration, if a virtual object were to be placed on the ground in the AR scene, the seat would be in contact with the ground and the virtual object could be rotated around the direction of gravity to yield various second orientations.
- aspects of placing the virtual object in the AR scene may include determining the seat, the orientation, and/or the position within the AR scene.
- each attribute can be determined at random (e.g., using a random number generator).
- some or all of the attributes can be selected prior to generating training data or may be learned through an adaptive training model.
- Another example aspect of placing the virtual object in the AR scene can include detecting one or more surfaces depicted in the augmented reality view. For instance, in some implementations it may be advantageous to set a condition for defining the realism of the augmented image.
- Surface detection can be used to define certain coordinates or areas within the AR scene for placing the virtual object. Generally, realistic photos do not display objects floating in the middle of the air. Instead an object is sitting or leaning on a surface.
- a condition can be defined in some implementations that the seat of any virtual object is placed in contact with one of the surfaces. Alternatively, a condition can be defined in certain implementations that the seat is not in contact with any of the surfaces.
- the realism of certain objects within the augmented image may be modified based on the condition. Further, this information can be included as metadata or associated with the augmented image as a label that can subsequently be used to train a machine learned model to detect altered or less realistic images.
- the augmented image can be constructed to improve training machine learned models for certain tasks by adjusting how to determine the position and/or the orientation of the virtual object.
- the position of the virtual object can be limited such that physical elements in the AR scene block at least some of the virtual object depicted in the augmented image. This can be used to develop machine learned models to detect obstructed objects. Therefore, in some embodiments, positions of one or more physical elements may be determined in the AR scene, followed by one or more virtual models being positioned such that they are partially obscured behind one or more of the physical elements. Alternatively, in some training embodiments, blocked views from objects in the AR scene may be discarded or otherwise removed from the AR scene or the augmented image so that training data can be generated that only includes unobscured views.
- Example implementations of the disclosure may further include storing the augmented image as training data within a machine-learning training dataset.
- the machine-learning training dataset can optionally include additional training data other than synthetic data.
- real images or real objects placed within AR scenes can be included as additional training data.
- aspects of the real images can include labels that can be used for comparing a statistic (e.g., accuracy) determined by a machine learned model trained on synthetic data for performing the trained task on real data.
- the stored augmented image can be associated with a training label for inclusion in the machine learning training dataset.
- the training label can include information related to the AR scene or associated with the virtual object.
- Example information can identify the virtual object (e.g., a shoe); indicate the position of the virtual object within the scene (e.g., a coordinate location and/or a bounding box); indicate the orientation of the virtual object within the scene (e.g., a profile or six degree of freedom description); obstruction information that describes obstructions of the virtual object; and/or other information descriptive of the virtual object.
- example information may include one or more of: camera angle, lighting, image realism, surface coordinates; depth; visibility; segmentation; and/or other information about the scene.
- Advantages and other technical effects related to the disclosure can include faster generation of training data as well as automation of data labeling which together can reduce cost and time associated with training machine learned models. Additionally, the control of virtual models and/or objects can be used to specify certain tasks and more quickly generate relevant data. As yet another example, by producing more realistic synthetic training data, the machine-learned models that are trained on such training data can have improved performance (e.g., improved detection, faster recognition, etc.).
- additional applications having the synthetic data generation system and one or more machine learning models included or in communication with example implementations may be used to create feedback for automatically setting and/or adjusting parameters for generating the AR-assisted synthetic data based in part on output from at least one of the one or more machine learning models.
- This automated feedback and data generation may be used to explore previously unrecognized training tasks that can further advance the field of computer vision.
- FIG. 1 depicts a block diagram of an example computing system 100 for generating synthetic training data according to example embodiments of the present disclosure.
- the system 100 can include a user computing device 102 , a server computing system 130 , and a training computing system 150 that can also be communicatively coupled over a network 180 .
- the user computing device 102 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
- a personal computing device e.g., laptop or desktop
- a mobile computing device e.g., smartphone or tablet
- a gaming console or controller e.g., a gaming console or controller
- a wearable computing device e.g., an embedded computing device, or any other type of computing device.
- the user computing device 102 can include one or more processors 112 and memory 114 .
- the one or more processors 112 can be, for example, any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 114 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 114 can store data 116 and instructions 118 which are executed by the one or more processors 112 to cause the user computing device 102 to perform operations.
- the user computing device 102 can store or access one or more synthetic data generation systems 120 .
- the synthetic data generation systems 120 can be or can otherwise include various scanners, augmented reality engines, multi-camera systems, or other similar systems for generating a 3D representation of an object and/or an environment.
- the 3D representations can provide mesh models or other similar models of surfaces defining external features of the object as well as physical boundaries and/or objects in the environment.
- the synthetic data generation systems can include or otherwise access image processing applications configured to work with 3D representations (e.g., by stitching together one or more individual image frames to generate a 3D model). These applications can include features for defining a 3D environment (e.g., by stitching together multiple image frames depicting the environment) as well as modifying the 3D environment to produce an augmented image by placing one or more items within the 3D environment.
- placing a 3D virtual object within the 3D environment can include specifying a position within the 3D environment as well as an orientation for the 3D virtual object.
- Generating the augmented image can then include modifying one or more image frames that together define the 3D environment to include a view of the 3D virtual object, based at least in part on the position and the orientation.
- the augmented image may only include a single frame depicting an area of the 3D environment modified to include the view of the 3D virtual object.
- the augmented image may include a plurality of frames that together display various views of the 3D virtual object in the scene.
- certain 3D image processing applications may take the augmented image or data including the augmented image as an input and provide a 3D scene depicting the virtual object within the environment at the specified orientation and position.
- the one or more synthetic data generation systems 120 can be received from the server computing system 130 over network 180 , stored in the user computing device memory 114 , and then used or otherwise implemented by the one or more processors 112 .
- the user computing device 102 can implement multiple parallel instances of a single synthetic data generation system 120 (e.g., to perform image processing, 3D-scanning, or other similar applications in parallel.) These use cases may provide advantages when a large corpus of training data is needed or for certain implementations where synthetic training data is concurrently provided to a machine-learned model to produce a feedback loop based on the quality or another aspect of the synthetic training data.
- the synthetic data generation system 120 can function to perform operations such as obtaining a three-dimensional model of an object (referred to hereafter as the virtual object) and obtaining data that includes one or more image frames displaying a scene.
- the synthetic data generation system 120 can also determine a position and an orientation for the virtual object within the scene. In general, the position and the orientation may be determined at random, based on a user selection, and can be determined independently of one or the other. Based at least on the position and the orientation, the synthetic data generation system 120 can generate, using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene.
- the synthetic data generation system 120 or other instructions 118 included as part of the memory 114 may be executed to store the augmented image as a training image within a machine learning training dataset that can be accessed by a training system 150 .
- the training image can also be associated with a training label that identifies one or more of: the identity of the virtual object (e.g., a shoe), the position of the virtual object (e.g., a coordinate corresponding to a location in the 3D environment), and/or an orientation of the virtual object (e.g., an area of the virtual object, a rotation, a camera pose, or combinations thereof).
- the server computing system 130 can include one or more processors 132 and a memory 134 .
- the one or more processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 134 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 134 can store data 136 and instructions 138 which are executed by the processor 132 to cause the server computing system 130 to perform operations.
- the server computing system 130 may include or is otherwise implemented by one or more server computing devices. In instances in which the server computing system 130 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof.
- the server computing system 130 can store or otherwise include one or more synthetic data generation systems 140 .
- the synthetic data generation systems 140 can be or can otherwise include various image processing engines including augmented reality engines and may also include scanning systems for generating 3D representations of physical objects and/or environments.
- the server computing system 130 , the user computing device 102 , or both can also include a machine learned model.
- Example machine-learned models include neural networks or other multi-layer non-linear models.
- Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks.
- the user computing device 102 and/or the server computing system 130 can train the models via interaction with the training system 150 that is communicatively coupled over the network 180 .
- the training computing system 150 can be separate from the server computing system 130 or can be included as a portion of the server computing system 130 .
- the training computing system 150 can include one or more processors 152 and a memory 154 .
- the one or more processors 152 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected.
- the memory 154 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof.
- the memory 154 can store data 156 and instructions 158 which are executed by the processor 152 to cause the training computing system 150 to perform operations.
- the training computing system 150 may include or can otherwise be implemented by one or more server computing devices.
- the training computing system 150 can include a model trainer 160 that trains the machine-learned models that can be stored at the user computing device 102 and/or the server computing system 130 using various training or learning techniques, such as, for example, backwards propagation of errors.
- performing backwards propagation of errors can include performing truncated backpropagation through time.
- the model trainer 160 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained.
- Training the machine learned model can include a variety of techniques and methods.
- training can include receiving, as input to the machine learned model, training data from the training dataset, such as an augmented image.
- the machine learning model can process the input to generate a predicted output.
- the predicted output may, for example include classifications, locations and/or orientations of one or more objects within the image. Classifications of objects may be determined from a probability distribution over a set of potential classifications.
- the output of the machine learned model may be compared to known labels associated with the input training data, such as known classifications, locations and/or orientations of one or more objects within the image. The comparison may, for example, be performed by means of a loss function/objective function.
- the machine learned model may be updated. For example, if the machine learning model is a neural network, weights and biases in the network may be updated using an optimization procedure, such as gradient descent. The training process may be iterated until a threshold condition is met, such as a threshold number of iterations or a threshold accuracy on a test dataset being reached.
- a threshold condition such as a threshold number of iterations or a threshold accuracy on a test dataset being reached.
- the model trainer 160 can train the machine learned models based on a set of training data 162 .
- the training data 162 can include, for example, synthetic datasets that include one or more augmented images produced using the one or more synthetic data generation systems 120 and 140 .
- Example advantages of computing systems according to the present disclosure, as exemplified in FIG. 1 can include the automated generation of labeled data. For instance, attributes of the augmented images such as environmental metadata or other information associated with the virtual environment may be included as training labels associated with the training image in the machine learning training dataset. Additionally or alternatively, further attributes such as object metadata or other information associated with the virtual object can also be included as training labels associated with the training image in the machine learning training dataset. Since these labels can be related to aspects of the augmented image and/or aspects of generating the augmented image, each label can be generated automatically without the need for review by an expert. This can lead to reduced costs and an increased scale at which example implementations can produce synthetic data.
- the model trainer 160 can include computer logic utilized to provide desired functionality.
- the model trainer 160 can be implemented in hardware, firmware, and/or software controlling a general-purpose processor.
- the model trainer 160 includes program files stored on a storage device, loaded into a memory and executed by one or more processors.
- the model trainer 160 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or optical or magnetic media.
- the network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links.
- communication over the network 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- FIG. 1 illustrates one example computing system that can be used to implement the present disclosure.
- the user computing device 102 can include the model trainer 160 and the training dataset 162 .
- the machine-learned models can be both trained and used locally at the user computing device 102 .
- the user computing device 102 and/or the server computing system 130 can include a number of applications (e.g., applications 1 through N).
- Each application can contain include an application programming interface (API) for accessing one or more operations performed by the application (e.g., image display, image processing, augmented reality engines, camera applications, file or data transmission, wireless communication or connection etc.)
- API application programming interface
- each application can communicate with one or more other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components.
- each application can communicate with each device component using an API (e.g., a public API).
- the API used by each application is specific to that application.
- FIG. 2 depicts a flow chart diagram of an example method for generating training data according to example embodiments of the present disclosure.
- FIG. 2 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of the method 200 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure.
- a computing system can obtain a three-dimensional model of a virtual object.
- obtaining the three-dimensional model of the virtual object can include constructing the virtual object from multiple images, at varying positions and/or angles of the object.
- three-dimensional model datasets that have been produced using similar techniques may be accessed (e.g., by transmitting said datasets to example implementations).
- the three-dimensional model datasets can be publicly available or privately maintained and obtaining the datasets can be accomplished using hardwired connections or physical media.
- the datasets can be received using wireless connections such as over the internet or Bluetooth.
- file(s) encoding the virtual object can be stored locally on memory or may be accessed remotely without the need to copy or transfer the file(s).
- the computing system can obtain data comprising one or more image frames that depict a scene.
- the computing system can obtain data comprising one or more image frames using a device to capture one or more video sequences of a scene (e.g., a session).
- the device can include a personal device such as a smartphone that includes an AR engine configured for AR generation (e.g., ARKit or ARCore).
- the device can be connected to a plurality of cameras to capture different views of a scene at substantially the same time or in a sequence.
- the AR engine can be configured to estimate features and planes with 3D coordinates, as well as lighting of the scene.
- obtaining data comprising one or more image frames 204 can include accessing stored data or files that are publicly available or privately maintained using hardwired and/or wireless connections.
- obtaining the three-dimensional model 202 and the data comprising one or more image frames 204 may be performed in parallel or combined into a single operation (e.g., by associating or combining the three-dimensional model with the data comprising one or more image frames, by collecting imagery of the object and image frames of the scene at substantially the same time, etc.)
- the computing system can determine a position and an orientation for the virtual object within the scene.
- determining the position and the orientation can include accessing information associated with the one or more image frames such as a 3D mesh defining the location of physical objects or surfaces within the image frame, a depth map for transforming locations in a two-dimensional image frame to three-dimensional coordinates, and/or a visibility map.
- the position and or the orientation can include substantially any coordinate location in the scene or image frame or any orientation of the virtual object.
- improved simulated data quality or data realism can be achieved by limiting the position to certain coordinate locations such that the position of the virtual object is determined based on locations in contact with a surface of the scene (e.g., by identifying surfaces based on the mesh map).
- Determining the position of the virtual object can also include generating a reference frame (e.g., a coordinate frame) for the virtual object defining one or more axes.
- the one or more axes can provide translational and rotational definitions so that the reference frame for the virtual object can be mapped to a location in the scene at a coordinate position based on the one or more axes and rotated along the one or more axes to determine the orientation.
- the virtual object may define one or more seats indicating possible planar boundaries for placing the virtual object in the scene. Determining the position and the orientation can then include identifying a substantially planar surface in the scene (e.g., a table or other surface normal to gravity) and placing the virtual object in the scene so that the seat of the virtual object is in contact with the substantially planar surface.
- the orientation can be determined by rotating the virtual object along an axis normal to the seat in contact with the substantially planar surface.
- the computing system can generate, using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene at the position and the orientation.
- example computing systems can include logic or other instructions for determine the position and the orientation according to 206 .
- one aspect of generating the augmented image can include defining a training task.
- various augmented images can be constructed to improve training machine learned models for certain tasks by adjusting how to determine the position of the virtual object.
- the position of the virtual object can be limited such that physical elements in the AR scene block at least some of the virtual object in one of the AR scene views. This can be used to improve training models to detect obstructed objects.
- blocked views from objects in the AR scene may be discarded or otherwise removed from the AR scene or the augmented image so that training data can be generated that only includes unobscured views.
- AR engines may have access to datasets including one or more virtual objects that may each have various sizes, shapes or other properties.
- Example systems and methods can determine a position and an orientation for one or more virtual objects included in the dataset to generate augmented images displaying the AR scene with multiple virtual objects. This may provide advances for generating training data for highly dense navigation scenarios such as object detection and avoidance in traffic.
- the computing system can store the augmented image as a training image within a machine learning training dataset.
- the machine-learning training dataset can include additional training data other than synthetic data.
- real images or real objects placed within AR scenes can be included as additional training data.
- aspects of the real images can include labels that can be used for comparing a statistic (e.g., accuracy) determined by a machine learned model trained on synthetic data for performing the trained task on real data.
- storing the augmented image as a training image can include processing the augmented image (e.g., to generate an embedding or a normalized representation) to generate the training image.
- the training image need not include an image file and can include other data representations derived from the augmented image.
- the computing system can associate a training label with the training image in the machine learning training dataset, the training label indicating at least one of: identifies the virtual object, indicates the position of the virtual object within the scene, or indicates the orientation of the virtual object within the scene.
- the training label may include other attributes of the training image such as associating a label based on the task defined for generating the augmented image.
- Other training labels can include labeling the data as synthetic (e.g., computer-generated).
- the additional training labels (e.g., synthetic) may be used for feedback such as training a machine-learned model to determine parameters for generating more photo-realistic synthetic images by classifying one or more augmented images produced according to the present disclosure.
- associating the training label can include generating a separate file that is indexed or otherwise linked to the training image. Additionally, since the training image can be encoded in various data representations, associating the training label can include modifying the training image to include the label or labels.
- FIGS. 3 A and 3 B depicts aspects of example virtual objects that can be used to produce an augmented image according to the present disclosure.
- the virtual object can include visual features that substantially represent the physical object used to produce the virtual object.
- surface features of a shoe can include the laces, sole, and body.
- additional features such as coloring can also be associated with one or more regions of the virtual object.
- the virtual object can be associated with the metadata or referenced to information that is not necessarily displayed in the augmented image. For example, one or more seats defining external boundaries of the virtual object can be included.
- the one or more seats can comprise a bounding box having 6 planar surfaces that together define a top, bottom, front, back, left, and right of the virtual object.
- the seats can be defined such that only some of the seats can be in contact with the virtual environment (e.g., a planar surface/seat having an “x” may be excluded from contact with the virtual environment.
- the virtual object can be associated with a coordinate frame such as a 3-dimensional coordinate frame having an x-y-z-axes.
- FIG. 3 A displays three axes normal to one another. Though not limited to such reference frames, the axes and/or the seats may serve as one possible reference frame for determining the orientation and/or the position according to example implementations of the present disclosure.
- FIG. 4 depicts an example reference frame for determining the orientation and/or the position. Though illustrated as a rectangular prism having 8 vertices and 6 faces, it should be understood that the number of vertices and faces may be greater or less than the number depicted. Further, some, all, or none of the information associated with the reference frame may be included as one or more training labels that are associated with the training image.
- FIG. 5 depicts an example aspect for certain augmented images and methods for producing synthetic data in accordance with the present disclosure.
- the presence of physical objects within the scene can be used to streamline generating training data by discarding views and/or positions that are blocked by the physical object.
- generating synthetic training data can be improved by reducing the number of instances where a user or automated (e.g., random) selection would place the virtual object in a region of the augmented image that would be blocked.
- the augmented image can include a 3-dimensional representation including a plurality of image frames, in some instances, it may reduce CPU usage and/or energy costs to utilize some of the image frames depicting the scenes.
- each image frame can be taken from various positions and/or angles, this information can be used to generate augmented images that do not include a blocked view of the virtual object (e.g., by placing the virtual object at a position based at least on the location of a physical object in the scene and/or the camera position).
- augmented images can include 2-dimensional image frames that have a perspective based in part on the camera position.
- the camera position and or physical/real object in the scene may be used to discard certain positions or orientations for placing the virtual object in the scene.
- FIGS. 6 A and 6 B display aspects of example augmented images generated according to example implementations of the present disclosure.
- two example augmented images are provided displaying three virtual shoes having different positions and orientations. Bothe the left image and the right display the same scene at different camera positions.
- FIG. 6 B the same augmented images in FIG. 6 A are shown to further include data such as the seats, bounding boxes, and/or coordinate locations. While these elements are depicted in FIG. 6 B , it should be understood that the data may be otherwise associated with the images, including in a separate label file. Thus the images themselves need not display the seats bounding boxes, coordinate locations or other associated data that can be used to label the augmented image.
- associating a training label with the training image can include generating, for all or a portion of the image frames included in the augmented image, one or more labels providing, three-dimensional coordinates of bounding box vertices in the camera frame, the corresponding 2D coordinates in an image frame, a projection matrix, and a view matrix. Aspects of the projection matrix and the view matrix can be used to determine a camera pose describing in part the camera position and/or orientation.
- FIGS. 6 C and 6 D display further aspects of certain example training data.
- the depth of the virtual object in the scene can be determined by the AR engine.
- FIG. 6 C illustrates the depth information using a normalized grayscale image.
- FIGS. 7 A- 7 F display example synthetic data including augmented images displaying a virtual object within a scene.
- FIGS. 7 A, 7 B and 7 E display images of a scene having one or more virtual boxes of varying sizes placed in the scene.
- FIGS. 7 C, 7 D and 7 F display images of a scene having one or more virtual shoes placed in the scene.
- the examples of virtual boxes and virtual shoes are provided as example of virtual objects and are not intended to limit the scope or types of virtual objects that can be used to produce augmented images.
- the technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems.
- the inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components.
- processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination.
- Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
Abstract
The present disclosure is directed to systems and methods for generating synthetic training data using augmented reality (AR) techniques. For example, images of a scene can be used to generate a three-dimensional mapping of the scene. The three-dimensional mapping may be associated with the images to indicate locations for positioning a virtual object. Using an AR rendering engine, implementations can generate an and orientation. The augmented image can then be stored in a machine learning dataset and associated with a label based on aspects of the virtual object.
Description
- The present disclosure relates generally to machine learning. More particularly, the present disclosure relates to computer-implemented systems and methods which can generate synthetic data from three-dimensional imagery such as augmented reality mapped environments and/or virtual objects. Aspects of the present disclosure can further include using the synthetic data for training machine learned models.
- Machine learning algorithms rely on data to learn patterns from images. However, collecting and labeling real data can be both expensive and time-consuming. As a result, it may be more economical and scalable to generate synthetic images rather than collecting and annotating real images. Typical techniques for generating synthetic images result in synthetic images that are of lower quality and “realism” relative to real world imagery (e.g., the synthetic images look “fake”). Because machine learning techniques are reliant upon training data, the use of unrealistic synthetic images can cause machine learning models trained on such synthetic images to exhibit poorer performance relative to those trained on real imagery. Therefore, generating photo-realistic synthetic images that better approximate real world imagery is highly desirable. Needed still are methods in the art for synthetic data generation for applications such as machine learning.
- The present disclosure is directed to systems and methods for generating synthetic training data using augmented reality (AR) techniques. For example, images of a scene can be used to generate a three-dimensional mapping of the scene. The three-dimensional mapping may be associated with the images to indicate locations for positioning a virtual object. Using an AR rendering engine, implementations can generate an augmented image depicting the virtual object within the scene at a position and orientation. The augmented image can then be stored in a machine learning dataset and associated with a label based on aspects of the virtual object.
- In this manner, training data that includes heavily dense scenes with large numbers of objects having varying sizes may be generated quickly at low costs. Further, the augmented images can be automatically labeled using example systems and methods to indicate the object position such as coordinate locations of bounding box edges. Other features such as an object name may also be used to label augmented images. Alternatively or additionally, the augmented image as a whole may be assigned a label to indicate properties such as image realism or conformance with natural laws such as gravity.
- Detailed discussion of embodiments directed to one of ordinary skill in the art is set forth in the specification, which makes reference to the appended figures, in which:
-
FIG. 1 depicts a block diagram of an example computing system according to example embodiments of the present disclosure. -
FIG. 2 depicts a block diagram of an example method for generating synthetic data according to example embodiments of the present disclosure. -
FIGS. 3A and 3B depict example illustrations of a virtual object defining multiple seats which together form a bounding box according to example aspects of embodiments of the present disclosure. -
FIG. 4 depicts an example virtual coordinate frame that can be used to define aspects, such as coordinate locations, of example embodiments according to the present disclosure. -
FIG. 5 depicts an example illustration demonstrating how perspective information such as camera pose may be used in some implementations to limit or discard certain views from the AR scene or the augmented image according to example embodiments of the present disclosure. -
FIG. 6A depicts example augmented images generated according to example embodiments of the present disclosure.FIGS. 6B-6D further illustrate features such as metadata that can be associated with the augmented images ofFIG. 6A . Specifically,FIG. 6B shows example bounding boxes for the virtual objects included in the example augmented images ofFIG. 6A ;FIG. 6C shows example depth and segmentation masks for the virtual objects included in the example augmented images ofFIG. 6A ; andFIG. 6D shows example visibility masks for the virtual objects included in the example augmented images ofFIG. 6A . -
FIGS. 7A-7F depict example augmented images generated according to example embodiments of the present disclosure. These images display the same AR scene including various virtual objects such as boxes (7A, 7B, and 7E) and shoes (7C, 7D, and 7F). - Reference numerals that are repeated across plural figures are intended to identify the same features in various implementations.
- Generally, the present disclosure is directed to systems and methods for generating synthetic training data for machine-learned models as well as using the synthetic training data to train machine-learned models. Aspects of example systems and methods can include automated labeling of the synthetic training data to streamline training machine-learned models using supervised learning techniques.
- As one example, computer vision models provide a machine learning tool for interpreting a three-dimensional (3D) environment for uses such as object detection and classification. To classify an object in a scene can require a model to not only understand what features of an object can be used to identify it with high confidence but also to search the scene for regions to use for classification or areas that may be obscured due to other imagery. Thus, training computer vision models can require larger and more complex labeling when compared to other machine learned models.
- Example implementations of the disclosure can use augmented reality (AR) techniques to generate synthetic training data. Generating the synthetic training data can include obtaining a virtual object such as a 3D model of a real object (e.g., a shoe) and positioning the virtual object in an augmented reality scene (AR scene). The AR scene can be understood as including one or more image frames depicting a physical location that can be associated with more detailed information about the 3D environment of the location such as depth. This information can be derived solely from the imagery using an AR engine or can be generated based on one or more of: the camera pose (e.g., camera position and orientation), lighting, or other sensor data (e.g., depth sensor data) that can be used to generate a point-cloud or mesh grid of physical items or surfaces within the scene. The AR scene and the virtual object can be combined to produce synthetic training data by utilizing AR technology to augment one or more image frames that depict the scene, thereby generating an augmented image displaying at least a portion of the virtual object at a location in the scene.
- Example advantages of the present disclosure include automated labeling of synthetic training data. For instance, the augmented image can further be stored as a training image within a machine learning training dataset. Implementations can also associate a training label with the training image in the machine learning dataset, the label indicating one or more of: identifies the virtual object (e.g., a shoe, a vase, or a camera), indicates the position of the virtual object (e.g., a coordinate point in the AR scene or an area in the augmented image), or indicates the orientation of the virtual object within the scene (e.g., an angle based on a reference frame).
- For implementations of the disclosure, the training object can be described by a virtual model. Virtual models can be constructed, for example, by 3D scanners or multi-camera systems that can stitch together images to create a volume representing the object including features such as size, shape, color, or other physical attributes. By combining the virtual model of the physical object with data including one or more image frames that depict a scene (e.g., an AR scene), an augmented image and/or a virtual scene can be generated for training machine-learned models (e.g., computer vision models). Machine-learned models trained on a dataset that includes such augmented images/virtual scenes may exhibit higher performance relative to those trained on synthetic imagery or a smaller training set of manually labelled images/scenes.
- Further, the augmented image can include or otherwise be associated with one or more labels defining ground truth aspects of the virtual object (e.g., position within the AR scene, orientation relative to a camera, contact area(s), etc.) and/or the AR scene (e.g., camera position, depth information, coordinate locations, etc.) that can be used in subsequently training a computer vision or other machine learned model. In this manner, both data generation and labeling can be streamlined using implementations according to the present disclosure, which may provide advantages in reducing costs and/or improving data diversity.
- While certain techniques can generate additional training data using data-augmentation, implementations of the present disclosure focus on generation of high-quality data by taking advantage of the control, precision, and realism provided by AR rendering engines and environments. Further, disclosed implementations can leverage the data associated with the virtual object and/or the virtual environment to automatically produce labeled training data.
- One example of obtaining data of a scene in augmented reality may include utilizing a device to capture one or more video sequences of a scene (e.g., a session). In some cases, the device can include a personal device such as a smartphone that includes an AR engine configured for AR generation (e.g., ARKit or ARCore). The AR engine can be configured to estimate features and planes with 3D coordinates, as well as lighting of the scene. During the session, a world frame can be defined depending on one or more configurations. For example, a gravity configuration can include 3 axes: a y-axis pointed up, parallel to gravity, a z-axis pointing outward from the screen (or normal to the camera), and an x-axis perpendicular to both the y-axis and z-axis. In some cases, an origin can be defined as the initial position of the device during the session. In general, the AR session data can be used to construct an AR scene using a suitable AR engine and/or application.
- Further, the AR session data may include one or more image frames that depict a scene. The one or more image frames may depict the scene from various positions and/or camera angles that together can be used to generate a mapping of the scene including objects and or surfaces depicted in the scene. In some cases, the image frames may be associated with depth data that can be also be used in generating the mapping of the scene.
- While certain implementations can include obtaining the AR session data using an AR device, alternative implementations may access saved AR session data or may access video data which includes one or more image frames and/or other sensor data that together have sufficient information for generating an AR view of a scene. Thus, generally implementations according to the present disclosure can include obtaining data that comprises one or more image frames that depict a scene.
- In addition to obtaining data of a scene in AR, implementations of the disclosure can include obtaining a three-dimensional model of an object (e.g., a virtual object). Techniques for obtaining the virtual object can include object scanning, multi-view cameras, or other image stitching methods to generate a substantially accurate representation of the object in 3D. A model of a virtual object can also be accessed from a database.
- After obtaining the data of a scene in augmented reality and a three-dimensional model of a virtual object, a reference frame can be determined for placing the model in the AR scene. For example, a reference frame can include defining one or more seats that represent possible planar regions on the exterior of the virtual object for positioning the virtual object in the AR scene. Generally, the planar regions do not need to be on or in contact with the virtual object and may be understood as representing a hypothetical volume encompassing the virtual object or a region of the hypothetical volume.
- As an example, the one or more seats can together define a bounding box having a rectangular volume that encapsulates the entirety of the virtual object. Each face of the rectangular volume can be considered one seat (6 seats total) for positioning the object in the AR scene. In some cases, further seats can be included. For instance, certain objects may be better defined by volumes composed of 10 or more planar faces which may provide greater control in placing objects that include curved surfaces. Alternatively, in certain implementations the number of seats may be limited (e.g., 1 seat total) to indicate a correct or preferred orientation for the virtual object.
- In some implementations of the disclosure, the one or more seats may be used to define an orientation axis. For example, the augmented image can depict one or more instances of the virtual object within the scene. In positioning the virtual object(s) within the scene, a seat can be chosen (e.g., at random, based on an input, otherwise encoded in hardware and/or software, etc.). The seat can describe a bottom region for the virtual object, thus setting a first orientation. A second orientation can be determined by rotating the virtual object about the axis normal to the seat. As an example for illustration, if a virtual object were to be placed on the ground in the AR scene, the seat would be in contact with the ground and the virtual object could be rotated around the direction of gravity to yield various second orientations.
- Aspects of placing the virtual object in the AR scene may include determining the seat, the orientation, and/or the position within the AR scene. As discussed, in some implementations, each attribute can be determined at random (e.g., using a random number generator). Alternatively, for certain implementations some or all of the attributes can be selected prior to generating training data or may be learned through an adaptive training model.
- Another example aspect of placing the virtual object in the AR scene can include detecting one or more surfaces depicted in the augmented reality view. For instance, in some implementations it may be advantageous to set a condition for defining the realism of the augmented image. Surface detection can be used to define certain coordinates or areas within the AR scene for placing the virtual object. Generally, realistic photos do not display objects floating in the middle of the air. Instead an object is sitting or leaning on a surface. Using the one or more surfaces, a condition can be defined in some implementations that the seat of any virtual object is placed in contact with one of the surfaces. Alternatively, a condition can be defined in certain implementations that the seat is not in contact with any of the surfaces. In this manner, the realism of certain objects within the augmented image may be modified based on the condition. Further, this information can be included as metadata or associated with the augmented image as a label that can subsequently be used to train a machine learned model to detect altered or less realistic images.
- Another example aspect of placing the virtual object in the AR scene can include defining a training task. As an example, using the AR scene combined with a virtual object, the augmented image can be constructed to improve training machine learned models for certain tasks by adjusting how to determine the position and/or the orientation of the virtual object. For instance, in some implementations, the position of the virtual object can be limited such that physical elements in the AR scene block at least some of the virtual object depicted in the augmented image. This can be used to develop machine learned models to detect obstructed objects. Therefore, in some embodiments, positions of one or more physical elements may be determined in the AR scene, followed by one or more virtual models being positioned such that they are partially obscured behind one or more of the physical elements. Alternatively, in some training embodiments, blocked views from objects in the AR scene may be discarded or otherwise removed from the AR scene or the augmented image so that training data can be generated that only includes unobscured views.
- Example implementations of the disclosure may further include storing the augmented image as training data within a machine-learning training dataset. The machine-learning training dataset can optionally include additional training data other than synthetic data. For example, real images or real objects placed within AR scenes can be included as additional training data. Aspects of the real images can include labels that can be used for comparing a statistic (e.g., accuracy) determined by a machine learned model trained on synthetic data for performing the trained task on real data.
- For certain implementations, the stored augmented image can be associated with a training label for inclusion in the machine learning training dataset. The training label can include information related to the AR scene or associated with the virtual object. Example information can identify the virtual object (e.g., a shoe); indicate the position of the virtual object within the scene (e.g., a coordinate location and/or a bounding box); indicate the orientation of the virtual object within the scene (e.g., a profile or six degree of freedom description); obstruction information that describes obstructions of the virtual object; and/or other information descriptive of the virtual object. Additionally or alternatively, example information may include one or more of: camera angle, lighting, image realism, surface coordinates; depth; visibility; segmentation; and/or other information about the scene.
- Advantages and other technical effects related to the disclosure can include faster generation of training data as well as automation of data labeling which together can reduce cost and time associated with training machine learned models. Additionally, the control of virtual models and/or objects can be used to specify certain tasks and more quickly generate relevant data. As yet another example, by producing more realistic synthetic training data, the machine-learned models that are trained on such training data can have improved performance (e.g., improved detection, faster recognition, etc.).
- Further, additional applications having the synthetic data generation system and one or more machine learning models included or in communication with example implementations may be used to create feedback for automatically setting and/or adjusting parameters for generating the AR-assisted synthetic data based in part on output from at least one of the one or more machine learning models. This automated feedback and data generation may be used to explore previously unrecognized training tasks that can further advance the field of computer vision.
- With reference now to the Figures, example embodiments of the present disclosure will be discussed in further detail.
-
FIG. 1 depicts a block diagram of anexample computing system 100 for generating synthetic training data according to example embodiments of the present disclosure. Thesystem 100 can include auser computing device 102, aserver computing system 130, and atraining computing system 150 that can also be communicatively coupled over anetwork 180. - The
user computing device 102 can be any type of computing device, such as, for example, a personal computing device (e.g., laptop or desktop), a mobile computing device (e.g., smartphone or tablet), a gaming console or controller, a wearable computing device, an embedded computing device, or any other type of computing device. - The
user computing device 102 can include one ormore processors 112 andmemory 114. The one ormore processors 112 can be, for example, any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 114 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 114 can storedata 116 andinstructions 118 which are executed by the one ormore processors 112 to cause theuser computing device 102 to perform operations. - In some implementations, the
user computing device 102 can store or access one or more syntheticdata generation systems 120. For example, the syntheticdata generation systems 120 can be or can otherwise include various scanners, augmented reality engines, multi-camera systems, or other similar systems for generating a 3D representation of an object and/or an environment. The 3D representations can provide mesh models or other similar models of surfaces defining external features of the object as well as physical boundaries and/or objects in the environment. Alternatively or additionally, the synthetic data generation systems can include or otherwise access image processing applications configured to work with 3D representations (e.g., by stitching together one or more individual image frames to generate a 3D model). These applications can include features for defining a 3D environment (e.g., by stitching together multiple image frames depicting the environment) as well as modifying the 3D environment to produce an augmented image by placing one or more items within the 3D environment. - As an example, placing a 3D virtual object within the 3D environment can include specifying a position within the 3D environment as well as an orientation for the 3D virtual object. Generating the augmented image can then include modifying one or more image frames that together define the 3D environment to include a view of the 3D virtual object, based at least in part on the position and the orientation. For certain implementations, the augmented image may only include a single frame depicting an area of the 3D environment modified to include the view of the 3D virtual object. Alternatively, for some implementations, the augmented image may include a plurality of frames that together display various views of the 3D virtual object in the scene. Further, certain 3D image processing applications may take the augmented image or data including the augmented image as an input and provide a 3D scene depicting the virtual object within the environment at the specified orientation and position.
- In some implementations, the one or more synthetic
data generation systems 120 can be received from theserver computing system 130 overnetwork 180, stored in the usercomputing device memory 114, and then used or otherwise implemented by the one ormore processors 112. In some implementations, theuser computing device 102 can implement multiple parallel instances of a single synthetic data generation system 120 (e.g., to perform image processing, 3D-scanning, or other similar applications in parallel.) These use cases may provide advantages when a large corpus of training data is needed or for certain implementations where synthetic training data is concurrently provided to a machine-learned model to produce a feedback loop based on the quality or another aspect of the synthetic training data. - More particularly, the synthetic
data generation system 120 can function to perform operations such as obtaining a three-dimensional model of an object (referred to hereafter as the virtual object) and obtaining data that includes one or more image frames displaying a scene. As previously stated, the syntheticdata generation system 120 can also determine a position and an orientation for the virtual object within the scene. In general, the position and the orientation may be determined at random, based on a user selection, and can be determined independently of one or the other. Based at least on the position and the orientation, the syntheticdata generation system 120 can generate, using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene. - For certain implementations, the synthetic
data generation system 120 orother instructions 118 included as part of thememory 114 may be executed to store the augmented image as a training image within a machine learning training dataset that can be accessed by atraining system 150. The training image can also be associated with a training label that identifies one or more of: the identity of the virtual object (e.g., a shoe), the position of the virtual object (e.g., a coordinate corresponding to a location in the 3D environment), and/or an orientation of the virtual object (e.g., an area of the virtual object, a rotation, a camera pose, or combinations thereof). - The
server computing system 130 can include one ormore processors 132 and amemory 134. The one ormore processors 132 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 134 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 134 can storedata 136 andinstructions 138 which are executed by theprocessor 132 to cause theserver computing system 130 to perform operations. - In some implementations, the
server computing system 130 may include or is otherwise implemented by one or more server computing devices. In instances in which theserver computing system 130 includes plural server computing devices, such server computing devices can operate according to sequential computing architectures, parallel computing architectures, or some combination thereof. - As described above for the
user computing device 102, theserver computing system 130 can store or otherwise include one or more syntheticdata generation systems 140. For example, the syntheticdata generation systems 140 can be or can otherwise include various image processing engines including augmented reality engines and may also include scanning systems for generating 3D representations of physical objects and/or environments. For certain implementations, theserver computing system 130, theuser computing device 102, or both can also include a machine learned model. Example machine-learned models include neural networks or other multi-layer non-linear models. Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks. - The
user computing device 102 and/or theserver computing system 130 can train the models via interaction with thetraining system 150 that is communicatively coupled over thenetwork 180. Thetraining computing system 150 can be separate from theserver computing system 130 or can be included as a portion of theserver computing system 130. - The
training computing system 150 can include one ormore processors 152 and amemory 154. The one ormore processors 152 can be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, a FPGA, a controller, a microcontroller, etc.) and can be one processor or a plurality of processors that are operatively connected. Thememory 154 can include one or more non-transitory computer-readable storage mediums, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Thememory 154 can storedata 156 andinstructions 158 which are executed by theprocessor 152 to cause thetraining computing system 150 to perform operations. In some implementations, thetraining computing system 150 may include or can otherwise be implemented by one or more server computing devices. - The
training computing system 150 can include amodel trainer 160 that trains the machine-learned models that can be stored at theuser computing device 102 and/or theserver computing system 130 using various training or learning techniques, such as, for example, backwards propagation of errors. In some implementations, performing backwards propagation of errors can include performing truncated backpropagation through time. Themodel trainer 160 can perform a number of generalization techniques (e.g., weight decays, dropouts, etc.) to improve the generalization capability of the models being trained. - Training the machine learned model can include a variety of techniques and methods. As one example, training can include receiving, as input to the machine learned model, training data from the training dataset, such as an augmented image. The machine learning model can process the input to generate a predicted output. The predicted output may, for example include classifications, locations and/or orientations of one or more objects within the image. Classifications of objects may be determined from a probability distribution over a set of potential classifications. If the training is accomplished using a supervised technique, the output of the machine learned model may be compared to known labels associated with the input training data, such as known classifications, locations and/or orientations of one or more objects within the image. The comparison may, for example, be performed by means of a loss function/objective function. An example of such a loss function for classification tasks is a cross-entropy loss, though other loss functions may alternatively be used. Based on the comparison, the machine learned model may be updated. For example, if the machine learning model is a neural network, weights and biases in the network may be updated using an optimization procedure, such as gradient descent. The training process may be iterated until a threshold condition is met, such as a threshold number of iterations or a threshold accuracy on a test dataset being reached.
- In particular, the
model trainer 160 can train the machine learned models based on a set oftraining data 162. Thetraining data 162 can include, for example, synthetic datasets that include one or more augmented images produced using the one or more syntheticdata generation systems FIG. 1 , can include the automated generation of labeled data. For instance, attributes of the augmented images such as environmental metadata or other information associated with the virtual environment may be included as training labels associated with the training image in the machine learning training dataset. Additionally or alternatively, further attributes such as object metadata or other information associated with the virtual object can also be included as training labels associated with the training image in the machine learning training dataset. Since these labels can be related to aspects of the augmented image and/or aspects of generating the augmented image, each label can be generated automatically without the need for review by an expert. This can lead to reduced costs and an increased scale at which example implementations can produce synthetic data. - The
model trainer 160 can include computer logic utilized to provide desired functionality. Themodel trainer 160 can be implemented in hardware, firmware, and/or software controlling a general-purpose processor. For example, in some implementations, themodel trainer 160 includes program files stored on a storage device, loaded into a memory and executed by one or more processors. In other implementations, themodel trainer 160 includes one or more sets of computer-executable instructions that are stored in a tangible computer-readable storage medium such as RAM hard disk or optical or magnetic media. - The
network 180 can be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof and can include any number of wired or wireless links. In general, communication over thenetwork 180 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL). -
FIG. 1 illustrates one example computing system that can be used to implement the present disclosure. Other computing systems can be used as well. For example, in some implementations, theuser computing device 102 can include themodel trainer 160 and thetraining dataset 162. In such implementations, the machine-learned models can be both trained and used locally at theuser computing device 102. - As disclosed, the
user computing device 102 and/or theserver computing system 130 can include a number of applications (e.g.,applications 1 through N). Each application can contain include an application programming interface (API) for accessing one or more operations performed by the application (e.g., image display, image processing, augmented reality engines, camera applications, file or data transmission, wireless communication or connection etc.) For example, in some implementations each application can communicate with one or more other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In certain implementations, each application can communicate with each device component using an API (e.g., a public API). In some implementations, the API used by each application is specific to that application. -
FIG. 2 depicts a flow chart diagram of an example method for generating training data according to example embodiments of the present disclosure. AlthoughFIG. 2 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particularly illustrated order or arrangement. The various steps of themethod 200 can be omitted, rearranged, combined, and/or adapted in various ways without deviating from the scope of the present disclosure. - At 202, a computing system can obtain a three-dimensional model of a virtual object. In general, obtaining the three-dimensional model of the virtual object can include constructing the virtual object from multiple images, at varying positions and/or angles of the object. Alternatively, three-dimensional model datasets that have been produced using similar techniques may be accessed (e.g., by transmitting said datasets to example implementations). The three-dimensional model datasets can be publicly available or privately maintained and obtaining the datasets can be accomplished using hardwired connections or physical media. Alternatively, the datasets can be received using wireless connections such as over the internet or Bluetooth. For example computing systems, file(s) encoding the virtual object can be stored locally on memory or may be accessed remotely without the need to copy or transfer the file(s).
- At 204, the computing system can obtain data comprising one or more image frames that depict a scene. In some implementations, the computing system can obtain data comprising one or more image frames using a device to capture one or more video sequences of a scene (e.g., a session). In some cases, the device can include a personal device such as a smartphone that includes an AR engine configured for AR generation (e.g., ARKit or ARCore). In certain cases, the device can be connected to a plurality of cameras to capture different views of a scene at substantially the same time or in a sequence. The AR engine can be configured to estimate features and planes with 3D coordinates, as well as lighting of the scene. Similarly to obtaining the three-
dimensional model 202, obtaining data comprising one or more image frames 204 can include accessing stored data or files that are publicly available or privately maintained using hardwired and/or wireless connections. Thus, while shown as two different steps inFIG. 2 , it should be understood that obtaining the three-dimensional model 202 and the data comprising one or more image frames 204 may be performed in parallel or combined into a single operation (e.g., by associating or combining the three-dimensional model with the data comprising one or more image frames, by collecting imagery of the object and image frames of the scene at substantially the same time, etc.) - At 206, the computing system can determine a position and an orientation for the virtual object within the scene. In an example implementation, determining the position and the orientation can include accessing information associated with the one or more image frames such as a 3D mesh defining the location of physical objects or surfaces within the image frame, a depth map for transforming locations in a two-dimensional image frame to three-dimensional coordinates, and/or a visibility map. In certain implementations, the position and or the orientation can include substantially any coordinate location in the scene or image frame or any orientation of the virtual object. For some implementations, improved simulated data quality or data realism can be achieved by limiting the position to certain coordinate locations such that the position of the virtual object is determined based on locations in contact with a surface of the scene (e.g., by identifying surfaces based on the mesh map). Determining the position of the virtual object can also include generating a reference frame (e.g., a coordinate frame) for the virtual object defining one or more axes. The one or more axes can provide translational and rotational definitions so that the reference frame for the virtual object can be mapped to a location in the scene at a coordinate position based on the one or more axes and rotated along the one or more axes to determine the orientation. As another example, the virtual object may define one or more seats indicating possible planar boundaries for placing the virtual object in the scene. Determining the position and the orientation can then include identifying a substantially planar surface in the scene (e.g., a table or other surface normal to gravity) and placing the virtual object in the scene so that the seat of the virtual object is in contact with the substantially planar surface. The orientation can be determined by rotating the virtual object along an axis normal to the seat in contact with the substantially planar surface.
- At 208, the computing system can generate, using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene at the position and the orientation. For generating the augmented image, example computing systems according to the present disclosure can include logic or other instructions for determine the position and the orientation according to 206. For instance, one aspect of generating the augmented image can include defining a training task. As an example, various augmented images can be constructed to improve training machine learned models for certain tasks by adjusting how to determine the position of the virtual object. For instance, in some implementations, the position of the virtual object can be limited such that physical elements in the AR scene block at least some of the virtual object in one of the AR scene views. This can be used to improve training models to detect obstructed objects. Alternatively, in some training embodiments, blocked views from objects in the AR scene may be discarded or otherwise removed from the AR scene or the augmented image so that training data can be generated that only includes unobscured views.
- Further, while exemplified throughout the present disclosure as generating an augmented image depicting the virtual object within the scene, it should be understood that one or more virtual objects may be included in augmented images according to the present disclosure. For example, AR engines may have access to datasets including one or more virtual objects that may each have various sizes, shapes or other properties. Example systems and methods can determine a position and an orientation for one or more virtual objects included in the dataset to generate augmented images displaying the AR scene with multiple virtual objects. This may provide advances for generating training data for highly dense navigation scenarios such as object detection and avoidance in traffic.
- At 210, the computing system can store the augmented image as a training image within a machine learning training dataset. For certain implementations, the machine-learning training dataset can include additional training data other than synthetic data. For example, real images or real objects placed within AR scenes can be included as additional training data. Aspects of the real images can include labels that can be used for comparing a statistic (e.g., accuracy) determined by a machine learned model trained on synthetic data for performing the trained task on real data. In some implementations, storing the augmented image as a training image can include processing the augmented image (e.g., to generate an embedding or a normalized representation) to generate the training image. Thus the training image need not include an image file and can include other data representations derived from the augmented image.
- At 212, the computing system can associate a training label with the training image in the machine learning training dataset, the training label indicating at least one of: identifies the virtual object, indicates the position of the virtual object within the scene, or indicates the orientation of the virtual object within the scene. For certain implementations, the training label may include other attributes of the training image such as associating a label based on the task defined for generating the augmented image. Other training labels can include labeling the data as synthetic (e.g., computer-generated). The additional training labels (e.g., synthetic) may be used for feedback such as training a machine-learned model to determine parameters for generating more photo-realistic synthetic images by classifying one or more augmented images produced according to the present disclosure. In some implementations, associating the training label can include generating a separate file that is indexed or otherwise linked to the training image. Additionally, since the training image can be encoded in various data representations, associating the training label can include modifying the training image to include the label or labels.
-
FIGS. 3A and 3B depicts aspects of example virtual objects that can be used to produce an augmented image according to the present disclosure. As shown in the figures, the virtual object can include visual features that substantially represent the physical object used to produce the virtual object. For example, surface features of a shoe can include the laces, sole, and body. Though not shown, additional features such as coloring can also be associated with one or more regions of the virtual object. Additionally or alternatively, the virtual object can be associated with the metadata or referenced to information that is not necessarily displayed in the augmented image. For example, one or more seats defining external boundaries of the virtual object can be included. In some implementations, the one or more seats can comprise a bounding box having 6 planar surfaces that together define a top, bottom, front, back, left, and right of the virtual object. For certain implementations, the seats can be defined such that only some of the seats can be in contact with the virtual environment (e.g., a planar surface/seat having an “x” may be excluded from contact with the virtual environment. Alternatively or additionally, the virtual object can be associated with a coordinate frame such as a 3-dimensional coordinate frame having an x-y-z-axes. For instance,FIG. 3A displays three axes normal to one another. Though not limited to such reference frames, the axes and/or the seats may serve as one possible reference frame for determining the orientation and/or the position according to example implementations of the present disclosure. -
FIG. 4 depicts an example reference frame for determining the orientation and/or the position. Though illustrated as a rectangular prism having 8 vertices and 6 faces, it should be understood that the number of vertices and faces may be greater or less than the number depicted. Further, some, all, or none of the information associated with the reference frame may be included as one or more training labels that are associated with the training image. -
FIG. 5 depicts an example aspect for certain augmented images and methods for producing synthetic data in accordance with the present disclosure. In some example implementations, the presence of physical objects within the scene can be used to streamline generating training data by discarding views and/or positions that are blocked by the physical object. In this manner, generating synthetic training data can be improved by reducing the number of instances where a user or automated (e.g., random) selection would place the virtual object in a region of the augmented image that would be blocked. For example, while the augmented image can include a 3-dimensional representation including a plurality of image frames, in some instances, it may reduce CPU usage and/or energy costs to utilize some of the image frames depicting the scenes. Since each image frame can be taken from various positions and/or angles, this information can be used to generate augmented images that do not include a blocked view of the virtual object (e.g., by placing the virtual object at a position based at least on the location of a physical object in the scene and/or the camera position). While the virtual object represents a 3-dimensional form, augmented images can include 2-dimensional image frames that have a perspective based in part on the camera position. For such implementations, the camera position and or physical/real object in the scene may be used to discard certain positions or orientations for placing the virtual object in the scene. -
FIGS. 6A and 6B display aspects of example augmented images generated according to example implementations of the present disclosure. InFIG. 6A , two example augmented images are provided displaying three virtual shoes having different positions and orientations. Bothe the left image and the right display the same scene at different camera positions. InFIG. 6B , the same augmented images inFIG. 6A are shown to further include data such as the seats, bounding boxes, and/or coordinate locations. While these elements are depicted inFIG. 6B , it should be understood that the data may be otherwise associated with the images, including in a separate label file. Thus the images themselves need not display the seats bounding boxes, coordinate locations or other associated data that can be used to label the augmented image. - For some implementations in accordance with the present disclosure, associating a training label with the training image (e.g., an augmented image) can include generating, for all or a portion of the image frames included in the augmented image, one or more labels providing, three-dimensional coordinates of bounding box vertices in the camera frame, the corresponding 2D coordinates in an image frame, a projection matrix, and a view matrix. Aspects of the projection matrix and the view matrix can be used to determine a camera pose describing in part the camera position and/or orientation.
-
FIGS. 6C and 6D display further aspects of certain example training data. For example, in some implementations, the depth of the virtual object in the scene can be determined by the AR engine. For example,FIG. 6C illustrates the depth information using a normalized grayscale image. In certain implementations, the depth of virtual objects within a scene can also be combined with the position, the orientation, or other information such as a bounding box to determine the virtual object/bounding box depth map, as well as an approximate projected area. Since the projected area is in part a function of the volume of the virtual object various image processing techniques can be used to determine the projected area. From this information further metrics such as visibility of the virtual object in the augmented image can be determined (e.g., visibility =# visible pixels/projected area). -
FIGS. 7A-7F display example synthetic data including augmented images displaying a virtual object within a scene.FIGS. 7A, 7B and 7E display images of a scene having one or more virtual boxes of varying sizes placed in the scene.FIGS. 7C, 7D and 7F display images of a scene having one or more virtual shoes placed in the scene. As should be understood, the examples of virtual boxes and virtual shoes are provided as example of virtual objects and are not intended to limit the scope or types of virtual objects that can be used to produce augmented images. - The technology discussed herein makes reference to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a great variety of possible configurations, combinations, and divisions of tasks and functionality between and among components. For instance, processes discussed herein can be implemented using a single device or component or multiple devices or components working in combination. Databases and applications can be implemented on a single system or distributed across multiple systems. Distributed components can operate sequentially or in parallel.
- While the present subject matter has been described in detail with respect to various specific example embodiments thereof, each example is provided by way of explanation, not limitation of the disclosure. Those skilled in the art, upon attaining an understanding of the foregoing, can readily produce alterations to, variations of, and equivalents to such embodiments. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For instance, features illustrated or described as part of one embodiment can be used with another embodiment to yield a still further embodiment. Thus, it is intended that the present disclosure cover such alterations, variations, and equivalents.
Claims (20)
1. A computer-implemented method for generating training data, the method comprising:
obtaining, by one or more computing devices, a three-dimensional model of a virtual object;
obtaining, by the one or more computing devices, data comprising one or more image frames that depict a scene;
determining, by the one or more computing devices, a position and an orientation for the virtual object within the scene;
generating, by the one or more computing devices and using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene at the position and the orientation;
storing, by the one or more computing devices, the augmented image as a training image within a machine learning training dataset; and
associating, by the one or more computing devices, a training label with the training image in the machine learning training dataset, wherein the training label at least one of: identifies the virtual object, indicates the position of the virtual object within the scene, or indicates the orientation of the virtual object within the scene.
2. The computer-implemented method of claim 1 , further comprising:
training, by the one or more computing devices, a machine-learned model on the machine learning training dataset including the training image and the training label.
3. The computer-implemented method of claim 1 , wherein determining the position and orientation comprises:
determining, by the one or more computing devices, one or more seats that represent possible planar boundaries surrounding exterior regions of the virtual object for positioning the virtual object in an augmented reality view of the scene;
selecting, by the one or more computing devices, one of the seats;
determining, by the one or more computing devices, the orientation by rotating the three-dimensional model normal to the selected seat; and
determining, by the one or more computing devices, the position by placing the seat in contact with a coordinate location in the augmented image.
4. The computer-implemented method of claim 3 , further comprising:
detecting, by the one or more computing devices, one or more surfaces included in the scene, wherein the one or more surfaces each provide a substantially planar area normal to gravity, wherein an augmented reality rendering engine generates a three-dimensional representation of the scene having a plurality of coordinate locations for the one or more surfaces in the scene.
5. The computer implemented method of claim 4 , wherein determining, by the one or more computing devices, the position comprises:
selecting, by the one or more computing devices, the coordinate location in the augmented reality view corresponding to at least one of the one or more surfaces, and wherein
generating, by the one or more computing devices, the augmented image comprises placing, by the one or more computing devices, said one seat of the virtual object in contact with the at least one of the one or more surfaces.
6. The computer-implemented method of claim 3 , wherein associating, by the one or more computing devices, the training label with the training image in the machine learning training dataset comprises:
defining, by the one or more computing devices, a bounding box within the training image based at least in part on one or both of: the one or more seats of the virtual object and the position of the virtual object.
7. The computer-implemented method of claim 3 , wherein the one or more seats comprise 1 to 10 planar boundaries of the virtual object.
8. The computer-implemented method of claim 1 , wherein associating, by the one or more computing devices, the label with the training image comprises storing, by the one or more computing devices, the label as metadata for the training image.
9. The computer-implemented method of claim 1 , wherein the machine-learned model includes a neural network.
10. The computer-implemented method of claim 2 , wherein training, by the one or more computing devices, the machine-learned model comprises performing, by the one or more computing devices, a supervised training technique that utilizes a ground truth signal that comprises the training label associated with the augmented image.
11. The computer-implemented method of claim 1 , wherein the one or more image frames further comprise environmental metadata including one or more of: a position of one or more light sources, a position of one or more cameras, an orientation of the one or more light sources, and an orientation of the one or more cameras.
12. The computer-implemented method of claim 1 , wherein determining, by the one or more computing devices, the position and the orientation for the virtual object comprises:
obtaining, by the one or more computing devices, a user input defining the position and the orientation for the virtual object.
13. The computer-implemented method of claim 1 , wherein determining the position and the orientation for the virtual object within the scene comprises:
generating, by the one or more computing devices, a random value; and
setting, by the one or more computing devices and based at least in part on the random value, the position for the virtual object, the orientation for the virtual object, or both.
14. A computing system comprising:
one or more processors; and
one or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the one or more processors to perform operations, the operations comprising:
obtaining a three-dimensional model of a virtual object;
obtaining data comprising one or more image frames that depict a scene;
determining a position and an orientation for the virtual object within the scene;
generating, using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene at the position and the orientation;
storing the augmented image as a training image within a machine learning training dataset; and
associating a training label with the training image in the machine learning training dataset, wherein the training label at least one of: identifies the virtual object, indicates the position of the virtual object within the scene, or indicates the orientation of the virtual object within the scene.
15. The computing system of claim 14 , the operations further comprising:
training a machine-learned model on the machine learning training dataset including the training image and the training label.
16. The computing system of claim 14 , wherein determining the position and orientation comprises:
determining one or more seats that represent possible planar boundaries surrounding exterior regions of the virtual object for positioning the virtual object in an augmented reality view of the scene;
selecting one of the seats;
determining the orientation by rotating the three-dimensional model normal to the selected seat; and
determining the position by placing the seat in contact with a coordinate location in the augmented image.
17. The computing system of claim 16 , wherein associating the training label with the training image in the machine learning training dataset comprises:
defining a bounding box within the training image based at least in part on one or both of: the one or more seats of the virtual object and the position of the virtual object.
18. The computing system of claim 14 , wherein associating, by the one or more computing devices, the label with the training image comprises storing the label as metadata for the training image.
19. One or more non-transitory computer-readable media that store instructions that, when executed by one or more processors, cause the one or more processors to perform operations, the operations comprising:
obtaining a three-dimensional model of a virtual object;
obtaining data comprising one or more image frames that depict a scene;
determining a position and an orientation for the virtual object within the scene;
generating, using an augmented reality rendering engine, an augmented image that depicts the virtual object within the scene at the position and the orientation;
storing the augmented image as a training image within a machine learning training dataset; and
associating a training label with the training image in the machine learning training dataset, wherein the training label at least one of: identifies the virtual object, indicates the position of the virtual object within the scene, or indicates the orientation of the virtual object within the scene.
20. The non-transitory computer-readable media of claim 19 , the operations further comprising: training a machine-learned model on the machine learning training dataset including the training image and the training label.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/062218 WO2021101527A1 (en) | 2019-11-19 | 2019-11-19 | Ar-assisted synthetic data generation for training machine learning models |
Publications (1)
Publication Number | Publication Date |
---|---|
US20220415030A1 true US20220415030A1 (en) | 2022-12-29 |
Family
ID=68848472
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/778,085 Pending US20220415030A1 (en) | 2019-11-19 | 2019-11-19 | AR-Assisted Synthetic Data Generation for Training Machine Learning Models |
Country Status (2)
Country | Link |
---|---|
US (1) | US20220415030A1 (en) |
WO (1) | WO2021101527A1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210309248A1 (en) * | 2020-04-01 | 2021-10-07 | Nvidia Corporation | Using Image Augmentation with Simulated Objects for Training Machine Learning Models in Autonomous Driving Applications |
US20220237908A1 (en) * | 2020-12-14 | 2022-07-28 | The Boeing Company | Flight mission learning using synthetic three-dimensional (3d) modeling and simulation |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11386662B2 (en) | 2020-05-28 | 2022-07-12 | Microsoft Technology Licensing, Llc | Tracking multiple objects in a video stream using occlusion-aware single-object tracking |
US11335008B2 (en) * | 2020-09-18 | 2022-05-17 | Microsoft Technology Licensing, Llc | Training multi-object tracking models using simulation |
US20220398412A1 (en) * | 2021-06-14 | 2022-12-15 | Gm Cruise Holdings Llc | Object classification using augmented training data |
CN115908663B (en) * | 2022-12-19 | 2024-03-12 | 支付宝(杭州)信息技术有限公司 | Virtual image clothing rendering method, device, equipment and medium |
CN116910920B (en) * | 2023-09-12 | 2023-12-05 | 陕西万禾数字科技有限公司 | Aeroengine comprehensive health management system and method based on augmented reality technology |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2019113510A1 (en) * | 2017-12-07 | 2019-06-13 | Bluhaptics, Inc. | Techniques for training machine learning |
-
2019
- 2019-11-19 US US17/778,085 patent/US20220415030A1/en active Pending
- 2019-11-19 WO PCT/US2019/062218 patent/WO2021101527A1/en active Application Filing
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210309248A1 (en) * | 2020-04-01 | 2021-10-07 | Nvidia Corporation | Using Image Augmentation with Simulated Objects for Training Machine Learning Models in Autonomous Driving Applications |
US11801861B2 (en) * | 2020-04-01 | 2023-10-31 | Nvidia Corporation | Using image augmentation with simulated objects for training machine learning models in autonomous driving applications |
US20220237908A1 (en) * | 2020-12-14 | 2022-07-28 | The Boeing Company | Flight mission learning using synthetic three-dimensional (3d) modeling and simulation |
Also Published As
Publication number | Publication date |
---|---|
WO2021101527A1 (en) | 2021-05-27 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20220415030A1 (en) | AR-Assisted Synthetic Data Generation for Training Machine Learning Models | |
AU2020200811B2 (en) | Direct meshing from multiview input using deep learning | |
US11288857B2 (en) | Neural rerendering from 3D models | |
CN108509848B (en) | The real-time detection method and system of three-dimension object | |
US10977818B2 (en) | Machine learning based model localization system | |
US9058669B2 (en) | Incorporating video meta-data in 3D models | |
US9001120B2 (en) | Using photo collections for three dimensional modeling | |
US20210295594A1 (en) | Method and Apparatus for Generating Two-Dimensional Image Data Describing a Three-Dimensional Image | |
WO2020033822A1 (en) | Capture and adaptive data generation for training for machine vision | |
US20160342861A1 (en) | Method for Training Classifiers to Detect Objects Represented in Images of Target Environments | |
CN115097937A (en) | Deep learning system for cuboid detection | |
EP3959688B1 (en) | Generative latent textured proxies for object category modeling | |
US10282898B1 (en) | Three-dimensional scene reconstruction | |
CN112639846A (en) | Method and device for training deep learning model | |
CN113822993B (en) | Digital twinning method and system based on 3D model matching | |
US20230394743A1 (en) | Sub-pixel data simulation system | |
JP7294788B2 (en) | Classification of 2D images according to the type of 3D placement | |
CN115039166A (en) | Augmented reality map management | |
CN117036612A (en) | Three-dimensional reconstruction method based on nerve radiation field | |
Aranjuelo Ansa et al. | Building synthetic simulated environments for configuring and training multi-camera systems for surveillance applications | |
US11636578B1 (en) | Partial image completion | |
CN115100257A (en) | Sleeve alignment method and device, computer equipment and storage medium | |
CN113034675A (en) | Scene model construction method, intelligent terminal and computer readable storage medium | |
CN114241013B (en) | Object anchoring method, anchoring system and storage medium | |
Kasten et al. | Learning to Estimate Multi-view Pose from Object Silhouettes |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HOU, TINGBO;WEI, JIANING;AHMADYAN, ADEL;AND OTHERS;SIGNING DATES FROM 20191211 TO 20200102;REEL/FRAME:060581/0129 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
US8924379B1 - Temporal-based score adjustments - Google Patents
Temporal-based score adjustments Download PDFInfo
- Publication number
- US8924379B1 US8924379B1 US12/718,634 US71863410A US8924379B1 US 8924379 B1 US8924379 B1 US 8924379B1 US 71863410 A US71863410 A US 71863410A US 8924379 B1 US8924379 B1 US 8924379B1
- Authority
- US
- United States
- Prior art keywords
- document
- query
- old
- score
- count
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/335—Filtering based on additional data, e.g. user or group profiles
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
Definitions
- This specification relates to scoring documents responsive to search queries.
- Internet search engines provide information about Internet accessible resources (e.g., Web pages, images, text documents, multimedia content) that are responsive to a user's search query by returning a set of search results in response to the query.
- a search result includes, for example, a Uniform Resource Locator (URL) and a snippet of information for resources responsive to a query.
- the search results can be ranked (e.g., in an order) according to scores assigned to the search results by a scoring function.
- the scoring function ranks the search results according to various signals, for example, where (and how often) query terms appear in the search results and how common the query terms are in the search results indexed by the search engine.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving a first query; identifying a plurality of documents responsive to the first query, and obtaining a respective score for each document, wherein each document is associated with a plurality of previously received related queries for which the document was responsive; adjusting the score for one or more of the plurality of documents according to an age classification for one or more of the related queries for the document, wherein the age classification is derived from one or more terms in the related queries; and ranking one or more of the plurality of documents according to the respective scores and adjusted scores for the documents.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs recorded on computer storage devices, each configured to perform the operations of the methods.
- Adjusting the score for a particular document in the one or more documents can include determining a score adjustment for the particular document, the determining including: selecting a plurality of matching queries from the plurality of related queries for the particular document, wherein each matching query matches the first query; determining an age classification for each matching query according to any temporal terms of the query and determining an age classification for the particular document according to the classifications of the queries; and determining the score adjustment according to the age classification of the particular document; and adjusting the score for the particular document according to the score adjustment.
- Determining an age classification for a query can include classifying the query as new if one or more terms of the query are new temporal terms; classifying the query as old if one or more terms of the query are old temporal terms; and otherwise classifying the query as non-temporal.
- Determining the age classification for the particular document can include calculating a new count corresponding to a number of the matching queries that are classified as new, and calculating an old count corresponding to a number of the matching queries that are classified as old; classifying the document as new if the new count satisfies a threshold; and otherwise, classifying the document as old if the old count satisfies a threshold.
- the new count can be a weighted count wherein each new query is weighted by a weight derived from one or more quality of result statistics for the document and the query.
- the old count can be a weighted count wherein each old query is weighted by a weight derived from one or more quality of result statistics for the document and the query.
- Determining the score adjustment can include determining a positive adjustment that increases the score by a factor when the document is a new document. The factor can be determined from the new count. Determining the score adjustment can include determining a negative adjustment that decreases the score by a factor when the document is an old document. The factor can be determined from the old count. The actions can further include determining that the first query is not an old query before determining the adjusted score.
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of storing popularity data indicating a popularity of queries over time; identifying a first query from the popularity data, the first query comprising one or more terms; selecting one or more extended queries for the first query from the popularity data, each extended query including each term of the first query and one or more additional terms; storing time trend data for the first query for one or more time periods, the time trend data for the first query and a particular period associating the first query and the particular period with one of the extended queries.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs recorded on computer storage devices, each configured to perform the operations of the methods.
- the actions can further include receiving the first query from a user during a first time period; identifying a first extended query associated with the first query and the first time period from the time trend data; and scoring documents responsive to the first query based, at least in part, on the first extended query.
- Scoring documents responsive to the first query based, at least in part, on the first extended query can include increasing a score of documents that include terms in the first extended query but not in the first query.
- Scoring documents responsive to the first query based, at least in part, on the first extended query can include increasing a score of documents that are associated with queries that include terms in the first extended query but not in the first query.
- Identifying the first query includes identifying a query that has multiple spikes in popularity as indicated in the popularity data, wherein a spike in popularity occurs when a popularity of the query temporarily increases beyond a threshold amount.
- the popularity of a query can be derived from a number of times the query is submitted.
- the popularity of a query can be derived from a number of times users enter the query as a query refinement of an originally submitted query.
- the actions can further include calculating a popularity score for each of the extended queries for each of the one or more time periods and selecting one of the extended queries to associate with the first query for each of the one or more time periods according to the popularity scores, wherein selecting an extended query for a period includes selecting the extended query with a highest popularity score for the period.
- the popularity score for an extended query during a first period can be derived by dividing a number of times the extended query was submitted during the first period by the number of times the first query was submitted during the first period.
- the popularity score for an extended query during a first period can be derived by dividing a number of times the extended query was submitted as a query refinement during the first period by the number of times the first query was submitted during the first period.
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of storing popularity data for one or more queries, the popularity data indicating changes in popularity of a query over time; receiving a first query submitted at a first time; identifying a plurality of documents responsive to the first query, and obtaining a respective score for each responsive document; adjusting the score for one or more of the plurality of documents according to whether the first time is within a popularity change time window for one or more related queries for the document, wherein the popularity change time window for a query is a reoccurring period of time during which a popularity of the query temporarily changes beyond a threshold amount; and ranking the plurality of documents according to the respective scores and adjusted scores for the documents.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs recorded on computer storage devices, each configured to perform the operations of the methods.
- Adjusting the score for a particular document in the plurality of documents can include determining a score adjustment for the particular document, the determining including: determining that the first time is within one or more relevant popularity change time windows for the particular document, wherein each relevant popularity change time window corresponds to one of the related queries for the particular document; and selecting an appropriate score adjustment according to the popularity change associated with each of the one or more relevant popularity change time windows; and adjusting the score for the particular document according to the score adjustment.
- One or more of the popularity change time windows can correspond to a temporary spike in popularity for a query.
- An appropriate score adjustment can be a positive score adjustment that increases the score for the particular document by a factor when the one or more relevant popularity change time windows correspond to a temporary spike in popularity for the query.
- Each of the popularity change time windows can correspond to a temporary spike in popularity for a query or a temporary dip in popularity for a query.
- An appropriate score adjustment can be a negative score adjustment that decreases the score for the particular document by a factor when the one or more relevant popularity change time windows correspond to a temporary dip in popularity for the query.
- the popularity change time window can be a period that re-occurs each calendar year.
- a search system can identify documents with more recent information from the text of queries associated with the documents. More recent documents can be assigned a higher rank. Documents can be ranked according to the popularity of their associated queries over time, or according to how well the documents satisfy particular queries at particular times.
- FIG. 1A illustrates an example of two documents and the queries associated with those documents.
- FIG. 1B illustrates query popularity over time for the query “how to cook a turkey.”
- FIG. 2 illustrates an example search system
- FIG. 3A illustrates example components of an information retrieval system.
- FIG. 3B illustrates another example information retrieval system.
- FIG. 4 illustrates an example system including a score adjuster that provides score adjustment information to a ranking engine.
- FIG. 5 illustrates an example document and example age-classified related queries for the document.
- FIG. 6 illustrates an example technique for ranking documents according to adjusted scores determined from an age classification for related queries for the documents.
- FIG. 7 illustrates an example system including another score adjuster that provides score adjustment information to a ranking engine.
- FIG. 8 illustrates an example technique for ranking documents responsive to a user-submitted query according to whether queries associated with the documents have a popularity time change window that overlaps with the time that the user-submitted query was submitted.
- FIG. 9 illustrates an example system that includes another example score adjuster.
- FIG. 10 illustrates an example technique for generating time trend data.
- FIG. 11 illustrates an example technique for adjusting document scores based on time trend data.
- FIG. 12 illustrates an example architecture of a system.
- FIG. 1 illustrates an example of two documents 102 and 104 and the queries associated with those documents.
- the example documents 102 and 104 are webpages.
- documents can be any type of electronic document, for example, images, multimedia content, or news articles on the Internet.
- An electronic document (which for brevity will simply be referred to as a document) does not necessarily correspond to a file.
- a document can be stored in a portion of a file that holds other documents, in a single file dedicated to the document in question, or in multiple coordinated files.
- a document can be stored in a memory without having first been stored in a file.
- Document A 102 includes information on “the Super Race” from 1996. This includes, for example, the dates of the race, where participants should report to start the race each day, and the results of the race. All of the information in document A 102 is about the 1996 race. The document does not have information about more recent versions of the race.
- a query is associated with the document if the user selected (e.g., clicked with a mouse or other input device including oral and tactile input devices) on a search result for the document presented in response to the query.
- query 106 “Super Race 1996” is associated with document A 102 . This means that at least one user submitted the query “Super Race 1996” and then selected a search result for document A 102 when the search result was presented for the query.
- a user must view the document a threshold amount of time before the query is associated with the document, e.g., the dwell time on the document must exceed a threshold.
- a document must have been selected a threshold number of times, or by a threshold number of users, to be considered associated with the document.
- Each query associated with the document contains one or more terms. These terms can be used to determine whether the document contains old information, or more recent information. For example, terms that are old dates (e.g., “1996” when the year is 2010) or terms that denote old information (e.g., “old,” “previous,” “last year's,” etc.) may indicate that the document contains old information. Similarly, terms that are new dates relative to the time at which the user is submitting the query (e.g., “2010” when the year is 2010) or terms that denote current information or information about something in the future (e.g., “new,” “current” “future,” “today,” etc.) indicate that the document contains more recent information.
- terms that are old dates e.g., “1996” when the year is 2010
- terms that denote old information e.g., “old,” “previous,” “last year's,” etc.
- terms that are new dates relative to the time at which the user is submitting the query e.g., “
- queries associated with document A 102 indicate that the document has old information.
- document B 104 contains information on “Cross Country Marathon 2010.”
- the document includes a link for the current standings in the race, updates on when the marathon will reach particular towns, and the latest pictures from the race. Assuming that we are considering this document in 2010, the document appears to be providing current information about an on-going race.
- queries associated with document A 102 indicate that document A 102 contained old information
- the queries associated with document B 104 indicate that document B 104 has recent information.
- queries 118 “Current CCM Standings,” 122 “Latest Marathon Results,” 124 “CC Marathon Update,” and 128 “New Marathon Pictures” include the words “Current” “Latest” “Update” and “New,” each of which indicates that the person submitting the query was looking for recent information.
- the query 120 “Marathon 2010” includes the current date 2010. While not all of the queries indicate that the document is new, for example, query 126 “Cross Country Marathon,” the majority of the queries associated with document B do indicate that the document is new.
- search engines Users typically want search engines to provide the search results that are most relevant to a user's query. In general, unless queries explicitly suggest otherwise, a user is looking for the most recent information for the subject of their query. As will be described below, conventional search engines can be modified to use the queries associated with a document to determine an age classification of the document, and rank documents believed to have a new age classification higher than those documents might otherwise be ranked. In some implementations, the age of the document is determined based only on queries that match a user-submitted query.
- the age of document A could be determined from the queries “Super Race Results 1996” 108 , “Old Super Race Results” 110 , and “Super Race Results” 116 , but not consider the other queries associated with document A 102 .
- FIG. 1B is a graph 150 that illustrates example changes in query popularity over time for the query “how to cook a turkey”.
- Query popularity is another signal that a search engine can consider when determining whether to promote search results.
- Some queries have cyclic patterns in their popularity. For example, the query “Easter Bunny” may become more popular around Easter each year, as the Easter Bunny is strongly associated with Easter.
- the popularity of the query “how to cook a turkey” remains relatively constant until time 152 , just before November.
- the query popularity then increases dramatically and stays at the higher peak until time 154 , just after the beginning of December, when the query has a decrease in popularity and returns to its previous level of popularity.
- This temporary increase in popularity can be caused, for example, by search engine users in the United States who are interested in learning how to cook a turkey for the Thanksgiving holiday.
- a search engine can consider this temporal signal, for example, to temporarily increase the ranking of search results during a particular time window, when those search results are associated with queries that usually have an increase in popularity during that particular time window, or when the search results include terms in queries that usually have an increase in popularity during that particular time window.
- Users may also select different search results in response to a query at different times of the year. For example, users might normally select search results describing the country Turkey after submitting a search query “Turkey,” but might select search results on how to cook a turkey during November, because users are interested in cooking turkey for Thanksgiving dinner.
- the search results selected at different times of the year can also be used as a temporal signal.
- FIG. 1B illustrates a temporary increase in query popularity
- the temporal data could also indicate a decrease in query popularity, in which case, search results could have their rankings decreased during the time window when their related queries have a decrease in popularity.
- FIG. 2 illustrates an example search system 200 for identifying search results in response to search queries as can be implemented in an internet, intranet, or other client/server environment.
- the system 200 is an example of an information retrieval system in which the systems, components and techniques described below can be implemented. Although several components are illustrated, there may be fewer or more components in the system 200 . Moreover, the components can be distributed on one or more computing devices connected by one or more networks or other suitable communication mediums.
- a user 202 interacts with the system 200 through a client device 204 ( 204 a , 204 b , 204 c ) or other device.
- the client device 204 can be a computer terminal within a local area network (LAN) or wide area network (WAN).
- the client device 204 generally includes a random access memory (RAM) 206 (or other memory and/or a storage device) and a processor 208 .
- the processor 208 is structured to process instructions within the system 200 .
- the processor 208 is a single-threaded processor.
- the processor 208 is a multi-threaded processor.
- the processor 208 can include multiple processing cores and is structured to process instructions stored in the RAM 206 (or other memory and/or a storage device included with the client device 204 ) to display graphical information for a user interface.
- a user 202 a connects to the search engine 230 within a server system 214 to submit a query 215 .
- a client-side query signal 210 a is sent into a network 212 and is forwarded to the server system 214 as a server-side query signal 210 b .
- Server system 214 can be one or more server devices in one or more locations.
- a server device 214 includes a memory device 216 , which can include the search engine 230 loaded therein.
- a processor 218 is structured to process instructions within the device 214 . These instructions can implement one or more components of the search engine 230 .
- the processor 218 can be a single-threaded processor or a multi-threaded processor, and can include multiple processing cores.
- the processor 218 can process instructions stored in the memory 216 related to the search engine 230 and can send information to the client device 204 , through the network 212 , to create a graphical presentation in a user interface of the client device 204 (e.g., a search results web page displayed in a web browser).
- the server-side query signal 210 b is received by the search engine 230 .
- the search engine 230 uses the information within the user query 215 (e.g. query terms) to find relevant documents.
- the search engine 230 can include an indexing engine 220 that actively searches a corpus (e.g., web pages on the Internet) to index the documents found in that corpus, and the index information for the documents in the corpus can be stored in an index database 222 . This index database 222 can be accessed to identify documents related to the user query 215 .
- the search engine 230 includes a ranking engine 252 to rank the documents related to the user query 215 .
- the ranking of the documents can be performed using traditional techniques for determining an information retrieval (IR) score for indexed documents in view of a given query.
- IR information retrieval
- the relevance of a particular document with respect to a particular search term or to other provided information may be determined by any appropriate technique. For example, the general level of back-links to a document that contains matches for a search term may be used to infer a document's relevance.
- a document is linked to (e.g., is the target of a hyperlink) by many other relevant documents (e.g., documents that also contain matches for the search terms)
- it can be inferred that the target document is particularly relevant. This inference can be made because the authors of the pointing documents presumably point, for the most part, to other documents that are relevant to their audience.
- the pointing documents are in turn the targets of links from other relevant documents, they can be considered more relevant, and the first document can be considered particularly relevant because it is the target of relevant (or even highly relevant) documents.
- Such a technique may be the determinant of a document's relevance or one of multiple determinants. Appropriate techniques can also be taken to identify and eliminate attempts to cast false votes so as to artificially drive up the relevance of a page.
- the ranking engine 252 receives one or more additional signals from a rank modifier engine 256 to assist in determining an appropriate ranking for the documents.
- the rank modifier engine 256 provides one or more measures of relevance for the documents, which can be used by the ranking engine 252 to improve the search results' ranking provided to the user 202 .
- the search engine 230 forwards the final, ranked result list within a server-side search results signal 228 a through the network 212 .
- a client-side search results signal 228 b is received by the client device 204 a where the results are stored within the RAM 206 and/or used by the processor 208 to display the results on an output device for the user 202 a.
- the server system 214 may also maintain one or more user search histories based on the queries it receives from a user and which results a user selected after a search was performed.
- FIG. 3A illustrates example components of an information retrieval system. These components include an indexing engine 3010 , a scoring engine 3020 , a ranking engine 3030 , and a rank modifier engine 3070 .
- the indexing engine 3010 functions as described above for the indexing engine 220 .
- the scoring engine 3020 generates scores for document results based on many different features, including content-based features that link a query to document results, and query-independent features that generally indicate the quality of document results.
- the content-based features include, for example, aspects of document format, such as query matches to title or anchor text in an HTML (Hyper Text Markup Language) page.
- the query-independent features include, for example, aspects of document cross-referencing of the document or the domain.
- the particular functions used by the scoring engine 3020 can be tuned, to adjust the various feature contributions to the final IR score, using automatic or semi-automatic processes.
- the ranking engine 3030 produces a ranking of document results 3040 for display to a user based on IR scores received from the scoring engine 3020 and one or more signals from the rank modifier engine 3070 .
- the rank modifier engine 3070 provides one or more measures of relevance for the documents, which can be used by the ranking engine 3030 to improve the search results' ranking provided to the user.
- a tracking component 3050 is used to record information regarding user behavior such as individual user selections of the results presented in the ranking 3040 .
- the tracking component 3050 is embedded JavaScript code included in a web page ranking 3040 that identifies user selections of individual document results and also identifies when the user returns to the results page, thus indicating the amount of time the user spent viewing the selected document result.
- the tracking component 3050 is a proxy system through which user selections of the document results are routed.
- the tracking component can also include pre-installed software at the client.
- Other implementations are also possible, for example, an implementation that uses a feature of a web browser that allows a tag/directive to be included in a page, which requests the browser to connect back to the server with message(s) regarding link(s) clicked by the user.
- the recorded information is stored in result selection logs 3060 .
- the recorded information includes log entries that indicate user interaction with each result document presented for each query submitted. For each user selection of a result document presented for a query, the log entries indicate the query (Q), the document (D), the user's dwell time (T) on the document, the language (L) employed by the user, and the country (C) where the user is likely located (e.g., based on the server used to access the IR system) and a region code (R) identifying the metropolitan area of the user.
- the log entries can also record information about document impressions. An impression is recorded each time a result document is presented in a results list for the query. Other standards for recording impressions can also be used.
- an impression can be recorded when a user selects the document, or a document below the document in the result list.
- An impression can also be recorded when a user selects the document directly above the document in the result list.
- a weighted count of impressions is calculated for each document presented in response to the query. For example, if a user selects the document or a document below the document in the result list, 1 is added to the weighted count. If a user selects a document above the document, a value of less than 1 is added to the weighted count.
- the value can be a constant or can be determined, for example, by dividing 1 by the number of documents between the document and the selected document in the search result list.
- the log entries can also record negative information, such as the fact that a document result was presented to a user, but was not selected.
- Other information such as position(s) of click(s) (i.e., user selection(s)) in the user interface, information about the session (e.g., existence and type of previous clicks, and post-click session activity), IR scores of clicked results, IR scores of all results shown before click, the titles and snippets shown to the user before the click, the user's cookie, cookie age, IP (Internet Protocol) address, user agent of the browser, and so on, can also be recorded.
- position(s) of click(s) i.e., user selection(s)
- information about the session e.g., existence and type of previous clicks, and post-click session activity
- IR scores of clicked results e.g., IR scores of all results shown before click
- the titles and snippets shown to the user before the click e.g., the titles and snippets shown to the user
- the time (T) between the initial click-through to the document result and the user's returning to the main page and clicking on another document result (or submitting a new search query) is also recorded.
- An assessment is made about the time (T) regarding whether this time indicates a longer view of the document result or a shorter view of the document result, since longer views are generally indicative of quality or relevance for the clicked through result.
- This assessment about the time (T) can further be made in conjunction with various weighting techniques.
- Aggregated click data from queries for a given document can be used to generate a quality of result statistic for the document as a search result for the query.
- the quality of result statistic estimates how responsive users found a given document to be as a search result for a given query.
- the quality of result statistic can be used to rank or enhance a ranking of the document.
- a quality of result statistic can be an average of the weighted long clicks for a given document and query pair, a sum of the weighted clicks for a given document and query pair, or a click fraction for a given document and query pair.
- the clicks can be weighted by the length of the clicks, by how quickly a user clicked on a result, and whether a user clicked on a result first, second, third, etc.
- click fraction is calculated by dividing the number of clicks (or the number of weighted clicks) by the number of impressions.
- the click fraction is calculated by dividing the sum of the weighted clicks by the total number of clicks. In still other implementations, the click fraction is the sum of weighted clicks for the document presented in response to the query divided by sum of weighted clicks for all documents presented in response to the query. Other click fractions are also possible.
- the scoring engine 3020 and the ranking engine 3030 can be merged into a single ranking engine, such as the ranking engine 252 of FIG. 2 .
- the rank modifier engine 3070 and the ranking engine 3030 can also be merged, and in general, the ranking engine 3030 can include any software component that generates a ranking of document results after a query.
- the ranking engine 3030 can be included in a client system in addition to (or rather than) in a server system.
- FIG. 3B illustrates another example information retrieval system.
- a server system 3150 includes an indexing engine 3160 and a scoring/ranking engine 3170 .
- a client system 3100 includes a user interface 3110 for presenting a ranking, a tracking component 3120 , result selection logs 3121 and a ranking/rank modifier engine 3140 .
- the client system 3100 can include a company's enterprise network and personal computers, in which a browser plug-in incorporates the ranking/rank modifier engine 3140 .
- the scoring/ranking engine 3170 can return the search results along with either an initial ranking or the actual IR scores for the results.
- the browser plug-in then re-ranks the results locally based on tracked page selections for the company-specific user base.
- FIG. 4 illustrates an example system 400 including a score adjuster 402 that provides score adjustment information to a ranking engine 404 .
- the score adjuster 402 is an example component of the rank modifier engine 256 described above with reference to FIG. 2 .
- the score adjuster 402 receives, for a given query 408 , documents 410 responsive to the query. The score adjuster 402 then processes these documents 410 and determines an appropriate score adjustment 412 for one or more of the documents.
- the ranking engine 404 also receives the documents 410 , as well as the score adjustments 412 for one or more of the documents, and generates a ranked list of the documents 414 , according to scores for the documents and the score adjustments.
- the score adjuster 402 includes a related query engine 416 , a document age classifier 418 , and an adjustment engine 420 .
- a related query engine 416 a document age classifier 418 , and an adjustment engine 420 .
- other combinations of components that provide the same, or similar, functionality, can alternatively be used.
- the related query engine 416 identifies related queries 422 associated with each of the documents in the received document-score pairs. To identify these related queries, the related query engine 416 analyzes document-query pair data 424 that stores pairs of documents and queries. Each pair includes a document and a related query of the document.
- the document-query pair data can be derived from log information generated by a search engine, for example, as described above with reference to FIG. 3A .
- the document-query pair data further includes one or more quality of result statistics for the document and the query, and the related query engine 516 only identifies related queries for which the document has a quality of result statistic that satisfies a threshold.
- the related query engine 416 identifies all queries in a document-query pair for the document being processed as being related queries. In other implementations, the related query engine 416 identifies a subset of the queries as being related queries. The subset can be, for example, queries that match the received query 408 .
- a related query matches the received query 408 when it includes one or more terms that are identical to or substantially identical to one or more of the terms in the received query. Two terms are identical when they are the same term, for example, the term “reading” is identical to the term “reading.” Two terms are substantially identical when they have the same stem form, when they differ in small ways such as slight differences in spelling, or when they are synonyms for each other.
- reading is substantially identical to the term “reads,” since both have the same stem form “read.”
- color is substantially identical to the term “colour,” since the two terms differ only in small differences in spelling.
- bike is substantially identical to the term “bicycle,” since the two terms are synonyms. Other standards for determining when terms are substantially identical can also be used.
- all terms in the received query must be identical or substantially identical to a term in the related query before the two queries are matched.
- the only terms in the related query that are not substantially identical to a term in the received query 408 must be temporal terms. Temporal terms are described in more detail below.
- the document age classifier 418 receives the related queries 422 for each document being processed. The document age classifier 418 then classifies the age of the document from the terms in the related queries.
- the document age classifier 418 determines an age classification 426 for each of the related queries from the terms in the queries, and then determines an age classification for the document from the age classification for the related queries of the document.
- the document age classifier 418 determines an age classification for a query according to one or more terms of the query. In some implementations, the document age classifier 418 classifies each related query as one of: new, old, or non-temporal.
- a new query is a query that includes one or more new temporal terms
- an old query is a query that includes one or more old temporal terms
- all other queries are non-temporal queries. If a query contains both new and old temporal terms, the query can be classified as an old query in some implementations, as a new query in other implementations, and as a non-temporal query in still other implementations.
- a temporal term is a term that conveys information about the time reference of the query; e.g., is the query asking about new information or old information.
- the document age classifier 418 can determine whether a given term is a new temporal term or an old temporal term, for example, by comparing the term to a list of new temporal terms and a list of old temporal terms. Each list can include dates and terms that connote the appropriate temporal meaning, for example, as described above with reference to FIG. 1 . In some implementations, the document age classifier 418 only considers temporal terms that were not included in the received query 408 . For example, if the received query 408 was “new marathon results,” and one of the related queries included the temporal term “new,” the term “new” would not be considered for the purpose of classifying the related query.
- the document age classifier 418 classifiers the document according to the age classifications of the related queries of the document. For example, the document age classifier 418 can generate a new count and/or an old count for the related queries for the document. If the new count satisfies, e.g., exceeds, a first threshold, the document age classifier 418 classifies the document as a new document. In some implementations, the new count divided by the total number of queries associated with the document must also satisfy another threshold, e.g., exceed the other threshold, for the document to be classified as a new document. In some implementations, the old count must also satisfy a second threshold, e.g., be below the second threshold, for the document to be classified as a new document.
- a second threshold e.g., be below the second threshold
- the document age classifier 418 classifies the document as an old document.
- the old count divided by the total number of queries associated with the document must also satisfy a third threshold, e.g., exceed the third threshold, for the document to be classified as an old document.
- the new count must also satisfy a fourth threshold, e.g., be below the fourth threshold, for the document to be classified as a new document. If the document is not classified as an old document or a new document, the document age classifier 418 classifies the document as a non-temporal document.
- the new count is the number of related queries that were classified as new queries
- the old count is the number of related queries that were classified as old queries.
- the new count is a weighted count where each new query and/or each old query is weighted by a quality of result statistic for the document and the related query, or a factor derived from a quality of result statistic for the document and the related query. For example, each query can be weighted by the number of long clicks for the query and the document divided by the total number of long clicks for the query and the document. Other quality of result statistics can also be used. Example quality of result statistics are described in more detail above, with reference to FIG. 3A .
- the score adjuster 402 does not determine an adjusted score for the document. If the document is classified as an old or a new document, the score adjuster 402 sends the age classification 426 to the adjustment engine 420 .
- the adjustment engine 420 determines an appropriate score adjustment 412 for the document, and sends the score adjustment 412 to the ranking engine 404 .
- the adjustment engine determines a score adjustment that increases the score by a first predetermined factor when the document is a new document and decreases the score by a second predetermined factor when the document is an old document.
- the first and second predetermined factors can be the same or different factors and can be determined, for example, empirically. Each factor can be, for example, a fixed amount that is added or subtracted from the score, or a fixed amount that is multiplied by the score, to generate the adjusted score.
- the adjustment engine 420 determines the value of the factor from the new count or the old count generated by the document age classifier 418 . For example, if the document is classified as a new document, the adjustment engine 420 can derive an appropriate adjustment factor from the new count of new queries related to the document. Similarly, if the document is classified as an old document, the adjustment engine 420 can derive an appropriate adjustment factor from the old count of old queries related to the document.
- the adjustment engine 420 selects the factor used to adjust the score for a document relative to the score for other documents. For example, the adjustment engine can select the factors so that each new document is scored higher than each old document, but a given new document is not scored higher than another new document that initially had a higher score than the given new document.
- the ranking engine 404 receives the document-score pairs 410 and the document-adjusted score pairs 412 for the documents, and then ranks the documents according to the scores and the score adjustments.
- the ranking engine 404 applies the score adjustments to the appropriate document scores to determine adjusted scores for the documents, and ranks each document according to the adjusted score for the document if the document has an adjusted score, and otherwise according to the unadjusted score for the document.
- FIG. 5 illustrates an example document and example age-classified related queries for the document.
- Document A 502 has four associated queries: “Marathon 2010” 604 , “Current Marathon” 506 , “Marathon 1998” 508 , and “Marathon Results” 510 .
- Two of the queries are classified as new queries (“Marathon 2010” and “Current Marathon”), one of the queries is classified as an old query (“Marathon 1998”), and one of the queries is classified as non-temporal (“Marathon Results”).
- the document age classifier can then determine the appropriate classification for document A 502 based on the old and new counts. For example, if the threshold for the new count is 1.4, then document A 502 will be classified as new, because its new count exceeds the threshold.
- FIG. 6 illustrates an example technique 600 for ranking documents according to adjusted scores determined from an age classification for related queries for the documents.
- the example technique 600 will be described in reference to a system that performs the technique 600 .
- the system can be, for example, the system 400 .
- the system receives a query ( 602 ), for example, as described above with reference to FIG. 2 .
- the system identifies documents responsive to the query and obtains a score for each document ( 604 ), for example using conventional scoring techniques.
- the system adjusts the score for one or more of the documents according to an age classification for one or more of the related queries for the document ( 606 ), for example, as described above with reference to FIG. 4 .
- the system further determines that the received query is not an old query before determining the adjusted score. For example, the system can classify the received query as described above with reference to FIG. 4 . If the query is an old query, then the user may not be particularly interested in more recent documents, and therefore no score adjustment is needed.
- the system ranks one or more of the documents according to their respective scores and adjusted scores ( 608 ). For example, the system can use the adjusted score for a document if the document has an adjusted score, and otherwise can use the score for the document, as described above with reference to FIG. 4 .
- the system then presents the responsive documents according to the determined rank. For example, the system can send the ranked list of search results corresponding to the documents to a user device for presentation to the user.
- FIG. 7 illustrates an example system 700 including a score adjuster 702 that provides score adjustment information to a ranking engine 704 .
- the score adjuster 702 is an example component of the rank modifier engine 256 described above with reference to FIG. 2 , and can be used instead of or in addition to the score adjuster 402 described above with reference to FIG. 4 .
- the score adjuster 702 determines score adjustments for documents responsive to a submitted query according to whether related queries for the document have a change in popularity during the time the submitted query is submitted.
- the score adjuster 702 receives documents 706 responsive to a submitted query 708 .
- the score adjuster 702 processes the documents 706 to determine an appropriate score adjustment 710 for one or more of the documents.
- the ranking engine 704 receives the documents 706 and score adjustments 710 , and generates a ranked list of the documents 712 , according to scores for the documents and the score adjustments.
- the score adjuster 702 includes a related query engine 714 , a time window engine 716 , and a score adjustment engine 718 .
- the related query engine 714 identifies related queries 720 associated with each of the documents in the received document-score pairs. To identify these related queries, the related query engine 714 analyzes document-query pair data 722 , for example, as described above with reference to FIG. 4 . In some implementations, the related query engine 714 identifies all queries in a document-query pair with the document as being related queries. In other implementations, the related query engine 714 identifies a subset of matching queries as the related queries, for example, as described above with reference to FIG. 4 . The time window engine 716 receives the related queries 720 for each document.
- the time window engine 716 identifies a popularity time change window for one or more of the related queries from query popularity data 724 .
- the query popularity data 706 is historical data on the number of submissions of queries over time.
- the query popularity data 706 can be time series data indicating number of submissions of the query over time.
- the query popularity data 706 can be query log data indicating what queries users submitted at particular times.
- the query log data is preferably anonymized to protect user privacy.
- the query popularity data 706 can correspond to historical data from a past few months, a past few years, or an even longer period of time.
- the popularity of a related query is derived from the number of times users submit the related query to a search engine. In some implementations, the popularity is the total number of times user submit the related query to a search engine. In other implementations, the popularity is the number of times users submit the related query to a search engine after submitting the query 708 (e.g., as determined from query log data).
- the time window engine 716 processes the received data for the related queries to determine one or more popularity time change windows for the related queries.
- a popularity change time window is a re-occurring period of time during which a popularity of a query temporarily changes beyond a threshold amount.
- the threshold can be determined empirically, for example, so that small background fluctuations in popularity are not identified as popularity time change windows.
- a popularity change time window can correspond to a temporary spike, or a temporary dip in query popularity.
- the popularity of a query returns to its pre-popularity change time window level at the end of the popularity change time window.
- the popularity change time window would be the time between time 152 and 154 . During that time, the popularity of the query spiked, i.e., temporarily increased from its baseline level before the start of the time change window.
- the time window engine 716 can determine the popularity time change windows for a query from an analysis of the query popularity data 804 . For example, the time window engine 716 can analyze the time trend data to identify statistically significant spikes or dips in submissions for a given query. The time during which there is a statistically significant spike or dip in submissions for the query is a popularity time change window. The system can determine statistically significant spikes or dips, for example, using conventional time series analysis techniques.
- the time window engine 716 can also determine whether the popularity time change window corresponds to primarily an increase in or a decrease in popularity. The increase/decrease is measured relative to a baseline level of popularity for the query before the popularity time change window.
- query popularity data 704 from multiple periods is considered by the time window engine 716 when generating the popularity time change window data.
- the time window engine 716 can consider data from each of several past calendar years.
- the time window engine 716 aggregates the data over the multiple periods and identifies statistically significant spikes and dips in the aggregate data.
- the time window engine 716 could aggregate the data for a query for each day of the calendar year (January 1, January 2, January 3, etc.) across multiple years, and then determine spikes and dips in the aggregate data.
- the time window engine 716 does not aggregate the data over multiple periods, but instead determines popularity time change windows for each period, and then generates an aggregate popularity time change window, for example, during the times that the period-specific time change windows overlap.
- the time window engine 716 determines whether the time the submitted query 708 was submitted is within the time change window for one or more of the related queries, for example, by comparing the time that the submitted query 708 was submitted to the time change window data 724 .
- the time the submitted query was submitted is within a time change window if the time of submission corresponds to the time change window. For example, if the time change window corresponds to the month of January and is based on data from January 2000 to January 2009, and the query is submitted on Jan. 2, 2010, the time the query is submitted corresponds to the time change window because it falls within the time change window. Similarly, if the time change window is the first two weeks of every month, and the query is submitted on the first day of a month, the time the query is submitted corresponds to the time change window.
- the score adjuster 702 does not determine a score adjustment. Otherwise, the score adjuster 702 provides the details of the decision 726 made by the time window engine 716 to the adjustment engine 718 to determine an appropriate score adjustment.
- the adjustment engine 718 determines an appropriate score adjustment 710 for one or more of the documents and sends the score adjustment 710 to the ranking engine 704 .
- the adjustment engine 718 adjusts the scores according to whether the popularity time change window during which the query 708 was submitted corresponds to an increase in popularity, e.g., a popularity spike, or a decrease in popularity, e.g., a popularity dip.
- the adjustment engine 718 increases the score by a first predetermined factor when the popularity time change window corresponds to an increase in popularity, and decreases the score by a second predetermined factor when the popularity time change window corresponds to a decrease in popularity.
- the first and second predetermined factors can be the same or different factors and can be determined, for example, empirically.
- Each factor can be, for example, a fixed amount that is added or subtracted from the score, or a fixed amount that is multiplied by the score, to generate the adjusted score.
- the adjustment engine 718 determines the value of the factor from other data about the popularity time change window.
- the factor can have greater magnitude when the popularity time change window is of a shorter length.
- the factor can have greater magnitude when the spike or dip in popularity (e.g., the overall change in popularity numbers) has a greater magnitude.
- the adjustment engine 718 determines the value of the factor from the number of relevant popularity time change windows during which the query 708 was submitted.
- a relevant popularity time change window is a popularity time change window for one of the related queries for the document being scored.
- the factor can have a magnitude derived from the number of relevant popularity time change windows during which the query 708 was submitted.
- the adjustment engine 718 can sum, average, or otherwise combine a score for each query with a relevant popularity time change window during which the query 708 was submitted.
- the score for each popularity window can be derived from the magnitude of the change in popularity during the popularity time change window or can be derived from the length of the time change window.
- the score can have a greater magnitude when the change is greater and a greater magnitude when the length is smaller.
- the direction of the score e.g., positive or negative, can be derived from whether the popularity increased or decreased during the time window.
- a particular query is submitted as a query refinement of another query if a user first submits the other query and then submits the particular query after the other query.
- the particular query must include one or more terms of the other query to be considered a refinement. For example, “Olympics 2010” is a refinement of “Olympics,” but “Winter competition 2010” is not a refinement of “Olympics.”
- the particular query must follow the other query within a threshold number of queries or a threshold amount of time of the other query.
- the query “Olympics 2010” could be identified as a refinement for the query “Olympics.”
- the user must not select any search results responsive to the other query before submitting the particular query in order for the particular query to be considered a query refinement.
- the ranking engine 704 receives the document-score pairs 706 and the score adjustments 710 for the documents, and ranks the documents according to the scores and score adjustments.
- the ranking engine 704 generates adjusted scores for documents having score adjustments, and then ranks each document according to the adjusted score for the document if the document has an adjusted score, and otherwise according to the unadjusted score for the document.
- FIG. 8 illustrates an example technique 800 for ranking documents responsive to a user-submitted query according to whether queries associated with the documents have a popularity time change window that overlaps with the time that the user-submitted query was submitted.
- the example technique 800 will be described in reference to a system that performs the technique 800 .
- the system can be, for example, the system 700 .
- the system stores popularity data for one or more queries ( 802 ), for example, as described above with reference to FIG. 7 .
- the system receives a query submitted at a particular time ( 804 ), for example, as described above with reference to FIG. 2 .
- the system identifies documents responsive to the query and obtains a score for each document ( 806 ), for example, as described above with reference to FIG. 2 .
- the system adjusts the score for one or more of the plurality of documents according to whether the particular time is within a popularity time change window for one or more related queries for the document ( 808 ), for example, as described above with reference to FIG. 7 .
- the popularity time change window is a re-occurring period of time during which a popularity of the query temporarily changes beyond a threshold amount and can be determined, for example, using conventional time series analysis techniques.
- the system compares a score derived from the popularity of the query, for example, the popularity of the query during a particular time period divided by the average popularity of the query, and compares that score to a threshold to determine whether there is a popularity time change window for the query.
- the system determines a score adjustment for all documents, where the impact of any one related query on the factor for the document is weighted by a measure of the query popularity, for example, the popularity during a time period corresponding to the current time period divided by the average popularity of the query.
- the system ranks the document according to the scores and adjusted scores ( 810 ), for example, as described above with reference to FIG. 7 .
- the system then presents the responsive documents according to the determined rank.
- the system can send the ranked list of search results corresponding to the documents to a user device for presentation to the user.
- FIG. 9 illustrates an example system 900 that includes a score adjuster 902 .
- the score adjuster 902 is an example component of the rank modifier engine 256 described above with reference to FIG. 2 , and can be used instead of or in addition to the score adjusters 402 and 702 described above with reference to FIGS. 4 and 7 .
- the score adjuster 902 determines score adjustments for documents responsive to a submitted query according to time trend data 904 generated by a time trend engine 906 from query popularity data 908 . The score adjustments are then provided to ranking engine 910 .
- the time trend engine 906 receives the query popularity data 908 and processes the query popularity data to build a table storing time trend data 904 .
- the query popularity data 908 is described in more detail above with reference to FIG. 7 .
- the time trend engine 906 analyzes the query popularity data 908 to identify one or more recurring queries.
- Each recurring query is a query that has multiple spikes in popularity over a period time.
- the period of time can be, for example, a year or a month.
- Data from multiple periods of time can be aggregated in the query popularity data 908 .
- the data from multiple years can be aggregated by period of time (date, month, etc.), as described above with reference to FIG. 7 .
- a spike in popularity occurs when the popularity of a query temporarily increases beyond a threshold amount.
- the query “playoff schedule” can be associated with spikes in popularity during January, April, and October (corresponding to the playoff season for the National Football League, National Basketball Association, and Major League Baseball, respectively), and therefore can be identified as a recurring query.
- the time trend engine 904 identifies one or more extended queries for each recurring query.
- Each extended query includes each term of the recurring query and one or more additional terms. For example, the time trend engine 904 can identify the extended queries “playoff schedule nfl,” “playoff schedule nba,” and “playoff schedule mlb” for the recurring query “playoff schedule.”
- the time trend engine 904 can identify the extended queries using various methods.
- the extended queries are query refinements of the recurring queries. Query refinements are described in more detail above.
- the time trend engine 904 then adds entries to the time trend data 904 for each of the recurring queries.
- the time trend engine 904 can generate multiple entries for each recurring query. Each entry corresponds to a recurring query and a particular period of time (e.g., two weeks). The entry associates the recurring query and a particular period of time with one of the extended queries.
- the extended query associated with the recurring query and the period of time is the extended query that is the most popular during the period of time.
- the entries associate at least some of the recurring queries and time periods with multiple extended queries, for example, when multiple extended queries have a score that is greater than a threshold for the period.
- the score adjuster 902 determines an appropriate score adjustment for documents responsive to a query, and sends the score adjustment to the ranking engine 910 for use in scoring and ranking the documents.
- the score adjustment is an amount to adjust the score.
- the score adjustment is information to be used in determining the score. For example, the score adjuster 902 can indicate that the ranking engine should assign higher scores to documents that contain particular terms or that are associated with queries that contain particular terms.
- the score adjuster 902 receives an original query and identifies an entry in the time trend table 908 corresponding to the original query and the time period during which the query was submitted.
- the entry associates the original query and the time period with an extended query, as described above.
- the score adjuster 902 determines an appropriate score adjustment based on the extended query.
- the score adjuster 902 instructs the ranking engine 903 to assign higher scores that it normally would to documents that include terms in the extended query but not in the original query.
- the score adjuster 902 instructs the ranking engine 903 to assign higher scores than it normally would to documents that are associated with queries that include terms in the extended query that are not in the original query.
- the score adjuster 902 can determine which documents are associated with which queries using document-query pair data, described above with reference to FIG. 4 .
- the score adjuster 902 analyzes the documents and/or document-query pair data itself to determine the appropriate score adjustment, and provides the value of the score adjustment to the ranking engine 910 .
- the score adjuster 902 can adjust the scores of documents associated with queries or including terms in the extended query that are not in the original query by a factor derived from the popularity score for the extended query during the time period.
- FIG. 10 illustrates an example technique 1000 for generating time trend data.
- the example technique 1000 will be described in reference to a system that performs the technique 1000 .
- the system can be, for example, the system 1000 .
- the system stores popularity data indicating a popularity of queries over time ( 1002 ), for example, as described above with reference to FIG. 9 .
- the system identifies a first query from the popularity data ( 1004 ).
- the first query is a recurring query, as described above with reference to FIG. 9 .
- the system stores time trend data for the first query for one or more time periods ( 1006 ).
- the data associates the first query and each of the time periods with one of the extended queries.
- the extended query for a given time period can be selected as described above with reference to FIG. 9 .
- FIG. 11 illustrates an example technique 1100 for adjusting document scores based on time trend data.
- the example technique 1100 will be described in reference to a system that performs the technique 1100 .
- the system can be, for example, the system 1000 .
- the system receives a query from a user during a first time period ( 1102 ).
- the query can be received through a search system, as described above with reference to FIG. 2 .
- the system identifies a first extended query associated with the query and the first time period from the time trend data ( 1104 ).
- the system can retrieve the entry corresponding to the query and the first time period from the time trend data.
- the system scores documents responsive to the first query based, at least in part, on the first extended query.
- the system can score the documents using a ranking engine as described above.
- the system provides additional information to the ranking engine based on the first extended query, for example, as described above with reference to FIG. 9 .
- the system calculates and provides a score adjustment amount to the ranking engine, as described above with reference to FIG. 9 .
- FIG. 12 illustrates an example architecture of a system 1200 .
- the system 1200 generally consists of a server 1202 .
- the server is optionally connected to one or more client devices 1204 through a network 1206 .
- the server 1202 consists of one or more data processing apparatus. While only one data processing apparatus is shown in FIG. 12 , multiple data processing apparatus can be used.
- the server includes various modules, e.g. executable software programs, including a score adjuster 1208 and a search engine 1210 . Each module runs as part of the operating system on the server, runs as an application on the server, or runs as part of the operating system and part of an application on the server.
- the score adjuster 1208 determines appropriate score adjustments for documents responsive to a query, for example, as described above with reference to FIGS. 4-11 .
- the score adjuster 1208 can be one or more of the score adjuster 402 , the score adjuster 702 , and the score adjuster 902 described above with reference to FIGS. 4 , 7 , and 9 .
- the search engine 1210 receives queries from users, processes the queries to identify and rank search results, and presents the ranked search results to users, for example, as described above with reference to FIG. 2 .
- the server 1202 can also have hardware or firmware devices including one or more processors 1212 , one or more additional devices 1214 , computer readable medium 1216 , a communication interface 1218 , and one or more user interface devices 1220 .
- Each processor 1212 is capable of processing instructions for execution within the server 1202 .
- the processor 1212 is a single-threaded processor.
- the processor 1212 is a multi-threaded processor.
- Each processor 1212 is capable of processing instructions stored on the computer readable medium 1216 or on a storage device such as one of the additional devices 1214 .
- the server 1202 uses its communication interface 1218 to communicate with one or more computers, for example, over a network. Examples of user interface devices 1220 include a display, a camera, a speaker, a microphone, a tactile feedback device, a keyboard, and a mouse.
- the server 1202 can store instructions that implement operations associated with the modules described above, for example, on the computer readable medium 1216 or one or more additional devices 1214 , for example, one or more of a floppy disk device, a hard disk device, an optical disk device, or a tape device. In some implementations, the server 1202 also stores additional data, for example, associations between documents and queries, on the computer readable medium 1216 or one or more additional devices 1214 .
- the client device 1204 is connected to the server 1202 through the network 1206 . Users submit search queries to the server 1202 , view search results responsive to their queries received from the server, and select search results received from the server 1202 using client devices such as the client device 1204 , for example, through a web-browser running on the computer.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
score(r)=number of times query r is submitted during time period t/number of times query u is submitted during time period t
score(r)=number of times query refinement r is submitted during time period t/number of times query u is submitted during time period t
score(e)=number of times query e is submitted during time period t/number of times query r is submitted during time period t
score(e)=number of times query refinement e is submitted during time period t/number of times query r is submitted during time period t
Claims (9)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/718,634 US8924379B1 (en) | 2010-03-05 | 2010-03-05 | Temporal-based score adjustments |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/718,634 US8924379B1 (en) | 2010-03-05 | 2010-03-05 | Temporal-based score adjustments |
Publications (1)
Publication Number | Publication Date |
---|---|
US8924379B1 true US8924379B1 (en) | 2014-12-30 |
Family
ID=52112610
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/718,634 Expired - Fee Related US8924379B1 (en) | 2010-03-05 | 2010-03-05 | Temporal-based score adjustments |
Country Status (1)
Country | Link |
---|---|
US (1) | US8924379B1 (en) |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100325131A1 (en) * | 2009-06-22 | 2010-12-23 | Microsoft Corporation | Assigning relevance weights based on temporal dynamics |
US20150178407A1 (en) * | 2013-12-20 | 2015-06-25 | Microsoft Corporation | Constructing queries for execution over multi-dimensional data structures |
US9183499B1 (en) | 2013-04-19 | 2015-11-10 | Google Inc. | Evaluating quality based on neighbor features |
US9390143B2 (en) | 2009-10-02 | 2016-07-12 | Google Inc. | Recent interest based relevance scoring |
US20160364502A1 (en) * | 2015-06-15 | 2016-12-15 | Yahoo! Inc. | Seasonal query suggestion system and method |
US9811566B1 (en) | 2006-11-02 | 2017-11-07 | Google Inc. | Modifying search result ranking based on implicit user feedback |
US10339564B2 (en) * | 2016-02-16 | 2019-07-02 | Oracle International Corporation | System and method for providing an adaptively ordered presentation of objects |
US10795642B2 (en) | 2016-09-21 | 2020-10-06 | International Business Machines Corporation | Preserving temporal relevance in a response to a query |
US10877730B2 (en) | 2016-09-21 | 2020-12-29 | International Business Machines Corporation | Preserving temporal relevance of content within a corpus |
US10936687B1 (en) | 2010-04-21 | 2021-03-02 | Richard Paiz | Codex search patterns virtual maestro |
US11048765B1 (en) | 2008-06-25 | 2021-06-29 | Richard Paiz | Search engine optimizer |
US11379473B1 (en) | 2010-04-21 | 2022-07-05 | Richard Paiz | Site rank codex search patterns |
US11423018B1 (en) | 2010-04-21 | 2022-08-23 | Richard Paiz | Multivariate analysis replica intelligent ambience evolving system |
US11741090B1 (en) | 2013-02-26 | 2023-08-29 | Richard Paiz | Site rank codex search patterns |
US11809506B1 (en) | 2013-02-26 | 2023-11-07 | Richard Paiz | Multivariant analyzing replicating intelligent ambience evolving system |
Citations (244)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5265065A (en) | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US5488725A (en) | 1991-10-08 | 1996-01-30 | West Publishing Company | System of document representation retrieval by successive iterated probability sampling |
US5696962A (en) | 1993-06-24 | 1997-12-09 | Xerox Corporation | Method for computerized information retrieval using shallow linguistic analysis |
US5920854A (en) | 1996-08-14 | 1999-07-06 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6026288A (en) | 1996-12-10 | 2000-02-15 | Lucent Technologies, Inc. | Communications system with an apparatus for controlling overall power consumption based on received signal strength |
US6067565A (en) | 1998-01-15 | 2000-05-23 | Microsoft Corporation | Technique for prefetching a web page of potential future interest in lieu of continuing a current information download |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6078917A (en) | 1997-12-18 | 2000-06-20 | International Business Machines Corporation | System for searching internet using automatic relevance feedback |
US6088692A (en) | 1994-12-06 | 2000-07-11 | University Of Central Florida | Natural language method and system for searching for and ranking relevant documents from a computer database |
US6134532A (en) | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
WO2000077689A1 (en) | 1999-06-16 | 2000-12-21 | Triogo, Inc. | A process for improving search engine efficiency using user feedback |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6182066B1 (en) | 1997-11-26 | 2001-01-30 | International Business Machines Corp. | Category processing of query topics and electronic document content topics |
US6185559B1 (en) | 1997-05-09 | 2001-02-06 | Hitachi America, Ltd. | Method and apparatus for dynamically counting large itemsets |
WO2001016807A1 (en) | 1999-08-31 | 2001-03-08 | Mindcrossing, Inc. | An internet search system for tracking and ranking selected records from a previous search |
US20010000356A1 (en) | 1995-07-07 | 2001-04-19 | Woods William A. | Method and apparatus for generating query responses in a computer-based document retrieval system |
US6249252B1 (en) | 1996-09-09 | 2001-06-19 | Tracbeam Llc | Wireless location using multiple location estimators |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
WO2001067297A1 (en) | 2000-03-07 | 2001-09-13 | Tzunami Inc. | System and method for computer searching |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US6327590B1 (en) | 1999-05-05 | 2001-12-04 | Xerox Corporation | System and method for collaborative ranking of search results employing user and group profiles derived from document collection content analysis |
US6341283B1 (en) | 1998-05-21 | 2002-01-22 | Fujitsu Limited | Apparatus for data decomposition and method and storage medium therefor |
US6353849B1 (en) | 1996-12-20 | 2002-03-05 | Intel Corporation | System and server for providing customized web information based on attributes of the requestor |
US20020034292A1 (en) | 2000-08-22 | 2002-03-21 | Tuoriniemi Veijo M. | System and a method to match demand and supply based on geographical location derived from a positioning system |
US6363378B1 (en) | 1998-10-13 | 2002-03-26 | Oracle Corporation | Ranking of query feedback terms in an information retrieval system |
US6370526B1 (en) | 1999-05-18 | 2002-04-09 | International Business Machines Corporation | Self-adaptive method and system for providing a user-preferred ranking order of object sets |
US20020042791A1 (en) | 2000-07-06 | 2002-04-11 | Google, Inc. | Methods and apparatus for using a modified index to provide search results in response to an ambiguous search query |
US20020049752A1 (en) | 1998-03-03 | 2002-04-25 | Dwayne Bowman | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US20020103790A1 (en) | 2001-01-30 | 2002-08-01 | Wang Shirley S. | Utility for cross platform database query |
US20020123988A1 (en) | 2001-03-02 | 2002-09-05 | Google, Inc. | Methods and apparatus for employing usage statistics in document retrieval |
US20020133481A1 (en) | 2000-07-06 | 2002-09-19 | Google, Inc. | Methods and apparatus for providing search results in response to an ambiguous search query |
US20020165849A1 (en) | 1999-05-28 | 2002-11-07 | Singh Narinder Pal | Automatic advertiser notification for a system for providing place and price protection in a search result list generated by a computer network search engine |
US6480843B2 (en) | 1998-11-03 | 2002-11-12 | Nec Usa, Inc. | Supporting web-query expansion efficiently using multi-granularity indexing and query processing |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US20030009399A1 (en) | 2001-03-22 | 2003-01-09 | Boerner Sean T. | Method and system to identify discrete trends in time series |
US20030018707A1 (en) | 2001-07-20 | 2003-01-23 | Flocken Philip Andrew | Server-side filter for corrupt web-browser cookies |
US20030028529A1 (en) | 2001-08-03 | 2003-02-06 | Cheung Dominic Dough-Ming | Search engine account monitoring |
US20030037074A1 (en) | 2001-05-01 | 2003-02-20 | Ibm Corporation | System and method for aggregating ranking results from various sources to improve the results of web searching |
US6526440B1 (en) | 2001-01-30 | 2003-02-25 | Google, Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US20030078914A1 (en) | 2001-10-18 | 2003-04-24 | Witbrock Michael J. | Search results using editor feedback |
US6560590B1 (en) | 2000-02-14 | 2003-05-06 | Kana Software, Inc. | Method and apparatus for multiple tiered matching of natural language queries to positions in a text corpus |
US6567103B1 (en) | 2000-08-02 | 2003-05-20 | Verity, Inc. | Graphical search results system and method |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US6587848B1 (en) | 2000-03-08 | 2003-07-01 | International Business Machines Corporation | Methods and apparatus for performing an affinity based similarity search |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030149704A1 (en) | 2002-02-05 | 2003-08-07 | Hitachi, Inc. | Similarity-based search method by relevance feedback |
US6615209B1 (en) | 2000-02-22 | 2003-09-02 | Google, Inc. | Detecting query-specific duplicate documents |
US20030167252A1 (en) | 2002-02-26 | 2003-09-04 | Pliant Technologies, Inc. | Topic identification and use thereof in information retrieval systems |
US6623529B1 (en) | 1998-02-23 | 2003-09-23 | David Lakritz | Multilingual electronic document translation, management, and delivery system |
US20030195877A1 (en) | 1999-12-08 | 2003-10-16 | Ford James L. | Search query processing to provide category-ranked presentation of search results |
US20030204495A1 (en) | 2002-04-30 | 2003-10-30 | Lehnert Bernd R. | Data gathering |
US20030220913A1 (en) | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US6658423B1 (en) | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US20030229640A1 (en) | 2002-06-07 | 2003-12-11 | International Business Machines Corporation | Parallel database query processing for non-uniform data sources via buffered access |
US6671681B1 (en) | 2000-05-31 | 2003-12-30 | International Business Machines Corporation | System and technique for suggesting alternate query expressions based on prior user selections and their query strings |
US20040006456A1 (en) | 1998-11-30 | 2004-01-08 | Wayne Loofbourrow | Multi-language document search and retrieval system |
US20040006740A1 (en) | 2000-09-29 | 2004-01-08 | Uwe Krohn | Information access |
US6678681B1 (en) | 1999-03-10 | 2004-01-13 | Google Inc. | Information extraction from a database |
US20040034632A1 (en) | 2002-07-31 | 2004-02-19 | International Business Machines Corporation | Automatic query refinement |
US6701309B1 (en) | 2000-04-21 | 2004-03-02 | Lycos, Inc. | Method and system for collecting related queries |
US20040059708A1 (en) | 2002-09-24 | 2004-03-25 | Google, Inc. | Methods and apparatus for serving relevant advertisements |
US20040083205A1 (en) | 2002-10-29 | 2004-04-29 | Steve Yeager | Continuous knowledgebase access improvement systems and methods |
US20040093325A1 (en) | 2002-11-07 | 2004-05-13 | International Business Machines Corporation | System and method for location influenced network search |
US6738764B2 (en) | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US6754873B1 (en) | 1999-09-20 | 2004-06-22 | Google Inc. | Techniques for finding related hyperlinked documents using link-based analysis |
US20040119740A1 (en) | 2002-12-24 | 2004-06-24 | Google, Inc., A Corporation Of The State Of California | Methods and apparatus for displaying and replying to electronic messages |
US20040122811A1 (en) | 1997-01-10 | 2004-06-24 | Google, Inc. | Method for searching media |
WO2004059514A1 (en) | 2002-12-24 | 2004-07-15 | American Type Culture Collection | Systems and methods for enabling a user to find information of interest to the user |
US20040153472A1 (en) | 2003-01-31 | 2004-08-05 | Rieffanaugh Neal King | Human resource networking system and method thereof |
US20040158560A1 (en) | 2003-02-12 | 2004-08-12 | Ji-Rong Wen | Systems and methods for query expansion |
US6792416B2 (en) | 1999-09-21 | 2004-09-14 | International Business Machines Corporation | Managing results of federated searches across heterogeneous datastores with a federated result set cursor object |
US6795820B2 (en) | 2001-06-20 | 2004-09-21 | Nextpage, Inc. | Metasearch technique that ranks documents obtained from multiple collections |
US20040186996A1 (en) | 2000-03-29 | 2004-09-23 | Gibbs Benjamin K. | Unique digital signature |
US20040199419A1 (en) | 2001-11-13 | 2004-10-07 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US20050015366A1 (en) | 2003-07-18 | 2005-01-20 | Carrasco John Joseph M. | Disambiguation of search phrases using interpretation clusters |
US20050027691A1 (en) | 2003-07-28 | 2005-02-03 | Sergey Brin | System and method for providing a user interface with search query broadening |
US6853993B2 (en) | 1998-07-15 | 2005-02-08 | A9.Com, Inc. | System and methods for predicting correct spellings of terms in multiple-term search queries |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050050014A1 (en) | 2003-08-29 | 2005-03-03 | Gosse David B. | Method, device and software for querying and presenting search results |
US20050055342A1 (en) | 2000-11-08 | 2005-03-10 | Bharat Krishna Asur | Method for estimating coverage of Web search engines |
US20050055345A1 (en) | 2002-02-14 | 2005-03-10 | Infoglide Software Corporation | Similarity search engine for use with relational databases |
US20050060311A1 (en) * | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using related queries |
US20050060290A1 (en) | 2003-09-15 | 2005-03-17 | International Business Machines Corporation | Automatic query routing and rank configuration for search queries in an information retrieval system |
US20050060310A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050071741A1 (en) | 2003-09-30 | 2005-03-31 | Anurag Acharya | Information retrieval based on historical data |
US6877002B2 (en) | 2000-11-21 | 2005-04-05 | America Online, Inc. | Fuzzy database retrieval |
US6882999B2 (en) | 1999-05-03 | 2005-04-19 | Microsoft Corporation | URL mapping methods and systems |
US20050102282A1 (en) | 2003-11-07 | 2005-05-12 | Greg Linden | Method for personalized search |
US6901402B1 (en) | 1999-06-18 | 2005-05-31 | Microsoft Corporation | System for improving the performance of information retrieval-type tasks by identifying the relations of constituents |
US20050125376A1 (en) * | 2003-12-08 | 2005-06-09 | Andy Curtis | Methods and systems for providing a response to a query |
US6912505B2 (en) | 1998-09-18 | 2005-06-28 | Amazon.Com, Inc. | Use of product viewing histories of users to identify related products |
US20050160083A1 (en) | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US20050192946A1 (en) | 2003-12-29 | 2005-09-01 | Yahoo! Inc. | Lateral search |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
US6944611B2 (en) | 2000-08-28 | 2005-09-13 | Emotion, Inc. | Method and apparatus for digital media management, retrieval, and collaboration |
US20050222998A1 (en) | 2004-03-31 | 2005-10-06 | Oce-Technologies B.V. | Apparatus and computerised method for determining constituent words of a compound word |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US6954750B2 (en) | 2000-10-10 | 2005-10-11 | Content Analyst Company, Llc | Method and system for facilitating the refinement of data queries |
US20050240580A1 (en) | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20050240576A1 (en) | 2003-06-10 | 2005-10-27 | John Piscitello | Named URL entry |
US20050256848A1 (en) | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US6990453B2 (en) | 2000-07-31 | 2006-01-24 | Landmark Digital Services Llc | System and methods for recognizing sound and music signals in high noise and distortion |
US20060047643A1 (en) | 2004-08-31 | 2006-03-02 | Chirag Chaman | Method and system for a personalized search engine |
US7016939B1 (en) | 2001-07-26 | 2006-03-21 | Mcafee, Inc. | Intelligent SPAM detection system using statistical analysis |
US20060069667A1 (en) | 2004-09-30 | 2006-03-30 | Microsoft Corporation | Content evaluation |
US20060074903A1 (en) | 2004-09-30 | 2006-04-06 | Microsoft Corporation | System and method for ranking search results using click distance |
US7028027B1 (en) | 2002-09-17 | 2006-04-11 | Yahoo! Inc. | Associating documents with classifications and ranking documents based on classification weights |
US20060089926A1 (en) | 2004-10-27 | 2006-04-27 | Harris Corporation, Corporation Of The State Of Delaware | Method for re-ranking documents retrieved from a document database |
US20060095421A1 (en) | 2004-10-22 | 2006-05-04 | Canon Kabushiki Kaisha | Method, apparatus, and program for searching for data |
US20060106793A1 (en) | 2003-12-29 | 2006-05-18 | Ping Liang | Internet and computer information retrieval and mining with intelligent conceptual filtering, visualization and automation |
US7072886B2 (en) | 2001-05-15 | 2006-07-04 | Nokia Corporation | Method and business process to maintain privacy in distributed recommendation systems |
US7085761B2 (en) | 2002-06-28 | 2006-08-01 | Fujitsu Limited | Program for changing search results rank, recording medium for recording such a program, and content search processing method |
US20060173830A1 (en) | 2003-07-23 | 2006-08-03 | Barry Smyth | Information retrieval |
US20060195443A1 (en) | 2005-02-11 | 2006-08-31 | Franklin Gary L | Information prioritisation system and method |
US20060200476A1 (en) | 2005-03-03 | 2006-09-07 | Microsoft Corporation | Creating, storing and viewing process models |
US20060200556A1 (en) | 2004-12-29 | 2006-09-07 | Scott Brave | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US7113939B2 (en) | 1999-09-21 | 2006-09-26 | International Business Machines Corporation | Architecture to enable search gateways as part of federated search |
US7117206B1 (en) | 1998-01-15 | 2006-10-03 | Overture Services, Inc. | Method for ranking hyperlinked pages using content and connectivity analysis |
US20060230040A1 (en) | 2003-12-08 | 2006-10-12 | Andy Curtis | Methods and systems for providing a response to a query |
US7136849B2 (en) | 2001-08-10 | 2006-11-14 | International Business Machines Corporation | Method systems and computer program products for indicating links to external URLs |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US20070005575A1 (en) | 2005-06-30 | 2007-01-04 | Microsoft Corporation | Prioritizing search results by client search satisfaction |
US20070005588A1 (en) * | 2005-07-01 | 2007-01-04 | Microsoft Corporation | Determining relevance using queries as surrogate content |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US20070050339A1 (en) * | 2005-08-24 | 2007-03-01 | Richard Kasperski | Biasing queries to determine suggested queries |
US20070061211A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Preventing mobile communication facility click fraud |
US20070061195A1 (en) | 2005-09-13 | 2007-03-15 | Yahoo! Inc. | Framework for selecting and delivering advertisements over a network based on combined short-term and long-term user behavioral interests |
US20070081197A1 (en) | 2001-06-22 | 2007-04-12 | Nosa Omoigui | System and method for semantic knowledge retrieval, management, capture, sharing, discovery, delivery and presentation |
US20070106659A1 (en) | 2005-03-18 | 2007-05-10 | Yunshan Lu | Search engine that applies feedback from users to improve search results |
US20070112730A1 (en) | 2005-11-07 | 2007-05-17 | Antonino Gulli | Sampling Internet user traffic to improve search results |
US7222127B1 (en) | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US20070130370A1 (en) | 2005-12-06 | 2007-06-07 | Emeka Akaezuwa | Portable search engine |
US20070156677A1 (en) | 1999-07-21 | 2007-07-05 | Alberti Anemometer Llc | Database access system |
US7243102B1 (en) | 2004-07-01 | 2007-07-10 | Microsoft Corporation | Machine directed improvement of ranking algorithms |
US20070192190A1 (en) | 2005-12-06 | 2007-08-16 | Authenticlick | Method and system for scoring quality of traffic to network sites |
US7266765B2 (en) | 2001-08-31 | 2007-09-04 | Fuji Xerox Co., Ltd. | Detection and processing of annotated anchors |
US20070208730A1 (en) | 2006-03-02 | 2007-09-06 | Microsoft Corporation | Mining web search user behavior to enhance web search relevance |
US20070214131A1 (en) * | 2006-03-13 | 2007-09-13 | Microsoft Corporation | Re-ranking search results based on query log |
US20070233653A1 (en) | 2006-03-31 | 2007-10-04 | Microsoft Corporation | Selecting directly bid upon advertisements for display |
US20070255689A1 (en) | 2006-04-28 | 2007-11-01 | Gordon Sun | System and method for indexing web content using click-through features |
US7293016B1 (en) | 2004-01-22 | 2007-11-06 | Microsoft Corporation | Index partitioning based on document relevance for document indexes |
US20070260596A1 (en) | 2006-03-29 | 2007-11-08 | Koran Joshua M | Behavioral targeting system |
US20070260597A1 (en) | 2006-05-02 | 2007-11-08 | Mark Cramer | Dynamic search engine results employing user behavior |
US20070266021A1 (en) * | 2006-03-06 | 2007-11-15 | Murali Aravamudan | Methods and systems for selecting and presenting content based on dynamically identifying microgenres associated with the content |
US20070266439A1 (en) | 2005-11-30 | 2007-11-15 | Harold Kraft | Privacy management and transaction system |
US20070288450A1 (en) | 2006-04-19 | 2007-12-13 | Datta Ruchira S | Query language determination using query terms and interface language |
US20080010143A1 (en) | 2006-06-22 | 2008-01-10 | Rob Kniaz | Secure and extensible pay per action online advertising |
US20080027913A1 (en) | 2006-07-25 | 2008-01-31 | Yahoo! Inc. | System and method of information retrieval engine evaluation using human judgment input |
US20080052273A1 (en) | 2006-08-22 | 2008-02-28 | Fuji Xerox Co., Ltd. | Apparatus and method for term context modeling for information retrieval |
US20080052219A1 (en) | 2006-03-31 | 2008-02-28 | Combinenet, Inc. | System for and method of expressive auctions of user events |
US20080059453A1 (en) | 2006-08-29 | 2008-03-06 | Raphael Laderman | System and method for enhancing the result of a query |
US20080077570A1 (en) | 2004-10-25 | 2008-03-27 | Infovell, Inc. | Full Text Query and Search Systems and Method of Use |
US20080082518A1 (en) | 2006-09-29 | 2008-04-03 | Loftesness David E | Strategy for Providing Query Results Based on Analysis of User Intent |
US20080091650A1 (en) | 2006-10-11 | 2008-04-17 | Marcus Felipe Fontoura | Augmented Search With Error Detection and Replacement |
US20080104043A1 (en) * | 2006-10-25 | 2008-05-01 | Ashutosh Garg | Server-side match |
US20080114750A1 (en) | 2006-11-14 | 2008-05-15 | Microsoft Corporation | Retrieval and ranking of items utilizing similarity |
US20080114624A1 (en) | 2006-11-13 | 2008-05-15 | Microsoft Corporation | Click-fraud protector |
US20080114729A1 (en) | 2006-11-13 | 2008-05-15 | Google Inc. | Computer-implemented interactive, virtual bookshelf system and method |
US7379951B2 (en) | 2002-05-31 | 2008-05-27 | Microsoft Corporation | Support for real-time queries concerning current state, data and history of a process |
US7382358B2 (en) | 2003-01-16 | 2008-06-03 | Forword Input, Inc. | System and method for continuous stroke word-based text input |
US20080140699A1 (en) | 2005-11-09 | 2008-06-12 | Rosie Jones | System and method for generating substitutable queries |
US7395222B1 (en) | 2000-09-07 | 2008-07-01 | Sotos John G | Method and system for identifying expertise |
US20080162475A1 (en) | 2007-01-03 | 2008-07-03 | Meggs Anthony F | Click-fraud detection method |
US20080183660A1 (en) | 2007-01-30 | 2008-07-31 | Google Inc. | Content identification expansion |
US20080189269A1 (en) | 2006-11-07 | 2008-08-07 | Fast Search & Transfer Asa | Relevance-weighted navigation in information access, search and retrieval |
US20080208825A1 (en) * | 2003-12-08 | 2008-08-28 | Andy Curtis | Methods and systems for providing a response to a query |
US7426507B1 (en) | 2004-07-26 | 2008-09-16 | Google, Inc. | Automatic taxonomy generation in search results using phrases |
US20080228442A1 (en) | 2007-03-07 | 2008-09-18 | Lisa Ellen Lippincott | Statistical data inspector |
US20080256050A1 (en) | 2007-04-10 | 2008-10-16 | Ruofei Zhang | System and method for modeling user selection feedback in a search result page |
US7451487B2 (en) | 2003-09-08 | 2008-11-11 | Sonicwall, Inc. | Fraudulent message detection |
US20080313247A1 (en) | 2007-06-12 | 2008-12-18 | Brian Galvin | Page Ranking Based on a Behavioral WEB Graph |
US20080313168A1 (en) | 2007-06-18 | 2008-12-18 | Microsoft Corporation | Ranking documents based on a series of document graphs |
US20090012969A1 (en) | 2007-07-02 | 2009-01-08 | Rail Peter D | Systems and processes for evaluating webpages |
US20090055392A1 (en) | 2003-03-31 | 2009-02-26 | Google Inc. | Ordering of search results based on language and/or country of the search results |
US20090070194A1 (en) * | 2007-09-06 | 2009-03-12 | Nhn Corporation | Method of providing estimated cost for keyword advertisement |
US7516146B2 (en) | 2003-05-15 | 2009-04-07 | Microsoft Corporation | Fast adaptive document filtering |
US7526470B1 (en) | 2003-05-28 | 2009-04-28 | Microsoft Corporation | System and method for measuring and improving search result relevance based on user satisfaction |
US7533092B2 (en) | 2004-10-28 | 2009-05-12 | Yahoo! Inc. | Link-based spam detection |
US7533130B2 (en) | 2006-12-19 | 2009-05-12 | Yahoo! Inc. | User behavior reporting based on pre-aggregated activity data |
US20090157643A1 (en) | 2007-12-12 | 2009-06-18 | Microsoft Corporation | Semi-supervised part-of-speech tagging |
US7552112B2 (en) | 2006-09-18 | 2009-06-23 | Yahoo! Inc. | Discovering associative intent queries from search web logs |
US20090182723A1 (en) | 2008-01-10 | 2009-07-16 | Microsoft Corporation | Ranking search results using author extraction |
US7565363B2 (en) | 1999-04-01 | 2009-07-21 | Anwar Mohammed S | Search engine with user activity memory |
US7566363B2 (en) | 2007-07-24 | 2009-07-28 | Silverbrook Research Pty Ltd | Alternative phthalocyanine dyes suitable for use in offset inks |
US7574530B2 (en) | 2005-03-10 | 2009-08-11 | Microsoft Corporation | Method and system for web resource location classification and detection |
US7584181B2 (en) | 2003-09-30 | 2009-09-01 | Microsoft Corporation | Implicit links search enhancement system and method for search engines using implicit links generated by mining user access patterns |
US20090228442A1 (en) | 2008-03-10 | 2009-09-10 | Searchme, Inc. | Systems and methods for building a document index |
US7610282B1 (en) | 2007-03-30 | 2009-10-27 | Google Inc. | Rank-adjusted content items |
US20090287656A1 (en) | 2008-05-13 | 2009-11-19 | Bennett James D | Network search engine utilizing client browser favorites |
US7636714B1 (en) | 2005-03-31 | 2009-12-22 | Google Inc. | Determining query term synonyms within query context |
US7657626B1 (en) | 2006-09-19 | 2010-02-02 | Enquisite, Inc. | Click fraud detection |
US7680775B2 (en) | 2005-12-13 | 2010-03-16 | Iac Search & Media, Inc. | Methods and systems for generating query and result-based relevance indexes |
US7693818B2 (en) | 2005-11-15 | 2010-04-06 | Microsoft Corporation | UserRank: ranking linked nodes leveraging user logs |
US20100106706A1 (en) | 2000-05-22 | 2010-04-29 | Yahoo! Inc. | Method and apparatus for identifying related searches in a database search system |
US7716225B1 (en) | 2004-06-17 | 2010-05-11 | Google Inc. | Ranking documents based on user behavior and/or feature data |
US20100131563A1 (en) | 2008-11-25 | 2010-05-27 | Hongfeng Yin | System and methods for automatic clustering of ranked and categorized search objects |
US7747612B2 (en) | 2005-10-31 | 2010-06-29 | Yahoo! Inc. | Indication of exclusive items in a result set |
US7756887B1 (en) | 2004-12-30 | 2010-07-13 | Google Inc. | System and method for modulating search relevancy using pointer activity monitoring |
US20100205541A1 (en) | 2009-02-11 | 2010-08-12 | Jeffrey A. Rapaport | social network driven indexing system for instantly clustering people with concurrent focus on same topic into on-topic chat rooms and/or for generating on-topic search results tailored to user preferences regarding topic |
US7783632B2 (en) | 2005-11-03 | 2010-08-24 | Microsoft Corporation | Using popularity data for ranking |
US20100228738A1 (en) | 2009-03-04 | 2010-09-09 | Mehta Rupesh R | Adaptive document sampling for information extraction |
US7801885B1 (en) | 2007-01-25 | 2010-09-21 | Neal Akash Verma | Search engine system and method with user feedback on search results |
US20100241472A1 (en) | 2009-03-23 | 2010-09-23 | David Antonio Hernandez | Illness specific diagnostic system |
US7809716B2 (en) | 2006-06-27 | 2010-10-05 | International Business Machines Corporation | Method and apparatus for establishing relationship between documents |
US7818320B2 (en) | 2007-05-31 | 2010-10-19 | Yahoo! Inc. | Enhanced search results based on user feedback relating to search result abstracts |
US7836058B2 (en) | 2008-03-27 | 2010-11-16 | Microsoft Corporation | Web searching |
US7844589B2 (en) | 2003-11-18 | 2010-11-30 | Yahoo! Inc. | Method and apparatus for performing a search |
US7849089B2 (en) | 2005-05-10 | 2010-12-07 | Microsoft Corporation | Method and system for adapting search results to personal information needs |
US7853557B2 (en) | 2002-06-14 | 2010-12-14 | Siebel Systems, Inc. | Method and computer for responding to a query according to the language used |
US7877404B2 (en) | 2008-03-05 | 2011-01-25 | Microsoft Corporation | Query classification based on query click logs |
US7895177B2 (en) | 2007-05-29 | 2011-02-22 | Yahoo! Inc. | Enabling searching of user ratings and reviews using user profile location, and social networks |
US20110064795A1 (en) | 2003-07-25 | 2011-03-17 | Ac Immune Sa | Therapeutic vaccine targeted against P-glycoprotein 170 for inhibiting multidrug resistance in the treatment of cancers |
US7925498B1 (en) | 2006-12-29 | 2011-04-12 | Google Inc. | Identifying a synonym with N-gram agreement for a query phrase |
US7953740B1 (en) | 2006-02-13 | 2011-05-31 | Amazon Technologies, Inc. | Detection of behavior-based associations between search strings and items |
US7974974B2 (en) | 2008-03-20 | 2011-07-05 | Microsoft Corporation | Techniques to perform relative ranking for search results |
US7987185B1 (en) | 2006-12-29 | 2011-07-26 | Google Inc. | Ranking custom search results |
US8001136B1 (en) | 2007-07-10 | 2011-08-16 | Google Inc. | Longest-common-subsequence detection for common synonyms |
US8019650B2 (en) | 2005-01-21 | 2011-09-13 | Amazon Technologies, Inc. | Method and system for producing item comparisons |
US8024330B1 (en) * | 2004-05-20 | 2011-09-20 | Hector Franco | Collaborative incident alert system for mobile devices |
US8037043B2 (en) | 2008-09-09 | 2011-10-11 | Microsoft Corporation | Information retrieval system |
US8037086B1 (en) | 2007-07-10 | 2011-10-11 | Google Inc. | Identifying common co-occurring elements in lists |
US8037042B2 (en) | 2007-05-10 | 2011-10-11 | Microsoft Corporation | Automated analysis of user search behavior |
US8051061B2 (en) | 2007-07-20 | 2011-11-01 | Microsoft Corporation | Cross-lingual query suggestion |
US8060497B1 (en) | 2009-07-23 | 2011-11-15 | Google Inc. | Framework for evaluating web search scoring functions |
US8060456B2 (en) | 2008-10-01 | 2011-11-15 | Microsoft Corporation | Training a search result ranker with automatically-generated samples |
US8065296B1 (en) | 2004-09-29 | 2011-11-22 | Google Inc. | Systems and methods for determining a quality of provided items |
US8069182B2 (en) | 2006-04-24 | 2011-11-29 | Working Research, Inc. | Relevancy-based domain classification |
US20110295844A1 (en) | 2010-05-27 | 2011-12-01 | Microsoft Corporation | Enhancing freshness of search results |
US8073263B2 (en) * | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US8073772B2 (en) | 1999-11-05 | 2011-12-06 | American Express Travel Related Services Company, Inc. | Systems and methods for processing transactions using multiple budgets |
US8086599B1 (en) | 2006-10-24 | 2011-12-27 | Google Inc. | Method and apparatus for automatically identifying compunds |
US8086690B1 (en) | 2003-09-22 | 2011-12-27 | Google Inc. | Determining geographical relevance of web documents |
US8090717B1 (en) | 2002-09-20 | 2012-01-03 | Google Inc. | Methods and apparatus for ranking documents |
US8156111B2 (en) * | 2008-11-24 | 2012-04-10 | Yahoo! Inc. | Identifying and expanding implicitly temporally qualified queries |
US8412699B1 (en) * | 2009-06-12 | 2013-04-02 | Google Inc. | Fresh related search suggestions |
US8458165B2 (en) | 2007-06-28 | 2013-06-04 | Oracle International Corporation | System and method for applying ranking SVM in query relaxation |
US8498974B1 (en) | 2009-08-31 | 2013-07-30 | Google Inc. | Refining search results |
-
2010
- 2010-03-05 US US12/718,634 patent/US8924379B1/en not_active Expired - Fee Related
Patent Citations (257)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5488725A (en) | 1991-10-08 | 1996-01-30 | West Publishing Company | System of document representation retrieval by successive iterated probability sampling |
US5265065A (en) | 1991-10-08 | 1993-11-23 | West Publishing Company | Method and apparatus for information retrieval from a database by replacing domain specific stemmed phases in a natural language to create a search query |
US5696962A (en) | 1993-06-24 | 1997-12-09 | Xerox Corporation | Method for computerized information retrieval using shallow linguistic analysis |
US6088692A (en) | 1994-12-06 | 2000-07-11 | University Of Central Florida | Natural language method and system for searching for and ranking relevant documents from a computer database |
US20010000356A1 (en) | 1995-07-07 | 2001-04-19 | Woods William A. | Method and apparatus for generating query responses in a computer-based document retrieval system |
US5963940A (en) | 1995-08-16 | 1999-10-05 | Syracuse University | Natural language information retrieval system and method |
US5920854A (en) | 1996-08-14 | 1999-07-06 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US6249252B1 (en) | 1996-09-09 | 2001-06-19 | Tracbeam Llc | Wireless location using multiple location estimators |
US6026288A (en) | 1996-12-10 | 2000-02-15 | Lucent Technologies, Inc. | Communications system with an apparatus for controlling overall power consumption based on received signal strength |
US6353849B1 (en) | 1996-12-20 | 2002-03-05 | Intel Corporation | System and server for providing customized web information based on attributes of the requestor |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US20040122811A1 (en) | 1997-01-10 | 2004-06-24 | Google, Inc. | Method for searching media |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6185559B1 (en) | 1997-05-09 | 2001-02-06 | Hitachi America, Ltd. | Method and apparatus for dynamically counting large itemsets |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6539377B1 (en) | 1997-08-01 | 2003-03-25 | Ask Jeeves, Inc. | Personalized search methods |
US6816850B2 (en) | 1997-08-01 | 2004-11-09 | Ask Jeeves, Inc. | Personalized search methods including combining index entries for catagories of personal data |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6134532A (en) | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6182066B1 (en) | 1997-11-26 | 2001-01-30 | International Business Machines Corp. | Category processing of query topics and electronic document content topics |
US6078917A (en) | 1997-12-18 | 2000-06-20 | International Business Machines Corporation | System for searching internet using automatic relevance feedback |
US7117206B1 (en) | 1998-01-15 | 2006-10-03 | Overture Services, Inc. | Method for ranking hyperlinked pages using content and connectivity analysis |
US6067565A (en) | 1998-01-15 | 2000-05-23 | Microsoft Corporation | Technique for prefetching a web page of potential future interest in lieu of continuing a current information download |
US6623529B1 (en) | 1998-02-23 | 2003-09-23 | David Lakritz | Multilingual electronic document translation, management, and delivery system |
US20020049752A1 (en) | 1998-03-03 | 2002-04-25 | Dwayne Bowman | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US6341283B1 (en) | 1998-05-21 | 2002-01-22 | Fujitsu Limited | Apparatus for data decomposition and method and storage medium therefor |
US6853993B2 (en) | 1998-07-15 | 2005-02-08 | A9.Com, Inc. | System and methods for predicting correct spellings of terms in multiple-term search queries |
US6912505B2 (en) | 1998-09-18 | 2005-06-28 | Amazon.Com, Inc. | Use of product viewing histories of users to identify related products |
US6363378B1 (en) | 1998-10-13 | 2002-03-26 | Oracle Corporation | Ranking of query feedback terms in an information retrieval system |
US6480843B2 (en) | 1998-11-03 | 2002-11-12 | Nec Usa, Inc. | Supporting web-query expansion efficiently using multi-granularity indexing and query processing |
US20040006456A1 (en) | 1998-11-30 | 2004-01-08 | Wayne Loofbourrow | Multi-language document search and retrieval system |
US6678681B1 (en) | 1999-03-10 | 2004-01-13 | Google Inc. | Information extraction from a database |
US7565363B2 (en) | 1999-04-01 | 2009-07-21 | Anwar Mohammed S | Search engine with user activity memory |
US6882999B2 (en) | 1999-05-03 | 2005-04-19 | Microsoft Corporation | URL mapping methods and systems |
US6327590B1 (en) | 1999-05-05 | 2001-12-04 | Xerox Corporation | System and method for collaborative ranking of search results employing user and group profiles derived from document collection content analysis |
US6370526B1 (en) | 1999-05-18 | 2002-04-09 | International Business Machines Corporation | Self-adaptive method and system for providing a user-preferred ranking order of object sets |
US20020165849A1 (en) | 1999-05-28 | 2002-11-07 | Singh Narinder Pal | Automatic advertiser notification for a system for providing place and price protection in a search result list generated by a computer network search engine |
WO2000077689A1 (en) | 1999-06-16 | 2000-12-21 | Triogo, Inc. | A process for improving search engine efficiency using user feedback |
US6901402B1 (en) | 1999-06-18 | 2005-05-31 | Microsoft Corporation | System for improving the performance of information retrieval-type tasks by identifying the relations of constituents |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20070156677A1 (en) | 1999-07-21 | 2007-07-05 | Alberti Anemometer Llc | Database access system |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
WO2001016807A1 (en) | 1999-08-31 | 2001-03-08 | Mindcrossing, Inc. | An internet search system for tracking and ranking selected records from a previous search |
US6754873B1 (en) | 1999-09-20 | 2004-06-22 | Google Inc. | Techniques for finding related hyperlinked documents using link-based analysis |
US6792416B2 (en) | 1999-09-21 | 2004-09-14 | International Business Machines Corporation | Managing results of federated searches across heterogeneous datastores with a federated result set cursor object |
US7113939B2 (en) | 1999-09-21 | 2006-09-26 | International Business Machines Corporation | Architecture to enable search gateways as part of federated search |
US8073772B2 (en) | 1999-11-05 | 2011-12-06 | American Express Travel Related Services Company, Inc. | Systems and methods for processing transactions using multiple budgets |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US20030195877A1 (en) | 1999-12-08 | 2003-10-16 | Ford James L. | Search query processing to provide category-ranked presentation of search results |
US6963867B2 (en) | 1999-12-08 | 2005-11-08 | A9.Com, Inc. | Search query processing to provide category-ranked presentation of search results |
US20030120654A1 (en) | 2000-01-14 | 2003-06-26 | International Business Machines Corporation | Metadata search results ranking system |
US6560590B1 (en) | 2000-02-14 | 2003-05-06 | Kana Software, Inc. | Method and apparatus for multiple tiered matching of natural language queries to positions in a text corpus |
US6615209B1 (en) | 2000-02-22 | 2003-09-02 | Google, Inc. | Detecting query-specific duplicate documents |
WO2001067297A1 (en) | 2000-03-07 | 2001-09-13 | Tzunami Inc. | System and method for computer searching |
US6587848B1 (en) | 2000-03-08 | 2003-07-01 | International Business Machines Corporation | Methods and apparatus for performing an affinity based similarity search |
US20040186996A1 (en) | 2000-03-29 | 2004-09-23 | Gibbs Benjamin K. | Unique digital signature |
US6701309B1 (en) | 2000-04-21 | 2004-03-02 | Lycos, Inc. | Method and system for collecting related queries |
US20100106706A1 (en) | 2000-05-22 | 2010-04-29 | Yahoo! Inc. | Method and apparatus for identifying related searches in a database search system |
US6671681B1 (en) | 2000-05-31 | 2003-12-30 | International Business Machines Corporation | System and technique for suggesting alternate query expressions based on prior user selections and their query strings |
US6529903B2 (en) | 2000-07-06 | 2003-03-04 | Google, Inc. | Methods and apparatus for using a modified index to provide search results in response to an ambiguous search query |
US20020042791A1 (en) | 2000-07-06 | 2002-04-11 | Google, Inc. | Methods and apparatus for using a modified index to provide search results in response to an ambiguous search query |
US20020133481A1 (en) | 2000-07-06 | 2002-09-19 | Google, Inc. | Methods and apparatus for providing search results in response to an ambiguous search query |
US6990453B2 (en) | 2000-07-31 | 2006-01-24 | Landmark Digital Services Llc | System and methods for recognizing sound and music signals in high noise and distortion |
US6567103B1 (en) | 2000-08-02 | 2003-05-20 | Verity, Inc. | Graphical search results system and method |
US20020034292A1 (en) | 2000-08-22 | 2002-03-21 | Tuoriniemi Veijo M. | System and a method to match demand and supply based on geographical location derived from a positioning system |
US6944611B2 (en) | 2000-08-28 | 2005-09-13 | Emotion, Inc. | Method and apparatus for digital media management, retrieval, and collaboration |
US7395222B1 (en) | 2000-09-07 | 2008-07-01 | Sotos John G | Method and system for identifying expertise |
US20040006740A1 (en) | 2000-09-29 | 2004-01-08 | Uwe Krohn | Information access |
US6954750B2 (en) | 2000-10-10 | 2005-10-11 | Content Analyst Company, Llc | Method and system for facilitating the refinement of data queries |
US20050055342A1 (en) | 2000-11-08 | 2005-03-10 | Bharat Krishna Asur | Method for estimating coverage of Web search engines |
US6877002B2 (en) | 2000-11-21 | 2005-04-05 | America Online, Inc. | Fuzzy database retrieval |
US6658423B1 (en) | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US6526440B1 (en) | 2001-01-30 | 2003-02-25 | Google, Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US20020103790A1 (en) | 2001-01-30 | 2002-08-01 | Wang Shirley S. | Utility for cross platform database query |
US6725259B1 (en) | 2001-01-30 | 2004-04-20 | Google Inc. | Ranking search results by reranking the results based on local inter-connectivity |
US20020123988A1 (en) | 2001-03-02 | 2002-09-05 | Google, Inc. | Methods and apparatus for employing usage statistics in document retrieval |
US20030009399A1 (en) | 2001-03-22 | 2003-01-09 | Boerner Sean T. | Method and system to identify discrete trends in time series |
US20030037074A1 (en) | 2001-05-01 | 2003-02-20 | Ibm Corporation | System and method for aggregating ranking results from various sources to improve the results of web searching |
US6738764B2 (en) | 2001-05-08 | 2004-05-18 | Verity, Inc. | Apparatus and method for adaptively ranking search results |
US7072886B2 (en) | 2001-05-15 | 2006-07-04 | Nokia Corporation | Method and business process to maintain privacy in distributed recommendation systems |
US6795820B2 (en) | 2001-06-20 | 2004-09-21 | Nextpage, Inc. | Metasearch technique that ranks documents obtained from multiple collections |
US20070081197A1 (en) | 2001-06-22 | 2007-04-12 | Nosa Omoigui | System and method for semantic knowledge retrieval, management, capture, sharing, discovery, delivery and presentation |
US20030018707A1 (en) | 2001-07-20 | 2003-01-23 | Flocken Philip Andrew | Server-side filter for corrupt web-browser cookies |
US7016939B1 (en) | 2001-07-26 | 2006-03-21 | Mcafee, Inc. | Intelligent SPAM detection system using statistical analysis |
US20030028529A1 (en) | 2001-08-03 | 2003-02-06 | Cheung Dominic Dough-Ming | Search engine account monitoring |
US7136849B2 (en) | 2001-08-10 | 2006-11-14 | International Business Machines Corporation | Method systems and computer program products for indicating links to external URLs |
US7266765B2 (en) | 2001-08-31 | 2007-09-04 | Fuji Xerox Co., Ltd. | Detection and processing of annotated anchors |
US20030078914A1 (en) | 2001-10-18 | 2003-04-24 | Witbrock Michael J. | Search results using editor feedback |
US20040199419A1 (en) | 2001-11-13 | 2004-10-07 | International Business Machines Corporation | Promoting strategic documents by bias ranking of search results on a web browser |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US7565367B2 (en) | 2002-01-15 | 2009-07-21 | Iac Search & Media, Inc. | Enhanced popularity ranking |
US20030149704A1 (en) | 2002-02-05 | 2003-08-07 | Hitachi, Inc. | Similarity-based search method by relevance feedback |
US20050055345A1 (en) | 2002-02-14 | 2005-03-10 | Infoglide Software Corporation | Similarity search engine for use with relational databases |
US20030167252A1 (en) | 2002-02-26 | 2003-09-04 | Pliant Technologies, Inc. | Topic identification and use thereof in information retrieval systems |
US20030204495A1 (en) | 2002-04-30 | 2003-10-30 | Lehnert Bernd R. | Data gathering |
US20030220913A1 (en) | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US7379951B2 (en) | 2002-05-31 | 2008-05-27 | Microsoft Corporation | Support for real-time queries concerning current state, data and history of a process |
US20030229640A1 (en) | 2002-06-07 | 2003-12-11 | International Business Machines Corporation | Parallel database query processing for non-uniform data sources via buffered access |
US7853557B2 (en) | 2002-06-14 | 2010-12-14 | Siebel Systems, Inc. | Method and computer for responding to a query according to the language used |
US7085761B2 (en) | 2002-06-28 | 2006-08-01 | Fujitsu Limited | Program for changing search results rank, recording medium for recording such a program, and content search processing method |
US20040034632A1 (en) | 2002-07-31 | 2004-02-19 | International Business Machines Corporation | Automatic query refinement |
US7028027B1 (en) | 2002-09-17 | 2006-04-11 | Yahoo! Inc. | Associating documents with classifications and ranking documents based on classification weights |
US8090717B1 (en) | 2002-09-20 | 2012-01-03 | Google Inc. | Methods and apparatus for ranking documents |
US20040059708A1 (en) | 2002-09-24 | 2004-03-25 | Google, Inc. | Methods and apparatus for serving relevant advertisements |
US20040083205A1 (en) | 2002-10-29 | 2004-04-29 | Steve Yeager | Continuous knowledgebase access improvement systems and methods |
US20040093325A1 (en) | 2002-11-07 | 2004-05-13 | International Business Machines Corporation | System and method for location influenced network search |
US6944612B2 (en) | 2002-11-13 | 2005-09-13 | Xerox Corporation | Structured contextual clustering method and system in a federated search engine |
WO2004059514A1 (en) | 2002-12-24 | 2004-07-15 | American Type Culture Collection | Systems and methods for enabling a user to find information of interest to the user |
US20040119740A1 (en) | 2002-12-24 | 2004-06-24 | Google, Inc., A Corporation Of The State Of California | Methods and apparatus for displaying and replying to electronic messages |
US20040186828A1 (en) | 2002-12-24 | 2004-09-23 | Prem Yadav | Systems and methods for enabling a user to find information of interest to the user |
US7382358B2 (en) | 2003-01-16 | 2008-06-03 | Forword Input, Inc. | System and method for continuous stroke word-based text input |
US20040153472A1 (en) | 2003-01-31 | 2004-08-05 | Rieffanaugh Neal King | Human resource networking system and method thereof |
US20040158560A1 (en) | 2003-02-12 | 2004-08-12 | Ji-Rong Wen | Systems and methods for query expansion |
US20090055392A1 (en) | 2003-03-31 | 2009-02-26 | Google Inc. | Ordering of search results based on language and/or country of the search results |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US7516146B2 (en) | 2003-05-15 | 2009-04-07 | Microsoft Corporation | Fast adaptive document filtering |
US7526470B1 (en) | 2003-05-28 | 2009-04-28 | Microsoft Corporation | System and method for measuring and improving search result relevance based on user satisfaction |
US7146361B2 (en) | 2003-05-30 | 2006-12-05 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis, including a search operator functioning as a Weighted AND (WAND) |
US20050240576A1 (en) | 2003-06-10 | 2005-10-27 | John Piscitello | Named URL entry |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050015366A1 (en) | 2003-07-18 | 2005-01-20 | Carrasco John Joseph M. | Disambiguation of search phrases using interpretation clusters |
US20060173830A1 (en) | 2003-07-23 | 2006-08-03 | Barry Smyth | Information retrieval |
US20110064795A1 (en) | 2003-07-25 | 2011-03-17 | Ac Immune Sa | Therapeutic vaccine targeted against P-glycoprotein 170 for inhibiting multidrug resistance in the treatment of cancers |
US20050027691A1 (en) | 2003-07-28 | 2005-02-03 | Sergey Brin | System and method for providing a user interface with search query broadening |
US20050050014A1 (en) | 2003-08-29 | 2005-03-03 | Gosse David B. | Method, device and software for querying and presenting search results |
US7451487B2 (en) | 2003-09-08 | 2008-11-11 | Sonicwall, Inc. | Fraudulent message detection |
US20050060311A1 (en) * | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using related queries |
US20050060310A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US20120191705A1 (en) | 2003-09-12 | 2012-07-26 | Google Inc. | Methods and systems for improving a search ranking using related queries |
US7505964B2 (en) | 2003-09-12 | 2009-03-17 | Google Inc. | Methods and systems for improving a search ranking using related queries |
US8024326B2 (en) | 2003-09-12 | 2011-09-20 | Google Inc. | Methods and systems for improving a search ranking using related queries |
US20050060290A1 (en) | 2003-09-15 | 2005-03-17 | International Business Machines Corporation | Automatic query routing and rank configuration for search queries in an information retrieval system |
US8086690B1 (en) | 2003-09-22 | 2011-12-27 | Google Inc. | Determining geographical relevance of web documents |
US8224827B2 (en) | 2003-09-30 | 2012-07-17 | Google Inc. | Document ranking based on document classification |
US7584181B2 (en) | 2003-09-30 | 2009-09-01 | Microsoft Corporation | Implicit links search enhancement system and method for search engines using implicit links generated by mining user access patterns |
US20050240580A1 (en) | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20050071741A1 (en) | 2003-09-30 | 2005-03-31 | Anurag Acharya | Information retrieval based on historical data |
US20050102282A1 (en) | 2003-11-07 | 2005-05-12 | Greg Linden | Method for personalized search |
US7231399B1 (en) | 2003-11-14 | 2007-06-12 | Google Inc. | Ranking documents based on large data sets |
US7222127B1 (en) | 2003-11-14 | 2007-05-22 | Google Inc. | Large scale machine learning systems and methods |
US7844589B2 (en) | 2003-11-18 | 2010-11-30 | Yahoo! Inc. | Method and apparatus for performing a search |
US20050125376A1 (en) * | 2003-12-08 | 2005-06-09 | Andy Curtis | Methods and systems for providing a response to a query |
US20060230040A1 (en) | 2003-12-08 | 2006-10-12 | Andy Curtis | Methods and systems for providing a response to a query |
US20080208825A1 (en) * | 2003-12-08 | 2008-08-28 | Andy Curtis | Methods and systems for providing a response to a query |
US20060106793A1 (en) | 2003-12-29 | 2006-05-18 | Ping Liang | Internet and computer information retrieval and mining with intelligent conceptual filtering, visualization and automation |
US20050192946A1 (en) | 2003-12-29 | 2005-09-01 | Yahoo! Inc. | Lateral search |
US20050160083A1 (en) | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US7293016B1 (en) | 2004-01-22 | 2007-11-06 | Microsoft Corporation | Index partitioning based on document relevance for document indexes |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US20050222998A1 (en) | 2004-03-31 | 2005-10-06 | Oce-Technologies B.V. | Apparatus and computerised method for determining constituent words of a compound word |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US20050256848A1 (en) | 2004-05-13 | 2005-11-17 | International Business Machines Corporation | System and method for user rank search |
US8024330B1 (en) * | 2004-05-20 | 2011-09-20 | Hector Franco | Collaborative incident alert system for mobile devices |
US7716225B1 (en) | 2004-06-17 | 2010-05-11 | Google Inc. | Ranking documents based on user behavior and/or feature data |
US7243102B1 (en) | 2004-07-01 | 2007-07-10 | Microsoft Corporation | Machine directed improvement of ranking algorithms |
US7426507B1 (en) | 2004-07-26 | 2008-09-16 | Google, Inc. | Automatic taxonomy generation in search results using phrases |
US20060047643A1 (en) | 2004-08-31 | 2006-03-02 | Chirag Chaman | Method and system for a personalized search engine |
US8065296B1 (en) | 2004-09-29 | 2011-11-22 | Google Inc. | Systems and methods for determining a quality of provided items |
US20060069667A1 (en) | 2004-09-30 | 2006-03-30 | Microsoft Corporation | Content evaluation |
US20060074903A1 (en) | 2004-09-30 | 2006-04-06 | Microsoft Corporation | System and method for ranking search results using click distance |
US20060095421A1 (en) | 2004-10-22 | 2006-05-04 | Canon Kabushiki Kaisha | Method, apparatus, and program for searching for data |
US20080077570A1 (en) | 2004-10-25 | 2008-03-27 | Infovell, Inc. | Full Text Query and Search Systems and Method of Use |
US20060089926A1 (en) | 2004-10-27 | 2006-04-27 | Harris Corporation, Corporation Of The State Of Delaware | Method for re-ranking documents retrieved from a document database |
US7533092B2 (en) | 2004-10-28 | 2009-05-12 | Yahoo! Inc. | Link-based spam detection |
US20060200556A1 (en) | 2004-12-29 | 2006-09-07 | Scott Brave | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US7756887B1 (en) | 2004-12-30 | 2010-07-13 | Google Inc. | System and method for modulating search relevancy using pointer activity monitoring |
US8019650B2 (en) | 2005-01-21 | 2011-09-13 | Amazon Technologies, Inc. | Method and system for producing item comparisons |
US20060195443A1 (en) | 2005-02-11 | 2006-08-31 | Franklin Gary L | Information prioritisation system and method |
US20060200476A1 (en) | 2005-03-03 | 2006-09-07 | Microsoft Corporation | Creating, storing and viewing process models |
US7574530B2 (en) | 2005-03-10 | 2009-08-11 | Microsoft Corporation | Method and system for web resource location classification and detection |
US20070106659A1 (en) | 2005-03-18 | 2007-05-10 | Yunshan Lu | Search engine that applies feedback from users to improve search results |
US7636714B1 (en) | 2005-03-31 | 2009-12-22 | Google Inc. | Determining query term synonyms within query context |
US7849089B2 (en) | 2005-05-10 | 2010-12-07 | Microsoft Corporation | Method and system for adapting search results to personal information needs |
US20070005575A1 (en) | 2005-06-30 | 2007-01-04 | Microsoft Corporation | Prioritizing search results by client search satisfaction |
US20070005588A1 (en) * | 2005-07-01 | 2007-01-04 | Microsoft Corporation | Determining relevance using queries as surrogate content |
US20070038659A1 (en) | 2005-08-15 | 2007-02-15 | Google, Inc. | Scalable user clustering based on set similarity |
US20070050339A1 (en) * | 2005-08-24 | 2007-03-01 | Richard Kasperski | Biasing queries to determine suggested queries |
US20070061195A1 (en) | 2005-09-13 | 2007-03-15 | Yahoo! Inc. | Framework for selecting and delivering advertisements over a network based on combined short-term and long-term user behavioral interests |
US20070061211A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Preventing mobile communication facility click fraud |
US7747612B2 (en) | 2005-10-31 | 2010-06-29 | Yahoo! Inc. | Indication of exclusive items in a result set |
US7783632B2 (en) | 2005-11-03 | 2010-08-24 | Microsoft Corporation | Using popularity data for ranking |
US20070112730A1 (en) | 2005-11-07 | 2007-05-17 | Antonino Gulli | Sampling Internet user traffic to improve search results |
US20080140699A1 (en) | 2005-11-09 | 2008-06-12 | Rosie Jones | System and method for generating substitutable queries |
US7693818B2 (en) | 2005-11-15 | 2010-04-06 | Microsoft Corporation | UserRank: ranking linked nodes leveraging user logs |
US20070266439A1 (en) | 2005-11-30 | 2007-11-15 | Harold Kraft | Privacy management and transaction system |
US20070130370A1 (en) | 2005-12-06 | 2007-06-07 | Emeka Akaezuwa | Portable search engine |
US20070192190A1 (en) | 2005-12-06 | 2007-08-16 | Authenticlick | Method and system for scoring quality of traffic to network sites |
US7680775B2 (en) | 2005-12-13 | 2010-03-16 | Iac Search & Media, Inc. | Methods and systems for generating query and result-based relevance indexes |
US7953740B1 (en) | 2006-02-13 | 2011-05-31 | Amazon Technologies, Inc. | Detection of behavior-based associations between search strings and items |
US20070208730A1 (en) | 2006-03-02 | 2007-09-06 | Microsoft Corporation | Mining web search user behavior to enhance web search relevance |
US20070266021A1 (en) * | 2006-03-06 | 2007-11-15 | Murali Aravamudan | Methods and systems for selecting and presenting content based on dynamically identifying microgenres associated with the content |
US7818315B2 (en) | 2006-03-13 | 2010-10-19 | Microsoft Corporation | Re-ranking search results based on query log |
US20070214131A1 (en) * | 2006-03-13 | 2007-09-13 | Microsoft Corporation | Re-ranking search results based on query log |
US20070260596A1 (en) | 2006-03-29 | 2007-11-08 | Koran Joshua M | Behavioral targeting system |
US20080052219A1 (en) | 2006-03-31 | 2008-02-28 | Combinenet, Inc. | System for and method of expressive auctions of user events |
US20070233653A1 (en) | 2006-03-31 | 2007-10-04 | Microsoft Corporation | Selecting directly bid upon advertisements for display |
US20070288450A1 (en) | 2006-04-19 | 2007-12-13 | Datta Ruchira S | Query language determination using query terms and interface language |
US8069182B2 (en) | 2006-04-24 | 2011-11-29 | Working Research, Inc. | Relevancy-based domain classification |
US20070255689A1 (en) | 2006-04-28 | 2007-11-01 | Gordon Sun | System and method for indexing web content using click-through features |
US20070260597A1 (en) | 2006-05-02 | 2007-11-08 | Mark Cramer | Dynamic search engine results employing user behavior |
US20080010143A1 (en) | 2006-06-22 | 2008-01-10 | Rob Kniaz | Secure and extensible pay per action online advertising |
US7809716B2 (en) | 2006-06-27 | 2010-10-05 | International Business Machines Corporation | Method and apparatus for establishing relationship between documents |
US20080027913A1 (en) | 2006-07-25 | 2008-01-31 | Yahoo! Inc. | System and method of information retrieval engine evaluation using human judgment input |
US8073263B2 (en) * | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US20080052273A1 (en) | 2006-08-22 | 2008-02-28 | Fuji Xerox Co., Ltd. | Apparatus and method for term context modeling for information retrieval |
US20080059453A1 (en) | 2006-08-29 | 2008-03-06 | Raphael Laderman | System and method for enhancing the result of a query |
US7552112B2 (en) | 2006-09-18 | 2009-06-23 | Yahoo! Inc. | Discovering associative intent queries from search web logs |
US7657626B1 (en) | 2006-09-19 | 2010-02-02 | Enquisite, Inc. | Click fraud detection |
US20080082518A1 (en) | 2006-09-29 | 2008-04-03 | Loftesness David E | Strategy for Providing Query Results Based on Analysis of User Intent |
US20080091650A1 (en) | 2006-10-11 | 2008-04-17 | Marcus Felipe Fontoura | Augmented Search With Error Detection and Replacement |
US8086599B1 (en) | 2006-10-24 | 2011-12-27 | Google Inc. | Method and apparatus for automatically identifying compunds |
US20080104043A1 (en) * | 2006-10-25 | 2008-05-01 | Ashutosh Garg | Server-side match |
US20080189269A1 (en) | 2006-11-07 | 2008-08-07 | Fast Search & Transfer Asa | Relevance-weighted navigation in information access, search and retrieval |
US20080114729A1 (en) | 2006-11-13 | 2008-05-15 | Google Inc. | Computer-implemented interactive, virtual bookshelf system and method |
US20080114624A1 (en) | 2006-11-13 | 2008-05-15 | Microsoft Corporation | Click-fraud protector |
US20080114750A1 (en) | 2006-11-14 | 2008-05-15 | Microsoft Corporation | Retrieval and ranking of items utilizing similarity |
US7533130B2 (en) | 2006-12-19 | 2009-05-12 | Yahoo! Inc. | User behavior reporting based on pre-aggregated activity data |
US7925498B1 (en) | 2006-12-29 | 2011-04-12 | Google Inc. | Identifying a synonym with N-gram agreement for a query phrase |
US7987185B1 (en) | 2006-12-29 | 2011-07-26 | Google Inc. | Ranking custom search results |
US20080162475A1 (en) | 2007-01-03 | 2008-07-03 | Meggs Anthony F | Click-fraud detection method |
US7801885B1 (en) | 2007-01-25 | 2010-09-21 | Neal Akash Verma | Search engine system and method with user feedback on search results |
US20080183660A1 (en) | 2007-01-30 | 2008-07-31 | Google Inc. | Content identification expansion |
US20080228442A1 (en) | 2007-03-07 | 2008-09-18 | Lisa Ellen Lippincott | Statistical data inspector |
US7610282B1 (en) | 2007-03-30 | 2009-10-27 | Google Inc. | Rank-adjusted content items |
US20080256050A1 (en) | 2007-04-10 | 2008-10-16 | Ruofei Zhang | System and method for modeling user selection feedback in a search result page |
US8037042B2 (en) | 2007-05-10 | 2011-10-11 | Microsoft Corporation | Automated analysis of user search behavior |
US7895177B2 (en) | 2007-05-29 | 2011-02-22 | Yahoo! Inc. | Enabling searching of user ratings and reviews using user profile location, and social networks |
US7818320B2 (en) | 2007-05-31 | 2010-10-19 | Yahoo! Inc. | Enhanced search results based on user feedback relating to search result abstracts |
US20080313247A1 (en) | 2007-06-12 | 2008-12-18 | Brian Galvin | Page Ranking Based on a Behavioral WEB Graph |
US20080313168A1 (en) | 2007-06-18 | 2008-12-18 | Microsoft Corporation | Ranking documents based on a series of document graphs |
US8458165B2 (en) | 2007-06-28 | 2013-06-04 | Oracle International Corporation | System and method for applying ranking SVM in query relaxation |
US20090012969A1 (en) | 2007-07-02 | 2009-01-08 | Rail Peter D | Systems and processes for evaluating webpages |
US8037086B1 (en) | 2007-07-10 | 2011-10-11 | Google Inc. | Identifying common co-occurring elements in lists |
US8001136B1 (en) | 2007-07-10 | 2011-08-16 | Google Inc. | Longest-common-subsequence detection for common synonyms |
US8051061B2 (en) | 2007-07-20 | 2011-11-01 | Microsoft Corporation | Cross-lingual query suggestion |
US7566363B2 (en) | 2007-07-24 | 2009-07-28 | Silverbrook Research Pty Ltd | Alternative phthalocyanine dyes suitable for use in offset inks |
US20090070194A1 (en) * | 2007-09-06 | 2009-03-12 | Nhn Corporation | Method of providing estimated cost for keyword advertisement |
US20090157643A1 (en) | 2007-12-12 | 2009-06-18 | Microsoft Corporation | Semi-supervised part-of-speech tagging |
US20090182723A1 (en) | 2008-01-10 | 2009-07-16 | Microsoft Corporation | Ranking search results using author extraction |
US7877404B2 (en) | 2008-03-05 | 2011-01-25 | Microsoft Corporation | Query classification based on query click logs |
US20090228442A1 (en) | 2008-03-10 | 2009-09-10 | Searchme, Inc. | Systems and methods for building a document index |
US7974974B2 (en) | 2008-03-20 | 2011-07-05 | Microsoft Corporation | Techniques to perform relative ranking for search results |
US7836058B2 (en) | 2008-03-27 | 2010-11-16 | Microsoft Corporation | Web searching |
US20090287656A1 (en) | 2008-05-13 | 2009-11-19 | Bennett James D | Network search engine utilizing client browser favorites |
US8037043B2 (en) | 2008-09-09 | 2011-10-11 | Microsoft Corporation | Information retrieval system |
US8060456B2 (en) | 2008-10-01 | 2011-11-15 | Microsoft Corporation | Training a search result ranker with automatically-generated samples |
US8156111B2 (en) * | 2008-11-24 | 2012-04-10 | Yahoo! Inc. | Identifying and expanding implicitly temporally qualified queries |
US20100131563A1 (en) | 2008-11-25 | 2010-05-27 | Hongfeng Yin | System and methods for automatic clustering of ranked and categorized search objects |
US20100205541A1 (en) | 2009-02-11 | 2010-08-12 | Jeffrey A. Rapaport | social network driven indexing system for instantly clustering people with concurrent focus on same topic into on-topic chat rooms and/or for generating on-topic search results tailored to user preferences regarding topic |
US20100228738A1 (en) | 2009-03-04 | 2010-09-09 | Mehta Rupesh R | Adaptive document sampling for information extraction |
US20100241472A1 (en) | 2009-03-23 | 2010-09-23 | David Antonio Hernandez | Illness specific diagnostic system |
US8412699B1 (en) * | 2009-06-12 | 2013-04-02 | Google Inc. | Fresh related search suggestions |
US8060497B1 (en) | 2009-07-23 | 2011-11-15 | Google Inc. | Framework for evaluating web search scoring functions |
US8498974B1 (en) | 2009-08-31 | 2013-07-30 | Google Inc. | Refining search results |
US20110295844A1 (en) | 2010-05-27 | 2011-12-01 | Microsoft Corporation | Enhancing freshness of search results |
Non-Patent Citations (57)
Title |
---|
Agichtein, et al; Improving Web Search Ranking by Incorporating User Behavior Information; Aug. 2006; Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, p. 19-26. |
Agichtein, et al; Learning User Interaction Models for Predicting Web Search Result Performances; Aug. 2006; Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, p. 3-10. |
Australian Patent Office Non-Final Office Action in AU App. Ser. No. 2004275274, mailed Feb. 3, 2010, 2 pages. |
Authorized Officer Athina Nickitas-Etienne, International Preliminary Report and Written Opinion for Application No. PCT/US2004/029615, mailed Mar. 23, 2006. |
Bar-Llan et al., "Presentation Bias is Significant in Determining User Preference for Search Results-A User Study"; Journal of the American Society for Information Science and Technology, vol. 60, Issue 1 (p. 135-149), Sep. 2008, 15 pages. |
Bar-Llan et al.; "Methods for comparing rankings of search engine results"; Computer Networks: The International Journal of Computer and Telecommunications Networking, Jul. 2006, vol. 50, Issue 10 , 19 pages. |
Boldi, et al.; The Query-flow Graph: Model and Applications; CKIM '08, Oct. 26-30, Napa Valley, California, USA, pp. 609-617. |
Boyan et al.; A Machine Learning Architecture for Optimizing Web Search Engines; Aug. 1996; Internet-based information systems-Workshop Technical Report-American Association for Artificial Intelligence, p. 1-8. |
Brin, S. and L. Page, The Anatomy of a Large-Scale Hypertextual Web Search Engine, Computer Science Department, 1998. |
Burke, Robin, Integrating Knowledge-based and Collaborative-filtering Recommender Systems, AAAI Technical Report WS-99-01. Compilation copyright © 1999, AAAI (www.aaai.org), pp. 69-72. |
Craswell, et al.; Random Walks on the Click Graph; Jul. 2007; SIGIR '07, Amsterdam, the Netherlands, 8 pages. |
Cutrell, et al.; Eye tracking in MSN Search: Investigating snippet length, target position and task types; 2007; Conference on Human Factors in Computing Systems-Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. |
Dan Olsen et al., "Query-by-critique: Spoken Language Access to Large Lists", ACM, Oct. 2002, pp. 131-140. |
Danish Search Report and Written Opinion for Application No. 200601630-7, dated Jun. 21, 2007, 15 pages. |
Diligenti, et al., Users, Queries and Documents: A Unified Representation for Web Mining, wi-iat, vol. 1, 2009 IEEE/WIC/ACM International Joint Conference on Web Intelligence and Intelligent Agent Technology, 2009, pp. 238-244. |
Gabriel Somlo et al., "Using Web Hepler Agent Profiles in Query Generation", ACM, Jul. 2003, pp. 812-818. |
Google News archive, Jul. 8, 2003, Webmasterworld.com, [online] Retrieved from the Internet http://www.webmasterwolrd.com/forum3/15085.htm [retrieved on Nov. 20, 2009] 3 pages. |
Gr{hacek over (e)}ar, Miha, User Profiling: Collaborative Filtering, SIKDD 2004, Oct. 12-15, 2004, Ljubljana, Slovenia, 4 pages. |
Hofmann, Thomas, Latent Semantic Models for Collaborative Filtering, ACM Transactions on Information Systems, vol. 22, No. 1, Jan. 2004, pp. 89-115. |
Hungarian Patent Office, International Search Report and Written Opinion for Application No. 200806756-3, dated Nov. 19, 2010 12 pages. |
Indian Office Action in Indian Application No. 686/KOLNP/2006, mailed Jun. 3, 2008, 2 pages. |
International Search Report and Written Opinion for Application No. PCT/US2004/029615, dated Jan. 19, 2005, 8 pages. |
Jansen et al., "An Analysis of Web Documents Retrieved and Viewed", School of Information Sciences and Technology, The Pennsylvania State University, the 4th International Conference on Internet Computing, Las Vegas, Nevada, pp. 65-69, Jun. 23-26, 2003, 5 pages. |
Ji-Rong Wen et al., "Query Clustering using User Logs", ACM, Jan. 2002, pp. 59-81. |
Joachims et al., "Search Engines that Learn from Implicit Feedback"; Aug. 2007, IEEE Computer Society. |
Joachims, "Evaluating Search Engines Using Clickthrough Data", Cornell University, Department of Computer Science, Draft, Feb. 19, 2002, 13 pages. |
Joachims, T., Evaluating retrieval performance using clickthrough data. Proceedings of the SIGIR Workshop on Mathematical/Formal Methods in Information Retrieval; Aug. 12-15, 2002; Tampere, Finland, 18 pages. |
Joachims; Optimizing search engines using clickthrough data; 2002; Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, p. 133-142. |
Jones et al., "Pictures of Relevance: A Geometric Analysis of Similarity Measures", Journal of the American Society for Information Science, Nov. 1987, 23 pages. |
Kaplan et al., "Adaptive Hypertext Navigation Based on User Goals and Context", User Modeling and User-Adapted Interaction 2, 1993; pp. 193-220, 28 pages. |
Kelly, et al.; Implicit Feedback for Inferring User Preference: A Bibliography; SIGIR Forum, vol. 37, No. 2 (2003), pp. 18-28. |
Lemire, Daniel, Scale and Translation Invariant Collaborative Filtering Systems, Published in Information Retrieval, 8(1), pp. 129-150, 2005. |
Liddy et al., "A Natural Language Text Retrieval System With Relevance Feedback", 16th National Online, 1995, 3 pages. |
Linden, Greg et al., Amazon.com Recommendations: Item-to-Item Collaborative Filtering, [online], http://computer.org/internet/, IEEE Internet Computing, Jan.-Feb. 2003, IEEE Computer Society, pp. 76-80. |
McDonnell, Philip, A., "Time Based Ranking," U.S. Appl. No. 11/870,893, filed Oct. 11, 2007, 42 pages. |
McDonnell, Philip, A., 'Time Based Ranking,' U.S. Appl. No. 11/870,893, filed Oct. 11, 2007, 42 pages. |
Nicolas Bruno et al., "Top-K Selection Queries over Relational Databases: Mapping Strategies and Performance Evaluation", ACM, Jun. 2002, pp. 153-187. |
Nicole, Kristen, Heeii is StumbleUpon Plus Google Suggestions, [online], Retrieved from the Internet http://mashable.com/2007/05/15/heeii/, 11 pages. |
Radlinski, et al., Query Chains: Learning to Rank from Implicit Feedback, KDD '05, Aug. 21-24, 2005, Chicago, Illinois, USA, 10 pages. |
Schwab, et al., Adaptivity through Unobstrusive Learning, 2002, 16(3), pp. 5-9. |
Soumen Chakrabarti, et al. "Enhanced Topic Distillation using Text, Markup tags, and Hyperlinks" ACM 2001, pp. 208-216. |
Stoilova, Lubomira et al., GiveALink: Mining a Semantic Network of Bookmarks for Web Search and Recommendation, LinkKDD '05, Aug. 21, 2005, Chicago, IL, USA, 8 pages. |
Susan Gauch et al., "A Corpus Analysis Approach for Automatic Query Expansion and its Extension to Multiple Databases", ACM, 1999, pp. 250-269. |
U.S. Patent Office, U.S. Appl. No. 11/556,086, filed Nov. 2, 2006, in Office Action mailed Jun. 23, 2010, 21 pages. |
U.S. Patent Office, U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Apr. 20, 2011, 18 pages. |
U.S. Patent Office, U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Jan. 25, 2010, 14 pages. |
U.S. Patent Office, U.S. Appl. No. 11/556,143, filed Nov. 2, 2006, in Office Action mailed Jul. 6, 2010, 20 pages. |
U.S. Patent Office, U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Apr. 13, 2011, 31 pages. |
U.S. Patent Office, U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Feb. 25, 2009, 21 pages. |
U.S. Patent Office, U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Feb. 8, 2010, 31 pages. |
U.S. Patent Office, U.S. Appl. No. 11/685,095, filed Mar. 12, 2007, in Office Action mailed Sep. 10, 2009, 23 pages. |
W3C, URIs, URLs and URNs: Classification and Recommendations 1.0, Report from the joint W3C/IETF URI Planning Interest Group, Sep. 21, 2001, 8 pages. |
Xiao, et al., Measuring Similarity of Interests for Clustering Web-Users, ADC, 2001, pp. 107-114. |
Xie et al., Web User Clustering from Access Log Using Belief Function, K-CAP '01, Oct. 22-23, 2001, Victoria, British Columbia, Canada, pp. 202-208. |
Yu et al., Selecting Relevant Instances for Efficient and Accurate Collaborative Filtering, CIKM '01, Nov. 5-10, 2001, Atlanta, Georgia, pp. 239-246. |
Zeng et al., Similarity Measure and Instance Selection for Collaborative Filtering, WWW '03, May 20-24, 2003, Budapest, Hungary, pp. 652-658. |
Zeng, et al., "Learning to Cluster Web Search Results", SIGIR '04, Proceedings of the 27th Annual International ACM SIGIR conference on research and development in information retrieval, 2004. |
Cited By (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11188544B1 (en) | 2006-11-02 | 2021-11-30 | Google Llc | Modifying search result ranking based on implicit user feedback |
US11816114B1 (en) | 2006-11-02 | 2023-11-14 | Google Llc | Modifying search result ranking based on implicit user feedback |
US9811566B1 (en) | 2006-11-02 | 2017-11-07 | Google Inc. | Modifying search result ranking based on implicit user feedback |
US10229166B1 (en) | 2006-11-02 | 2019-03-12 | Google Llc | Modifying search result ranking based on implicit user feedback |
US11675841B1 (en) | 2008-06-25 | 2023-06-13 | Richard Paiz | Search engine optimizer |
US11941058B1 (en) | 2008-06-25 | 2024-03-26 | Richard Paiz | Search engine optimizer |
US11048765B1 (en) | 2008-06-25 | 2021-06-29 | Richard Paiz | Search engine optimizer |
US20100325131A1 (en) * | 2009-06-22 | 2010-12-23 | Microsoft Corporation | Assigning relevance weights based on temporal dynamics |
US10353967B2 (en) * | 2009-06-22 | 2019-07-16 | Microsoft Technology Licensing, Llc | Assigning relevance weights based on temporal dynamics |
US9390143B2 (en) | 2009-10-02 | 2016-07-12 | Google Inc. | Recent interest based relevance scoring |
US11423018B1 (en) | 2010-04-21 | 2022-08-23 | Richard Paiz | Multivariate analysis replica intelligent ambience evolving system |
US11379473B1 (en) | 2010-04-21 | 2022-07-05 | Richard Paiz | Site rank codex search patterns |
US10936687B1 (en) | 2010-04-21 | 2021-03-02 | Richard Paiz | Codex search patterns virtual maestro |
US11741090B1 (en) | 2013-02-26 | 2023-08-29 | Richard Paiz | Site rank codex search patterns |
US11809506B1 (en) | 2013-02-26 | 2023-11-07 | Richard Paiz | Multivariant analyzing replicating intelligent ambience evolving system |
US9183499B1 (en) | 2013-04-19 | 2015-11-10 | Google Inc. | Evaluating quality based on neighbor features |
US20170228451A1 (en) * | 2013-12-20 | 2017-08-10 | Microsoft Technology Licensing, Llc | Constructing queries for execution over multi-dimensional data structures |
US10565232B2 (en) * | 2013-12-20 | 2020-02-18 | Microsoft Technology Licensing, Llc | Constructing queries for execution over multi-dimensional data structures |
US9619581B2 (en) * | 2013-12-20 | 2017-04-11 | Microsoft Technology Licensing, Llc | Constructing queries for execution over multi-dimensional data structures |
US20150178407A1 (en) * | 2013-12-20 | 2015-06-25 | Microsoft Corporation | Constructing queries for execution over multi-dimensional data structures |
US9928313B2 (en) * | 2015-06-15 | 2018-03-27 | Oath Inc. | Seasonal query suggestion system and method |
US20160364502A1 (en) * | 2015-06-15 | 2016-12-15 | Yahoo! Inc. | Seasonal query suggestion system and method |
US10339564B2 (en) * | 2016-02-16 | 2019-07-02 | Oracle International Corporation | System and method for providing an adaptively ordered presentation of objects |
US10877730B2 (en) | 2016-09-21 | 2020-12-29 | International Business Machines Corporation | Preserving temporal relevance of content within a corpus |
US10795642B2 (en) | 2016-09-21 | 2020-10-06 | International Business Machines Corporation | Preserving temporal relevance in a response to a query |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8924379B1 (en) | Temporal-based score adjustments | |
US11816114B1 (en) | Modifying search result ranking based on implicit user feedback | |
US9390143B2 (en) | Recent interest based relevance scoring | |
US8938463B1 (en) | Modifying search result ranking based on implicit user feedback and a model of presentation bias | |
US20230394072A1 (en) | Predictive query completion and predictive search results | |
US8645367B1 (en) | Predicting data for document attributes based on aggregated data for repeated URL patterns | |
US8738596B1 (en) | Refining search results | |
US8898153B1 (en) | Modifying scoring data based on historical changes | |
US8694511B1 (en) | Modifying search result ranking based on populations | |
US8615514B1 (en) | Evaluating website properties by partitioning user feedback | |
US20230401251A1 (en) | Query Categorization Based on Image Results | |
US8359309B1 (en) | Modifying search result ranking based on corpus search statistics | |
US20140149399A1 (en) | Determining user intent from query patterns | |
US9092510B1 (en) | Modifying search result ranking based on a temporal element of user feedback | |
US9740780B1 (en) | Autocompletion using previously submitted query data | |
US9009146B1 (en) | Ranking search results based on similar queries | |
US8977644B2 (en) | Collaborative search results | |
US8321278B2 (en) | Targeted advertisements based on user profiles and page profile | |
US8918417B1 (en) | Generating query refinements from user preference data | |
US8838587B1 (en) | Propagating query classifications | |
US20090210409A1 (en) | Increasing online search engine rankings using click through data | |
US9218369B2 (en) | Ranking image search results using hover data | |
US8959093B1 (en) | Ranking search results based on anchors | |
US9623119B1 (en) | Accentuating search results | |
US8838649B1 (en) | Determining reachability |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KIM, HYUNG-JIN;LOPATENKO, ANDREI;REEL/FRAME:024321/0374Effective date: 20100304 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20221230 |
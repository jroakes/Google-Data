EP2638509A1 - Learning tags for video annotation using latent subtags - Google Patents
Learning tags for video annotation using latent subtagsInfo
- Publication number
- EP2638509A1 EP2638509A1 EP11839839.5A EP11839839A EP2638509A1 EP 2638509 A1 EP2638509 A1 EP 2638509A1 EP 11839839 A EP11839839 A EP 11839839A EP 2638509 A1 EP2638509 A1 EP 2638509A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- subtag
- videos
- tag
- training
- classifiers
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/783—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
- G06F16/7847—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content using low-level visual features of the video content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/7867—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using information manually generated, e.g. tags, keywords, comments, title and artist information, manually generated time, location and usage information, user ratings
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/25—Fusion techniques
- G06F18/254—Fusion techniques of classification results, e.g. of results related to same input data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/41—Higher-level, semantic clustering, classification or understanding of video scenes, e.g. detection, labelling or Markovian modelling of sport events or news items
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/46—Extracting features or characteristics from the video content, e.g. video fingerprints, representative shots or key frames
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/46—Extracting features or characteristics from the video content, e.g. video fingerprints, representative shots or key frames
- G06V20/47—Detecting features for summarising video content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/70—Labelling scene content, e.g. deriving syntactic or semantic representations
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/10—Indexing; Addressing; Timing or synchronising; Measuring tape travel
- G11B27/102—Programmed access in sequence to addressed parts of tracks of operating record carriers
- G11B27/105—Programmed access in sequence to addressed parts of tracks of operating record carriers of operating discs
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/10—Indexing; Addressing; Timing or synchronising; Measuring tape travel
- G11B27/19—Indexing; Addressing; Timing or synchronising; Measuring tape travel by using information detectable on the record carrier
- G11B27/28—Indexing; Addressing; Timing or synchronising; Measuring tape travel by using information detectable on the record carrier by using information signals recorded by the same method as the main recording
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
- G06N20/10—Machine learning using kernel methods, e.g. support vector machines [SVM]
Definitions
- the present disclosure generally relates to the field of tag identification, and more specifically, to methods automatically identifying objects with tags that they represent.
- a tag for "bike” can be applied to videos relating to mountain biking, pocket bikes, falling off a bike, and other semantically different types of videos.
- Typical machine learning based on a single classifier for the "bike” tag will often fail to identify the different features associated with the distinct types of videos among a single tag.
- a tag learning module trains video classifiers associated with a stored set of tags derived from textual metadata of a plurality of videos, the training based on features extracted from training videos.
- Each of the tag classifiers can comprise a plurality of subtag classifiers.
- Each of the latent subtag classifiers is trained on videos associated with a training set for that subtag classifier.
- the videos automatically identified with a latent subtag by features extracted from the videos, and need not represent semantically meaningful divisions within the tag.
- the tag learning module can create tag classifiers that more accurately and automatically label videos based on the features associated not just with the tag itself, but with latent subtags thereof.
- an initial training set of videos for a given tag are grouped into subtag categories by identifying cowatch information relating to the set videos.
- the cowatch information is used to determine which of the initial training set of videos are watched with other videos in the initial training set.
- Cowatch information broadly includes data generally indicating user tendencies to watch two different videos together, such a user watching the videos within a viewing session or within a certain period of time from one another. Cowatch information is further defined below.
- the initial training set of videos can be clustered to determine an initial grouping of latent subtags.
- the initial latent subtag classifiers are then be trained on the videos in each subtag cluster. In this manner, each of the subtag classifiers learns the features associated with videos associated with the latent subtags.
- the subtag classifiers are iteratively trained on a training set.
- the subtag classifiers can be used to identify each of the videos in the training set as belonging to a particular subtag.
- each subtag classifier can be retrained on the videos identified as belonging to that subtag.
- the videos in the subtag training sets are bootstrapped to exclude positive training set videos that receive low confidence scores by the subtag classifier and negative training set videos that also receive low confidence scores by the subtag classifier.
- FIG. 1 is a block diagram of a video hosting service in which tag learning can be employed according to an embodiment.
- FIG. 2 illustrates the various components of a tag learning module used in the video hosting service according to an embodiment.
- FIG. 3 presents an overview of video classification by subtag and iterative subtag learning according to an embodiment.
- FIG. 4 is a detailed data flow diagram depicting the iterative learning of a tag and subtag classifiers according to an embodiment.
- FIG. 5 is a data flow diagram representing an application of a tag learning module utilizing subtag classifiers according to an embodiment.
- FIG. 1 is a block diagram of a video hosting service 100 in which tag learning with latent subtags can be employed, according to one embodiment.
- the video hosting service 100 represents a system such as that of YOUTUBE or GOOGLE VIDEO that stores and provides videos to clients such as the client device 135.
- the video hosting site 100 communicates with a plurality of content providers 130 and client devices 135 via a network 140 to facilitate sharing of video content between users. Note that in FIG. 1 , for the sake of clarity only one instance of content provider 130 and client 135 is shown, though there could be any number of each.
- the video hosting service 100 additionally includes a front end interface 102, a video serving module 104, a video search module 106, an upload server 108, a user database 1 14, and a video repository 1 16.
- Other conventional features such as firewalls, load balancers, authentication servers, application servers, failover servers, site management tools, and so forth are not shown so as to more clearly illustrate the features of the video hosting site 100.
- a suitable site 100 is the YOUTUBE website, found at www.youtube.com.
- Other video hosting sites can be adapted to operate according to the teachings disclosed herein.
- the illustrated components of the video hosting website 100 can be implemented as single or multiple components of software or hardware.
- functions described in one embodiment as being performed by one component can also be performed by other components in other embodiments, or by a combination of components.
- functions described in one embodiment as being performed by components of the video hosting website 100 can also be performed by one or more clients 135 in other embodiments if appropriate.
- Client devices 135 are computing devices that execute client software, e.g., a web browser or built-in client application, to connect to the front end interface 102 of the video hosting service 100 via a network 140 and to display videos.
- client software e.g., a web browser or built-in client application
- the client device 135 might be, for example, a personal computer, a personal digital assistant, a cellular, mobile, or smart phone, or a laptop computer.
- the network 140 is typically the Internet, but may be any network, including but not limited to a LAN, a MAN, a WAN, a mobile wired or wireless network, a private network, or a virtual private network.
- Client device 135 may comprise a personal computer or other network-capable device such as a personal digital assistant (PDA), a mobile telephone, a pager, a television “set-top box,” and the like.
- PDA personal digital assistant
- the content provider 130 provides video content to the video hosting service 100 and the client 135 views that content.
- content providers may also be content viewers. Additionally, the content provider 130 may be the same entity that operates the video hosting site 100.
- the content provider 130 operates a client device to perform various content provider functions.
- Content provider functions may include, for example, uploading a video file to the video hosting website 100, editing a video file stored by the video hosting website 100, or editing content provider preferences associated with a video file.
- the client 135 operates on a device to view video content stored by the video hosting site 100.
- Client 135 may also be used to configure viewer preferences related to video content.
- the client 135 includes an embedded video player such as, for example, the FLASH player from Adobe Systems, Inc. or any other player adapted for the video file formats used in the video hosting website 100.
- client and content provider as used herein may refer to software providing client and content providing functionality, to hardware on which the software executes, or to the entities operating the software and/or hardware, as is apparent from the context in which the terms are used.
- the upload server 108 of the video hosting service 100 receives video content from a client 135. Received content is stored in the video repository 116. In response to requests from clients 135, a video serving module 104 provides video data from the video repository 116 to the clients 135. Clients 135 may also search for videos of interest stored in the video repository 116 using a video search module 106, such as by entering textual queries containing keywords of interest. Front end interface 102 provides the interface between client 135 and the various components of the video hosting site 100.
- the user database 114 is responsible for maintaining a record of all registered users of the video hosting server 100.
- Registered users include content providers 130 and/or users who simply view videos on the video hosting website 100.
- Each content provider 130 and/or individual user registers account information including login name, electronic mail (e-mail) address and password with the video hosting server 100, and is provided with a unique user ID.
- This account information is stored in the user database 114.
- the video repository 116 contains a set of videos 117 submitted by users.
- the video repository 116 can contain any number of videos 117, such as tens of thousands or hundreds of millions.
- Each of the videos 117 has a unique video identifier that distinguishes it from each of the other videos, such as a textual name (e.g., the string "a91qrx8"), an integer, or any other way of uniquely naming a video.
- the videos 117 can be packaged in various containers such as AVI, MP4, or MOV, and can be encoded using video codecs such as MPEG-2, MPEG-4, WebM, WMV, H.263, and the like.
- the videos 117 further have associated metadata 117A, e.g., textual metadata such as a title, description, and/or tags.
- the video hosting service 100 further comprises a tag learning module 119 that trains accurate video classifiers for a set of tags.
- the trained classifiers can then be applied to a given video to automatically determine which of the tags may apply to the video. For example, a user may submit a new video, and the tag learning module 119 can automatically recommend a tag or group of tags to be applied to the video.
- the tag learning module can also be used to verify a tag entered by a user before adopting the tag as associated with the video as part of the video's metadata 117 A.
- the tag learning module 119 is now described in greater detail.
- FIG. 2 illustrates the various components of the tag learning module 119, according to one embodiment.
- the tag learning module 119 comprises various modules to discover tags, to derive video features, to train classifiers for various tags, and the like.
- the tag learning module 119 is incorporated into an existing video hosting service 100, such as YOUTUBE.
- the tag learning module 119 has access to the video repository 116 of the video hosting service 100.
- the tag learning module 119 additionally comprises a features repository 205 that stores, for videos of the video repository 116, associated sets of features that characterize the videos with respect to one or more types of visual or audio information, such as color, movement, and audio information.
- the features of a video 117 are distinct from the raw content of the video itself and are derived from it by a feature extraction module 230.
- the features are stored as a vector of values, the vector having the same dimensions for each of the videos 117 for purposes of consistency.
- the tag learning module 119 further comprises a tag repository 210 that stores the various tags 211 for which classifiers may be learned.
- a tag is a term or phrase that describes some entity, activity, event, place, object, or characteristic that is associated with a video 117.
- a tag is typically used as a keyword associated with a video to help organize, browse and search for videos within a video collection.
- Tags can be associated with a video as a portion of the metadata 117A and typically may be stored along with the description, comments, annotations, and other data associated with the video.
- Each tag has both a label 211 A, which is a unique name for the tag, such as "bike,” “boat,” “card,” “dog,” “explosion,” “flower,” “helicopter,” and other descriptors.
- the tags 211 A can be associated with various statistics, such as frequency of occurrence, the tag's frequency of co-occurrence with other tags (i.e. the rate a tag appears with a second tag), and the like.
- a given tag may be applied a variety of videos with varying feature types. These various videos for the tags can be divided into a number of different subsets, based on co watch or other metrics. Each different subset or group can be said to be associated with a different latent subtag of the tag. A given subtag is thus associated with particular features extracted from its respective subset of videos, but may or may not correspond to a semantically meaningful label or have particular taxonomical relationship with a tag.
- a tag may include a particular label, such as "bike,” the subtags thereof can include labels such as “mountain bike” or “motocross”, as well as subtags that do not have particular name or meaning, but simply stand as identifiers (e.g. subtag 1, subtag 2, etc.) or proxies for a set of features extracted from a particular subset of videos of the "bike” tag that have strong co- watch or other relationships with each other.
- identifiers e.g. subtag 1, subtag 2, etc.
- proxies for a set of features extracted from a particular subset of videos of the "bike” tag that have strong co- watch or other relationships with each other.
- a semantic meaning may or may not be derived from the subtags, a video associated with a subtag implies that the video is associated with the tag for that subtag.
- the tag learning module 119 thus has a number of classifiers 214, each of which is associated with one of the tags 211.
- the classifier 214 for a tag 211 is a function that outputs a score representing a degree to which the features associated with the video indicate that the particular tag 211 is relevant to the video, thus serving as a measure indicating whether the tag 211 can be accurately applied to label the video.
- the classifier 214 for a tag 211 is based upon a plurality of subtag classifiers 215 relating to subtags of the tag.
- the features to which the classifier 214 is applied include both video content features (described below with respect to feature extraction module 230) and cowatch features derived from video cowatch data. In practice, cowatch features may be most useful in classifying videos presently in the video repository or in determining subtag membership, but less useful in identifying tags for new videos, as new videos to the video repository will either have no cowatch data or very minimal cowatch data.
- some tag classifiers 114 utilize subtag classifiers 115 in the tag classifier model, and some tag classifiers 114 do not use subtag classifiers 115.
- subtag classifiers 115 can be selectively used for the tag classifiers where there is a performance improvement in identifying tags.
- subtag classifiers 215 are not used where there is little or no improvement in tag classification relative to a single tag classifier. Subtag classifiers 215 therefore are implemented on a per-tag basis.
- the classifier 214 can return different types of scores in different embodiments. For example, in one embodiment each classifier 214 outputs a real number indicating a strength of the relevance match between the video and the classifier (and hence the concept or topic represented by the corresponding tag 211). In another embodiment, the classifier 214 outputs a Boolean value, e.g., the integer 1 to indicate that the video is relevant to the tag, and a different value, e.g., the integer 0, to indicate that the tag is not relevant.
- the classifier learning module 119 also comprises a tag discovery module 220 that identifies potential tags that can be used to label videos.
- the tag discovery module 220 extracts the tags from the video metadata 117A of the various videos 117 in the video repository 116, or from some subset of the metadata, such as the title and user-suggested tags or the description.
- the tag discovery module 220 can determine the set of all individual (uni-gram) or paired (bi-gram) tags applied to videos in the repository, and then identify the N (e.g., 10,000) most frequent unigrams and bigrams, as potential tags for the repository 210.
- the tag discovery module 220 removes a set of predetermined "stopwords" unlikely to convey substantive meaning, such as articles and prepositions like "a,” "the,” and "of,” from the list of potential tags.
- the tag discovery module 220 obtains the set of potential tags from another source, such as a pre-existing set of terms and phrases such as provided by WordNet, rather than extracting them from video metadata 117A.
- the tag discovery module 220 For each potential tag, the tag discovery module 220 maintains statistics such as frequency of occurrence of the tag within the video metadata in one embodiment.
- the tag discovery module 220 purges identified potential tags that occur too frequently or infrequently in the video metadata 117A, for some predetermined thresholds of frequency, such as a maximum threshold of 100,000 videos, and a minimum threshold of 1,500 videos.
- the tags "video" or “funny” are generic and so are likely to occur an extremely large number of times for very different genres of videos. Thus, they would be unlikely to represent a single, distinct type of video and would therefore be purged. Similarly, tags occurring a very small number of times would not provide enough data to allow learning algorithms to train a useful classifier for the tag and would likewise be purged.
- the video hosting service 100 additionally comprises a feature extraction module 230 that derives features used to compactly characterize a video for purposes of machine learning.
- the feature extraction module 230 derives a number of different audiovisual features 205 from the content of the video 117, including features relating to frame features, motion features, and auditory features. In other embodiments, other features or other feature types may be extracted to analyze the video corpus.
- each type of feature can use a bag-of-word representation.
- each feature can be represented as a histogram by vector quantizing the feature descriptors and may further be normalized so that the sum of the bin values is 1.
- the feature vector of each video is a concatenation of the histograms for each feature.
- the frame features for videos include histograms of oriented gradients (HOG), color histograms, textons, and a face counter.
- HOG oriented gradients
- To calculate the HOG feature at each frame pixel location, a 1800-dimensional feature descriptor is extracted as a concatenation of HOG in a 10x10 surrounding window. The raw descriptors are then collected into a bag-of-words representation by quantizing the raw descriptors using a randomized decision tree.
- the color histogram can be a Hue-Saturation histogram.
- the face counter may be used to easily discriminate videos that contain human faces and the number of human faces in a video.
- Motion features can be calculated using a cuboid interest point detector to extract spatio-temporal volumes around detected interest points. From the cuboids, two descriptors can be extracted. First, the normalized pixel values can be concatenated to a vector and PCA can be applied on the vector to reduce the dimensionality to, for example, 256. Second, each slice of the cuboid can be split into 2x2 cells. Then, the HOG descriptors of the cells in the cuboid can be concatenated into a vector. The dimensionality of the HOG descriptor vector can also be reduced using PCA to, for example, 256.
- HOG In addition to, or as an alternative to HOG, other features may be used, including but not limited to motion rigidity features, filter responses (e.g., derived from Gabor wavelets), including 3D filter responses, edge features using edges detected by a Canny edge detector, GLOH (Gradient Location and Orientation Histogram), LESH (Local Energy based Shape Histogram), or SURF (Speeded Up Robust Features) features.
- filter responses e.g., derived from Gabor wavelets
- 3D filter responses edge features using edges detected by a Canny edge detector
- GLOH Gramdient Location and Orientation Histogram
- LESH Lical Energy based Shape Histogram
- SURF Speeded Up Robust Features
- Audio features can include a vector forming a Stabilized Auditory Image (SAI) and Mel- Frequency Cepstral Coefficients (MFCC).
- SAI Stabilized Auditory Image
- MFCC Mel- Frequency Cepstral Coefficients
- the same set of feature types—e.g., frame, motion, and audio— is extracted for every video.
- different types of features can be useful for learning different types of videos.
- the audio features are effective for learning to recognize certain types of videos primarily characterized by their music but are of little use in distinguishing videos based on their visual motion, such as distinguishing cartoon videos from other types of videos.
- the particular types of features employed may vary in different embodiments, depending on the particular labeling application being used. That is, an embodiment can employ any type of feature that usefully describes properties of videos by which one video can be distinguished from another.
- the extracted features 205 then serve as a representation of the associated video 117 from which they were extracted for purposes of subsequent learning operations. Prior to being used for training, the extracted features may be reduced in dimensionality using a linear SVM, PCA, or other methods to determine a subset of discriminative features. These discriminative features may then be used as the inputs for classifier training 240.
- Partitioning module 235 partitions the videos 117 into different sets used for performing training of the classifiers 212. More specifically, the partitioning module 235 divides the videos 117 into distinct training and validation sets, where the training set T is used for training classifiers ("learning") for different tags and the validation set is used to test the accuracy of the trained/learned classifiers. In an embodiment in which the tag learning comprises several iterations, the partitioning module 235 can additionally subdivide the training and validation sets for each possible iteration.
- the partitioning module 235 can define, for every tag 211, a training set and validation set specifically for that tag.
- the partitioning module 235 also divides the videos of the per-tag training and validation sets into "positive" examples presumed to be representative of the associated tag and "negative" examples presumed not to be
- the partitioning module 235 identifies a video as belonging to the positive set for a tag 211 if the tag 211 is located somewhere within its textual metadata, e.g., an existing tag (either user-assigned or previously defined by a classifier), the video's title, description, or list of keywords— and to the negative set otherwise.
- the positive and negative sets are defined with reference only to existing metadata, without the need for manual labeling by human experts.
- the negative examples are selected randomly from the whole corpus.
- a positive training set for each tag 211 there are four sets of videos: a positive training set, a negative training set, a positive validation set, and a negative validation set.
- the tag learning module 119 additionally comprises a classifier training module 240 that iteratively learns classifiers 214 for the tags 211 based on the positive and negative training sets identified for a tag by the partitioning module 235.
- the classifiers 214 are trained though a number of training iterations. More specifically, at a given iteration the classifier training module 240 attempts to learn the classifier 214 for a given tag 211 by applying an ensemble learning algorithm to the derived features 205 of the videos 117 in the training set for the tag 211.
- the ensemble learning algorithm employed is LogitBoost, with 256 decision stumps. Using LogitBoost, a strong classifier 214 can be generated using decision stumps as the weak learner.
- the training set S is initialized for each subtag a, b, c, . . . n to generate subtag training sets S a , St,, S c , . . . S n .
- Each subtag training set includes a plurality of videos, the features of which are used for training the associated subtag.
- the positive subtag training sets are initialized using cowatch information to create clusters Cl a -Cl n , where each cluster CI; is associated with a latent subtag Si.
- the clustered videos are then used to initialize positive subtag training sets (i.e. S a pos is derived from Cl a ).
- the initial negative training set for the subtag training sets can be randomly chosen from the negative tag trainings set.
- Cowatch information is used broadly in this disclosure to include any available information indicating videos together watched by a user in a viewing session or closely together in time.
- Cowatch information includes co-incidence information, occurrence frequency of videos in the same viewing session, user searching, user page changing, user link accessing, video, user video viewing interactions (stops, fast forward, rewind, etc.) and other user activity.
- Cowatch information can include videos played immediately before or after a video or within some set time period (e.g. 20 minutes) by the same user.
- Cowatch information also includes negative interactions— for example a user follows a link to a second video from a first video, and then promptly stops playing the second video.
- the cowatch information can be helpful because it is likely to indicate types of videos within a given tag which carry a similar semantic meaning.
- a user who watches a mountain bike video is more likely to watch a second video relating to mountain biking than a video relating to pocket bikes or road bikes.
- subtag labels are not necessarily associated with semantic differences for videos, by initializing subtag membership according to cowatch data, the initial data set is likely to contain semantically different videos.
- N a random sample of videos is selected, N. This could be a percentage portion of the training set or a specific number of videos, such as 3000.
- a cowatch video list Li is generated for each sampled video V;, i.e. L ls L 2 . . . L n .
- membership in the cowatch video lists is not limited to the N randomly sampled videos, but rather includes any video co-watched with the videos N. As such, L contains every video co- watched with any video in N.
- a vector for each sampled video is created, Vi, V 2 , . . . V m which represent which of the members of L are cowatched with Vi.
- the vector lengths are set equal to the unified video cowatch list length:
- Each element in the vector is used to represent the corresponding video in L.
- the 5 th element in each vector Vi, V 2 , . . . V n represents the 5 th video in L.
- the element is to 0 or 1 according to whether the indexed video is in that video V;'s cowatch list.
- the 5 th element of Vi is set to 1 if the video identified at position 5 in L is a member of Li. In this way, a set of vectors ⁇ Vi - V n ⁇ is created which quantifies the cowatched videos.
- the videos are clustered using the set of cowatch vectors ⁇ Vi - V n ⁇ .
- the videos can be grouped according to commonly cowatched videos.
- the clustering is accomplished by using k-means clustering.
- the distance between these vectors can be computed with the Li distance as is known in the art, or other distance metrics.
- the number of clusters used in the k-means clustering is not fixed, but can be chosen by the system designer to best represent the number of subtags expected in the video sampling, or a static value is used, such as 5. For example, if the number of randomly sampled videos increases, the system can increase the number of clusters used.
- any clusters which appear to be outliers are removed. For example, the clusters with too few samples can be excluded or merged into the nearest cluster.
- Each video V is now associated with a cluster CI.
- the number of remaining clusters is the number of latent subtags used for training subtag classifiers.
- Each cluster CI can now be used to initialize the subtag positive training sets. That is, Cl a can initialize the positive training set S a pos , Ob initializes the positive training set Sb pos , etc.
- the cowatched video list L for each video belonging to the cluster Cl n is added to S n pos .
- videos are not added to the subtag training set until they appear a threshold number of times in the cowatch lists. This threshold approach removes cowatch videos which appear tangential to the other videos in the cowatch cluster, and therefore are less likely to be representative of the latent subtag.
- the initial subtag negative training sets can be comprised of randomly sampled videos from the tag negative training set.
- this process is unsupervised and does not require any management by the system administrator.
- the resulting subtag classifiers are trained on features extracted from videos which have a cowatched relationship to one another, which makes it more likely the subtag classifiers derived from this method also relate to a latent semantic difference between videos.
- cowatch information is used to identify subtag clusters for initial subtag training sets.
- other embodiments may identify initial subtag training sets by other means, such as by manual identification of semantically meaningful subtags or by clustering according to video features. Now that the subtag training sets have been initialized, an iterative approach is used to further refine the subtag classifiers as described below.
- the subtag classifier training approach trains the subtag classifier and the tag classifiers jointly. Since the videos in the training set 301 are identified as positives or negatives on the tag level (as described above relative to the video metadata), the system does not a priori have any determination of which subtag classifier 302 to train on a given video. In order to determine which subtag classifier to train on a given video, an alternating approach is applied. Initially, the current iteration of subtag classifiers is applied to the videos to determine the "best fit" subtag for each video. Then, the "best fit" videos for each subtag are used to iteratively refine the subtag classifier. The next iteration begins by determining the "best fit" for the videos using the refined subtag classifiers. This conceptual framework is illustrated in FIG. 3.
- the training set 301 includes videos 1-6 which do not a priori have any subtag designation.
- the subtag classifiers C a and C b 302 have been trained by features extracted from the subtag training sets S a and S b 303.
- S a and S b are the initial training sets determined by the cowatch initialization process above.
- the tag training set 301 is assessed by the subtag training sets S a and S b 303 and used to determine the latent subtags in the training set 301. That is, each video is placed in the subtag training set 304 belonging to the subtag classifier which resulted in the highest confidence score.
- training of the classifier for the tag (which is comprised of a set of subtag classifiers) proceeds with two main steps.
- the current classifier model is used to determine the "best fit" subtag group for each video in the training set.
- the features extracted from the videos in each subtag group are used to retrain the subtag classifiers.
- One effect of this training process is that the "best fit" subtag group for a particular video may change from one iteration to another. For example, this results if the video's features score only marginally better for one subtag relative to another, and because the next iteration changes the composition of videos (and hence features training the classifiers) in the subtag training set, the video's features score higher in another subtag group on the next iteration.
- the training set for the tag 401 includes the videos selected for training the tag classifier identified by the partitioning module 235. These videos can be further segregated into portions for use during iterative training as desired.
- the videos currently being used for training the subtag classifiers is the active training set S 402.
- each video in the training set 401 is also a video in S.
- the active training set S 402 is a selected portion of the entire training set 401.
- the active training set S 402 comprises subtag training sets S a -S n 403. On the first iteration, the subtag training sets S a -S n 403 are initialized, such as by cowatch data.
- the active training set 402 comprises a plurality of subtag training sets 403, one for each subtag. That is, the videos in the active training set 402 are designated for a subtag training set, according to the subtag training sets 403.
- the subtag training sets 403, S a -S n are used to train associated subtag classifiers 404 C a -C n .
- Each of the subtag classifiers 404 C a -C n are used to classify features for a latent subtag of the tag, and together comprise a classifier for the tag itself.
- the subtag classifiers are each trained on different data sets and may not have converged in confidence scores, the subtag classifiers are reweighed 505. In particular, the subtag classifiers may not have converged due to the feature selection from the videos and the number of stumps used for the subtag classifiers.
- the confidence scores from the different classifiers are compared to determine the latent subtags, as initially described above with reference to FIG. 3.
- a linear SVM is used to calibrate the decision scores for each classifier. This is used to reweigh each classifier based on its discriminative ability over the tag.
- One method for reweighing the subtag classifiers is to train the linear SVM using each subtag classifier over all training videos using the videos' associated membership in the tag.
- the tag classifier 406 comprises a set of subtag classifiers C a '-C n ' corresponding to the subtag classifiers 404 modified by each subtag classifier's associated weighing factor. The process can be stopped here and tag classifier 406 can be used for classifying extracted video features according to tag classifier 406.
- the final classifier for the tag can also be chosen as tag classifier 406.
- the first iterative step is to determine the nearest latent subtags for the training set 407.
- the features extracted from the videos in training set 401 are analyzed by the subtag classifiers 404 (modified by the reweighing) to determine the most likely ("nearest") latent subtag for each video in the training set 401.
- Each video in the training set 401 is then added to the subtag training set 403 corresponding to the identified latent subtag.
- This iterative approach follows the conceptual framework of FIG. 3. That is, the features from the videos in the training set are used to find the "best fit" (i.e. highest- confidence) subtag classifier for each video. Then, each video is added to the subtag training set for its "best fit" subtag classifier.
- the subtag training set S a is expanded to include the videos in the training set 401 whose features were best characterized by C a - compared to Since the training set 401 includes positive as well as negative training videos, each subtag training set 403 is expanded to include the positive and negative samples which most closely match its subtag classifier 405.
- An additional bootstrapping step 408 used in one embodiment to bootstrap the subtag training sets is described below.
- the expanded subtag training sets are used as the active training set 502 for the next training iteration.
- the subtag training sets 403 are reset after the subtag classifiers 404 are created, such that the next iteration of the subtag training sets 403 includes only the videos which are identified as closest matches for the subtags.
- the tag training set 401 is expanded to include further videos if the partitioning module 235 has included several partitions for further training iterations.
- the bootstrapping used at block 409 can be used to modify the subtag training set prior to retraining the subtag classifiers 405 by selecting videos for inclusion in the active training set 402. Since the tags may be identified from user-provided metadata, the tags provided by users may be "noisy" and occasionally unreliable. As a result, it is desirable not to include the videos which, while marked by users as positives for the tag may not have features which resemble other videos with the tag. This makes it less likely the video is an actual positive. Thus it is useful to reduce the positive training set for each subtag to include only the "trustworthy" positives.
- the negative training set for the subtags may comprise a very large number of negatives for the tag, with many negatives sharing very few feature commonality with the subtag.
- the negative training set could be improved by including primarily the negative videos which are "confusing" - that is, most similar to the features representative of the subtag.
- the bootstrapping at block 409 is used to select the active training set 402 according to these concepts.
- One method of reducing the "untrustworthy" positives is to update the subtag training sets by including k samples which provided the highest confidence decision scores according to the applicable subtag classifier. Stated another way, the positives which belong to that subtag but which provide the lowest confidence according to the subtag classifier are excluded from the training set for the next iteration of training the subtag label, because the tag, while providing a "positive" may be an "untrustworthy" positive given user-provided data entry.
- the negative videos included in the training set are those which provide the highest confidence as a positive by the subtag classifier. That is, the k most "confusing" or “hardest” negatives (which are most likely to provide false positives to the classifier training) can be included in the negative trainings set for each subtag.
- the training set size determined by k can be tuned according to the ability of the subtag classifier training to maintain the videos in memory.
- the subtag classifiers are trained on a "clean" dataset, which contains the most "trustworthy” positive samples, and may be more tolerant to label noise by users.
- the k positive samples need not be the same as the k negative samples.
- the size of the active training set that is, the training set size k) is increased.
- the tag classifier 501 as shown is comprised of a plurality of subtag classifiers 502 C la -C ln .
- Association with the tag "Bike” is determined by Classifier 501 Ci, which is assessed by the set of subtag classifiers 502.
- the subtag classifiers 502 are trained according to the techniques described above. This figure illustrates assessing likely tags for a video using extracted video features 503.
- the video is classified by the subtag classifiers 502 to determine classification scores 504.
- Score Sia is the score produced by C la when provided the extracted video features 503 as an input.
- Further scores 504 are produced by subtag classifiers as S la -S ln .
- the subtag classifier scores S la -S ln are adjusted using the reweighing adjustment, and the maximum score is selected as the classifier score 505 SI .
- the maximum score 505 is used to determine membership in the tag "Bike.”
- Additional classifiers 506 may also be used to determine scores 507 relating to the labels associated with these classifiers. As shown with C3 relating to "transformers,” other tag classifiers also comprise a group of subtag classifiers, while further tag classifiers, such as C2 relating to "dog" do not. Using the scores Si-S x , the system can assess the likelihood the labels associated with the tags accurately characterize the features extracted from the video.
- the identification of a tag using a plurality of subtag classifiers is improved.
- the initialization of the subtag training sets can be performed by a variety of methods, such as initialization by cowatch features.
- the subtag classifiers can be trained to improve robustness of the subtag training sets.
- the process can be used to add tag labels to videos.
- the corresponding tag label 211 A is added to the metadata of the video.
- the scores are sorted, and only the labels 211 A corresponding to the top A tags 211 are added to the video metadata.
- only those scores indicating a particularly strong match—i.e., only those scores above some particularly threshold— are added.
- Subtag Labeling of Videos Although the subtag classifiers have never assumed a semantic meaning to derive from the features associated with the subtag classifiers, it is possible to develop semantic meanings for some subtags.
- the subtag training sets comprise videos which themselves include descriptive text and other metadata. Using this metadata for the subtag trainings set videos, analysis of the textual information can provide a label for the subtag. Since the subtag was previously developed from latent information, a semantic meaning should only be provided for the videos if adequate certainty is developed for the subtag labels. Therefore, textual information is only treated as a semantically meaningful label if the textual information is present in a supermajority of the subtag videos.
- the most frequently textual description in a subtag training set exceeds a threshold for frequency and distribution, it is adopted as the semantic label of the subtag, and membership in the subtag can additionally apply the subtag label to the video metadata.
- the subtag label is treated with greater skepticism, and users are prompted to confirm that the subtag label applies.
- the score indicates that the video does not represent the associated tag— e.g., the score is below some minimum threshold— then a remedial action can be taken, such as flagging the video, removing the associated text from the user-supplied metadata, and the like.
- this technique is useful to ensure that a particular tag has a specific meaning and thereby trim borderline cases to improve user searching.
- latent subtag classifiers to determine tag membership could be applied to a variety of other classification systems.
- image classification or sound classification could also benefit from classifications determined based on latent subtag identifiers.
- Certain aspects of the present disclosure include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present disclosure could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present disclosure also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic- optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of non-transient computer-readable storage medium suitable for storing electronic instructions.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present disclosure is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US41278710P | 2010-11-11 | 2010-11-11 | |
PCT/US2011/060219 WO2012064976A1 (en) | 2010-11-11 | 2011-11-10 | Learning tags for video annotation using latent subtags |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2638509A1 true EP2638509A1 (en) | 2013-09-18 |
EP2638509A4 EP2638509A4 (en) | 2015-06-03 |
Family
ID=46048705
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP11839839.5A Ceased EP2638509A4 (en) | 2010-11-11 | 2011-11-10 | Learning tags for video annotation using latent subtags |
Country Status (6)
Country | Link |
---|---|
US (1) | US8930288B2 (en) |
EP (1) | EP2638509A4 (en) |
CN (1) | CN103299324B (en) |
AU (1) | AU2011326430B2 (en) |
CA (1) | CA2817103C (en) |
WO (1) | WO2012064976A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2017025860A1 (en) * | 2015-08-11 | 2017-02-16 | Google Inc. | Annotation of videos with tag correctness probabilities |
Families Citing this family (59)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP5786495B2 (en) * | 2011-06-30 | 2015-09-30 | 富士通株式会社 | Image recognition apparatus, image recognition method, and computer program for image recognition |
US8954358B1 (en) * | 2011-11-03 | 2015-02-10 | Google Inc. | Cluster-based video classification |
US8649613B1 (en) * | 2011-11-03 | 2014-02-11 | Google Inc. | Multiple-instance-learning-based video classification |
US20140328570A1 (en) * | 2013-01-09 | 2014-11-06 | Sri International | Identifying, describing, and sharing salient events in images and videos |
CN102982634A (en) * | 2012-11-13 | 2013-03-20 | 上海交通大学 | Human intrusion detection method with audio and video integration |
US10860931B1 (en) * | 2012-12-31 | 2020-12-08 | DataInfoCom USA, Inc. | Method and system for performing analysis using unstructured data |
US9324040B2 (en) * | 2013-01-30 | 2016-04-26 | Technion Research & Development Foundation Limited | Training ensembles of randomized decision trees |
US10176260B2 (en) * | 2014-02-12 | 2019-01-08 | Regents Of The University Of Minnesota | Measuring semantic incongruity within text data |
US9176987B1 (en) | 2014-08-26 | 2015-11-03 | TCL Research America Inc. | Automatic face annotation method and system |
EP3192273A4 (en) | 2014-09-08 | 2018-05-23 | Google LLC | Selecting and presenting representative frames for video previews |
CN104657468B (en) * | 2015-02-12 | 2018-07-31 | 中国科学院自动化研究所 | The rapid classification method of video based on image and text |
US9530082B2 (en) * | 2015-04-24 | 2016-12-27 | Facebook, Inc. | Objectionable content detector |
US10289912B1 (en) * | 2015-04-29 | 2019-05-14 | Google Llc | Classifying videos using neural networks |
US20170019694A1 (en) * | 2015-07-17 | 2017-01-19 | Tribune Broadcasting Company, Llc | Video production system with social media content item modification feature |
US10296634B2 (en) * | 2015-08-18 | 2019-05-21 | Facebook, Inc. | Systems and methods for identifying and grouping related content labels |
CN106503723A (en) * | 2015-09-06 | 2017-03-15 | 华为技术有限公司 | A kind of video classification methods and device |
CN108353213A (en) * | 2015-10-30 | 2018-07-31 | 惠普发展公司，有限责任合伙企业 | Video content is summarized and class selection |
US20170185667A1 (en) * | 2015-12-24 | 2017-06-29 | Mcafee, Inc. | Content classification |
US10140554B2 (en) * | 2016-01-21 | 2018-11-27 | Wizr Llc | Video processing |
US9600717B1 (en) * | 2016-02-25 | 2017-03-21 | Zepp Labs, Inc. | Real-time single-view action recognition based on key pose analysis for sports videos |
WO2017176808A1 (en) * | 2016-04-04 | 2017-10-12 | Twitter, Inc. | Live video classification and preview selection |
US11055537B2 (en) | 2016-04-26 | 2021-07-06 | Disney Enterprises, Inc. | Systems and methods for determining actions depicted in media contents based on attention weights of media content frames |
GB2551769B (en) * | 2016-06-30 | 2020-02-19 | Rolls Royce Plc | Methods, apparatus, computer programs and non-transitory computer readable storage mediums for controlling a robot within a volume |
US10692015B2 (en) * | 2016-07-15 | 2020-06-23 | Io-Tahoe Llc | Primary key-foreign key relationship determination through machine learning |
GB201615745D0 (en) | 2016-09-15 | 2016-11-02 | Gb Gas Holdings Ltd | System for analysing data relationships to support query execution |
US11544579B2 (en) | 2016-11-23 | 2023-01-03 | Primal Fusion Inc. | System and method for generating training data for machine learning classifier |
US11205103B2 (en) | 2016-12-09 | 2021-12-21 | The Research Foundation for the State University | Semisupervised autoencoder for sentiment analysis |
EP3577600A1 (en) * | 2017-02-03 | 2019-12-11 | Koninklijke Philips N.V. | Classifier training |
CN108509465B (en) * | 2017-02-28 | 2022-03-15 | 阿里巴巴集团控股有限公司 | Video data recommendation method and device and server |
US10062039B1 (en) * | 2017-06-28 | 2018-08-28 | CS Disco, Inc. | Methods and apparatus for asynchronous and interactive machine learning using word embedding within text-based documents and multimodal documents |
CN110709855A (en) * | 2017-06-29 | 2020-01-17 | 英特尔公司 | Techniques for dense video description |
CN111066033A (en) * | 2017-08-30 | 2020-04-24 | 谷歌有限责任公司 | Machine learning method for generating labels of fuzzy results |
US10510328B2 (en) | 2017-08-31 | 2019-12-17 | Spotify Ab | Lyrics analyzer |
US10108902B1 (en) * | 2017-09-18 | 2018-10-23 | CS Disco, Inc. | Methods and apparatus for asynchronous and interactive machine learning using attention selection techniques |
US10817565B2 (en) * | 2017-11-06 | 2020-10-27 | Disney Enterprises, Inc. | Automation of media content tag selection |
JP6514305B1 (en) * | 2017-11-28 | 2019-05-15 | 株式会社東芝 | Recognition dictionary maintenance device, pattern recognition system, recognition dictionary maintenance method and program |
CN107995523B (en) * | 2017-12-21 | 2019-09-03 | Oppo广东移动通信有限公司 | Video broadcasting method, device, terminal and storage medium |
CN108307229B (en) * | 2018-02-02 | 2023-12-22 | 新华智云科技有限公司 | Video and audio data processing method and device |
JP6844564B2 (en) * | 2018-03-14 | 2021-03-17 | オムロン株式会社 | Inspection system, identification system, and learning data generator |
US11361416B2 (en) * | 2018-03-20 | 2022-06-14 | Netflix, Inc. | Quantifying encoding comparison metric uncertainty via bootstrapping |
US10755229B2 (en) | 2018-04-11 | 2020-08-25 | International Business Machines Corporation | Cognitive fashion-ability score driven fashion merchandising acquisition |
CN108664998A (en) * | 2018-04-27 | 2018-10-16 | 上海爱优威软件开发有限公司 | A kind of picture training method and system that paraphrase is reinforced |
US10956928B2 (en) | 2018-05-17 | 2021-03-23 | International Business Machines Corporation | Cognitive fashion product advertisement system and method |
US11538083B2 (en) | 2018-05-17 | 2022-12-27 | International Business Machines Corporation | Cognitive fashion product recommendation system, computer program product, and method |
US10963744B2 (en) * | 2018-06-27 | 2021-03-30 | International Business Machines Corporation | Cognitive automated and interactive personalized fashion designing using cognitive fashion scores and cognitive analysis of fashion trends and data |
US10810367B2 (en) * | 2018-11-13 | 2020-10-20 | Disney Enterprises, Inc. | Content processing automation |
US11074456B2 (en) | 2018-11-14 | 2021-07-27 | Disney Enterprises, Inc. | Guided training for automation of content annotation |
US11354351B2 (en) * | 2019-01-31 | 2022-06-07 | Chooch Intelligence Technologies Co. | Contextually generated perceptions |
US20220172456A1 (en) * | 2019-03-08 | 2022-06-02 | Google Llc | Noise Tolerant Ensemble RCNN for Semi-Supervised Object Detection |
CN111432245B (en) * | 2020-03-27 | 2021-07-13 | 腾讯科技（深圳）有限公司 | Multimedia information playing control method, device, equipment and storage medium |
CN113746874B (en) * | 2020-05-27 | 2024-04-05 | 百度在线网络技术（北京）有限公司 | Voice package recommendation method, device, equipment and storage medium |
CN111783649B (en) * | 2020-06-30 | 2024-01-23 | 北京百度网讯科技有限公司 | Video type detection method, device, electronic equipment and storage medium |
KR102605070B1 (en) * | 2020-07-06 | 2023-11-24 | 한국전자통신연구원 | Apparatus for Learning Recognition Model, Apparatus for Analyzing Video and Apparatus for Providing Video Searching Service |
KR20220014749A (en) * | 2020-07-29 | 2022-02-07 | 삼성전자주식회사 | Electronic apparatus for recommending search term based on content provided and control method thereof |
US11295175B1 (en) * | 2020-09-25 | 2022-04-05 | International Business Machines Corporation | Automatic document separation |
CN113553507A (en) * | 2021-07-26 | 2021-10-26 | 北京字跳网络技术有限公司 | Processing method, device and equipment based on interest tag and storage medium |
US20230039684A1 (en) * | 2021-08-03 | 2023-02-09 | Meta Platforms Technologies, Llc | Systems and methods for creating sharable media albums |
CN113965803B (en) * | 2021-09-08 | 2024-02-06 | 北京达佳互联信息技术有限公司 | Video data processing method, device, electronic equipment and storage medium |
CN115098725A (en) * | 2022-05-27 | 2022-09-23 | 北京达佳互联信息技术有限公司 | Task processing model determining method, video category determining method and device |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7421114B1 (en) * | 2004-11-22 | 2008-09-02 | Adobe Systems Incorporated | Accelerating the boosting approach to training classifiers |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050286772A1 (en) * | 2004-06-24 | 2005-12-29 | Lockheed Martin Corporation | Multiple classifier system with voting arbitration |
US7742641B2 (en) * | 2004-12-06 | 2010-06-22 | Honda Motor Co., Ltd. | Confidence weighted classifier combination for multi-modal identification |
JP4175390B2 (en) * | 2006-06-09 | 2008-11-05 | ソニー株式会社 | Information processing apparatus, information processing method, and computer program |
US8103646B2 (en) * | 2007-03-13 | 2012-01-24 | Microsoft Corporation | Automatic tagging of content based on a corpus of previously tagged and untagged content |
US8140584B2 (en) * | 2007-12-10 | 2012-03-20 | Aloke Guha | Adaptive data classification for data mining |
US7890512B2 (en) * | 2008-06-11 | 2011-02-15 | Microsoft Corporation | Automatic image annotation using semantic distance learning |
US8140450B2 (en) * | 2009-03-27 | 2012-03-20 | Mitsubishi Electric Research Laboratories, Inc. | Active learning method for multi-class classifiers |
-
2011
- 2011-11-10 CA CA2817103A patent/CA2817103C/en active Active
- 2011-11-10 CN CN201180062621.7A patent/CN103299324B/en active Active
- 2011-11-10 EP EP11839839.5A patent/EP2638509A4/en not_active Ceased
- 2011-11-10 WO PCT/US2011/060219 patent/WO2012064976A1/en active Application Filing
- 2011-11-10 AU AU2011326430A patent/AU2011326430B2/en active Active
- 2011-11-11 US US13/294,483 patent/US8930288B2/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7421114B1 (en) * | 2004-11-22 | 2008-09-02 | Adobe Systems Incorporated | Accelerating the boosting approach to training classifiers |
Non-Patent Citations (6)
Title |
---|
ADRIAN ULGES ET AL: "A System That Learns to Tag Videos by Watching Youtube", 12 May 2008, COMPUTER VISION SYSTEMS; [LECTURE NOTES IN COMPUTER SCIENCE], SPRINGER BERLIN HEIDELBERG, BERLIN, HEIDELBERG, PAGE(S) 415 - 424, ISBN: 978-3-540-79546-9, XP019088805 * |
GEORGE TODERICI ET AL: "Finding meaning on YouTube: Tag recommendation and category discovery", 2010 IEEE CONFERENCE ON COMPUTER VISION AND PATTERN RECOGNITION (CVPR), 13-18 JUNE 2010, SAN FRANCISCO, CA, USA, IEEE, PISCATAWAY, NJ, USA, 13 June 2010 (2010-06-13), pages 3447 - 3454, XP031725814, ISBN: 978-1-4244-6984-0 * |
HRISHIKESH ARADHYE ET AL: "Video2Text: Learning to Annotate Video Content", DATA MINING WORKSHOPS, 2009. ICDMW '09. IEEE INTERNATIONAL CONFERENCE ON, IEEE, PISCATAWAY, NJ, USA, 6 December 2009 (2009-12-06), pages 144 - 151, XP031585547, ISBN: 978-1-4244-5384-9 * |
None * |
See also references of WO2012064976A1 * |
ZHESHEN WANG ET AL: "YouTubeCat: Learning to categorize wild web videos", 2010 IEEE CONFERENCE ON COMPUTER VISION AND PATTERN RECOGNITION (CVPR), 13-18 JUNE 2010, SAN FRANCISCO, CA, USA, IEEE, PISCATAWAY, NJ, USA, 13 June 2010 (2010-06-13), pages 879 - 886, XP031725950, ISBN: 978-1-4244-6984-0 * |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2017025860A1 (en) * | 2015-08-11 | 2017-02-16 | Google Inc. | Annotation of videos with tag correctness probabilities |
US9779304B2 (en) | 2015-08-11 | 2017-10-03 | Google Inc. | Feature-based video annotation |
US10482328B2 (en) | 2015-08-11 | 2019-11-19 | Google Llc | Feature-based video annotation |
Also Published As
Publication number | Publication date |
---|---|
CN103299324A (en) | 2013-09-11 |
CA2817103C (en) | 2016-04-19 |
CN103299324B (en) | 2016-02-17 |
US20120123978A1 (en) | 2012-05-17 |
AU2011326430B2 (en) | 2015-01-22 |
US8930288B2 (en) | 2015-01-06 |
WO2012064976A1 (en) | 2012-05-18 |
CA2817103A1 (en) | 2012-05-18 |
AU2011326430A1 (en) | 2013-05-30 |
EP2638509A4 (en) | 2015-06-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8930288B2 (en) | Learning tags for video annotation using latent subtags | |
US11693902B2 (en) | Relevance-based image selection | |
US8396286B1 (en) | Learning concepts for video annotation | |
US9087297B1 (en) | Accurate video concept recognition via classifier combination | |
US11556743B2 (en) | Learning highlights using event detection | |
US11023523B2 (en) | Video content retrieval system | |
US8452778B1 (en) | Training of adapted classifiers for video categorization | |
US8954358B1 (en) | Cluster-based video classification | |
US8533134B1 (en) | Graph-based fusion for video classification | |
US8819024B1 (en) | Learning category classifiers for a video corpus | |
US8473981B1 (en) | Augmenting metadata of digital media objects using per object classifiers | |
US8649613B1 (en) | Multiple-instance-learning-based video classification | |
US9148619B2 (en) | Music soundtrack recommendation engine for videos | |
WO2016179938A1 (en) | Method and device for question recommendation | |
SG194442A1 (en) | In-video product annotation with web information mining | |
Li et al. | A study on content-based video recommendation | |
Ibrahim et al. | Large-scale text-based video classification using contextual features | |
Morosanu et al. | From image captioning to video summary using deep recurrent networks and unsupervised segmentation | |
CN115905667A (en) | AI intelligent recommendation algorithm |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20130611 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
RA4 | Supplementary search report drawn up and despatched (corrected) |
Effective date: 20150507 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/30 20060101ALI20150429BHEPIpc: G06K 17/00 20060101AFI20150429BHEP |
|
17Q | First examination report despatched |
Effective date: 20170403 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20180924 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
US10558950B2 - Automatic context passing between applications - Google Patents
Automatic context passing between applications Download PDFInfo
- Publication number
- US10558950B2 US10558950B2 US15/595,532 US201715595532A US10558950B2 US 10558950 B2 US10558950 B2 US 10558950B2 US 201715595532 A US201715595532 A US 201715595532A US 10558950 B2 US10558950 B2 US 10558950B2
- Authority
- US
- United States
- Prior art keywords
- application
- objects
- content page
- computing device
- context
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/107—Computer-aided management of electronic mailing [e-mailing]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/48—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/543—User-generated data transfer, e.g. clipboards, dynamic data exchange [DDE], object linking and embedding [OLE]
Definitions
- GUIs graphical user interfaces
- a user of a computing device may have to cease entering text in a word processing application, provide input to cause the device toggle to a calendar application, manually navigate within the calendar application in order to locate any events that may be relevant to a text document being viewed in the word processing application, and provide still yet additional input at a GUI of the calendar application to select or recreate information that the user may want to finish editing the text document.
- Providing several inputs required by some computing devices to perform various tasks can be tedious, repetitive, and time consuming.
- this disclosure is directed to techniques that may enable a computing device to identify and display information from various applications determined to be relevant to a task being performed using a currently executing application.
- the computing device may initially execute an application and begin performing a task within that application.
- the computing device may execute an email application and the user may begin performing the task of drafting an email within the email application.
- the computing device may execute a companion application that identifies information typically associated with one or more other applications, the information being related to contextual information associated with the task being performed with the initially executed application.
- the contextual information may specify objects, people, events, etc. associated with the task being performed using the currently executing application.
- the contextual information may identify a recipient of the email being drafted, content within the body of the email being drafted, or any other information that may assist the computing device in identifying the details of the email.
- the companion application may retrieve numerous types of data objects from the one or more other applications, such as emails, documents, files, contact information, event information, or any other data stored at or accessible to the computing device. For instance, if the email includes contents referencing a particular event, the companion application may retrieve calendar information regarding the event, web results of an Internet search for the event, or documents related to a topic of the event.
- the computing device may display indications of the potentially relevant information within a window or frame visually positioned on top of, next to, or within the graphical user interface of the currently executing application.
- the computing device may provide the selected information to the initially executed application.
- the currently executing application may insert the selected portion of information within a portion GUI of the initially executed application related to the task being performed or otherwise perform a function within the initially executed application utilizing the information selected in the companion application.
- techniques of this disclosure may provide a way for a user to quickly obtain documents, files, or any other data determined to be relevant to the task being performed using the application executing at the computing device without requiring the user to switch between several different applications, manually navigate to relevant content pages within the respective applications, or discern what input is necessary to move the objects between the two different applications.
- techniques of this disclosure may reduce the amount of time and the number of user inputs required to retrieve relevant objects from other applications, which may simplify the user experience and may reduce power consumption of the computing device.
- the disclosure is directed to a method that includes receiving, by a first application executing at a computing device, information associated with a content page for a second application executing at the computing device. At least a first portion of the content page for the second application is included in a graphical user interface of the computing device.
- the method further includes determining, by the first application and based on the information associated with the content page for the second application, a context of the second application.
- the method further includes determining, by the first application and based at least in part on the context of the second application, a respective set of objects for each application from one or more applications related to the second application.
- the method further includes generating, by the first application and based at least in part on the respective sets of objects, a content page for the first application including one or more graphical indications of at least one object from at least one of the respective sets of objects.
- the method further includes, while at least a second portion of the content page for the second application is included in the graphical user interface, outputting, by the first application, for display, at least a portion of the content page for the first application within the graphical user interface of the computing device.
- the disclosure is directed to a computing device that includes at least one processor and a memory that stores instructions associated with a first application.
- the instructions When executed, the instructions cause the at least one processor to receive information associated with a content page for a second application executing at the computing device. At least a first portion of the content page for the second application is included in a graphical user interface of the computing device.
- the instructions further cause the at least one processor to determine, based on the information associated with the content page for the second application, a context of the second application.
- the instructions further cause the at least one processor to determine, based at least in part on the context of the second application, a respective set of objects for each application from one or more applications related to the second application.
- the instructions further cause the at least one processor to generate, based at least in part on the respective sets of objects, a content page for the first application including one or more graphical indications of at least one object from at least one of the respective sets of objects.
- the instructions further cause the at least one processor to, while at least a second portion of the content page for the second application is included in the graphical user interface, output, for display, at least a portion of the content page for the first application within the graphical user interface of the computing device.
- the disclosure is directed to a non-transitory computer-readable storage medium storing instructions that, when executed, cause at least one processor of a computing device to receive information associated with a content page for a second application executing at the computing device. At least a first portion of the content page for the second application is included in a graphical user interface of the computing device.
- the instructions further cause the at least one processor to determine, based on the information associated with the content page for the second application, a context of the second application.
- the instructions further cause the at least one processor to determine, based at least in part on the context of the second application, a respective set of objects for each application from one or more applications related to the second application.
- the instructions further cause the at least one processor to generate, based at least in part on the respective sets of objects, a content page for the first application including one or more graphical indications of at least one object from at least one of the respective sets of objects.
- the instructions further cause the at least one processor to, while at least a second portion of the content page for the second application is included in the graphical user interface, output, for display, at least a portion of the content page for the first application within the graphical user interface of the computing device.
- FIG. 1 is a conceptual diagram illustrating an example computing device configured to identify and display information determined to be relevant to a task being performed, in accordance with one or more aspects of the present disclosure.
- FIG. 2 is a block diagram illustrating an example computing device configured to identify and display information determined to be relevant to a task being performed, in accordance with one or more aspects of the present disclosure.
- FIGS. 3A-3C are conceptual diagrams illustrating a sequence of operations for an example computing device configured to identify and display information determined to be relevant to a task being performed, in accordance with one or more aspects of the present disclosure.
- FIG. 4 is a flowchart illustrating further example operations of an example computing device configured to identify and display information determined to be relevant to a task being performed, in accordance with one or more aspects of the present disclosure.
- FIG. 1 is a conceptual diagram illustrating an example computing device 110 configured to identify and display information determined to be relevant to a task being performed, in accordance with one or more aspects of the present disclosure.
- computing device 110 represents an individual mobile or non-mobile computing device.
- Examples of computing devices 110 include a mobile phone, a tablet computer, a laptop computer, a desktop computer, a server, a mainframe, a set-top box, a television, a wearable device (e.g., a computerized watch, computerized eyewear, computerized gloves, etc.), a home automation device or system (e.g., an intelligent thermostat or home assistant device), a personal digital assistants (PDA), a gaming system, a media player, an e-book reader, a mobile television platform, an automobile navigation or infotainment system, or any other type of mobile, non-mobile, wearable, and non-wearable computing device configured to execute a companion application (e.g., application 118 B) or otherwise access applications related to a task that computing device 110 is currently performing.
- a companion application e.g., application 118 B
- Computing device 110 includes a user interface (UID) 112 .
- UID 112 of computing device 110 may function as an input and/or output device for computing device 110 .
- UID 112 may be implemented using various technologies. For instance, UID 112 may function as an input device using presence-sensitive input screens, such as resistive touchscreens, surface acoustic wave touchscreens, capacitive touchscreens, projective capacitance touchscreens, pressure sensitive screens, acoustic pulse recognition touchscreens, or another presence-sensitive display technology.
- presence-sensitive input screens such as resistive touchscreens, surface acoustic wave touchscreens, capacitive touchscreens, projective capacitance touchscreens, pressure sensitive screens, acoustic pulse recognition touchscreens, or another presence-sensitive display technology.
- UID 112 may function as an input device using microphone technologies, infrared sensor technologies, or other input device technology for use in receiving user input. For example, UID 112 may detect, using built-in microphone technology, voice input that UI module 120 and/or context module 122 processes for completing a task. As another example, UID 112 may include a presence-sensitive display that may receive tactile input from a user of computing device 110 . UID 112 may receive indications of tactile input by detecting one or more gestures from a user (e.g., the user touching or pointing to one or more locations of UID 112 with a finger or a stylus pen).
- UID 112 may function as output (e.g., display) device and present output to a user.
- UID 112 may function as an output device using any one or more display devices, such as liquid crystal displays (LCD), dot matrix displays, light emitting diode (LED) displays, organic light-emitting diode (OLED) displays, e-ink, or similar monochrome or color displays capable of outputting visible information to a user of computing device 110 .
- UID 112 may function as output device using speaker technologies, haptic feedback technologies, or other output device technology for use in outputting information to a user.
- UID 112 may present a user interface (e.g., user interface 102 A or 102 B) related to applications 118 A and 118 B and context module 122 .
- UID 112 may present a user interface related to other features of computing platforms, operating systems, applications, and/or services executing at and/or accessible from computing device 110 (e.g., e-mail, chat, online services, telephone,
- Computing device 110 further includes applications 118 A and 118 B, user interface (UI) module 120 , and context module 122 .
- Applications 118 A and 118 B and modules 120 and 122 may perform operations described using software, hardware, firmware, or a mixture of hardware, software, and firmware residing in and/or executing at computing device 110 .
- One or more processors of computing device 110 may execute instructions that are stored at a memory or other non-transitory storage medium of computing device 110 to perform the operations of applications 118 A and 118 B and modules 120 and 122 .
- Computing device 110 may execute applications 118 A and 118 B and modules 120 and 122 as virtual machines executing on underlying hardware.
- Applications 118 A and 118 B and modules 120 and 122 may execute as one or more services of an operating system or computing platform.
- Applications 118 A and 118 B and modules 120 and 122 may execute as one or more executable programs at an application layer of a computing platform.
- UI module 120 manages user interactions with UID 112 and other components of computing device 110 .
- UI module 120 may act as an intermediary between various components of computing device 110 to make determinations based on user input detected by UID 112 and generate output at UID 112 in response to the user input.
- UI module 120 may receive instructions from an application, service, platform, or other module of computing device 110 to cause UID 112 to output a user interface (e.g., user interface 14 A).
- UI module 120 may manage inputs received by computing device 110 as a user views and interacts with the user interface presented at UID 112 and update the user interface in response to receiving additional instructions from the application, service, platform, or other module of computing device 110 that is processing the user input.
- user interface 102 A is an email user interface.
- user interface 102 A may be any graphical user interface produced during the execution of a first application, such as application 118 A.
- user interface 102 A includes content object 104 A (i.e., the “to” field of the email correspondence), content object 104 B (i.e., the “from” field of the email correspondence), and content object 104 C (i.e., the body of the email correspondence).
- UI module 120 may execute application 118 A generate a content page for application 118 A, which is currently executing on computing device 110 .
- application 118 A is an email application that is part of a web suite of applications.
- the content page for the email application may include a “To” field, a “From” field, a subject line, an email body area, a listing of emails, additional content in the chain of emails, or any additional content related to a user's email inbox or outbox, including text, images, metadata, an application state, application code, field identifiers, file names, or file types.
- UI module 120 may output, for display via UID 112 , graphical user interface 102 A that includes at least a portion of the content page for application 118 A.
- the portion of the content page included in graphical user interface 102 A consists of content object 104 A (i.e., the “to” field of the email correspondence), content object 104 B (i.e., the “from” field of the email correspondence), and content object 104 C (i.e., the body of the email correspondence).
- UI module 120 may output more content objects or less content objects based on the graphical real estate available in UID 112 and the amount of content contained within each content object.
- context module 122 may execute application 118 B to receive information associated with the content page for application 118 A. Context module 122 may then execute application 118 B to determine, based on the content page for application 118 A, a context of application 118 A for application 118 B.
- the context may include any information regarding a current state of application 118 A that may provide an indication of a current task being performed within application 118 A, a future task to be performed within application 118 A, or any other information relevant to application 118 A.
- UI module 120 may output a request for explicit user permission to execute application 118 B and transfer the information associated with the content page for 118 A. After receiving the explicit permission to do so, context module 122 may begin executing application 118 B. If explicit permission is denied, context module 122 may instead refrain from executing application 118 B.
- context module 122 may determine that content object 104 A indicates that the current email correspondence is a received email addressed to the user of computing device 110 . Context module 122 may further determine that content object 104 B indicates that the user's boss, “Manager John”, is the author of the current email correspondence and that the email is, therefore, likely work related. Finally, context module 122 may further determine that content object 104 C indicates that the user's boss is requesting a document authored by both the user and the boss regarding a deal with corporation X.
- context module 122 may analyze any content objects within the content page in the context determination process, including content objects that UI module 120 is not currently outputting for display but are on the same content page.
- content object 104 C may be a reply to a previous email chain, which is included on the content page but off-screen.
- Context module 122 may use the previous email chain as additional data when determining the context of application 118 A.
- context module 122 may execute application 118 B to determine a respective set of objects for each application from one or more applications related to application 118 A.
- application 118 A the email application
- application 118 B may be configured to access data from other applications within the same web suite, which would be related to application 118 A.
- any application that may exchange data with application 118 A may be considered a related application.
- any application developed by a same company as application 118 A may be considered a related application.
- any application that may interact with same contents of a data storage device as application 118 A may be considered a related application.
- application 118 B determined the context of application 118 A to be that the user is reviewing an email exchange with the user's boss in order to find a specific document that the user and the user's boss collaborated on drafting.
- Context module 122 may then execute application 118 B to search for documents within a document editing/storage application related to application 118 A based on the determined context (e.g., a document regarding corporation X and a deal that is occurring with said corporation X).
- Application 118 B may retrieve a list of documents associated with the related document editing/storage application that include references to corporation X, deals that the user's business is a party to, documents that are co-authored by the user and the user's boss, etc.
- Application 118 B may forward the list of retrieved objects to UI module 120 , which may generate a content page for application 118 B that includes one or more graphical indications of at least one object from at least one of the respective sets of objects.
- the content page may include a portion of or the entirety of the set of objects retrieved by application 118 B.
- UI module 120 may then output, for display at UID 112 , graphical user interface 102 B that includes at least a portion of the content page for application 118 B while at least a portion of graphical user interface 102 A is displayed.
- application 118 B may retrieve a set of ten documents that are related to either corporation X, a deal that the user is a party to, or that are co-authored by the user and the user's boss.
- Application 118 B may sort the documents based on how closely the documents match the determined context.
- document 106 A titled “Corporation X Deal.doc”
- Document 106 B titled “Corporation X Fee Agreement.doc,” may be a document co-authored by the user and the user's boss regarding a previous fee agreement between the user's company and corporation X.
- Document 106 C titled “Corporation R Deal.doc,” may be a document authored by the user regarding a deal between the user's company and corporation R.
- UI module 120 may determine that UID 112 is large enough to display three of the ten documents.
- UI module 120 may output graphical user interface 102 B as showing the top three documents, or the three documents ranked highest in the ranked list that application 118 B previously generated (i.e., documents 106 A- 106 C), of the ten total retrieved documents.
- Graphical user interface 102 B may be scrollable such that each of the other seven documents not initially shown in graphical user interface 102 B may be displayed to the user.
- computing device 110 may provide a way for a user to quickly obtain documents, files, or any other stored data object determined to be relevant to the task being performed by application 118 A on computing device 110 without requiring the user to switch between several different applications, manually navigate to relevant content pages within the respective applications, or discern what input is necessary to move the objects between the two different applications. For instance, in the example of FIG. 1 , the user may drag document 106 A, the likely document requested by the user's boss, into the reply field of application 118 A's graphical user interface to attach the requested document to a reply email. In this way, techniques of this disclosure may reduce the amount of time and the number of user inputs required to retrieve relevant objects in other applications, which may simplify the user experience and may reduce power consumption of computing device 110 .
- techniques of this disclosure may provide a way for a user to quickly obtain documents, files, or any other data determined to be relevant to the task being performed using application 118 A without requiring the user to switch between several different applications, manually navigate to relevant content pages within the respective applications, or discern what input is necessary to move the objects between the two different applications.
- techniques of this disclosure may reduce the amount of time and the number of user inputs required to retrieve relevant objects from other applications, which may simplify the user experience and may reduce power consumption of computing device 110 .
- FIG. 2 is a block diagram illustrating an example computing device configured to identify and display information determined to be relevant to a task being performed, in accordance with one or more aspects of the present disclosure.
- Computing device 210 of FIG. 2 is described below as an example of computing device 110 A and/or 110 B of FIG. 1 .
- FIG. 2 illustrates only one particular example of computing device 210 , and many other examples of computing device 210 may be used in other instances and may include a subset of the components included in example computing device 210 or may include additional components not shown in FIG. 2 .
- computing device 210 includes user interface device (UID) 212 , one or more processors 240 , one or more communication units 242 , one or more input components 244 , one or more output components 246 , and one or more storage components 248 .
- UID 212 includes display component 202 and presence-sensitive input component 204 .
- Storage components 248 of computing device 210 include application 218 A, application 218 B, UI module 220 , context module 222 , one or more related applications 224 , and related objects data store 226 .
- processors 240 may implement functionality and/or execute instructions associated with computing device 210 to proactively guide the user to information that is related to a task being performed on computing device 210 on application 218 A.
- Examples of processors 240 include application processors, display controllers, auxiliary processors, one or more sensor hubs, and any other hardware configure to function as a processor, a processing unit, or a processing device.
- Modules 218 A, 218 B, 220 , and 222 may be operable by processors 240 to perform various actions, operations, or functions of computing device 210 .
- processors 240 of computing device 210 may retrieve and execute instructions stored by storage components 248 that cause processors 240 to perform the operations modules 218 A, 218 B, 220 , and 222 .
- the instructions when executed by processors 240 , may cause computing device 210 to provide information about application 218 A to application 218 B, which determines a context of application 218 A and retrieves related objects based on the context.
- UI module 220 may include all functionality of UI module 120 of computing device 110 of FIG. 1 and may perform similar operations as UI module 120 for managing a user interface (e.g., user interfaces 102 A and 102 B) that computing device 210 provides at UID 212 for example, for facilitating interactions between a user of computing device 110 and applications 218 A and 218 B.
- UI module 220 of computing device 210 may receive information from applications 218 A and 218 B that includes instructions for outputting (e.g., displaying) a companion user interface (e.g., user interface 102 B).
- UI module 220 may receive the information from application 218 B over communication channels 250 and use the data to generate a user interface.
- UI module 220 may transmit a display command and associated data over communication channels 250 to cause UID 212 to present the user interface at UID 212 .
- Context module 222 may include all functionality of context module 122 of computing device 110 of FIG. 1 and may perform similar operations as context module 122 for executing application 218 B. In some examples, context module 222 may execute locally (e.g., at processors 240 ) to provide functions associated with retrieving objects related to a current context of application 218 A. In some examples, context module 222 may act as an interface to a remote companion service accessible to computing device 210 . For example, context module 222 may be an interface or application programming interface (API) to a remote version of application 218 B.
- API application programming interface
- One or more related applications 224 represent all the various individual applications and services executing at and accessible from computing device 210 that may be accessed by application 218 B and context module 222 to provide the user with information and/or perform a task.
- Related applications 224 may exist and include an e-mail application, a chat or messaging application, a calendar application, a document processing application, an contact storage application, a search application, a map or navigation application, a transportation service application (e.g., a bus or train tracking application), a social media application, an Internet browser application, or any and all other applications that may execute at computing device 210 .
- one or more related applications 224 may include any application in a same suite as application 218 A, any application that may exchange data with application 218 A, any application developed by a same company as application 218 A, or any application that may interact with same contents of a data storage device as application 218 A.
- context is used to describe any information that can be used by context module 222 and application 218 B to define a task or details regarding a task that a computing device, and the user of the computing device, may be performing at a particular time using application 218 A.
- application 218 B may receive information about a current state or a current task being performed using application 218 A and determine the context based on said information.
- application 218 B may determine the context based on information in a content page of application 218 A, at least a portion of which may be output for display in a graphical user interface.
- the content page may include various content objects or content data structures, each of which may include text, images, media, audio, metadata, computer code, or uniform resource locator (URL) information that application 218 B may analyze to determine the context of application 218 A.
- URL uniform resource locator
- One or more storage components 248 within computing device 210 may store information for processing during operation of computing device 210 (e.g., computing device 210 may store data accessed by modules 218 A, 218 B, 220 , and 222 during execution at computing device 210 ).
- storage component 248 is a temporary memory, meaning that a primary purpose of storage component 248 is not long-term storage.
- Storage components 248 on computing device 210 may be configured for short-term storage of information as volatile memory and therefore not retain stored contents if powered off. Examples of volatile memories include random access memories (RAM), dynamic random access memories (DRAM), static random access memories (SRAM), and other forms of volatile memories known in the art.
- Storage components 248 also include one or more computer-readable storage media.
- Storage components 248 in some examples include one or more non-transitory computer-readable storage mediums.
- Storage components 248 may be configured to store larger amounts of information than typically stored by volatile memory.
- Storage components 248 may further be configured for long-term storage of information as non-volatile memory space and retain information after power on/off cycles. Examples of non-volatile memories include magnetic hard discs, optical discs, floppy discs, flash memories, or forms of electrically programmable memories (EPROM) or electrically erasable and programmable (EEPROM) memories.
- EPROM electrically programmable memories
- EEPROM electrically erasable and programmable
- Storage components 248 may store program instructions and/or information (e.g., data) associated with modules 218 A, 218 B, 220 , and 222 and data store 226 .
- Storage components 248 may include a memory configured to store data or other information associated with modules 218 A, 218 B, 220 , and 222 and data store 226 .
- Communication channels 250 may interconnect each of the components 212 , 240 , 242 , 244 , 246 , and 248 for inter-component communications (physically, communicatively, and/or operatively).
- communication channels 250 may include a system bus, a network connection, an inter-process communication data structure, or any other method for communicating data.
- One or more communication units 242 of computing device 210 may communicate with external devices via one or more wired and/or wireless networks by transmitting and/or receiving network signals on one or more networks.
- Examples of communication units 242 include a network interface card (e.g. such as an Ethernet card), an optical transceiver, a radio frequency transceiver, a GPS receiver, or any other type of device that can send and/or receive information.
- Other examples of communication units 242 may include short wave radios, cellular data radios, wireless network radios, as well as universal serial bus (USB) controllers.
- USB universal serial bus
- One or more input components 244 of computing device 210 may receive input. Examples of input are tactile, audio, and video input.
- Input components 242 of computing device 210 includes a presence-sensitive input device (e.g., a touch sensitive screen, a PSD), mouse, keyboard, voice responsive system, camera, microphone or any other type of device for detecting input from a human or machine.
- a presence-sensitive input device e.g., a touch sensitive screen, a PSD
- mouse e.g., keyboard, voice responsive system, camera, microphone or any other type of device for detecting input from a human or machine.
- input components 242 may include one or more sensor components one or more location sensors (GPS components, Wi-Fi components, cellular components), one or more temperature sensors, one or more movement sensors (e.g., accelerometers, gyros), one or more pressure sensors (e.g., barometer), one or more ambient light sensors, and one or more other sensors (e.g., infrared proximity sensor, hygrometer sensor, and the like).
- Other sensors may include a heart rate sensor, magnetometer, glucose sensor, olfactory sensor, compass sensor, step counter sensor.
- One or more output components 246 of computing device 210 may generate output in a selected modality. Examples of modalities may include a tactile notification, audible notification, visual notification, machine generated voice notification, or other modalities.
- Output components 246 of computing device 210 includes a presence-sensitive display, sound card, video graphics adapter card, speaker, cathode ray tube (CRT) monitor, liquid crystal display (LCD), or any other type of device for generating output to a human or machine in a selected modality.
- UID 212 of computing device 210 may be similar to UID 112 of computing device 110 A and includes display component 202 and presence-sensitive input component 204 .
- Display component 202 may be a screen at which information (e.g., a visual indication) is displayed by UID 212 while presence-sensitive input component 204 may detect an object at and/or near display component 202 .
- UID 212 may also represent an external component that shares a data path with computing device 210 for transmitting and/or receiving input and output.
- UID 212 represents a built-in component of computing device 210 located within and physically connected to the external packaging of computing device 210 (e.g., a screen on a mobile phone).
- UID 212 represents an external component of computing device 210 located outside and physically separated from the packaging or housing of computing device 210 (e.g., a monitor, a projector, etc. that shares a wired and/or wireless data path with computing device 210 ).
- UID 212 of computing device 210 may detect two-dimensional and/or three-dimensional gestures as input from a user of computing device 210 .
- a sensor of UID 212 may detect a user's movement (e.g., moving a hand, an arm, a pen, a stylus, etc.) within a threshold distance of the sensor of UID 212 .
- UID 212 may determine a two or three-dimensional vector representation of the movement and correlate the vector representation to a gesture input (e.g., a hand-wave, a pinch, a clap, a pen stroke, etc.) that has multiple dimensions.
- a gesture input e.g., a hand-wave, a pinch, a clap, a pen stroke, etc.
- UID 212 can detect a multi-dimension gesture without requiring the user to gesture at or near a screen or surface at which UID 212 outputs information for display. Instead, UID 212 can detect a multi-dimensional gesture performed at or near a sensor which may or may not be located near the screen or surface at which UID 212 outputs information for display.
- UI module 220 may execute application 218 A generate a content page for application 218 A, which is currently executing on computing device 210 .
- application 218 A may be a chat application.
- the content page for the chat application may include a contact field, a user identification field, a prior chat history, current chat conversation, a text entry field, conversation windows with other users, additional contact information for a counterpart in the chat application, or any additional content related to a user's chat conversations, including text, images, metadata, an application state, application code, field identifiers, file names, or file types.
- UI module 220 may output, for display via UID 212 , a graphical user interface that includes at least a portion of the content page for application 218 A.
- the portion of the content page included in the graphical user interface could include a current chat conversation, a current chat partner, and a communication entry field for the user to enter text or attach media or other files to the chat conversation.
- UI module may output more content objects or less content objects based on the graphical real estate available in UID 212 and the amount of content contained within each content object.
- Context module 222 may execute application 218 B to receive information associated with the content page for application 218 A. For instance, application 218 B may receive a chat history between the user and the current chat partner, any information in the communication entry field, any information regarding the current chat conversation, and other chat partners that the user is currently conversing with. Part of the current chat conversation may include a discussion of weekend plans with the chat partner. In some examples, context module 222 may begin executing application 218 B to determine the context responsive to receiving an indication of user input to begin executing application 218 B.
- Context module 222 may then execute application 218 B to determine, based on the content page for application 218 A, a context of application 218 A for application 218 B.
- the context may include any information regarding a current state of application 218 A that may provide an indication of a current task being performed within application 218 A, a future task to be performed within application 218 A, or any other information relevant to application 218 A.
- context module 222 may determine that the user is discussing weekend plans with the current chat partner.
- Context module 222 may further determine that the current chat conversation includes a discussion of food that both the user and the chat partner enjoy, even if this portion of the current chat conversation is not currently being displayed on UID 212 .
- context module 222 may further determine that a chat history between the users include an activity venue that both the user and the chat partner were interested in visiting, even if this portion of the chat history is not currently being displayed on UID 212 .
- application 218 B may identify one or more content objects in the content page for the second application.
- the content objects may include one or more of text, images, metadata, an application state, application code, field identifiers, file names, or file types. From these content objects, application 218 B may extract at least one respective property of each of the one or more content objects.
- Application 218 B may determine the context based at least in part on one or more properties of the at least one respective property of each of the one or more content objects. For instance, Application 218 B may extract the text from the current conversation window.
- Application 218 B may parse the text of the current conversation to determine a topic of the conversation or a particular subject of the conversation. In the current instance, the current chat conversation includes a discussion of weekend plans with the chat partner. As such, application 218 B parse the text to determine that the user may be attempting to make plans with the chat partner, and that retrieving objects related to the user's calendar may be helpful for the current conversation.
- application 218 B may analyze the exchanged files, such as using image recognition, filename analysis, audio parsing, or any other analysis to determine the contents of the exchanged files. Application 218 B may determine the context based on the additional results of this analysis.
- media files e.g., images, audio, or video
- application 218 B may analyze the exchanged files, such as using image recognition, filename analysis, audio parsing, or any other analysis to determine the contents of the exchanged files.
- Application 218 B may determine the context based on the additional results of this analysis.
- context module 222 may execute application 218 B to determine a respective set of objects for each application from related applications 224 to application 218 A.
- application 218 A the chat application
- application 218 B may be configured to access data from related applications 224 , which may be other applications within the same web suite, which would be related to application 218 A.
- related applications 224 may include any application that may exchange data with application 218 A.
- related applications 224 may include any application developed by a same company as application 218 A.
- related applications 224 may include any application that may interact with same contents of a data storage device as application 218 A.
- application 218 B may construct a respective search query for each of the one or more applications 224 related to application 218 A based on the context. Application 218 B may then execute each respective search query from the respective search queries to retrieve the respective set of objects from related objects data store 226 of a corresponding application from the one or more applications 224 related to application 218 A.
- related objects data store 226 includes the respective sets of objects.
- the calendar application of related applications 224 may utilize related objects data store 226 to store the instances of calendar events.
- application 218 B may construct a search query for events that happen between 5 PM Friday night and 11 PM Sunday night. Application 218 B may execute this search query within related objects data store 226 and retrieve the results of the search query from related objects data store 226 , the results being the respective set of objects for the calendar application.
- application 218 B may retrieve objects associated with each of multiple related applications 224 and output a conglomeration of the objects from different applications. For instance, in addition to the general weekend plans, application 218 B determined that the context included a discussion of a type of restaurant that both the user and the chat partner enjoy (e.g., Italian restaurants). In addition to retrieving the calendar events, application 218 B may also execute a search application to search for Italian restaurants in the vicinity of the user. In such instances, in constructing the content page for application 218 B, application 218 B may include both graphical indications of the two calendar events and a graphical indication of the highest rated Italian restaurant in the area, combining the results of two different related applications into the same graphical user interface.
- application 218 B determined the context of application 218 A to be that the user is discussing weekend plans with the chat partner.
- Context module 222 may then execute application 218 B to search a calendar application in related applications 224 for any calendar events during this weekend based on the determined context (i.e., that the user and the chat partner are discussing weekend plans).
- Application 218 B may retrieve a list of calendar events for the user stored in the related calendar application that take place during the discussed time.
- Application 218 B may forward the list of retrieved objects to UI module 220 , which may generate a content page for application 218 B that includes one or more graphical indications of at least one object from at least one of the respective sets of objects.
- the content page may include a portion of or the entirety of the set of objects retrieved by application 218 B.
- UI module 220 may then output, for display at UID 212 , graphical user interface 202 B that includes at least a portion of the content page for application 218 B while at least a portion of the original graphical user interface is displayed.
- the content page for application 218 B may be displayed in a way that the content page for application 218 B overlaps or replaces a portion of the displayed graphical user interface for application 218 A.
- the content page for application 218 B may be displayed in a way that the original graphical user interface is shrunk and displayed side-by-side with the content page for application 218 B without increasing or decreasing the size of the frame containing the combined graphical user interface.
- application 218 B may retrieve each calendar event in the user's calendar for the timeframe of the upcoming weekend (e.g., a concert on Friday night and a brunch with the user's parents on Saturday morning).
- UI module 220 may determine that UID 212 is large enough to display both of the calendar events.
- UI module 220 may output an additional graphical user interface showing the two calendar events.
- application 218 B may receive an indication of user input selecting a first graphical indication of a first object from the one or more graphical indications of the at least one object included in the content page for the first application. Context module 222 may then send instructions to application 218 A to perform a function utilizing the first object within application 218 A. For instance, application 218 B may receive an indication of user input selecting the calendar event for the user's brunch with the user's parents Saturday morning. Upon receiving the selection, context module 222 may insert a graphical card into the chat conversation with the chat partner and send the graphical card to the chat partner, the graphical card including the date, time, and location information for the user's brunch calendar event.
- the user may select which content objects that application 218 B should analyze in order to determine the context. For instance, application 218 B may receive an indication of a selection of one or more graphical indications representing one or more content objects included in the content page of application 218 A. Application 218 B may then determine an updated context of application 218 A based on the selected one or more content objects. Application 218 B may determine a respective updated set of objects for each of related applications 224 based at least in part on the updated context and generate an updated content page for the second application including one or more graphical indications of at least one object from at least one of the respective updated sets of objects. UI module 218 may then output, for display, a portion of the updated content page for application 218 B within the graphical user interface.
- application 218 B may receive an indication of user input selecting the portion of the conversation explicitly mentioning the common affinity for a particular type of restaurant. Application 218 B may, accordingly, determine the context of the conversation to be centered around the type of restaurant rather than plans specifically for the weekend. The retrieved content objects may reflect the updated context.
- the content page for application 218 B may only include results from a single related application. However, the user may wish to see results from a different related application. As such, application 218 B may receive an indication of user input selecting a different related application from related applications 224 . Application 218 B may generate, based at least in part on the respective sets of objects, an updated content page for application 218 B including one or more graphical indications of at least one object from a second set of objects for the different application from related applications 224 and output, for display, a portion of the updated content page for application 218 B within the graphical user interface. For instance, the user may wish to send contact information of a person attending the concert with the user on Friday night. As such, rather than the calendar application, the user may wish to access their address book application. Application 218 B may receive an indication of user input selecting the address book application and output a new set of objects based on the previously determined context.
- FIGS. 3A-3C are conceptual diagrams illustrating a sequence of operations for an example computing device configured to execute a companion application to identify and display information from various applications that may be relevant to a task being performed using a currently executing application, in accordance with one or more aspects of the present disclosure.
- FIG. 3 is described below in the context of computing device 110 of FIG. 1 .
- context module 122 while executing at one or more processors of computing device 110 , may execute application 118 B to produce graphical user interfaces 360 A- 360 E, in accordance with one or more aspects of the present disclosure.
- FIG. 4 is described below within the context of computing device 110 of FIG. 1 .
- computing device 110 may execute application 118 A to produce graphical user interface 260 A.
- application 118 A may be a word processing application.
- Graphical user interface 360 A shows that the user may be editing text document about a client meeting for Company Z on Aug. 8, 2017. Further details of the meeting, including an agenda, are included in graphical user interface 360 A.
- a content page for application 118 A may be the entire text document, even though graphical user interface 360 A may only include a portion of the text document.
- computing device 110 may begin executing application 118 B.
- Application 118 B may determine a context of application 118 A based on the content page (i.e., the entirety of the text document).
- Application 118 B may extract information about the text document, including any additional authors of the text document and the content of the text document. Based on this context, application 118 B may retrieve respective sets of objects from applications related to application 118 A.
- application 118 B may retrieve objects from an email application, a calendar application, and a contact book application, each of which is related to application 118 A.
- a list of these applications, including a combined page that includes objects related to all of the applications, may be depicted by graphical element 364 .
- application 118 B may determine that the title of the text document is “Client Meeting Kick-Off.” Application 118 B may also determine that the related email application includes an email from a co-author of the text document with the subject line “Re: Client Kick-off Agenda.” Application 118 B may determine that this email may include information that is useful to the user given the current context and output graphical indication 362 A of the email message.
- Application 118 B may also find a calendar event for the meeting discussed in the word document in the calendar application, as well as contact information for one of the attendees of the meeting. As such, application 118 B may also output graphical indications 362 B and 362 C, respectively, of these objects in graphical user interface 360 B.
- the user may select the email application from the list of graphical indications 364 , as the user may be looking for a particular email discussing the text document.
- application 118 B may generate an updated content page that only includes emails retrieved from a data store for the email application.
- Graphical indication 366 A may be the same email message as originally shown in graphical user interface 360 B.
- graphical user interface 360 C may also include two additional graphical indications 366 B and 366 C associated with additional emails not initially displayed in graphical user interface 360 B.
- Application 118 B may then receive an indication of user input selecting graphical indication 366 A and the associated email. As such, application 118 B may access the related email application to update the graphical user interface to show additional information regarding the selected email message. For instance, application 118 B may output, for display in graphical user interface 360 D, subject line 368 A, contact line 368 B, and email body 368 C.
- application 118 B may receive an indication of further user input selecting email body 368 C.
- application 118 B may perform a function in application 118 A using the selected email body 368 C.
- the function correlates to a “copy and paste” function, pasting the body of the email into the text document. In this way, the user is able to quickly navigate between multiple applications that may communicate with one another and transfer relevant information between said applications without ever fully navigating away from the initial application.
- FIG. 4 is a flowchart illustrating further example operations of an example computing device configured to execute a companion application to identify and display information from various applications that may be relevant to a task being performed using a currently executing application, in accordance with one or more aspects of the present disclosure.
- FIG. 4 is described below in the context of computing device 110 of FIG. 1 .
- context module 122 while executing at one or more processors of computing device 110 , may execute application 118 B to perform operations 400 - 440 , in accordance with one or more aspects of the present disclosure.
- FIG. 4 is described below within the context of computing device 110 of FIG. 1 .
- context module 112 may execute application 118 B to receive information associated with a content page for application 118 A executing at computing device 110 ( 400 ). Context module 122 may then execute application 118 B to determine, based on the content page for application 118 A, a context of application 118 A for application 118 B ( 410 ).
- the context may include any information regarding a current state of application 118 A that may provide an indication of a current task being performed within application 118 A, a future task to be performed within application 118 A, or any other information relevant to application 118 A.
- context module 122 may analyze any content objects within the content page in the context determination process, including content objects that UI module 120 is not currently outputting for display but are on the same content page.
- content object 104 C may be a reply to a previous email chain, which is included on the content page but off-screen.
- Context module 122 may use the previous email chain as additional data when determining the context of application 118 A.
- context module 122 may execute application 118 B to determine a respective set of objects for each application from one or more applications related to application 118 A ( 420 ).
- application 118 A the email application
- application 118 B may be configured to access data from other applications within the same web suite, which would be related to application 118 A.
- any application that may exchange data with application 118 A may be considered a related application.
- any application developed by a same company as application 118 A may be considered a related application.
- any application that may interact with same contents of a data storage device as application 118 A may be considered a related application.
- Application 118 B may forward the list of retrieved objects to UI module 120 , which may generate a content page for application 118 B that includes one or more graphical indications of at least one object from at least one of the respective sets of objects ( 430 ).
- the content page may include a portion of or the entirety of the set of objects retrieved by application 118 B.
- UI module 120 may then output, for display at UID 112 , graphical user interface 102 B that includes at least a portion of the content page for application 118 B while at least a portion of graphical user interface 102 A is displayed ( 440 ).
- computing device 110 may provide a way for a user to quickly obtain documents, files, or any other stored data object determined to be relevant to the task being performed by application 118 A on computing device 110 without requiring the user to switch between several different applications, manually navigate to relevant content pages within the respective applications, or discern what input is necessary to move the objects between the two different applications. For instance, in the example of FIG. 1 , the user may drag document 106 A, the likely document requested by the user's boss, into the reply field of application 118 A's graphical user interface to attach the requested document to a reply email. In this way, techniques of this disclosure may reduce the amount of time and the number of user inputs required to retrieve relevant objects in other applications, which may simplify the user experience and may reduce power consumption of computing device 110 .
- a method comprising: receiving, by a first application executing at a computing device, information associated with a content page for a second application executing at the computing device, wherein at least a first portion of the content page for the second application is included in a graphical user interface of the computing device; determining, by the first application and based on the information associated with the content page for the second application, a context of the second application; determining, by the first application and based at least in part on the context of the second application, a respective set of objects for each application from one or more applications related to the second application; generating, by the first application and based at least in part on the respective sets of objects, a content page for the first application including one or more graphical indications of at least one object from at least one of the respective sets of objects; and while at least a second portion of the content page for the second application is included in the graphical user interface, outputting, by the first application, for display, at least a portion of the content page for the first application within the graphical user interface of the
- determining the context of the second application comprises: identifying, by the first application, one or more content objects in the content page for the second application; extracting, by the first application, at least one respective property of each of the one or more content objects; and determining, by the first application and based at least in part on one or more properties of the at least one respective property of each of the one or more content objects, the context of the second application.
- Clause 3 The method of clause 2, wherein the one or more content objects include one or more of text, images, metadata, an application state, application code, field identifiers, file names, or file types.
- determining the respective set of objects for each application from the one or more applications related to the second application comprises: constructing, by the first application and based on the context, a respective search query for each of the one or more applications related to the second application; and executing, by the first application, each respective search query from the respective search queries to retrieve the respective set of objects from data of a corresponding application from the one or more applications related to the second application.
- Clause 5 The method of any one of clauses 1-4, wherein the one or more applications related to the second application comprises at least two applications related to the second application, and wherein generating the content page for the first application comprises generating, by the first application and based at least in part on the respective sets of objects for the at least two applications related to the second application, the content page for the first application including at least one graphical indication of at least one object from the respective sets of objects for each application from the at least two applications related to the second application.
- Clause 6 The method of any one of clauses 1-5, further comprising: receiving, by the first application, an indication of user input selecting a first graphical indication of a first object from the one or more graphical indications of the at least one object included in the content page for the first application; and sending, by the first application, instructions to the second application to perform a function utilizing the first object.
- Clause 7 The method of any one of clauses 1-6, further comprising: receiving, by the first application, an indication of a selection of one or more graphical indications representing one or more content objects included in the content page of the second application; determining, by the first application and based on the one or more content objects, an updated context of the second application; determining, by the first application and based at least in part on the updated context of the second application, a respective updated set of objects for each application from the one or more applications related to the second application; generating, by the first application and based at least in part on the respective updated sets of objects, an updated content page for the second application including one or more graphical indications of at least one object from at least one of the respective updated sets of objects; and while at least a third portion of the content page for the second application is included in the graphical user interface, outputting, by the first application, for display, a portion of the updated content page for the first application within the graphical user interface of the computing device.
- Clause 8 The method of any one of clauses 1-7, wherein outputting the portion of the content page for the first application comprises: while at least the second portion of the content page for the second application is included in the graphical user interface, replacing, by the first application, a portion of the graphical user interface with the portion of the content page for the first application.
- Clause 9 The method of any one of clauses 1-8, wherein the portion of the content page for the first application that is output for display includes one or more graphical indications of at least one object from a first set of objects for an application from the one or more applications related to the second application, the method further comprising: receiving, by the first application, an indication of user input selecting a different application from the one or more applications related to the second application; generating, by the first application, based at least in part on the respective sets of objects, an updated content page for the first application including one or more graphical indications of at least one object from a second set of objects for the different application from the one or more applications related to the second application; and while at least the second portion of the content page for the second application is included in the graphical user interface, outputting, by the first application, for display, a portion of the updated content page for the first application within the graphical user interface of the computing device.
- Clause 10 The method of any one of clauses 1-9, further comprising: prior to determining the context, receiving, by the computing device, an indication of user input to begin executing the first application; and responsive to receiving the indication of user input, determining, by the first application, the context.
- a computing device comprising: at least one processor; and a memory that stores instructions associated with a first application that, when executed, cause the at least one processor to: receive information associated with a content page for a second application executing at the computing device, wherein at least a first portion of the content page for the second application is included in a graphical user interface of the computing device; determine, based on the information associated with the content page for the second application, a context of the second application; determine, based at least in part on the context of the second application, a respective set of objects for each application from one or more applications related to the second application; generate, based at least in part on the respective sets of objects, a content page for the first application including one or more graphical indications of at least one object from at least one of the respective sets of objects; and while at least a second portion of the content page for the second application is included in the graphical user interface, output, for display, at least a portion of the content page for the first application within the graphical user interface of the computing device.
- Clause 13 The computing device of any one of clauses 14-15, wherein the instructions that cause the at least one processor to determine the respective set of objects for each application from the one or more applications related to the second application comprise instructions associated with the first application that, when executed, cause the at least one processor to: construct, based on the context, a respective search query for each of the one or more applications related to the second application; execute each respective search query from the respective search queries to retrieve the respective set of objects from data of a corresponding application from the one or more applications related to the second application.
- Clause 14 The computing device of any one of clauses 14-16, wherein the one or more applications related to the second application comprises at least two applications related to the second application, and wherein the instructions that cause the at least one processor to generate the content page for the first application comprise instructions associated with the first application that, when executed, cause the at least one processor to generate, based at least in part on the respective sets of objects for the at least two applications related to the second application, the content page for the first application including at least one graphical indication of at least one object from the respective sets of objects for each application from the at least two applications related to the second application.
- Clause 15 The computing device of any one of clauses 14-17, wherein the instructions associated with the first application, when executed, further cause the at least one processor to: receive an indication of user input selecting a first graphical indication of a first object from the one or more graphical indications of the at least one object included in the content page for the first application; and send instructions to the second application to perform a function utilizing the first object.
- a non-transitory computer-readable storage medium storing instructions associated with a first application that, when executed, cause at least one processor of a computing device to: receive information associated with a content page for a second application executing at the computing device, wherein at least a first portion of the content page for the second application is included in a graphical user interface of the computing device; determine, based on the information associated with the content page for the second application, a context of the second application; determine, based at least in part on the context of the second application, a respective set of objects for each application from one or more applications related to the second application; generate, based at least in part on the respective sets of objects, a content page for the first application including one or more graphical indications of at least one object from at least one of the respective sets of objects; and while at least a second portion of the content page for the second application is included in the graphical user interface, output, for display, at least a portion of the content page for the first application within the graphical user interface of the computing device.
- Clause 17 The non-transitory computer-readable storage medium of clause 16, wherein the instructions that cause the at least one processor to determine the context of the second application comprise instructions associated with the first application that, when executed, cause the at least one processor to: identify one or more content objects in the content page for the second application, wherein the one or more content objects include one or more of text, images, metadata, an application state, application code, field identifiers, file names, or file types; extract at least one respective property of each of the one or more content objects; and determine, based at least in part on one or more properties of the at least one respective property of each of the one or more content objects, the context of the second application.
- Clause 18 The non-transitory computer-readable storage medium of any one of clauses 16-17, wherein the instructions that cause the at least one processor to determine the respective set of objects for each application from the one or more applications related to the second application comprise instructions associated with the first application that, when executed, cause the at least one processor to: construct, based on the context, a respective search query for each of the one or more applications related to the second application; execute each respective search query from the respective search queries to retrieve the respective set of objects from data of a corresponding application from the one or more applications related to the second application.
- Clause 19 The non-transitory computer-readable storage medium of any one of clauses 16-18, wherein the one or more applications related to the second application comprises at least two applications related to the second application, and wherein the instructions that cause the at least one processor to generate the content page for the first application comprise instructions associated with the first application that, when executed, cause the at least one processor to generate, based at least in part on the respective sets of objects for the at least two applications related to the second application, the content page for the first application including at least one graphical indication of at least one object from the respective sets of objects for each application from the at least two applications related to the second application.
- Clause 20 The non-transitory computer-readable storage medium of any one of clauses 16-19, wherein the instructions associated with the first application, when executed, further cause the at least one processor to: receive an indication of user input selecting a first graphical indication of a first object from the one or more graphical indications of the at least one object included in the content page for the first application; and send instructions to the second application to perform a function utilizing the first object.
- Clause 21 A computing device configured to perform any of the methods of clauses 1-12.
- Clause 22 A computing device comprising means for performing any of the methods of clauses 1-12.
- Clause 23 A computer-readable storage medium encoded with instructions for causing one or more programmable processors to perform any of the methods or clauses 1-12.
- Computer-readable media may include computer-readable storage media, which corresponds to a tangible medium such as data storage media, or communication media including any medium that facilitates transfer of a computer program from one place to another, e.g., according to a communication protocol.
- computer-readable media generally may correspond to (1) tangible computer-readable storage media, which is non-transitory or (2) a communication medium such as a signal or carrier wave.
- Data storage media may be any available media that can be accessed by one or more computers or one or more processors to retrieve instructions, code and/or data structures for implementation of the techniques described in this disclosure.
- a computer program product may include a computer-readable medium.
- such computer-readable storage media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage, or other magnetic storage devices, flash memory, or any other medium that can be used to store desired program code in the form of instructions or data structures and that can be accessed by a computer.
- any connection is properly termed a computer-readable medium.
- a computer-readable medium For example, if instructions are transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium.
- DSL digital subscriber line
- Disk and disc includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and Blu-ray disc, where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.
- processors such as one or more digital signal processors (DSPs), general purpose microprocessors, application specific integrated circuits (ASICs), field programmable logic arrays (FPGAs), or other equivalent integrated or discrete logic circuitry.
- DSPs digital signal processors
- ASICs application specific integrated circuits
- FPGAs field programmable logic arrays
- processors may refer to any of the foregoing structure or any other structure suitable for implementation of the techniques described herein.
- the functionality described herein may be provided within dedicated hardware and/or software modules. Also, the techniques could be fully implemented in one or more circuits or logic elements.
- the techniques of this disclosure may be implemented in a wide variety of devices or apparatuses, including a wireless handset, an integrated circuit (IC) or a set of ICs (e.g., a chip set).
- IC integrated circuit
- a set of ICs e.g., a chip set.
- Various components, modules, or units are described in this disclosure to emphasize functional aspects of devices configured to perform the disclosed techniques, but do not necessarily require realization by different hardware units. Rather, as described above, various units may be combined in a hardware unit or provided by a collection of interoperative hardware units, including one or more processors as described above, in conjunction with suitable software and/or firmware.
Abstract
Description
Claims (20)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/595,532 US10558950B2 (en) | 2017-05-15 | 2017-05-15 | Automatic context passing between applications |
EP18708263.1A EP3610376B1 (en) | 2017-05-15 | 2018-02-13 | Automatic context passing between applications |
PCT/US2018/018025 WO2018212814A1 (en) | 2017-05-15 | 2018-02-13 | Automatic context passing between applications |
CN201880040026.5A CN110753911B (en) | 2017-05-15 | 2018-02-13 | Automatic context transfer between applications |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/595,532 US10558950B2 (en) | 2017-05-15 | 2017-05-15 | Automatic context passing between applications |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180330329A1 US20180330329A1 (en) | 2018-11-15 |
US10558950B2 true US10558950B2 (en) | 2020-02-11 |
Family
ID=61527521
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/595,532 Active 2037-08-07 US10558950B2 (en) | 2017-05-15 | 2017-05-15 | Automatic context passing between applications |
Country Status (4)
Country | Link |
---|---|
US (1) | US10558950B2 (en) |
EP (1) | EP3610376B1 (en) |
CN (1) | CN110753911B (en) |
WO (1) | WO2018212814A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10977094B2 (en) | 2017-09-26 | 2021-04-13 | Google Llc | Format-specific data object passing between applications |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10901760B2 (en) * | 2018-03-05 | 2021-01-26 | Microsoft Technology Licensing, Llc | View augmentation in multiscreen environment |
US11106934B2 (en) * | 2019-02-11 | 2021-08-31 | Innovaccer Inc. | Automatic visual display overlays of contextually related data from multiple applications |
CN111128153B (en) * | 2019-12-03 | 2020-10-02 | 北京蓦然认知科技有限公司 | Voice interaction method and device |
Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040172584A1 (en) | 2003-02-28 | 2004-09-02 | Microsoft Corporation | Method and system for enhancing paste functionality of a computer software application |
US20050066335A1 (en) | 2003-09-23 | 2005-03-24 | Robert Aarts | System and method for exposing local clipboard functionality towards external applications |
US20060150088A1 (en) | 2004-12-30 | 2006-07-06 | Microsoft Corporation | System and method for dynamically creating a destination template |
US20090006448A1 (en) | 2007-06-28 | 2009-01-01 | Microsoft Corporation | Automated model generator |
US20100185696A1 (en) | 2009-01-22 | 2010-07-22 | International Business Machines Corporation | Data tranformations for applications supporting different data formats |
US7913191B2 (en) | 2006-03-17 | 2011-03-22 | International Business Machines Corporation | Common input/output interface for application programs |
US20120030275A1 (en) * | 2010-07-29 | 2012-02-02 | Sap Ag | Providing status information for components in a distributed landscape |
US8423405B1 (en) * | 2010-11-01 | 2013-04-16 | Google Inc. | Advertisement selection |
US20130159984A1 (en) | 2011-12-14 | 2013-06-20 | Sap Ag | Release independent deployment of user productivity services |
US8584149B2 (en) | 2007-07-16 | 2013-11-12 | Apteryx, Inc. | Methods of populating a third-party document with digital information content |
US20130339980A1 (en) | 2012-06-14 | 2013-12-19 | Clicksoftware Technologies Ltd | Composite application enabling workflow between unmodified constituent applications |
US8656265B1 (en) * | 2012-09-11 | 2014-02-18 | Google Inc. | Low-latency transition into embedded web view |
US20140136528A1 (en) | 2012-11-12 | 2014-05-15 | Google Inc. | Providing Content Recommendation to Users on a Site |
US20140380142A1 (en) | 2013-06-20 | 2014-12-25 | Microsoft Corporation | Capturing website content through capture services |
US20150012830A1 (en) | 2013-07-03 | 2015-01-08 | Samsung Electronics Co., Ltd. | Method and apparatus for interworking applications in user device |
US20160142358A1 (en) * | 2012-12-21 | 2016-05-19 | Google Inc. | Recipient location aware notifications in response to related posts |
US20160371249A1 (en) | 2015-06-22 | 2016-12-22 | Microsoft Technology Licensing, Llc | Deconstructing documents into component blocks for reuse in productivity applications |
US20170147568A1 (en) | 2015-11-24 | 2017-05-25 | International Business Machines Corporation | File generator |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9002821B2 (en) * | 2013-01-16 | 2015-04-07 | Google Inc. | Indexing application pages of native applications |
-
2017
- 2017-05-15 US US15/595,532 patent/US10558950B2/en active Active
-
2018
- 2018-02-13 WO PCT/US2018/018025 patent/WO2018212814A1/en unknown
- 2018-02-13 EP EP18708263.1A patent/EP3610376B1/en active Active
- 2018-02-13 CN CN201880040026.5A patent/CN110753911B/en active Active
Patent Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040172584A1 (en) | 2003-02-28 | 2004-09-02 | Microsoft Corporation | Method and system for enhancing paste functionality of a computer software application |
US20050066335A1 (en) | 2003-09-23 | 2005-03-24 | Robert Aarts | System and method for exposing local clipboard functionality towards external applications |
US20060150088A1 (en) | 2004-12-30 | 2006-07-06 | Microsoft Corporation | System and method for dynamically creating a destination template |
US7913191B2 (en) | 2006-03-17 | 2011-03-22 | International Business Machines Corporation | Common input/output interface for application programs |
US20090006448A1 (en) | 2007-06-28 | 2009-01-01 | Microsoft Corporation | Automated model generator |
US8584149B2 (en) | 2007-07-16 | 2013-11-12 | Apteryx, Inc. | Methods of populating a third-party document with digital information content |
US20100185696A1 (en) | 2009-01-22 | 2010-07-22 | International Business Machines Corporation | Data tranformations for applications supporting different data formats |
US20120030275A1 (en) * | 2010-07-29 | 2012-02-02 | Sap Ag | Providing status information for components in a distributed landscape |
US8423405B1 (en) * | 2010-11-01 | 2013-04-16 | Google Inc. | Advertisement selection |
US20130159984A1 (en) | 2011-12-14 | 2013-06-20 | Sap Ag | Release independent deployment of user productivity services |
US20130339980A1 (en) | 2012-06-14 | 2013-12-19 | Clicksoftware Technologies Ltd | Composite application enabling workflow between unmodified constituent applications |
US8656265B1 (en) * | 2012-09-11 | 2014-02-18 | Google Inc. | Low-latency transition into embedded web view |
US20140136528A1 (en) | 2012-11-12 | 2014-05-15 | Google Inc. | Providing Content Recommendation to Users on a Site |
US20160142358A1 (en) * | 2012-12-21 | 2016-05-19 | Google Inc. | Recipient location aware notifications in response to related posts |
US20140380142A1 (en) | 2013-06-20 | 2014-12-25 | Microsoft Corporation | Capturing website content through capture services |
US20150012830A1 (en) | 2013-07-03 | 2015-01-08 | Samsung Electronics Co., Ltd. | Method and apparatus for interworking applications in user device |
US20160371249A1 (en) | 2015-06-22 | 2016-12-22 | Microsoft Technology Licensing, Llc | Deconstructing documents into component blocks for reuse in productivity applications |
US20170147568A1 (en) | 2015-11-24 | 2017-05-25 | International Business Machines Corporation | File generator |
Non-Patent Citations (7)
Title |
---|
International Preliminary Report on Patentability from International Application No. PCT/US2018/018025, dated Nov. 28, 2019, 9 pp. |
International Search Report and Written Opinion of International Application No. PCT/US2018/018025, dated Apr. 20, 2018, 14 pp. |
Paulheim, "Efficient Semantic Event Processing: Lessons Learned in User Interface Intergration," 2010, 15 pp. (Applicant points out, in accordance with MPEP 609.04(a), that the year of publication, 2010, is sufficiently earlier than the effective U.S. filing date, May 15, 2017, so that the particular month of publication is not in issue.). |
Samsung, "Galaxy Note 4: Using Multi Window and Pop up Window," retrieved from http://www.samsung.com/sa_en/support/skp/faq/1063776, Apr. 30, 2016, 9 pp. |
U.S. Appl. No. 15/851,090, filed Dec. 21, 2017, naming inventors Anima et al. |
U.S. Appl. No. 62/563,609, filed Sep. 26, 2017, naming inventors Anima et al. |
Westenberg, "Drag and Drop Text Between Apps in Multi-window Mode [Diving into Android N]," retrieved from http://www.androidauthority.com/drag-and-drop-text-multi-window-android-n-679164/, Mar. 10, 2016, 3 pp. |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10977094B2 (en) | 2017-09-26 | 2021-04-13 | Google Llc | Format-specific data object passing between applications |
US11307908B2 (en) | 2017-09-26 | 2022-04-19 | Google Llc | Format-specific data object passing between applications |
Also Published As
Publication number | Publication date |
---|---|
EP3610376A1 (en) | 2020-02-19 |
US20180330329A1 (en) | 2018-11-15 |
CN110753911B (en) | 2023-09-08 |
WO2018212814A1 (en) | 2018-11-22 |
EP3610376B1 (en) | 2023-10-04 |
CN110753911A (en) | 2020-02-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11307908B2 (en) | Format-specific data object passing between applications | |
US10620920B2 (en) | Automatic graphical user interface generation from notification data | |
CN108139862B (en) | Multi-window keyboard | |
US10241648B2 (en) | Context-aware field value suggestions | |
US20180096072A1 (en) | Personalization of a virtual assistant | |
US20180139291A1 (en) | Determing data associated with proximate computing devices | |
EP3610376B1 (en) | Automatic context passing between applications | |
US11321333B2 (en) | Auto-enrichment of content | |
US20180061393A1 (en) | Systems and methods for artifical intelligence voice evolution | |
US11244106B2 (en) | Task templates and social task discovery | |
JP2018514822A (en) | Visibility detection of digital content | |
CN108027825B (en) | Exposing external content in an enterprise | |
US20120209925A1 (en) | Intelligent data management methods and systems, and computer program products thereof | |
EP3563311A1 (en) | Systems and methods for contextual memory capture and recall | |
US10733169B2 (en) | Interactive user interface for refreshable objects in shared documents |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ANIMA, MARIO;KHOSROWSHAHI, FARZAD;CUEVAS, GENEVIEVE;AND OTHERS;SIGNING DATES FROM 20170509 TO 20170515;REEL/FRAME:042383/0936 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
US6601098B1 - Technique for measuring round-trip latency to computing devices requiring no client-side proxy presence - Google Patents
Technique for measuring round-trip latency to computing devices requiring no client-side proxy presence Download PDFInfo
- Publication number
- US6601098B1 US6601098B1 US09/326,307 US32630799A US6601098B1 US 6601098 B1 US6601098 B1 US 6601098B1 US 32630799 A US32630799 A US 32630799A US 6601098 B1 US6601098 B1 US 6601098B1
- Authority
- US
- United States
- Prior art keywords
- client
- server
- url
- round
- trip latency
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/50—Testing arrangements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/08—Monitoring or testing based on specific metrics, e.g. QoS, energy consumption or environmental parameters
- H04L43/0852—Delays
- H04L43/0864—Round trip delays
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/30—Managing network names, e.g. use of aliases or nicknames
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/322—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions
- H04L69/329—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions in the application layer [OSI layer 7]
Definitions
- the present invention relates to a computer system, and deals more particularly with a method, system, and computer-readable code for measuring round-trip latency to computing devices without requiring a client-side proxy presence.
- the network may be a private network, such as a corporate intranet of networked computers that is accessible only to computer users within that corporation, or it may a public network, such as the Internet or World-Wide Web.
- the Internet is a vast collection of computing resources, interconnected as a network, from sites around the world.
- the World-Wide Web (referred to herein as the “Web”) is that portion of the Internet which uses the HyperText Transfer Protocol (“HTTP”) as a protocol for exchanging messages. (Alternatively, other protocols such as the “HTTPS” protocol can be used, where this protocol is a security-enhanced version of HTTP.)
- HTTP HyperText Transfer Protocol
- HTTPS HyperText Transfer Protocol
- the user working in a networked environment will have software running on his workstation to allow him to create and send requests for information to a server and to see the results.
- these functions are typically combined in software that is referred to as a “Web browser,” or “browser.”
- the request message is sent out into the Internet for processing.
- the target of the request message is one of the interconnected servers in the Internet network. That server will receive the message, attempt to find the data satisfying the user's request, format that data for display with the user's browser, and return the formatted response to the browser software running on the user's workstation.
- the response is typically in the form of a displayable file, referred to as a “Web page”, that may contain text, graphics, images, sound, video, etc.
- the client may connect his computer to a server using a “wireline” connection or a “wireless” connection.
- Wireline connections are those that use physical media such as cables and telephone lines.
- Wireless connections use media such as satellite links, radio frequency waves, and infrared waves.
- the user's computer may be any type of computer processor, including laptop, hand held or mobile computers; vehicle-mounted devices; cellular telephones and desktop screen phones; desktop computers; mainframe computers; etc., having processing and communication capabilities.
- the remote server can be one of any number of different types of computer which have processing and communication capabilities.
- the computer capabilities vary widely from high speed, multi-processors with extensive real and virtual memory, to small, single processors that process a single task with a limited function operating system and limited memory. These techniques are well known in the art, and the hardware devices and software which enable their use are readily available.
- the user's computer will be referred to as a “workstation,” and use of the terms “workstation” or “server” refers to any of the types of computing devices described above.
- a Web page may include one or more graphic images, each of which may consist of several hundred thousand bytes of data. Users may request many such files over the course of a day's work, or in their personal network communications.
- Wireless connections also tend to have high network latencies, due to the limited bandwidth available and the extra network hops (e.g. gateways) that are involved with wireless transmission. As a result, a user may have to wait a relatively long time to receive a response to a request he has sent into the network.
- the capabilities of the client's computer may limit the amount of data that can be received.
- round trip time is the amount of time a message spends in the network and is a valuable measurement that can be used in a number of ways.
- Round trip time also includes processing time at the server and any intermediate gateways. This processing time is not pertinent to the present invention.
- round trip time and “network latency” will be used interchangeably.
- the measured latency of a network can be analyzed to determine where bottlenecks occur.
- Another value of measuring network latency is to use the latency information to dynamically determine the content of the information to be sent in response to a client request. For example, if a server receives a request for a Web page from a client over a network with very high latencies, it would be advantageous for the server to reduce or filter the amount of information sent in response to the client's request.
- An example of the type of content reduction that could be used in this situation is applying a transcoding filter to transform color images into gray scale images, thereby drastically reducing the size of the response file and accordingly, the time it will take for this file to be transmitted to the client.
- Network latency information could also be combined with client-specific information, such as whether the client is connected over a relatively expensive wireless connection or a wireline connection, in making content-reduction choices.
- This type of performance measurement in a network typically involves providing software that resides on the client machine.
- This software acts as a proxy or “agent” for the client and participates in capturing performance data for the network connection.
- This client-side software would typically have a counterpart on the server side of the communications (i.e. a “server-side proxy”) that also participates in capturing performance information.
- This type of performance measuring technique therefore involves distributing the client and server measurement software to all clients and servers that are to be measured.
- this approach has a number of drawbacks.
- First, not all computers communicating on a network are capable of running the client-side software because of limitations such as operating system constraints (e.g.
- An object of the present invention is to provide a technique to measure network latency between a client and a server.
- Another object of the present invention is to provide a technique to measure the network latency between a client and a server without requiring any client-side software.
- the present invention provides a system, method, and program product for use in a computing environment having a connection to a network, for enabling collection of round-trip network latency measurements without requiring additional software on the client.
- this technique comprises: receiving a first client request for a first predetermined Uniform Resource Locator (URL); storing a first time at which the first client request was received; responding to the first client request with a redirection response, wherein the redirection response specifies a second predetermined URL; receiving a second client request for the second predetermined URL, wherein the second client request is received at a second time; computing a difference between the second time and the first time, wherein the difference represents a round trip latency between the client and the server; and sending, responsive to receiving the second client request, information associated with the first predetermined URL.
- URL Uniform Resource Locator
- the redirection response uses a page temporarily moved status code or a page permanently moved status code.
- the first predetermined URL may be a configurable parameter.
- the first predetermined URL may be determined using a counter of requests received.
- the server may be a server-side proxy server.
- the technique further comprises: forwarding the first client request to the server; and receiving, at the proxy server, a response to the forwarded request, wherein the response comprises the information associated with the first predetermined URL.
- this technique comprises: receiving a first client request for a first predetermined Uniform Resource Locator (URL); storing a first time at which the first client request was received; responding to the first client request with a redirection response, wherein the redirection response specifies a second predetermined URL; receiving a second client request for the second predetermined URL, wherein the second client request is received at a second time; storing the second time for subsequent computation of a round trip latency between the client and the server, wherein the round trip latency is a difference between the second time and the first time; and sending, responsive to receiving the second client request, information associated with the first predetermined URL.
- URL Uniform Resource Locator
- FIG. 1 is a block diagram of a computer workstation environment in which the present invention may be practiced
- FIG. 2 is a diagram of a networked computing environment in which the present invention may be practiced
- FIG. 3 A and FIG. 3B illustrate the message flows between a client and a server according to the prior art and when using the preferred embodiment of the present invention, respectively;
- FIG. 4 provides a flowchart depicting the preferred embodiment of the logic used on the network server to implement the present invention.
- FIG. 1 illustrates a representative workstation hardware environment in which the present invention may be practiced.
- the environment of FIG. 1 comprises a representative single user computer workstation 10 , such as a personal computer, including related peripheral devices.
- the workstation 10 includes a microprocessor 12 and a bus 14 employed to connect and enable communication between the microprocessor 12 and the components of the workstation 10 in accordance with known techniques.
- the workstation 10 typically includes a user interface adapter 16 , which connects the microprocessor 12 via the bus 14 to one or more interface devices, such as a keyboard 18 , mouse 20 , and/or other interface devices 22 , which can be any user interface device, such as a touch sensitive screen, digitized entry pad, etc.
- the bus 14 also connects a display device 24 , such as an LCD screen or monitor, to the microprocessor 12 via a display adapter 26 .
- the bus 14 also connects the microprocessor 12 to memory 28 and long-term storage 30 which can include a hard drive, diskette drive, tape drive, etc.
- the workstation 10 may communicate with other computers or networks of computers, for example via a communications channel or modem 32 .
- the workstation 10 may communicate using a wireless interface at 32 , such as a CDPD (cellular digital packet data) card.
- CDPD cellular digital packet data
- the workstation 10 may be associated with such other computers in a LAN or a wide area network (WAN), or the workstation 10 can be a client in a client/server arrangement with another computer, etc. All of these configurations, as well as the appropriate communications hardware and software, are known in the art.
- FIG. 2 illustrates a data processing network 40 in which the present invention may be practiced.
- the data processing network 40 may include a plurality of individual networks, such as wireless network 42 and (wired) network 44 , each of which may include a plurality of individual workstations 10 .
- wireless network 42 and (wired) network 44 may include a plurality of individual workstations 10 .
- wireless network 44 may include a plurality of individual workstations 10 .
- one or more LANs may be included (not shown), where a LAN may comprise a plurality of intelligent workstations coupled to a host processor.
- the networks 42 and 44 may also include mainframe computers or servers, such as a gateway computer 46 or application server 47 (which may access a data repository 48 ).
- a gateway computer 46 serves as a point of entry into each network 44 .
- the gateway 46 may be preferably coupled to another network 42 by means of a communications link 50 a .
- the gateway 46 may also be directly coupled to one or more workstations 10 using a communications link 50 b , 50 c .
- the gateway computer 46 may be implemented utilizing an Enterprise Systems Architecture/370 available from the International Business Machines Corporation (“IBM”), or an Enterprise Systems Architecture/390 computer, etc.
- a midrange computer such as an Application System/400 (also known as an AS/400) may be employed.
- Application System/400 also known as an AS/400
- the gateway computer 46 may also be coupled 49 to a storage device (such as data repository 48 ). Further, the gateway 46 may be directly or indirectly coupled to one or more workstations 10 .
- the gateway computer 46 may be located a great geographic distance from the network 42 , and similarly, the workstations 10 may be located a substantial distance from the networks 42 and 44 .
- the network 42 may be located in California, while the gateway 46 may be located in Texas, and one or more of the workstations 10 may be located in New York.
- the workstations 10 may connect to the wireless network 42 using the Transmission Control Protocol/Internet Protocol (“TCP/IP”) over a number of alternative connection media, such as cellular phone, radio frequency networks, satellite networks, etc.
- TCP/IP Transmission Control Protocol/Internet Protocol
- the wireless network 42 preferably connects to the gateway 46 using a network connection 50 a such as TCP or UDP (User Datagram Protocol) over IP, ⁇ 0.25, Frame Relay, ISDN (Integrated Services Digital Network), PSTN (Public Switched Telephone Network), etc.
- the workstations 10 may alternatively connect directly to the gateway 46 using dial connections 50 b or 50 c .
- the wireless network 42 and network 44 may connect to one or more other networks (not shown), in an analogous manner to that depicted in FIG. 2 .
- Software programming code which embodies the present invention is typically accessed by the microprocessor 12 of the server 47 from long-term storage media 30 of some type, such as a CD-ROM drive or hard drive.
- the software programming code may be embodied on any of a variety of known media for use with a data processing system, such as a diskette, hard drive, or CD-ROM.
- the code may be distributed on such media, or may be distributed to users from the memory or storage of one computer system over a network of some type to other computer systems for use by users of such other systems.
- the programming code may be embodied in the memory 28 , and accessed by the microprocessor 12 using the bus 14 .
- the techniques and methods for embodying software programming code in memory, on physical media, and/or distributing software code via networks are well known and will not be further discussed herein.
- the present invention is implemented as one or more modules (also referred to as code subroutines, or “objects” in object-oriented programming) of a computer software program that resides on a network server.
- this server is a Web-based server that is communicating with one or more clients using the HTTP protocol.
- This software will be used where (1) a user interacts with a browser and requests one or more Web pages for accessing by that browser, and (2) software application(s) running on a server respond to the user's request for Web pages, and return data to the user's browser in response.
- this software will be used in an Internet environment, where the server is a Web server and the request is formatted using HTTP.
- the server may be in a corporate intranet, an extranet, or in any other network environment.
- FIG. 3A illustrates an example of the existing message flows between a client 300 and a server 305 communicating over a network 302 using the HTTP 1.1 protocol.
- the client 300 is preferably running one of the commonly available Web browsers such as Netscape Navigator® or Internet Explorer
- the server 305 is a Web server providing Internet services to the client.
- the client machine issues an HTTP GET request 310 which specifies a URL of a requested Web page.
- the message flow 310 indicates that the URL is “xyz”.
- the server receives this request, and responds to the client at 315 with the data associated with the URL xyz. This is a typical client/server interaction, using message flows which are well known in the art.
- FIG. 3B illustrates the effect on the same client/server interaction when the preferred embodiment of the present invention has been implemented on the server 305 ’.
- the client 300 and server 305 ' use the HTTP 1.1 protocol as in FIG. 3 A.
- the client issues an HTTP GET request 310 which contains the URL “xyz”.
- the server receives this request as in FIG. 3 A. Detecting the special URL, the present invention responds to the client at 320 using a redirect response (shown in FIG. 3B as status code “ 302 ”,for “page temporarily moved”, according to the preferred embodiment).
- the server also includes a different special URL, which is a redirection URL and is shown in this example as “abc” for purposes of illustration.
- the client receives the response 320 .
- the redirect status code of 302 causes the browser to resend the HTTP GET request at 325 with the redirected URL of “abc”.
- the server receives the GET request 325 for URL abc, and then sends 315 the data associated with the originally-requested URL xyz (requested in message 310 ).
- FIG. 4 illustrates the logic used to implement the preferred embodiment of the present invention.
- This implementation preferably executes on the server machine participating in a client-server communication.
- this logic may execute on a server-side proxy or an intermediate proxy.
- no code beyond an HTTP-compliant Web browser or a browser which provides functionality similar to HTTP is required on the client workstation in order for the present invention to operate.
- a client in the network Prior to operation of the logic of FIG. 4, a client in the network has sent a request for a particular URL, expecting a response from the server as has been described with reference to element 310 of FIG. 3 B.
- the URL in this request can be specified in a variety of ways, including direct input from the user of the client machine, user selection from a list of URLs, automated generation by an application running on the client machine, etc.
- the processing of FIG. 4 begins at Block 400 , where the server receives a request for a URL from the client.
- this request is an HTTP GET and includes the client's IP (Internet Protocol) address, a target URL the client computer has requested, as well as other information which is not relevant to operation of the present invention.
- the server in Block 405 checks the request to determine if the HTTP GET request is for a “first request” URL.
- the “first request” URL is a predetermined URL that the server identifies to invoke the present invention. This URL may be a configurable parameter of the present invention, or it may be selected during implementation and coded directly into the software of the present invention.
- Block 405 processing continues to Block 410 where the network address or IP address of the requesting client from the request received at Block 400 is used as a key or index to create an entry in a hash table (or other equivalent storage mechanism) where a timestamp (T 1 ) of the current time is saved.
- the client is then sent a response comprised of a “page temporarily moved” response (status code 302 ) and an embedded “next request” URL.
- the “page temporarily moved” process responds to the client with a new location (referred to herein as the “next request, or “relocated”, URL) of the originally-requested page to allow the client to re-issue the request (i.e. using a subsequent HTTP GET request) with this new location.
- This process is referred to as a “redirect”, or “redirection”, and is well known in the art.
- the “next request” URL is also a predefined URL that the server can recognize, upon receipt, to invoke further processing of the present invention.
- the browser on the client machine will generate the new request without requiring any participation or awareness of the user, as required by the HTTP 1.1 specification for processing a response with the status code 302 .
- the reissued HTTP GET request using the next request URL is received at Block 400 , during a subsequent iteration of the logic of FIG. 4 .
- the check for the first request URL will fail.
- Processing then proceeds to Block 420 where the received URL is checked for the next request or relocated URL. If, at Block 420 , the relocated URL is detected, the present invention then gets a new, current timestamp (T 2 ) at Block 430 .
- the client's IP address from the current HTTP GET request is used in Block 435 as the key to the hash table to retrieve the time stamp (T 1 ) of the client's first request URL (which was previously stored at Block 410 on a prior iteration of this logic).
- the network latency, or round-trip time between the client and server is calculated by subtracting the timestamp (T 1 ), when the first request was received, from the time stamp (T 2 ), when the subsequent response was received.
- the result is preferably stored (Block 445 ) for use by a subsequent process or application that may benefit from use of network latency information. (Alternatively, the result may be used by a currently-executing application.)
- the server processing then concludes by sending the actual page requested by the client at Block 450 .
- Block 400 If the current client request (received at Block 400 ) is not the first request URL (i.e. Block 405 has a negative result) and is not the relocated URL (i.e. Block 420 has a negative result), then the logic for the present invention is not invoked. Processing continues to Block 460 where the server responds to the requesting client by sending the data (i.e. page) associated with the URL in the current client request, as in the current art.
- the human user may be directly involved in using the present invention.
- the first request URL is entered into the client's computer by the user as a way for the user to cause current latency information to be captured for further analysis.
- this first request URL may be tied to a “problem reporting” URL on the server, where that problem reporting; URL is widely known throughout an enterprise or organization for reporting network performance problems (such as the URL of a Help Desk application).
- the latency information is captured using the present invention as a part of the problem reporting process. This may occur with or without the user's awareness.
- the timestamp T 2 may be stored in the hash table entry corresponding to the client IP address during the processing of Block 440 , instead of immediately using the T 2 value to compute the round trip delay.
- the table of stored values may be used to compute the delay by a separately-executing process. This process may execute concurrently with the code of the present invention, or may be invoked at a later time.
- the first request URL is not predetermined as a specific URL.
- the server may periodically trigger invocation of the logic of FIG. 4, for example to sample network latency at different times of the day or to refresh the stored latency values.
- the test in Block 405 is replaced by checking to determine whether it is time to take a sample.
- a counting technique may be used for this sampling process, whereby every Nth request (where N may be a configuration parameter) received at Block 400 invokes the present invention (by transferring control to Block 410 ).
- a specific time of day (perhaps coinciding with expected peak network traffic) may be checked for in Block 405 , whereby a positive result to this test also invokes the present invention.
- Block 405 may check for the first request (or perhaps the Nth request) from a specific client IP address, and invoke the processing of the present invention upon arrival of this request.
- page permanently moved is defined as status code 301 in the HTTP 1.1 protocol. As described above with reference to the page temporarily moved message, processing the page permanently moved status code is also a required part of the HTTP protocol, and thus requires no client-side software modification.
- the latency information gathered by the present invention may be used as input for policy decisions including those that determine the type of transcoding and content reduction that should be performed before sending a response to a client with a high latency network connection.
- the present invention may alternatively operate on a server-side proxy (or any intermediate proxy which does not reside on the client), using an extension of the logic illustrated in FIG. 4 .
- This extension comprises sending a proxy-to-server request for the Web page requested (in the first request URL) by the client, and receiving the response from the server. It will be obvious to one of ordinary skill in the art how this additional processing may be added following Block 415 of FIG. 4 .
- the proxy may be able to perform the processing of FIG. 4 with essentially no added time delay being experienced by the user at the client machine. When the first request URL arrives at the proxy, it may happen that the proxy needs to fetch information (such as the requested page) from the server.
- the proxy returns the redirect response to the client, the proxy forwards a request to the server to fetch the required information.
- the round trip time between the proxy and server is less than the round trip time between the proxy and client, then the fetched information will arrive at the proxy before the second client request (i.e. for the redirected URL) is received at the proxy. In this case, the proxy immediately responds to the client's second request with the pre-fetched information.
Abstract
Description
Claims (23)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/326,307 US6601098B1 (en) | 1999-06-07 | 1999-06-07 | Technique for measuring round-trip latency to computing devices requiring no client-side proxy presence |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/326,307 US6601098B1 (en) | 1999-06-07 | 1999-06-07 | Technique for measuring round-trip latency to computing devices requiring no client-side proxy presence |
Publications (1)
Publication Number | Publication Date |
---|---|
US6601098B1 true US6601098B1 (en) | 2003-07-29 |
Family
ID=27613184
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/326,307 Expired - Lifetime US6601098B1 (en) | 1999-06-07 | 1999-06-07 | Technique for measuring round-trip latency to computing devices requiring no client-side proxy presence |
Country Status (1)
Country | Link |
---|---|
US (1) | US6601098B1 (en) |
Cited By (115)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010029537A1 (en) * | 1997-07-23 | 2001-10-11 | Candle Distributed Solutions, Inc. | Reducing information transmission time by adapting information delivery to the speed of a given network connection |
US20020004846A1 (en) * | 2000-04-28 | 2002-01-10 | Garcia-Luna-Aceves J. J. | System and method for using network layer uniform resource locator routing to locate the closest server carrying specific content |
US20020007413A1 (en) * | 2000-03-16 | 2002-01-17 | Garcia-Luna-Aceves Jj | System and method for using a mapping between client addresses and addresses of caches to support content delivery |
US20020010737A1 (en) * | 2000-04-28 | 2002-01-24 | Garcia-Luna-Aceves J. J. | System and method for using uniform resource locators to map application layer content names to network layer anycast addresses |
US20020016860A1 (en) * | 2000-04-28 | 2002-02-07 | Garcia-Luna-Aceves J. J. | System and method for resolving network layer anycast addresses to network layer unicast addresses |
US20020026511A1 (en) * | 2000-04-28 | 2002-02-28 | Garcia-Luna-Aceves Jj | System and method for controlling access to content carried in a caching architecture |
US20020075813A1 (en) * | 2000-10-17 | 2002-06-20 | Baldonado Omar C. | Method and apparatus for coordinating routing parameters via a back-channel communication medium |
US20020129161A1 (en) * | 2000-10-17 | 2002-09-12 | Lloyd Michael A. | Systems and methods for robust, real-time measurement of network performance |
US20030005113A1 (en) * | 2001-06-08 | 2003-01-02 | Mike Moore | Process for personalizing a transaction through an internet or intranet network |
US20030046383A1 (en) * | 2001-09-05 | 2003-03-06 | Microsoft Corporation | Method and system for measuring network performance from a server |
US20030051036A1 (en) * | 2000-09-04 | 2003-03-13 | International Business Machines Corporation | Computer network system, computer system, method for communication between computer systems, method for measuring computer system performance, and storage medium |
US20030088664A1 (en) * | 2001-10-01 | 2003-05-08 | Hannel Clifford L. | Methods and systems for testing stateful network communications devices |
US20030101278A1 (en) * | 2000-03-16 | 2003-05-29 | J.J. Garcia-Luna-Aceves | System and method for directing clients to optimal servers in computer networks |
US20030200307A1 (en) * | 2000-03-16 | 2003-10-23 | Jyoti Raju | System and method for information object routing in computer networks |
US20030217147A1 (en) * | 2002-05-14 | 2003-11-20 | Maynard William P. | Directing a client computer to a least network latency server site |
US20030233445A1 (en) * | 2002-06-14 | 2003-12-18 | Ramot University Authority Applied | Determining client latencies over a network |
US6717917B1 (en) * | 2000-06-09 | 2004-04-06 | Ixia | Method of determining real-time data latency and apparatus therefor |
US20040117793A1 (en) * | 2002-12-17 | 2004-06-17 | Sun Microsystems, Inc. | Operating system architecture employing synchronous tasks |
US20040181532A1 (en) * | 2000-02-04 | 2004-09-16 | Keith Bernstein | Declarative, data-neutral client-server data transport mechanism |
US20040205098A1 (en) * | 2000-10-17 | 2004-10-14 | Lloyd Michael A. | Load optimization |
US6848076B1 (en) * | 2000-06-22 | 2005-01-25 | International Business Machines Corporation | Automatic fetching and storage of requested primary and related documents or files at receiving web stations after repeated failures to access such documents or files from the World Wide Web |
FR2858893A1 (en) * | 2003-08-11 | 2005-02-18 | France Telecom | Data e.g. cookie packet, exchange quality estimating method for e.g. Internet network, involves storing time for cookie packet transmission, in memory module of client entity after packet is received by client entity |
US6865605B1 (en) * | 2000-10-04 | 2005-03-08 | Microsoft Corporation | System and method for transparently redirecting client requests for content using a front-end indicator to preserve the validity of local caching at the client system |
US6865579B1 (en) | 2000-08-28 | 2005-03-08 | Sun Microsystems, Inc. | Simplified thread control block design |
US20050074033A1 (en) * | 2003-10-03 | 2005-04-07 | Chauveau Claude J. | Method and apparatus for measuring network timing and latency |
US20050086347A1 (en) * | 2000-10-04 | 2005-04-21 | Microsoft Corporation | Routing client requests to back-end servers |
US20050089011A1 (en) * | 1999-09-27 | 2005-04-28 | Bender Paul E. | Method and system for querying attributes in a cellular communications system |
US20050117521A1 (en) * | 1999-11-10 | 2005-06-02 | Nischal Abrol | Radio link protocol enhancements to reduce setup time for data calls |
US20050177344A1 (en) * | 2004-02-09 | 2005-08-11 | Newisys, Inc. A Delaware Corporation | Histogram performance counters for use in transaction latency analysis |
US20060029016A1 (en) * | 2004-06-29 | 2006-02-09 | Radware Limited | Debugging application performance over a network |
US20060039294A1 (en) * | 2004-08-18 | 2006-02-23 | Wecomm Limited | Transmitting packets of data |
US7006448B1 (en) * | 1999-10-01 | 2006-02-28 | Lucent Technologies Inc. | System and method for measuring network round trip time by monitoring fast-response operations |
US20060136927A1 (en) * | 2004-12-16 | 2006-06-22 | Michele Covell | Models for monitoring of streaming server performance |
US7080161B2 (en) | 2000-10-17 | 2006-07-18 | Avaya Technology Corp. | Routing information exchange |
US20060186268A1 (en) * | 2005-02-22 | 2006-08-24 | The Boeing Company | Aircraft cart transport and stowage system |
US20060203808A1 (en) * | 1999-06-30 | 2006-09-14 | Kui Zhang | Method and apparatus for measuring latency of a computer network |
US20060215697A1 (en) * | 2005-03-24 | 2006-09-28 | Olderdissen Jan R | Protocol stack using shared memory |
US7123616B2 (en) | 2000-06-09 | 2006-10-17 | Ixia | Determining round-trip time delay |
US7137937B2 (en) | 2002-10-07 | 2006-11-21 | Ellen Croft | Collapsible resistance exercise device |
US20070055768A1 (en) * | 2005-08-23 | 2007-03-08 | Cisco Technology, Inc. | Method and system for monitoring a server |
US7194569B1 (en) | 2000-08-28 | 2007-03-20 | Sun Microsystems, Inc. | Method of re-formatting data |
US20070115833A1 (en) * | 2005-11-21 | 2007-05-24 | Gerald Pepper | Varying the position of test information in data units |
US7254605B1 (en) | 2000-10-26 | 2007-08-07 | Austen Services Llc | Method of modulating the transmission frequency in a real time opinion research network |
US20070245248A1 (en) * | 2006-04-14 | 2007-10-18 | Bernd Christiansen | Systems and methods for displayng to a presenter visual feedback corresponding to visual changes received by viewers |
US20080010523A1 (en) * | 2006-05-12 | 2008-01-10 | Samik Mukherjee | Performance Testing Despite Non-Conformance |
US7336613B2 (en) | 2000-10-17 | 2008-02-26 | Avaya Technology Corp. | Method and apparatus for the assessment and optimization of network traffic |
US20080112332A1 (en) * | 2006-11-10 | 2008-05-15 | Pepper Gerald R | Distributed Packet Group Identification For Network Testing |
US20080123550A1 (en) * | 2006-09-14 | 2008-05-29 | Andrei Pitis | Testing A Network |
US20080146160A1 (en) * | 2006-12-18 | 2008-06-19 | Yahoo! Inc. | Auto sniffing of carrier performance using reverse round trip time |
US20080298380A1 (en) * | 2007-05-31 | 2008-12-04 | Bryan Rittmeyer | Transmit Scheduling |
US7466654B1 (en) | 2005-05-24 | 2008-12-16 | The United States Of America As Represented By The Director, National Security Agency | Method of detecting intermediary communication device |
US20090040927A1 (en) * | 2007-08-08 | 2009-02-12 | Google Inc. | Content Server Latency Determination |
WO2009021138A2 (en) * | 2007-08-08 | 2009-02-12 | Google Inc. | Content server latency determination |
US20090044125A1 (en) * | 2007-08-08 | 2009-02-12 | Google Inc. | Content Server Latency Demonstration |
US7516216B2 (en) | 2001-10-01 | 2009-04-07 | Ixia | Generating traffic for testing a system under test |
US20090116497A1 (en) * | 2007-11-02 | 2009-05-07 | Cisco Technology, Inc. (Ca Corporation) | Ethernet Performance Monitoring |
US20090234968A1 (en) * | 2008-03-13 | 2009-09-17 | Cisco Technology, Inc. | Server selection for routing content to a client using application layer redirection |
US20090307347A1 (en) * | 2008-06-08 | 2009-12-10 | Ludmila Cherkasova | Using Transaction Latency Profiles For Characterizing Application Updates |
US7636792B1 (en) * | 2001-07-13 | 2009-12-22 | Oracle International Corporation | Methods and systems for dynamic and automatic content creation for mobile devices |
US20100005189A1 (en) * | 2008-07-02 | 2010-01-07 | International Business Machines Corporation | Pacing Network Traffic Among A Plurality Of Compute Nodes Connected Using A Data Communications Network |
US20100094592A1 (en) * | 2008-04-25 | 2010-04-15 | Ludmila Cherkasova | Using Application Performance Signatures For Characterizing Application Updates |
US7720959B2 (en) | 2000-10-17 | 2010-05-18 | Avaya Inc. | Method and apparatus for characterizing the quality of a network path |
US7756032B2 (en) | 2000-10-17 | 2010-07-13 | Avaya Inc. | Method and apparatus for communicating data within measurement traffic |
US7773536B2 (en) | 2000-10-17 | 2010-08-10 | Avaya Inc. | Method and apparatus for the assessment and optimization of network traffic |
US7788407B1 (en) * | 2000-10-21 | 2010-08-31 | Cisco Technology, Inc. | Apparatus and methods for providing an application level gateway for use in networks |
US20100242016A1 (en) * | 2000-08-15 | 2010-09-23 | Fujitsu Limited | System for designing and performing web application |
US7830814B1 (en) | 2006-06-02 | 2010-11-09 | Adobe Systems Incorporated | Providing information associated with network latency |
US7840704B2 (en) | 2000-10-17 | 2010-11-23 | Avaya Inc. | Method and apparatus for performance and cost optimization in an internetwork |
US20110170537A1 (en) * | 2010-01-08 | 2011-07-14 | Marius Ungureanu | One Way and Round Trip Delays Using Telephony In-Band Tones |
US20120072570A1 (en) * | 2009-12-17 | 2012-03-22 | Jenkins Jonathan A | Modifying Network Site Behavior |
US8310942B2 (en) | 2010-08-27 | 2012-11-13 | Ixia | Flow statistics aggregation |
US20130050737A1 (en) * | 2011-08-31 | 2013-02-28 | Brother Kogyo Kabushiki Kaisha | Image processing device, image processing system, and printing device |
TWI411276B (en) * | 2008-09-26 | 2013-10-01 | Qualcomm Inc | Session initiation protocol registration with ping |
US8571032B2 (en) | 2010-11-17 | 2013-10-29 | Ixia | Testing packet fragmentation |
US8626910B1 (en) | 2012-06-19 | 2014-01-07 | Edgecast Networks, Inc. | Systems and methods for performing localized server-side monitoring in a content delivery network |
US8649285B2 (en) | 2011-01-12 | 2014-02-11 | Ixia | Tracking packet sequence numbers |
US8667133B2 (en) * | 2012-08-02 | 2014-03-04 | Yahoo! Inc. | Methods and systems for determining the effect of a host on network latency while delivering online ADS |
US8676917B2 (en) | 2007-06-18 | 2014-03-18 | International Business Machines Corporation | Administering an epoch initiated for remote memory access |
US8689228B2 (en) | 2011-07-19 | 2014-04-01 | International Business Machines Corporation | Identifying data communications algorithms of all other tasks in a single collective operation in a distributed processing system |
US8730826B2 (en) | 2010-11-17 | 2014-05-20 | Ixia | Testing fragment reassembly |
WO2014168936A1 (en) * | 2013-04-10 | 2014-10-16 | Ho Lap-Wah Lawrence | Method and apparatus for processing composite web transactions |
US20140337460A1 (en) * | 2013-05-07 | 2014-11-13 | Verisign, Inc. | Systems, devices, and methods for protecting access privacy of cached content |
US8893150B2 (en) | 2010-04-14 | 2014-11-18 | International Business Machines Corporation | Runtime optimization of an application executing on a parallel computer |
WO2014205060A1 (en) * | 2013-06-19 | 2014-12-24 | Cedexis, Inc. | Confidence scoring of device reputation based on characteristic network behavior |
US9053226B2 (en) | 2010-07-30 | 2015-06-09 | International Business Machines Corporation | Administering connection identifiers for collective operations in a parallel computer |
US9065839B2 (en) | 2007-10-02 | 2015-06-23 | International Business Machines Corporation | Minimally buffered data transfers between nodes in a data communications network |
US9094336B2 (en) | 2013-03-15 | 2015-07-28 | Ixia | Methods, systems, and computer readable media for assisting with the debugging of conditions associated with the processing of test packets by a device under test |
US9116873B2 (en) | 2013-03-21 | 2015-08-25 | Ixia | Methods, systems, and computer readable media for adjusting load at a device under test |
US20150281261A1 (en) * | 2014-03-26 | 2015-10-01 | International Business Machines Corporation | Detecting proxy-based communications |
US9178790B2 (en) | 2012-08-06 | 2015-11-03 | Ixia | Methods, systems, and computer readable media for controlling Tx and Rx throughput over TCP |
US9178823B2 (en) | 2012-12-12 | 2015-11-03 | Ixia | Methods, systems, and computer readable media for generating simulated network traffic using different traffic flows and maintaining a configured distribution of traffic between the different traffic flows and a device under test |
US9183560B2 (en) | 2010-05-28 | 2015-11-10 | Daniel H. Abelow | Reality alternate |
US20150370594A1 (en) * | 2014-06-18 | 2015-12-24 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US9246861B2 (en) | 2011-01-05 | 2016-01-26 | International Business Machines Corporation | Locality mapping in a distributed processing system |
US9250949B2 (en) | 2011-09-13 | 2016-02-02 | International Business Machines Corporation | Establishing a group of endpoints to support collective operations without specifying unique identifiers for any endpoints |
US9264340B2 (en) | 2013-03-15 | 2016-02-16 | Ixia | Methods, systems, and computer readable media for misdirected packet drill down and negative packet capture at a network test device |
US9317637B2 (en) | 2011-01-14 | 2016-04-19 | International Business Machines Corporation | Distributed hardware device simulation |
US9397901B2 (en) | 2012-12-18 | 2016-07-19 | Ixia | Methods, systems, and computer readable media for classifying application traffic received at a network traffic emulation device that emulates multiple application servers |
US9800482B2 (en) | 2015-04-29 | 2017-10-24 | Ixia | Signature-based latency extraction systems and related methods for network packet communications |
US9954759B2 (en) | 2015-07-29 | 2018-04-24 | International Business Machines Corporation | Detecting proxy-based communications |
US10109198B2 (en) * | 2017-03-08 | 2018-10-23 | GM Global Technology Operations LLC | Method and apparatus of networked scene rendering and augmentation in vehicular environments in autonomous driving systems |
US10178015B2 (en) | 2016-03-21 | 2019-01-08 | Keysight Technologies Singapore (Holdings) Pte. Ltd. | Methods, systems, and computer readable media for testing network equipment devices using connectionless protocols |
US10193773B2 (en) | 2016-11-09 | 2019-01-29 | Keysight Technologies Singapore (Holdings) Pte. Ltd. | Methods, systems, and computer readable media for distributed network packet statistics collection in a test environment |
US10412616B1 (en) | 2017-07-11 | 2019-09-10 | Sprint Communications Company, L.P. | Equalized data latency for user applications in a wireless data network |
US10764148B2 (en) | 2017-11-29 | 2020-09-01 | Keysight Technologies, Inc. | Methods, systems, and computer readable media for network traffic statistics collection |
US20210250252A1 (en) * | 2020-02-11 | 2021-08-12 | International Business Machines Corporation | Data processing based on response strategy |
US11108675B2 (en) | 2018-10-31 | 2021-08-31 | Keysight Technologies, Inc. | Methods, systems, and computer readable media for testing effects of simulated frame preemption and deterministic fragmentation of preemptable frames in a frame-preemption-capable network |
US11140238B1 (en) * | 2020-06-25 | 2021-10-05 | Teso LT, UAB | Exit node benchmark feature |
US11381464B2 (en) | 2019-11-28 | 2022-07-05 | Keysight Technologies, Inc. | Methods, systems, and computer readable media for implementing a generalized model for defining application state machines |
US20220407913A1 (en) * | 2021-06-22 | 2022-12-22 | Level 3 Communications, Llc | Network optimization system using latency measurements |
US11758018B2 (en) | 2013-08-28 | 2023-09-12 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11757674B2 (en) | 2017-08-28 | 2023-09-12 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11770435B2 (en) | 2009-10-08 | 2023-09-26 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11902253B2 (en) | 2019-04-02 | 2024-02-13 | Bright Data Ltd. | System and method for managing non-direct URL fetching service |
US11985210B2 (en) | 2022-02-26 | 2024-05-14 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
Citations (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5521907A (en) * | 1995-04-25 | 1996-05-28 | Visual Networks, Inc. | Method and apparatus for non-intrusive measurement of round trip delay in communications networks |
US5574860A (en) * | 1993-03-11 | 1996-11-12 | Digital Equipment Corporation | Method of neighbor discovery over a multiaccess nonbroadcast medium |
US5675576A (en) * | 1995-06-05 | 1997-10-07 | Lucent Technologies Inc. | Concestion control system and method for packet switched networks providing max-min fairness |
US5802299A (en) * | 1996-02-13 | 1998-09-01 | Microtouch Systems, Inc. | Interactive system for authoring hypertext document collections |
US5812776A (en) * | 1995-06-07 | 1998-09-22 | Open Market, Inc. | Method of providing internet pages by mapping telephone number provided by client to URL and returning the same in a redirect command by server |
US5870546A (en) * | 1996-02-21 | 1999-02-09 | Infoseek Corporation | Method and apparatus for redirection of server external hyper-link reference |
US5878233A (en) * | 1995-08-07 | 1999-03-02 | International Business Machines Corporation | System, method, and computer program product for reviewing and creating advisories for data located on a content server |
US5944840A (en) * | 1997-09-10 | 1999-08-31 | Bluewater Systems, Inc. | Continuous monitor for interrupt latency in real time systems |
US5956490A (en) * | 1998-06-30 | 1999-09-21 | Motorola, Inc. | Method, client device, server and computer readable medium for specifying and negotiating compression of uniform resource identifiers |
US6012096A (en) * | 1998-04-23 | 2000-01-04 | Microsoft Corporation | Method and system for peer-to-peer network latency measurement |
US6021439A (en) * | 1997-11-14 | 2000-02-01 | International Business Machines Corporation | Internet quality-of-service method and system |
US6052730A (en) * | 1997-01-10 | 2000-04-18 | The Board Of Trustees Of The Leland Stanford Junior University | Method for monitoring and/or modifying web browsing sessions |
US6078786A (en) * | 1996-10-05 | 2000-06-20 | Contraves Space Ag | Method and device for measuring the distance between two stations connected by a communications channel |
US6115357A (en) * | 1997-07-01 | 2000-09-05 | Packeteer, Inc. | Method for pacing data flow in a packet-based network |
US6151686A (en) * | 1997-06-06 | 2000-11-21 | Fmr Corp. | Managing an information retrieval problem |
US6175869B1 (en) * | 1998-04-08 | 2001-01-16 | Lucent Technologies Inc. | Client-side techniques for web server allocation |
US6182125B1 (en) * | 1998-10-13 | 2001-01-30 | 3Com Corporation | Methods for determining sendable information content based on a determined network latency |
US6185598B1 (en) * | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
US6212171B1 (en) * | 1998-06-22 | 2001-04-03 | Intel Corporation | Method and apparatus for gap count determination |
US6226752B1 (en) * | 1999-05-11 | 2001-05-01 | Sun Microsystems, Inc. | Method and apparatus for authenticating users |
US6240454B1 (en) * | 1996-09-09 | 2001-05-29 | Avaya Technology Corp. | Dynamic reconfiguration of network servers |
US6272539B1 (en) * | 1998-11-18 | 2001-08-07 | International Business Machines Corporation | Methods, systems and computer program products for determining and visually representing a user's overall network delay in collaborative applications |
US6282542B1 (en) * | 1997-08-06 | 2001-08-28 | Tachyon, Inc. | Distributed system and method for prefetching objects |
US6304967B1 (en) * | 1997-12-10 | 2001-10-16 | Rmc Software, Inc. | System and architecture for distributing, monitoring, and managing information requests on a computer network |
US6314465B1 (en) * | 1999-03-11 | 2001-11-06 | Lucent Technologies Inc. | Method and apparatus for load sharing on a wide area network |
US6321264B1 (en) * | 1998-08-28 | 2001-11-20 | 3Com Corporation | Network-performance statistics using end-node computer systems |
US6373836B1 (en) * | 1997-09-15 | 2002-04-16 | Genesys Telecommunications Laboratories, Inc. | Apparatus and methods in routing internet protocol network telephony calls in a centrally-managed call center system |
US6438592B1 (en) * | 1998-02-25 | 2002-08-20 | Michael G. Killian | Systems for monitoring and improving performance on the world wide web |
US6446121B1 (en) * | 1998-05-26 | 2002-09-03 | Cisco Technology, Inc. | System and method for measuring round trip times in a network using a TCP packet |
US6446028B1 (en) * | 1998-11-25 | 2002-09-03 | Keynote Systems, Inc. | Method and apparatus for measuring the performance of a network based application program |
-
1999
- 1999-06-07 US US09/326,307 patent/US6601098B1/en not_active Expired - Lifetime
Patent Citations (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5574860A (en) * | 1993-03-11 | 1996-11-12 | Digital Equipment Corporation | Method of neighbor discovery over a multiaccess nonbroadcast medium |
US5521907A (en) * | 1995-04-25 | 1996-05-28 | Visual Networks, Inc. | Method and apparatus for non-intrusive measurement of round trip delay in communications networks |
US5675576A (en) * | 1995-06-05 | 1997-10-07 | Lucent Technologies Inc. | Concestion control system and method for packet switched networks providing max-min fairness |
US5812776A (en) * | 1995-06-07 | 1998-09-22 | Open Market, Inc. | Method of providing internet pages by mapping telephone number provided by client to URL and returning the same in a redirect command by server |
US5878233A (en) * | 1995-08-07 | 1999-03-02 | International Business Machines Corporation | System, method, and computer program product for reviewing and creating advisories for data located on a content server |
US5802299A (en) * | 1996-02-13 | 1998-09-01 | Microtouch Systems, Inc. | Interactive system for authoring hypertext document collections |
US5870546A (en) * | 1996-02-21 | 1999-02-09 | Infoseek Corporation | Method and apparatus for redirection of server external hyper-link reference |
US6240454B1 (en) * | 1996-09-09 | 2001-05-29 | Avaya Technology Corp. | Dynamic reconfiguration of network servers |
US6078786A (en) * | 1996-10-05 | 2000-06-20 | Contraves Space Ag | Method and device for measuring the distance between two stations connected by a communications channel |
US6052730A (en) * | 1997-01-10 | 2000-04-18 | The Board Of Trustees Of The Leland Stanford Junior University | Method for monitoring and/or modifying web browsing sessions |
US6151686A (en) * | 1997-06-06 | 2000-11-21 | Fmr Corp. | Managing an information retrieval problem |
US6115357A (en) * | 1997-07-01 | 2000-09-05 | Packeteer, Inc. | Method for pacing data flow in a packet-based network |
US6282542B1 (en) * | 1997-08-06 | 2001-08-28 | Tachyon, Inc. | Distributed system and method for prefetching objects |
US5944840A (en) * | 1997-09-10 | 1999-08-31 | Bluewater Systems, Inc. | Continuous monitor for interrupt latency in real time systems |
US6373836B1 (en) * | 1997-09-15 | 2002-04-16 | Genesys Telecommunications Laboratories, Inc. | Apparatus and methods in routing internet protocol network telephony calls in a centrally-managed call center system |
US6021439A (en) * | 1997-11-14 | 2000-02-01 | International Business Machines Corporation | Internet quality-of-service method and system |
US6304967B1 (en) * | 1997-12-10 | 2001-10-16 | Rmc Software, Inc. | System and architecture for distributing, monitoring, and managing information requests on a computer network |
US6185598B1 (en) * | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
US6438592B1 (en) * | 1998-02-25 | 2002-08-20 | Michael G. Killian | Systems for monitoring and improving performance on the world wide web |
US6175869B1 (en) * | 1998-04-08 | 2001-01-16 | Lucent Technologies Inc. | Client-side techniques for web server allocation |
US6012096A (en) * | 1998-04-23 | 2000-01-04 | Microsoft Corporation | Method and system for peer-to-peer network latency measurement |
US6446121B1 (en) * | 1998-05-26 | 2002-09-03 | Cisco Technology, Inc. | System and method for measuring round trip times in a network using a TCP packet |
US6212171B1 (en) * | 1998-06-22 | 2001-04-03 | Intel Corporation | Method and apparatus for gap count determination |
US5956490A (en) * | 1998-06-30 | 1999-09-21 | Motorola, Inc. | Method, client device, server and computer readable medium for specifying and negotiating compression of uniform resource identifiers |
US6321264B1 (en) * | 1998-08-28 | 2001-11-20 | 3Com Corporation | Network-performance statistics using end-node computer systems |
US6182125B1 (en) * | 1998-10-13 | 2001-01-30 | 3Com Corporation | Methods for determining sendable information content based on a determined network latency |
US6272539B1 (en) * | 1998-11-18 | 2001-08-07 | International Business Machines Corporation | Methods, systems and computer program products for determining and visually representing a user's overall network delay in collaborative applications |
US6446028B1 (en) * | 1998-11-25 | 2002-09-03 | Keynote Systems, Inc. | Method and apparatus for measuring the performance of a network based application program |
US6314465B1 (en) * | 1999-03-11 | 2001-11-06 | Lucent Technologies Inc. | Method and apparatus for load sharing on a wide area network |
US6226752B1 (en) * | 1999-05-11 | 2001-05-01 | Sun Microsystems, Inc. | Method and apparatus for authenticating users |
Non-Patent Citations (11)
Cited By (246)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7171483B2 (en) * | 1997-07-23 | 2007-01-30 | International Business Machines Corporation | Reducing information transmission time by adapting information delivery to the speed of a given network connection |
US20010029537A1 (en) * | 1997-07-23 | 2001-10-11 | Candle Distributed Solutions, Inc. | Reducing information transmission time by adapting information delivery to the speed of a given network connection |
US7154858B1 (en) | 1999-06-30 | 2006-12-26 | Cisco Technology, Inc. | System and method for measuring latency of a selected path of a computer network |
US7787404B2 (en) | 1999-06-30 | 2010-08-31 | Cisco Technology, Inc. | Method and apparatus for measuring latency of a computer network |
US20060203808A1 (en) * | 1999-06-30 | 2006-09-14 | Kui Zhang | Method and apparatus for measuring latency of a computer network |
US20050089011A1 (en) * | 1999-09-27 | 2005-04-28 | Bender Paul E. | Method and system for querying attributes in a cellular communications system |
US8526975B2 (en) | 1999-09-27 | 2013-09-03 | Qualcomm Incorporated | Method and system for querying attributes in a cellular communications system |
US7006448B1 (en) * | 1999-10-01 | 2006-02-28 | Lucent Technologies Inc. | System and method for measuring network round trip time by monitoring fast-response operations |
US8295190B2 (en) | 1999-11-10 | 2012-10-23 | Qualcomm Incorporated | Radio link protocol enhancements to reduce setup time for data calls |
US20050117521A1 (en) * | 1999-11-10 | 2005-06-02 | Nischal Abrol | Radio link protocol enhancements to reduce setup time for data calls |
US7333440B2 (en) * | 1999-11-10 | 2008-02-19 | Qualcomm Incorporated | Radio link protocol enhancements to reduce setup time for data calls |
US20080123597A1 (en) * | 1999-11-10 | 2008-05-29 | Qualcomm Incorporated | Radio link protocol enhancements to reduce setup time for data calls |
US7158982B2 (en) * | 2000-02-04 | 2007-01-02 | America Online, Inc. | Declarative, data-neutral client-server data transport mechanism |
US20040181532A1 (en) * | 2000-02-04 | 2004-09-16 | Keith Bernstein | Declarative, data-neutral client-server data transport mechanism |
US7664876B2 (en) * | 2000-03-16 | 2010-02-16 | Adara Networks, Inc. | System and method for directing clients to optimal servers in computer networks |
US7552233B2 (en) | 2000-03-16 | 2009-06-23 | Adara Networks, Inc. | System and method for information object routing in computer networks |
US9847930B2 (en) | 2000-03-16 | 2017-12-19 | Adara Networks, Inc. | System and method for directing clients to optimal servers in computer networks |
US20090013083A9 (en) * | 2000-03-16 | 2009-01-08 | Garcia-Luna-Aceves Jj | System and method for using a mapping between client addresses and addresses of caches to support content delivery |
US7565450B2 (en) | 2000-03-16 | 2009-07-21 | Adara Networks Inc. | System and method for using a mapping between client addresses and addresses of caches to support content delivery |
US20030200307A1 (en) * | 2000-03-16 | 2003-10-23 | Jyoti Raju | System and method for information object routing in computer networks |
US20030101278A1 (en) * | 2000-03-16 | 2003-05-29 | J.J. Garcia-Luna-Aceves | System and method for directing clients to optimal servers in computer networks |
US8572214B2 (en) | 2000-03-16 | 2013-10-29 | Adara Networks, Inc. | System and method for discovering information objects and information object repositories in computer networks |
US8433787B2 (en) | 2000-03-16 | 2013-04-30 | Adara Networks, Inc. | System and method for directing clients to optimal servers in computer networks |
US8423666B2 (en) | 2000-03-16 | 2013-04-16 | Adara Networks, Inc. | System and method for directing clients to optimal servers in computer networks |
US20060271705A1 (en) * | 2000-03-16 | 2006-11-30 | Garcia-Luna-Aceves J J | System and method for discovering information objects and information object repositories in computer networks |
US20100198913A1 (en) * | 2000-03-16 | 2010-08-05 | Garcia-Luna-Aceves Jose J | System and method directing clients to optimal servers in computer networks |
US20020007413A1 (en) * | 2000-03-16 | 2002-01-17 | Garcia-Luna-Aceves Jj | System and method for using a mapping between client addresses and addresses of caches to support content delivery |
US20110093586A1 (en) * | 2000-03-16 | 2011-04-21 | Garcia-Luna-Aceves Jose J | System and method for directing clients to optimal servers in computer networks |
US7343422B2 (en) | 2000-04-28 | 2008-03-11 | Adara Networks, Inc. | System and method for using uniform resource locators to map application layer content names to network layer anycast addresses |
US7725596B2 (en) | 2000-04-28 | 2010-05-25 | Adara Networks, Inc. | System and method for resolving network layer anycast addresses to network layer unicast addresses |
US7577754B2 (en) | 2000-04-28 | 2009-08-18 | Adara Networks, Inc. | System and method for controlling access to content carried in a caching architecture |
US20020004846A1 (en) * | 2000-04-28 | 2002-01-10 | Garcia-Luna-Aceves J. J. | System and method for using network layer uniform resource locator routing to locate the closest server carrying specific content |
US7908337B2 (en) | 2000-04-28 | 2011-03-15 | Adara Networks, Inc. | System and method for using network layer uniform resource locator routing to locate the closest server carrying specific content |
US20020010737A1 (en) * | 2000-04-28 | 2002-01-24 | Garcia-Luna-Aceves J. J. | System and method for using uniform resource locators to map application layer content names to network layer anycast addresses |
US20020026511A1 (en) * | 2000-04-28 | 2002-02-28 | Garcia-Luna-Aceves Jj | System and method for controlling access to content carried in a caching architecture |
US20020016860A1 (en) * | 2000-04-28 | 2002-02-07 | Garcia-Luna-Aceves J. J. | System and method for resolving network layer anycast addresses to network layer unicast addresses |
US7123616B2 (en) | 2000-06-09 | 2006-10-17 | Ixia | Determining round-trip time delay |
US6717917B1 (en) * | 2000-06-09 | 2004-04-06 | Ixia | Method of determining real-time data latency and apparatus therefor |
US6848076B1 (en) * | 2000-06-22 | 2005-01-25 | International Business Machines Corporation | Automatic fetching and storage of requested primary and related documents or files at receiving web stations after repeated failures to access such documents or files from the World Wide Web |
US20100242016A1 (en) * | 2000-08-15 | 2010-09-23 | Fujitsu Limited | System for designing and performing web application |
US20100241705A1 (en) * | 2000-08-15 | 2010-09-23 | Fujitsu Limited | System for designing and performing web application |
US8015265B2 (en) * | 2000-08-15 | 2011-09-06 | Fujitsu Limited | System for designing and performing Web application |
US8738735B2 (en) | 2000-08-15 | 2014-05-27 | Fujitsu Limited | System for designing and performing web application |
US20070156729A1 (en) * | 2000-08-28 | 2007-07-05 | Sun Microsystems, Inc. | Data structure describing logical data spaces |
US6865579B1 (en) | 2000-08-28 | 2005-03-08 | Sun Microsystems, Inc. | Simplified thread control block design |
US7194569B1 (en) | 2000-08-28 | 2007-03-20 | Sun Microsystems, Inc. | Method of re-formatting data |
US7080147B2 (en) * | 2000-09-04 | 2006-07-18 | International Business Machines Corporation | Computer network system, computer system, method for communication between computer systems, method for measuring computer system performance, and storage medium |
US20030051036A1 (en) * | 2000-09-04 | 2003-03-13 | International Business Machines Corporation | Computer network system, computer system, method for communication between computer systems, method for measuring computer system performance, and storage medium |
US7657638B2 (en) | 2000-10-04 | 2010-02-02 | Microsoft Corporation | Routing client requests to back-end servers |
US6865605B1 (en) * | 2000-10-04 | 2005-03-08 | Microsoft Corporation | System and method for transparently redirecting client requests for content using a front-end indicator to preserve the validity of local caching at the client system |
US20050086347A1 (en) * | 2000-10-04 | 2005-04-21 | Microsoft Corporation | Routing client requests to back-end servers |
US7720959B2 (en) | 2000-10-17 | 2010-05-18 | Avaya Inc. | Method and apparatus for characterizing the quality of a network path |
US20040205098A1 (en) * | 2000-10-17 | 2004-10-14 | Lloyd Michael A. | Load optimization |
US20020075813A1 (en) * | 2000-10-17 | 2002-06-20 | Baldonado Omar C. | Method and apparatus for coordinating routing parameters via a back-channel communication medium |
US7675868B2 (en) | 2000-10-17 | 2010-03-09 | Avaya Inc. | Method and apparatus for coordinating routing parameters via a back-channel communication medium |
US20020129161A1 (en) * | 2000-10-17 | 2002-09-12 | Lloyd Michael A. | Systems and methods for robust, real-time measurement of network performance |
US7756032B2 (en) | 2000-10-17 | 2010-07-13 | Avaya Inc. | Method and apparatus for communicating data within measurement traffic |
US7773536B2 (en) | 2000-10-17 | 2010-08-10 | Avaya Inc. | Method and apparatus for the assessment and optimization of network traffic |
US7336613B2 (en) | 2000-10-17 | 2008-02-26 | Avaya Technology Corp. | Method and apparatus for the assessment and optimization of network traffic |
US7080161B2 (en) | 2000-10-17 | 2006-07-18 | Avaya Technology Corp. | Routing information exchange |
US7349994B2 (en) | 2000-10-17 | 2008-03-25 | Avaya Technology Corp. | Method and apparatus for coordinating routing parameters via a back-channel communication medium |
US7363367B2 (en) * | 2000-10-17 | 2008-04-22 | Avaya Technology Corp. | Systems and methods for robust, real-time measurement of network performance |
US7840704B2 (en) | 2000-10-17 | 2010-11-23 | Avaya Inc. | Method and apparatus for performance and cost optimization in an internetwork |
US7788407B1 (en) * | 2000-10-21 | 2010-08-31 | Cisco Technology, Inc. | Apparatus and methods for providing an application level gateway for use in networks |
US7254605B1 (en) | 2000-10-26 | 2007-08-07 | Austen Services Llc | Method of modulating the transmission frequency in a real time opinion research network |
US20070260680A1 (en) * | 2000-10-26 | 2007-11-08 | Austen Services Llc | System and computer program product for modulating the transmission frequency in a real time opinion research network |
US7806273B2 (en) | 2000-10-26 | 2010-10-05 | Strum William E | System and method for managing client - server communications over computer network using transmission schedule |
US7809788B2 (en) | 2000-10-26 | 2010-10-05 | Strum William E | System and method for managing client-server communications over a computer network using transmission schedule |
US20070266086A1 (en) * | 2000-10-26 | 2007-11-15 | Austen Services Llc | System, method, and computer program product for modulating the transmission frequency in a real time opinion research network |
US20030005113A1 (en) * | 2001-06-08 | 2003-01-02 | Mike Moore | Process for personalizing a transaction through an internet or intranet network |
US7636792B1 (en) * | 2001-07-13 | 2009-12-22 | Oracle International Corporation | Methods and systems for dynamic and automatic content creation for mobile devices |
US20030046383A1 (en) * | 2001-09-05 | 2003-03-06 | Microsoft Corporation | Method and system for measuring network performance from a server |
US7516216B2 (en) | 2001-10-01 | 2009-04-07 | Ixia | Generating traffic for testing a system under test |
US7496664B2 (en) | 2001-10-01 | 2009-02-24 | Ixia | Method for testing stateful network communications devices |
US20070121516A1 (en) * | 2001-10-01 | 2007-05-31 | Hannel Clifford L | Method For Testing Stateful Network Communications Devices |
US20030088664A1 (en) * | 2001-10-01 | 2003-05-08 | Hannel Clifford L. | Methods and systems for testing stateful network communications devices |
US7194535B2 (en) | 2001-10-01 | 2007-03-20 | Ixia | Methods and systems for testing stateful network communications devices |
US20030217147A1 (en) * | 2002-05-14 | 2003-11-20 | Maynard William P. | Directing a client computer to a least network latency server site |
US20030233445A1 (en) * | 2002-06-14 | 2003-12-18 | Ramot University Authority Applied | Determining client latencies over a network |
US20070073873A1 (en) * | 2002-06-14 | 2007-03-29 | Hanoch Levy | Determining client latencies over a network |
US7747729B2 (en) * | 2002-06-14 | 2010-06-29 | Hanoch Levy | Determining client latencies over a network |
US7676570B2 (en) | 2002-06-14 | 2010-03-09 | Hanoch Levy | Determining client latencies over a network |
US8023421B2 (en) | 2002-07-25 | 2011-09-20 | Avaya Inc. | Method and apparatus for the assessment and optimization of network traffic |
US7137937B2 (en) | 2002-10-07 | 2006-11-21 | Ellen Croft | Collapsible resistance exercise device |
US20040117793A1 (en) * | 2002-12-17 | 2004-06-17 | Sun Microsystems, Inc. | Operating system architecture employing synchronous tasks |
FR2858893A1 (en) * | 2003-08-11 | 2005-02-18 | France Telecom | Data e.g. cookie packet, exchange quality estimating method for e.g. Internet network, involves storing time for cookie packet transmission, in memory module of client entity after packet is received by client entity |
US20050152406A2 (en) * | 2003-10-03 | 2005-07-14 | Chauveau Claude J. | Method and apparatus for measuring network timing and latency |
US20050074033A1 (en) * | 2003-10-03 | 2005-04-07 | Chauveau Claude J. | Method and apparatus for measuring network timing and latency |
US20050177344A1 (en) * | 2004-02-09 | 2005-08-11 | Newisys, Inc. A Delaware Corporation | Histogram performance counters for use in transaction latency analysis |
US20060029016A1 (en) * | 2004-06-29 | 2006-02-09 | Radware Limited | Debugging application performance over a network |
US20060039294A1 (en) * | 2004-08-18 | 2006-02-23 | Wecomm Limited | Transmitting packets of data |
US7551649B2 (en) * | 2004-08-18 | 2009-06-23 | Wecomm Limited | Transmitting packets of data |
US20060136927A1 (en) * | 2004-12-16 | 2006-06-22 | Michele Covell | Models for monitoring of streaming server performance |
US20060186268A1 (en) * | 2005-02-22 | 2006-08-24 | The Boeing Company | Aircraft cart transport and stowage system |
US8649395B2 (en) | 2005-03-24 | 2014-02-11 | Ixia | Protocol stack using shared memory |
US8121148B2 (en) | 2005-03-24 | 2012-02-21 | Ixia | Protocol stack using shared memory |
US20060215697A1 (en) * | 2005-03-24 | 2006-09-28 | Olderdissen Jan R | Protocol stack using shared memory |
US7466654B1 (en) | 2005-05-24 | 2008-12-16 | The United States Of America As Represented By The Director, National Security Agency | Method of detecting intermediary communication device |
US20070055768A1 (en) * | 2005-08-23 | 2007-03-08 | Cisco Technology, Inc. | Method and system for monitoring a server |
US20070115833A1 (en) * | 2005-11-21 | 2007-05-24 | Gerald Pepper | Varying the position of test information in data units |
US20090010170A1 (en) * | 2005-11-21 | 2009-01-08 | Gerald Pepper | Varying the Position of Test Information in Data Units |
US8677252B2 (en) * | 2006-04-14 | 2014-03-18 | Citrix Online Llc | Systems and methods for displaying to a presenter visual feedback corresponding to visual changes received by viewers |
US20070245248A1 (en) * | 2006-04-14 | 2007-10-18 | Bernd Christiansen | Systems and methods for displayng to a presenter visual feedback corresponding to visual changes received by viewers |
US20080010523A1 (en) * | 2006-05-12 | 2008-01-10 | Samik Mukherjee | Performance Testing Despite Non-Conformance |
US7830814B1 (en) | 2006-06-02 | 2010-11-09 | Adobe Systems Incorporated | Providing information associated with network latency |
US20080123550A1 (en) * | 2006-09-14 | 2008-05-29 | Andrei Pitis | Testing A Network |
US8180856B2 (en) | 2006-09-14 | 2012-05-15 | Ixia | Testing a network |
US8050175B2 (en) | 2006-11-10 | 2011-11-01 | Ixia | Distributed packet group identification for network testing |
US20080112332A1 (en) * | 2006-11-10 | 2008-05-15 | Pepper Gerald R | Distributed Packet Group Identification For Network Testing |
US20100074135A1 (en) * | 2006-11-10 | 2010-03-25 | Pepper Gerald R | Distributed Packet Group Identification For Network Testing |
US7643431B2 (en) | 2006-11-10 | 2010-01-05 | Ixia | Distributed packet group identification for network testing |
US20080146160A1 (en) * | 2006-12-18 | 2008-06-19 | Yahoo! Inc. | Auto sniffing of carrier performance using reverse round trip time |
US8041303B2 (en) * | 2006-12-18 | 2011-10-18 | Yahoo! Inc. | Auto sniffing of carrier performance using reverse round trip time |
US20080298380A1 (en) * | 2007-05-31 | 2008-12-04 | Bryan Rittmeyer | Transmit Scheduling |
US8068429B2 (en) | 2007-05-31 | 2011-11-29 | Ixia | Transmit scheduling |
US8676917B2 (en) | 2007-06-18 | 2014-03-18 | International Business Machines Corporation | Administering an epoch initiated for remote memory access |
AU2008285354B2 (en) * | 2007-08-08 | 2012-10-11 | Google Inc. | Content server latency determination |
WO2009021138A2 (en) * | 2007-08-08 | 2009-02-12 | Google Inc. | Content server latency determination |
WO2009021138A3 (en) * | 2007-08-08 | 2009-04-16 | Google Inc | Content server latency determination |
US20090040927A1 (en) * | 2007-08-08 | 2009-02-12 | Google Inc. | Content Server Latency Determination |
US20090044125A1 (en) * | 2007-08-08 | 2009-02-12 | Google Inc. | Content Server Latency Demonstration |
CN101809560B (en) * | 2007-08-08 | 2013-09-25 | 谷歌公司 | Content server latency determination |
CN103544215B (en) * | 2007-08-08 | 2017-01-04 | 谷歌公司 | Content server latency determines |
US8429544B2 (en) | 2007-08-08 | 2013-04-23 | Google Inc. | Content server latency demonstration |
US8949405B2 (en) | 2007-08-08 | 2015-02-03 | Google Inc. | Content server latency determination |
US9065839B2 (en) | 2007-10-02 | 2015-06-23 | International Business Machines Corporation | Minimally buffered data transfers between nodes in a data communications network |
US8400929B2 (en) | 2007-11-02 | 2013-03-19 | Cisco Technology, Inc. | Ethernet performance monitoring |
US20090116497A1 (en) * | 2007-11-02 | 2009-05-07 | Cisco Technology, Inc. (Ca Corporation) | Ethernet Performance Monitoring |
US8780731B2 (en) | 2007-11-02 | 2014-07-15 | Cisco Technology, Inc | Ethernet performance monitoring |
US7957295B2 (en) * | 2007-11-02 | 2011-06-07 | Cisco Technology, Inc. | Ethernet performance monitoring |
US20110228679A1 (en) * | 2007-11-02 | 2011-09-22 | Vishnu Kant Varma | Ethernet performance monitoring |
WO2009114558A3 (en) * | 2008-03-13 | 2009-12-23 | Cisco Technology, Inc. | Server selection for fouting content to a client using application layer redirection |
CN101971597A (en) * | 2008-03-13 | 2011-02-09 | 思科技术公司 | Stream server selection based on feedback information from a client |
CN101971597B (en) * | 2008-03-13 | 2013-10-09 | 思科技术公司 | Stream server selection based on feedback information from a client |
US20090234968A1 (en) * | 2008-03-13 | 2009-09-17 | Cisco Technology, Inc. | Server selection for routing content to a client using application layer redirection |
US8667175B2 (en) | 2008-03-13 | 2014-03-04 | Cisco Technology, Inc. | Server selection for routing content to a client using application layer redirection |
US20100094592A1 (en) * | 2008-04-25 | 2010-04-15 | Ludmila Cherkasova | Using Application Performance Signatures For Characterizing Application Updates |
US8224624B2 (en) | 2008-04-25 | 2012-07-17 | Hewlett-Packard Development Company, L.P. | Using application performance signatures for characterizing application updates |
US20090307347A1 (en) * | 2008-06-08 | 2009-12-10 | Ludmila Cherkasova | Using Transaction Latency Profiles For Characterizing Application Updates |
US20100005189A1 (en) * | 2008-07-02 | 2010-01-07 | International Business Machines Corporation | Pacing Network Traffic Among A Plurality Of Compute Nodes Connected Using A Data Communications Network |
US8140704B2 (en) * | 2008-07-02 | 2012-03-20 | International Busniess Machines Corporation | Pacing network traffic among a plurality of compute nodes connected using a data communications network |
TWI411276B (en) * | 2008-09-26 | 2013-10-01 | Qualcomm Inc | Session initiation protocol registration with ping |
US11949729B2 (en) | 2009-10-08 | 2024-04-02 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11811848B2 (en) | 2009-10-08 | 2023-11-07 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11956299B2 (en) | 2009-10-08 | 2024-04-09 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11838119B2 (en) | 2009-10-08 | 2023-12-05 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11770435B2 (en) | 2009-10-08 | 2023-09-26 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11962636B2 (en) | 2009-10-08 | 2024-04-16 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11811849B2 (en) | 2009-10-08 | 2023-11-07 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11876853B2 (en) | 2009-10-08 | 2024-01-16 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11916993B2 (en) | 2009-10-08 | 2024-02-27 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11811850B2 (en) | 2009-10-08 | 2023-11-07 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11888922B2 (en) | 2009-10-08 | 2024-01-30 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11902351B2 (en) | 2009-10-08 | 2024-02-13 | Bright Data Ltd. | System providing faster and more efficient data communication |
US11888921B2 (en) | 2009-10-08 | 2024-01-30 | Bright Data Ltd. | System providing faster and more efficient data communication |
US8996699B2 (en) * | 2009-12-17 | 2015-03-31 | Amazon Technologies, Inc. | Modifying network site behavior using session-level performance metrics |
US9531613B2 (en) | 2009-12-17 | 2016-12-27 | Amazon Technologies, Inc. | Modifying network site behavior using session-level performance metrics |
US20120072570A1 (en) * | 2009-12-17 | 2012-03-22 | Jenkins Jonathan A | Modifying Network Site Behavior |
US20110170537A1 (en) * | 2010-01-08 | 2011-07-14 | Marius Ungureanu | One Way and Round Trip Delays Using Telephony In-Band Tones |
US8898678B2 (en) | 2010-04-14 | 2014-11-25 | International Business Machines Corporation | Runtime optimization of an application executing on a parallel computer |
US8893150B2 (en) | 2010-04-14 | 2014-11-18 | International Business Machines Corporation | Runtime optimization of an application executing on a parallel computer |
US9183560B2 (en) | 2010-05-28 | 2015-11-10 | Daniel H. Abelow | Reality alternate |
US11222298B2 (en) | 2010-05-28 | 2022-01-11 | Daniel H. Abelow | User-controlled digital environment across devices, places, and times with continuous, variable digital boundaries |
US9053226B2 (en) | 2010-07-30 | 2015-06-09 | International Business Machines Corporation | Administering connection identifiers for collective operations in a parallel computer |
US8582466B2 (en) | 2010-08-27 | 2013-11-12 | Ixia | Flow statistics aggregation |
US8310942B2 (en) | 2010-08-27 | 2012-11-13 | Ixia | Flow statistics aggregation |
US8730826B2 (en) | 2010-11-17 | 2014-05-20 | Ixia | Testing fragment reassembly |
US8571032B2 (en) | 2010-11-17 | 2013-10-29 | Ixia | Testing packet fragmentation |
US9246861B2 (en) | 2011-01-05 | 2016-01-26 | International Business Machines Corporation | Locality mapping in a distributed processing system |
US8649285B2 (en) | 2011-01-12 | 2014-02-11 | Ixia | Tracking packet sequence numbers |
US9607116B2 (en) | 2011-01-14 | 2017-03-28 | International Business Machines Corporation | Distributed hardware device simulation |
US9317637B2 (en) | 2011-01-14 | 2016-04-19 | International Business Machines Corporation | Distributed hardware device simulation |
US8689228B2 (en) | 2011-07-19 | 2014-04-01 | International Business Machines Corporation | Identifying data communications algorithms of all other tasks in a single collective operation in a distributed processing system |
US9229780B2 (en) | 2011-07-19 | 2016-01-05 | International Business Machines Corporation | Identifying data communications algorithms of all other tasks in a single collective operation in a distributed processing system |
US20130050737A1 (en) * | 2011-08-31 | 2013-02-28 | Brother Kogyo Kabushiki Kaisha | Image processing device, image processing system, and printing device |
US9007628B2 (en) * | 2011-08-31 | 2015-04-14 | Brother Kogyo Kabushiki Kaisha | Image processing device configured to reacquire data based on reference information |
US9250948B2 (en) | 2011-09-13 | 2016-02-02 | International Business Machines Corporation | Establishing a group of endpoints in a parallel computer |
US9250949B2 (en) | 2011-09-13 | 2016-02-02 | International Business Machines Corporation | Establishing a group of endpoints to support collective operations without specifying unique identifiers for any endpoints |
US9794152B2 (en) | 2012-06-19 | 2017-10-17 | Verizon Digital Media Services Inc. | Systems and methods for performing localized server-side monitoring in a content delivery network |
US8959212B2 (en) | 2012-06-19 | 2015-02-17 | Edgecast Networks, Inc. | Systems and methods for performing localized server-side monitoring in a content delivery network |
US8626910B1 (en) | 2012-06-19 | 2014-01-07 | Edgecast Networks, Inc. | Systems and methods for performing localized server-side monitoring in a content delivery network |
US8667133B2 (en) * | 2012-08-02 | 2014-03-04 | Yahoo! Inc. | Methods and systems for determining the effect of a host on network latency while delivering online ADS |
US9178790B2 (en) | 2012-08-06 | 2015-11-03 | Ixia | Methods, systems, and computer readable media for controlling Tx and Rx throughput over TCP |
US9178823B2 (en) | 2012-12-12 | 2015-11-03 | Ixia | Methods, systems, and computer readable media for generating simulated network traffic using different traffic flows and maintaining a configured distribution of traffic between the different traffic flows and a device under test |
US9397901B2 (en) | 2012-12-18 | 2016-07-19 | Ixia | Methods, systems, and computer readable media for classifying application traffic received at a network traffic emulation device that emulates multiple application servers |
US9264340B2 (en) | 2013-03-15 | 2016-02-16 | Ixia | Methods, systems, and computer readable media for misdirected packet drill down and negative packet capture at a network test device |
US9094336B2 (en) | 2013-03-15 | 2015-07-28 | Ixia | Methods, systems, and computer readable media for assisting with the debugging of conditions associated with the processing of test packets by a device under test |
US9116873B2 (en) | 2013-03-21 | 2015-08-25 | Ixia | Methods, systems, and computer readable media for adjusting load at a device under test |
WO2014168936A1 (en) * | 2013-04-10 | 2014-10-16 | Ho Lap-Wah Lawrence | Method and apparatus for processing composite web transactions |
US9578125B2 (en) * | 2013-05-07 | 2017-02-21 | Verisign, Inc. | Systems, devices, and methods for protecting access privacy of cached content |
US20140337460A1 (en) * | 2013-05-07 | 2014-11-13 | Verisign, Inc. | Systems, devices, and methods for protecting access privacy of cached content |
US20140379902A1 (en) * | 2013-06-19 | 2014-12-25 | Cedexis Inc. | Confidence scoring of device reputation based on characteristic network behavior |
WO2014205060A1 (en) * | 2013-06-19 | 2014-12-24 | Cedexis, Inc. | Confidence scoring of device reputation based on characteristic network behavior |
US10320628B2 (en) * | 2013-06-19 | 2019-06-11 | Citrix Systems, Inc. | Confidence scoring of device reputation based on characteristic network behavior |
US11902400B2 (en) | 2013-08-28 | 2024-02-13 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11758018B2 (en) | 2013-08-28 | 2023-09-12 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11979475B2 (en) | 2013-08-28 | 2024-05-07 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11838388B2 (en) | 2013-08-28 | 2023-12-05 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11838386B2 (en) | 2013-08-28 | 2023-12-05 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11799985B2 (en) | 2013-08-28 | 2023-10-24 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11949756B2 (en) | 2013-08-28 | 2024-04-02 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11949755B2 (en) | 2013-08-28 | 2024-04-02 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11924307B2 (en) | 2013-08-28 | 2024-03-05 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11924306B2 (en) | 2013-08-28 | 2024-03-05 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11870874B2 (en) | 2013-08-28 | 2024-01-09 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US20150281261A1 (en) * | 2014-03-26 | 2015-10-01 | International Business Machines Corporation | Detecting proxy-based communications |
US10324749B2 (en) * | 2014-06-18 | 2019-06-18 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US9983895B2 (en) * | 2014-06-18 | 2018-05-29 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US20160259662A1 (en) * | 2014-06-18 | 2016-09-08 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US9411626B2 (en) * | 2014-06-18 | 2016-08-09 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US10228960B2 (en) * | 2014-06-18 | 2019-03-12 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US20150370594A1 (en) * | 2014-06-18 | 2015-12-24 | International Business Machines Corporation | Optimizing runtime performance of an application workload by minimizing network input/output communications between virtual machines on different clouds in a hybrid cloud topology during cloud bursting |
US9800482B2 (en) | 2015-04-29 | 2017-10-24 | Ixia | Signature-based latency extraction systems and related methods for network packet communications |
US9985865B2 (en) | 2015-07-29 | 2018-05-29 | International Business Machines Corporation | Detecting proxy-based communications |
US9954759B2 (en) | 2015-07-29 | 2018-04-24 | International Business Machines Corporation | Detecting proxy-based communications |
US10178015B2 (en) | 2016-03-21 | 2019-01-08 | Keysight Technologies Singapore (Holdings) Pte. Ltd. | Methods, systems, and computer readable media for testing network equipment devices using connectionless protocols |
US10193773B2 (en) | 2016-11-09 | 2019-01-29 | Keysight Technologies Singapore (Holdings) Pte. Ltd. | Methods, systems, and computer readable media for distributed network packet statistics collection in a test environment |
US10109198B2 (en) * | 2017-03-08 | 2018-10-23 | GM Global Technology Operations LLC | Method and apparatus of networked scene rendering and augmentation in vehicular environments in autonomous driving systems |
US10412616B1 (en) | 2017-07-11 | 2019-09-10 | Sprint Communications Company, L.P. | Equalized data latency for user applications in a wireless data network |
US11757674B2 (en) | 2017-08-28 | 2023-09-12 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11876612B2 (en) | 2017-08-28 | 2024-01-16 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11863339B2 (en) | 2017-08-28 | 2024-01-02 | Bright Data Ltd. | System and method for monitoring status of intermediate devices |
US11888638B2 (en) | 2017-08-28 | 2024-01-30 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11764987B2 (en) | 2017-08-28 | 2023-09-19 | Bright Data Ltd. | System and method for monitoring proxy devices and selecting therefrom |
US11888639B2 (en) | 2017-08-28 | 2024-01-30 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11979250B2 (en) | 2017-08-28 | 2024-05-07 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11956094B2 (en) | 2017-08-28 | 2024-04-09 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11902044B2 (en) | 2017-08-28 | 2024-02-13 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11979249B2 (en) | 2017-08-28 | 2024-05-07 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11962430B2 (en) | 2017-08-28 | 2024-04-16 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US11909547B2 (en) | 2017-08-28 | 2024-02-20 | Bright Data Ltd. | System and method for improving content fetching by selecting tunnel devices |
US10764148B2 (en) | 2017-11-29 | 2020-09-01 | Keysight Technologies, Inc. | Methods, systems, and computer readable media for network traffic statistics collection |
US11108675B2 (en) | 2018-10-31 | 2021-08-31 | Keysight Technologies, Inc. | Methods, systems, and computer readable media for testing effects of simulated frame preemption and deterministic fragmentation of preemptable frames in a frame-preemption-capable network |
US11902253B2 (en) | 2019-04-02 | 2024-02-13 | Bright Data Ltd. | System and method for managing non-direct URL fetching service |
US11381464B2 (en) | 2019-11-28 | 2022-07-05 | Keysight Technologies, Inc. | Methods, systems, and computer readable media for implementing a generalized model for defining application state machines |
US11711274B2 (en) * | 2020-02-11 | 2023-07-25 | International Business Machines Corporation | Request response based on a performance value of a server |
US20210250252A1 (en) * | 2020-02-11 | 2021-08-12 | International Business Machines Corporation | Data processing based on response strategy |
US11316948B2 (en) * | 2020-06-25 | 2022-04-26 | Teso LT, UAB | Exit node benchmark feature |
US20220217218A1 (en) * | 2020-06-25 | 2022-07-07 | Teso LT, UAB | Exit node benchmark feature |
US11412062B2 (en) * | 2020-06-25 | 2022-08-09 | Teso LT, UAB | Exit node benchmark feature |
US11140238B1 (en) * | 2020-06-25 | 2021-10-05 | Teso LT, UAB | Exit node benchmark feature |
US11606439B2 (en) | 2020-06-25 | 2023-03-14 | Oxylabs, Uab | Exit node benchmark feature |
US20220407913A1 (en) * | 2021-06-22 | 2022-12-22 | Level 3 Communications, Llc | Network optimization system using latency measurements |
US11689611B2 (en) * | 2021-06-22 | 2023-06-27 | Level 3 Communications, Llc | Network optimization system using server latency measurements |
US11985210B2 (en) | 2022-02-26 | 2024-05-14 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
US11985212B2 (en) | 2023-03-11 | 2024-05-14 | Bright Data Ltd. | System and method for improving internet communication by using intermediate nodes |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6601098B1 (en) | Technique for measuring round-trip latency to computing devices requiring no client-side proxy presence | |
US10778554B2 (en) | Latency measurement in resource requests | |
US6973490B1 (en) | Method and system for object-level web performance and analysis | |
US8135829B2 (en) | Utilizing a single agent on a non-origin node for measuring the roundtrip response time of web pages with embedded HTML frames | |
US8032626B1 (en) | Method and system for monitoring the performance of a distributed application | |
US9436542B2 (en) | Automated network infrastructure test and diagnostic system and method therefor | |
Molina et al. | Web traffic modeling exploiting TCP connections' temporal clustering through HTML-REDUCE | |
US7437451B2 (en) | System and method for collecting desired information for network transactions at the kernel level | |
CN102340554B (en) | Optimal application server selection method and device for domain name system (DNS) | |
US7647418B2 (en) | Real-time streaming media measurement system and method | |
US6697969B1 (en) | Method, system, and program for diagnosing a computer in a network system | |
US6587878B1 (en) | System, method, and program for measuring performance in a network system | |
US7003565B2 (en) | Clickstream data collection technique | |
US7849403B2 (en) | Dynamically updating rendered content | |
US6598048B2 (en) | Distributed system and method for prefetching objects | |
US7441036B2 (en) | Method and system for a debugging utility based on a TCP tunnel | |
US20080183838A1 (en) | Method, system and computer program product for delivering data to a storage buffer assigned to an application | |
US7580365B2 (en) | System and method utilizing a single agent on a non-origin node for measuring the roundtrip response time over a public or private network with HTTP/HTTPS network protocol | |
CN105279156B (en) | Network information communication means and network information browsing apparatus | |
US8478813B2 (en) | Transparent migration of endpoint | |
US20060221851A1 (en) | System and method for measuring the roundtrip response time of network protocols utilizing a single agent on a non-origin node | |
WO2001002932A2 (en) | User activity reporting browser | |
JP3908627B2 (en) | Web page transfer time estimation device, Web page transfer time estimation program, and computer readable recording medium recording Web page transfer time estimation program | |
CA3150383A1 (en) | Web acceleration via learning | |
US20160234324A1 (en) | Information on navigation behavior of web page users |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: IBM CORPORATION, NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CASE, RALPH B.;TOPOL, BRAD B.;REEL/FRAME:010028/0609Effective date: 19990607 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 8 |
|
SULP | Surcharge for late payment |
Year of fee payment: 7 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
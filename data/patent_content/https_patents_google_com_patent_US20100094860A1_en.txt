US20100094860A1 - Indexing online advertisements - Google Patents
Indexing online advertisements Download PDFInfo
- Publication number
- US20100094860A1 US20100094860A1 US12/248,645 US24864508A US2010094860A1 US 20100094860 A1 US20100094860 A1 US 20100094860A1 US 24864508 A US24864508 A US 24864508A US 2010094860 A1 US2010094860 A1 US 2010094860A1
- Authority
- US
- United States
- Prior art keywords
- file
- web page
- web
- advertisements
- scanned
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0277—Online advertisement
Definitions
- This disclosure relates generally to online advertising.
- Online advertising tools provide information about websites (or publishers) and their users to facilitate more effective planning and management of online advertising by advertisers.
- particular online advertising tools provide anonymized information about the demographics (such as age, gender, education, income, etc.) and anonymized online transactions (such as other visited websites) of users of various websites, as well as information about the number of unique visitors each of the websites has, the country reach of the website, and the number of page views the website receives.
- Information about online advertisements (such as format, size, and source) at various websites would be similarly useful to advertisers. The more comprehensive and the more detailed the information about the online advertisements, the more useful the information would be to advertisers.
- FIG. 1 illustrates an example system for indexing online advertisements
- FIG. 2 illustrates an example Document Object Model (DOM) tree
- FIG. 3 illustrates an example architecture for an example computer system
- FIG. 4 illustrates an example method for indexing online advertisements.
- FIG. 1 illustrates an example system 10 for indexing online advertisements.
- System 10 includes a network 12 coupling one or more clients 14 , one or more web servers 16 , one or more advertisement (or ad) servers 18 , and an ad indexing server 20 to each other.
- Each server may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters.
- network 12 is an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a metropolitan area network (MAN), a portion of the Internet, or another network 12 or a combination of two or more such networks 12 .
- VPN virtual private network
- LAN local area network
- WLAN wireless LAN
- WAN wide area network
- MAN metropolitan area network
- the present disclosure contemplates any suitable network 12 .
- One or more links 22 couple a client 14 , a web server 16 , an ad server 18 , or ad indexing server 20 to network 12 .
- one or more links 22 each include one or more wireline, wireless, or optical links 22 .
- one or more links 22 each include an intranet, an extranet, a VPN, a LAN, a WLAN, a WAN, a MAN, a portion of the Internet, or another link 22 or a combination of two or more such links 22 .
- the present disclosure contemplates any suitable links 22 coupling clients 14 , web servers 16 , application server 18 , and ad indexing server 20 to network 12 .
- a client 14 enables a user at client 14 to access web pages hosted by web servers 16 .
- a client 14 may be a desktop computer system, a notebook computer system, or a mobile telephone having a web browser, such as MICROSOFT INTERNET EXPLORER, GOOGLE CHROME or MOZILLA FIREFOX, which, for example, may have one or more add-ons, plug-ins, or other extensions, such as GOOGLE TOOLBAR.
- the present disclosure contemplates any suitable clients 14 .
- a user at client 14 may enter a Uniform Resource Locator (URL) or other address directing the web browser to a web server 16 , and the web browser may generate a Hyper Text Transfer Protocol (HTTP) request and communicate the HTTP request to web server 16 .
- Web server 16 may accept the HTTP request and communicate to client 14 one or more Hyper Text Markup Language (HTML) files responsive to the HTTP request.
- Client 14 may render a web page from the HTML files from web server 16 for presentation to the user.
- HTML Hyper Text Markup Language
- HTML Hyper Text Markup Language
- HTML Hyper Text Markup Language
- HTML Hyper Text Markup Language
- Client 14 may render a web page from the HTML files from web server 16 for presentation to the user.
- the present disclosure contemplates any suitable web page files.
- web pages may render from HTML files, Extensible HyperText Markup Language (XHTML) files, or Extensible Markup Language (XML) files, according to particular needs.
- Such pages may also execute scripts such as, for example and not by way of limitation, those written in JAVASCRIPT, JAVA, MICROSOFT SILVERLIGHT, combinations of markup language and scripts such as AJAX (Asynchronous JAVASCRIPT and XML, and the like.
- AJAX Asynchronous JAVASCRIPT and XML, and the like.
- reference to a web page encompasses one or more corresponding web page files (which a browser may use to render the web page) and vice versa, where appropriate.
- web pages hosted by web servers 16 may be static or dynamic.
- multiple web pages stored together in a common directory at a web server 16 make up a website or a portion of a website.
- reference to a publisher may encompass one or more websites published by the publisher, and vice versa, where appropriate.
- a web page includes one or more elements.
- presented (or rendered) elements of a web page may include static text, static images, animated images, audio, video, interactive text, interactive illustrations, buttons, hyperlinks, or forms. Such elements may each occupy a particular space on the web page when displayed.
- Internal (or hidden) elements of a web page may include, for example and not by way of limitation, comments, meta elements, databases, diagramation and style information, and scripts, such as JAVASCRIPT.
- One or more elements of a web page may be inline frames (IFrames) which enable web developers to embed HTML documents into other HTML documents.
- Irames inline frames
- reference to a document may encompass a web page, where appropriate.
- Reference to an element of a web page may encompass one or more portions of a web page file for rendering the element, and vice versa, where appropriate.
- attributes of an advertisement may include format (such as text, image, video, audio, animation, gadget, etc.); size; web page position (such as top, left, above the fold, below the fold, etc.); inclusion method (such as being included in the HTML file for the web page, being in an IFrame in the HTML file, or being rendered by execution of a script); presentation mode (such as inline, pop-up, pop-under, pre-roll, etc.); destination landing page URL; ad server (such as DOUBLECLICK DART for ADVERTISERS or GOOGLE ADWORDS); expected click-through rate (eCTR); an ad quality score; one or more targeted keywords and/or one or more targeted publishers; and advertiser. Online advertising campaigns (which may encompass multiple advertisements at multiple publishers) may have similar attributes. As described below, particular embodiments collect information about advertisements, such as their attributes, for use by advertisers in the planning and
- a web server 16 includes one or more servers or other computer systems for hosting web pages or particular elements of web pages.
- the present disclosure contemplates any suitable web servers 16 .
- a web server 16 may host HTML files or other file types, or may dynamically create or constitute files upon a request, and communicate them to clients 14 in response to HTTP or other requests from clients 14 .
- a web browser at a client 14 may render a web page from one or more HTML files received from one or more web servers 16 .
- a web server 16 may render a web page and then serve the rendered web page to a client 14 for display.
- the browser or the server rendering the web page may retrieve one or more elements of the web page from one or more web servers 16 or ad servers 18 .
- multiple web servers 16 operated by a single publisher may host elements of web pages of the publisher.
- the publisher may operate one or more first web servers 16 for video, one or more second web servers 16 for text, one or more third web servers 16 for images, and one or more fourth web servers 16 for advertisements.
- Web servers 16 operated by the publisher may serve the domain of the publisher.
- an ad server 18 includes one or more servers or other computer systems for hosting advertisements for inclusion in web pages hosted by web servers 16 .
- the present disclosure contemplates any suitable ad servers 18 .
- Ad serving platforms for publishers operating ad servers 18 include, for example and without limitation, DOUBLECLICK DART for PUBLISHERS, or GOOGLE ADSENSE.
- a web page may include elements hosted by any combination of web servers 16 and ad servers 18 .
- the web browser may retrieve and load one or more elements of the web page from one or more web servers 16 , as directed by one or more HTML or other files for rendering the web page.
- the web browser may retrieve and load one or more advertisements in the web page from one or more ad servers 16 , similarly as directed by the HTML or other files for rendering the web page.
- Ad indexing server 20 includes one or more computer servers or other computer systems, either centrally located or distributed among multiple locations, for indexing online advertisements, which may include collecting information about online advertisements (such as their attributes) and storing the information as advertisement data 24 .
- ad indexing server 20 includes a hardware, software, or embedded logic components or a combination of two or more such components for carrying out such functionality.
- ad indexing server 20 may include an access engine 26 , an object model engine 28 , a rendering engine 30 , one or more detector engines 32 , and one or more analysis engines 34 , which operate as described below.
- Particular embodiments detect the location of online advertising across the Internet and provide information about the presence of ads on a website, the ad sizes and formats present, as well as the ad servers and networks that are serving ads.
- Particular embodiments may provide more comprehensive information about online ads on the Web, which may be valuable to advertisers using online advertisement tools (such as, for example and without limitation, GOOGLE AD PLANNER) to plan and manage their online advertising campaigns more effectively.
- Online advertisement tools such as, for example and without limitation, GOOGLE AD PLANNER
- Particular embodiments crawl and index as many advertisements and as much advertising inventory on the Internet as practicable.
- particular embodiments may collect information such as the ad format (text/image/video/FLASH/gadget/etc.), size, style, page position, ad network, hosting web page, and perhaps the advertising vendor, as well as reach, frequency, and estimates of cost per thousand impressions (CPM).
- Online advertising tools such as GOOGLE AD PLANNER may use this information to allow their users to filter websites by advertising or networking type to target websites they are more likely to be interested in. This information may also help advertisers track their competitors and their ad campaigns and better direct their own online advertising campaigns. This information may also be used for market research, e.g., for discovering ad company size, ad company reach in different countries, ad company overlap, etc.
- This information may also be used to help detect the underselling of online advertisements.
- Particular embodiments are interested not only in actual advertisements, but also in ad spots in general. For each publisher, particular embodiments attempt to determine what ad sizes, ad styles, and ad formats (text, image, video, widget, etc.) the publisher supports, whether there are ads above or below the fold, and so on. For some uses, even one-bit information, such as information indicating whether a particular website carries ads, is useful for advertisers.
- Access engine 26 includes a hardware, software, or embedded logic component or a combination of two more such components for accessing web pages for ad indexing server 20 .
- Access engine 26 may access web pages in any suitable manner.
- access engine 26 may use a web crawler (such as GOOGLE GOOGLEBOT web crawler) to browse the World Wide Web and access web pages.
- Access engine 26 may “piggyback” on the results of a web crawl performed to build a searchable index of web pages for a search engine, such as GOOGLE SEARCH.
- access engine 26 may access web pages in a web cache or other store of web pages, such as a web cache created for use by a web accelerator, search engine, or web archives
- access engine 26 may capture web pages or advertisements on web pages in real time by using a network of web browsers running on virtual machines.
- access engine 26 may receive web pages from web browsers at clients 14 actively used by a particular user base, preferably in a manner that preserves user anonymity in order to protect the privacy and personally identifiable information of users.
- Each web browser may communicate to access engine 26 web pages loaded by the web browser.
- the web browser may communicate to access engine 26 every web page loaded by the web browser.
- the web browser may communicate only a predetermined percentage of web pages (such as every third web page) loaded by the web browser.
- the web browser may communicate only the first visited web page of every website visited by a user of the web browser.
- a web browser may render the web page and communicate the web page as rendered to access engine 26 .
- the web browser may build an object model (which may be a DOM tree or other object model) of the web page from one or more HTML files for rendering the web page and communicate the object model to access engine 26 .
- the web browser may communicate the one or more HTML files for rendering the web page to access engine 26 .
- the web browser may scan the web page for advertisements, analyze any detected advertisements, and communicate the results of the analysis to access engine 26 .
- the web browser may include one or more detector engines 32 and one or more analysis engines 34 (which are described below) for scanning the web page and analyzing advertisements.
- the functionality for communicating web pages to access engine 20 is in the web browser itself.
- the functionality for communicating web pages to access engine 20 is in an add-on, a plug-in, or another extension to the web browser.
- access engine 26 may receive web pages from network nodes (such as network gateways) connecting clients 14 to web servers 16 and ad servers 18 .
- network nodes operated by an Internet service provider (ISP) may monitor web traffic to and from clients 14 served by the ISP and communicate web pages visited by users at clients 14 to access engine 26 , in such a manner as to preserve user anonymity and individual user's personally identifiable information.
- ISP Internet service provider
- a proxy server may similarly monitor web traffic through the proxy server. The present invention contemplates monitoring web traffic and communicating web pages to access engine 26 in any suitable manner.
- a network node may render the web page and communicate the web page as rendered to access engine 26 .
- the network node may build an object model of the web page from one or more HTML files for rendering the web page and communicate the object model to access engine 26 .
- the network node may communicate the one or more HTML files for rendering the web page to access engine 26 .
- the network node may scan the web page for advertisements, analyze any detected advertisements, and communicate the results of the analysis to access engine 26 .
- the network node may include one or more detector engines 32 and one or more analysis engines 34 (which are described below) for scanning the web page and analyzing advertisements.
- access engine 26 may access web pages, e.g., obtain HTML documents, under varying circumstances, such as from different geographic locations, at different times of day, after visiting different websites and having collected various cookies, etc. Advertisers may use such signals to create usage profiles for location, sex, age, interests, etc., and provide targeted advertisements based on their profiles.
- access engine 26 may communicate the web page to one or more other components of ad indexing server 20 for processing.
- access engine 26 may communicate the web page to object model engine 28 , which may build an object model of the web page for advertisement detection and analysis.
- object model engine 28 may build an object model of the web page for advertisement detection and analysis.
- access engine 26 may communicate the web page to rendering engine 30 , which may fully or partially render the web page, according to particular needs, for advertisement detection and analysis.
- access engine 26 may communicate the object model to one or more detector engines 32 for advertisement detection.
- access engine 26 may communicate the web page as rendered to one or more detector engines 32 for detector engines 32 for advertisement detection.
- access engine 26 may communicate the results for storage as advertisement data 24 .
- Object model engine 28 includes a hardware, software, or embedded logic component or a combination of two more such components for building object models of web pages for advertisement detection and analysis.
- an object model is a collection of descriptions of classes or interfaces, together with their member data, member functions, and class-static operations.
- object model engine 28 accesses an HTML file for rendering a web page and build a DOM tree of the web page.
- a DOM tree is a tree of nodes, with each node representing an element of the web page.
- one node of the DOM tree may represent a header on the web page, another node may represent the main text of the web page, another node may represent a navigation bar on the web page, and so on.
- FIG. 2 illustrates an example DOM tree.
- the DOM tree in FIG. 2 represents the following table from an HTML document:
- a DOM is an application programming interface (API) for documents. It closely resembles the structure of the document it models.
- a DOM models documents using objects, and the model encompasses not only the structure of a document, but also the behavior of a document and the objects it includes.
- reference to an object in a document may encompass an element of the document, and vice versa, where appropriate.
- the nodes in the DOM tree in FIG. 2 do not necessarily represent a data structure; they represent objects which have functions and identities.
- a DOM may identify the interfaces and the objects used to represent and manipulate a document; the semantics of the interfaces and the objects, including behavior and attributes; and the relationships and collaborations among the interfaces and the objects.
- a DOM tree presents a document as a hierarchy of nodes that implement other specialized interfaces. Some nodes may have child nodes of various types, and others may be leaf nodes that cannot have anything below them in the document structure.
- the node types, and which node types they may have as children are as follows:
- a document contains one or more elements having boundaries that are delimited by start-tags and end-tags or, for empty elements, by an empty-element tag.
- Each element has a type, identified by name, and may have a set of attributes.
- Each attribute has a name and a value.
- rendering engine 30 includes a hardware, software, or embedded logic component or a combination of two more such components for fully or partially rendering a web page. Dynamic analysis of a web page by one or more analysis engines 34 may require full or partial rendering of the web page, which rendering engine 30 may provide, according to particular needs.
- rendering engine 30 may retrieve and load one or more elements of the web page (such as, for example, JAVASCRIPT files, IFrames, images, etc.) from one or more web servers 16 or ad servers 18 , as directed by one or more HTML or other files for rendering the web page.
- rendering engine 30 may use an object model of the web page generated by object model engine to render the web page.
- rendering engine 30 generates only headless renderings of web pages, since advertisement detection and analysis does not always require displaying the web pages to human users.
- Detector engines 32 each include a hardware, software, or embedded logic component or a combination of two more such components for scanning web pages for advertisements.
- a detector engine 32 may access an object model of a web page and examine one or more elements of the web page using the object model to determine whether they are advertisements.
- the detection of an advertisement in a web page is heuristic, since it is often the case that no process can know for sure whether an element of a web page is an advertisement without having a human user look at a displayed rendering of the web page.
- To detect advertisements in web pages particular embodiments use heuristics that rely in part on the sources of elements of the web pages. If an element includes link to a target URL or other destination, particular embodiments examine the target of the link.
- Multiple detector engines 32 may scan a web page, with each detector engine 32 being capable of determining whether an element of the web page is an advertisement independent of other detector engines 32 scanning the web page.
- the detector may recognize certain JAVASCRIPT snippets as representing an ad to be inserted, may recognize an image that fits the standard size and tags for a banner ad, or the detector may recognize the content of an IFrame of a rendered web page as matching the format and design of an advertisement.
- particular embodiments may use multiple determinations independently made by multiple detector engines 32 before finally determining whether an element of a web page is an advertisement.
- each detector engine 32 uses a unique algorithm for determining whether an element of a web page is an advertisement, basing its determination on unique criteria.
- a detector engine 32 may look for elements hosted by DOUBLECLICK ad servers 18 .
- the source, e.g., the URL, of an element of a web page may be apparent in the object model of the web page.
- Elements hosted by DOUBLECLICK ad servers 18 are likely to be advertisements.
- First detector engine 32 may determine whether an element is hosted by a DOUBLECLICK ad server 18 by comparing the source of the element with a list of URLs, domains, or domain-name patterns known to correspond to DOUBLECLICK ad servers 18 .
- One or more other detector engines 32 may similarly look for web page elements hosted by ad servers 18 operated by other ad serving companies.
- a detector engine 32 may have a rich collection of regular expressions that match known ad server domains and may flags ads (including images, IFrames, FLASH files, and JAVASCRIPT files) that originate from such domains as ads.
- a detector engine 32 may flag any element, text, image or otherwise, that is part of an ⁇ A HRE F> link to a known ad-redirector or other server that may track clicks on ads.
- Detector engine 32 may include or have access to a list of regular expressions matching a wide number of known ad redirectors.
- a detector engine 32 may flag any element that changes each time the page is reloaded, while remaining fixed in position and size, and heuristically deem the element not to be part of the key content of the web page.
- a detector engine 32 may flag any element that is part of an ⁇ A HREF> link, where the target of the link includes a randomized component generated using JAVASCRIPT code.
- one or more detector engines 32 each return a number indicating a confidence level.
- a mathematical formula may then be used by software at ad indexing server 20 (such as one or more other detector engines 32 or one or more analysis engines 34 ) to aggregate these confidence levels into a global confidence level for the whole web page, for the whole website, or both. Web pages or websites that have an aggregate confidence level higher than a particular threshold (which may be predetermined) may be deemed to contain ads.
- a detector engine 32 may use a heuristic algorithm for detecting advertisements from unknown ad domains. If a web page originates from www.example.com and the web page embeds an image from ad.example.com, detector engine 32 may determine the image is an advertisement, even if the domain ad.example.com is not a known ad server domain. As another example, a detector engine 32 may scan web pages for “advertise here” links on a home page of a website or on internal web pages.
- Detector engine 32 may detect such links with support for multiple variations of the link text, such as “advertise with us,” “advertise on ⁇ website name>,” “your ad here,” etc., plus versions of the same in different languages. As another example, a detector engine 32 may look at the destinations of links in elements of web pages. If a user clicked on or otherwise selected an advertisement on a web page, the link in the advertisement would likely direct the web browser of the user to one or more redirection servers, which count clicks for charging advertisers, that redirect the web browser of the user to a URL of the advertiser.
- detector engine 32 may determine the text is an advertisement, as opposed to a nonadvertisement link on the web page.
- the present disclosure contemplates any suitable detector engines 32 using any suitable algorithms or any suitable criteria for determining whether elements of web pages are advertisements.
- attributes of an advertisement may include format (such as text, image, video, animation, gadget, etc.); size; web page position (such as top, left, above the fold, below the fold, etc.); inclusion method (such as being included in the HTML file for the web page, being in an IFrame in the HTML file, or being rendered by execution of a script); presentation mode (such as inline, pop-up, pop-under, pre-roll, etc.); destination URL (such as www.example.com, etc.); ad server (such as DOUBLECLICK, GOOGLE ADSENSE, etc.); expected click-through rate (eCTR); publisher; and advertiser. Online advertising campaigns (which may encompass multiple advertisements at multiple publishers) may have similar attributes.
- format such as text, image, video, animation, gadget, etc.
- size such as top, left, above the fold, below the fold, etc.
- inclusion method such as being included in the HTML file for the web page, being in an IFrame in the HTML file, or being rendered by execution of a script
- Analysis engines 34 each include a hardware, software, or embedded logic component or a combination of two more such components for determining one or more attributes of an advertisement on a web page.
- An analysis engine 34 may be integral to or separate from one or more detection engines 32 .
- Multiple analysis engines 34 may analyze an advertisement, with each analysis engine being capable of determining one or more particular attributes of the advertisement independent of other analysis engines 34 scanning the web page.
- each analysis engine 34 uses a unique algorithm for determining one or more attributes of an advertisement on a web page.
- an analysis engine 34 may determine one or more attributes of an advertisement on a web page through static analysis, e.g., without rendering the web page, without retrieving any elements of the web page outside the HTML file for the web page (such as IFrames), and without executing any scripts (such as JAVASCRIPT) in the web page. Analysis engine 34 may simply process the “raw” HTML of the web page. As another example, an analysis engine 34 may determine one or more attributes of an advertisement on a web page through dynamic analysis, with a rendering of the web page, retrieval of any elements of the web page outside the HTML file for the web page, and execution of any script in the web page.
- the rendering may be a headless rendering that generates a more accurate and richer HTML tree of the web page, which analysis engine 34 may analyze to determine more attributes of advertisements in the web page.
- Each analysis engine 34 may use a unique analysis algorithm for independently analyzing an advertisement.
- each analysis engine 34 may be optimized for one or more particular methods of embedding advertisements, according to particular needs.
- a complete HTML tree can be achieved only after some processing of the raw HTML, e.g., executing any JAVASCRIPT embedded in the page, executing any JAVASCRIPT loaded by the web page but not embedded in it, and loading any IFrames.
- Each IFrame is an HTML tree in its own right, embedded in the “main” HTML tree of the web page; deep recursion is possible with IFrames. Analysis is possible without obtaining the complete HTML tree, but the analysis will be less complete. Analysis of the raw HTML is “static” analysis, since it requires no fetching of additional data. Analysis of the complete HTML tree is “dynamic” analysis, since external JAVASCRIPT, IFrame, and image files must be fetched.
- a detector engine 32 determines that a web page includes an IFrame or an external JAVASCRIPT file from a known ad server domain (or a heuristically detected ad server domain) and the IFrame or external JAVASCRIPT is therefore an advertisement, information about the ad type (image, text, etc.), ad size, and several other ad attributes may be unavailable.
- a detector engine 32 determines that a web page includes an IFrame or an external JAVASCRIPT file from a known ad server domain (or a heuristically detected ad server domain) and the IFrame or external JAVASCRIPT is therefore an advertisement, information about the ad type (image, text, etc.), ad size, and several other ad attributes may be unavailable.
- ad type image, text, etc.
- ad size e.g., ad size
- Particular embodiments may do this by running a modified version of a rendering engine (such as rendering engine 30 ) of a real web browser, so that the tree is built but nothing is displayed, as with a headless rendering.
- a rendering engine such as rendering engine 30
- particular embodiments may run a browser in a virtual machine (where the page renders but the display output is discarded) or using a “fake” video driver or video server, such as X Virtual Frame Buffer (XVFB).
- XVFB X Virtual Frame Buffer
- an analysis engine 34 may analyze the advertisement itself for extracting additional data, including the ad size and destination URLs (in FLASH ads).
- An analysis engine 34 may extract text from the advertisement (which may be possible for text ads and for FLASH ads with text and may, with the use of optical character recognition (OCR), be possible for images and FLASH ads).
- OCR optical character recognition
- Analysis engine 34 may use the extracted text to find URLs and domain names, as well as keywords that are relevant for analyzing, classifying or understanding the ad.
- static analysis may involve scanning a web cache for ad servers 18 present in each website based on server-specific HTML patterns. Such analysis may determine ad server and ad size for advertisements on web pages in the web cache. In particular embodiments, such analysis may sometimes identify advertisers, but rarely identify specific advertising campaigns.
- static analysis may involve scanning the clickstreams of web browser add-ons, plug-ins, or other extensions, such as GOOGLE TOOLBAR. As an example, a pattern in a log may indicate that a user on web page P is directed (via a link) to web page S.
- Web page S may be a known redirection server for an ad-serving domain (such as ads.DOUBLECLICK.com) and may redirect the user to website A.
- Static analysis by an analysis engine 34 may therefore determine that P is a publisher running ads for advertiser A in server S. Scanning the clickstreams of web browser extensions may also enable determination of the CTR of a publisher, but not necessarily the CTR of ads or ad servers 18 , since static analysis does not indicate which ads were shown.
- server-side dynamic analysis may use a farm of computer systems running browsers in virtual machines. Such analysis may provide exact ad size and location. Particular embodiments may avoid following links in advertisements in web pages, as doing so may generate click spam.
- client-side dynamic analysis may use ad detection and reporting features in web browser add-ons, plug-ins, or other extensions. Such analysis may enable determination of CTR by counting the relative numbers of clicks by users. To determine advertiser or ad campaign, OCR may result in negative performance impact at the client machine, but the client machine may report an image hash for comparison to images of known advertisements.
- ad indexing server 20 may aggregate data about advertisements by website.
- ad indexing server 20 may analyze web pages of a website as described above and then generate statistics across the web pages for the website in general. Such statistics may include “website A has an average of X advertisements per web page, Y percent of the advertisements use Z ad servers, and the distribution between the ad servers is M percent DOUBLECLICK and N percent GOOGLE ADSENSE.
- the present invention contemplates any suitable statistics.
- aggregating data about advertisements by website may facilitate detection of false positives indicating web page elements are advertisements, when in fact they are not.
- Ad indexing server 20 may include one or more aggregation engines, which may include one or more hardware, software, or embedded logic components for aggregating data about advertisements by website.
- a detector engine 32 may determine whether an element is an advertisement by determining whether the element includes a link to an ad server.
- a webmaster or web designer may want to track how users use specific links in a website.
- a website may have an “about us” link at the bottom of every web page.
- the website may include a mechanism for tracking clicks on those links, but the mechanism may be similar to mechanisms for tracking clicks on advertisements.
- a detector engine 32 may determine that many (or even all) web pages of a web site have the same link with the same text and therefore determine that the element is not an advertisement, but a link that the website is tracking internally. This is another example of a potential false positive indicating web page elements are advertisements when in fact they are not. Aggregating data about advertisements across a website may help reduce the occurrence of such false positives.
- FIG. 3 illustrates an example architecture 40 for an example computer system.
- clients 14 , web servers 16 , ad servers 18 , and ad indexing server 20 may each include one or more suitable computer systems for carrying out their respective functionality.
- FIG. 3 illustrates a particular architecture 40 , clients 14 , web servers 16 , ad servers 18 , and ad indexing server 20 may include any suitable architectures for carrying out their respective functionality.
- Architecture 40 may include one or more buses 42 , one or more processors 44 , main memory 46 , a mass storage device 50 , one or more input devices 52 , one or more output devices 54 , and one or more communication interfaces 56 .
- Bus 42 may include one or more conductors (such as for example copper traces in a printed circuit board (PCB)) providing electrical paths between or among components of the computer system enabling the components to communicate with each other.
- bus 42 may include one or more fibers providing optical paths between or among components of the computer system enabling the components to communication with each other.
- a motherboard and one or more daughterboards may provide one or more portions of bus 42 .
- One or more peripheral buses for expansions to the motherboard or the daughterboards may provide one or more other portions of bus 42 .
- the present disclosure encompasses any suitable bus 42 .
- Processor 44 may include any suitable processor or microprocessor for interpreting and executing instructions.
- processor 44 may include an integrated circuit (IC) containing a central processing unit (CPU) with one or more processing cores.
- Main memory 46 may include volatile or other memory directly accessible to processor 44 for storing instructions or data that processor 44 is currently executing or using.
- main memory 46 may include one or more ICs containing random access memory (RAM), such as dynamic RAM (DRAM) or static RAM (SRAM).
- Mass storage device 50 may include persistent memory for storing instructions or data for execution or use by processor 44 .
- mass storage device 50 may include one or more hard disk drives (HDDs) for storing firmware, an operating system (OS), and software for applications that the OS may host for the computer system.
- HDDs hard disk drives
- Example applications that may run at the computer system include a web browser or a sniffer, which may analyze data packets received by the computer system.
- One or more of the HDDs may be magnetic or optical, according to particular needs.
- Mass storage device 50 may include one or more drives for removable optical or magnetic discs, such as compact disc read-only memory (CD-ROM).
- CD-ROM compact disc read-only memory
- Input devices 52 may include one or more devices enabling a user to provide input to the computer system.
- Example input devices 52 include a keyboard and a mouse.
- the present disclosure contemplates any suitable combination of any suitable input devices 52 .
- Output devices 54 may include one or more devices for providing output to a user.
- Example output devices include a monitor, speakers, and a printer.
- the present disclosure contemplates any suitable combination of any suitable output devices 54 .
- Communication interface 56 may include one or more components enabling the computer system to communicate with other computer systems. As an example and not by way of limitation, communication interface 56 may include one or more components for communicating with another computer system via network 12 or one or more links 22 .
- the computer system having architecture 40 may provide functionality as a result of processor 44 executing software embodied in one or more tangible, computer-readable media, such as main memory 46 .
- a computer-readable medium may include one or more memory devices, according to particular needs.
- Main memory 46 may read the software from one or more other computer-readable media, such as mass storage device 50 or from one or more other sources via communication interface 56 .
- the software may cause processor 44 to execute particular processes or particular steps of particular processes described herein.
- the computer system may provide functionality as a result of logic hardwired or otherwise embodied in a circuit, which may operate in place of or together with software to execute particular processes or particular steps of particular processes described herein.
- Reference to software may encompass logic, and vice versa, where appropriate.
- Reference to a computer-readable media may encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate.
- IC integrated circuit
- the present disclosure encompasses any suitable combination of hardware and software.
- FIG. 4 illustrates an example method for indexing online advertisements.
- the method begins at step 100 , where access engine 26 accesses a file for rendering a web page.
- access engine 26 may access web pages in any suitable manner.
- access engine 26 may use a web crawler (such as GOOGLEBOT) to browse the World Wide Web and access web pages.
- Access engine 26 may “piggyback” on the results of a web crawl performed to build a searchable index of web pages for a search engine, such as GOOGLE SEARCH.
- access engine 26 may access web pages in a web cache or other store of web pages, such as a web cache created for use by a web accelerator.
- access engine 26 may capture web pages or advertisements on web pages in real time by using a farm of web browsers running on virtual machines.
- object model engine 28 builds an object model of the web page.
- the object model may be a DOM tree of the web page.
- one or more detector engines 32 scan the object model for elements that represent advertisements.
- multiple detector engines 32 may scan a web page, with each detector engine 32 being capable of determining whether an element of the web page is an advertisement independent of other detector engines 32 scanning the web page.
- particular embodiments may use multiple determinations independently made by multiple detector engines 32 before finally determining whether an element of a web page is an advertisement.
- each detector engine 32 uses a unique algorithm for determining whether an element of a web page is an advertisement, basing its determination on unique criteria.
- one or more analysis engines 34 analyze the scanned elements that represent advertisements to determine one or more attributes of the advertisements.
- an analysis engine 34 may determine one or more attributes of an advertisement on a web page through static analysis, e.g., without rendering the web page, without retrieving any elements of the web page outside the HTML file for the web page (such as IFrames), and without executing any scripts (such as JAVASCRIPT) in the web page.
- an analysis engine 34 may determine one or more attributes of an advertisement on a web page through dynamic analysis, with a rendering of the web page, retrieval of any elements of the web page outside the HTML file for the web page, and execution of any script in the web page.
- the rendering may be a headless rendering.
- ad indexing server 20 stores the results of the analyses as advertising data, at which point the method ends.
- the method illustrated in FIG. 3 may repeat for multiple web pages across multiple websites to build a more comprehensive index of online advertisements, according to particular needs.
- particular components of system 10 are described as carrying out particular steps of the method of FIG. 3
- the present invention contemplates any suitable components carrying out any suitable steps of the method of FIG. 3 .
- particular steps of the method of FIG. 3 are described and illustrates as occurring in a particular order, the present invention contemplates any suitable steps of the method of FIG. 3 occurring in any suitable order.
Abstract
Description
- This disclosure relates generally to online advertising.
- Online advertising tools provide information about websites (or publishers) and their users to facilitate more effective planning and management of online advertising by advertisers. For example, particular online advertising tools provide anonymized information about the demographics (such as age, gender, education, income, etc.) and anonymized online transactions (such as other visited websites) of users of various websites, as well as information about the number of unique visitors each of the websites has, the country reach of the website, and the number of page views the website receives. Information about online advertisements (such as format, size, and source) at various websites would be similarly useful to advertisers. The more comprehensive and the more detailed the information about the online advertisements, the more useful the information would be to advertisers.
-
FIG. 1 illustrates an example system for indexing online advertisements; -
FIG. 2 illustrates an example Document Object Model (DOM) tree; -
FIG. 3 illustrates an example architecture for an example computer system; and -
FIG. 4 illustrates an example method for indexing online advertisements. -
FIG. 1 illustrates anexample system 10 for indexing online advertisements.System 10 includes anetwork 12 coupling one ormore clients 14, one ormore web servers 16, one or more advertisement (or ad)servers 18, and anad indexing server 20 to each other. Each server may be a unitary server or may be a distributed server spanning multiple computers or multiple datacenters. In particular embodiments,network 12 is an intranet, an extranet, a virtual private network (VPN), a local area network (LAN), a wireless LAN (WLAN), a wide area network (WAN), a metropolitan area network (MAN), a portion of the Internet, or anothernetwork 12 or a combination of two or moresuch networks 12. The present disclosure contemplates anysuitable network 12. One ormore links 22 couple aclient 14, aweb server 16, anad server 18, orad indexing server 20 tonetwork 12. In particular embodiments, one ormore links 22 each include one or more wireline, wireless, oroptical links 22. In particular embodiments, one ormore links 22 each include an intranet, an extranet, a VPN, a LAN, a WLAN, a WAN, a MAN, a portion of the Internet, or anotherlink 22 or a combination of two or moresuch links 22. The present disclosure contemplates anysuitable links 22coupling clients 14,web servers 16,application server 18, andad indexing server 20 tonetwork 12. - In particular embodiments, a
client 14 enables a user atclient 14 to access web pages hosted byweb servers 16. As an example and not by way of limitation, aclient 14 may be a desktop computer system, a notebook computer system, or a mobile telephone having a web browser, such as MICROSOFT INTERNET EXPLORER, GOOGLE CHROME or MOZILLA FIREFOX, which, for example, may have one or more add-ons, plug-ins, or other extensions, such as GOOGLE TOOLBAR. The present disclosure contemplates anysuitable clients 14. A user atclient 14 may enter a Uniform Resource Locator (URL) or other address directing the web browser to aweb server 16, and the web browser may generate a Hyper Text Transfer Protocol (HTTP) request and communicate the HTTP request toweb server 16.Web server 16 may accept the HTTP request and communicate toclient 14 one or more Hyper Text Markup Language (HTML) files responsive to the HTTP request.Client 14 may render a web page from the HTML files fromweb server 16 for presentation to the user. The present disclosure contemplates any suitable web page files. As an example and not by way of limitation, web pages may render from HTML files, Extensible HyperText Markup Language (XHTML) files, or Extensible Markup Language (XML) files, according to particular needs. Such pages may also execute scripts such as, for example and not by way of limitation, those written in JAVASCRIPT, JAVA, MICROSOFT SILVERLIGHT, combinations of markup language and scripts such as AJAX (Asynchronous JAVASCRIPT and XML, and the like. Herein, reference to a web page encompasses one or more corresponding web page files (which a browser may use to render the web page) and vice versa, where appropriate. - The present disclosure contemplates any suitable web pages. As an example and not by way of limitation, web pages hosted by
web servers 16 may be static or dynamic. In particular embodiments, multiple web pages stored together in a common directory at aweb server 16 make up a website or a portion of a website. Herein, reference to a publisher may encompass one or more websites published by the publisher, and vice versa, where appropriate. In particular embodiments, a web page includes one or more elements. As an example and not by way of limitation, presented (or rendered) elements of a web page may include static text, static images, animated images, audio, video, interactive text, interactive illustrations, buttons, hyperlinks, or forms. Such elements may each occupy a particular space on the web page when displayed. Internal (or hidden) elements of a web page may include, for example and not by way of limitation, comments, meta elements, databases, diagramation and style information, and scripts, such as JAVASCRIPT. One or more elements of a web page may be inline frames (IFrames) which enable web developers to embed HTML documents into other HTML documents. Herein, reference to a document may encompass a web page, where appropriate. Reference to an element of a web page may encompass one or more portions of a web page file for rendering the element, and vice versa, where appropriate. - One or more elements of a web page may be advertisements. In particular embodiments, an advertisement has various attributes. As an example and not by way of limitation, attributes of an advertisement may include format (such as text, image, video, audio, animation, gadget, etc.); size; web page position (such as top, left, above the fold, below the fold, etc.); inclusion method (such as being included in the HTML file for the web page, being in an IFrame in the HTML file, or being rendered by execution of a script); presentation mode (such as inline, pop-up, pop-under, pre-roll, etc.); destination landing page URL; ad server (such as DOUBLECLICK DART for ADVERTISERS or GOOGLE ADWORDS); expected click-through rate (eCTR); an ad quality score; one or more targeted keywords and/or one or more targeted publishers; and advertiser. Online advertising campaigns (which may encompass multiple advertisements at multiple publishers) may have similar attributes. As described below, particular embodiments collect information about advertisements, such as their attributes, for use by advertisers in the planning and management of their online advertising. Particular embodiments similarly collect information about online advertising campaigns.
- In particular embodiments, a
web server 16 includes one or more servers or other computer systems for hosting web pages or particular elements of web pages. The present disclosure contemplates anysuitable web servers 16. As described above, aweb server 16 may host HTML files or other file types, or may dynamically create or constitute files upon a request, and communicate them toclients 14 in response to HTTP or other requests fromclients 14. In particular embodiments, a web browser at aclient 14 may render a web page from one or more HTML files received from one ormore web servers 16. In particular embodiments, aweb server 16 may render a web page and then serve the rendered web page to aclient 14 for display. When a web page renders, the browser or the server rendering the web page may retrieve one or more elements of the web page from one ormore web servers 16 orad servers 18. As an example,multiple web servers 16 operated by a single publisher may host elements of web pages of the publisher. For example, the publisher may operate one or morefirst web servers 16 for video, one or moresecond web servers 16 for text, one or morethird web servers 16 for images, and one or morefourth web servers 16 for advertisements.Web servers 16 operated by the publisher may serve the domain of the publisher. In particular embodiments, anad server 18 includes one or more servers or other computer systems for hosting advertisements for inclusion in web pages hosted byweb servers 16. The present disclosure contemplates anysuitable ad servers 18. Ad serving platforms for publishers operatingad servers 18, include, for example and without limitation, DOUBLECLICK DART for PUBLISHERS, or GOOGLE ADSENSE. A web page may include elements hosted by any combination ofweb servers 16 andad servers 18. When a web browser at aclient 14 renders a web page, the web browser may retrieve and load one or more elements of the web page from one ormore web servers 16, as directed by one or more HTML or other files for rendering the web page. The web browser may retrieve and load one or more advertisements in the web page from one ormore ad servers 16, similarly as directed by the HTML or other files for rendering the web page. - Ad indexing
server 20 includes one or more computer servers or other computer systems, either centrally located or distributed among multiple locations, for indexing online advertisements, which may include collecting information about online advertisements (such as their attributes) and storing the information asadvertisement data 24. In particular embodiments,ad indexing server 20 includes a hardware, software, or embedded logic components or a combination of two or more such components for carrying out such functionality. As an example and not by way of limitation,ad indexing server 20 may include anaccess engine 26, anobject model engine 28, arendering engine 30, one ormore detector engines 32, and one ormore analysis engines 34, which operate as described below. - Particular embodiments detect the location of online advertising across the Internet and provide information about the presence of ads on a website, the ad sizes and formats present, as well as the ad servers and networks that are serving ads. Particular embodiments may provide more comprehensive information about online ads on the Web, which may be valuable to advertisers using online advertisement tools (such as, for example and without limitation, GOOGLE AD PLANNER) to plan and manage their online advertising campaigns more effectively. Particular embodiments crawl and index as many advertisements and as much advertising inventory on the Internet as practicable. For each ad, particular embodiments may collect information such as the ad format (text/image/video/FLASH/gadget/etc.), size, style, page position, ad network, hosting web page, and perhaps the advertising vendor, as well as reach, frequency, and estimates of cost per thousand impressions (CPM). Online advertising tools such as GOOGLE AD PLANNER may use this information to allow their users to filter websites by advertising or networking type to target websites they are more likely to be interested in. This information may also help advertisers track their competitors and their ad campaigns and better direct their own online advertising campaigns. This information may also be used for market research, e.g., for discovering ad company size, ad company reach in different countries, ad company overlap, etc. This information may also be used to help detect the underselling of online advertisements. Particular embodiments are interested not only in actual advertisements, but also in ad spots in general. For each publisher, particular embodiments attempt to determine what ad sizes, ad styles, and ad formats (text, image, video, widget, etc.) the publisher supports, whether there are ads above or below the fold, and so on. For some uses, even one-bit information, such as information indicating whether a particular website carries ads, is useful for advertisers.
-
Access engine 26 includes a hardware, software, or embedded logic component or a combination of two more such components for accessing web pages forad indexing server 20.Access engine 26 may access web pages in any suitable manner. As an example and not by way of limitation,access engine 26 may use a web crawler (such as GOOGLE GOOGLEBOT web crawler) to browse the World Wide Web and access web pages.Access engine 26 may “piggyback” on the results of a web crawl performed to build a searchable index of web pages for a search engine, such as GOOGLE SEARCH. As another example,access engine 26 may access web pages in a web cache or other store of web pages, such as a web cache created for use by a web accelerator, search engine, or web archives As another example,access engine 26 may capture web pages or advertisements on web pages in real time by using a network of web browsers running on virtual machines. - As another example of
access engine 26 accessing web pages forad indexing server 20,access engine 26 may receive web pages from web browsers atclients 14 actively used by a particular user base, preferably in a manner that preserves user anonymity in order to protect the privacy and personally identifiable information of users. Each web browser may communicate to accessengine 26 web pages loaded by the web browser. The web browser may communicate to accessengine 26 every web page loaded by the web browser. As an alternative, the web browser may communicate only a predetermined percentage of web pages (such as every third web page) loaded by the web browser. As another alternative, the web browser may communicate only the first visited web page of every website visited by a user of the web browser. To communicate a web page to accessengine 26, a web browser may render the web page and communicate the web page as rendered to accessengine 26. As an alternative, the web browser may build an object model (which may be a DOM tree or other object model) of the web page from one or more HTML files for rendering the web page and communicate the object model to accessengine 26. As another alternative, the web browser may communicate the one or more HTML files for rendering the web page to accessengine 26. As another alternative, the web browser may scan the web page for advertisements, analyze any detected advertisements, and communicate the results of the analysis to accessengine 26. The web browser may include one ormore detector engines 32 and one or more analysis engines 34 (which are described below) for scanning the web page and analyzing advertisements. In particular embodiments, the functionality for communicating web pages to accessengine 20 is in the web browser itself. In particular embodiments, the functionality for communicating web pages to accessengine 20 is in an add-on, a plug-in, or another extension to the web browser. - As another example of
access engine 26 accessing web pages forad indexing server 20,access engine 26 may receive web pages from network nodes (such as network gateways) connectingclients 14 toweb servers 16 andad servers 18. In particular embodiments, network nodes operated by an Internet service provider (ISP) may monitor web traffic to and fromclients 14 served by the ISP and communicate web pages visited by users atclients 14 to accessengine 26, in such a manner as to preserve user anonymity and individual user's personally identifiable information. In particular embodiments, a proxy server may similarly monitor web traffic through the proxy server. The present invention contemplates monitoring web traffic and communicating web pages to accessengine 26 in any suitable manner. To communicate a web page to accessengine 26, a network node may render the web page and communicate the web page as rendered to accessengine 26. As an alternative, the network node may build an object model of the web page from one or more HTML files for rendering the web page and communicate the object model to accessengine 26. As another alternative, the network node may communicate the one or more HTML files for rendering the web page to accessengine 26. As another alternative, the network node may scan the web page for advertisements, analyze any detected advertisements, and communicate the results of the analysis to accessengine 26. The network node may include one ormore detector engines 32 and one or more analysis engines 34 (which are described below) for scanning the web page and analyzing advertisements. - In particular embodiments, to get a more complete picture of the online advertising landscape,
access engine 26 may access web pages, e.g., obtain HTML documents, under varying circumstances, such as from different geographic locations, at different times of day, after visiting different websites and having collected various cookies, etc. Advertisers may use such signals to create usage profiles for location, sex, age, interests, etc., and provide targeted advertisements based on their profiles. - When
access engine 26 accesses a web page,access engine 26 may communicate the web page to one or more other components ofad indexing server 20 for processing. As an example and not by way of limitation,access engine 26 may communicate the web page to objectmodel engine 28, which may build an object model of the web page for advertisement detection and analysis. As another example,access engine 26 may communicate the web page torendering engine 30, which may fully or partially render the web page, according to particular needs, for advertisement detection and analysis. As another example, ifaccess engine 26 receives the web page in the form of an object model built remotely,access engine 26 may communicate the object model to one ormore detector engines 32 for advertisement detection. As another example, ifaccess engine 26 receives the web page as rendered remotely,access engine 26 may communicate the web page as rendered to one ormore detector engines 32 fordetector engines 32 for advertisement detection. As another example, ifaccess engine 26 receives results of advertisement detection and analysis executed on a web page remotely,access engine 26 may communicate the results for storage asadvertisement data 24. -
Object model engine 28 includes a hardware, software, or embedded logic component or a combination of two more such components for building object models of web pages for advertisement detection and analysis. In particular embodiments, an object model is a collection of descriptions of classes or interfaces, together with their member data, member functions, and class-static operations. In particular embodiments,object model engine 28 accesses an HTML file for rendering a web page and build a DOM tree of the web page. In particular embodiments, a DOM tree is a tree of nodes, with each node representing an element of the web page. As an example and not by way of limitation, one node of the DOM tree may represent a header on the web page, another node may represent the main text of the web page, another node may represent a navigation bar on the web page, and so on.FIG. 2 illustrates an example DOM tree. The DOM tree inFIG. 2 represents the following table from an HTML document: -
<TABLE> <TBODY> <TR> <TD>Shady Grove</TD> <TD>Aeolian</TD> </TR> <TR> <TD>Over the River, Charlie</TD> <TD>Dorian</TD> </TR> </TBODY> </TABLE> - In particular embodiments, a DOM is an application programming interface (API) for documents. It closely resembles the structure of the document it models. A DOM models documents using objects, and the model encompasses not only the structure of a document, but also the behavior of a document and the objects it includes. Herein, reference to an object in a document may encompass an element of the document, and vice versa, where appropriate. The nodes in the DOM tree in
FIG. 2 do not necessarily represent a data structure; they represent objects which have functions and identities. As an object model, a DOM may identify the interfaces and the objects used to represent and manipulate a document; the semantics of the interfaces and the objects, including behavior and attributes; and the relationships and collaborations among the interfaces and the objects. - In particular embodiments, a DOM tree presents a document as a hierarchy of nodes that implement other specialized interfaces. Some nodes may have child nodes of various types, and others may be leaf nodes that cannot have anything below them in the document structure. In particular embodiments, for XML and HTML, the node types, and which node types they may have as children, are as follows:
-
- Document—Element (maximum of one), ProcessingInstruction, Comment, DocumentType
- DocumentFragment—Element, ProcessingInstruction, Comment, Text, CDATASection, EntityReference
- DocumentType—no children
- EntityReference—Element, ProcessingInstruction, Comment, Text, CDATASection, EntityReference
- Element—Element, Text, Comment, ProcessingInstruction, CDATASection, EntityReference
- Attr—Text, EntityReference
- ProcessingInstruction—no children
- Comment—no children
- Text—no children
- CDATASection—no children
- Entity—Element, ProcessingInstruction, Comment, Text, CDATASection, EntityReference
- Notation—no children
- In particular embodiments, a document contains one or more elements having boundaries that are delimited by start-tags and end-tags or, for empty elements, by an empty-element tag. Each element has a type, identified by name, and may have a set of attributes. Each attribute has a name and a value.
- Returning to
FIG. 1 ,rendering engine 30 includes a hardware, software, or embedded logic component or a combination of two more such components for fully or partially rendering a web page. Dynamic analysis of a web page by one ormore analysis engines 34 may require full or partial rendering of the web page, whichrendering engine 30 may provide, according to particular needs. To render a web page,rendering engine 30 may retrieve and load one or more elements of the web page (such as, for example, JAVASCRIPT files, IFrames, images, etc.) from one ormore web servers 16 orad servers 18, as directed by one or more HTML or other files for rendering the web page. In particular embodiments,rendering engine 30 may use an object model of the web page generated by object model engine to render the web page. In particular embodiments,rendering engine 30 generates only headless renderings of web pages, since advertisement detection and analysis does not always require displaying the web pages to human users. -
Detector engines 32 each include a hardware, software, or embedded logic component or a combination of two more such components for scanning web pages for advertisements. As an example and not by way of limitation, adetector engine 32 may access an object model of a web page and examine one or more elements of the web page using the object model to determine whether they are advertisements. In particular embodiments, the detection of an advertisement in a web page is heuristic, since it is often the case that no process can know for sure whether an element of a web page is an advertisement without having a human user look at a displayed rendering of the web page. To detect advertisements in web pages, particular embodiments use heuristics that rely in part on the sources of elements of the web pages. If an element includes link to a target URL or other destination, particular embodiments examine the target of the link. -
Multiple detector engines 32 may scan a web page, with eachdetector engine 32 being capable of determining whether an element of the web page is an advertisement independent ofother detector engines 32 scanning the web page. For example, the detector may recognize certain JAVASCRIPT snippets as representing an ad to be inserted, may recognize an image that fits the standard size and tags for a banner ad, or the detector may recognize the content of an IFrame of a rendered web page as matching the format and design of an advertisement. In addition or as an alternative, particular embodiments may use multiple determinations independently made bymultiple detector engines 32 before finally determining whether an element of a web page is an advertisement. In particular embodiments, eachdetector engine 32 uses a unique algorithm for determining whether an element of a web page is an advertisement, basing its determination on unique criteria. As an example and not by way of limitation, adetector engine 32 may look for elements hosted byDOUBLECLICK ad servers 18. The source, e.g., the URL, of an element of a web page may be apparent in the object model of the web page. Elements hosted byDOUBLECLICK ad servers 18 are likely to be advertisements.First detector engine 32 may determine whether an element is hosted by aDOUBLECLICK ad server 18 by comparing the source of the element with a list of URLs, domains, or domain-name patterns known to correspond toDOUBLECLICK ad servers 18. One or moreother detector engines 32 may similarly look for web page elements hosted byad servers 18 operated by other ad serving companies. Adetector engine 32 may have a rich collection of regular expressions that match known ad server domains and may flags ads (including images, IFrames, FLASH files, and JAVASCRIPT files) that originate from such domains as ads. In particular embodiments, adetector engine 32 may flag any element, text, image or otherwise, that is part of an <A HRE F> link to a known ad-redirector or other server that may track clicks on ads.Detector engine 32 may include or have access to a list of regular expressions matching a wide number of known ad redirectors. In particular embodiments, adetector engine 32 may flag any element that changes each time the page is reloaded, while remaining fixed in position and size, and heuristically deem the element not to be part of the key content of the web page. In particular embodiments, adetector engine 32 may flag any element that is part of an <A HREF> link, where the target of the link includes a randomized component generated using JAVASCRIPT code. In particular embodiments, one ormore detector engines 32 each return a number indicating a confidence level. A mathematical formula may then be used by software at ad indexing server 20 (such as one or moreother detector engines 32 or one or more analysis engines 34) to aggregate these confidence levels into a global confidence level for the whole web page, for the whole website, or both. Web pages or websites that have an aggregate confidence level higher than a particular threshold (which may be predetermined) may be deemed to contain ads. - As another example of a
detector engine 32 using a unique algorithm for determining whether an element of a web page is an advertisement, adetector engine 32 may use a heuristic algorithm for detecting advertisements from unknown ad domains. If a web page originates from www.example.com and the web page embeds an image from ad.example.com,detector engine 32 may determine the image is an advertisement, even if the domain ad.example.com is not a known ad server domain. As another example, adetector engine 32 may scan web pages for “advertise here” links on a home page of a website or on internal web pages.Detector engine 32 may detect such links with support for multiple variations of the link text, such as “advertise with us,” “advertise on <website name>,” “your ad here,” etc., plus versions of the same in different languages. As another example, adetector engine 32 may look at the destinations of links in elements of web pages. If a user clicked on or otherwise selected an advertisement on a web page, the link in the advertisement would likely direct the web browser of the user to one or more redirection servers, which count clicks for charging advertisers, that redirect the web browser of the user to a URL of the advertiser. If a text fragment of a web page leads to a known ad-tracking or redirection server,detector engine 32 may determine the text is an advertisement, as opposed to a nonadvertisement link on the web page. The present disclosure contemplates anysuitable detector engines 32 using any suitable algorithms or any suitable criteria for determining whether elements of web pages are advertisements. - In particular embodiments, if one or
more detector engines 32 determines that an element of a web page is an advertisement, one ormore analysis engines 34 analyze the advertisement to determine one or more attributes of the advertisement. As discussed above, attributes of an advertisement may include format (such as text, image, video, animation, gadget, etc.); size; web page position (such as top, left, above the fold, below the fold, etc.); inclusion method (such as being included in the HTML file for the web page, being in an IFrame in the HTML file, or being rendered by execution of a script); presentation mode (such as inline, pop-up, pop-under, pre-roll, etc.); destination URL (such as www.example.com, etc.); ad server (such as DOUBLECLICK, GOOGLE ADSENSE, etc.); expected click-through rate (eCTR); publisher; and advertiser. Online advertising campaigns (which may encompass multiple advertisements at multiple publishers) may have similar attributes. -
Analysis engines 34 each include a hardware, software, or embedded logic component or a combination of two more such components for determining one or more attributes of an advertisement on a web page. Ananalysis engine 34 may be integral to or separate from one ormore detection engines 32.Multiple analysis engines 34 may analyze an advertisement, with each analysis engine being capable of determining one or more particular attributes of the advertisement independent ofother analysis engines 34 scanning the web page. In particular embodiments, eachanalysis engine 34 uses a unique algorithm for determining one or more attributes of an advertisement on a web page. As an example and not by way of limitation, ananalysis engine 34 may determine one or more attributes of an advertisement on a web page through static analysis, e.g., without rendering the web page, without retrieving any elements of the web page outside the HTML file for the web page (such as IFrames), and without executing any scripts (such as JAVASCRIPT) in the web page.Analysis engine 34 may simply process the “raw” HTML of the web page. As another example, ananalysis engine 34 may determine one or more attributes of an advertisement on a web page through dynamic analysis, with a rendering of the web page, retrieval of any elements of the web page outside the HTML file for the web page, and execution of any script in the web page. The rendering may be a headless rendering that generates a more accurate and richer HTML tree of the web page, whichanalysis engine 34 may analyze to determine more attributes of advertisements in the web page. Eachanalysis engine 34 may use a unique analysis algorithm for independently analyzing an advertisement. Moreover, eachanalysis engine 34 may be optimized for one or more particular methods of embedding advertisements, according to particular needs. - In particular embodiments, a complete HTML tree can be achieved only after some processing of the raw HTML, e.g., executing any JAVASCRIPT embedded in the page, executing any JAVASCRIPT loaded by the web page but not embedded in it, and loading any IFrames. Each IFrame is an HTML tree in its own right, embedded in the “main” HTML tree of the web page; deep recursion is possible with IFrames. Analysis is possible without obtaining the complete HTML tree, but the analysis will be less complete. Analysis of the raw HTML is “static” analysis, since it requires no fetching of additional data. Analysis of the complete HTML tree is “dynamic” analysis, since external JAVASCRIPT, IFrame, and image files must be fetched. As an example an not by way of limitation, with static analysis, if a
detector engine 32 determines that a web page includes an IFrame or an external JAVASCRIPT file from a known ad server domain (or a heuristically detected ad server domain) and the IFrame or external JAVASCRIPT is therefore an advertisement, information about the ad type (image, text, etc.), ad size, and several other ad attributes may be unavailable. For dynamic analysis, particular embodiments must simulate the way a web browser builds a complete HTML tree of a web page. Particular embodiments may do this by running a modified version of a rendering engine (such as rendering engine 30) of a real web browser, so that the tree is built but nothing is displayed, as with a headless rendering. As an alternative, particular embodiments may run a browser in a virtual machine (where the page renders but the display output is discarded) or using a “fake” video driver or video server, such as X Virtual Frame Buffer (XVFB). - To determine one or more attributes of an advertisement, an
analysis engine 34 may analyze the advertisement itself for extracting additional data, including the ad size and destination URLs (in FLASH ads). Ananalysis engine 34 may extract text from the advertisement (which may be possible for text ads and for FLASH ads with text and may, with the use of optical character recognition (OCR), be possible for images and FLASH ads).Analysis engine 34 may use the extracted text to find URLs and domain names, as well as keywords that are relevant for analyzing, classifying or understanding the ad. - In particular embodiments, static analysis may involve scanning a web cache for
ad servers 18 present in each website based on server-specific HTML patterns. Such analysis may determine ad server and ad size for advertisements on web pages in the web cache. In particular embodiments, such analysis may sometimes identify advertisers, but rarely identify specific advertising campaigns. In particular embodiments, static analysis may involve scanning the clickstreams of web browser add-ons, plug-ins, or other extensions, such as GOOGLE TOOLBAR. As an example, a pattern in a log may indicate that a user on web page P is directed (via a link) to web page S. Web page S may be a known redirection server for an ad-serving domain (such as ads.DOUBLECLICK.com) and may redirect the user to website A. Static analysis by ananalysis engine 34 may therefore determine that P is a publisher running ads for advertiser A in server S. Scanning the clickstreams of web browser extensions may also enable determination of the CTR of a publisher, but not necessarily the CTR of ads orad servers 18, since static analysis does not indicate which ads were shown. - In particular embodiments, server-side dynamic analysis may use a farm of computer systems running browsers in virtual machines. Such analysis may provide exact ad size and location. Particular embodiments may avoid following links in advertisements in web pages, as doing so may generate click spam. In particular embodiments, client-side dynamic analysis may use ad detection and reporting features in web browser add-ons, plug-ins, or other extensions. Such analysis may enable determination of CTR by counting the relative numbers of clicks by users. To determine advertiser or ad campaign, OCR may result in negative performance impact at the client machine, but the client machine may report an image hash for comparison to images of known advertisements.
- In particular embodiments,
ad indexing server 20 may aggregate data about advertisements by website. As an example and not by way of limitation,ad indexing server 20 may analyze web pages of a website as described above and then generate statistics across the web pages for the website in general. Such statistics may include “website A has an average of X advertisements per web page, Y percent of the advertisements use Z ad servers, and the distribution between the ad servers is M percent DOUBLECLICK and N percent GOOGLE ADSENSE. The present invention contemplates any suitable statistics. In particular embodiments, aggregating data about advertisements by website may facilitate detection of false positives indicating web page elements are advertisements, when in fact they are not. As an example and not by way of limitation, if a website includes a large number of web pages and very few of the web page have elements thatdetector engines 32 are flagging as advertisements,detectors engines 32 may be generating false positives across the website, which may occur on a discussion board website, where users occasionally post links and the posted links are rarely advertisements.Ad indexing server 20 may include one or more aggregation engines, which may include one or more hardware, software, or embedded logic components for aggregating data about advertisements by website. - As discussed above, a
detector engine 32 may determine whether an element is an advertisement by determining whether the element includes a link to an ad server. A webmaster or web designer may want to track how users use specific links in a website. As an example and not by way of limitation, a website may have an “about us” link at the bottom of every web page. The website may include a mechanism for tracking clicks on those links, but the mechanism may be similar to mechanisms for tracking clicks on advertisements. Adetector engine 32 may determine that many (or even all) web pages of a web site have the same link with the same text and therefore determine that the element is not an advertisement, but a link that the website is tracking internally. This is another example of a potential false positive indicating web page elements are advertisements when in fact they are not. Aggregating data about advertisements across a website may help reduce the occurrence of such false positives. -
FIG. 3 illustrates anexample architecture 40 for an example computer system. In particular embodiments,clients 14,web servers 16,ad servers 18, andad indexing server 20 may each include one or more suitable computer systems for carrying out their respective functionality. AlthoughFIG. 3 illustrates aparticular architecture 40,clients 14,web servers 16,ad servers 18, andad indexing server 20 may include any suitable architectures for carrying out their respective functionality.Architecture 40 may include one ormore buses 42, one ormore processors 44,main memory 46, amass storage device 50, one ormore input devices 52, one ormore output devices 54, and one or more communication interfaces 56.Bus 42 may include one or more conductors (such as for example copper traces in a printed circuit board (PCB)) providing electrical paths between or among components of the computer system enabling the components to communicate with each other. In addition or as an alternative,bus 42 may include one or more fibers providing optical paths between or among components of the computer system enabling the components to communication with each other. A motherboard and one or more daughterboards may provide one or more portions ofbus 42. One or more peripheral buses for expansions to the motherboard or the daughterboards may provide one or more other portions ofbus 42. The present disclosure encompasses anysuitable bus 42. -
Processor 44 may include any suitable processor or microprocessor for interpreting and executing instructions. As an example and not by way of limitation,processor 44 may include an integrated circuit (IC) containing a central processing unit (CPU) with one or more processing cores.Main memory 46 may include volatile or other memory directly accessible toprocessor 44 for storing instructions or data thatprocessor 44 is currently executing or using. As an example and not by way of limitation,main memory 46 may include one or more ICs containing random access memory (RAM), such as dynamic RAM (DRAM) or static RAM (SRAM).Mass storage device 50 may include persistent memory for storing instructions or data for execution or use byprocessor 44. As an example and not by way of limitation,mass storage device 50 may include one or more hard disk drives (HDDs) for storing firmware, an operating system (OS), and software for applications that the OS may host for the computer system. Example applications that may run at the computer system include a web browser or a sniffer, which may analyze data packets received by the computer system. One or more of the HDDs may be magnetic or optical, according to particular needs.Mass storage device 50 may include one or more drives for removable optical or magnetic discs, such as compact disc read-only memory (CD-ROM). -
Input devices 52 may include one or more devices enabling a user to provide input to the computer system.Example input devices 52 include a keyboard and a mouse. The present disclosure contemplates any suitable combination of anysuitable input devices 52.Output devices 54 may include one or more devices for providing output to a user. Example output devices include a monitor, speakers, and a printer. The present disclosure contemplates any suitable combination of anysuitable output devices 54.Communication interface 56 may include one or more components enabling the computer system to communicate with other computer systems. As an example and not by way of limitation,communication interface 56 may include one or more components for communicating with another computer system vianetwork 12 or one ormore links 22. - As an example and not by way of limitation, the computer
system having architecture 40 may provide functionality as a result ofprocessor 44 executing software embodied in one or more tangible, computer-readable media, such asmain memory 46. A computer-readable medium may include one or more memory devices, according to particular needs.Main memory 46 may read the software from one or more other computer-readable media, such asmass storage device 50 or from one or more other sources viacommunication interface 56. The software may causeprocessor 44 to execute particular processes or particular steps of particular processes described herein. In addition or as an alternative, the computer system may provide functionality as a result of logic hardwired or otherwise embodied in a circuit, which may operate in place of or together with software to execute particular processes or particular steps of particular processes described herein. Reference to software may encompass logic, and vice versa, where appropriate. Reference to a computer-readable media may encompass a circuit (such as an integrated circuit (IC)) storing software for execution, a circuit embodying logic for execution, or both, where appropriate. The present disclosure encompasses any suitable combination of hardware and software. -
FIG. 4 illustrates an example method for indexing online advertisements. The method begins atstep 100, whereaccess engine 26 accesses a file for rendering a web page. As described above,access engine 26 may access web pages in any suitable manner. As an example and not by way of limitation,access engine 26 may use a web crawler (such as GOOGLEBOT) to browse the World Wide Web and access web pages.Access engine 26 may “piggyback” on the results of a web crawl performed to build a searchable index of web pages for a search engine, such as GOOGLE SEARCH. As another example,access engine 26 may access web pages in a web cache or other store of web pages, such as a web cache created for use by a web accelerator. As another example,access engine 26 may capture web pages or advertisements on web pages in real time by using a farm of web browsers running on virtual machines. Atstep 102,object model engine 28 builds an object model of the web page. As described above, the object model may be a DOM tree of the web page. Atstep 104, one ormore detector engines 32 scan the object model for elements that represent advertisements. As described above,multiple detector engines 32 may scan a web page, with eachdetector engine 32 being capable of determining whether an element of the web page is an advertisement independent ofother detector engines 32 scanning the web page. In addition or as an alternative, particular embodiments may use multiple determinations independently made bymultiple detector engines 32 before finally determining whether an element of a web page is an advertisement. In particular embodiments, eachdetector engine 32 uses a unique algorithm for determining whether an element of a web page is an advertisement, basing its determination on unique criteria. - At
step 106, one ormore analysis engines 34 analyze the scanned elements that represent advertisements to determine one or more attributes of the advertisements. As described above, ananalysis engine 34 may determine one or more attributes of an advertisement on a web page through static analysis, e.g., without rendering the web page, without retrieving any elements of the web page outside the HTML file for the web page (such as IFrames), and without executing any scripts (such as JAVASCRIPT) in the web page. In addition or as an alternative, ananalysis engine 34 may determine one or more attributes of an advertisement on a web page through dynamic analysis, with a rendering of the web page, retrieval of any elements of the web page outside the HTML file for the web page, and execution of any script in the web page. The rendering may be a headless rendering. Atstep 108,ad indexing server 20 stores the results of the analyses as advertising data, at which point the method ends. The method illustrated inFIG. 3 may repeat for multiple web pages across multiple websites to build a more comprehensive index of online advertisements, according to particular needs. Although particular components ofsystem 10 are described as carrying out particular steps of the method ofFIG. 3 , the present invention contemplates any suitable components carrying out any suitable steps of the method ofFIG. 3 . Moreover, although particular steps of the method ofFIG. 3 are described and illustrates as occurring in a particular order, the present invention contemplates any suitable steps of the method ofFIG. 3 occurring in any suitable order. - The present disclosure encompasses all changes, substitutions, variations, alterations, and modifications to the example embodiments described herein that a person having ordinary skill in the art would comprehend. Similarly, where appropriate, the appended claims encompass all changes, substitutions, variations, alterations, and modifications to the example embodiments described herein that a person having ordinary skill in the art would comprehend.
Claims (47)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/248,645 US20100094860A1 (en) | 2008-10-09 | 2008-10-09 | Indexing online advertisements |
PCT/US2009/005526 WO2010042199A1 (en) | 2008-10-09 | 2009-10-08 | Indexing online advertisements |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/248,645 US20100094860A1 (en) | 2008-10-09 | 2008-10-09 | Indexing online advertisements |
Publications (1)
Publication Number | Publication Date |
---|---|
US20100094860A1 true US20100094860A1 (en) | 2010-04-15 |
Family
ID=42099839
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/248,645 Abandoned US20100094860A1 (en) | 2008-10-09 | 2008-10-09 | Indexing online advertisements |
Country Status (2)
Country | Link |
---|---|
US (1) | US20100094860A1 (en) |
WO (1) | WO2010042199A1 (en) |
Cited By (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100058378A1 (en) * | 2008-08-29 | 2010-03-04 | Marc Feldman | Computer-cost subsidizing method |
US20100094881A1 (en) * | 2008-09-30 | 2010-04-15 | Yahoo! Inc. | System and method for indexing sub-spaces |
US20100138553A1 (en) * | 2008-12-01 | 2010-06-03 | Google Inc. | Selecting Format for Content Distribution |
US20110029393A1 (en) * | 2009-07-09 | 2011-02-03 | Collective Media, Inc. | Method and System for Tracking Interaction and View Information for Online Advertising |
US20110078558A1 (en) * | 2009-09-30 | 2011-03-31 | International Business Machines Corporation | Method and system for identifying advertisement in web page |
US20110219448A1 (en) * | 2010-03-04 | 2011-09-08 | Mcafee, Inc. | Systems and methods for risk rating and pro-actively detecting malicious online ads |
US20120084641A1 (en) * | 2010-09-30 | 2012-04-05 | Microsoft Corporation | Securely rendering online ads in a host page |
US20120158525A1 (en) * | 2010-12-20 | 2012-06-21 | Yahoo! Inc. | Automatic classification of display ads using ad images and landing pages |
US8225197B1 (en) * | 2011-06-22 | 2012-07-17 | Google Inc. | Rendering approximate webpage screenshot client-side |
US20120254150A1 (en) * | 2011-04-01 | 2012-10-04 | Yahoo! Inc | Dynamic arrangement of e-circulars in rais (rich ads in search) advertisements based on real time and past user activity |
US20130145255A1 (en) * | 2010-08-20 | 2013-06-06 | Li-Wei Zheng | Systems and methods for filtering web page contents |
US8510829B2 (en) | 2010-06-24 | 2013-08-13 | Mcafee, Inc. | Systems and methods to detect malicious media files |
US20130232167A1 (en) * | 2012-03-01 | 2013-09-05 | Google Inc. | Targeting content based on receipt of partial terms |
US20130238972A1 (en) * | 2012-03-09 | 2013-09-12 | Nathan Woodman | Look-alike website scoring |
US8639680B1 (en) | 2012-05-07 | 2014-01-28 | Google Inc. | Hidden text detection for search result scoring |
US20140109120A1 (en) * | 2011-12-14 | 2014-04-17 | Mariano J. Phielipp | Systems, methods, and computer program products for capturing natural responses to advertisements |
US20140278880A1 (en) * | 2013-03-15 | 2014-09-18 | Retailmenot. Inc. | Matching a Coupon to A Specific Product |
US20150067322A1 (en) * | 2010-12-29 | 2015-03-05 | Citrix Systems | Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination |
WO2015028895A1 (en) * | 2013-08-29 | 2015-03-05 | Yandex Europe Ag | A system and method for managing partner feed index |
US20150220990A1 (en) * | 2012-07-18 | 2015-08-06 | Google Inc. | Systems and methods of serving parameter-dependent content to a resource |
CN104956375A (en) * | 2013-02-25 | 2015-09-30 | 惠普发展公司，有限责任合伙企业 | Presentation of user interface elements based on rules |
US20150309971A1 (en) * | 2012-11-21 | 2015-10-29 | Roofoveryourhead Marketing Ltd. | A browser extension for the collection and distribution of data and methods of use thereof |
US20160239880A1 (en) * | 2015-02-17 | 2016-08-18 | Pagefair Limited | Web advertising protection system |
US9449094B2 (en) * | 2012-07-13 | 2016-09-20 | Google Inc. | Navigating among content items in a set |
EP3123428A1 (en) * | 2014-03-28 | 2017-02-01 | Google, Inc. | Automatic verification of advertiser identifier in advertisements |
US20170070539A1 (en) * | 2015-09-04 | 2017-03-09 | Swim.IT Inc. | Method of and system for privacy awarness |
US20170228134A1 (en) * | 2016-02-05 | 2017-08-10 | International Business Machines Corporation | Implementing automated personalized, contextual alert displays |
US10152552B2 (en) | 2013-01-29 | 2018-12-11 | Entit Software Llc | Analyzing a structure of a web application to produce actionable tokens |
US10296552B1 (en) * | 2018-06-30 | 2019-05-21 | FiaLEAF LIMITED | System and method for automated identification of internet advertising and creating rules for blocking of internet advertising |
US10469424B2 (en) | 2016-10-07 | 2019-11-05 | Google Llc | Network based data traffic latency reduction |
US10607246B2 (en) | 2011-11-30 | 2020-03-31 | Retailmenot, Inc. | Promotion code validation apparatus and method |
US10943144B2 (en) | 2014-04-07 | 2021-03-09 | Google Llc | Web-based data extraction and linkage |
CN113220966A (en) * | 2021-04-29 | 2021-08-06 | 西安点告网络科技有限公司 | Advertisement creative classification display method, system and equipment and readable storage medium |
US11115529B2 (en) | 2014-04-07 | 2021-09-07 | Google Llc | System and method for providing and managing third party content with call functionality |
US11196820B2 (en) * | 2011-07-31 | 2021-12-07 | Verint Systems Ltd. | System and method for main page identification in web decoding |
US20220030433A1 (en) * | 2019-02-06 | 2022-01-27 | Verizon Patent And Licensing Inc. | Security monitoring for wireless communication devices |
US11709889B1 (en) * | 2012-03-16 | 2023-07-25 | Google Llc | Content keyword identification |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2019090738A1 (en) * | 2017-11-10 | 2019-05-16 | 深圳市华阅文化传媒有限公司 | Method and device for purifying web fiction page |
Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020120925A1 (en) * | 2000-03-28 | 2002-08-29 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20040243554A1 (en) * | 2003-05-30 | 2004-12-02 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis |
US20050235030A1 (en) * | 2000-01-12 | 2005-10-20 | Lauckhart Gregory J | System and method for estimating prevalence of digital content on the World-Wide-Web |
US20060101514A1 (en) * | 2004-11-08 | 2006-05-11 | Scott Milener | Method and apparatus for look-ahead security scanning |
US20060230011A1 (en) * | 2004-11-22 | 2006-10-12 | Truveo, Inc. | Method and apparatus for an application crawler |
US20070027772A1 (en) * | 2005-07-28 | 2007-02-01 | Bridge Well Incorporated | Method and system for web page advertising, and method of running a web page advertising agency |
US20070078939A1 (en) * | 2005-09-26 | 2007-04-05 | Technorati, Inc. | Method and apparatus for identifying and classifying network documents as spam |
US20070192164A1 (en) * | 2006-02-15 | 2007-08-16 | Microsoft Corporation | Generation of contextual image-containing advertisements |
US20070192369A1 (en) * | 2005-11-30 | 2007-08-16 | Gross John N | System & Method of Evaluating Content Based Advertising |
US20080033996A1 (en) * | 2006-08-03 | 2008-02-07 | Anandsudhakar Kesari | Techniques for approximating the visual layout of a web page and determining the portion of the page containing the significant content |
US20080040224A1 (en) * | 2005-02-07 | 2008-02-14 | Robert Roker | Method and system to aggregate data in a network |
US20080104256A1 (en) * | 2006-10-26 | 2008-05-01 | Yahoo! Inc. | System and method for adaptively refreshing a web page |
US20080183573A1 (en) * | 2007-01-31 | 2008-07-31 | James Edward Muschetto | Method and Apparatus for Increasing Accessibility and Effectiveness of Advertisements Delivered via a Network |
-
2008
- 2008-10-09 US US12/248,645 patent/US20100094860A1/en not_active Abandoned
-
2009
- 2009-10-08 WO PCT/US2009/005526 patent/WO2010042199A1/en active Application Filing
Patent Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050235030A1 (en) * | 2000-01-12 | 2005-10-20 | Lauckhart Gregory J | System and method for estimating prevalence of digital content on the World-Wide-Web |
US20020120925A1 (en) * | 2000-03-28 | 2002-08-29 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20040243554A1 (en) * | 2003-05-30 | 2004-12-02 | International Business Machines Corporation | System, method and computer program product for performing unstructured information management and automatic text analysis |
US20060101514A1 (en) * | 2004-11-08 | 2006-05-11 | Scott Milener | Method and apparatus for look-ahead security scanning |
US20060230011A1 (en) * | 2004-11-22 | 2006-10-12 | Truveo, Inc. | Method and apparatus for an application crawler |
US20080040224A1 (en) * | 2005-02-07 | 2008-02-14 | Robert Roker | Method and system to aggregate data in a network |
US20070027772A1 (en) * | 2005-07-28 | 2007-02-01 | Bridge Well Incorporated | Method and system for web page advertising, and method of running a web page advertising agency |
US20070078939A1 (en) * | 2005-09-26 | 2007-04-05 | Technorati, Inc. | Method and apparatus for identifying and classifying network documents as spam |
US20070192369A1 (en) * | 2005-11-30 | 2007-08-16 | Gross John N | System & Method of Evaluating Content Based Advertising |
US20070192164A1 (en) * | 2006-02-15 | 2007-08-16 | Microsoft Corporation | Generation of contextual image-containing advertisements |
US20080033996A1 (en) * | 2006-08-03 | 2008-02-07 | Anandsudhakar Kesari | Techniques for approximating the visual layout of a web page and determining the portion of the page containing the significant content |
US20080104256A1 (en) * | 2006-10-26 | 2008-05-01 | Yahoo! Inc. | System and method for adaptively refreshing a web page |
US20080183573A1 (en) * | 2007-01-31 | 2008-07-31 | James Edward Muschetto | Method and Apparatus for Increasing Accessibility and Effectiveness of Advertisements Delivered via a Network |
Cited By (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100058378A1 (en) * | 2008-08-29 | 2010-03-04 | Marc Feldman | Computer-cost subsidizing method |
US20100094881A1 (en) * | 2008-09-30 | 2010-04-15 | Yahoo! Inc. | System and method for indexing sub-spaces |
US20100138553A1 (en) * | 2008-12-01 | 2010-06-03 | Google Inc. | Selecting Format for Content Distribution |
US9100223B2 (en) * | 2008-12-01 | 2015-08-04 | Google Inc. | Selecting format for content distribution |
US20110029393A1 (en) * | 2009-07-09 | 2011-02-03 | Collective Media, Inc. | Method and System for Tracking Interaction and View Information for Online Advertising |
US20110078558A1 (en) * | 2009-09-30 | 2011-03-31 | International Business Machines Corporation | Method and system for identifying advertisement in web page |
US8869025B2 (en) * | 2009-09-30 | 2014-10-21 | International Business Machines Corporation | Method and system for identifying advertisement in web page |
US9306968B2 (en) * | 2010-03-04 | 2016-04-05 | Mcafee, Inc. | Systems and methods for risk rating and pro-actively detecting malicious online ads |
US8813232B2 (en) * | 2010-03-04 | 2014-08-19 | Mcafee Inc. | Systems and methods for risk rating and pro-actively detecting malicious online ads |
US20140344928A1 (en) * | 2010-03-04 | 2014-11-20 | Jayesh Sreedharan | Systems and methods for risk rating and pro-actively detecting malicious online ads |
US20110219448A1 (en) * | 2010-03-04 | 2011-09-08 | Mcafee, Inc. | Systems and methods for risk rating and pro-actively detecting malicious online ads |
US8510829B2 (en) | 2010-06-24 | 2013-08-13 | Mcafee, Inc. | Systems and methods to detect malicious media files |
US20130145255A1 (en) * | 2010-08-20 | 2013-06-06 | Li-Wei Zheng | Systems and methods for filtering web page contents |
US9558289B2 (en) * | 2010-09-30 | 2017-01-31 | Microsoft Technology Licensing, Llc | Securely rendering online ads in a host page |
US20120084641A1 (en) * | 2010-09-30 | 2012-04-05 | Microsoft Corporation | Securely rendering online ads in a host page |
US20120158525A1 (en) * | 2010-12-20 | 2012-06-21 | Yahoo! Inc. | Automatic classification of display ads using ad images and landing pages |
US8732014B2 (en) * | 2010-12-20 | 2014-05-20 | Yahoo! Inc. | Automatic classification of display ads using ad images and landing pages |
US20150067322A1 (en) * | 2010-12-29 | 2015-03-05 | Citrix Systems | Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination |
US9819647B2 (en) * | 2010-12-29 | 2017-11-14 | Citrix Systems, Inc. | Systems and methods for multi-level tagging of encrypted items for additional security and efficient encrypted item determination |
US20120254150A1 (en) * | 2011-04-01 | 2012-10-04 | Yahoo! Inc | Dynamic arrangement of e-circulars in rais (rich ads in search) advertisements based on real time and past user activity |
US8225197B1 (en) * | 2011-06-22 | 2012-07-17 | Google Inc. | Rendering approximate webpage screenshot client-side |
US8286076B1 (en) * | 2011-06-22 | 2012-10-09 | Google Inc. | Rendering approximate webpage screenshot client-side |
US11196820B2 (en) * | 2011-07-31 | 2021-12-07 | Verint Systems Ltd. | System and method for main page identification in web decoding |
US10607246B2 (en) | 2011-11-30 | 2020-03-31 | Retailmenot, Inc. | Promotion code validation apparatus and method |
US10791368B2 (en) * | 2011-12-14 | 2020-09-29 | Intel Corporation | Systems, methods, and computer program products for capturing natural responses to advertisements |
US20140109120A1 (en) * | 2011-12-14 | 2014-04-17 | Mariano J. Phielipp | Systems, methods, and computer program products for capturing natural responses to advertisements |
US11164208B2 (en) | 2012-03-01 | 2021-11-02 | Google Llc | Presenting options for content delivery |
US20130232167A1 (en) * | 2012-03-01 | 2013-09-05 | Google Inc. | Targeting content based on receipt of partial terms |
US10055755B2 (en) * | 2012-03-01 | 2018-08-21 | Google Llc | Targeting content based on receipt of partial terms |
US20130238972A1 (en) * | 2012-03-09 | 2013-09-12 | Nathan Woodman | Look-alike website scoring |
US11709889B1 (en) * | 2012-03-16 | 2023-07-25 | Google Llc | Content keyword identification |
US9336279B2 (en) | 2012-05-07 | 2016-05-10 | Google Inc. | Hidden text detection for search result scoring |
US8639680B1 (en) | 2012-05-07 | 2014-01-28 | Google Inc. | Hidden text detection for search result scoring |
KR102056881B1 (en) | 2012-07-13 | 2019-12-17 | 구글 엘엘씨 | Navigating among content items in a set |
US9449094B2 (en) * | 2012-07-13 | 2016-09-20 | Google Inc. | Navigating among content items in a set |
US20150220990A1 (en) * | 2012-07-18 | 2015-08-06 | Google Inc. | Systems and methods of serving parameter-dependent content to a resource |
US9846893B2 (en) * | 2012-07-18 | 2017-12-19 | Google Llc | Systems and methods of serving parameter-dependent content to a resource |
US11449666B2 (en) | 2012-11-21 | 2022-09-20 | Roofoveryourhead Marketing Ltd. | Browser extension for the collection and distribution of data and methods of use thereof |
US11048858B2 (en) * | 2012-11-21 | 2021-06-29 | Roofoveryourhead Marketing Ltd. | Browser extension for the collection and distribution of data and methods of use thereof |
US20150309971A1 (en) * | 2012-11-21 | 2015-10-29 | Roofoveryourhead Marketing Ltd. | A browser extension for the collection and distribution of data and methods of use thereof |
US10152552B2 (en) | 2013-01-29 | 2018-12-11 | Entit Software Llc | Analyzing a structure of a web application to produce actionable tokens |
US9910992B2 (en) * | 2013-02-25 | 2018-03-06 | Entit Software Llc | Presentation of user interface elements based on rules |
US20150356302A1 (en) * | 2013-02-25 | 2015-12-10 | Hewlett-Packard Development Company, L.P. | Presentation of user interface elements based on rules |
CN104956375A (en) * | 2013-02-25 | 2015-09-30 | 惠普发展公司，有限责任合伙企业 | Presentation of user interface elements based on rules |
US20140278880A1 (en) * | 2013-03-15 | 2014-09-18 | Retailmenot. Inc. | Matching a Coupon to A Specific Product |
US10592915B2 (en) * | 2013-03-15 | 2020-03-17 | Retailmenot, Inc. | Matching a coupon to a specific product |
WO2015028895A1 (en) * | 2013-08-29 | 2015-03-05 | Yandex Europe Ag | A system and method for managing partner feed index |
EP3123428A1 (en) * | 2014-03-28 | 2017-02-01 | Google, Inc. | Automatic verification of advertiser identifier in advertisements |
US10402869B2 (en) | 2014-03-28 | 2019-09-03 | Google Llc | System and methods for automatic verification of advertiser identifier in advertisements |
US10943144B2 (en) | 2014-04-07 | 2021-03-09 | Google Llc | Web-based data extraction and linkage |
US11115529B2 (en) | 2014-04-07 | 2021-09-07 | Google Llc | System and method for providing and managing third party content with call functionality |
US20160239880A1 (en) * | 2015-02-17 | 2016-08-18 | Pagefair Limited | Web advertising protection system |
US20170070539A1 (en) * | 2015-09-04 | 2017-03-09 | Swim.IT Inc. | Method of and system for privacy awarness |
US10362067B2 (en) * | 2015-09-04 | 2019-07-23 | Swim.IT Inc | Method of and system for privacy awareness |
US10367852B2 (en) | 2015-09-04 | 2019-07-30 | Swim.IT Inc. | Multiplexed demand signaled distributed messaging |
US10831349B2 (en) * | 2016-02-05 | 2020-11-10 | International Business Machines Corporation | Implementing automated personalized, contextual alert displays |
US20170228134A1 (en) * | 2016-02-05 | 2017-08-10 | International Business Machines Corporation | Implementing automated personalized, contextual alert displays |
US10469424B2 (en) | 2016-10-07 | 2019-11-05 | Google Llc | Network based data traffic latency reduction |
US10296552B1 (en) * | 2018-06-30 | 2019-05-21 | FiaLEAF LIMITED | System and method for automated identification of internet advertising and creating rules for blocking of internet advertising |
US20220030433A1 (en) * | 2019-02-06 | 2022-01-27 | Verizon Patent And Licensing Inc. | Security monitoring for wireless communication devices |
US11979748B2 (en) * | 2019-02-06 | 2024-05-07 | Verizon Patent And Licensing Inc. | Security monitoring for wireless communication devices |
CN113220966A (en) * | 2021-04-29 | 2021-08-06 | 西安点告网络科技有限公司 | Advertisement creative classification display method, system and equipment and readable storage medium |
Also Published As
Publication number | Publication date |
---|---|
WO2010042199A1 (en) | 2010-04-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20100094860A1 (en) | Indexing online advertisements | |
EP2433258B1 (en) | Protected serving of electronic content | |
US8412569B1 (en) | Determining advertising statistics for advertisers and/or advertising networks | |
JP5072160B2 (en) | System and method for estimating the spread of digital content on the World Wide Web | |
US10269024B2 (en) | Systems and methods for identifying and measuring trends in consumer content demand within vertically associated websites and related content | |
US7650329B2 (en) | Method and system for generating a search result list based on local information | |
US8321278B2 (en) | Targeted advertisements based on user profiles and page profile | |
US7610276B2 (en) | Internet site access monitoring | |
KR101304119B1 (en) | System and method for retargeting advertisements based on previously captured relevance data | |
KR101518088B1 (en) | Syndicating search queries using web advertising | |
US20120054440A1 (en) | Systems and methods for providing a hierarchy of cache layers of different types for intext advertising | |
KR20090092341A (en) | Link retrofitting of digital media objects | |
US20080040473A1 (en) | Enabling web analytics for interactive web applications | |
US20130054672A1 (en) | Systems and methods for contextualizing a toolbar | |
US20090313127A1 (en) | System and method for using contextual sections of web page content for serving advertisements in online advertising | |
US8843619B2 (en) | System and method for monitoring visits to a target site | |
JP2014531649A (en) | Understand the effectiveness of communications propagated through social networking systems | |
JP2016517592A (en) | Intelligent platform for real-time bidding | |
US20120173338A1 (en) | Method and apparatus for data traffic analysis and clustering | |
US7752308B2 (en) | System for measuring web traffic | |
US20050182677A1 (en) | Method and/or system for providing web-based content | |
WO2009078861A1 (en) | Online advertisement exposure tracking system | |
Krammer | An effective defense against intrusive web advertising | |
US20110270691A1 (en) | Method and system for providing url possible new advertising | |
US20130091415A1 (en) | Systems and methods for invisible area detection and contextualization |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LIN, WAYNE W.;WEAVER, MATTHEW S.;TIMOR, ERAN;AND OTHERS;SIGNING DATES FROM 20081010 TO 20081123;REEL/FRAME:022010/0461 |
|
AS | Assignment |
Owner name: GOOGLE INC.,CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LIN, WAYNE W.;WEAVER, MATTHEW S.;TIMOR, ERAN;AND OTHERS;SIGNING DATES FROM 20081010 TO 20081123;REEL/FRAME:023505/0042 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
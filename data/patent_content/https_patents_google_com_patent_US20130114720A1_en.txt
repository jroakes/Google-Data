US20130114720A1 - Joint spatial and temporal block merge mode for hevc - Google Patents
Joint spatial and temporal block merge mode for hevc Download PDFInfo
- Publication number
- US20130114720A1 US20130114720A1 US13/351,906 US201213351906A US2013114720A1 US 20130114720 A1 US20130114720 A1 US 20130114720A1 US 201213351906 A US201213351906 A US 201213351906A US 2013114720 A1 US2013114720 A1 US 2013114720A1
- Authority
- US
- United States
- Prior art keywords
- block
- current block
- merge mode
- spatially
- temporal
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H04N19/00684—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/196—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters
- H04N19/197—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters including determination of the initial value of an encoding parameter
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/196—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding being specially adapted for the computation of encoding parameters, e.g. by averaging previously computed encoding parameters
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/513—Processing of motion vectors
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/513—Processing of motion vectors
- H04N19/517—Processing of motion vectors by encoding
- H04N19/52—Processing of motion vectors by encoding by predictive encoding
Definitions
- Particular embodiments generally relate to video compression.
- a great degree of temporal redundancy may exist. That is, within a very short period of time, the shape(s) of foreground object(s) and the background within a picture may not vary very much, and pixels in the foreground objects may move along a similar nature.
- object-based video coding different parts of a picture can be coded and transmitted separately as video objects. Motion information of different pixels in the same object should be the same in some cases. However, many bits still need to be used to describe the arbitrary object shape, which reduces coding efficiency. Thus, the efficient representation of object motion is challenging.
- High efficiency video coding is a block-based hybrid spatial and temporal predictive coding scheme.
- HEVC partitions an input picture into square blocks referred to as largest coding units (LCUs) that could be a size up to 64 ⁇ 64. Theoretically, a larger coding unit is preferred to take advantage of correlation among immediate neighboring pixels.
- LCU largest coding units
- Each LCU can be partitioned into smaller square blocks called coding units (CUs).
- FIG. 1A shows an example of an LCU partition of CUs.
- An LCU 100 is first partitioned into four CUs 102 .
- Each CU 102 may also be further split into four smaller CUs 102 that are a quarter of the size of the CU 102 .
- CUs 102 - 1 , 102 - 3 , and 102 - 4 are a quarter of the size of LCU 100 . Further, a CU 102 - 2 has been split into four CUs 102 - 5 , 102 - 6 , 102 - 7 , and 102 - 8 .
- FIG. 1B shows a quadtree 104 of the LCU partition shown in FIG. 1A .
- Each node of quadtree 104 is assigned a flag of “1” if the node is further split into four sub-nodes and assigned a flag of “0” if the node is not split.
- the flag is called a split bit (e.g. 1) or stop bit (e.g., 0) and is coded in a compressed bitstream.
- a node 106 - 1 includes a flag “1” at a top CU level because LCU 100 is split into 4 CUs. At an intermediate CU level, the flags indicate whether a CU 102 is further split into four CUs. In this case, a node 106 - 3 includes a flag of “1” because CU 102 - 2 has been split into four CUs 102 - 5 - 102 - 8 . Nodes 106 - 2 , 106 - 4 , and 106 - 5 include a flag of “0” because these CUs 102 are not split.
- Nodes 106 - 6 , 106 - 7 , 106 - 8 , and 106 - 9 are at a bottom CU level and hence, no flag bit of “0” or “1” is necessary for those nodes because corresponding CUs 102 - 5 - 102 - 8 are not split.
- the partitioning process may continue all the way to 4 ⁇ 4 blocks.
- the quadtree data representation for quadtree 104 shown in FIG. 1B may be represented by the binary data of “10100”, where each bit represents a node 106 of quadtree 104 .
- the binary data indicates the LCU partitioning to the encoder and decoder, and this binary data needs to be coded and transmitted as overhead.
- Each CU 102 may include one or more prediction units (PUs).
- the PUs may be used to perform spatial prediction or temporal prediction.
- FIG. 2 shows an example of a CU partition of PUs 202 . As shown, a CU 102 has been partitioned into four PUs 202 - 1 - 202 - 4 . Spatial or temporal prediction coding may be performed over each PU 202 . In inter-mode, motion parameters are coded and transmitted for each PU. The structure may require many bits for motion information, especially for irregularly shaped objects.
- a spatial merge mode may be used to improve coding efficiency.
- the spatial merge mode may merge a current block with its neighboring block(s) to form a “region”. All the pixels within the region share the same motion parameters. Thus, there is no need to code and transmit motion parameters for each individual block of a region. Instead, for a region, only one set of motion parameters is coded and transmitted.
- the current block is allowed to merge with a spatially-located block that is neighboring the current block to the left or the top.
- An indicator is used to specify whether the current block is merged with an available neighboring block, either the left neighboring block or the top neighboring block should be used in the spatial merge.
- the spatial merge mode is limited to merging with spatially-located blocks in the same frame.
- a temporal merge mode may also be used to further improve coding efficiency.
- the temporal merge mode may enable a current block to use the motion parameters of its temporal neighboring block(s). Thus, there is no need to code and transmit motion parameters for each individual block merged by temporal merge mode. Instead, only one set of motion parameters is coded and transmitted.
- the current block is allowed to merge with a temporally-located block from a previous encoded/decoded picture.
- An indicator is used to specify whether the current block is merged with an available temporal neighboring block.
- One embodiment includes a method comprising determining a merge mode for a current block of video content, wherein the merge mode is selected from a candidate list, wherein the candidate list comprises neighboring blocks that are spatially and temporally located with the current block, determining the merge mode by analyzing the motion vector differences between the neighboring spatial blocks and temporal blocks, selecting one or more blocks for encoding the current block, encoding the current block using the motion parameters of the selected one or more selected blocks, and transmitting information to a decoder to indicate which motion parameters from the one or more selected blocks to use in decoding the current block, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block, and wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, wherein no bits, flags or indexes are used to indicate the merge mode.
- the candidate list can include one or more of spatially-located neighboring blocks, one or more of temporally-located neighboring blocks, or a combination thereof.
- the candidate list comprises MV A , MV B , MV C , MV D , assigned as motion vectors (MVs) of spatial neighbors A, B, C, and D, for a region and MV A′ , MV B′ , MV C′ , MV D′ , and MV X′ assigned as MVs of the temporal neighbors A′, B′, C′, D′ and X′, for a region.
- the candidate list can additionally comprise refIdx A , refIdx B , refIdx C , refIdx D , refIdx A′ , refIdx B′ , refIdx C′ , refIdx D′ , and refIdx X′ assigned as reference pictures pointed by MV A , MV B , MV C , MV D , MV A′ , MV B′ , MV C′ , MV D′ and MV X′ individually.
- Determining the merge mode can additionally comprise scaling the motion vectors so that all the scaled motion vectors span the same temporal distance; and calculating spatial MV differences between MV A and MV D and between MV B and MV C as well as temporal MV difference between MV A and MV A′ , and between MV B and MV B′ .
- the encoding the current block may comprise determining temporal merge mode and merging block X with its temporal neighbor block X′ if ⁇ MV Temporal ⁇ min( ⁇ MV AD ⁇ , ⁇ MV BC ⁇ ), wherein block X and block X′ will share the same MV X′ , and refIdx X′ .
- the encoding the current block may comprise determining top spatial merge mode and merging block X with top block B, if ⁇ MV Temporal ⁇ min( ⁇ MV AD ⁇ , ⁇ MV BC ⁇ ) and ⁇ MV AD ⁇ MV BC ⁇ , wherein blocks X and A will share the same MV B and refIdx B .
- encoding the current block comprises determining left spatial merge mode and merging block X with a left block A if not previously determined top spatial merge mode or temporal merge mode, wherein blocks X and A will share the same MV A and refIdx A .
- the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture.
- Another embodiment includes a method including receiving a merge mode for a current block of video content, wherein the merge mode is selected from a candidate list, wherein the candidate list comprises neighboring blocks that are spatially and temporally located with the current block, and determining which candidate block is identified in the merge mode candidate list for decoding a current block of video content, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block; and wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, wherein no bits, flags or indexes are used to indicate the merge mode.
- the merge mode is one of a spatially-located neighboring block, a temporally-located neighboring block, a combination of spatially-located blocks, a combination of temporally-located blocks, and a combination of spatially-located and temporally-located blocks of the current block.
- the method may further comprise determining motion parameters for the at least one spatially-located block to the current block of video content, the at least one spatially-located block located in a same picture as the current block; and identifying the at least one spatially-located block in the merge mode candidate list, if the spatially-located block is identified in the candidate list for decoding the current block, the method further comprising using motion parameters for the at least one spatially-located block in decoding the current block of video content.
- the motion parameters to use in decoding the current block are from the temporally-located block, the spatially-located block, or a combination of motion parameters from spatially-located blocks to the current block. Determining which candidate block can comprise following a set of rules to determine which merge mode to use to determine which motion parameters from the candidate block to use in decoding the current block.
- Another embodiment includes an apparatus comprising one or more computer processors and a computer-readable storage medium comprising instructions for controlling the one or more computer processors to be operable to determine motion parameters for at least one temporally-located block to a current block of video content, the temporally-located block located in a different picture from the current block, identify the at least one temporally-located block in a merge mode candidate list, the merge mode candidate list including candidate blocks in which motion parameters are candidates to be used for the current block, and encode information to a decoder to indicate which motion parameters from a candidate block on the merge mode candidate list to use in decoding the current block, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block, wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, and wherein no bits, flags or indexes are used to indicate the merge mode.
- the apparatus may be further operable to determine motion parameters for at least one spatially-located block to the current block of video content, the at least one spatially-located block located in a same picture as the current block, and identify the at least one spatially-located block in the merge mode candidate list.
- the at least one temporally-located block and the at least one spatially-located block may be included on the merge mode candidate list and information is signaled indicating which motion parameters of the at least one temporally-located block and the at least one spatially-located block to use in decoding the current block.
- the motion parameters to use in decoding the current block are from the at least one temporally-located block, the at least one spatially-located block, or a combination of motion parameters from spatially-located blocks to the current block.
- the signal may comprise a set of rules at an encoder to allow the decoder to determine which motion parameters from the candidate block on the merge mode candidate list to use.
- Yet another embodiment includes an apparatus comprising one or more computer processors; and a computer-readable storage medium comprising instructions for controlling the one or more computer processors to be operable to receive signaling including a merge mode candidate list, the merge mode candidate list identifying candidate blocks in which motion parameters are candidates to be used for the current block, determine which candidate block is identified in the merge mode candidate list for decoding a current block of video content, and if a temporally-located block is identified, use motion parameters for the temporally-located block in decoding the current block of video content, the temporally-located block located in a different picture from the current block, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block, wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, and wherein no bits, flags or indexes are used to indicate the merge mode.
- the merge mode candidate list includes at least one spatially-located block to the current block, the at least one spatially-located block located in a same picture as the current block, and if the at least one spatially-located block is identified in the candidate list for decoding the current block, further operable to use motion parameters for the at least one spatially-located block in decoding the current block of video content.
- FIG. 1A shows an example of an LCU partition.
- FIG. 1B shows a quadtree of the LCU partition shown in FIG. 1A .
- FIG. 2 shows an example of a CU partition of PUs
- FIG. 3 depicts an example of a system for encoding and decoding video content according to one embodiment.
- FIG. 4 depicts temporal and spatial neighboring blocks according to one embodiment.
- FIG. 5 depicts a scenario when block X is not in any merge mode according to one embodiment.
- FIG. 6 depicts a scenario when block X is merged with block A in the spatial merge mode according to one embodiment.
- FIG. 7 depicts a scenario when block X is merged with block B in the spatial merge mode according to one embodiment.
- FIG. 8 depicts a scenario when block X is merged with block C in a temporal merge mode according to one embodiment.
- FIG. 9 depicts a simplified flowchart of a method for determining which mode to use in an encoding process according to one embodiment.
- FIG. 10 depicts a simplified flowchart of a method for decoding for a current block according to one embodiment
- FIG. 11 depicts an example of an encoder according to one embodiment.
- FIG. 12 depicts an example of a decoder according to one embodiment.
- FIG. 3 depicts an example of a system for encoding and decoding video content according to one embodiment.
- the system includes an encoder 300 and a decoder 301 , both of which will be described in more detail below.
- Encoder 300 uses a spatial-temporal merge manager 302 - 1 in an encoding process and decoder 301 uses a spatial-temporal merge manager 302 - 2 in a decoding process.
- encoder 300 and decoder 301 use the HEVC coding scheme.
- Each spatial-temporal merge manager 302 allows temporal correlation to be taken into consideration in addition to spatially-located blocks while in a merge mode. That is, given a current block in the merge mode, spatially-located blocks may be used (i.e., a spatial merge mode) in addition to a temporally-located block (i.e., a temporal merge mode) in a merge with the current block. For example, the left and top neighboring blocks may be used as spatially-located blocks, and a block in a previously coded picture, such as a co-located block in another frame (e.g., previously coded frame) to the current block, may be used as a temporally-located block.
- a co-located block may be a block that is in a similar position as the current block in another frame, such as any frame that has been encoded/decoded before the current block may be used. Blocks in other frames other than a co-located block may also be used. Motion parameters of the current block may be derived from the spatially-located blocks and used in the spatial merge, and/or from temporally-located blocks and used in the temporal merge.
- the temporal merge mode may merge a current block with the temporally-located block to form a “region”. All the pixels within the region share the same motion parameters. Thus, there is no need to code and transmit motion parameters for the current block. Instead, motion parameters of a temporally-located block can be used for the current block.
- a current block may conceptually merge with more than one spatially-located block and/or temporally-located block, and uses the motion parameters of more than one spatially-located block and/or temporally-located blocks to form its own motion parameters.
- the current block may conceptually merge with two different spatially-located blocks, and uses the motion parameters from the two different spatially-located blocks to form the motion parameters in spatial merge.
- the motion parameters may be scaled according to the time (temporal) difference between the reference picture and the current picture.
- Motion parameters are motion vectors plus reference picture indices. Reference picture indices are used to indicate which picture is used for reference. For the scaling process, this should be applied on motion vectors.
- block A is the current block in picture 3 and it needs to get a reference in picture 2 .
- Block B is the upper block and its motion parameter points to a reference in picture 1 . Due to the different reference pictures, the motion vector of block B needs to be scaled before applied to block A in merge mode.
- the temporally-located and spatially-located blocks described above may be identified on a merge mode candidate list.
- the temporally-located block, the left and top spatially-located blocks, and conceptually combined blocks may be candidates to be merged with a current block.
- Particular embodiments provide do not require signaling in the form of bits, flags or indexing from spatial-temporal merge manager 302 - 1 to spatial-temporal merge manager 302 - 2 to indicate with which block the current block is merged.
- the decoder will know which block's motion parameters are to be used in decoding the current block. For example, signaling of which merge mode may not be performed as encoder 300 and decoder 301 may follow a set of rules to determine which merge mode to use. Additionally, other flags may be used.
- the temporally-located block may be used to leverage temporal redundancy that may exist in video sequences. That is, the shape of objects may not change to a great degree in a short period of time.
- the motion parameters for a temporally-located block may be used with a current block.
- FIGS. 4-8 illustrate the various merging scenarios for spatial-temporal merging according to one embodiment.
- Which merge mode, either spatial merge mode, or temporal merge mode, to use may be determined in different ways.
- U.S. application Ser. No. ______, for “Temporal Block Merge Mode for HEVC” describes different ways of determining which merge mode to use and how to signal certain parameters. Described herein are different ways of determining which merge mode to use.
- FIG. 4 depicts temporal and spatial neighboring blocks according to one embodiment.
- a current block is a block X.
- Current block X is allowed to spatially merge with a left neighboring block, block B, or a top neighboring block, a block A.
- current block X is allowed to temporally merge with a block C in a different picture t- 1 .
- Block C is temporally co-located with current block X. That is, block C is located in a same position as block X but at a different time. For example, block C may have been coded at a previous time.
- FIG. 5 depicts a scenario when block X is not in any merge mode according to one embodiment.
- Motion vectors 502 - 1 , 502 - 2 , and 502 - 3 are shown for blocks in frame t.
- a motion vector 502 - 4 is shown for block C in frame t- 1 .
- the motion parameters such as the motion vector, need to be coded.
- the motion parameters may be a reference picture index indicating which reference picture is used for prediction.
- the actual motion parameters are sent from encoder 300 to decoder 301 in this case.
- FIG. 6 depicts a scenario when block X is merged with block A in the spatial merge mode according to one embodiment.
- motion vector 502 - 1 for block X is the same as motion vector 502 - 2 .
- Block X is thus spatially merged with block A, which is the top neighboring block.
- Motion parameters for motion vector 502 - 1 only need to be coded once in this example for block X and block A. As will be discussed below, certain calculations will determine that block X is merged with block A.
- FIG. 7 depicts a scenario when block X is merged with block B in the spatial merge mode according to one embodiment.
- Block B is the left neighboring block to block X
- motion vector 502 - 1 is the same as motion vector 502 - 3 for block B.
- Motion parameters only need to be coded once in this example for block X and block B. That is, the same motion parameters used for block B, such as motion vector 502 - 3 , are used to for block X.
- FIG. 8 depicts a scenario when block X is merged with block C in a temporal merge mode according to one embodiment.
- Motion vector 502 - 1 for block X is the same as motion vector 502 - 4 for block C.
- motion parameters only need to be coded once in this example for block X and block C.
- motion parameters are not coded for block X, and the motion parameters, such as motion vector 502 - 4 , for block C are used.
- Known methods use different ways of indicating which merge mode to use.
- an index may be used.
- flags such as the three flags merge_flag, merge_temporal_flag, and merge_left_flag, may be used. In all these cases, the use of two-three extra bits must be used to communicate the signal.
- merge mode is the saving of motion information for block X.
- one extra bit is required for a current block to indicate if the current block is in merge mode, or not, for example, through the use of flags.
- flags can be used, for example, merge_temporal_flag and merge_left_flag to signal such scenarios.
- Described herein is a way to save one bit per block. Instead of sending the bit to signal if the current block is merged with its top or left neighboring block, the merging direction is derived based upon the motion information of the coded neighboring blocks. Further, also disclosed is consideration of the temporal collocated block, but which in current practice requires an additional bit to signal if the current block is merged either temporally or spatially. In total, three bits per block are required to implement this joint temporal and spatial merge mode.
- a current block in merge mode is merged temporally or spatially and the bit required to indicate whether a current block is merged with its left or top neighboring block or a temporally located block.
- merging direction is dependent upon motion information of the neighboring blocks.
- FIG. 9 depicts a simplified flowchart of a method for determining which mode to use in an encoding process according to one embodiment.
- spatial-temporal merge manager 302 - 1 determines if a current block X should be in a merge mode. If not, at 904 , motion parameters for block X are coded. This may be the normal coding process for block X. Either flags, indexes or some other mechanism is used to indicate that merge mode is not enabled.
- spatial-temporal merge manager 302 - 1 enables the merge mode. For example, spatial-temporal merge manager 302 - 1 sets an index, flag, bit or some other indicator to indicate that the merge mode is enabled.
- MV A , MV B , MV C , MV D be the MV of the spatial neighbors A, B, C, and D
- MV A′ , MV B′ , MV C′ , MV D′ , and MV X′ be the MV of the temporal neighbors A′, B′, C′, D′ and X′ per reference list individually.
- refIdx A , refIdx B , refIdx c , refIdx D , refIdx A′ , refIdx B′ , refIdx C′ , refIdx D′ , and refIdx X′ be the reference pictures pointed by MV A , MV B , MV C , MV D , MV A′ , MV B′ , MV C′ , MV D′ and MV X′ individually.
- the current block X is in merge mode. Possible actions include being temporally merged with block X′, or spatially merged with either block A or block B.
- merging direction is determined dependent upon motion information to the neighboring blocks. This is explained in more detail, below.
- a current block X has four spatially coded neighbors, A, B, C and D in the current picture, and four temporally coded neighboring block A′, B′ C′ and D′ in previously coded picture. There may be one, two, or more reference lists available for the current block X.
- the merging direction of block X per reference list is determined as follows:
- MV A scale ⁇ ( MV A )
- MV B scale ⁇ ( MV B )
- MV C scale ⁇ ( MV C )
- MV D scale ⁇ ( MV D )
- MV A ′ scale ⁇ ( MV A ′ )
- MV B scale ⁇ ( MV B ′ )
- MV C ′ scale ⁇ ( MV C ′ )
- MV D ′ scale ⁇ ( MV D ′ )
- the spatial MV differences between MV A and MV D and between MV B and MV C are calculated, as well as the temporal MV difference between MV A and MV A′ , and between MV B and MV B′ as
- spatial-temporal merge manager 302 - 1 determines ⁇ MV Temporal ⁇ min( ⁇ MV AD ⁇ , ⁇ MV BC ⁇ ). If true, temporal merge mode should be enabled, as in block 930 , and X is merged with its temporal neighbor block X′. Block X and block X′ will share the same MV X′ , and refIdx X′ . Note that the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture.
- spatial-temporal merge manager 302 - 1 determines that ⁇ MV Temporal ⁇ min( ⁇ MV AD ⁇ , ⁇ MV BC ⁇ ) and that ⁇ MV AD ⁇ MV BC ⁇ are both true, then, the top neighboring block is to be used in the spatial merge, that is, that the calculation result itself indicates that the top neighboring block should be merged spatially with block X, for example, at block 936 , block X is merged with the top block B, implying blocks X and B will share the same MV B and refIdx B , Otherwise, at block 938 , block X is merged with the left block A, implying blocks X and A will share the same MV A and refIdx A . In other embodiments, operations can be performed to indicate with blocks other than the left and the top neighboring blocks should be used.
- spatial-temporal merge manager 302 - 1 has determined and may store information indicating the merge mode used.
- Encoder 300 also encodes the motion parameters for the merged region at least once. Each block in the merged region use the same motion parameters so sending the motion parameters for each block in the region is avoided, which reduces overhead.
- the spatial MV differences are calculated between MV A and MV D and between MV B and MV D , as well as at block 922 the temporal MV differences between MV A and MV A′ , between MV B and MV B′ , between MV C and MV C′ , and between MV D and MV D′ , that is,
- Block X and block X′ will share the same MV X′ , and refIdx X′ . Note that the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture. Otherwise, the method advances to block 934 and spatial merge mode is engaged at blocks 928 or 936 . At block 929 the information is encoded.
- blocks A, B, C, D, A′, B′, C′, D′ and X′ are coded block for the current block X, their motion information are available for both encoder and decoder. Hence, no bit is required to indicate which neighboring block's motion information is used for a current block in merge mode.
- the associated MV(s) are set to be (0,0) and refIdx to ⁇ 1.
- FIG. 10 depicts a simplified flowchart 1000 of a method for decoding for a current block according to one embodiment.
- spatial-temporal merge manager 302 - 2 determines if the merge mode is enabled for a current block X. For example, spatial-temporal merge manager 302 - 2 determines if the flag merge_flag is set to a value of “0” to indicate that current block X is not in any merge mode or to a value of “1” to indicate that the current block X is in the merge mode. If the merge mode is not enabled, at 1004 , then motion parameters for block X are determined and used in motion prediction at decoder 301 . In another embodiment, information in an index is used to determine if the merge mode is or is not enabled.
- spatial-temporal merge manager 302 - 2 determines if the temporal merge mode is enabled.
- MV A , MV B , MV C , MV D are set to the MV of the spatial neighbors A, B, C, and D, and at block 1012 , let MV A′ , MV B′ , MV C′ , MV D′ and MV X′ are set to the MV of the temporal neighbors A′, B′, C′, D′ and X′ per reference list individually.
- refIdx A , refIdx B , refIdx C , refIdx D , refIdx A′ , refIdx B′ , refIdx C′ , refIdx D′ , and refIdx X′ are set to the reference pictures pointed by MV A , MV B , MV C , MV D , MV A′ , MV B′ , MV C′ , MV D′ and MV X′ individually.
- merging direction is determined dependent upon motion information to the neighboring blocks. This is explained in more detail, below.
- MV A , MV B , MV C , MV D , MV A′ , MV B′ , MV C′ , and MV D′ are all scaled so that all the scaled MVs span the same temporal distance, that is,
- MV A scale ⁇ ( MV A )
- MV B scale ⁇ ( MV B )
- MV C scale ⁇ ( MV C )
- MV D scale ⁇ ( MV D )
- MV A ′ scale ⁇ ( MV A ′ )
- MV B scale ⁇ ( MV B ′ )
- MV C ′ scale ⁇ ( MV C ′ )
- MV D ′ scale ⁇ ( MV D ′ )
- the spatial MV differences between MV A and MV D and between MV B and MV C are calculated, as well as the temporal MV difference between MV A and MV A′ , and between MV B and MV B′ as
- Temporal ⁇ 1 ⁇ 2( ⁇ MV AA′ ⁇ + ⁇ MV BB′ ⁇ ).
- spatial-temporal merge manager 302 - 1 determines ⁇ MV Temporal ⁇ min( ⁇ MV AD ⁇ , ⁇ MV BC ⁇ ). If true, temporal merge mode should be enabled, as in block 1030 , and X is merged with its temporal neighbor block X′. Block X and block X′ will share the same MV X′ , and refIdx X′ . Note that the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture.
- spatial-temporal merge manager 302 - 1 determines that ⁇ MV Temporal ⁇ min( ⁇ MV AD ⁇ , ⁇ MV BC ⁇ ) and that ⁇ MV AD ⁇ MV BC ⁇ are both true, then, the top neighboring block is to be used in the spatial merge, that is, that the calculation result itself indicates that the top neighboring block should be merged spatially with block X, for example, at block 1036 , block X is merged with the top block B, implying blocks X and B will share the same MV B and refIdx B ,
- block X is merged with the left block A, implying blocks X and A will share the same MV A and refIdx A .
- operations can be performed to indicate with blocks other than the left and the top neighboring blocks should be used.
- the encoded value will indicate the type of merge. If the encoded value indicates a spatial merge, then the current block is merged spatially. However, the encoded information can also indicate a temporal merge mode, and then, for example, at 1008 , the current block is merged temporally with a temporally-located block. For example, current block X may be merged with a temporally co-located block C. In this case, coding parameters for block C may be used in the motion prediction.
- spatial-temporal merge manager 302 - 2 determines which spatially-located block should be used in a spatial merge mode.
- the current block is merged with a top neighboring block. In this case, coding parameters for the top neighboring block are used in the motion prediction.
- the left neighboring block should be used, then the current block is merged with a left neighboring block. In this case, coding parameters for the left neighboring block are used in the motion prediction.
- FIG. 11 depicts an example of an encoder 300 according to one embodiment.
- a general operation of encoder 300 will now be described. It will be understood that variations on the encoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein.
- a spatial prediction block 1104 may include different spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar.
- a temporal prediction block 1106 performs temporal prediction through a motion estimation and motion compensation operation.
- the motion estimation operation searches for a best match prediction for the current PU over reference pictures.
- the best match prediction is described by a motion vector (MV) and associated reference picture (refIdx).
- MV motion vector
- refIdx reference picture
- the motion vector and associated reference picture are included in the coded bit stream.
- a best match prediction for the current PU is determined using the MV and refIdx.
- Spatial-temporal merge manager 302 - 1 may communicate with a temporal prediction block 1106 to perform motion prediction for a current PU. If the current block is merged with a spatially-located block or a temporally-located block, spatial-temporal merge manager 302 - 1 may signal information indicating which block should be used in decoding the current block. Motion parameters for the current block do not need to be signaled again if the current block is merged spatially or temporally.
- Transform block 1107 performs a transform operation with the residual PU, e. Transform block 1107 outputs the residual PU in a transform domain, E.
- a quantizer 1108 then quantizes the transform coefficients of the residual PU, E.
- Quantizer 1108 converts the transform coefficients into a finite number of possible values.
- Entropy coding block 1110 entropy encodes the quantized coefficients, which results in final compression bits to be transmitted. Different entropy coding methods may be used, such as context-adaptive variable length coding (CAVLC) or context-adaptive binary arithmetic coding (CABAC).
- CAVLC context-adaptive variable length coding
- CABAC context-adaptive binary arithmetic coding
- a de-quantizer 1112 de-quantizes the quantized transform coefficients of the residual PU.
- De-quantizer 1112 then outputs the de-quantized transform coefficients, E′.
- An inverse transform block 1114 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′.
- the reconstructed PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form the new reconstructed PU, x′′.
- a loop filter 1116 performs de-blocking on the reconstructed PU, x′′, to reduce blocking artifacts.
- loop filter 1116 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also, loop filter 1116 may perform adaptive filtering over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in a reference buffer 1118 for future temporal prediction.
- FIG. 12 depicts an example of decoder 301 according to one embodiment.
- Decoder 301 receives input bits from encoder 300 for compressed video content.
- An entropy decoding block 1230 performs entropy decoding on input bits corresponding to quantized transform coefficients of a residual PU.
- a de-quantizer 1232 de-quantizes the quantized transform coefficients of the residual PU.
- De-quantizer 1232 then outputs the de-quantized transform coefficients of the residual PU, E′.
- An inverse transform block 1234 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′.
- the reconstructed PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form the new constructed PU, x′′.
- a loop filter 1236 performs de-blocking on the reconstructed PU, x′′, to reduce blocking artifacts. Additionally, loop filter 1236 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also, loop filter 1236 may perform an adaptive loop filter over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in a reference buffer 1238 for future temporal prediction.
- the prediction PU, x′ is obtained through either spatial prediction or temporal prediction.
- a spatial prediction block 1240 may receive decoded spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. The spatial prediction directions are used to determine the prediction PU, x′.
- Temporal prediction block 1242 performs temporal prediction through a motion estimation and motion compensation operation. A decoded motion vector or a motion vector derived from other motion information is then used to determine the prediction PU, x′.
- Spatial-temporal merge manager 302 - 2 receives signaling from spatial-temporal merge manager 302 - 1 indicating which block's motion parameters to use for the current PU. Spatial-temporal merge manager 302 - 2 may communicate with temporal prediction block 1242 to indicate whether the current PU should use motion parameters of a spatially-located block or a temporally-located block. For example, decoded motion vector(s) of a temporally-located block may be used or decoded motion vector(s) of a spatially-located block may be used in a temporal prediction.
- Particular embodiments may be implemented in a non-transitory computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or machine.
- the computer-readable storage medium contains instructions for controlling a computer system to perform a method described by particular embodiments.
- the instructions when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.
Abstract
Description
- The present application claims priority to U.S. Provisional App. No. 61/433,006 for “Joint Spatial and Temporal Merge Mode for HEVC Temporal Block Merge Mode” filed Jan. 14, 2011, the contents of which is incorporated herein by reference in their entirety.
- The present application is related to U.S. application Ser. No. 13/351,782 for “Temporal Block Merge Mode” and U.S. application Ser. No. 13/351,682 for “Spatial Block Merge Mode,” filed concurrently, the contents of which are incorporated herein by reference in their entirety.
- Particular embodiments generally relate to video compression.
- In video sequences, a great degree of temporal redundancy may exist. That is, within a very short period of time, the shape(s) of foreground object(s) and the background within a picture may not vary very much, and pixels in the foreground objects may move along a similar nature. In object-based video coding, different parts of a picture can be coded and transmitted separately as video objects. Motion information of different pixels in the same object should be the same in some cases. However, many bits still need to be used to describe the arbitrary object shape, which reduces coding efficiency. Thus, the efficient representation of object motion is challenging.
- High efficiency video coding (HEVC) is a block-based hybrid spatial and temporal predictive coding scheme. HEVC partitions an input picture into square blocks referred to as largest coding units (LCUs) that could be a size up to 64×64. Theoretically, a larger coding unit is preferred to take advantage of correlation among immediate neighboring pixels. Each LCU can be partitioned into smaller square blocks called coding units (CUs).
FIG. 1A shows an example of an LCU partition of CUs. An LCU 100 is first partitioned into fourCUs 102. Each CU 102 may also be further split into foursmaller CUs 102 that are a quarter of the size of the CU 102. This partitioning process can be repeated based on certain criteria, such as limits to the number of times a CU can be partitioned may be imposed. As shown, CUs 102-1, 102-3, and 102-4 are a quarter of the size ofLCU 100. Further, a CU 102-2 has been split into four CUs 102-5, 102-6, 102-7, and 102-8. - To allow for flexible motion representation and higher coding efficiency, a quadtree data representation is used to describe how LCU 100 is partitioned into
CUs 102.FIG. 1B shows aquadtree 104 of the LCU partition shown inFIG. 1A . Each node ofquadtree 104 is assigned a flag of “1” if the node is further split into four sub-nodes and assigned a flag of “0” if the node is not split. The flag is called a split bit (e.g. 1) or stop bit (e.g., 0) and is coded in a compressed bitstream. - A node 106-1 includes a flag “1” at a top CU level because LCU 100 is split into 4 CUs. At an intermediate CU level, the flags indicate whether a
CU 102 is further split into four CUs. In this case, a node 106-3 includes a flag of “1” because CU 102-2 has been split into four CUs 102-5-102-8. Nodes 106-2, 106-4, and 106-5 include a flag of “0” because theseCUs 102 are not split. Nodes 106-6, 106-7, 106-8, and 106-9 are at a bottom CU level and hence, no flag bit of “0” or “1” is necessary for those nodes because corresponding CUs 102-5-102-8 are not split. The partitioning process may continue all the way to 4×4 blocks. The quadtree data representation forquadtree 104 shown inFIG. 1B may be represented by the binary data of “10100”, where each bit represents a node 106 ofquadtree 104. The binary data indicates the LCU partitioning to the encoder and decoder, and this binary data needs to be coded and transmitted as overhead. - Each
CU 102 may include one or more prediction units (PUs). The PUs may be used to perform spatial prediction or temporal prediction.FIG. 2 shows an example of a CU partition of PUs 202. As shown, aCU 102 has been partitioned into four PUs 202-1-202-4. Spatial or temporal prediction coding may be performed over each PU 202. In inter-mode, motion parameters are coded and transmitted for each PU. The structure may require many bits for motion information, especially for irregularly shaped objects. - A spatial merge mode may be used to improve coding efficiency. The spatial merge mode may merge a current block with its neighboring block(s) to form a “region”. All the pixels within the region share the same motion parameters. Thus, there is no need to code and transmit motion parameters for each individual block of a region. Instead, for a region, only one set of motion parameters is coded and transmitted. The current block is allowed to merge with a spatially-located block that is neighboring the current block to the left or the top. An indicator is used to specify whether the current block is merged with an available neighboring block, either the left neighboring block or the top neighboring block should be used in the spatial merge. The spatial merge mode is limited to merging with spatially-located blocks in the same frame.
- A temporal merge mode may also be used to further improve coding efficiency. The temporal merge mode may enable a current block to use the motion parameters of its temporal neighboring block(s). Thus, there is no need to code and transmit motion parameters for each individual block merged by temporal merge mode. Instead, only one set of motion parameters is coded and transmitted. The current block is allowed to merge with a temporally-located block from a previous encoded/decoded picture. An indicator is used to specify whether the current block is merged with an available temporal neighboring block.
- One embodiment includes a method comprising determining a merge mode for a current block of video content, wherein the merge mode is selected from a candidate list, wherein the candidate list comprises neighboring blocks that are spatially and temporally located with the current block, determining the merge mode by analyzing the motion vector differences between the neighboring spatial blocks and temporal blocks, selecting one or more blocks for encoding the current block, encoding the current block using the motion parameters of the selected one or more selected blocks, and transmitting information to a decoder to indicate which motion parameters from the one or more selected blocks to use in decoding the current block, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block, and wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, wherein no bits, flags or indexes are used to indicate the merge mode. The candidate list can include one or more of spatially-located neighboring blocks, one or more of temporally-located neighboring blocks, or a combination thereof. In one embodiment, the candidate list comprises MVA, MVB, MVC, MVD, assigned as motion vectors (MVs) of spatial neighbors A, B, C, and D, for a region and MVA′, MVB′, MVC′, MVD′, and MVX′ assigned as MVs of the temporal neighbors A′, B′, C′, D′ and X′, for a region. The candidate list can additionally comprise refIdxA, refIdxB, refIdxC, refIdxD, refIdxA′, refIdxB′, refIdxC′, refIdxD′, and refIdxX′ assigned as reference pictures pointed by MVA, MVB, MVC, MVD, MVA′, MVB′, MVC′, MVD′ and MVX′ individually. Determining the merge mode can additionally comprise scaling the motion vectors so that all the scaled motion vectors span the same temporal distance; and calculating spatial MV differences between MVA and MVD and between MVB and MVC as well as temporal MV difference between MVA and MVA′, and between MVB and MVB′.
- Determining the merge mode can also additionally comprises defining the average norm of temporal MV differences as ∥ΔMVTemporal∥=½(∥ΔMVAA′∥+∥ΔMVBB′∥), and comparing the average norm of temporal MV difference, ∥ΔMVTemporal∥, with the norms of the two spatial MV differences, ΔMVAD and ΔMVBC. The encoding the current block may comprise determining temporal merge mode and merging block X with its temporal neighbor block X′ if ∥ΔMVTemporal∥<min(∥ΔMVAD∥, ∥ΔMVBC∥), wherein block X and block X′ will share the same MVX′, and refIdxX′. The encoding the current block may comprise determining top spatial merge mode and merging block X with top block B, if ∥ΔMVTemporal∥≧min(∥ΔMVAD∥, ∥ΔMVBC∥) and ∥ΔMVAD∥≦∥ΔMVBC∥, wherein blocks X and A will share the same MVB and refIdxB.
- In one embodiment, encoding the current block comprises determining left spatial merge mode and merging block X with a left block A if not previously determined top spatial merge mode or temporal merge mode, wherein blocks X and A will share the same MVA and refIdxA. The temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture.
- Another embodiment includes a method including receiving a merge mode for a current block of video content, wherein the merge mode is selected from a candidate list, wherein the candidate list comprises neighboring blocks that are spatially and temporally located with the current block, and determining which candidate block is identified in the merge mode candidate list for decoding a current block of video content, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block; and wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, wherein no bits, flags or indexes are used to indicate the merge mode.
- In one embodiment, the merge mode is one of a spatially-located neighboring block, a temporally-located neighboring block, a combination of spatially-located blocks, a combination of temporally-located blocks, and a combination of spatially-located and temporally-located blocks of the current block. The method may further comprise determining motion parameters for the at least one spatially-located block to the current block of video content, the at least one spatially-located block located in a same picture as the current block; and identifying the at least one spatially-located block in the merge mode candidate list, if the spatially-located block is identified in the candidate list for decoding the current block, the method further comprising using motion parameters for the at least one spatially-located block in decoding the current block of video content. The motion parameters to use in decoding the current block are from the temporally-located block, the spatially-located block, or a combination of motion parameters from spatially-located blocks to the current block. Determining which candidate block can comprise following a set of rules to determine which merge mode to use to determine which motion parameters from the candidate block to use in decoding the current block.
- Another embodiment includes an apparatus comprising one or more computer processors and a computer-readable storage medium comprising instructions for controlling the one or more computer processors to be operable to determine motion parameters for at least one temporally-located block to a current block of video content, the temporally-located block located in a different picture from the current block, identify the at least one temporally-located block in a merge mode candidate list, the merge mode candidate list including candidate blocks in which motion parameters are candidates to be used for the current block, and encode information to a decoder to indicate which motion parameters from a candidate block on the merge mode candidate list to use in decoding the current block, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block, wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, and wherein no bits, flags or indexes are used to indicate the merge mode. The apparatus may be further operable to determine motion parameters for at least one spatially-located block to the current block of video content, the at least one spatially-located block located in a same picture as the current block, and identify the at least one spatially-located block in the merge mode candidate list. The at least one temporally-located block and the at least one spatially-located block may be included on the merge mode candidate list and information is signaled indicating which motion parameters of the at least one temporally-located block and the at least one spatially-located block to use in decoding the current block. The motion parameters to use in decoding the current block are from the at least one temporally-located block, the at least one spatially-located block, or a combination of motion parameters from spatially-located blocks to the current block. The signal may comprise a set of rules at an encoder to allow the decoder to determine which motion parameters from the candidate block on the merge mode candidate list to use.
- Yet another embodiment includes an apparatus comprising one or more computer processors; and a computer-readable storage medium comprising instructions for controlling the one or more computer processors to be operable to receive signaling including a merge mode candidate list, the merge mode candidate list identifying candidate blocks in which motion parameters are candidates to be used for the current block, determine which candidate block is identified in the merge mode candidate list for decoding a current block of video content, and if a temporally-located block is identified, use motion parameters for the temporally-located block in decoding the current block of video content, the temporally-located block located in a different picture from the current block, wherein the one or more spatially-located neighboring blocks reside in the same picture as the current block, wherein the one or more temporally-located neighboring blocks reside in a different picture from the current block, and wherein no bits, flags or indexes are used to indicate the merge mode.
- The merge mode candidate list includes at least one spatially-located block to the current block, the at least one spatially-located block located in a same picture as the current block, and if the at least one spatially-located block is identified in the candidate list for decoding the current block, further operable to use motion parameters for the at least one spatially-located block in decoding the current block of video content. The motion parameters from candidate blocks in the merge mode candidate list are from the at least one temporally-located block, the at least one spatially-located block or a combination of motion parameters from spatially-located blocks to the current block. Determining which candidate block can comprise following a set of rules to determine which merge mode to use to determine which motion parameters from the candidate block to use in decoding the current block.
- The following detailed description and accompanying drawings provide a more detailed understanding of the nature and advantages of the present invention.
-
FIG. 1A shows an example of an LCU partition. -
FIG. 1B shows a quadtree of the LCU partition shown inFIG. 1A . -
FIG. 2 shows an example of a CU partition of PUs -
FIG. 3 depicts an example of a system for encoding and decoding video content according to one embodiment. -
FIG. 4 depicts temporal and spatial neighboring blocks according to one embodiment. -
FIG. 5 depicts a scenario when block X is not in any merge mode according to one embodiment. -
FIG. 6 depicts a scenario when block X is merged with block A in the spatial merge mode according to one embodiment. -
FIG. 7 depicts a scenario when block X is merged with block B in the spatial merge mode according to one embodiment. -
FIG. 8 depicts a scenario when block X is merged with block C in a temporal merge mode according to one embodiment. -
FIG. 9 depicts a simplified flowchart of a method for determining which mode to use in an encoding process according to one embodiment. -
FIG. 10 depicts a simplified flowchart of a method for decoding for a current block according to one embodiment -
FIG. 11 depicts an example of an encoder according to one embodiment. -
FIG. 12 depicts an example of a decoder according to one embodiment. - Described herein are techniques for a video compression system. In the following description, for purposes of explanation, numerous examples and specific details are set forth in order to provide a thorough understanding of embodiments of the present invention. Particular embodiments as defined by the claims may include some or all of the features in these examples alone or in combination with other features described below, and may further include modifications and equivalents of the features and concepts described herein.
-
FIG. 3 depicts an example of a system for encoding and decoding video content according to one embodiment. The system includes anencoder 300 and adecoder 301, both of which will be described in more detail below.Encoder 300 uses a spatial-temporal merge manager 302-1 in an encoding process anddecoder 301 uses a spatial-temporal merge manager 302-2 in a decoding process. In one embodiment,encoder 300 anddecoder 301 use the HEVC coding scheme. - Each spatial-temporal merge manager 302 allows temporal correlation to be taken into consideration in addition to spatially-located blocks while in a merge mode. That is, given a current block in the merge mode, spatially-located blocks may be used (i.e., a spatial merge mode) in addition to a temporally-located block (i.e., a temporal merge mode) in a merge with the current block. For example, the left and top neighboring blocks may be used as spatially-located blocks, and a block in a previously coded picture, such as a co-located block in another frame (e.g., previously coded frame) to the current block, may be used as a temporally-located block. A co-located block may be a block that is in a similar position as the current block in another frame, such as any frame that has been encoded/decoded before the current block may be used. Blocks in other frames other than a co-located block may also be used. Motion parameters of the current block may be derived from the spatially-located blocks and used in the spatial merge, and/or from temporally-located blocks and used in the temporal merge.
- As in the spatial merge mode, the temporal merge mode may merge a current block with the temporally-located block to form a “region”. All the pixels within the region share the same motion parameters. Thus, there is no need to code and transmit motion parameters for the current block. Instead, motion parameters of a temporally-located block can be used for the current block.
- In addition, a current block may conceptually merge with more than one spatially-located block and/or temporally-located block, and uses the motion parameters of more than one spatially-located block and/or temporally-located blocks to form its own motion parameters. For example, the current block may conceptually merge with two different spatially-located blocks, and uses the motion parameters from the two different spatially-located blocks to form the motion parameters in spatial merge.
- The motion parameters, including motion vectors, may be scaled according to the time (temporal) difference between the reference picture and the current picture. Motion parameters are motion vectors plus reference picture indices. Reference picture indices are used to indicate which picture is used for reference. For the scaling process, this should be applied on motion vectors. For example, block A is the current block in picture 3 and it needs to get a reference in picture 2. Block B is the upper block and its motion parameter points to a reference in
picture 1. Due to the different reference pictures, the motion vector of block B needs to be scaled before applied to block A in merge mode. - The temporally-located and spatially-located blocks described above may be identified on a merge mode candidate list. For example, the temporally-located block, the left and top spatially-located blocks, and conceptually combined blocks may be candidates to be merged with a current block. Particular embodiments provide do not require signaling in the form of bits, flags or indexing from spatial-temporal merge manager 302-1 to spatial-temporal merge manager 302-2 to indicate with which block the current block is merged. Hence, the decoder will know which block's motion parameters are to be used in decoding the current block. For example, signaling of which merge mode may not be performed as
encoder 300 anddecoder 301 may follow a set of rules to determine which merge mode to use. Additionally, other flags may be used. - The temporally-located block may be used to leverage temporal redundancy that may exist in video sequences. That is, the shape of objects may not change to a great degree in a short period of time. Thus, the motion parameters for a temporally-located block may be used with a current block.
-
FIGS. 4-8 illustrate the various merging scenarios for spatial-temporal merging according to one embodiment. Which merge mode, either spatial merge mode, or temporal merge mode, to use, may be determined in different ways. For example, U.S. application Ser. No. ______, for “Temporal Block Merge Mode for HEVC” describes different ways of determining which merge mode to use and how to signal certain parameters. Described herein are different ways of determining which merge mode to use. -
FIG. 4 depicts temporal and spatial neighboring blocks according to one embodiment. In a frame t, a current block is a block X. Current block X is allowed to spatially merge with a left neighboring block, block B, or a top neighboring block, a block A. Additionally, current block X is allowed to temporally merge with a block C in a different picture t-1. Block C is temporally co-located with current block X. That is, block C is located in a same position as block X but at a different time. For example, block C may have been coded at a previous time. -
FIG. 5 , for reference purposes, depicts a scenario when block X is not in any merge mode according to one embodiment. Motion vectors 502-1, 502-2, and 502-3 are shown for blocks in frame t. A motion vector 502-4 is shown for block C in frame t-1. In this case, the motion parameters, such as the motion vector, need to be coded. Additionally, the motion parameters may be a reference picture index indicating which reference picture is used for prediction. In such embodiments, the actual motion parameters are sent fromencoder 300 todecoder 301 in this case. -
FIG. 6 depicts a scenario when block X is merged with block A in the spatial merge mode according to one embodiment. In this case, motion vector 502-1 for block X is the same as motion vector 502-2. Block X is thus spatially merged with block A, which is the top neighboring block. Motion parameters for motion vector 502-1 only need to be coded once in this example for block X and block A. As will be discussed below, certain calculations will determine that block X is merged with block A. -
FIG. 7 depicts a scenario when block X is merged with block B in the spatial merge mode according to one embodiment. Block B is the left neighboring block to block X, and motion vector 502-1 is the same as motion vector 502-3 for block B. Motion parameters only need to be coded once in this example for block X and block B. That is, the same motion parameters used for block B, such as motion vector 502-3, are used to for block X. -
FIG. 8 depicts a scenario when block X is merged with block C in a temporal merge mode according to one embodiment. Motion vector 502-1 for block X is the same as motion vector 502-4 for block C. In this case, motion parameters only need to be coded once in this example for block X and block C. For example, motion parameters are not coded for block X, and the motion parameters, such as motion vector 502-4, for block C are used. - Known methods use different ways of indicating which merge mode to use. In one embodiment, an index may be used. Also, flags, such as the three flags merge_flag, merge_temporal_flag, and merge_left_flag, may be used. In all these cases, the use of two-three extra bits must be used to communicate the signal.
- The advantage of merge mode is the saving of motion information for block X. However, in current methods known in the art, one extra bit is required for a current block to indicate if the current block is in merge mode, or not, for example, through the use of flags. Using an embodiment utilizing flags, if the current block is in merge mode, for example merge_flag is set to 1, one additional bit is required to indicate if the current block is merged with its left or top coded neighboring block if the left and top coded neighboring blocks have different motion information. In one embodiment, flag can be used, for example, merge_temporal_flag and merge_left_flag to signal such scenarios.
- Therefore, when the use of merge mode is present, it adds one or two additional bits per block. This one or two bits per block can be costly, especially at low bit-rates.
- Described herein is a way to save one bit per block. Instead of sending the bit to signal if the current block is merged with its top or left neighboring block, the merging direction is derived based upon the motion information of the coded neighboring blocks. Further, also disclosed is consideration of the temporal collocated block, but which in current practice requires an additional bit to signal if the current block is merged either temporally or spatially. In total, three bits per block are required to implement this joint temporal and spatial merge mode.
- Accordingly, described herein, are systems and methods to implement joint temporal and spatial merge mode, but also save the bit required to indicate whether a current block is merged temporally or spatially and the bit required to indicate whether a current block is merged with its left or top neighboring block or a temporally located block. Specifically, given a current block in merge mode, merging direction is dependent upon motion information of the neighboring blocks.
- Particular embodiments use different ways of indicating which block to use from a merge mode candidate list.
FIG. 9 depicts a simplified flowchart of a method for determining which mode to use in an encoding process according to one embodiment. At 902, spatial-temporal merge manager 302-1 determines if a current block X should be in a merge mode. If not, at 904, motion parameters for block X are coded. This may be the normal coding process for block X. Either flags, indexes or some other mechanism is used to indicate that merge mode is not enabled. - If a merge mode is selected, at 906, spatial-temporal merge manager 302-1 enables the merge mode. For example, spatial-temporal merge manager 302-1 sets an index, flag, bit or some other indicator to indicate that the merge mode is enabled.
- At
block 910, let MVA, MVB, MVC, MVD be the MV of the spatial neighbors A, B, C, and D, and atblock 912, let MVA′, MVB′, MVC′, MVD′, and MVX′ be the MV of the temporal neighbors A′, B′, C′, D′ and X′ per reference list individually. - At
blocks - As previously mentioned, the current block X is in merge mode. Possible actions include being temporally merged with block X′, or spatially merged with either block A or block B.
- Instead of sending bits, flags, indexing or some other signaling, specifically, given a current block in merge mode, merging direction is determined dependent upon motion information to the neighboring blocks. This is explained in more detail, below.
- A current block X has four spatially coded neighbors, A, B, C and D in the current picture, and four temporally coded neighboring block A′, B′ C′ and D′ in previously coded picture. There may be one, two, or more reference lists available for the current block X.
- The merging direction of block X per reference list is determined as follows:
- At
block 921 Scale MVA, MVB, MVC, MVD, MVA′, MVB′, MVC′, and MVD′ so that all the scaled MVs span the same temporal distance, that is, -
- At
block 922, the spatial MV differences between MVA and MVD and between MVB and MVC, are calculated, as well as the temporal MV difference between MVA and MVA′, and between MVB and MVB′ as -
- At
block 924, define the average norm of temporal MV differences as ∥ΔMVTemporal∥=½(∥ΔMVAA′∥+∥ΔMVBB′∥). - At
block 926, compare the average norm of temporal MV difference, ∥ΔMVTemporal∥, with the norms of other two spatial MV differences, ΔMVAD and ΔMVBC. - At
decision 928, spatial-temporal merge manager 302-1 determines ∥ΔMVTemporal∥<min(∥ΔMVAD∥, ∥ΔMVBC∥). If true, temporal merge mode should be enabled, as inblock 930, and X is merged with its temporal neighbor block X′. Block X and block X′ will share the same MVX′, and refIdxX′. Note that the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture. - Otherwise, advancing to block 934, if spatial-temporal merge manager 302-1 determines that ∥ΔMVTemporal∥≧min(∥ΔMVAD∥, ∥ΔMVBC∥) and that ∥ΔMVAD∥≦∥ΔMVBC∥ are both true, then, the top neighboring block is to be used in the spatial merge, that is, that the calculation result itself indicates that the top neighboring block should be merged spatially with block X, for example, at
block 936, block X is merged with the top block B, implying blocks X and B will share the same MVB and refIdxB, Otherwise, atblock 938, block X is merged with the left block A, implying blocks X and A will share the same MVA and refIdxA. In other embodiments, operations can be performed to indicate with blocks other than the left and the top neighboring blocks should be used. - At 929, spatial-temporal merge manager 302-1 has determined and may store information indicating the merge mode used.
Encoder 300 also encodes the motion parameters for the merged region at least once. Each block in the merged region use the same motion parameters so sending the motion parameters for each block in the region is avoided, which reduces overhead. - In an alternative embodiment is as follows: Returning to
FIG. 9 , blocks 902-921 are performed, but with the following alternate values: - At
block 922, the spatial MV differences are calculated between MVA and MVD and between MVB and MVD, as well as atblock 922 the temporal MV differences between MVA and MVA′, between MVB and MVB′, between MVC and MVC′, and between MVD and MVD′, that is, -
- At
block 924, define the average norm of temporal MV difference as -
∥ΔMV Temporal∥=¼(∥ΔMV AA′ ∥+∥ΔMV BB′ ∥+∥ΔMV CC′ ∥+∥ΔMV DD′∥) - At
block 926, compare ∥ΔMVtemporal∥, ∥ΔMVAD∥ and ∥ΔMVBC∥ to determine the merging direction of block X. - At
decision block 928, if -
∥ΔMV Temporal∥<min(∥ΔMV AD ∥,∥ΔMV BC∥), - Current block X is merged with its temporal neighbor block X′ at
block 930. Block X and block X′ will share the same MVX′, and refIdxX′. Note that the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture. Otherwise, the method advances to block 934 and spatial merge mode is engaged atblocks block 929 the information is encoded. - There may be one or more derived MV(s) for a current block X in merge mode, depending upon the number of reference lists available for the current block X.
- Since blocks A, B, C, D, A′, B′, C′, D′ and X′ are coded block for the current block X, their motion information are available for both encoder and decoder. Hence, no bit is required to indicate which neighboring block's motion information is used for a current block in merge mode.
- Note that if A, B, C, D, A′, B′, C′, D′, or X′ is not available or in intra mode, the associated MV(s) are set to be (0,0) and refIdx to −1.
-
FIG. 10 depicts asimplified flowchart 1000 of a method for decoding for a current block according to one embodiment. At 1002, spatial-temporal merge manager 302-2 determines if the merge mode is enabled for a current block X. For example, spatial-temporal merge manager 302-2 determines if the flag merge_flag is set to a value of “0” to indicate that current block X is not in any merge mode or to a value of “1” to indicate that the current block X is in the merge mode. If the merge mode is not enabled, at 1004, then motion parameters for block X are determined and used in motion prediction atdecoder 301. In another embodiment, information in an index is used to determine if the merge mode is or is not enabled. - At 1006, spatial-temporal merge manager 302-2 determines if the temporal merge mode is enabled.
- At
block 1010, MVA, MVB, MVC, MVD are set to the MV of the spatial neighbors A, B, C, and D, and atblock 1012, let MVA′, MVB′, MVC′, MVD′ and MVX′ are set to the MV of the temporal neighbors A′, B′, C′, D′ and X′ per reference list individually. - At
blocks 1014 and 1016, refIdxA, refIdxB, refIdxC, refIdxD, refIdxA′, refIdxB′, refIdxC′, refIdxD′, and refIdxX′, are set to the reference pictures pointed by MVA, MVB, MVC, MVD, MVA′, MVB′, MVC′, MVD′ and MVX′ individually. - As in the encoder, instead of receiving bits, flags, indexing or some other signaling, specifically, given a current block in merge mode, merging direction is determined dependent upon motion information to the neighboring blocks. This is explained in more detail, below.
- Again, the merging direction of block X per reference list is determined as follows:
- At block 1021 MVA, MVB, MVC, MVD, MVA′, MVB′, MVC′, and MVD′ are all scaled so that all the scaled MVs span the same temporal distance, that is,
-
- At block 1022, the spatial MV differences between MVA and MVD and between MVB and MVC are calculated, as well as the temporal MV difference between MVA and MVA′, and between MVB and MVB′ as
-
- At block 1024, define the average norm of temporal MV differences as
-
∥ΔTemporal∥=½(∥ΔMV AA′ ∥+∥ΔMV BB′∥). - At block 1026, compare the average norm of temporal MV difference, ∥ΔMVTemporal∥, with the norms of other two spatial MV differences, ΔMVAD and ΔMVBC.
- At decision 1028, spatial-temporal merge manager 302-1 determines ∥ΔMVTemporal∥<min(∥ΔMVAD∥, ∥ΔMVBC∥). If true, temporal merge mode should be enabled, as in block 1030, and X is merged with its temporal neighbor block X′. Block X and block X′ will share the same MVX′, and refIdxX′. Note that the temporal distance between block X and its associated reference picture will be the same as between block X′ and its associated reference picture.
- Otherwise, advancing to block 1034, if spatial-temporal merge manager 302-1 determines that ∥ΔMVTemporal∥≧min(∥ΔMVAD∥, ∥ΔMVBC∥) and that ∥ΔMVAD∥≦∥ΔMVBC∥ are both true, then, the top neighboring block is to be used in the spatial merge, that is, that the calculation result itself indicates that the top neighboring block should be merged spatially with block X, for example, at block 1036, block X is merged with the top block B, implying blocks X and B will share the same MVB and refIdxB,
- Otherwise, at block 1038, block X is merged with the left block A, implying blocks X and A will share the same MVA and refIdxA. In other embodiments, operations can be performed to indicate with blocks other than the left and the top neighboring blocks should be used.
- For example, the encoded value will indicate the type of merge. If the encoded value indicates a spatial merge, then the current block is merged spatially. However, the encoded information can also indicate a temporal merge mode, and then, for example, at 1008, the current block is merged temporally with a temporally-located block. For example, current block X may be merged with a temporally co-located block C. In this case, coding parameters for block C may be used in the motion prediction.
- At 1010, if the temporal merge mode is not enabled, spatial-temporal merge manager 302-2 determines which spatially-located block should be used in a spatial merge mode. At 1012, if the left neighboring block should not be used, then the current block is merged with a top neighboring block. In this case, coding parameters for the top neighboring block are used in the motion prediction. At 1014, if the left neighboring block should be used, then the current block is merged with a left neighboring block. In this case, coding parameters for the left neighboring block are used in the motion prediction.
-
FIG. 11 depicts an example of anencoder 300 according to one embodiment. A general operation ofencoder 300 will now be described. It will be understood that variations on the encoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein. - For a current PU, x, a prediction PU, x′, is obtained through either spatial prediction or temporal prediction. The prediction PU is then subtracted from the current PU, resulting in a residual PU, e. A
spatial prediction block 1104 may include different spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. - A
temporal prediction block 1106 performs temporal prediction through a motion estimation and motion compensation operation. The motion estimation operation searches for a best match prediction for the current PU over reference pictures. The best match prediction is described by a motion vector (MV) and associated reference picture (refIdx). The motion vector and associated reference picture are included in the coded bit stream. In motion compensation, a best match prediction for the current PU is determined using the MV and refIdx. - Spatial-temporal merge manager 302-1 may communicate with a
temporal prediction block 1106 to perform motion prediction for a current PU. If the current block is merged with a spatially-located block or a temporally-located block, spatial-temporal merge manager 302-1 may signal information indicating which block should be used in decoding the current block. Motion parameters for the current block do not need to be signaled again if the current block is merged spatially or temporally. -
Transform block 1107 performs a transform operation with the residual PU, e.Transform block 1107 outputs the residual PU in a transform domain, E. - A
quantizer 1108 then quantizes the transform coefficients of the residual PU,E. Quantizer 1108 converts the transform coefficients into a finite number of possible values.Entropy coding block 1110 entropy encodes the quantized coefficients, which results in final compression bits to be transmitted. Different entropy coding methods may be used, such as context-adaptive variable length coding (CAVLC) or context-adaptive binary arithmetic coding (CABAC). - Also, in a decoding process within
encoder 300, a de-quantizer 1112 de-quantizes the quantized transform coefficients of the residual PU. De-quantizer 1112 then outputs the de-quantized transform coefficients, E′. Aninverse transform block 1114 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′. The reconstructed PU, e′, is then added to the corresponding prediction, x′, either spatial or temporal, to form the new reconstructed PU, x″. Aloop filter 1116 performs de-blocking on the reconstructed PU, x″, to reduce blocking artifacts. Additionally,loop filter 1116 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also,loop filter 1116 may perform adaptive filtering over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in areference buffer 1118 for future temporal prediction. -
FIG. 12 depicts an example ofdecoder 301 according to one embodiment. A general operation ofdecoder 301 will now be described. It will be understood that variations on the decoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein.Decoder 301 receives input bits fromencoder 300 for compressed video content. - An
entropy decoding block 1230 performs entropy decoding on input bits corresponding to quantized transform coefficients of a residual PU. A de-quantizer 1232 de-quantizes the quantized transform coefficients of the residual PU. De-quantizer 1232 then outputs the de-quantized transform coefficients of the residual PU, E′. Aninverse transform block 1234 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′. - The reconstructed PU, e′, is then added to the corresponding prediction, x′, either spatial or temporal, to form the new constructed PU, x″. A
loop filter 1236 performs de-blocking on the reconstructed PU, x″, to reduce blocking artifacts. Additionally,loop filter 1236 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also,loop filter 1236 may perform an adaptive loop filter over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in areference buffer 1238 for future temporal prediction. - The prediction PU, x′, is obtained through either spatial prediction or temporal prediction. A
spatial prediction block 1240 may receive decoded spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. The spatial prediction directions are used to determine the prediction PU, x′. -
Temporal prediction block 1242 performs temporal prediction through a motion estimation and motion compensation operation. A decoded motion vector or a motion vector derived from other motion information is then used to determine the prediction PU, x′. - Spatial-temporal merge manager 302-2 receives signaling from spatial-temporal merge manager 302-1 indicating which block's motion parameters to use for the current PU. Spatial-temporal merge manager 302-2 may communicate with
temporal prediction block 1242 to indicate whether the current PU should use motion parameters of a spatially-located block or a temporally-located block. For example, decoded motion vector(s) of a temporally-located block may be used or decoded motion vector(s) of a spatially-located block may be used in a temporal prediction. - Particular embodiments may be implemented in a non-transitory computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or machine. The computer-readable storage medium contains instructions for controlling a computer system to perform a method described by particular embodiments. The instructions, when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.
- As used in the description herein and throughout the claims that follow, “a”, “an”, and “the” includes plural references unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of “in” includes “in” and “on” unless the context clearly dictates otherwise.
- The above description illustrates various embodiments of the present invention along with examples of how aspects of the present invention may be implemented. The above examples and embodiments should not be deemed to be the only embodiments, and are presented to illustrate the flexibility and advantages of the present invention as defined by the following claims. Based on the above disclosure and the following claims, other arrangements, embodiments, implementations and equivalents may be employed without departing from the scope of the invention as defined by the claims.
Claims (25)
∥ΔMV Temporal∥=½(∥ΔMV AA′ ∥+∥ΔMV BB′∥); and
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP12702360.4A EP2664146A1 (en) | 2011-01-14 | 2012-01-17 | Joint spatial and temporal block merge mode for hevc |
PCT/US2012/021602 WO2012097377A1 (en) | 2011-01-14 | 2012-01-17 | Joint spatial and temporal block merge mode for hevc |
US13/351,906 US8737480B2 (en) | 2011-01-14 | 2012-01-17 | Joint spatial and temporal block merge mode for HEVC |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161433006P | 2011-01-14 | 2011-01-14 | |
US13/351,906 US8737480B2 (en) | 2011-01-14 | 2012-01-17 | Joint spatial and temporal block merge mode for HEVC |
Publications (2)
Publication Number | Publication Date |
---|---|
US20130114720A1 true US20130114720A1 (en) | 2013-05-09 |
US8737480B2 US8737480B2 (en) | 2014-05-27 |
Family
ID=45562458
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/351,906 Active 2032-03-28 US8737480B2 (en) | 2011-01-14 | 2012-01-17 | Joint spatial and temporal block merge mode for HEVC |
Country Status (3)
Country | Link |
---|---|
US (1) | US8737480B2 (en) |
EP (1) | EP2664146A1 (en) |
WO (1) | WO2012097377A1 (en) |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120189055A1 (en) * | 2011-01-21 | 2012-07-26 | Qualcomm Incorporated | Motion vector prediction |
US20130329807A1 (en) * | 2011-03-03 | 2013-12-12 | Electronics And Telecommunications Research Institute | Method for scanning transform coefficient and device therefor |
US20140192883A1 (en) * | 2013-01-08 | 2014-07-10 | Qualcomm Incorporated | Device and method for scalable coding of video information based on high efficiency video coding |
US20140321544A1 (en) * | 2011-08-17 | 2014-10-30 | Canon Kabushiki Kaisha | Method and Device for Encoding a Sequence of Images and Method and Device for Decoding a Sequence of Images |
US20160241858A1 (en) * | 2013-10-14 | 2016-08-18 | Microsoft Technology Licensing, Llc | Encoder-side options for intra block copy prediction mode for video and image coding |
US20190052886A1 (en) * | 2017-08-08 | 2019-02-14 | Mediatek Inc. | Intra Merge Prediction |
US10390034B2 (en) | 2014-01-03 | 2019-08-20 | Microsoft Technology Licensing, Llc | Innovations in block vector prediction and estimation of reconstructed sample values within an overlap area |
US10469863B2 (en) | 2014-01-03 | 2019-11-05 | Microsoft Technology Licensing, Llc | Block vector prediction in video and image coding/decoding |
US10582213B2 (en) | 2013-10-14 | 2020-03-03 | Microsoft Technology Licensing, Llc | Features of intra block copy prediction mode for video and image coding and decoding |
CN110944204A (en) * | 2018-09-23 | 2020-03-31 | 北京字节跳动网络技术有限公司 | Simplified spatio-temporal motion vector prediction |
WO2020073896A1 (en) * | 2018-10-08 | 2020-04-16 | Huawei Technologies Co., Ltd. | Apparatuses and methods for inter prediction of a triangle partition of a coding block |
US10666970B2 (en) * | 2015-11-18 | 2020-05-26 | Canon Kabushiki Kaisha | Encoding apparatus, encoding method, and storage medium |
US10785486B2 (en) | 2014-06-19 | 2020-09-22 | Microsoft Technology Licensing, Llc | Unified intra block copy and inter prediction modes |
US10812817B2 (en) | 2014-09-30 | 2020-10-20 | Microsoft Technology Licensing, Llc | Rules for intra-picture prediction modes when wavefront parallel processing is enabled |
CN112655214A (en) * | 2018-04-12 | 2021-04-13 | 艾锐势有限责任公司 | Motion information storage for video coding and signaling |
US10986349B2 (en) | 2017-12-29 | 2021-04-20 | Microsoft Technology Licensing, Llc | Constraints on locations of reference blocks for intra block copy prediction |
US11025943B2 (en) * | 2017-10-20 | 2021-06-01 | Kt Corporation | Video signal processing method and device |
US11284103B2 (en) | 2014-01-17 | 2022-03-22 | Microsoft Technology Licensing, Llc | Intra block copy prediction with asymmetric partitions and encoder-side search patterns, search ranges and approaches to partitioning |
US11812038B2 (en) * | 2011-03-03 | 2023-11-07 | Electronics And Telecommunications Research Institute | Method for scanning transform coefficient and device therefor |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
MX365013B (en) * | 2011-08-29 | 2019-05-20 | Ibex Pt Holdings Co Ltd | Method for generating prediction block in amvp mode. |
US20130107962A1 (en) * | 2011-10-26 | 2013-05-02 | Intellectual Discovery Co., Ltd. | Scalable video coding method and apparatus using inter prediction mode |
KR102179383B1 (en) | 2013-08-09 | 2020-11-16 | 삼성전자주식회사 | Method and apparatus for determining merge mode |
EP3905685B1 (en) | 2018-12-28 | 2024-03-20 | JVCKenwood Corporation | Image encoding device, image encoding method, image encoding program, image decoding device, image decoding method, and image decoding program |
BR112021012479A2 (en) | 2018-12-28 | 2021-09-08 | Jvckenwood Corporation | MOTION PICTURE ENCODING DEVICE, MOTION PICTURE ENCODING METHOD, MOTION PICTURE ENCODING PROGRAM, MOTION PICTURE DECODING DEVICE, MOTION PICTURE DECODING METHOD AND MOTION PICTURE DECODING PROGRAM |
CA3119653A1 (en) * | 2019-03-08 | 2020-09-17 | Jvckenwood Corporation | Video encoding device, video encoding method, video encoding program, video decoding device, video decoding method, and video decoding program |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070047649A1 (en) * | 2005-08-30 | 2007-03-01 | Sanyo Electric Co., Ltd. | Method for coding with motion compensated prediction |
US20070140352A1 (en) * | 2005-12-19 | 2007-06-21 | Vasudev Bhaskaran | Temporal and spatial analysis of a video macroblock |
WO2009051419A2 (en) * | 2007-10-16 | 2009-04-23 | Lg Electronics Inc. | A method and an apparatus for processing a video signal |
US20100290530A1 (en) * | 2009-05-14 | 2010-11-18 | Qualcomm Incorporated | Motion vector processing |
US20120027094A1 (en) * | 2009-02-20 | 2012-02-02 | Kazushi Sato | Image processing device and method |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP4788649B2 (en) | 2007-04-27 | 2011-10-05 | 株式会社日立製作所 | Moving image recording method and apparatus |
-
2012
- 2012-01-17 US US13/351,906 patent/US8737480B2/en active Active
- 2012-01-17 EP EP12702360.4A patent/EP2664146A1/en not_active Withdrawn
- 2012-01-17 WO PCT/US2012/021602 patent/WO2012097377A1/en active Application Filing
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070047649A1 (en) * | 2005-08-30 | 2007-03-01 | Sanyo Electric Co., Ltd. | Method for coding with motion compensated prediction |
US20070140352A1 (en) * | 2005-12-19 | 2007-06-21 | Vasudev Bhaskaran | Temporal and spatial analysis of a video macroblock |
WO2009051419A2 (en) * | 2007-10-16 | 2009-04-23 | Lg Electronics Inc. | A method and an apparatus for processing a video signal |
US20100220790A1 (en) * | 2007-10-16 | 2010-09-02 | Lg Electronics Inc. | method and an apparatus for processing a video signal |
US20120027094A1 (en) * | 2009-02-20 | 2012-02-02 | Kazushi Sato | Image processing device and method |
US20100290530A1 (en) * | 2009-05-14 | 2010-11-18 | Qualcomm Incorporated | Motion vector processing |
Cited By (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9532066B2 (en) * | 2011-01-21 | 2016-12-27 | Qualcomm Incorporated | Motion vector prediction |
US20120189055A1 (en) * | 2011-01-21 | 2012-07-26 | Qualcomm Incorporated | Motion vector prediction |
US11102494B2 (en) * | 2011-03-03 | 2021-08-24 | Electronics And Telecommunication Research Institute | Method for scanning transform coefficient and device therefor |
US20210344935A1 (en) * | 2011-03-03 | 2021-11-04 | Electronics And Telecommunications Research Institute | Method for scanning transform coefficient and device therefor |
US11606567B2 (en) * | 2011-03-03 | 2023-03-14 | Electronics And Telecommunications Research Institute | Method for scanning transform coefficient and device therefor |
US11812038B2 (en) * | 2011-03-03 | 2023-11-07 | Electronics And Telecommunications Research Institute | Method for scanning transform coefficient and device therefor |
US20130329807A1 (en) * | 2011-03-03 | 2013-12-12 | Electronics And Telecommunications Research Institute | Method for scanning transform coefficient and device therefor |
US11134266B2 (en) * | 2011-08-17 | 2021-09-28 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US10306256B2 (en) * | 2011-08-17 | 2019-05-28 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US20190215529A1 (en) * | 2011-08-17 | 2019-07-11 | Canon Kabushiki Kaisha | Method and Device for Encoding a Sequence of Images and Method and Device for Decoding a Sequence of Images |
US11134265B2 (en) * | 2011-08-17 | 2021-09-28 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US11968390B2 (en) * | 2011-08-17 | 2024-04-23 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US20140321544A1 (en) * | 2011-08-17 | 2014-10-30 | Canon Kabushiki Kaisha | Method and Device for Encoding a Sequence of Images and Method and Device for Decoding a Sequence of Images |
US11134264B2 (en) * | 2011-08-17 | 2021-09-28 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US11729415B2 (en) * | 2011-08-17 | 2023-08-15 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US20210392368A1 (en) * | 2011-08-17 | 2021-12-16 | Canon Kabushiki Kaisha | Method and Device for Encoding a Sequence of Images and Method and Device for Decoding a Sequence of Images |
US10771806B2 (en) * | 2011-08-17 | 2020-09-08 | Canon Kabushiki Kaisha | Method and device for encoding a sequence of images and method and device for decoding a sequence of images |
US9826244B2 (en) * | 2013-01-08 | 2017-11-21 | Qualcomm Incorporated | Device and method for scalable coding of video information based on high efficiency video coding |
US20140192883A1 (en) * | 2013-01-08 | 2014-07-10 | Qualcomm Incorporated | Device and method for scalable coding of video information based on high efficiency video coding |
US10582213B2 (en) | 2013-10-14 | 2020-03-03 | Microsoft Technology Licensing, Llc | Features of intra block copy prediction mode for video and image coding and decoding |
US20210360262A1 (en) * | 2013-10-14 | 2021-11-18 | Microsoft Technology Licensing, Llc | Encoder-side options for intra block copy prediction mode for video and image coding |
US20160241858A1 (en) * | 2013-10-14 | 2016-08-18 | Microsoft Technology Licensing, Llc | Encoder-side options for intra block copy prediction mode for video and image coding |
US11109036B2 (en) * | 2013-10-14 | 2021-08-31 | Microsoft Technology Licensing, Llc | Encoder-side options for intra block copy prediction mode for video and image coding |
US10469863B2 (en) | 2014-01-03 | 2019-11-05 | Microsoft Technology Licensing, Llc | Block vector prediction in video and image coding/decoding |
US10390034B2 (en) | 2014-01-03 | 2019-08-20 | Microsoft Technology Licensing, Llc | Innovations in block vector prediction and estimation of reconstructed sample values within an overlap area |
US11284103B2 (en) | 2014-01-17 | 2022-03-22 | Microsoft Technology Licensing, Llc | Intra block copy prediction with asymmetric partitions and encoder-side search patterns, search ranges and approaches to partitioning |
US10785486B2 (en) | 2014-06-19 | 2020-09-22 | Microsoft Technology Licensing, Llc | Unified intra block copy and inter prediction modes |
US10812817B2 (en) | 2014-09-30 | 2020-10-20 | Microsoft Technology Licensing, Llc | Rules for intra-picture prediction modes when wavefront parallel processing is enabled |
US10666970B2 (en) * | 2015-11-18 | 2020-05-26 | Canon Kabushiki Kaisha | Encoding apparatus, encoding method, and storage medium |
US11172203B2 (en) * | 2017-08-08 | 2021-11-09 | Mediatek Inc. | Intra merge prediction |
US20190052886A1 (en) * | 2017-08-08 | 2019-02-14 | Mediatek Inc. | Intra Merge Prediction |
CN111034194A (en) * | 2017-08-08 | 2020-04-17 | 联发科技股份有限公司 | Intra-picture merge prediction |
US11627330B2 (en) | 2017-10-20 | 2023-04-11 | Kt Corporation | Video signal processing method and device |
US11025943B2 (en) * | 2017-10-20 | 2021-06-01 | Kt Corporation | Video signal processing method and device |
US10986349B2 (en) | 2017-12-29 | 2021-04-20 | Microsoft Technology Licensing, Llc | Constraints on locations of reference blocks for intra block copy prediction |
US11457233B2 (en) * | 2018-04-12 | 2022-09-27 | Arris Enterprises Llc | Motion information storage for video coding and signaling |
CN112655214A (en) * | 2018-04-12 | 2021-04-13 | 艾锐势有限责任公司 | Motion information storage for video coding and signaling |
US11575903B2 (en) | 2018-09-23 | 2023-02-07 | Beijing Bytedance Network Technology Co., Ltd. | 8-parameter affine mode |
US11546601B2 (en) | 2018-09-23 | 2023-01-03 | Beijing Bytedance Network Technology Co., Ltd. | Utilization of non-sub block spatial-temporal motion vector prediction in inter mode |
CN110944203A (en) * | 2018-09-23 | 2020-03-31 | 北京字节跳动网络技术有限公司 | Motion vector plane mode at block level |
US11778194B2 (en) | 2018-09-23 | 2023-10-03 | Beijing Bytedance Network Technology Co., Ltd | MV planar mode with block level |
CN110944204A (en) * | 2018-09-23 | 2020-03-31 | 北京字节跳动网络技术有限公司 | Simplified spatio-temporal motion vector prediction |
WO2020073896A1 (en) * | 2018-10-08 | 2020-04-16 | Huawei Technologies Co., Ltd. | Apparatuses and methods for inter prediction of a triangle partition of a coding block |
Also Published As
Publication number | Publication date |
---|---|
US8737480B2 (en) | 2014-05-27 |
EP2664146A1 (en) | 2013-11-20 |
WO2012097377A1 (en) | 2012-07-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8737480B2 (en) | Joint spatial and temporal block merge mode for HEVC | |
US9066104B2 (en) | Spatial block merge mode | |
US8929450B2 (en) | Temporal block merge mode | |
US11057618B2 (en) | Method and apparatus for processing a video signal | |
US9094689B2 (en) | Motion vector prediction design simplification | |
US9210425B2 (en) | Signaling of temporal motion vector predictor (MVP) flag for temporal prediction | |
US9549177B2 (en) | Evaluation of signaling of collocated reference picture for temporal prediction | |
KR101623507B1 (en) | Implicit determination of collocated picture for temporal prediction | |
US10397613B2 (en) | Method for deriving a motion vector | |
KR20160106020A (en) | Apparatus for decoding a moving picture | |
EP2699001B1 (en) | A method and a system for video signal encoding and decoding with motion estimation | |
US20140023142A1 (en) | Signaling of temporal motion vector predictor (mvp) enable flag | |
US20120328005A1 (en) | Construction of combined list using temporal distance | |
US11394992B2 (en) | Methods and apparatuses of generating average candidates in video coding systems | |
US20200236385A1 (en) | Video coding device, video decoding device, video coding method, video decoding method and program | |
WO2023193769A1 (en) | Implicit multi-pass decoder-side motion vector refinement |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:WANG, LIMIN;LOU, JIAN;YU, YUE;REEL/FRAME:027798/0306Effective date: 20120217 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034280/0001Effective date: 20141028 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
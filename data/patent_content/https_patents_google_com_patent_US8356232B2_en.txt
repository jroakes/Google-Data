US8356232B2 - Method and apparatus for encoding and decoding data - Google Patents
Method and apparatus for encoding and decoding data Download PDFInfo
- Publication number
- US8356232B2 US8356232B2 US11/539,404 US53940406A US8356232B2 US 8356232 B2 US8356232 B2 US 8356232B2 US 53940406 A US53940406 A US 53940406A US 8356232 B2 US8356232 B2 US 8356232B2
- Authority
- US
- United States
- Prior art keywords
- fec
- bits
- block
- sizes
- segments
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0041—Arrangements at the transmitter end
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/63—Joint error correction and other techniques
- H03M13/6306—Error control coding in combination with Automatic Repeat reQuest [ARQ] and diversity transmission, e.g. coding schemes for the multiple transmission of the same information or the transmission of incremental redundancy
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0056—Systems characterized by the type of code used
- H04L1/0064—Concatenated codes
- H04L1/0066—Parallel concatenated codes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/02—Arrangements for detecting or preventing errors in the information received by diversity reception
- H04L1/06—Arrangements for detecting or preventing errors in the information received by diversity reception using space diversity
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1812—Hybrid protocols; Hybrid automatic repeat request [HARQ]
Definitions
- the present invention relates generally to encoding and decoding data and in particular, to a method and apparatus for turbo coding and decoding data.
- Digital data transmissions over wired and wireless links sometimes may be corrupted, for instance, by noise in the link or channel, by interference from other transmissions, or by other environmental factors.
- many communication systems employ error-correction techniques to aid in communication.
- turbo coding of an information block to be transmitted.
- an encoder within the transmitter of a communication system will encode an input block u of length K bits into a codeword block x of N bits.
- the codeword block x is then transmitted over the channel, possibly after further processing such as channel interleaving as defined in the IEEE 802.16e specifications.
- the turbo decoder takes the received signal vector y of length N as input, and generates an estimate û of vector u.
- turbo encoder is composed of two constituent convolutional encoders.
- the first constituent encoder takes the input block u as input in its original order
- the second constituent encoder takes the input block u in its interleaved order after passing u through a turbo interleaver ⁇ .
- the turbo encoder output x is composed of the systematic bits (equal to the input block u), the parity bits from the first constituent encoder, and the parity bits from the second constituent encoder.
- turbo decoder within the receiver of the communication system is composed of two constituent convolutional decoders, one for each constituent code.
- the constituent decoders are separated by the interleaver ⁇ and the corresponding deinterleaver ⁇ ⁇ 1 .
- Messages in the format of log-likelihood ratios (LLRs) are passed between the constituent decoders iteratively.
- the decision û is made after several iterations.
- the turbo interleaver ⁇ is the key component in the turbo code design. It is responsible for scrambling the input block u in a pseudo-random fashion, thus providing the codewords x with good weight distribution, hence good error-correcting capabilities.
- the turbo interleaver ⁇ has significant impact on the implementation of the turbo decoder within the receiver.
- turbo codes performance improves with increasing interleaver length.
- interleaver size there is a diminishing return in increasing the interleaver size.
- FEC Forward Error Correction
- the CTB is segmented (e.g., using code block segmentation rule) into several small segments, each of which is processed separately by the turbo encoder at the transmitter and correspondingly by the turbo decoder at the receiver.
- the turbo code may be designed to support only a small number of FEC block sizes for various reasons (e.g., high speed decoding, reduced storage, etc). Therefore, a need exists for a method and apparatus for turbo coding and decoding that appropriately matches the CTB to available FEC block sizes.
- FIG. 1 is a block diagram of a transmitter.
- FIG. 2 is a block diagram of a receiver.
- FIG. 3 is a block diagram of the turbo encoder of FIG. 1 .
- FIG. 4 is a block diagram of transport block former on the transmitter side.
- FIG. 5 is a block diagram of a transport block assembler on the receiver side.
- FIG. 6 is a flow chart showing operation of the transmitter of FIG. 1 .
- FIG. 7 is a flow chart showing operation of the receiver of FIG. 2 .
- a method and apparatus for turbo coding and decoding is provided herein.
- a concatenated transport block (CTB) of length X is received and a forward error correction (FEC) block size K I is determined from a group of available non-contiguous FEC block sizes between K min and K max , and wherein K min ⁇ K I ⁇ K max and wherein K I is additionally based on X.
- the concatenated transport block of length X is segmented into C segments each of size substantially equal to K I .
- An FEC codeword for each of the C segments is determined using FEC block size K I ; and the C FEC codewords are transmitted over the channel.
- a concatenated transport block (CTB) of length X is received and two FEC block sizes K I-1 and K I are determined from a group of non-contiguous FEC block sizes, wherein the available non-contiguous FEC block sizes are between K min and K max , and wherein K min ⁇ K I-1 ⁇ K max , K min ⁇ K I ⁇ K max , and wherein K I-1 and K I are additionally based on X.
- the concatenated transport block of length X is segmented into C segments each of size substantially equal to K I-1 or K I .
- An FEC codeword for each of the C segments is determined using FEC block sizes K I or K I-1 , and the C FEC codewords are transmitted over the channel.
- the benefit of the above methods is that they reduce the padding of filler bits required to encode the CTB, while using the fewest number of segments allowed by the available non-contiguous FEC block sizes.
- the second method uses two different (but adjacent) FEC block sizes to minimize the number of filler bits while using the fewest number of segments as allowed by the available non-contiguous FEC block sizes.
- the FEC block sizes for the segment sizes and the number of segments for the two embodiments may be determined using simple logic circuitry.
- FIG. 1 is a block diagram of transmitter 100 .
- transmitter 100 comprises code block segmentation circuitry 102 , filler circuitry 103 , turbo encoder 104 , filler discard circuitry 105 , transmitter 108 , logic circuitry 106 , and table/storage 107 .
- Transmitter 100 additionally comprises of receiving circuitry (not shown in FIG. 1 ) that receives a concatenated transport block of length X.
- Logic circuitry 106 determines an available FEC block size K I from a group of non-contiguous FEC block sizes 107 , wherein the available non-contiguous FEC block sizes are between K min and K max , and wherein K min ⁇ K I ⁇ K max , and wherein K I is additionally based on X.
- Code block segmentation circuitry 102 segments the concatenated transport block of length X into C segments of sizes substantially equal to K I ; and encoding circuitry 104 determines an FEC codeword for each of the C segments using FEC block size K I .
- transmission circuitry 108 transmits the C FEC codewords over a channel.
- the transmitter 100 comprises receiving circuitry (not shown in the FIG. 1 ) that receives a concatenated transport block of length X, logic circuitry 106 that determines two available FEC block sizes K I-1 and K I from a group of non-contiguous FEC block sizes 107 , wherein the available non-contiguous FEC block sizes are between K min and K max , and wherein K min ⁇ K I-1 ⁇ K max , K min ⁇ K I ⁇ K max , and wherein K I-1 and K I are additionally based on X.
- Transmitter 100 comprises code block segmentation circuitry 102 that segments the concatenated transport block of length X into C segments of sizes substantially equal to K I-1 or K I , and encoding circuitry 104 that determines an FEC codeword for each of the C segments using FEC block size K I or K I-1 . Finally transmission circuitry 108 is provided that transmits the C FEC codewords over a channel.
- Encoding circuitry 104 is preceded by filler circuitry 103 that inserts filler bits into the segments to form an FEC input block.
- FEC encoder 104 encodes the FEC input block, and filler discard circuitry 105 discards bits related to the filler bits.
- circuitry 102 During operation of transmitter 100 , data in the form of a concatenated transport block is received by circuitry 102 . Circuitry 102 prepares the concatenated transport block before Forward Error Correction (FEC) encoding.
- FEC Forward Error Correction
- the range of the CTB sizes may be different from the range of the FEC block sizes supported by the underlying FEC scheme in the physical layer for a communication system. Therefore, it is necessary to define a rule that divides a CTB into segments that can be efficiently handled by the FEC.
- CTB sizes i.e., X
- the maximum FEC block size that FEC encoder 104 can handle. Therefore, the CTB needs to be segmented by circuitry 102 into a number of smaller-sized segments and each segment needs to be encoded by FEC encoder 104 into a separate FEC codeword.
- Circuitry 102 uses a code block segmentation rule that is designed to achieve good performance (i.e., the aggregate performance of the segments for a given CTB) with the underlying FEC. It involves the following aspects for any given CTB size:
- an EUTRA turbo coder may be defined for only a limited set of FEC block sizes (interleaver sizes).
- segment size When the segment size is equal to an available FEC block size, then the segment can be taken as an FEC input block directly (thus no need of filler bit insertion). However, when the segment size is not equal to any available FEC block sizes, filler bit padding may be applied, and the next larger available FEC block size (i.e., interleaver size) chosen from K table 107 may be used.
- the segmentation rules take the following properties of turbo coding into account.
- Property (b) suggests that it is not necessary to include interleavers for very large sizes in the table (K table ).
- the FEC block sizes defined in K table may depend on other factors. For example, i) for reduced storage/complexity, a small number of interleavers in K table may be desirable, and ii) the maximum interleaver size defined in K table may be chosen to limit the number of segments per CTB, thus limiting the segmentation penalty of a CTB.
- the segmentation penalty is the performance loss due to dividing a CTB into several segments instead of encoding the entire CTB into one FEC codeword.
- Property (c) suggests that the minimum number of segments should be used to reduce segmentation penalty.
- the sum of all segments is equal to the concatenated transport block size X, i.e., the segment sizes are constrained by the following equation.
- the next section describes the determination of the FEC block size used for FEC encoding, one for each of the C segment size.
- K max 5114 is the maximum interleaver size for Rel 6 Turbo code
- C is the number of segments (or code blocks)
- K I is the interleaver size
- Y is the total number of filler bits inserted for the CTB of size X when C FEC input blocks of size K I is used.
- the FEC block sizes may be defined only for non-contiguous sizes (a coarser set of interleaver sizes) K table .
- segment sizes that are not equal to any available FEC block sizes i.e., not defined in K table ) need to be handled using filler bits before FEC encoding (and puncturing after encoding to arrive at a desired code rate).
- One method is to modify (1) and let all segments be encoded with a single interleaver size K I , where
- the number of filler bits can be controlled by varying the FEC block size granularity in K table .
- the number of filler bits can also be reduced using another approach as described next.
- any K I ( ⁇ X/C ⁇ ) can be chosen from K table for FEC encoding at the cost of potentially increased number of filler bits.
- the code block segmentation forms C segments, of which C I-1 segments are FEC-encoded with a FEC block size K I-1 .
- K I-1 size is allowed but not actually used.
- this method requires fewer filler bits than padding all C segments to the larger FEC block size K I .
- the segment sizes obtained after code block segmentation have the following constraints, assuming (without loss of generality that the first C I segments are encoded with K I and rest with K I-1 ).
- a proper FEC block size needs to be chosen from table 107 of non-contiguous FEC block sizes.
- Logic circuitry 106 performs the task of choosing the appropriate FEC block size/sizes as discussed above.
- An example of table 107 is given in Table 1. For example, in first case, logic circuitry 106 chooses FEC block size from the available non-contiguous FEC block sizes between K min and K max , and wherein K min ⁇ K I ⁇ K max , and wherein K I is additionally based on X.
- the underlying FEC coder 104 supports only a limited set of FEC block sizes (or input sizes). Without loss of generality, it is assumed that FEC coder 104 is a turbo coder, and the set of FEC block sizes supported by the turbo coder is the set of interleaver sizes for which the turbo code internal interleaver is defined. However, one of ordinary skill in the art will recognize that other FEC schemes may be used in 104 , including low-density parity check (LDPC) codes, convolutional codes, block turbo codes, Reed-Solomon codes, etc.
- LDPC low-density parity check
- this information is passed to code block segmentation circuitry 102 where the CTB (X bits) is segmented into C segments which are encoded with FEC block size K I , if only one FEC block size is allowed. Alternatively, if two adjacent FEC block sizes are allowed, the code block segmentation circuitry 102 may output C I segments which are to be encoded with FEC block size K I and C I-1 segments which are to be encoded FEC block size K I-1 .
- the number of filler bits (padded for each segment) may be determined based on the segment size and the FEC block size being used for FEC encoding of the segment. There are at least two ways to distribute the overall filler bits into the C segments.
- a preferred embodiment is to append Y′′ (if allowing two adjacent FEC block sizes; Y if allowing one FEC block size only) consecutive filler bits to the front of the one of the segments (e.g., the first or the last) using FEC block size K I before sending it to the encoder. In terms of performance, it is equivalent to appending the Y′′ consecutive filler bits to the end of a segment having FEC block size K I .
- an FEC codeword is determined using the steps of inserting filler bits into the segment to form an FEC input block; FEC encoding the FEC input block; and discarding bits related to the filler bits.
- FIG. 2 is a block diagram of a receiver.
- the received signal vector goes through the code block de-segmentation circuitry 202 which organizes portions of received signal vector according to the segment they are associated with.
- the segment size, number of segments, FEC block size used to turbo-decode each segment, number of filler bits may be determined using logic circuitry 213 and available FEC block size table 215 in a fashion similar to that at the encoder.
- the filler handling circuitry 204 uses the knowledge of the location of filler bits to benefit turbo decoder 206 , for e.g., by setting the LLRs corresponding to filler bits to a high magnitude.
- circuitry 208 discards the filler bits to obtain estimate of a segment.
- the code block assembler 211 assembles the estimated transport by suitably collecting and arranging the estimates of the segments obtained from circuitry 208 .
- This section provides a specific way of determining the FEC codeword.
- the method takes advantage of the knowledge of filler bits insertion at the transmitter is described. In particular, the method determines which bits (both systematic and parity bits) can be discarded from the turbo encoder output with no or negligible significant performance degradation.
- the filler bits are known, and hence the systematic bits of these bits (equal to the known bits) can be discarded prior to transmission. However, it is not clear if any parity bits can be discarded.
- FIG. 3 is a block diagram of turbo encoder 104 of FIG. 1 .
- input block of length K I bits enters both interleaver 301 and constituent encoder 302 .
- Interleaver 301 interleaves the input block and passes the input block in interleaved order to constituent encoder 303 .
- Constituent encoder 303 then encodes the interleaved input block.
- constituent encoder 302 encodes the original input block.
- the codeword block x is composed of systematic block (equal to the FEC input block), output of constituent encoder 302 , and output of constituent encoder 303 .
- the codeword block x is then sent to circuitry 105 .
- K filler filler bits (usually 0's) are inserted at the beginning of the turbo code input block
- the systematic bits and the parity bits of the constituent encoder 302 corresponding to the K filler bit positions are all zeros. Therefore, these bits may be discarded at the transmitter and the receiver can utilize this knowledge while performing turbo decoding.
- the K filler bits are scrambled due to the turbo code interleaver and hence the parity bits of constituent encoder 303 corresponding to the filler bits are not known and thus cannot be discarded simply.
- the initial state of the constituent encoders may not be always zero.
- the initial state and the final state for a constituent encoder are equal and they depend on the input block. Therefore, when K filler consecutive filler bits (i.e., zeros) are inserted at the beginning of the turbo code input block, the parity bits of constituent encoder 302 corresponding to the K filler bit positions are not always zeros. However, it can be proven that most of these K filler parity bits of the constituent encoder 302 carry no information.
- the FEC encoder can be a tail-biting convolutional code used alone, or a tail-biting convolutional code used as a constituent code of a turbo coder.
- groups of systematic bits corresponding to the filler bits may be discarded; and the parity bits corresponding to the groups of filler bits at the output of a constituent encoder may be discarded, wherein the constituent encoder takes the FEC input block without interleaving for tail-biting turbo coders.
- the state of the shift register of constituent encoder 302 at step i be S(i), let m be the number of elements in the shift register, and let g be any integer greater than 0.
- S ( i ) S ( i +(2 m ⁇ 1) g ) (7)
- S(i) may not be a constant.
- the states S(j) in between may not be a constant or equal to state S(i), i ⁇ j ⁇ i+(2 m ⁇ 1)g.
- the transmitter can take advantage of (7) by discarding the constituent encoder output during those steps, as these filler bits do not change the shift register state and thus providing no information for the decoder.
- the decoder within the receiver can also take advantage of (7) similarly based on the knowledge of filler bit positions and values.
- constituent encoder 303 the K filler filler bits may get dispersed due to the turbo code interleaver. Therefore, it may not be possible to discard the parity bits from the constituent encoder 303 without affecting performance.
- code block segmentation rule may be used, e.g., hybrid-Automatic Repeat reQuest (HARQ), Multiple Input Multi Output (MIMO), etc.
- HARQ hybrid-Automatic Repeat reQuest
- MIMO Multiple Input Multi Output
- Transport Block (TB) Former TB
- the code block segmentation rule described above is applied to a concatenated transport block (CTB) on a hybrid ARQ (HARQ) channel.
- CTB concatenated transport block
- HARQ hybrid ARQ
- the information bits than needs to be sent to a single user from the base station within a transmission time interval (TTI) may need to be divided into at least one transport block, thus going through at least one HARQ channel.
- TTI transmission time interval
- FIG. 4 shows an example wherein the information bits are transmitted using two HARQ channels (corresponding to HARQ 1 , and HARQ 2 ), and two transport blocks TB 1 and TB 2 .
- information bits of length A are received by TB formation circuitry 402 to be transmitted on one or more spatial streams.
- Circuitry 402 designates X′ bits as a transport block TB 1 , where X′ ⁇ A; HARQ 1 processor 404 attaches CRC bits to the X′ bits to form the concatenated transport block of length X; the concatenated transport block of length X is mapped to a first HARQ channel.
- the concatenated transport block is sent to the code block segmentation circuitry 102 .
- HARQ 2 processor 406 attaches CRC bits to Y bits form a second concatenated transport block; the concatenated transport block is mapped to a second HARQ channel.
- the concatenated transport block is sent to the code block segmentation circuitry 102 .
- circuitry 404 and 406 may perform additional functions such as other functionalities related to HARQ, adding control information, etc.
- FIG. 4 Though the concepts in FIG. 4 are illustrated using two HARQ channels, they can be easily extended to a plurality of HARQ channels. If more than one HARQ channel is supported to a user within a Transmission Time Interval (TTI), the code block segmentation rule may be applied to each TB.
- TTI Transmission Time Interval
- Multiple HARQ channels may occur due to having too many FEC codewords (or segments) per TTI per user, such as from large bandwidth (e.g., 20 MHz), higher order modulation (e.g., 64 QAM), multistream MIMO, etc.
- Multiple HARQ channels may also be used for TBs that have different QoS, such as VoIP and best-effort data.
- a MIMO codeword comprises the bits that are sent to a single user within a TTI on one MIMO stream.
- a MIMO codeword may comprise one or more FEC codewords.
- x e.g. 8
- FEC codewords value of x determined by the eNodeB scheduler in EUTRA.
- two TBs are created as follows. The packet is divided approximately evenly between two TBs, each TB having nearly the same number of FEC codewords of approximately the same size.
- TBi refers to TB of i-th HARQ channel; numbers 1 through 4 indicates the MIMO codeword (or stream) number.
- FIG. 5 is a block diagram of receiver processing when information bits are received over at least one HARQ channel.
- the received bits from the code block assembler 211 are input to the appropriate channel processors 504 and 506 .
- the output of the channel processors are the estimated transports blocks TB 1 and TB 2 which are input to the TB assembler circuitry 502 which combines the TBs and outputs estimated information bits.
- FIG. 6 is a flow chart showing operation of the transmitter of FIG. 1 .
- the logic flow begins at step 601 where segmentation circuitry receives a concatenated transport block of length X.
- logic circuitry accesses table 107 and chooses an appropriate FEC block size.
- the FEC block size K I is determined from a group of non-contiguous FEC block sizes located in table 107 , where the available non-contiguous FEC block sizes in table 107 are between K min and K max , and wherein K min ⁇ K I ⁇ K max .
- K I is based on X.
- step 605 the number of segments C and the FEC lock sizes are passed to segmentation circuitry 102 and at step 607 segmentation circuitry segments the concatenated transport block of length X into C segments of size substantially equal to K I (or alternatively K I and K I-1 ).
- Filler bits are added (if necessary) at step 609 via circuitry 103 and at step 611 each of the C segments are encoded (i.e., an FEC codeword is determined for each of the C segments).
- step 613 the FEC codewords are transmitted via transmission circuitry 108 .
- the step of determining an FEC codeword comprises the steps of inserting filler bits into the segment to form an FEC input block, FEC encoding the FEC input block, and discarding bits related to the filler bits.
- This step may entail inserting groups of consecutive filler bits into a segment to form an FEC input block where the group length is a multiple of 7, FEC encoding the FEC input block, and discarding bits related to the filler bits.
- Discarding filler bits comprises the steps of discarding groups of systematic bits corresponding to the filler bits and discarding the parity bits corresponding to the groups of filler bits at the output of constituent encoder 1 , where constituent encoder takes the FEC input block without interleaving for tail-biting turbo coders.
- FIG. 7 is a flow chart showing operation of the receiver of FIG. 2 .
- the logic flow begins at step 701 where the segment size, number of segments, FEC block size used to turbo-decode each segment, and the number of filler bits are determined using logic circuitry 213 and table 215 .
- the FEC block size K I is determined from a group of non-contiguous FEC block sizes located in table 215 , where the available non-contiguous FEC block sizes in table 215 are between K min and K max , and wherein K min ⁇ K I ⁇ K max .
- K I is based on X.
- X is determined by logic circuitry 213 from the received signal vector.
- K I ⁇ X/C ⁇ + ⁇ .
- a received signal vector goes through code block de-segmentation circuitry 202 which organizes portions of received signal vector according to the C segment they are associated with.
- filler handling circuitry 204 uses the knowledge of the location of filler bits to benefit turbo decoder 206 , for e.g., by setting the LLRs corresponding to filler bits to a high magnitude.
- Each of the C segments is decoded at step 707 .
- circuitry 208 discards the filler bits to obtain estimate of a segment (step 709 ).
- Code block assembler 211 assembles the estimated transport by suitably collecting and arranging the estimates of the segments obtained from circuitry 208 (step 711 ).
Abstract
Description
-
- For ease of notation, a concatenated transport block refers to the result of concatenating one or more transport blocks, after adding overhead such as CRC bits to each transport block.
- X denotes the concatenated transport block size (e.g., length of the concatenated transport block in bits).
- Y denotes the total number of filler bits added to a concatenated transport block.
- C denotes the number of segments a concatenated transport block gets segmented into.
- CBSSi denotes the size of the ith segment of a concatenated transport block (i=1, . . . C, where C is the segment size. CBSS stands for code block segment size.
- KI-1 and KI denote FEC block sizes (e.g., sizes for which turbo code internal interleaver are defined) that may be used to FEC encode the segments of a concatenated transport block.
- Ktable denotes a set of available non-contiguous FEC block sizes (sizes for which a turbo code internal interleaver is defined).
- Kfiller denotes the number of filler bits added to a segment.
- R denotes the mother code rate of the turbo coder (e.g., R=⅓ for the 3GPP Turbo Code).
- R−1 is the inverse of mother code rate of turbo coder (e.g., R−1=3 for the 3GPP Turbo Code).
- Ntb is the number of tail bits in the FEC codeword at the output of FEC encoder. In particular,
- Ntb=12 for 3GPP turbo code with tail bits.
- Ntb=0 for a 3GPP turbo code with tail-biting.
- π denotes the turbo code internal interleaver.
- The flooring operation └x┘ denotes the largest integer smaller than or equal to x and the ceiling operation ┌x┐ denotes the smallest integer larger than or equal to x.
-
- Choosing the number of segments C;
- Choosing the sizes of each segment;
- Inserting the filler bits before FEC encoding and the removing of filler bits after FEC encoding, if the segment size cannot be handled directly by the FEC.
-
- (a) Turbo code performance improves as the FEC block size increases.
- (b) Turbo code performance improvement via increasing FEC block sizes has diminishing returns beyond a few thousand bits.
- (c) A CTB is received correctly only if all the segments are received correctly.
C=┌X/K max┐,
K I=max(40,┌X/C┐), (1)
Y=CK I −X.
where Kmax=5114 is the maximum interleaver size for Rel 6 Turbo code, C is the number of segments (or code blocks), KI is the interleaver size, and Y is the total number of filler bits inserted for the CTB of size X when C FEC input blocks of size KI is used. In essence, a CTB of size X is segmented into C segments of approximately equal size, and each segment is encoded using a turbo code with a KI-bit interleaver. If Y>0, Y known bits are padded to the beginning of the first segment before encoding. Since the FEC block sizes (i.e., interleavers) are defined for all sizes between Kmin=40 and Kmax=5114 in Release 6 3GPP turbo code, the number of filler bits is bounded by C, the number of segments used for code block segmentation.
where i, 1≦i≦T, indexes into the group of non-contiguous FEC block sizes available in Ktable, assuming the T sizes in Ktable are sorted in ascending order. In essence, this method chooses the smallest KI from Ktable that is greater than or equal to ┌X/C┐, i.e., KI=┌X/C┐+δ, where 0≦δ<KI-K1−1, and KI-1<┌X/C┐. Note that it is assigned that KI-1=0 when I=1. Therefore, the number of filler bits is given by
Therefore, Y is large when δ is large. The following examples illustrate how the number of available FEC block sizes (Ktable) affects Y.
-
- If Ktable has all the values between Zmin=40 and Zmax=5114, the maximum number of filler bits is equal to
C− 1. - If Ktable has T=100 values uniformly distributed between Zmin=40 and Zmax=5114, the maximum total number of filler bits padded to all segments is approximately equal to 50×C.
- If Ktable has all the values between Zmin=40 and Zmax=5114, the maximum number of filler bits is equal to
C=┌X/K max┐,
Allow Two Adjacent FEC Block Sizes Only
C=┌X/K max =C I +C I-1,
Y=CK I −X,
D I =K I −K I-1,
C I-1 =└Y/D I┘,
C I =C−└Y/D I┘, (4)
and CI-1 and CI are the number of segments that are encoded using FEC block sizes KI-1 and KI, respectively, where KI is the smallest size from available FEC block sizes that is greater than or equal to ┌X/C┐, and DI denotes the difference between the adjacent interleaver sizes KI-1 and KI.
Y″=C I-1 K I-1 +C I K I −X, (5)
0≦Y″<K I −K I-1, (6)
CBSS i ≦K I, for i=1, . . . C I
CBSS i ≦K I-1, for i=C I+1, . . . C; if C I-1≧1.
TABLE 1 |
The set of FEC block sizes for which turbo coder |
internal interleaver is defined. |
Ktable |
128 | 256 | 512 | 1024 | 2048 | 4096 | ||
144 | 288 | 576 | 1152 | 2304 | 4608 | ||
160 | 320 | 640 | 1280 | 2560 | 5120 | ||
176 | 352 | 704 | 1408 | 2816 | 5632 | ||
192 | 384 | 768 | 1536 | 3072 | 6144 | ||
208 | 416 | 832 | 1664 | 3328 | |||
216 | 440 | 888 | 1776 | 3568 | |||
240 | 480 | 960 | 1920 | 3840 | |||
-
- Concentrated-filler. Put the filler bits into as few segments as possible without making the segment sizes too small. In one example, all filler bits may appear in the beginning of the first segment. The advantage is that only one segment (containing all the filler bits) needs to be handled separately. Moreover, the filler bits can be padded to the segment that is encoded with the larger FEC block size KI rather than smaller FEC block size KI-1 when two FEC block sizes are used for a CTB. This method is particularly attractive when allowing two adjacent FEC block sizes for encoding.
- Distributed-filler. Distribute the filler bits evenly (as much as possible) into a plural of segments. The filler bits can be distributed to as many as all C segments.
S(i)=S(i+(2m−1)g) (7)
Note that S(i) may not be a constant. In addition, the states S(j) in between may not be a constant or equal to state S(i), i<j<i+(2m−1)g.
Claims (11)
Y=CK I −X,
C I-1 =└Y/D I┘,
C I =C−└Y/D I┘,
Y=CK I −X,
C I-1 =└Y/D I┘,
C I =C−└Y/D I┘,
Priority Applications (11)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/539,404 US8356232B2 (en) | 2006-10-06 | 2006-10-06 | Method and apparatus for encoding and decoding data |
EP07842624A EP2080271B1 (en) | 2006-10-04 | 2007-09-17 | Method and apparatus for encoding and decoding data |
PL07842624T PL2080271T3 (en) | 2006-10-04 | 2007-09-17 | Method and apparatus for encoding and decoding data |
PCT/US2007/078676 WO2008042586A2 (en) | 2006-10-04 | 2007-09-17 | Method and apparatus for encoding and decoding data |
KR1020097006933A KR101429786B1 (en) | 2006-10-04 | 2007-09-17 | Method and apparatus for encoding and decoding data |
BRPI0717506A BRPI0717506B8 (en) | 2006-10-04 | 2007-09-17 | method and apparatus for encoding and decoding data |
ES07842624T ES2386911T3 (en) | 2006-10-04 | 2007-09-17 | Procedure and apparatus for encoding and decoding data |
CN2007800375299A CN101573872B (en) | 2006-10-04 | 2007-09-17 | Method and apparatus for encoding and decoding data |
JP2007252797A JP4714941B2 (en) | 2006-10-04 | 2007-09-28 | Method and apparatus for encoding and decoding data |
ARP070104380A AR064591A1 (en) | 2006-10-04 | 2007-10-03 | METHOD AND APPLIANCE FOR CODING AND DECODING DATA |
JP2010262461A JP5110407B2 (en) | 2006-10-04 | 2010-11-25 | Method and apparatus for encoding and decoding data |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/539,404 US8356232B2 (en) | 2006-10-06 | 2006-10-06 | Method and apparatus for encoding and decoding data |
Publications (2)
Publication Number | Publication Date |
---|---|
US20080098273A1 US20080098273A1 (en) | 2008-04-24 |
US8356232B2 true US8356232B2 (en) | 2013-01-15 |
Family
ID=39319485
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/539,404 Active 2030-06-15 US8356232B2 (en) | 2006-10-04 | 2006-10-06 | Method and apparatus for encoding and decoding data |
Country Status (1)
Country | Link |
---|---|
US (1) | US8356232B2 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180123847A1 (en) * | 2015-04-15 | 2018-05-03 | Zte Corporation | Method and apparatus for code block division |
US20220094471A1 (en) * | 2017-11-16 | 2022-03-24 | Qualcomm Incorporated | Reduced overhead error detection code design for decoding a codeword |
US11368169B2 (en) | 2017-03-24 | 2022-06-21 | Zte Corporation | Processing method and device for quasi-cyclic low density parity check coding |
Families Citing this family (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP2034613A4 (en) * | 2006-05-17 | 2009-08-12 | Nec Corp | Turbo encoder and harq processing method applied for the turbo encoder |
US8356232B2 (en) * | 2006-10-06 | 2013-01-15 | Motorola Mobility Llc | Method and apparatus for encoding and decoding data |
US7949926B2 (en) * | 2006-11-30 | 2011-05-24 | Motorola Mobility, Inc. | Method and apparatus for encoding and decoding data |
US8908632B2 (en) * | 2007-06-08 | 2014-12-09 | Samsung Electronics Co., Ltd. | Methods and apparatus for channel interleaving in OFDM systems |
US20090028261A1 (en) * | 2007-07-26 | 2009-01-29 | Interdigital Technology Corporation | Method and apparatus for reducing signaling overhead during a dual codeword hybrid automatic repeat request operation |
US8219877B2 (en) | 2007-08-14 | 2012-07-10 | Lg Electronics Inc. | Method and apparatus for transmitting uplink data in a wireless access system |
US8458571B2 (en) * | 2008-01-14 | 2013-06-04 | Zte Corporation | Data transmission method and equipment |
WO2009096658A1 (en) | 2008-01-31 | 2009-08-06 | Lg Electronics Inc. | Method for determining transport block size and signal transmission method using the same |
EP2150001B1 (en) * | 2008-08-01 | 2019-10-23 | Telefonaktiebolaget LM Ericsson (publ) | Technique for rate matching in a data transmission system |
US8259643B2 (en) * | 2009-02-13 | 2012-09-04 | Samsung Electronics Co., Ltd. | Apparatus and method for codeword to layer mapping in MIMO transmission wireless systems |
US8504847B2 (en) * | 2009-04-20 | 2013-08-06 | Cleversafe, Inc. | Securing data in a dispersed storage network using shared secret slices |
JP5493459B2 (en) | 2009-05-08 | 2014-05-14 | ソニー株式会社 | Communication apparatus and communication method |
US8451964B2 (en) * | 2010-02-23 | 2013-05-28 | Qualcomm Incorporated | Code block interference cancellation |
US10230404B2 (en) * | 2014-12-23 | 2019-03-12 | Texas Instruments Incorporated | Forward error control coding |
EP3832922A1 (en) * | 2016-07-15 | 2021-06-09 | Sharp Kabushiki Kaisha | Transmission apparatus, reception apparatus, transmission method, and reception method |
EP3563503B1 (en) * | 2017-10-03 | 2021-03-17 | Telefonaktiebolaget LM Ericsson (PUBL) | Tbs determination with multiple base graphs |
Citations (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5410308A (en) * | 1990-10-24 | 1995-04-25 | Deutsche Thomson-Brandt Gmbh | System for processing a digital signal including auxiliary data to facilitate data reconstitution at a decoder |
WO2000035103A1 (en) | 1998-12-04 | 2000-06-15 | Qualcomm Incorporated | Turbo code interleaver using linear congruential sequences |
EP1124344A1 (en) | 1999-08-20 | 2001-08-16 | Matsushita Electric Industrial Co., Ltd. | Ofdm communication device |
US6289486B1 (en) | 1997-07-30 | 2001-09-11 | Samsung Electronics Co., Ltd. | Adaptive channel encoding method and device |
US6314534B1 (en) | 1999-03-31 | 2001-11-06 | Qualcomm Incorporated | Generalized address generation for bit reversed random interleaving |
US6339834B1 (en) | 1998-05-28 | 2002-01-15 | Her Majesty The Queen In Right Of Canada, As Represented By The Minister Of Industry Through The Communication Research Centre | Interleaving with golden section increments |
US6347385B1 (en) | 1998-08-03 | 2002-02-12 | Nortel Networks Limited | Interleavers for turbo code |
US6427214B1 (en) | 1998-09-29 | 2002-07-30 | Nortel Networks Limited | Interleaver using co-set partitioning |
US6437711B1 (en) | 1999-04-16 | 2002-08-20 | Nokia Networks Oy | Segmentation mechanism for a block encoder and method for encoding with a block encoder |
US20030023909A1 (en) | 2000-03-17 | 2003-01-30 | Tetsuya Ikeda | Interleave address generator |
US6591381B1 (en) | 1999-04-06 | 2003-07-08 | Samsung Electronics Co., Ltd. | 2-dimensional interleaving apparatus and method |
US6625762B1 (en) * | 1999-03-05 | 2003-09-23 | Canon Kabushiki Kaisha | Interleaving device and method for turbocoding and turbodecoding |
WO2003105393A2 (en) | 2002-06-07 | 2003-12-18 | Sandbridge Technologies, Inc. | Method of first interleavering of a two interleaver transmitter |
US6668343B1 (en) | 1998-12-21 | 2003-12-23 | Samsung Electronics Co., Ltd. | Interleaving/deinterleaving device and method for communication system |
EP1418675A2 (en) | 2002-10-29 | 2004-05-12 | Samsung Electronics Co., Ltd. | Method and apparatus for deinterleaving interleaved data stream in a communication system |
US6766489B1 (en) | 1998-11-09 | 2004-07-20 | Canon Kabushiki Kaisha | Device and method of adapting turbocoders and the associated decoders to sequences of variable length |
US6775800B2 (en) | 2000-01-03 | 2004-08-10 | Icoding Technology, Inc. | System and method for high speed processing of turbo codes |
US6785859B2 (en) | 2000-08-04 | 2004-08-31 | Texas Instruments Incorporated | Interleaver for variable block size |
US6854077B2 (en) | 2000-08-05 | 2005-02-08 | Motorola, Inc. | Apparatus and method for providing turbo code interleaving in a communications system |
US6888901B2 (en) * | 2000-12-23 | 2005-05-03 | Samsung Electronics Co., Ltd. | Apparatus and method for stopping iterative decoding in a CDMA mobile communication system |
RU2265960C2 (en) | 2003-06-16 | 2005-12-10 | Федеральное государственное унитарное предприятие "Калужский научно-исследовательский институт телемеханических устройств" | Method for transferring information with use of adaptive alternation |
US20060120467A1 (en) | 2003-06-12 | 2006-06-08 | Kenichi Miyoshi | Packet communication device |
US7170849B1 (en) | 2001-03-19 | 2007-01-30 | Cisco Systems Wireless Networking (Australia) Pty Limited | Interleaver, deinterleaver, interleaving method, and deinterleaving method for OFDM data |
US20070038912A1 (en) | 2003-05-19 | 2007-02-15 | Matsushita Electric Industrial Co., Ltd. | Error correction encoding/decoding apparatus and error correction encoding/decoding method |
US7200181B2 (en) | 2001-02-16 | 2007-04-03 | Samsung Electronics Co., Ltd. | Apparatus and method for generating and decoding codes in a communication system |
EP1850486A1 (en) | 2005-02-03 | 2007-10-31 | Matsushita Electric Industrial Co., Ltd. | Parallel interleaver, parallel deinterleaver, and interleave method |
US20080091986A1 (en) | 2006-10-03 | 2008-04-17 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
US20080098273A1 (en) * | 2006-10-06 | 2008-04-24 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
US20080133998A1 (en) | 2006-11-30 | 2008-06-05 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
-
2006
- 2006-10-06 US US11/539,404 patent/US8356232B2/en active Active
Patent Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5410308A (en) * | 1990-10-24 | 1995-04-25 | Deutsche Thomson-Brandt Gmbh | System for processing a digital signal including auxiliary data to facilitate data reconstitution at a decoder |
US6289486B1 (en) | 1997-07-30 | 2001-09-11 | Samsung Electronics Co., Ltd. | Adaptive channel encoding method and device |
US6339834B1 (en) | 1998-05-28 | 2002-01-15 | Her Majesty The Queen In Right Of Canada, As Represented By The Minister Of Industry Through The Communication Research Centre | Interleaving with golden section increments |
US6347385B1 (en) | 1998-08-03 | 2002-02-12 | Nortel Networks Limited | Interleavers for turbo code |
US6427214B1 (en) | 1998-09-29 | 2002-07-30 | Nortel Networks Limited | Interleaver using co-set partitioning |
US6766489B1 (en) | 1998-11-09 | 2004-07-20 | Canon Kabushiki Kaisha | Device and method of adapting turbocoders and the associated decoders to sequences of variable length |
WO2000035103A1 (en) | 1998-12-04 | 2000-06-15 | Qualcomm Incorporated | Turbo code interleaver using linear congruential sequences |
US6304991B1 (en) | 1998-12-04 | 2001-10-16 | Qualcomm Incorporated | Turbo code interleaver using linear congruential sequence |
US6668343B1 (en) | 1998-12-21 | 2003-12-23 | Samsung Electronics Co., Ltd. | Interleaving/deinterleaving device and method for communication system |
US6625762B1 (en) * | 1999-03-05 | 2003-09-23 | Canon Kabushiki Kaisha | Interleaving device and method for turbocoding and turbodecoding |
US6314534B1 (en) | 1999-03-31 | 2001-11-06 | Qualcomm Incorporated | Generalized address generation for bit reversed random interleaving |
US6591381B1 (en) | 1999-04-06 | 2003-07-08 | Samsung Electronics Co., Ltd. | 2-dimensional interleaving apparatus and method |
US6437711B1 (en) | 1999-04-16 | 2002-08-20 | Nokia Networks Oy | Segmentation mechanism for a block encoder and method for encoding with a block encoder |
EP1124344A1 (en) | 1999-08-20 | 2001-08-16 | Matsushita Electric Industrial Co., Ltd. | Ofdm communication device |
US6775800B2 (en) | 2000-01-03 | 2004-08-10 | Icoding Technology, Inc. | System and method for high speed processing of turbo codes |
US20030023909A1 (en) | 2000-03-17 | 2003-01-30 | Tetsuya Ikeda | Interleave address generator |
US6785859B2 (en) | 2000-08-04 | 2004-08-31 | Texas Instruments Incorporated | Interleaver for variable block size |
US6854077B2 (en) | 2000-08-05 | 2005-02-08 | Motorola, Inc. | Apparatus and method for providing turbo code interleaving in a communications system |
US6888901B2 (en) * | 2000-12-23 | 2005-05-03 | Samsung Electronics Co., Ltd. | Apparatus and method for stopping iterative decoding in a CDMA mobile communication system |
US7200181B2 (en) | 2001-02-16 | 2007-04-03 | Samsung Electronics Co., Ltd. | Apparatus and method for generating and decoding codes in a communication system |
US7170849B1 (en) | 2001-03-19 | 2007-01-30 | Cisco Systems Wireless Networking (Australia) Pty Limited | Interleaver, deinterleaver, interleaving method, and deinterleaving method for OFDM data |
WO2003105393A2 (en) | 2002-06-07 | 2003-12-18 | Sandbridge Technologies, Inc. | Method of first interleavering of a two interleaver transmitter |
US7236480B2 (en) | 2002-06-07 | 2007-06-26 | Sandbridge Technologies, Inc. | Method of first interleaving of a two interleaver transmitter |
EP1418675A2 (en) | 2002-10-29 | 2004-05-12 | Samsung Electronics Co., Ltd. | Method and apparatus for deinterleaving interleaved data stream in a communication system |
US20070038912A1 (en) | 2003-05-19 | 2007-02-15 | Matsushita Electric Industrial Co., Ltd. | Error correction encoding/decoding apparatus and error correction encoding/decoding method |
US20060120467A1 (en) | 2003-06-12 | 2006-06-08 | Kenichi Miyoshi | Packet communication device |
RU2265960C2 (en) | 2003-06-16 | 2005-12-10 | Федеральное государственное унитарное предприятие "Калужский научно-исследовательский институт телемеханических устройств" | Method for transferring information with use of adaptive alternation |
EP1850486A1 (en) | 2005-02-03 | 2007-10-31 | Matsushita Electric Industrial Co., Ltd. | Parallel interleaver, parallel deinterleaver, and interleave method |
US20080091986A1 (en) | 2006-10-03 | 2008-04-17 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
US20080098273A1 (en) * | 2006-10-06 | 2008-04-24 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
US20080133998A1 (en) | 2006-11-30 | 2008-06-05 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
US20110197104A1 (en) | 2006-11-30 | 2011-08-11 | Motorola Mobility, Inc. | Method and apparatus for encoding and decoding data |
Non-Patent Citations (24)
Title |
---|
"Universal Mobile Telecommunication System, Multiplexing and Channel Coding" , 3GPP TS 25.212. version 7.2.0, Release 7, Sep. 2006, vol. 3-R1, No. V720, XP014035549, Sophia-Antipo, France. |
3GPP TS 25.212 v4.2.0 (Sep. 2001): "Multiplexing and Channel Coding (FDD) (Release 4)", Sep. 2001. * |
3GPP TS 25.212 v6.2.0 (Jun. 2004): "Multiplexing and Channel Coding (FDD) (Release 6)", Jun. 2004. * |
3GPP TS 25.212 v6.4.0 (Mar. 2005): "Multiplexing and Channel Coding (FDD) (Release 6)", Mar. 2005, Cover page and pp. 10-17. |
3GPP TS 25.212 v6.4.0 (Mar. 2005): "Multiplexing and Channel Coding (FDD) (Release 6)", Mar. 2005. * |
Berrou C., et al, "Designing Good Permutations for Turbo Codes; Towards a Single Model", in Proceedings of ICC 2004, vol. 1, pp. 341-345, Jun. 2004. |
Blankenship, T. Keith, et al, "High-Throughput Turbo Decoding Techniques for 4G", Proceedings International Conference on Third Generation Wireless and Beyond, May 28, 2002, pp. 137-142, XP009097982. |
Ericsson et al.: "QPP interleaver parameters", 3GPP TSG RAN WG1 #48, R1-071026, St. Louis, USA, Feb. 12-16, 2007, all pages. |
Ericsson, "Quadratic Permutation Polynomial Interleavers for LTE Turbo Coding" 3GPP TSG RAN WG 1 Meeting #47, R1-063137, Nov. 10, 2006, pp. 1-5, XP002473949, Riga, Latvia. |
IEEE Standard 802.16, "Part 16: Air Interface for Fixed Broadband Wireless Access Systems," IEEE, Oct. 1, 2004, Cover page and pp. 587-599. |
Motorola, "A Contention-Free Interleaver Design for LTE Turbo Codes", R1-063061 of 3GPP TSG RAN WG 1, Nov. 6-10, 2006, pp. 1-8, XP002475771, Riga, Latvia. |
Motorola, "Code Block Segmentation for Contention-Free Turbo Interleavers" R1-063062 of TSG RAN WG 1 Meeting #47, Nov. 10, 2006, pp. 1-4, Riga, Latvia. |
Motorola, "Code Block Segmentation for LTE Channel Encoding" 3rd Generation Partnership Project, 3GPP Technical Specification Group, Radio Access network, Working Group1, Feb. 12, 2007, pp. 1-5, XP002434167. |
Motorola, "Contention-Free Interleaver Designs for LTE Turbo Codes" 3GPP TSG RAN WG 1 Meeting #47BIS, R1-070054, Jan. 19, 2007, pp. 1-9, XP002473951, Sorrento, Italy. |
Motorola, "Eliminating Tail Bits in LTE Channel Coding", R1-062079 of TSG RAN WG 1 Meeting #46, Aug. 28, 2006-Sep. 1, 2006, pp. 1-3, XP002475874, Tallin, Estonia. |
Motorola, France Telecom, Get Orange, "Eutra FEC Enhancement" 3GPP TSG RAN WG 1 Meeting #44BIS, R1-061050, Mar. 27-31, 2006, pp. 1-14, XP002475873, Athens, Greece. |
PCT Notification of Transmittal of the International Search Report and the Written Opinion of the International Searching Authority, or the Declaration, mailed Jul. 11, 2008, pp. 1-20, PCT/US2007/0834390, European Patent Office. |
PCT Notification of Transmittal of the International Search Report and the Written Opinion of the International Searching Authority, or the Declaration, mailed May 20, 2008, pp. 1-15, PCT/US2007/ 078678, European Patent Office. |
PCT Notification of Transmittal of the International Search Report and the Written Opinion of the International Searching Authority, or the Declaration, mailed May 20, 2008, pp. 1-17, PCT/US2007,078676, European Patent Office. |
Rosnes, E, et al, "Optimum Distance Quadratic Permutation Polynomial-based Interleavers for Turbo Codes" 2006 IEEE International Symposium on Information Theory, Jul. 9-14, 2006, pp. 1988-1992, XP002473952, Seattle, USA. |
Rosnes, Eirik et al.: "Improved Algorithms for the Determination of Turbo-Code Weight Distributions", IEEE Transactions on Communications, vol. 53, No. 1, Jan. 2005, pp. 20-26. |
Ryu J et al.: "On quadratic inverses for quadratic permutations polynominals over integer rings", IEEE Transactions on Information Theory, US, vol. 52, No. 3, Mar. 11, 2006, pp. 1254-1260. |
Takeshitta Oy "On Maximum Contention-Free Interleavers and Permutation Polynomials Over Integer Rings", IEEE Transactions on Information Theory, Mar. 2006, vol. 52, No. 3, pp. 1249-1253, XP002473953, USA. |
Wien Mathias et al.: "Performance Analysis of SVC", IEEE Transactions on Circuits and Systems for Video Technology, Vol. 17, No. 9, September 2007, pp. 1194-1203. |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180123847A1 (en) * | 2015-04-15 | 2018-05-03 | Zte Corporation | Method and apparatus for code block division |
US10708099B2 (en) * | 2015-04-15 | 2020-07-07 | Zte Corporation | Method and apparatus for code block division |
US11477065B2 (en) | 2015-04-15 | 2022-10-18 | Zte Corporation | Method and apparatus for code block division |
US11368169B2 (en) | 2017-03-24 | 2022-06-21 | Zte Corporation | Processing method and device for quasi-cyclic low density parity check coding |
US11843394B2 (en) | 2017-03-24 | 2023-12-12 | Zte Corporation | Processing method and device for quasi-cyclic low density parity check coding |
US20220094471A1 (en) * | 2017-11-16 | 2022-03-24 | Qualcomm Incorporated | Reduced overhead error detection code design for decoding a codeword |
US11695505B2 (en) * | 2017-11-16 | 2023-07-04 | Qualcomm Incorporated | Reduced overhead error detection code design for decoding a codeword |
Also Published As
Publication number | Publication date |
---|---|
US20080098273A1 (en) | 2008-04-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8356232B2 (en) | Method and apparatus for encoding and decoding data | |
JP6204543B2 (en) | Transport block size determination method and signal transmission method using the same | |
EP3160071B1 (en) | Data sending method and apparatus | |
EP2080271B1 (en) | Method and apparatus for encoding and decoding data | |
JP3610329B2 (en) | Turbo coding method using large minimum distance and system for realizing the same | |
US7873893B2 (en) | Method and apparatus for encoding and decoding data | |
US8850286B2 (en) | Method and apparatus for encoding and decoding data | |
US7475330B2 (en) | Method and apparatus for generating a punctured symbol vector for a given information vector | |
AU2014308554B2 (en) | Enhanced automatic identification system | |
KR100584170B1 (en) | Turbo Coded Hybrid Automatic Repeat Request System And Error Detection Method | |
US8161363B2 (en) | Apparatus and method to encode/decode block low density parity check codes in a communication system | |
EP1819058A1 (en) | Cyclic redundancy check (CRC) based error correction method and device | |
CN101217352B (en) | A buffering setting method of phase rate matching | |
JP2009543477A (en) | System and method for forward error correction (FEC) protection | |
WO2007020678A1 (en) | Transmitter apparatus, coder apparatus and decoder apparatus | |
WO2007020677A1 (en) | Transmitter apparatus | |
US20040039985A1 (en) | Method and apparatus for puncturing with unequal error protection in a wireless communication system | |
Bhargava et al. | Coding theory and its applications in communication systems |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BLANKENSHIP, YUFEI W.;BLANKENSHIP, T. KEITH;CLASSON, BRIAN K.;AND OTHERS;REEL/FRAME:018361/0328;SIGNING DATES FROM 20061005 TO 20061006Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BLANKENSHIP, YUFEI W.;BLANKENSHIP, T. KEITH;CLASSON, BRIAN K.;AND OTHERS;SIGNING DATES FROM 20061005 TO 20061006;REEL/FRAME:018361/0328 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:028829/0856Effective date: 20120622 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034500/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
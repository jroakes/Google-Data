US8438558B1 - System and method of updating programs and data - Google Patents
System and method of updating programs and data Download PDFInfo
- Publication number
- US8438558B1 US8438558B1 US12/383,616 US38361609A US8438558B1 US 8438558 B1 US8438558 B1 US 8438558B1 US 38361609 A US38361609 A US 38361609A US 8438558 B1 US8438558 B1 US 8438558B1
- Authority
- US
- United States
- Prior art keywords
- version
- references
- representation
- portions
- alternate
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/65—Updates
- G06F8/658—Incremental updates; Differential updates
Definitions
- FIGS. 3A-3C provide an example of a version of software in three different formats.
- FIG. 3A illustrates the source code version of the software as written by a programmer in the BASIC programming language. The program prints the word “world” twice, each followed by an instruction to move to a new line.
- FIG. 3B illustrates the same version in a compiled, assembly language code format using the instructions set for the popular Motorola 6809 processor; the processor uses numbers to identify the operations it will perform and the assembly language version show what those operations are (e.g., the byte “8e” is a number value that instructs the processor to load a value in the X register (“LDX”)).
- FIG. 3A illustrates the source code version of the software as written by a programmer in the BASIC programming language. The program prints the word “world” twice, each followed by an instruction to move to a new line.
- FIG. 3B illustrates the same version in a compiled, assembly language code format using the instructions set for the popular Motorola 6809 processor; the processor
- 3C illustrates the same base version in a compiled, machine language code format that is suitable for execution by the 6809 processor.
- a programmer may write in the software in source code.
- the source code is later “compiled” into machine code, e.g., a collection of values whose operation is somewhat difficult for humans to decipher.
- Assembly language makes it easier for humans to ascertain the functions of the machine code (software may also be written in assembly language).
- FIGS. 4A-4C illustrate the corresponding formats for an updated version of the software shown in FIGS. 3A-3C .
- FIG. 4A illustrates how a programmer may have updated the source code version of the software shown in FIG. 3A .
- the updated version contains instructions to print the word “hi” followed by an instruction to move to a new line, and to thereafter print the word “world” followed by a move to another new line.
- the only difference between the updated version of the software ( FIG. 4A ) and the prior version of the software ( FIG. 3A ) (hereafter, the “base” software) is that the source code of the updated version prints the word “hi” instead of the first instance of printing the word “world”.
- a patch is typically a small program that represents the differences between the base and updated versions as well as instructions for making the changes. (A patch may also include only the changes if a program for installing the changes is already available on the end user's computer.) When executed by the end user's computer, the patch modifies the machine code of the base version so that it matches the updated version.
- FIG. 5 illustrates that even a minor update of the base version software that simply replaces a single occurrence of the word “world” with the word “hi”, results in numerous differences throughout the corresponding machine code formats.
- FIG. 5 shows a part 52 of the base version in machine code format (from FIG. 3C ) and a part 54 of the corresponding updated version of the software (from FIG. 4C ).
- the updated version shows numerous bytes that are either different from or not included in the base version.
- the size and efficiency of patches can be important considerations with respect to patches. For example, if a patch is sent over a network, such as the Internet or a cell phone network, the speed of the network may delay the delivery of a large patch. Moreover, some devices such as cell phones may have a relatively small amount of memory, which can also militate in favor of keeping patches small.
- One aspect of the invention provides a method of generating a patch.
- the method includes converting a first version of a program into a first representation, the first representation distinguishing between first references and first non-references, where the first references are portions of the first version that refer to other portions of the first version and where the first non-references are portions of the first version that do not refer to other portions of the first version; converting a second version of the program into a second representation where portions of the second version are the same as the first version and where portions of the second version are the different than the first version, the second representation distinguishing between second references and second non-references, where the second references are portions of the second version that refer to other portions of the second version and where the second non-references are portions of the second version that do not refer to other portions of the second version; modifying, using a processor, a portion of the second representation based on a comparison of the second references with the first references while retaining information to convert the second representation back into the second version; and generating a patch representing
- Another aspect of the invention provides a system including a memory storing instructions and data, where the data includes a first version of a program and a second version of the program, and a processor to execute the instructions and to process the data.
- the instructions include: converting the first version of the program into a first representation, the first representation distinguishing between first references and first non-references, where the first references are portions of the first version that refer to other portions of the first version and where the first non-references are portions of the first version that do not refer to other portions of the first version; converting the second version of the program into a second representation where portions of the second version are the same as the first version and where portions of the second version are the different than the first version, the second representation distinguishing between second references and second non-references, where the second references are portions of the second version that refer to other portions of the second version and where the second non-references are portions of the second version that do not refer to other portions of the second version; modifying a portion of the second representation based on a comparison
- Yet another aspect of the invention provides a method that includes: converting a first version of a program into a first representation, the first representation distinguishing between first references and first non-references, where the first references are portions of the first version that refer to other portions of the first version and where the first non-references are portions of the first version that do not refer to other portions of the first version; receiving a patch, the patch comprising information representing the differences between the first representation and a second representation of a second version of the program, the second representation distinguishing between second references and second non-references, where the second references are portions of the second version that refer to other portions of the second version and where the second non-references are portions of the second version that do not refer to other portions of the first version; creating, with a processor and based on the information in the patch, the second representation from the first representation; and converting the second representation into the second version of the program.
- Another aspect of the invention provides a system that includes a first computer at a first node of a network, the first computer comprising a first memory storing a first set of instructions and a first processor that processes data in accordance with the first set of instructions; the first computer having access to a first version of a program.
- the system further includes a second computer at a second node of a network, the second computer comprising a second memory storing a second set of instructions and a second processor that processes data in accordance with the second set of instructions; the second computer having access to the first version of the program and having access to a second version of the program.
- the second set of instructions comprise: converting the first version of the program into a first representation, the first representation distinguishing between first references and first non-references, where the first references are portions of the first version that refer to other portions of the first version and where the first non-references are portions of the first version that do not refer to other portions of the first version; converting the second version of the program into a second representation where portions of the second version are the same as the first version and where portions of the second version are the different than the first version, the second representation distinguishing between second references and second non-references, where the second references are portions of the second version that refer to other portions of the second version and where the second non-references are portions of the second version that do not refer to other portions of the second version; modifying a portion of the second representation based on a comparison of the second references with the first references while retaining information to convert the second representation back into the second version; generating a patch representing the differences between the first representation and the second representation, and transmitting the patch to the first computer.
- the first set of instructions comprise: converting the first version of the program into the first representation; receiving the patch representing the differences between the first representation and the second representation; creating, based on the patch, the second representation from the first representation; and converting the second representation into the second version of the program.
- FIG. 1 is a block diagram of system components in accordance with an aspect of the system and method.
- FIG. 2 is a schematic diagram of a system in accordance with an aspect of the system and method.
- FIGS. 3A-3C provide an example of a base version of software in different formats.
- FIGS. 4A-4C provide an example of an updated version of software in different formats.
- FIG. 5 illustrates the differences between a portion of the base version and the updated version resulting from a minor change in the software.
- FIG. 6 provides an example of the various components of the assembly language and the machine language format.
- FIG. 7 provides a further description of the assembly language and the machine language format.
- FIG. 8 provides an example of creating a table list.
- FIG. 9 provides an example of creating an index list.
- FIGS. 10A-10C provides an example of creating a byte list.
- FIGS. 11A-11C provides an example of creating a control list.
- FIG. 12 provides an example of an alternate representation of the base version.
- FIG. 13 provides an example of an alternate representation of the updated version.
- FIG. 14 provides an example of locating absolute addresses or references to locations.
- FIG. 15 provides an example of comparing the alternate representation of the updated version with the alternate representation of the base version.
- FIG. 16 provides an example of modifying the alternate representation of the updated version.
- FIG. 17 provides an example of comparing the alternate representation of the updated version with the alternate representation of the base version.
- FIG. 18 is a flow chart in accordance with several aspects of the system and method.
- a system 100 in accordance with one aspect includes a computer 110 containing a processor 210 , memory 220 and other components typically present in general purpose computers.
- Memory 220 stores information accessible by processor 210 , including instructions 240 that may be executed by the processor 210 . It also includes data 230 that may be retrieved, manipulated or stored by the processor.
- the memory may be of any type capable of storing information accessible by the processor, such as a hard-drive, memory card, ROM, RAM, DVD, CD-ROM, write-capable, and read-only memories.
- the processor 210 may be any well-known processor, such as processors from Intel Corporation. Alternatively, the processor may be a dedicated controller such as an ASIC.
- the instructions 240 may be any set of instructions to be executed directly (such as machine code) or indirectly (such as scripts) by the processor.
- the terms “instructions,” “steps” and “programs” may be used interchangeably herein.
- the instructions may be stored in object code form for direct processing by the processor, or in any other computer language including scripts or collections of independent source code modules that are interpreted on demand or compiled in advance. Functions, methods and routines of the instructions are explained in more detail below.
- Data 230 may be retrieved, stored or modified by processor 210 in accordance with the instructions 240 .
- the data may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, XML documents, or flat files.
- the data may also be formatted in any computer readable format such as, but not limited to, binary values, ASCII or Unicode.
- the data may comprise any information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, pointers, references to data stored in other memories (including other network locations) or information which is used by a function to calculate the relevant data.
- processors and memory are functionally illustrated in FIG. 1 within the same block, it will be understood by those of ordinary skill in the art that the processor and memory may actually comprise multiple processors and memories that may or may not be stored within the same physical housing. For example, some of the instructions and data may be stored on removable CD-ROM and others within a read only computer chip. Some or all of the instructions and data may be stored in a location physically remote from, yet still accessible by, the processor. Similarly, the processor may actually comprise a collection of processors which may or may not operate in parallel.
- computer 110 is a server communicating with one or more client computers 120 , 150 .
- Each client computer may be configured similarly to the server 110 , with a processor, memory, and instructions.
- Each client computer 120 , 150 may be a personal computer, intended for use by a person 190 191 , having all the internal components normally found in a personal computer such as a central processing unit (CPU), display 160 (for example, a monitor having a screen, a projector, a touch-screen, a small LCD screen, a television, or another device such as an electrical device that is operable to display information processed by the processor), CD ROM, hard drive, user input device (for example, a mouse, keyboard, touch screen or microphone), speakers, modem and/or network interface device (telephone, cable or otherwise) and all of the components used for connecting these elements to one another and permitting them to communicate (directly or indirectly) with one another.
- computers in accordance with the systems and methods described herein may comprise any device capable of processing instructions and transmitting data to and from humans and other
- client computers 120 and 150 may comprise a full-sized personal computer, many aspects of the system and method are particularly advantageous when used in connection with mobile devices capable of wirelessly exchanging data with a server over a network such as the Internet.
- client computer 120 may be a wireless enabled PDA such as a Blackberry phone or an Internet-capable cellular phone.
- the user may input information using a small keyboard (in the case of a Blackberry phone), a keypad (in the case of a typical cell phone), a touch screen (in the case of a PDA) or any other means of user input.
- the server 110 and client computers 120 , 150 are capable of direct and indirect communication, such as over a network 295 .
- the network, and intervening nodes may comprise various combinations of devices and communication protocols including the Internet, World Wide Web, intranets, virtual private networks, wide area networks, local networks, cell phone networks, private networks using communication protocols proprietary to one or more companies, Ethernet, WiFi and HTTP and various combinations of the foregoing.
- Such communication may be facilitated by any device capable of transmitting data to and from other computers, such as modems (e.g., dial-up or cable), network and wireless interfaces.
- Server 110 may be a web server.
- information may be sent via a medium such as a disk, tape or CD ROM.
- the information may be transmitted in a non-electronic format and manually entered into the system.
- some functions are indicated as taking place on a server and others on a client, various aspects of the system and method may be implemented by a single computer having a single processor.
- data 230 of server 110 stores different versions of software.
- data 230 may store software 272 that is an older or base version, and software 274 that is a newer, updated version of software 272 .
- portions of the older version of the software 272 and the updated version 274 each may contain instructions, operands, and data necessary for the software to function as intended.
- the updated version 274 may include additional portions providing more functionality than base version 272 , this is not a requirement.
- portions of the updated version 274 may improve upon or correct the functionality provided by portions of the base version 272 , or, in certain cases, the updated version 274 may even contain less functionality by not having certain portions of base version 272 .
- software versions 272 and 274 are not limited to any particular format, and may be developed using any programming language.
- software versions 272 and 274 may be developed using a high-level processor independent programming language like C, C++, HTML, Perl, or Java, a low-level processor-dependent programming language such as assembly or machine language, or any combination thereof.
- Memory 220 may also store a patch generator 300 that is executable by processor 210 .
- Patch generator 300 may perform one or more of the following functions: create an alternate representation 276 of the base version 272 ; create an alternate representation 278 of the updated version 274 ; compare and modify portions of the alternate representation 278 of the updated version of the software to more closely match the alternate version 276 of the base version of the software; and create a patch 280 .
- the patch 280 in turn, may be executed by a processor to create the alternate representation 278 of the updated version 274 from the alternate representation 276 of the base version 272 .
- memory 220 may contain a patch transmitter 310 .
- patch transmitter 310 may be operable to transmit or send the patch 280 to the client devices 120 , 150 over the network 295 .
- the patch generator 300 distinguishes between two different types of changes found in the updated version 274 of the software over the base version 272 .
- One type of change relates to changes in references to locations, i.e., where one portion of the software references another portion of the software.
- the other type relates to all other changes.
- Yet another aspect of the system and method makes such distinctions by creating alternative representations of the base and updated versions of the software in accordance with, but not limited to, the following method.
- a computer program may include a series of operations 602 , operands 604 and other data (the assembly language format 600 of the machine code 650 are both shown in the figure).
- Operations 602 control the operation of a processor.
- each particular type of operation in the series of operations 602 may be represented by one or more unique bytes.
- the processor receives the operation having the hexadecimal byte “8e” 720 , the processor recognizes this as the “LDX” operation 620 , i.e., an instruction to load data into the X register.
- each “JSR” operation 622 may be uniquely represented by a hexadecimal byte “bd” 722 .
- operands 604 may be references to other locations in the software, such as locations storing other instructions or data.
- “LDX #world” 632 instructs the processor to load the data stored at the address “07f9” (referenced by label 607 ) into a register X of the processor.
- “JSR print” 634 instructs the processor to jump to the address “0801” (referenced by label 611 ) and to begin executing the instructions 616 at that address.
- an operand may comprise a specific number that will be added to another specific number.
- RTS operations 602
- Other operations 602 such as “RTS” 624 , for example, may not operate on any operands and may be a complete instruction by itself.
- the operands 604 may be represented by one or more bytes. This is so regardless of whether the operand refers to another location of the program or not.
- the “LDX #world” 632 command instructs the processor to load two hexadecimal bytes “07 f9” 730 into the X register of the processor.
- the data “world” 614 may be stored in the program as a series of hexadecimal bytes “77 6f 72 6c 64” 714 .
- each of the bytes 652 may be associated with a particular address in a series of consecutive addresses 660 .
- Addresses 660 may be absolute addresses.
- Absolute addresses also known as a specific addresses, may be a memory address that identifies a fixed location in memory.
- instruction 651 is stored at memory location “07e0” and instruction 654 is stored at memory location “07e3”.
- the operand of instruction 651 which is two bytes long, immediately follows instruction 651 at addresses “07e1” and “07e2” respectively (not shown).
- a processor analyzes the program to identify referenced locations.
- the processor determines those portions of the program that are the targets of other portions of the program. These targets, in turn, may be assigned unique identifiers that are independent of their actual address location. For example, as shown in FIG. 8 , each address that is referred to by other portions of the program, such as “07f9” (e.g., the instruction “LDX #world” at address “07e0” loads information from the address at location “07f9”) and “0801” (e.g., the instruction “JSR print” jumps to the instruction at location “0801”), may be stored in a look-up table 850 . Furthermore, each referenced address may be associated with a unique index. For example, as seen in table 850 , referenced address “07f9” is assigned to index “1” and referenced address “07ff” is assigned to index “2”.
- the collection of referenced locations may be stored as a set or collection of characters.
- entry “1:07f9” 871 in table list 870 may represent the assignment of index “1” to address “07f9” and entry “2:07ff” may represent the assignment of index “2” to absolute address “07ff”.
- the processor may also identify the portions that point at those targets. These references to other portions are, in turn, associated with the unique identifiers that were associated with the targets. For example, the instruction “LDX #world” points to the data at address “07f9”. The address “07f9” has, in turn, has already been associated with index value “1” in table 850 . Accordingly, this and other references to “07f9” may be associated with the value of “1”. Similarly, the instruction “JSR print” points to the data at address “0801”, which has already been associated with index value “3” in table 850 . Accordingly, this and other references to “0801” may be associated with the value of “3”.
- the collection of referenced locations may be stored as a collection of characters.
- the collection is stored as an ordered list which corresponds with the order in which the references arose.
- an index list 970 ( FIG. 9 ) may also be created.
- Index list 970 may be an ordered list of indexes, where the values of the indexes identify references found in one or more portions of the software, and where the order of the indexes (when read left-to-right, for example) represents the relative location of one reference with respect to other references in the software.
- bytes “07 f9” 951 may be understood as the very first reference to another address or location in the software, and further may be understood to reference address “07f9”. Accordingly, the first entry in the index list 970 may be determined to be the index “1” 971 , based on its assignment to address “07f9” in table 850 .
- bytes “08 01” 952 may be understood as the next and second reference to another address or location in the software, and further may be understood to reference address “0801”.
- the second entry in the index list 970 may be determined to be the index “3” 972 , based on its assignment to address “0801” in table 850 .
- the processor may also store information that identifies the values of the program that do not correspond with references. For example and as shown in FIG. 10A , the processor may identify the portions 950 of the software that are references to other locations relative to other portions 1050 (hereafter referred to as “non-references”).
- FIG. 10B shows the same bytes as those shown in the machine code 650 of FIG. 10A , except it arranges the bytes 652 consecutively from left-to-right in the order in which they are found in the program.
- the processor may extract the portions that are non-references (the non-references are circled) and place them in an ordered list of bytes 1070 shown in FIG. 10C .
- Byte list 1070 thus recites, reading from the left to the right, a list of the bytes that are not references and does so in the order in which the bytes are found in the software.
- the processor may also store information that identifies the order and quantity of references relative to non-references. For example and as shown in FIGS. 11A and 11B the processor distinguishes between references and non-references as described above.
- the individual bytes of non-references are shown encircled in solid circles and the bytes associated with references are encircled with dashed circles.
- each non-reference byte may be associated with the letter “b”.
- the first byte “8e” is designated with letter “b” 1001 because it is associated with an operation (“LDX”) instead of a reference.
- LDX operation
- bytes that are understood as references are designated with a letter “r”.
- the first reference “07f9” is designated with letter “r” 1002 .
- the subsequent bytes are designated with a “r” or an “b” depending upon whether the bytes are references or not-references respectively.
- a final ordered list 1170 (a “control list”) is shown in FIG. 11C .
- ordered control list 1170 contains the list of designation “b” and “r” in the order they are found in the software.
- control list 1170 byte list 1070 , table list 870 , and index list 970 collectively define an alternate representation 276 of the base version 272 .
- An alternate representation 278 of the updated version 274 may be similarly created. As shown in FIG. 13 , for example, the alternate representation 278 may also include a control list 1350 , a byte list 1360 , a table list 1370 , and an index list 1380 .
- the system and method may compare the differences between the alternate representation 276 of the base version and the alternate representation 278 of the updated version. As shown in FIG. 14 , each corresponding list in the two alternate representations may be compared and differences identified.
- control list 1350 of the alternate representation of the updated version may be compared with control list 1170 of the alternate representation of the base version.
- the control list 1350 of the alternate representation of the updated version is identical to the control list 1170 of the alternate representation of the base version, with the exception of three additional entries at the end (highlighted by box 1402 ) that are not in control list 1170 of the alternate representation of the base version.
- byte list 1360 of the alternate representation of the updated version may be compared with byte list 1070 of the alternate representation of the base version.
- the byte list 1360 of the alternate representation of the updated version is identical to the byte list 1070 of the alternate representation of the base version, with the exception of three additional entries “68”, “69”, and “00” (highlighted by box 1403 ) in the middle of byte list 1360 that are not found in the byte list 1070 of the alternate representation of the base version.
- table list 1370 of the alternate representation of the updated version may be compared with table list 870 of the alternate representation of the base version.
- the table list 1370 of the alternate representation of the updated version differs from the table list 870 of the alternate representation of the base version in two respects.
- table list 1370 has an additional fourth entry, highlighted by box 1406
- table list 870 only has three entries.
- the respective second and third entries in the two table lists, highlighted by boxes 1404 and 1405 respectively, have different values and are thus different.
- index list 1380 of the alternate representation of the updated version may be compared with index list 970 of the alternate representation of the base version.
- the index list 1380 of the alternate representation of the updated version has the same number of entries as in index list 970 , but the values of many of the entries are different between the index list 1380 and index list 970 .
- all of the remaining entries highlighted by boxes 1407 - 1412 are different between the two index lists.
- system and method may modify certain portions of the alternate representation 278 of the updated version, without changing its accurate representation of the original updated version, in order to reduce the number of differences between it and the alternate representation 276 of the base version as described below.
- a table list may represent the assignment of a particular index to a unique referenced address found in the software.
- an index list may represent an ordered list of indexes, where the values of the indexes identify particular references found in one or more portions of the software, and where the order of the indexes (when read left-to-right) represents the relative order in which the referenced addresses are found in the software.
- the table list may be modified by changing the index numbers that are assigned to the unique reference addresses determined from the software. Concomitant changes may also be made in the index list to reflect these changes. Such modifications may be performed for the purpose of reducing the number of differences between the alternate representation of the updated version and the alternate representation of the base version.
- table list 1370 in FIG. 15 shows the original table list of the updated version of the software.
- index “1” is associated with address “07f9”
- index “2” is associated with address “07fc”
- index “3” is associated with address “0802”
- index “4” is associated with address “0804”.
- the processor may change the indexes that are assigned to the addresses. As can be seen in modified table list 1371 and represented by arrows 1504 , 1506 and 1508 , index “2” may be reassigned to address “0802”, index “3” may be reassigned to address “0804”, and index “4” may be reassigned to address “07fc”. Index “1” may remain as is.
- FIG. 15 also shows a modified index list 1381 that has been modified to reflect the new assignments and to maintain the identity and order in which the referenced addresses are found in the software.
- each previous entry “4” in index list 1380 representing the previous assignment of index “4” to address “0804” in table list 1370 has been replaced with an entry “3” (circled for ease of illustration) in modified index list 1381 , to properly represent the change of assignment of address “0804” to index “3” in modified table list 1371 . Similar changes are made to the other reassigned indexes.
- FIG. 16 illustrates the result of the modification of the alternate representation of the updated version as described above.
- the differences between the index list of the alternate representation of the base version and the corresponding index list of the alternate representation of the updated version have been reduced to just one difference identified by box 1602 .
- FIG. 16 illustrates that there are fewer differences between the alternate representation of the base version and the alternate representation of the updated version than shown in FIG. 14 .
- the reduction of differences can be even more dramatic.
- the alternate representation of the updated version may be converted back into the updated version.
- the alternate representation 278 in FIG. 13 of the updated version may be converted into updated version 274 by substituting each entry in the control list 1350 with an appropriate entry from either the byte list or the table list.
- each of the successive entries in the control list that are a “b” may be successively replaced with the corresponding entry from the byte list.
- the first entry (reading from left-to-right) in control list 1350 is a “b”, which may be replaced with the first entry in byte list 1360 , which is “8e”.
- the second “b” in the control list which is the third entry, may be replaced with the second byte in the byte list, which is “bd”.
- each of the successive entries in the control list that are an “r” may also be successively'replaced with an address from the table list 1370 , where the address is identified by the appropriate successive index value in the index list.
- the first “r” in the control list (second entry) may be replaced by the address indicated by the first entry of the index list 1380 , which is a “1”, and which, as seen from table list 1370 , is assigned to address “07f9”.
- the first “r” may be replaced by address “07f9”.
- the second “r” in the control list (fourth entry) may be replaced by the address indicated by the second entry into the index list “4”, which is assigned to address “0804”.
- the second “r” may be replaced by address “0804”.
- the updated version may be reconstructed from its alternate representation.
- the system and method creates a patch 280 .
- the patch may include (1) instructions for creating an alternate of the base version, (2) the differences between the alternate base version and alternate updated version, (3) instructions for applying those differences to the alternate base version—so as to create an alternate updated version, and (4) and instructions for creating the updated version from the alternate.
- Patch 280 may include information 1702 that may be used to generate control list 1350 of the alternate representation of the updated version from control list 1170 of the alternate representation of the base version.
- information 1702 may include an ordered series of directives, where each of the directives may be performed in the order it is presented to generate control list 1350 .
- information 1702 may contain a directive 1703 indicating that the first step for generating updated control list 1350 from base control list 1170 is to copy the first 29 entries of control list 1170 .
- Information 1702 may also include a directive 1705 to insert the entries “bbb” after copying the first 29 entries.
- the patch enables the creation of an updated control list 1350 from a base control list 1170 .
- patch 280 may also include directives for generating the byte list, table list, and the index list of the alternate representation of the updated version from the corresponding lists of the alternate representation of the base version.
- each set of directives for generating a respective list may be separated by a delimiter that may indicate the end of one set of directives and the beginning of the next.
- the delimiter may also identify the list associated with a set of directives. For example, delimiter 1752 indicates that the following set of directives applies to the control list. Similarly, delimiter 1754 indicates the beginning of directives for the byte list.
- a patch representing the differences between the alternate versions may be generated using conventional patch creation programs, such as by applying bsdiff or xdelta to the alternative base and alternative updated versions.
- Patch 280 may be transmitted from server 110 to one or more clients 120 , 150 , which may use the information in the patch 280 to generate an updated version of the software 174 from the base version of the software 172 .
- another aspect of the invention relates to (a) converting a base version of software into an alternate representation, (b) applying a patch to the alternate representation of the base version to create an alternate representation of an updated version, and (c) converting the alternate representation of an updated version of software into the updated version.
- data 170 in client device 120 , 150 may store different versions of software.
- data 170 may store a base version 172 , an updated version 174 , an alternate representation 176 of the base version 172 , and an alternate representation 178 of the updated version 174 , that are respectively identical to the corresponding versions stored on server 110 .
- Memory 164 may store a patch 180 , that is executable by processor 162 and is identical to the patch 280 stored on server 110 .
- patch 180 is transmitted from server 110 to clients 120 , 150 .
- Patch 180 may include (1) instructions for creating an alternate representation 176 of the base version 172 (2) the differences between the alternate base version 176 and alternate updated version 178 (3) instructions for applying those differences to the alternate base version 176 so as to create an alternate updated version 178 , and (4) and instructions for creating the updated version 174 from the alternate updated version 178 .
- processor 162 in the client device may execute patch 180 to create the updated version 174 of the software from base version 172 of the software.
- system and method is not limited to any specific type of program.
- it may be used to create alternate versions of, and patches for, web-browsers such as Google Chrome or operating systems like Microsoft Vista or Linux.
- a patch in accordance with the system and method will be substantially smaller than conventional patches in many circumstances, it may be particularly advantageous when sent to devices—such as cell phones and wireless PDAs—that are limited in their ability to promptly receive or adequately store larger patches.
- the modification of the alternate representation of the updated version to reduce the differences between it and the alternate representation of the base version may be implemented in various ways.
- the respective lists of the alternate representation of the updated and base versions may be compared using a simple algorithm that goes through and checks every permutation and combination of assigning indexes to addresses in order to determine the combination that may result in a desired reduction of differences between the two versions.
- more sophisticated algorithms may be used, such as those employed for simulated annealing, genetic programming, depth-first search, and sub-graph isomorphism.
- absolute addresses have been used to describe various aspects, it is to be understood that the references are not limited to absolute addresses, and may be relative addresses as typically used with re-locatable code.
- inventive aspects described herein are not limited to machine code format of a base and updated version of software, and may be readily applied to any format such as source code or assembly language format.
- references may include direct references, indirect references, or employ other relative addressing modes for referring to particular addresses.
- the references may include displacement values, which may reference a location in the software based on a distance between a base address and the address of the location being referenced.
- the references may reference a location in the software that itself contains another reference to a location in the software.
- references may be determined from any portion of the software.
- portions of the software may include data that are understood as references to other portions of the software.
- references have been exemplarily described as a series of bytes, this is not a requirement.
- a reference may be any number of contiguous or non-contiguous bits of the software that are together understood to be a reference to a location in the software.
- certain operations contain one or more fields of bits that may together be understood as referencing another portion of the software.
- patch generator 300 and patch transmitter 310 have been described as above, it will be readily understood that the numerous modifications are possible in various aspects.
- patch generator 300 may also include functionality of the patch transmitter 310 .
- the functionality of patch generator 300 may be implemented using separate components, where the components together operate to create the alternate representations 276 , 278 , and the patch 280 as described above.
Abstract
Description
Claims (37)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/383,616 US8438558B1 (en) | 2009-03-27 | 2009-03-27 | System and method of updating programs and data |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/383,616 US8438558B1 (en) | 2009-03-27 | 2009-03-27 | System and method of updating programs and data |
Publications (1)
Publication Number | Publication Date |
---|---|
US8438558B1 true US8438558B1 (en) | 2013-05-07 |
Family
ID=48183382
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/383,616 Expired - Fee Related US8438558B1 (en) | 2009-03-27 | 2009-03-27 | System and method of updating programs and data |
Country Status (1)
Country | Link |
---|---|
US (1) | US8438558B1 (en) |
Cited By (42)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100031245A1 (en) * | 2008-08-04 | 2010-02-04 | Red Bend Ltd. | Performing an In-Place Update Of an Operating Storage Device |
US20120272228A1 (en) * | 2011-04-20 | 2012-10-25 | Raj Narayan Marndi | Method and apparatus for determining compatible versions of dependent entities in a computer system |
US20130167120A1 (en) * | 2011-12-21 | 2013-06-27 | International Business Machines Corporation | Retrieving revisions in source code from a plurality of revision history data sets |
US20140130028A1 (en) * | 2012-11-07 | 2014-05-08 | Hiroshi Maeda | Information processing apparatus and network system |
US20140245279A1 (en) * | 2011-12-19 | 2014-08-28 | Fujitsu Limited | Method and apparatus for determining installation order of software |
US20140359603A1 (en) * | 2013-05-30 | 2014-12-04 | The Boeing Company | Deployment of software across an enterprise system |
US20150006458A1 (en) * | 2013-06-28 | 2015-01-01 | Vmware, Inc. | Method and system for determining configuration rules based on configurations of complex systems |
US20160019049A1 (en) * | 2010-05-26 | 2016-01-21 | Automation Anywhere, Inc. | System and method for resilient automation upgrade |
US20160253170A1 (en) * | 2015-02-27 | 2016-09-01 | Lenovo (Singapore) Pte, Ltd. | Efficient deployment of thin client applications to end user |
US9880787B2 (en) * | 2015-08-06 | 2018-01-30 | Dialog Semiconductor B.V. | System and method for memory patching circuits |
CN109271196A (en) * | 2018-09-28 | 2019-01-25 | 平安普惠企业管理有限公司 | APP version upgrading method, device, system and computer equipment |
US10509642B2 (en) * | 2018-03-30 | 2019-12-17 | International Business Machines Corporation | Intelligent discovery and application of API changes for application migration |
US10732958B2 (en) * | 2016-03-01 | 2020-08-04 | Yanmar Co., Ltd. | Terminal device and software rewriting program |
US10733329B1 (en) * | 2018-04-20 | 2020-08-04 | Automation Anywhere, Inc. | Robotic process automation system and method with secure credential vault |
US10733540B2 (en) | 2010-05-26 | 2020-08-04 | Automation Anywhere, Inc. | Artificial intelligence and knowledge based automation enhancement |
US10769427B1 (en) | 2018-04-19 | 2020-09-08 | Automation Anywhere, Inc. | Detection and definition of virtual objects in remote screens |
US10853097B1 (en) | 2018-01-29 | 2020-12-01 | Automation Anywhere, Inc. | Robotic process automation with secure recording |
US10911546B1 (en) | 2019-12-30 | 2021-02-02 | Automation Anywhere, Inc. | Robotic process automation with automated user login for multiple terminal server hosted user sessions |
US10908950B1 (en) | 2018-04-20 | 2021-02-02 | Automation Anywhere, Inc. | Robotic process automation system with queue orchestration and task prioritization |
CN112799702A (en) * | 2021-02-01 | 2021-05-14 | 北京百家科技集团有限公司 | Software online upgrading method, related equipment and storage medium |
CN112882746A (en) * | 2021-02-03 | 2021-06-01 | 网易（杭州）网络有限公司 | Application program updating method and device, storage medium and computer equipment |
US11086616B2 (en) | 2018-09-25 | 2021-08-10 | Vmware, Inc. | Near zero downtime application upgrade |
US11086614B1 (en) | 2020-01-31 | 2021-08-10 | Automation Anywhere, Inc. | Robotic process automation system with distributed download |
US11113095B2 (en) | 2019-04-30 | 2021-09-07 | Automation Anywhere, Inc. | Robotic process automation system with separate platform, bot and command class loaders |
CN113721967A (en) * | 2021-08-30 | 2021-11-30 | 苏州磐联集成电路科技股份有限公司 | Differential packet generation method, differential packet generation device, and upgrade method |
US11194702B2 (en) * | 2020-01-27 | 2021-12-07 | Red Hat, Inc. | History based build cache for program builds |
US11243803B2 (en) | 2019-04-30 | 2022-02-08 | Automation Anywhere, Inc. | Platform agnostic robotic process automation |
US11301224B1 (en) | 2019-04-30 | 2022-04-12 | Automation Anywhere, Inc. | Robotic process automation system with a command action logic independent execution environment |
CN114461264A (en) * | 2021-07-22 | 2022-05-10 | 荣耀终端有限公司 | Patching method, patch generating method and related equipment |
US11354164B1 (en) | 2018-04-20 | 2022-06-07 | Automation Anywhere, Inc. | Robotic process automation system with quality of service based automation |
US11481304B1 (en) | 2019-12-22 | 2022-10-25 | Automation Anywhere, Inc. | User action generated process discovery |
US11514154B1 (en) | 2020-01-31 | 2022-11-29 | Automation Anywhere, Inc. | Automation of workloads involving applications employing multi-factor authentication |
US11556362B2 (en) | 2019-03-31 | 2023-01-17 | Automation Anywhere, Inc. | Robotic process automation system with device user impersonation |
US11604663B2 (en) | 2020-02-21 | 2023-03-14 | Automation Anywhere, Inc. | Detection of user interface controls via invariance guided sub-control learning |
US11614731B2 (en) | 2019-04-30 | 2023-03-28 | Automation Anywhere, Inc. | Zero footprint robotic process automation system |
US11693923B1 (en) | 2018-05-13 | 2023-07-04 | Automation Anywhere, Inc. | Robotic process automation system with hybrid workflows |
US11734061B2 (en) | 2020-11-12 | 2023-08-22 | Automation Anywhere, Inc. | Automated software robot creation for robotic process automation |
US11775814B1 (en) | 2019-07-31 | 2023-10-03 | Automation Anywhere, Inc. | Automated detection of controls in computer applications with region based detectors |
US11782734B2 (en) | 2020-12-22 | 2023-10-10 | Automation Anywhere, Inc. | Method and system for text extraction from an application window for robotic process automation |
US11804056B2 (en) | 2020-01-31 | 2023-10-31 | Automation Anywhere, Inc. | Document spatial layout feature extraction to simplify template classification |
US11820020B2 (en) | 2021-07-29 | 2023-11-21 | Automation Anywhere, Inc. | Robotic process automation supporting hierarchical representation of recordings |
US11968182B2 (en) | 2021-07-29 | 2024-04-23 | Automation Anywhere, Inc. | Authentication of software robots with gateway proxy for access to cloud-based services |
Citations (210)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US3969723A (en) | 1974-07-03 | 1976-07-13 | General Electric Company | On-line modification of computer programs |
US4115853A (en) | 1976-12-21 | 1978-09-19 | Allen-Bradley Company | Jump structure for a digital control system |
US4278837A (en) | 1977-10-31 | 1981-07-14 | Best Robert M | Crypto microprocessor for executing enciphered programs |
US4319079A (en) | 1979-09-13 | 1982-03-09 | Best Robert M | Crypto microprocessor using block cipher |
US4425618A (en) | 1981-11-23 | 1984-01-10 | Bell Telephone Laboratories, Incorporated | Method and apparatus for introducing program changes in program-controlled systems |
US4464650A (en) | 1981-08-10 | 1984-08-07 | Sperry Corporation | Apparatus and method for compressing data signals and restoring the compressed data signals |
US4465901A (en) | 1979-06-04 | 1984-08-14 | Best Robert M | Crypto microprocessor that executes enciphered programs |
JPS59201150A (en) | 1983-04-28 | 1984-11-14 | Omron Tateisi Electronics Co | Debug device |
US4542453A (en) | 1982-02-19 | 1985-09-17 | Texas Instruments Incorporated | Program patching in microcomputer |
US4683549A (en) | 1983-05-07 | 1987-07-28 | Hitachi, Ltd. | Sequence control method and apparatus |
JPS63208941A (en) | 1987-02-25 | 1988-08-30 | Fujitsu Ltd | Managing system for updating history of program path |
US4807182A (en) | 1986-03-12 | 1989-02-21 | Advanced Software, Inc. | Apparatus and method for comparing data groups |
US4831517A (en) | 1986-10-10 | 1989-05-16 | International Business Machines Corporation | Branch and return on address instruction and methods and apparatus for implementing same in a digital data processing system |
US4972504A (en) | 1988-02-11 | 1990-11-20 | A. C. Nielsen Company | Marketing research system and method for obtaining retail data on a real time basis |
US4987550A (en) | 1987-09-22 | 1991-01-22 | International Business Machines Corporation | Selective processing of a data stream based on font format |
EP0411232A2 (en) | 1989-08-04 | 1991-02-06 | International Business Machines Corporation | Method for high-quality compression by binary text images |
US5043871A (en) | 1986-03-26 | 1991-08-27 | Hitachi, Ltd. | Method and apparatus for database update/recovery |
US5051745A (en) | 1990-08-21 | 1991-09-24 | Pkware, Inc. | String searcher, and compressor using same |
EP0472812A1 (en) | 1990-08-28 | 1992-03-04 | Landis & Gyr Technology Innovation AG | Method to charge an object code version to a first program stored in the computer of an appliance into an object code version of a second program which was derived by at least one change to the first program |
JPH04242829A (en) | 1991-01-08 | 1992-08-31 | Fujitsu Ltd | Program update processing device |
US5146221A (en) | 1989-01-13 | 1992-09-08 | Stac, Inc. | Data compression apparatus and method |
US5155847A (en) | 1988-08-03 | 1992-10-13 | Minicom Data Corporation | Method and apparatus for updating software at remote locations |
US5170465A (en) | 1989-06-30 | 1992-12-08 | Digital Equipment Corporation | Incremental-scanning compiler for source-code development system |
WO1993000633A1 (en) | 1991-06-21 | 1993-01-07 | Pure Software, Inc. | Method and apparatus for modifying relocatable object code files and monitoring programs |
JPH0591550A (en) | 1991-09-30 | 1993-04-09 | Oki Electric Ind Co Ltd | Method of loading program |
US5204960A (en) | 1990-01-08 | 1993-04-20 | Microsoft Corporation | Incremental compiler |
US5210854A (en) | 1989-06-14 | 1993-05-11 | Digital Equipment Corporation | System for updating program stored in eeprom by storing new version into new location and updating second transfer vector to contain starting address of new version |
EP0546684A2 (en) | 1991-12-12 | 1993-06-16 | International Business Machines Corporation | Method stubs for redispatch |
US5247660A (en) | 1989-07-13 | 1993-09-21 | Filetek, Inc. | Method of virtual memory storage allocation with dynamic adjustment |
US5260693A (en) | 1991-10-11 | 1993-11-09 | Spacelabs Medical, Inc. | Method and system for lossless and adaptive data compression and decompression |
US5307492A (en) | 1991-03-07 | 1994-04-26 | Digital Equipment Corporation | Mapping assembly language argument list references in translating code for different machine architectures |
US5319645A (en) | 1990-08-07 | 1994-06-07 | Bull Hn Information Systems Italia S.P.A. | Method for debugging and testing the correctness of programs |
US5347653A (en) | 1991-06-28 | 1994-09-13 | Digital Equipment Corporation | System for reconstructing prior versions of indexes using records indicating changes between successive versions of the indexes |
US5357629A (en) | 1991-09-16 | 1994-10-18 | Pitney Bowes Inc. | System for recording structured read only data table revisions and forming a directory to the latest revisions of table elements |
US5359730A (en) | 1992-12-04 | 1994-10-25 | International Business Machines Corporation | Method of operating a data processing system having a dynamic software update facility |
US5392390A (en) | 1992-04-10 | 1995-02-21 | Intellilink Corp. | Method for mapping, translating, and dynamically reconciling data between disparate computer platforms |
US5410703A (en) | 1992-07-01 | 1995-04-25 | Telefonaktiebolaget L M Ericsson | System for changing software during computer operation |
EP0665496A1 (en) | 1994-01-28 | 1995-08-02 | Sun Microsystems, Inc. | Method and apparatus for run-time error checking using dynamic patching |
US5450589A (en) | 1990-08-23 | 1995-09-12 | Fujitsu Limited | Firmware modification system wherein older version can be retrieved |
US5465258A (en) | 1989-11-13 | 1995-11-07 | Integrity Systems, Inc. | Binary image performance evaluation tool |
US5473772A (en) | 1991-04-02 | 1995-12-05 | International Business Machines Corporation | Automatic update of static and dynamic files at a remote network node in response to calls issued by or for application programs |
US5479654A (en) | 1990-04-26 | 1995-12-26 | Squibb Data Systems, Inc. | Apparatus and method for reconstructing a file from a difference signature and an original file |
US5481713A (en) | 1993-05-06 | 1996-01-02 | Apple Computer, Inc. | Method and apparatus for patching code residing on a read only memory device |
EP0695040A2 (en) | 1994-07-20 | 1996-01-31 | Fujitsu Limited | Data compressing method and data decompressing method, and data compressing apparatus and data decompressing apparatus therefor |
US5491821A (en) | 1993-02-24 | 1996-02-13 | International Business Machines Corporation | Method and system for incremental processing of computer objects |
US5493674A (en) | 1992-10-23 | 1996-02-20 | Sony Corporation | Electronic apparatus |
EP0702299A1 (en) | 1994-09-16 | 1996-03-20 | AT&T Corp. | Detection of modifications in computer programs |
US5502439A (en) | 1994-05-16 | 1996-03-26 | The United States Of America As Represented By The United States Department Of Energy | Method for compression of binary data |
EP0723226A1 (en) | 1995-01-18 | 1996-07-24 | Hewlett-Packard Company | Powerfail durable flash EEPROM upgrade |
US5546586A (en) | 1993-05-06 | 1996-08-13 | Apple Computer, Inc. | Method and apparatus for vectorizing the contents of a read only memory device without modifying underlying source code |
WO1996032679A1 (en) | 1995-04-12 | 1996-10-17 | Highwaymaster Communications, Inc. | Remote patching of operating code in a mobile unit |
US5574573A (en) | 1993-10-29 | 1996-11-12 | Eastman Kodak Company | Compression method for a standardized image library |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US5574906A (en) | 1994-10-24 | 1996-11-12 | International Business Machines Corporation | System and method for reducing storage requirement in backup subsystems utilizing segmented compression and differencing |
US5581768A (en) | 1995-02-27 | 1996-12-03 | Intel Corporation | Method and apparatus for executing applications in place from write once/seldom memories |
US5588143A (en) | 1994-09-08 | 1996-12-24 | Compaq Computer Corporation | Automatic computer upgrading |
EP0752794A2 (en) | 1995-07-05 | 1997-01-08 | Fujitsu Limited | Cross-connect device for optical networks |
US5600834A (en) | 1993-05-14 | 1997-02-04 | Mitsubishi Electric Information Technology Center America, Inc. | Method and apparatus for reconciling different versions of a file |
US5619698A (en) | 1995-05-05 | 1997-04-08 | Apple Computer, Inc. | Method and apparatus for patching operating systems |
WO1997012508A2 (en) | 1995-10-04 | 1997-04-10 | Platinum Technology, Inc. | Transforming and manipulating program object code |
US5630072A (en) | 1994-08-30 | 1997-05-13 | Dobbins; Larry D. | Relia process: integrated relational object unit identification and location addressing processes |
US5634052A (en) | 1994-10-24 | 1997-05-27 | International Business Machines Corporation | System for reducing storage requirements and transmission loads in a backup subsystem in client-server environment by transmitting only delta files from client to server |
US5636366A (en) | 1991-03-07 | 1997-06-03 | Digital Equipment Corporation | System and method for preserving instruction state-atomicity for translated program |
US5659755A (en) | 1995-11-20 | 1997-08-19 | International Business Machines Corporation | Method and system in a data processing system for efficiently compressing data using a sorting network |
US5675802A (en) | 1995-03-31 | 1997-10-07 | Pure Atria Corporation | Version control system for geographically distributed software development |
US5675803A (en) | 1994-01-28 | 1997-10-07 | Sun Microsystems, Inc. | Method and apparatus for a fast debugger fix and continue operation |
WO1997043711A1 (en) | 1996-05-10 | 1997-11-20 | Asymetrix Corporation | Incremental byte code compilation system |
US5694566A (en) | 1993-02-12 | 1997-12-02 | Fujitsu Limited | Memory patching device |
EP0813167A2 (en) | 1996-05-16 | 1997-12-17 | Bayer Corporation | Method and apparatus for font compression and decompression |
JPH103383A (en) | 1996-06-14 | 1998-01-06 | Nec Corp | Patch generating system |
US5732275A (en) | 1996-01-11 | 1998-03-24 | Apple Computer, Inc. | Method and apparatus for managing and automatically updating software programs |
US5745058A (en) | 1996-10-21 | 1998-04-28 | International Business Machines Corporation | Method and system for compressing microcode to be executed within a data processing system |
US5745906A (en) | 1995-11-14 | 1998-04-28 | Deltatech Research, Inc. | Method and apparatus for merging delta streams to reconstruct a computer file |
US5752039A (en) | 1993-03-22 | 1998-05-12 | Ntt Data Communications Systems Corp. | Executable file difference extraction/update system and executable file difference extraction method |
US5757690A (en) | 1997-04-23 | 1998-05-26 | Exponential Technology, Inc. | Embedded ROM with RAM valid bits for fetching ROM-code updates from external memory |
US5761649A (en) | 1992-04-10 | 1998-06-02 | Charles E. Hill & Associates, Inc. | Method for updating a remote computer |
US5764994A (en) | 1996-09-16 | 1998-06-09 | International Business Machines Corporation | Method and system for compressing compiled microcode to be executed within a data processing system |
US5764987A (en) | 1993-03-23 | 1998-06-09 | Apple Computer, Inc. | Relocatable file format and method and apparatus for creating and loading same |
US5790856A (en) | 1995-05-08 | 1998-08-04 | Apple Computer, Inc. | Methods, apparatus, and data structures for data driven computer patches and static analysis of same |
US5790760A (en) | 1995-02-28 | 1998-08-04 | Fujitsu Limited | Program generating apparatus and method thereof |
US5790796A (en) | 1996-06-14 | 1998-08-04 | Symantec Corporation | Polymorphic package files to update software components |
US5794254A (en) | 1996-12-03 | 1998-08-11 | Fairbanks Systems Group | Incremental computer file backup using a two-step comparison of first two characters in the block and a signature with pre-stored character and signature sets |
US5799144A (en) | 1996-05-31 | 1998-08-25 | Mitsubishi Denki Kabushiki Kaisha | Microcomputer for resolving problems found in a program stored in a ROM |
US5802549A (en) | 1995-12-14 | 1998-09-01 | International Business Machines Corporation | Method and apparatus for patching pages of ROM |
US5805899A (en) | 1995-07-06 | 1998-09-08 | Sun Microsystems, Inc. | Method and apparatus for internal versioning of objects using a mapfile |
US5815714A (en) | 1994-12-29 | 1998-09-29 | Hitachi America, Ltd. | Embedded debug commands in a source file |
US5815704A (en) | 1995-02-22 | 1998-09-29 | Kabushiki Kaisha Toshiba | Document filing apparatus and method having document registration, comparison and retrieval capabilities |
US5829001A (en) | 1997-01-21 | 1998-10-27 | Netiq Corporation | Database updates over a network |
US5832520A (en) | 1996-07-03 | 1998-11-03 | Miller, Call, Plauck And Miller | Automatic file differencing and updating system |
US5838264A (en) | 1994-12-29 | 1998-11-17 | Unisys Corporation | Method and apparatus for performing LZW data compression utilizing an associative memory |
US5837986A (en) | 1990-01-05 | 1998-11-17 | Symbol Technologies, Inc. | Modification of software files in a microprocessor-controlled device via two-dimensional bar code symbols |
US5844508A (en) | 1995-12-01 | 1998-12-01 | Fujitsu Limited | Data coding method, data decoding method, data compression apparatus, and data decompression apparatus |
WO1999004336A1 (en) | 1997-07-15 | 1999-01-28 | Pocket Soft, Inc. | System for finding differences between two computer files and updating the computer files |
US5873097A (en) | 1993-05-12 | 1999-02-16 | Apple Computer, Inc. | Update mechanism for computer storage container manager |
US5884094A (en) | 1993-11-12 | 1999-03-16 | International Business Machines Corporation | Computer system for detecting and accessing BIOS ROM on the local or peripheral bus |
US5886991A (en) | 1995-12-13 | 1999-03-23 | Lucent Technologies Inc. | System and method for quickly distributing program updates in a distributed architecture processing system |
US5889995A (en) | 1996-05-20 | 1999-03-30 | Sun Microsystems, Inc. | Using constant selectors for method identification |
US5893113A (en) | 1996-04-25 | 1999-04-06 | Navigation Technologies Corporation | Update transactions and method and programming for use thereof for incrementally updating a geographic database |
GB2330428A (en) | 1997-09-23 | 1999-04-21 | Winbond Electronics Corp | ROM program patching in an embedded microprocessor |
US5897633A (en) | 1997-02-26 | 1999-04-27 | Century Technology Services, Inc. | System for converting programs and databases to correct year 2000 processing errors |
US5901225A (en) | 1996-12-05 | 1999-05-04 | Advanced Micro Devices, Inc. | System and method for performing software patches in embedded systems |
JPH11126161A (en) | 1997-10-23 | 1999-05-11 | Hitachi Ltd | Fault avoiding method for control memory |
US5909581A (en) | 1995-12-30 | 1999-06-01 | Samsung Electronics Co., Ltd. | Automatic software updating method |
US5938766A (en) | 1997-03-21 | 1999-08-17 | Apple Computer, Inc. | System for extending functionality of a digital ROM using RAM/ROM jump tables and patch manager for updating the tables |
US5953534A (en) | 1997-12-23 | 1999-09-14 | University Of Washington | Environment manipulation for executing modified executable and dynamically-loaded library files |
US5956479A (en) | 1995-11-13 | 1999-09-21 | Object Technology Licensing Corporation | Demand based generation of symbolic information |
US5958048A (en) | 1996-08-07 | 1999-09-28 | Elbrus International Ltd. | Architectural support for software pipelining of nested loops |
US5964873A (en) | 1997-03-10 | 1999-10-12 | Samsung Electronics Co., Ltd. | Method for updating a ROM BIOS |
US5966541A (en) | 1997-12-04 | 1999-10-12 | Incert Software Corporation | Test protection, and repair through binary-code augmentation |
US5974254A (en) | 1997-06-06 | 1999-10-26 | National Instruments Corporation | Method for detecting differences between graphical programs |
WO1999054816A1 (en) | 1998-04-17 | 1999-10-28 | Symantec Corporation | Patching rebased and realigned executable files |
US5978791A (en) | 1995-04-11 | 1999-11-02 | Kinetech, Inc. | Data processing system using substantially unique identifiers to identify data items, whereby identical data items have the same identifiers |
US5983000A (en) | 1997-06-05 | 1999-11-09 | Alcatel | Apparatus for patching a control program in a processor |
US5982937A (en) | 1996-12-24 | 1999-11-09 | Electronics For Imaging, Inc. | Apparatus and method for hybrid compression of raster data |
US5990810A (en) | 1995-02-17 | 1999-11-23 | Williams; Ross Neil | Method for partitioning a block of data into subblocks and for storing and communcating such subblocks |
US5995754A (en) | 1997-10-06 | 1999-11-30 | Sun Microsystems, Inc. | Method and apparatus for dynamically optimizing byte-coded programs |
US6006328A (en) | 1995-07-14 | 1999-12-21 | Christopher N. Drake | Computer software authentication, protection, and security system |
US6009261A (en) | 1997-12-16 | 1999-12-28 | International Business Machines Corporation | Preprocessing of stored target routines for emulating incompatible instructions on a target processor |
US6018747A (en) | 1997-11-26 | 2000-01-25 | International Business Machines Corporation | Method for generating and reconstructing in-place delta files |
US6018349A (en) | 1997-08-01 | 2000-01-25 | Microsoft Corporation | Patch-based alignment method and apparatus for construction of image mosaics |
US6026235A (en) | 1997-05-20 | 2000-02-15 | Inprise Corporation | System and methods for monitoring functions in natively compiled software programs |
US6052531A (en) | 1998-03-25 | 2000-04-18 | Symantec Corporation | Multi-tiered incremental software updating |
US6071004A (en) | 1993-08-09 | 2000-06-06 | C-Cube Microsystems, Inc. | Non-linear digital filters for interlaced video signals and method thereof |
US6071317A (en) | 1997-12-11 | 2000-06-06 | Digits Corp. | Object code logic analysis and automated modification system and method |
WO2000034861A1 (en) | 1998-12-11 | 2000-06-15 | Incert Software Corporation | A method for determining program control flow |
US6077311A (en) | 1997-07-09 | 2000-06-20 | Silicon Graphics, Inc. | Method and apparatus for extraction of program region |
US6078931A (en) | 1998-01-14 | 2000-06-20 | Ricoh Company, Ltd. | Method and system for resetting references to deleted software structures |
EP1014263A2 (en) | 1998-12-14 | 2000-06-28 | Applied Microsystems Corporation | Method and system for modifying executable code to add additional functionality |
US6112025A (en) | 1996-03-25 | 2000-08-29 | Sun Microsystems, Inc. | System and method for dynamic program linking |
US6115550A (en) | 1997-06-11 | 2000-09-05 | Digital Equipment Corporation | Loader conditionally replacing a code sequence with a functionally-alike code sequence in an executable program intended for execution in different run-time environments |
US6122731A (en) | 1996-09-02 | 2000-09-19 | Samsung Electronics Co., Ltd. | Method and apparatus for correcting program of hard disk drive |
US6141698A (en) | 1997-01-29 | 2000-10-31 | Network Commerce Inc. | Method and system for injecting new code into existing application code |
US6163780A (en) | 1997-10-01 | 2000-12-19 | Hewlett-Packard Company | System and apparatus for condensing executable computer software code |
US6163811A (en) | 1998-10-21 | 2000-12-19 | Wildseed, Limited | Token based source file compression/decompression and its application |
US6167407A (en) | 1998-06-03 | 2000-12-26 | Symantec Corporation | Backtracked incremental updating |
US6175663B1 (en) | 1998-02-24 | 2001-01-16 | Paravision Imaging, Inc. | Method and apparatus for preserving background continuity in images |
US6189145B1 (en) | 1997-05-28 | 2001-02-13 | International Business Machines Corporation | Concurrent patch to logical partition manager of a logically partitioned system |
US6192475B1 (en) | 1997-03-31 | 2001-02-20 | David R. Wallace | System and method for cloaking software |
US6192157B1 (en) | 1998-10-27 | 2001-02-20 | Hewlett-Packard Company | Modifications of postscript adaptive data compression (ADC) for 3 plane, 8 bit color images, JPEG lossy compression, and variable Q factors |
US6202208B1 (en) | 1998-09-29 | 2001-03-13 | Nortel Networks Limited | Patching environment for modifying a Java virtual machine and method |
EP1087533A1 (en) | 1998-04-17 | 2001-03-28 | OHMI, Tadahiro | Method and apparatus for making code book, vector quantizing device, device and method for data compression, device and method for data decompression, system for data compression/decompression |
US6216213B1 (en) | 1996-06-07 | 2001-04-10 | Motorola, Inc. | Method and apparatus for compression, decompression, and execution of program code |
US6216140B1 (en) * | 1997-09-17 | 2001-04-10 | Hewlett-Packard Company | Methodology for the efficient management of hierarchically organized information |
US6216175B1 (en) * | 1998-06-08 | 2001-04-10 | Microsoft Corporation | Method for upgrading copies of an original file with same update data after normalizing differences between copies created during respective original installations |
US6240550B1 (en) | 1998-07-21 | 2001-05-29 | Touchtunes Music Corporation | System for remote loading of objects or files in order to update software |
US6253317B1 (en) | 1997-01-09 | 2001-06-26 | Sun Microsystems, Inc. | Method and apparatus for providing and handling traps |
US6260157B1 (en) | 1999-02-16 | 2001-07-10 | Kurt Schurecht | Patching of a read only memory |
US6263497B1 (en) | 1997-07-31 | 2001-07-17 | Matsushita Electric Industrial Co., Ltd. | Remote maintenance method and remote maintenance apparatus |
US6282709B1 (en) | 1997-11-12 | 2001-08-28 | Philips Electronics North America Corporation | Software update manager |
US6282698B1 (en) | 1998-02-09 | 2001-08-28 | Lucent Technologies Inc. | Detecting similarities in Java sources from bytecodes |
US6289358B1 (en) | 1998-04-15 | 2001-09-11 | Inktomi Corporation | Delivering alternate versions of objects from an object cache |
US6289509B1 (en) | 1998-09-01 | 2001-09-11 | Pkware, Inc. | Software patch generator |
US6292880B1 (en) | 1998-04-15 | 2001-09-18 | Inktomi Corporation | Alias-free content-indexed object cache |
US6295644B1 (en) | 1999-08-17 | 2001-09-25 | Hewlett-Packard Company | Method and apparatus for patching program text to improve performance of applications |
US6298481B1 (en) | 1998-10-30 | 2001-10-02 | Segasoft, Inc. | System for modifying the functionality of compiled computer code at run-time |
US6317754B1 (en) | 1998-07-03 | 2001-11-13 | Mitsubishi Electric Research Laboratories, Inc | System for user control of version /Synchronization in mobile computing |
US6330712B1 (en) | 1997-11-12 | 2001-12-11 | Nec Corporation | Compressed data patch system |
US6330574B1 (en) | 1997-08-05 | 2001-12-11 | Fujitsu Limited | Compression/decompression of tags in markup documents by creating a tag code/decode table based on the encoding of tags in a DTD included in the documents |
US6334213B1 (en) | 1998-01-20 | 2001-12-25 | Preview Systems | Merging of separate executable computer programs to form a single executable computer program |
US6349407B1 (en) | 1995-12-29 | 2002-02-19 | Sun Microsystems, Incorporated | Method and apparatus for re-introducing version control |
US6367075B1 (en) | 1996-07-24 | 2002-04-02 | Marimba, Inc. | Method and apparatus for producing instructions describing the removal of updates to a computer system |
US6374250B2 (en) | 1997-02-03 | 2002-04-16 | International Business Machines Corporation | System and method for differential compression of data from a plurality of binary sources |
US6389592B1 (en) | 1998-09-12 | 2002-05-14 | International Business Machines Corporation | Method for deployment of incremental versions of applications |
US6397385B1 (en) | 1999-07-16 | 2002-05-28 | Excel Switching Corporation | Method and apparatus for in service software upgrade for expandable telecommunications system |
US6404923B1 (en) | 1996-03-29 | 2002-06-11 | Microsoft Corporation | Table-based low-level image classification and compression system |
US20020087500A1 (en) | 1998-08-18 | 2002-07-04 | Brian T. Berkowitz | In-memory database system |
US6421679B1 (en) | 1995-10-27 | 2002-07-16 | International Business Machines Corporation | Concurrent patch to logical partition manager of a logically partitioned system |
US6425125B1 (en) | 1999-03-30 | 2002-07-23 | Microsoft Corporation | System and method for upgrading client software |
US20020100036A1 (en) | 2000-09-22 | 2002-07-25 | Patchlink.Com Corporation | Non-invasive automatic offsite patch fingerprinting and updating system and method |
US6430685B1 (en) | 1993-02-19 | 2002-08-06 | Apple Computer, Inc. | Method and apparatus for enabling a computer system |
US6434695B1 (en) | 1998-12-23 | 2002-08-13 | Apple Computer, Inc. | Computer operating system using compressed ROM image in RAM |
US6438621B1 (en) | 1994-11-14 | 2002-08-20 | Microsoft Corporation | In-memory modification of computer programs |
US6438748B1 (en) | 1998-03-12 | 2002-08-20 | Telefonaktiebolaget L M Ericsson (Publ) | Apparatus and method for conversion of messages |
US6463582B1 (en) | 1998-10-21 | 2002-10-08 | Fujitsu Limited | Dynamic optimizing object code translator for architecture emulation and dynamic optimizing object code translation method |
US6466999B1 (en) | 1999-03-31 | 2002-10-15 | Microsoft Corporation | Preprocessing a reference data stream for patch generation and compression |
US6510552B1 (en) | 1999-01-29 | 2003-01-21 | International Business Machines Corporation | Apparatus for keeping several versions of a file |
US20030028867A1 (en) * | 1998-09-01 | 2003-02-06 | Kryloff Sergey A. | Software patch generator |
US6532588B1 (en) | 1998-10-21 | 2003-03-11 | Xoucin, Inc. | User centric program product distribution |
US6546552B1 (en) | 1998-08-19 | 2003-04-08 | Red Bend Ltd. | Difference extraction between two versions of data-tables containing intra-references |
US6594822B1 (en) * | 1999-02-19 | 2003-07-15 | Nortel Networks Limited | Method and apparatus for creating a software patch by comparing object files |
US6610103B2 (en) | 1998-01-30 | 2003-08-26 | International Business Machines Corporation | Method for providing precise cumulative updates and fixes to a software product |
US20030163805A1 (en) | 2002-02-27 | 2003-08-28 | Fuji Xerox Co., Ltd. | Image processing apparatus, download method, and download program product for downloading software |
US20030163508A1 (en) | 2002-02-26 | 2003-08-28 | International Business Machines Corporation | Background code update for embedded systems |
US6618747B1 (en) | 1998-11-25 | 2003-09-09 | Francis H. Flynn | Electronic communication delivery confirmation and verification system |
US6629123B1 (en) | 1998-10-02 | 2003-09-30 | Microsoft Corporation | Interception of unit creation requests by an automatic distributed partitioning system |
US6643506B1 (en) | 1996-08-07 | 2003-11-04 | Telxon Corporation | Wireless software upgrades with version control |
US6643775B1 (en) | 1997-12-05 | 2003-11-04 | Jamama, Llc | Use of code obfuscation to inhibit generation of non-use-restricted versions of copy protected software applications |
US20030217257A1 (en) | 2002-05-17 | 2003-11-20 | Ebsen David S. | Method for updating memory resident firmware as a background operation |
US6691305B1 (en) | 1999-11-10 | 2004-02-10 | Nec Corporation | Object code compression using different schemes for different instruction types |
US20040063899A1 (en) | 2000-11-30 | 2004-04-01 | Mitsuaki Kobayashi | Polyimide-containing coating composition and film formed from the same |
US20040078793A1 (en) | 2001-01-19 | 2004-04-22 | Jurgen Bragulla | Time optimized replacement of a software application |
US20040088694A1 (en) * | 2002-10-31 | 2004-05-06 | Ho Stanley M. | Systems and methods for updating software |
US6738799B2 (en) | 1999-05-03 | 2004-05-18 | Symantec Corporation | Methods and apparatuses for file synchronization and updating using a signature list |
US20040107416A1 (en) * | 2002-12-02 | 2004-06-03 | Microsoft Corporation | Patching of in-use functions on a running computer system |
US6754848B1 (en) | 1999-09-30 | 2004-06-22 | International Business Machines Corporation | Method, system and program products for operationally migrating a cluster through emulation |
US6757893B1 (en) | 1999-12-17 | 2004-06-29 | Canon Kabushiki Kaisha | Version control system for software code |
US6760907B2 (en) | 1998-06-30 | 2004-07-06 | Sun Microsystems, Inc. | Code generation for a bytecode compiler |
WO2004063899A2 (en) | 2003-01-13 | 2004-07-29 | Bitfone Corporation | Mobile handset capable of updating its update agent |
US6804663B1 (en) * | 1998-09-21 | 2004-10-12 | Microsoft Corporation | Methods for optimizing the installation of a software product onto a target computer system |
WO2005024628A2 (en) | 2003-09-03 | 2005-03-17 | Bitfone Corporation | Tri-phase boot process in electronic devices |
US20050132349A1 (en) * | 2003-12-15 | 2005-06-16 | Jason Roberts | System and method for a software distribution service |
US20050132359A1 (en) | 2003-12-15 | 2005-06-16 | Mcguire Thomas D. | System and method for updating installation components in a networked environment |
US20050257206A1 (en) | 2004-05-14 | 2005-11-17 | Semerdzhiev Krasimir P | Pair-update mechanism for update module |
US20060004756A1 (en) | 2004-06-01 | 2006-01-05 | Red Bend Ltd. | Method and system for in-place updating content stored in a storage device |
US7131112B1 (en) * | 2000-11-21 | 2006-10-31 | Microsoft Corporation | Managing code changes for software development |
US7203708B2 (en) | 2003-11-06 | 2007-04-10 | Microsoft Corporation | Optimizing file replication using binary comparisons |
US20070169082A1 (en) * | 2005-12-09 | 2007-07-19 | Lam Joi K | Method and apparatus for optimizing patching of objects containing references |
US20070255764A1 (en) | 2006-04-27 | 2007-11-01 | Sonnier David P | Methods and apparatus for performing in-service upgrade of software in network processor |
US7542758B2 (en) | 2001-07-26 | 2009-06-02 | Kyocera Wireless Corp. | Field downloading of wireless device software |
US7665081B1 (en) * | 2006-05-06 | 2010-02-16 | Kaspersky Lab, Zao | System and method for difference-based software updating |
-
2009
- 2009-03-27 US US12/383,616 patent/US8438558B1/en not_active Expired - Fee Related
Patent Citations (233)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US3969723A (en) | 1974-07-03 | 1976-07-13 | General Electric Company | On-line modification of computer programs |
US4115853A (en) | 1976-12-21 | 1978-09-19 | Allen-Bradley Company | Jump structure for a digital control system |
US4278837A (en) | 1977-10-31 | 1981-07-14 | Best Robert M | Crypto microprocessor for executing enciphered programs |
US4465901A (en) | 1979-06-04 | 1984-08-14 | Best Robert M | Crypto microprocessor that executes enciphered programs |
US4319079A (en) | 1979-09-13 | 1982-03-09 | Best Robert M | Crypto microprocessor using block cipher |
US4464650A (en) | 1981-08-10 | 1984-08-07 | Sperry Corporation | Apparatus and method for compressing data signals and restoring the compressed data signals |
US4425618A (en) | 1981-11-23 | 1984-01-10 | Bell Telephone Laboratories, Incorporated | Method and apparatus for introducing program changes in program-controlled systems |
US4542453A (en) | 1982-02-19 | 1985-09-17 | Texas Instruments Incorporated | Program patching in microcomputer |
JPS59201150A (en) | 1983-04-28 | 1984-11-14 | Omron Tateisi Electronics Co | Debug device |
US4683549A (en) | 1983-05-07 | 1987-07-28 | Hitachi, Ltd. | Sequence control method and apparatus |
US4807182A (en) | 1986-03-12 | 1989-02-21 | Advanced Software, Inc. | Apparatus and method for comparing data groups |
US5043871A (en) | 1986-03-26 | 1991-08-27 | Hitachi, Ltd. | Method and apparatus for database update/recovery |
US4831517A (en) | 1986-10-10 | 1989-05-16 | International Business Machines Corporation | Branch and return on address instruction and methods and apparatus for implementing same in a digital data processing system |
JPS63208941A (en) | 1987-02-25 | 1988-08-30 | Fujitsu Ltd | Managing system for updating history of program path |
US4987550A (en) | 1987-09-22 | 1991-01-22 | International Business Machines Corporation | Selective processing of a data stream based on font format |
US4972504A (en) | 1988-02-11 | 1990-11-20 | A. C. Nielsen Company | Marketing research system and method for obtaining retail data on a real time basis |
US5155847A (en) | 1988-08-03 | 1992-10-13 | Minicom Data Corporation | Method and apparatus for updating software at remote locations |
US5146221A (en) | 1989-01-13 | 1992-09-08 | Stac, Inc. | Data compression apparatus and method |
US5210854A (en) | 1989-06-14 | 1993-05-11 | Digital Equipment Corporation | System for updating program stored in eeprom by storing new version into new location and updating second transfer vector to contain starting address of new version |
US5170465A (en) | 1989-06-30 | 1992-12-08 | Digital Equipment Corporation | Incremental-scanning compiler for source-code development system |
US5247660A (en) | 1989-07-13 | 1993-09-21 | Filetek, Inc. | Method of virtual memory storage allocation with dynamic adjustment |
EP0411232A2 (en) | 1989-08-04 | 1991-02-06 | International Business Machines Corporation | Method for high-quality compression by binary text images |
US5465258A (en) | 1989-11-13 | 1995-11-07 | Integrity Systems, Inc. | Binary image performance evaluation tool |
US5837986A (en) | 1990-01-05 | 1998-11-17 | Symbol Technologies, Inc. | Modification of software files in a microprocessor-controlled device via two-dimensional bar code symbols |
US5204960A (en) | 1990-01-08 | 1993-04-20 | Microsoft Corporation | Incremental compiler |
US5479654A (en) | 1990-04-26 | 1995-12-26 | Squibb Data Systems, Inc. | Apparatus and method for reconstructing a file from a difference signature and an original file |
US5319645A (en) | 1990-08-07 | 1994-06-07 | Bull Hn Information Systems Italia S.P.A. | Method for debugging and testing the correctness of programs |
US5051745A (en) | 1990-08-21 | 1991-09-24 | Pkware, Inc. | String searcher, and compressor using same |
US5450589A (en) | 1990-08-23 | 1995-09-12 | Fujitsu Limited | Firmware modification system wherein older version can be retrieved |
EP0472812A1 (en) | 1990-08-28 | 1992-03-04 | Landis & Gyr Technology Innovation AG | Method to charge an object code version to a first program stored in the computer of an appliance into an object code version of a second program which was derived by at least one change to the first program |
JPH04242829A (en) | 1991-01-08 | 1992-08-31 | Fujitsu Ltd | Program update processing device |
US5636366A (en) | 1991-03-07 | 1997-06-03 | Digital Equipment Corporation | System and method for preserving instruction state-atomicity for translated program |
US5307492A (en) | 1991-03-07 | 1994-04-26 | Digital Equipment Corporation | Mapping assembly language argument list references in translating code for different machine architectures |
US5473772A (en) | 1991-04-02 | 1995-12-05 | International Business Machines Corporation | Automatic update of static and dynamic files at a remote network node in response to calls issued by or for application programs |
EP0591360A1 (en) | 1991-06-21 | 1994-04-13 | Pure Software, Inc. | Method and apparatus for modifying relocatable object code files and monitoring programs |
WO1993000633A1 (en) | 1991-06-21 | 1993-01-07 | Pure Software, Inc. | Method and apparatus for modifying relocatable object code files and monitoring programs |
DE69232761T2 (en) | 1991-06-21 | 2003-04-24 | Rational Software Corp Cuperti | METHOD AND DEVICE FOR CHANGING DYNAMIC ASSIGNABLE OBJECT CODE FILES |
CA2111958A1 (en) | 1991-06-21 | 1993-01-07 | Reed Hastings | Method and apparatus for modifying relocatable object code files and monitoring programs |
US5535329A (en) | 1991-06-21 | 1996-07-09 | Pure Software, Inc. | Method and apparatus for modifying relocatable object code files and monitoring programs |
US5193180A (en) | 1991-06-21 | 1993-03-09 | Pure Software Inc. | System for modifying relocatable object code files to monitor accesses to dynamically allocated memory |
US5335344A (en) | 1991-06-21 | 1994-08-02 | Pure Software Inc. | Method for inserting new machine instructions into preexisting machine code to monitor preexisting machine access to memory |
US5835701A (en) | 1991-06-21 | 1998-11-10 | Rational Software Corporation | Method and apparatus for modifying relocatable object code files and monitoring programs |
US5347653A (en) | 1991-06-28 | 1994-09-13 | Digital Equipment Corporation | System for reconstructing prior versions of indexes using records indicating changes between successive versions of the indexes |
US5357629A (en) | 1991-09-16 | 1994-10-18 | Pitney Bowes Inc. | System for recording structured read only data table revisions and forming a directory to the latest revisions of table elements |
JPH0591550A (en) | 1991-09-30 | 1993-04-09 | Oki Electric Ind Co Ltd | Method of loading program |
US5260693A (en) | 1991-10-11 | 1993-11-09 | Spacelabs Medical, Inc. | Method and system for lossless and adaptive data compression and decompression |
EP0546684A2 (en) | 1991-12-12 | 1993-06-16 | International Business Machines Corporation | Method stubs for redispatch |
US5392390A (en) | 1992-04-10 | 1995-02-21 | Intellilink Corp. | Method for mapping, translating, and dynamically reconciling data between disparate computer platforms |
US5761649A (en) | 1992-04-10 | 1998-06-02 | Charles E. Hill & Associates, Inc. | Method for updating a remote computer |
US5410703A (en) | 1992-07-01 | 1995-04-25 | Telefonaktiebolaget L M Ericsson | System for changing software during computer operation |
US5493674A (en) | 1992-10-23 | 1996-02-20 | Sony Corporation | Electronic apparatus |
US5359730A (en) | 1992-12-04 | 1994-10-25 | International Business Machines Corporation | Method of operating a data processing system having a dynamic software update facility |
US5574898A (en) | 1993-01-08 | 1996-11-12 | Atria Software, Inc. | Dynamic software version auditor which monitors a process to provide a list of objects that are accessed |
US6076134A (en) | 1993-02-12 | 2000-06-13 | Fujitsu Limited | Memory patching device |
US5694566A (en) | 1993-02-12 | 1997-12-02 | Fujitsu Limited | Memory patching device |
US6430685B1 (en) | 1993-02-19 | 2002-08-06 | Apple Computer, Inc. | Method and apparatus for enabling a computer system |
US5491821A (en) | 1993-02-24 | 1996-02-13 | International Business Machines Corporation | Method and system for incremental processing of computer objects |
US5752039A (en) | 1993-03-22 | 1998-05-12 | Ntt Data Communications Systems Corp. | Executable file difference extraction/update system and executable file difference extraction method |
US5764987A (en) | 1993-03-23 | 1998-06-09 | Apple Computer, Inc. | Relocatable file format and method and apparatus for creating and loading same |
US5481713A (en) | 1993-05-06 | 1996-01-02 | Apple Computer, Inc. | Method and apparatus for patching code residing on a read only memory device |
US5546586A (en) | 1993-05-06 | 1996-08-13 | Apple Computer, Inc. | Method and apparatus for vectorizing the contents of a read only memory device without modifying underlying source code |
US5790860A (en) | 1993-05-06 | 1998-08-04 | Apple Computer, Inc. | Method and apparatus for patching code residing on a read only memory device |
US5873097A (en) | 1993-05-12 | 1999-02-16 | Apple Computer, Inc. | Update mechanism for computer storage container manager |
US5600834A (en) | 1993-05-14 | 1997-02-04 | Mitsubishi Electric Information Technology Center America, Inc. | Method and apparatus for reconciling different versions of a file |
US6071004A (en) | 1993-08-09 | 2000-06-06 | C-Cube Microsystems, Inc. | Non-linear digital filters for interlaced video signals and method thereof |
US5574573A (en) | 1993-10-29 | 1996-11-12 | Eastman Kodak Company | Compression method for a standardized image library |
US5884094A (en) | 1993-11-12 | 1999-03-16 | International Business Machines Corporation | Computer system for detecting and accessing BIOS ROM on the local or peripheral bus |
US5675803A (en) | 1994-01-28 | 1997-10-07 | Sun Microsystems, Inc. | Method and apparatus for a fast debugger fix and continue operation |
US5581697A (en) | 1994-01-28 | 1996-12-03 | Sun Microsystems, Inc. | Method and apparatus for run-time error checking using dynamic patching |
EP0665496A1 (en) | 1994-01-28 | 1995-08-02 | Sun Microsystems, Inc. | Method and apparatus for run-time error checking using dynamic patching |
US5502439A (en) | 1994-05-16 | 1996-03-26 | The United States Of America As Represented By The United States Department Of Energy | Method for compression of binary data |
EP0695040A2 (en) | 1994-07-20 | 1996-01-31 | Fujitsu Limited | Data compressing method and data decompressing method, and data compressing apparatus and data decompressing apparatus therefor |
US5630072A (en) | 1994-08-30 | 1997-05-13 | Dobbins; Larry D. | Relia process: integrated relational object unit identification and location addressing processes |
US5960189A (en) | 1994-09-08 | 1999-09-28 | Compaq Computer Corporation | Automatic computer upgrading |
US5588143A (en) | 1994-09-08 | 1996-12-24 | Compaq Computer Corporation | Automatic computer upgrading |
EP0702299A1 (en) | 1994-09-16 | 1996-03-20 | AT&T Corp. | Detection of modifications in computer programs |
US5634052A (en) | 1994-10-24 | 1997-05-27 | International Business Machines Corporation | System for reducing storage requirements and transmission loads in a backup subsystem in client-server environment by transmitting only delta files from client to server |
US5813017A (en) | 1994-10-24 | 1998-09-22 | International Business Machines Corporation | System and method for reducing storage requirement in backup subsystems utilizing segmented compression and differencing |
US5574906A (en) | 1994-10-24 | 1996-11-12 | International Business Machines Corporation | System and method for reducing storage requirement in backup subsystems utilizing segmented compression and differencing |
US6438621B1 (en) | 1994-11-14 | 2002-08-20 | Microsoft Corporation | In-memory modification of computer programs |
US5838264A (en) | 1994-12-29 | 1998-11-17 | Unisys Corporation | Method and apparatus for performing LZW data compression utilizing an associative memory |
US5815714A (en) | 1994-12-29 | 1998-09-29 | Hitachi America, Ltd. | Embedded debug commands in a source file |
EP0723226A1 (en) | 1995-01-18 | 1996-07-24 | Hewlett-Packard Company | Powerfail durable flash EEPROM upgrade |
US5990810A (en) | 1995-02-17 | 1999-11-23 | Williams; Ross Neil | Method for partitioning a block of data into subblocks and for storing and communcating such subblocks |
US5815704A (en) | 1995-02-22 | 1998-09-29 | Kabushiki Kaisha Toshiba | Document filing apparatus and method having document registration, comparison and retrieval capabilities |
US5581768A (en) | 1995-02-27 | 1996-12-03 | Intel Corporation | Method and apparatus for executing applications in place from write once/seldom memories |
US5790760A (en) | 1995-02-28 | 1998-08-04 | Fujitsu Limited | Program generating apparatus and method thereof |
US5675802A (en) | 1995-03-31 | 1997-10-07 | Pure Atria Corporation | Version control system for geographically distributed software development |
US5978791A (en) | 1995-04-11 | 1999-11-02 | Kinetech, Inc. | Data processing system using substantially unique identifiers to identify data items, whereby identical data items have the same identifiers |
WO1996032679A1 (en) | 1995-04-12 | 1996-10-17 | Highwaymaster Communications, Inc. | Remote patching of operating code in a mobile unit |
US5699275A (en) | 1995-04-12 | 1997-12-16 | Highwaymaster Communications, Inc. | System and method for remote patching of operating code located in a mobile unit |
US5619698A (en) | 1995-05-05 | 1997-04-08 | Apple Computer, Inc. | Method and apparatus for patching operating systems |
US5790856A (en) | 1995-05-08 | 1998-08-04 | Apple Computer, Inc. | Methods, apparatus, and data structures for data driven computer patches and static analysis of same |
EP0752794A2 (en) | 1995-07-05 | 1997-01-08 | Fujitsu Limited | Cross-connect device for optical networks |
US5805899A (en) | 1995-07-06 | 1998-09-08 | Sun Microsystems, Inc. | Method and apparatus for internal versioning of objects using a mapfile |
US6006328A (en) | 1995-07-14 | 1999-12-21 | Christopher N. Drake | Computer software authentication, protection, and security system |
WO1997012508A2 (en) | 1995-10-04 | 1997-04-10 | Platinum Technology, Inc. | Transforming and manipulating program object code |
US6021272A (en) | 1995-10-04 | 2000-02-01 | Platinum Technology, Inc. | Transforming and manipulating program object code |
US6421679B1 (en) | 1995-10-27 | 2002-07-16 | International Business Machines Corporation | Concurrent patch to logical partition manager of a logically partitioned system |
US5956479A (en) | 1995-11-13 | 1999-09-21 | Object Technology Licensing Corporation | Demand based generation of symbolic information |
US5745906A (en) | 1995-11-14 | 1998-04-28 | Deltatech Research, Inc. | Method and apparatus for merging delta streams to reconstruct a computer file |
US5659755A (en) | 1995-11-20 | 1997-08-19 | International Business Machines Corporation | Method and system in a data processing system for efficiently compressing data using a sorting network |
US5844508A (en) | 1995-12-01 | 1998-12-01 | Fujitsu Limited | Data coding method, data decoding method, data compression apparatus, and data decompression apparatus |
US5886991A (en) | 1995-12-13 | 1999-03-23 | Lucent Technologies Inc. | System and method for quickly distributing program updates in a distributed architecture processing system |
US5802549A (en) | 1995-12-14 | 1998-09-01 | International Business Machines Corporation | Method and apparatus for patching pages of ROM |
US6349407B1 (en) | 1995-12-29 | 2002-02-19 | Sun Microsystems, Incorporated | Method and apparatus for re-introducing version control |
US5909581A (en) | 1995-12-30 | 1999-06-01 | Samsung Electronics Co., Ltd. | Automatic software updating method |
US5732275A (en) | 1996-01-11 | 1998-03-24 | Apple Computer, Inc. | Method and apparatus for managing and automatically updating software programs |
US5848274A (en) | 1996-02-29 | 1998-12-08 | Supercede, Inc. | Incremental byte code compilation system |
US6112025A (en) | 1996-03-25 | 2000-08-29 | Sun Microsystems, Inc. | System and method for dynamic program linking |
US6404923B1 (en) | 1996-03-29 | 2002-06-11 | Microsoft Corporation | Table-based low-level image classification and compression system |
US5893113A (en) | 1996-04-25 | 1999-04-06 | Navigation Technologies Corporation | Update transactions and method and programming for use thereof for incrementally updating a geographic database |
WO1997043711A1 (en) | 1996-05-10 | 1997-11-20 | Asymetrix Corporation | Incremental byte code compilation system |
EP0813167A2 (en) | 1996-05-16 | 1997-12-17 | Bayer Corporation | Method and apparatus for font compression and decompression |
US5889995A (en) | 1996-05-20 | 1999-03-30 | Sun Microsystems, Inc. | Using constant selectors for method identification |
US5799144A (en) | 1996-05-31 | 1998-08-25 | Mitsubishi Denki Kabushiki Kaisha | Microcomputer for resolving problems found in a program stored in a ROM |
US6216213B1 (en) | 1996-06-07 | 2001-04-10 | Motorola, Inc. | Method and apparatus for compression, decompression, and execution of program code |
JPH103383A (en) | 1996-06-14 | 1998-01-06 | Nec Corp | Patch generating system |
US5790796A (en) | 1996-06-14 | 1998-08-04 | Symantec Corporation | Polymorphic package files to update software components |
US5832520A (en) | 1996-07-03 | 1998-11-03 | Miller, Call, Plauck And Miller | Automatic file differencing and updating system |
US6367075B1 (en) | 1996-07-24 | 2002-04-02 | Marimba, Inc. | Method and apparatus for producing instructions describing the removal of updates to a computer system |
US5958048A (en) | 1996-08-07 | 1999-09-28 | Elbrus International Ltd. | Architectural support for software pipelining of nested loops |
US6643506B1 (en) | 1996-08-07 | 2003-11-04 | Telxon Corporation | Wireless software upgrades with version control |
US6122731A (en) | 1996-09-02 | 2000-09-19 | Samsung Electronics Co., Ltd. | Method and apparatus for correcting program of hard disk drive |
US5764994A (en) | 1996-09-16 | 1998-06-09 | International Business Machines Corporation | Method and system for compressing compiled microcode to be executed within a data processing system |
US5745058A (en) | 1996-10-21 | 1998-04-28 | International Business Machines Corporation | Method and system for compressing microcode to be executed within a data processing system |
US5794254A (en) | 1996-12-03 | 1998-08-11 | Fairbanks Systems Group | Incremental computer file backup using a two-step comparison of first two characters in the block and a signature with pre-stored character and signature sets |
US5901225A (en) | 1996-12-05 | 1999-05-04 | Advanced Micro Devices, Inc. | System and method for performing software patches in embedded systems |
US5982937A (en) | 1996-12-24 | 1999-11-09 | Electronics For Imaging, Inc. | Apparatus and method for hybrid compression of raster data |
US6253317B1 (en) | 1997-01-09 | 2001-06-26 | Sun Microsystems, Inc. | Method and apparatus for providing and handling traps |
US5829001A (en) | 1997-01-21 | 1998-10-27 | Netiq Corporation | Database updates over a network |
US6141698A (en) | 1997-01-29 | 2000-10-31 | Network Commerce Inc. | Method and system for injecting new code into existing application code |
US6374250B2 (en) | 1997-02-03 | 2002-04-16 | International Business Machines Corporation | System and method for differential compression of data from a plurality of binary sources |
US5897633A (en) | 1997-02-26 | 1999-04-27 | Century Technology Services, Inc. | System for converting programs and databases to correct year 2000 processing errors |
US5964873A (en) | 1997-03-10 | 1999-10-12 | Samsung Electronics Co., Ltd. | Method for updating a ROM BIOS |
US5938766A (en) | 1997-03-21 | 1999-08-17 | Apple Computer, Inc. | System for extending functionality of a digital ROM using RAM/ROM jump tables and patch manager for updating the tables |
US6192475B1 (en) | 1997-03-31 | 2001-02-20 | David R. Wallace | System and method for cloaking software |
US5757690A (en) | 1997-04-23 | 1998-05-26 | Exponential Technology, Inc. | Embedded ROM with RAM valid bits for fetching ROM-code updates from external memory |
US6026235A (en) | 1997-05-20 | 2000-02-15 | Inprise Corporation | System and methods for monitoring functions in natively compiled software programs |
US6189145B1 (en) | 1997-05-28 | 2001-02-13 | International Business Machines Corporation | Concurrent patch to logical partition manager of a logically partitioned system |
US5983000A (en) | 1997-06-05 | 1999-11-09 | Alcatel | Apparatus for patching a control program in a processor |
US5974254A (en) | 1997-06-06 | 1999-10-26 | National Instruments Corporation | Method for detecting differences between graphical programs |
US6115550A (en) | 1997-06-11 | 2000-09-05 | Digital Equipment Corporation | Loader conditionally replacing a code sequence with a functionally-alike code sequence in an executable program intended for execution in different run-time environments |
US6077311A (en) | 1997-07-09 | 2000-06-20 | Silicon Graphics, Inc. | Method and apparatus for extraction of program region |
US6526574B1 (en) * | 1997-07-15 | 2003-02-25 | Pocket Soft, Inc. | System for finding differences between two computer files and updating the computer files |
WO1999004336A1 (en) | 1997-07-15 | 1999-01-28 | Pocket Soft, Inc. | System for finding differences between two computer files and updating the computer files |
US6263497B1 (en) | 1997-07-31 | 2001-07-17 | Matsushita Electric Industrial Co., Ltd. | Remote maintenance method and remote maintenance apparatus |
US6018349A (en) | 1997-08-01 | 2000-01-25 | Microsoft Corporation | Patch-based alignment method and apparatus for construction of image mosaics |
US6330574B1 (en) | 1997-08-05 | 2001-12-11 | Fujitsu Limited | Compression/decompression of tags in markup documents by creating a tag code/decode table based on the encoding of tags in a DTD included in the documents |
US6216140B1 (en) * | 1997-09-17 | 2001-04-10 | Hewlett-Packard Company | Methodology for the efficient management of hierarchically organized information |
GB2330428A (en) | 1997-09-23 | 1999-04-21 | Winbond Electronics Corp | ROM program patching in an embedded microprocessor |
US6163780A (en) | 1997-10-01 | 2000-12-19 | Hewlett-Packard Company | System and apparatus for condensing executable computer software code |
US5995754A (en) | 1997-10-06 | 1999-11-30 | Sun Microsystems, Inc. | Method and apparatus for dynamically optimizing byte-coded programs |
JPH11126161A (en) | 1997-10-23 | 1999-05-11 | Hitachi Ltd | Fault avoiding method for control memory |
US6330712B1 (en) | 1997-11-12 | 2001-12-11 | Nec Corporation | Compressed data patch system |
US6282709B1 (en) | 1997-11-12 | 2001-08-28 | Philips Electronics North America Corporation | Software update manager |
US6018747A (en) | 1997-11-26 | 2000-01-25 | International Business Machines Corporation | Method for generating and reconstructing in-place delta files |
US6305010B2 (en) | 1997-12-04 | 2001-10-16 | Incert Software Corporation | Test, protection, and repair through binary code augmentation |
US5966541A (en) | 1997-12-04 | 1999-10-12 | Incert Software Corporation | Test protection, and repair through binary-code augmentation |
US6643775B1 (en) | 1997-12-05 | 2003-11-04 | Jamama, Llc | Use of code obfuscation to inhibit generation of non-use-restricted versions of copy protected software applications |
US6071317A (en) | 1997-12-11 | 2000-06-06 | Digits Corp. | Object code logic analysis and automated modification system and method |
US6009261A (en) | 1997-12-16 | 1999-12-28 | International Business Machines Corporation | Preprocessing of stored target routines for emulating incompatible instructions on a target processor |
US5953534A (en) | 1997-12-23 | 1999-09-14 | University Of Washington | Environment manipulation for executing modified executable and dynamically-loaded library files |
US6078931A (en) | 1998-01-14 | 2000-06-20 | Ricoh Company, Ltd. | Method and system for resetting references to deleted software structures |
US6334213B1 (en) | 1998-01-20 | 2001-12-25 | Preview Systems | Merging of separate executable computer programs to form a single executable computer program |
US6610103B2 (en) | 1998-01-30 | 2003-08-26 | International Business Machines Corporation | Method for providing precise cumulative updates and fixes to a software product |
US6282698B1 (en) | 1998-02-09 | 2001-08-28 | Lucent Technologies Inc. | Detecting similarities in Java sources from bytecodes |
US6175663B1 (en) | 1998-02-24 | 2001-01-16 | Paravision Imaging, Inc. | Method and apparatus for preserving background continuity in images |
US6438748B1 (en) | 1998-03-12 | 2002-08-20 | Telefonaktiebolaget L M Ericsson (Publ) | Apparatus and method for conversion of messages |
US6651249B2 (en) * | 1998-03-25 | 2003-11-18 | Symantec Corporation | Multi-tiered incremental software updating |
US6052531A (en) | 1998-03-25 | 2000-04-18 | Symantec Corporation | Multi-tiered incremental software updating |
US6289358B1 (en) | 1998-04-15 | 2001-09-11 | Inktomi Corporation | Delivering alternate versions of objects from an object cache |
US6292880B1 (en) | 1998-04-15 | 2001-09-18 | Inktomi Corporation | Alias-free content-indexed object cache |
EP1087533A1 (en) | 1998-04-17 | 2001-03-28 | OHMI, Tadahiro | Method and apparatus for making code book, vector quantizing device, device and method for data compression, device and method for data decompression, system for data compression/decompression |
US6230316B1 (en) | 1998-04-17 | 2001-05-08 | Symantec Corporation | Patching rebased and realigned executable files |
WO1999054816A1 (en) | 1998-04-17 | 1999-10-28 | Symantec Corporation | Patching rebased and realigned executable files |
US6167407A (en) | 1998-06-03 | 2000-12-26 | Symantec Corporation | Backtracked incremental updating |
US6243766B1 (en) | 1998-06-08 | 2001-06-05 | Microsoft Corporation | Method and system for updating software with smaller patch files |
US6216175B1 (en) * | 1998-06-08 | 2001-04-10 | Microsoft Corporation | Method for upgrading copies of an original file with same update data after normalizing differences between copies created during respective original installations |
US6496974B1 (en) | 1998-06-08 | 2002-12-17 | Microsoft Corporation | File update performing comparison and compression as single process |
US6760907B2 (en) | 1998-06-30 | 2004-07-06 | Sun Microsystems, Inc. | Code generation for a bytecode compiler |
US6317754B1 (en) | 1998-07-03 | 2001-11-13 | Mitsubishi Electric Research Laboratories, Inc | System for user control of version /Synchronization in mobile computing |
US6240550B1 (en) | 1998-07-21 | 2001-05-29 | Touchtunes Music Corporation | System for remote loading of objects or files in order to update software |
US20020087500A1 (en) | 1998-08-18 | 2002-07-04 | Brian T. Berkowitz | In-memory database system |
US6546552B1 (en) | 1998-08-19 | 2003-04-08 | Red Bend Ltd. | Difference extraction between two versions of data-tables containing intra-references |
US6952823B2 (en) | 1998-09-01 | 2005-10-04 | Pkware, Inc. | Software patch generator using compression techniques |
US6289509B1 (en) | 1998-09-01 | 2001-09-11 | Pkware, Inc. | Software patch generator |
US20030028867A1 (en) * | 1998-09-01 | 2003-02-06 | Kryloff Sergey A. | Software patch generator |
US6389592B1 (en) | 1998-09-12 | 2002-05-14 | International Business Machines Corporation | Method for deployment of incremental versions of applications |
US6804663B1 (en) * | 1998-09-21 | 2004-10-12 | Microsoft Corporation | Methods for optimizing the installation of a software product onto a target computer system |
US6202208B1 (en) | 1998-09-29 | 2001-03-13 | Nortel Networks Limited | Patching environment for modifying a Java virtual machine and method |
US6629123B1 (en) | 1998-10-02 | 2003-09-30 | Microsoft Corporation | Interception of unit creation requests by an automatic distributed partitioning system |
US6463582B1 (en) | 1998-10-21 | 2002-10-08 | Fujitsu Limited | Dynamic optimizing object code translator for architecture emulation and dynamic optimizing object code translation method |
US6163811A (en) | 1998-10-21 | 2000-12-19 | Wildseed, Limited | Token based source file compression/decompression and its application |
US6532588B1 (en) | 1998-10-21 | 2003-03-11 | Xoucin, Inc. | User centric program product distribution |
US6192157B1 (en) | 1998-10-27 | 2001-02-20 | Hewlett-Packard Company | Modifications of postscript adaptive data compression (ADC) for 3 plane, 8 bit color images, JPEG lossy compression, and variable Q factors |
US6298481B1 (en) | 1998-10-30 | 2001-10-02 | Segasoft, Inc. | System for modifying the functionality of compiled computer code at run-time |
US6618747B1 (en) | 1998-11-25 | 2003-09-09 | Francis H. Flynn | Electronic communication delivery confirmation and verification system |
WO2000034861A1 (en) | 1998-12-11 | 2000-06-15 | Incert Software Corporation | A method for determining program control flow |
EP1014263A2 (en) | 1998-12-14 | 2000-06-28 | Applied Microsystems Corporation | Method and system for modifying executable code to add additional functionality |
US6434695B1 (en) | 1998-12-23 | 2002-08-13 | Apple Computer, Inc. | Computer operating system using compressed ROM image in RAM |
US6510552B1 (en) | 1999-01-29 | 2003-01-21 | International Business Machines Corporation | Apparatus for keeping several versions of a file |
US6260157B1 (en) | 1999-02-16 | 2001-07-10 | Kurt Schurecht | Patching of a read only memory |
US6594822B1 (en) * | 1999-02-19 | 2003-07-15 | Nortel Networks Limited | Method and apparatus for creating a software patch by comparing object files |
US6425125B1 (en) | 1999-03-30 | 2002-07-23 | Microsoft Corporation | System and method for upgrading client software |
US6466999B1 (en) | 1999-03-31 | 2002-10-15 | Microsoft Corporation | Preprocessing a reference data stream for patch generation and compression |
US6738799B2 (en) | 1999-05-03 | 2004-05-18 | Symantec Corporation | Methods and apparatuses for file synchronization and updating using a signature list |
US6397385B1 (en) | 1999-07-16 | 2002-05-28 | Excel Switching Corporation | Method and apparatus for in service software upgrade for expandable telecommunications system |
US6295644B1 (en) | 1999-08-17 | 2001-09-25 | Hewlett-Packard Company | Method and apparatus for patching program text to improve performance of applications |
US6754848B1 (en) | 1999-09-30 | 2004-06-22 | International Business Machines Corporation | Method, system and program products for operationally migrating a cluster through emulation |
US6691305B1 (en) | 1999-11-10 | 2004-02-10 | Nec Corporation | Object code compression using different schemes for different instruction types |
US6757893B1 (en) | 1999-12-17 | 2004-06-29 | Canon Kabushiki Kaisha | Version control system for software code |
US20020100036A1 (en) | 2000-09-22 | 2002-07-25 | Patchlink.Com Corporation | Non-invasive automatic offsite patch fingerprinting and updating system and method |
US7131112B1 (en) * | 2000-11-21 | 2006-10-31 | Microsoft Corporation | Managing code changes for software development |
US20040063899A1 (en) | 2000-11-30 | 2004-04-01 | Mitsuaki Kobayashi | Polyimide-containing coating composition and film formed from the same |
US20040078793A1 (en) | 2001-01-19 | 2004-04-22 | Jurgen Bragulla | Time optimized replacement of a software application |
US7542758B2 (en) | 2001-07-26 | 2009-06-02 | Kyocera Wireless Corp. | Field downloading of wireless device software |
US20030163508A1 (en) | 2002-02-26 | 2003-08-28 | International Business Machines Corporation | Background code update for embedded systems |
US20030163805A1 (en) | 2002-02-27 | 2003-08-28 | Fuji Xerox Co., Ltd. | Image processing apparatus, download method, and download program product for downloading software |
US20030217257A1 (en) | 2002-05-17 | 2003-11-20 | Ebsen David S. | Method for updating memory resident firmware as a background operation |
US20040088694A1 (en) * | 2002-10-31 | 2004-05-06 | Ho Stanley M. | Systems and methods for updating software |
US20040107416A1 (en) * | 2002-12-02 | 2004-06-03 | Microsoft Corporation | Patching of in-use functions on a running computer system |
WO2004063899A2 (en) | 2003-01-13 | 2004-07-29 | Bitfone Corporation | Mobile handset capable of updating its update agent |
WO2005024628A2 (en) | 2003-09-03 | 2005-03-17 | Bitfone Corporation | Tri-phase boot process in electronic devices |
US7203708B2 (en) | 2003-11-06 | 2007-04-10 | Microsoft Corporation | Optimizing file replication using binary comparisons |
US20050132359A1 (en) | 2003-12-15 | 2005-06-16 | Mcguire Thomas D. | System and method for updating installation components in a networked environment |
US20050132349A1 (en) * | 2003-12-15 | 2005-06-16 | Jason Roberts | System and method for a software distribution service |
US20050257206A1 (en) | 2004-05-14 | 2005-11-17 | Semerdzhiev Krasimir P | Pair-update mechanism for update module |
US20060004756A1 (en) | 2004-06-01 | 2006-01-05 | Red Bend Ltd. | Method and system for in-place updating content stored in a storage device |
US7587433B2 (en) | 2004-06-01 | 2009-09-08 | Red Bend Ltd. | Method and system for in-place updating content stored in a storage device |
US20070169082A1 (en) * | 2005-12-09 | 2007-07-19 | Lam Joi K | Method and apparatus for optimizing patching of objects containing references |
US20070255764A1 (en) | 2006-04-27 | 2007-11-01 | Sonnier David P | Methods and apparatus for performing in-service upgrade of software in network processor |
US7665081B1 (en) * | 2006-05-06 | 2010-02-16 | Kaspersky Lab, Zao | System and method for difference-based software updating |
Non-Patent Citations (127)
Title |
---|
"PKZIP 6.0 for Windows Getting Started Manual", Copyright 2002 PKWARE, Inc., 13 pages, Milwaukee, WI. |
Ajila, Samuel, "Software Maintenance: An Approach to Impact Analysis of Objects Change", Software Practice and Experience, Oct. 1995, vol. 25, pp. 1155-1181, John Wiley & Sons, Ltd., United KinQdom. |
Ajmani, Sameer, "A Review of Software Upgrade TeChniques for Distributed Systems", MIT Computer Science and Artificial Intelligence Laboratory, Aug. 7, 2002, pp. 1-19, Cambridge, MA. |
Ajmani, Sameer, "A Review of Software Upgrade TeChniques for Distributed Systems", MIT Computer Science and Artificial IntelliQence Laboratory, Aug. 7, 2002, pp. 1-19, Cambridge, MA. |
Baker et al., "Compressing Differences of Executable Code", 10 pages, Apr. 22, 1999. |
Baker et al., "Compressing Differences of Executable Code", ACM Slc;3PLAN Workshop on Compiler Support for System Software (WCSSS), Apr. 22, 1999, pp. 1-10, Atlanta, GA. |
Baker, Brenda, "A Program for Identifying Duplicated Code", Computing Science and Statistics, 24th Symposium, Mar. 18-21, 1992, vol. 24, 9 pages, College Station, TX. |
Baker, Brenda, "A Program for Identifying Duplicated Code", Computing Science and Statistics, 24th Symposium, Mar. 18-21, 1992, vol. 24, 9 paQes, College Station, TX. |
Bartoletti et al., "Secure Software Distribution System", Proceedings of the 20th National Information Systems Security Conference, Jun. 18, 1997, 11 pages, Baltimore, MD. |
Bashar et ai, "Low-Threat Security Patches and Tools", Proceedings of the International Conference on Software Maintenance, Nov. 30, 1996,23 paQes, IEEE Computer Society, WashinQton, DC. |
Batalden et al., IBM Technical Disclosure Bulletin, "Maintainable ROS Code Through the Combination of ROM and EEPROM," 32(9A); 273-276, (1990). |
Bums, "Differential Compression: A Generalized Solution for Binary Files", Dec. 1996, 69 pages. |
Burns et al., "In-Place Reconstruction of Delta Compressed Files" pp. 267-275 (1998). |
Burns, "Differential Compression: A Generalized Solution for Binary Files", Dec. 1996, 69 pages. |
Chambers et al., "A User Designed Software System for Electron Microprobes-Basic Premises and the Control Program", Journal de Physique, Feb. 1984, pp. 223-226, vol. 45, No. 2, Les Editions de Physique, Les Ulis, France. |
Chambers et al., "A User Designed Software System for Electron Microprobes—Basic Premises and the Control Program", Journal de Physique, Feb. 1984, pp. 223-226, vol. 45, No. 2, Les Editions de Physique, Les Ulis, France. |
Cheung et al., "Optimal Routing Table Design for IP Address Lookups Under Memory Constraints", IEEE Proceedings of INFOCOM, Mar. 1999,8 pages, New York, NY. |
Church et al., "Dotplot: a Program for Exploring Self-Similarity in Millions of Lines of Text and Code", Jun. 1993), Journal of Computational and Graphical Statistics, vol. 2, No. 2, 12 pages, American Statistical Association, Alexandria, VA. |
Cifuentes et al., "Decompilation of Binary Programs", Software Practice and Experience, Jul. 1995, vol. 25 (7), pp. 811-829, John Wiley & Sons, Ltd., United KinQdom. |
Cifuentes, Cristina, "Reverse Compilation Techniques", Queensland University of Technology, Jul. 1994, pp. 1-342. |
Clodfelter et al., "Technological Profile of Shopping Centers: Present and Future Use", Journal of Shopping Center Research, Spring/Summer 1996, pp. 59-93, International Council of Shopping Centers Educational Foundation, New York, NY. |
Cook et al., "A Methodology for Cost-Effective Analysis of In-Place Software Processes", IEEE Transaction on Software Engineering, Jan. 1997, pp. 1-25. |
Coppieters, "A Cross-Platform Binary Diff", Dr. Dobb's Journal, 34-36, May 1995. |
Coppieters, "A Cross-Platform Binary Duff", Dr. Dobb's Journal, 34-36, May 1995. |
Decision Granting EX Parte Reexamination for Patent No. 5,546,552 mailed Mar. 16, 2010. |
Duntemann, Jeff, Assembly Language: Step-by-Step, pp. 1-469,1992, John Wiley & Sons, Inc., New York, NY. |
Eastwood, David B., "Information TeChnology and Fresh PrOduce: A Case Study Using Store Level Scan Data to Analyze Sales", Jul. 1997, 20 pages, University of Minnesota, St. Paul, MN. |
Engler, Dawson R., "VCODE: A Retargetable, ExtenSible, Very Fast Dynamic Code Generation System", May, 1996, SIGPLAM Conference on Programming Language Design and Implementation, 11 pages, ACM Press, Philadelphia, PA. |
Flake, Halvar, "Structural Comparison of Executable Objects", Proceedings of the IEEE Conference on Detection of Intrusions and Malware & Vulnerability Assessment, 2004, pp. 161-173, Dartmund, Germany. |
Fraser et al., "A Machine-Independent Linker", Software Practice and Experience, Department of Computer Science, The University of Arizona, 1982, vol. 12, pp. 351-366, United Kingdom. |
Gosling et ai, "The Java Language Environment", May 1996, pp. 1-98, Sun Microsystems, Mountain View, CA. |
Gray, Robert M., "Fundamentals of Data Compression", IEEE Proceedings of International Conference on Information, Communications, and Signal ProcessinQ, Sep. 9, 1997, pp. 1-186, SinQapore International Search Report mailed Mar. 25, 2010, International Application No. PCT/IL2009/000762. |
Gregg et al., IBM Techical Disclosure Bulletin, 32(9A); 273-276, (1990). |
Gregg et al., IBM Techical Disdosure Bulletin, 32(9A): 273-276, (1990). |
Gryder et al., "Survey of Data Compression Techniques", Martin Marietta Energy Systems, Inc. for the United States of Energy, Sep. 1991, 45 pages, Oak Ridge, TN. |
Hardy et al., "Essence: A Resource Discovery System Based on Semantic File Indexing", Proceedings of the USENIX Winter Conference, Jan. 25-29, 1993, pp. 361-374. |
Hirschberg, Daniel S., "Algorithms for the Longest Common Subsequence Problem", Journal of.the ACM, Oct. 1977, vol. 24, No. 4, pp. 664-675, ACM, New York, NY. |
Horwitz, "Identifying the Semantic and Textual Differences Between Two Versions of a Program", University of Wisconsin-Madison, 13 pages, 1990. |
Horwitz, "Identifying the Semantic and Textual Differences Between Two Versions of a Program", University of Wisconsin-Madison, 13 pages,1990. |
Hoshi et al., "Software Updated System Using Wireless Communication", NTT DoCoMo Technical Journal, 2004, vol. 5, No. 4, pp. 36-43, Japan. |
Houlder et al., "XOR Commands on SCSI Disk Drives", Seagate Technology, pp. 1-30, 1995. |
http://code.google.com/p/xdelta, printed Dec. 18, 2009. |
http://code.google.com/p/xdelta/downloads/list?can=1&q=&colspec=Filename+Summary+Upload, (earliest date Dec. 2006). |
http://code.google.com/p/xdelta/WIKI/BetterCompression, (earliest date Jan. 28, 2007). |
http://code.google.com/p/xdelta/wiki/CommandLineSyntax, (earliest date Jan. 21, 2007). |
http://code.google.com/p/xdelta/wiki/ExtemalCompression (earliest date Feb. 18. 2007). |
http://code.google.com/p/xdelta/wiki/ExternalCompression (earliest date Feb. 18, 2007). |
http://code.google.com/p/xdelta/wiki/LanguageInerface (earliest date Feb. 8, 2007). |
http://code.google.com/p/xdelta/wiki/LanguageInerface, earliest date Feb. 8, 2007. |
http://code.google.com/p/xdelta/wiki/LicensingXdelta (earliest date Mar. 24, 2007). |
http://code.google.com/p/xdelta/wiki/LicensingXdelta, (earliest date Mar. 24, 2007). |
http://code.google.com/p/xdelta/wiki/ProgrammingGuide (earliest date Jan. 21, 2007). |
http://code.google.com/p/xdelta/wiki/ProjectsUsingXdelta (earliest date Mar. 18, 2007). |
http://code.google.com/p/xdelta/wiki/TumingMemoryBudget (earliest date Dec. 12, 2007). |
http://msdn.microsoft.com/en-us/library//bb267312(VS.85,printer).aspx, dated Jan. 2006. |
http://msdn.microsoft.com/en-us/library//bb267312(VS.85,printer).aspx., dated Jan. 2006. |
http://msdn.microsoft.com/en-us/library//bb4173345(printer).aspx. (dated Oct. 2009). |
http://sourceforge.net/projects/xdelta, printed Dec. 18, 2009. |
http://www.ddj.com/article/printableArticle.jhtml?articleID=184409550&dept-url=/architect, Dr. Dobb's, A Cross-Platform Binary Diff (1995). |
http://www.ddj.com/article/printableArticle.jhtml?articleID=184409550&dept—url=/architect, Dr. Dobb's, A Cross-Platform Binary Diff (1995). |
http://www.ddj.com/article/printableArticle.jhtml?articleID=1844095508&dept-url=/architect, Dr. Dobb's, A Cross-Platform Binary Diff (1995). |
http://www.ddj.com/article/printableArticle.jhtml?articleID=1844095508&dept—url=/architect, Dr. Dobb's, A Cross-Platform Binary Diff (1995). |
http://xdelta.org (earliest date Mar. 2, 2004). |
Hung et al., "UNIX Code Management and Distribution", Sep. 1992, pp. 1 A, Stanford Linear Accelerator Center, Stanford, CA. |
Hunt at al., "An Empirical Study of Delta Algorithms", University of Karlsruhe and AT&T Research, pp. 49-65, 1996. |
Hunt et al., "An Algorithm for Diffemetial File Comparison", Bell Laboratories, 9 pages, Jul. 1976. |
Hunt et al., "An Algorithm for Differnetial File Comparison", Bell Laboratories, 9 pages, Jul. 1976. |
Hunt et al., "An Empirical Study of Delta Algorithms", University of Karlsruhe and AT&T Research, pp. 49-65, 1996. |
Hunt et al., "Delta Algorithms: An Empirical Analysis", ACM Transactions on Softward Engineering and Methodology, 7 (2); 192-214 (1998). |
Hunt et al., "Delta Algorithms: An Empirical Analysis", ACM Transactions on Softward Engineering and Methodology, 7(2); 192-214 (1998). |
IBM Corp., "Logging Status Information While Installing New Software", Jun. 1991, vol. 34, No. 1, one page. |
International Business Machines Corporation, "Method for permitting several versions of a module to coexist within a virtual machine", Mar. 1,2001,8 pages, vol. 443, No. 177, Mason Publications, Hampshire, Great Britain. |
International Search Report for PCT/IL99/00446, dated Dec. 12, 1999 (3 pages). |
International Search Report mailed Feb. 15, 2010, International Application No. PCT/IL2009/000754. |
International Search Report mailed Feb. 15, 2010, International Application No. PCT/IL2009/000755. |
James J. Hunt et al., "Distributed Configuration Management via Java and the World Wide Web" , University of Karlsruhe, Germany, 1997. |
James J. Hunt et al., "Distributed Configuration Management via Java and the World Wide Web", University of Karlsruhe, Germany, 1997. |
Japanese Office Action dated Nov. 28, 2006, with translation. |
Keller et al., "Binary Component Adaptation", Computing Sciences Technology Report No. ECOOP '98 Proceedings, Lecture Notes on Computer Science, Proceedings of the 12th European Conference on Object-Oriented Programming, 1998, vol. 1445, pp. 1-17. |
Kifer, Michael, "Ediff User's Manual", Version 2.70, Mar. 1998, pp. 1-44. |
Kishan et al., "Dynamic Kernel Modification and Extensibility", Technical Report of the SU IF Group, Department of Computer SCience, 2002, 26 pages, Stanford University, Stanford, CA. |
Larus et al., "Rewriting Executable Files to Measure Program BehaviOr", Software, University of Wisconsin-Madison, Mar. 25, 1992, vol. 24, pp. 1-17, Wiley Interscience, United Kingdom. |
Larus et al., "Rewriting Executable Files to Measure Program BehaviOr", Software, University of Wisconsin—Madison, Mar. 25, 1992, vol. 24, pp. 1-17, Wiley Interscience, United Kingdom. |
Lefurgy et al., "Improving Code Density Using Compression Techniques", 10 pages, 1997. |
Lefurgy, Charles Robert, "Efficient Execution of Compressed Programs", Dissertation, 2000, pp. 1-212, University of Michigan, Ann Arbor, MI. |
Lefurgy, Charles Robert, "Space-efficient Executable Program Representations for Embedded Microprocessors", Thesis, 1998, pp. 1-48, Ann Arbor, MI. |
Lekatsas et al., "Code Compression for Embedded Systems", Proceedings fo the 35th Design Automation Conference, 1998, Jun. 1998, 6 pages, San Francisco, CA. |
Lekatsas et al., "Code Compression for Embedded Systems", Proceedings to the 35th Design Automation Conference, 1998, Jun. 1998, 6 pages, San Francisco, CA. |
Lynch et al., "Patch Graphs: an Efficient Data Structure for Completion of Finitely Presented Groups", Proceedings of the 3rd International AISMC Conference, lecture Notes in Computer Science, 1996, vol. 1138, 15 pages, Springer Verlaq, United Kingdom. |
Lynch et al., "Patch Graphs: an Efficient Data Structure for Completion of Finitely Presented Groups", Proceedings of the 3rd International AISMC Conference, lecture Notes in Computer Science, 1996, vol. 1138, 15 paqes, Sprinqer Verlaq, United Kinqdom. |
MacDonald et al., "PRCS: The Project Revision Control System", lecture Notes in Computer Science, 1998, vol. 1439, 14 pages, University of California at Berkeley, National Energy Research Scientific Computing Center, Springer Verlag, United Kingdom. |
MacDonald et al., "PRCS: The Project Revision Control System", lecture Notes in Computer Science, 1998, vol. 1439,14 pages, University of California at Berkeley, National Energy Research Scientific Computing Center, Springer Verlag, United Kingdom. |
MacKenzie et al., "Comparing and Merging Files", ditt, diff3, sdiff, cmp, and patch, Edition 2.8, for diffutils 2.8 and patch 2.5.4, Mar. 23, 2002, pp. 1-100, Free Software foundation Ltd., Boston, MA. |
Microsoft PressPass, News Press Release, May 14, 1997, 2 pages, Microsoft Corp., Redmond, WA2 pages. |
Microsoft PressPass, News Press Release, May 14, 1997,2 pages, Microsoft Corp., Redmond, WA2 pages. |
Miller et al., "A File Comparison Program", Software-Practice and Experience, Nov. 1985, vol. 1'5 (11), pp. 1025-1040, Wiley Interscience, United Kingdom. |
Miller et al., "A File Comparison Program", Software—Practice and Experience, Nov. 1985, vol. 1'5 (11), pp. 1025-1040, Wiley Interscience, United Kingdom. |
Miller et al., "A File Comparison Program", Software-Practice and Experience, Nov. 1985, vol. 1'5 (11), pp. 1025-1040. Wiley Interscience, United Kingdom. |
Miller et al., "A File Comparison Program", Software—Practice and Experience, Nov. 1985, vol. 1'5 (11), pp. 1025-1040. Wiley Interscience, United Kingdom. |
Mogul et al., "Potential benefit of delta encoding and data compression for HTTP", Proceedings of SIGCOMM '97, Sep. 1997, pp. 14 pages, ACM, New York, NY. |
Munch, Bjorn, "Versioning in a Software Engineering Database-the Change Oriented Way", Division of Computer Systems and Telematics, The Norwegian Institute of Technology, Sep. 17, 1993, pp. 1-284, Germany. |
Munch, Bjorn, "Versioning in a Software Engineering Database—the Change Oriented Way", Division of Computer Systems and Telematics, The Norwegian Institute of Technology, Sep. 17, 1993, pp. 1-284, Germany. |
Mycroft et al., "Optimising compilation, Part I: classical imperative languages", Proceedings of SOFSEM, 1992, pp. 1-17, Czechoslovakia. |
Nilsen, Kelvin, "Issues in the Design and Implementation of Real-Time Java", Jul. 19, 1996, pp. 1-28, SYSCON Media, Montvale, NJ. |
Oplinger et al., "Software and Hardware for Exploiting Speculative Parallelism with a Multiprocessor", Stanford University Computer Systems Laboratory, Feb. 1997, pp. 1-23, Stanford, CA. |
Oreizy, Peyman, "Decentralized Software Evolution", Proceedings of the International Conference on the Principles of Software Evolution, Apr. 20-21, 1998, pp. 1-5, ACM, New York, NY. |
Pandey et al., "Providing Fine-Grained Access Control for Mobile Programs Through Binary Editing", University of California, Technical Report TR-98-08, 22 pages, Form OMB No. 0704-0188 report date 1998. |
Pellegrini et al., "Efficient IP Table Lookup via Adaptive Stratified Trees with Selective Reconstruction", Lecture Notes in Computer Science Sep. 2004, pp. 1-26, Springer Berlin, Germany. |
Percival, "Naive Differences of Executable Code", 3 pages (dated 2003 (based on www.daemonology.net/papers)). |
Percival, Wadham College University of Oxford, Thesis submitted for the degree of Doctor of Philosophy, Hilary 2006. |
Percival, Wadham College University of Oxford, Thesis submitted for the degree of Doctor of Philosophy, Hilary-2006. |
Prosecution History of U.S. Patent No. 6,546,552, filed Aug. 18, 1999, issued Apr. 8, 2003. |
Request for EX Parte Reexamination filed Jan. 22, 2010 for Patent No. 6,546,552. |
Roth etal., "Database Compression", Sigmod Record, Sep. 1993, vol. 22, No. 3, pp. 31-39, ACM, New York, NY. |
Saha et al., "Symbolic Support Graph: A Space Efficient Data Structure for Incremental Tabled Evaluation", Department of Computer SCience, Lectures Notes in Computer Science, Oct. 10, 2005, vol. 3668, pp. 1-15, Springer, Germany. |
Stevens, Curt, "Knowledge-Based Assistant for Accessing Large, Poorly Structured Information Spaces", Thesis Submitted to the Faculty of the Graduate School of the University of Colorado, 1993, 125 pages, Boulder, CO. |
Tichy, "The String-to-String Correction Problem with Block Moves", Purdue University, 17 pages, 1983. |
Tichy, Walter F., "RCS-A System for Version Control", Department of Computer Sciences, Purdue UniverSity, 1985, vol. 15, pp. 1-19, Wiley, United Kinqdom. |
Tichy, Walter F., "RCS—A System for Version Control", Department of Computer Sciences, Purdue UniverSity, 1985, vol. 15, pp. 1-19, Wiley, United Kinqdom. |
Tichy, Walter F., "The String-to-String Correction Problem with Block Moves", Purdue University, Oct. 26, 1983, 16 pages, ACM, New York, NY. |
Tsou et al., "Client-Server Components and Metadata Objects for Distributed Geographic Information Services", Proceedings of the GIS/LIS, 1998, pp. 590-599, Association of American Geography, Washington, DC. |
Wang et al., Microsoft Research Technical Report: MSR-TR-99-83, Accepted to 2nd Annual Workshop on Feedback-Directed Optimization (FDO), Haifa, Israel, Nov. 15, 1999, 11 pages. |
Wang et al., Microsoft Research Technical Report: MSR-TR-99-83, Accepted to 2nd Annual Workshop on Feedback—Directed Optimization (FDO), Haifa, Israel, Nov. 15, 1999, 11 pages. |
Wolfe et al., "Executing Compressed Programs on an Embedded RISC Architecture", 1992, pp. 81-91, IEEE Computer Society Press Los Alamitos, CA. |
www.daemonology.net/bsdiff, (Jul. 6, 2006 (based on web.archive.org/web/20060706151336/http://www.daemonology.net/bsdiff/)). |
www.microsoft.com/presspass/press/1997/May97/ie4macpr.mspx. |
Zeller, Andreas, "Configuration Management with Version Sets", A Unified Software Versioning Model and its Applications, Apr. 1, 1997, pp. 1-320, Technische Universitat Braunschweig, Germany. |
Cited By (63)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8689207B2 (en) * | 2008-08-04 | 2014-04-01 | Red Bend Ltd. | Performing an in-place update of an operating storage device |
US20100031245A1 (en) * | 2008-08-04 | 2010-02-04 | Red Bend Ltd. | Performing an In-Place Update Of an Operating Storage Device |
US10733540B2 (en) | 2010-05-26 | 2020-08-04 | Automation Anywhere, Inc. | Artificial intelligence and knowledge based automation enhancement |
US10430180B2 (en) * | 2010-05-26 | 2019-10-01 | Automation Anywhere, Inc. | System and method for resilient automation upgrade |
US20160019049A1 (en) * | 2010-05-26 | 2016-01-21 | Automation Anywhere, Inc. | System and method for resilient automation upgrade |
US20120272228A1 (en) * | 2011-04-20 | 2012-10-25 | Raj Narayan Marndi | Method and apparatus for determining compatible versions of dependent entities in a computer system |
US8997084B2 (en) * | 2011-04-20 | 2015-03-31 | Hewlett-Packard Development Company, L.P. | Method and apparatus for determining compatible versions of dependent entities in a computer system |
US20140245279A1 (en) * | 2011-12-19 | 2014-08-28 | Fujitsu Limited | Method and apparatus for determining installation order of software |
US9367300B2 (en) * | 2011-12-19 | 2016-06-14 | Fujitsu Limited | Method and apparatus for determining installation order of software |
US20130167120A1 (en) * | 2011-12-21 | 2013-06-27 | International Business Machines Corporation | Retrieving revisions in source code from a plurality of revision history data sets |
US8990773B2 (en) * | 2011-12-21 | 2015-03-24 | International Business Machines Corporation | Retrieving revisions in source code from a plurality of revision history data sets |
US20140130028A1 (en) * | 2012-11-07 | 2014-05-08 | Hiroshi Maeda | Information processing apparatus and network system |
US9529588B2 (en) * | 2012-11-07 | 2016-12-27 | Ricoh Company, Ltd. | Information processing apparatus and network system for updating firmware modules |
US20140359603A1 (en) * | 2013-05-30 | 2014-12-04 | The Boeing Company | Deployment of software across an enterprise system |
US9720669B2 (en) * | 2013-05-30 | 2017-08-01 | The Boeing Company | Deployment of software across an enterprise system |
US9177250B2 (en) * | 2013-06-28 | 2015-11-03 | Vmware, Inc. | Method and system for determining configuration rules based on configurations of complex systems |
US20150006458A1 (en) * | 2013-06-28 | 2015-01-01 | Vmware, Inc. | Method and system for determining configuration rules based on configurations of complex systems |
US20160253170A1 (en) * | 2015-02-27 | 2016-09-01 | Lenovo (Singapore) Pte, Ltd. | Efficient deployment of thin client applications to end user |
US9785429B2 (en) * | 2015-02-27 | 2017-10-10 | Lenovo (Singapore) Pte. Ltd. | Efficient deployment of thin client applications to end user |
US9880787B2 (en) * | 2015-08-06 | 2018-01-30 | Dialog Semiconductor B.V. | System and method for memory patching circuits |
US10732958B2 (en) * | 2016-03-01 | 2020-08-04 | Yanmar Co., Ltd. | Terminal device and software rewriting program |
US10853097B1 (en) | 2018-01-29 | 2020-12-01 | Automation Anywhere, Inc. | Robotic process automation with secure recording |
US11237822B2 (en) * | 2018-03-30 | 2022-02-01 | International Business Machines Corporation | Intelligent discovery and application of API changes for application migration |
US10509642B2 (en) * | 2018-03-30 | 2019-12-17 | International Business Machines Corporation | Intelligent discovery and application of API changes for application migration |
US10769427B1 (en) | 2018-04-19 | 2020-09-08 | Automation Anywhere, Inc. | Detection and definition of virtual objects in remote screens |
US10733329B1 (en) * | 2018-04-20 | 2020-08-04 | Automation Anywhere, Inc. | Robotic process automation system and method with secure credential vault |
US10908950B1 (en) | 2018-04-20 | 2021-02-02 | Automation Anywhere, Inc. | Robotic process automation system with queue orchestration and task prioritization |
US11354164B1 (en) | 2018-04-20 | 2022-06-07 | Automation Anywhere, Inc. | Robotic process automation system with quality of service based automation |
US11693923B1 (en) | 2018-05-13 | 2023-07-04 | Automation Anywhere, Inc. | Robotic process automation system with hybrid workflows |
US11086616B2 (en) | 2018-09-25 | 2021-08-10 | Vmware, Inc. | Near zero downtime application upgrade |
CN109271196A (en) * | 2018-09-28 | 2019-01-25 | 平安普惠企业管理有限公司 | APP version upgrading method, device, system and computer equipment |
US11556362B2 (en) | 2019-03-31 | 2023-01-17 | Automation Anywhere, Inc. | Robotic process automation system with device user impersonation |
US11775339B2 (en) | 2019-04-30 | 2023-10-03 | Automation Anywhere, Inc. | Robotic process automation using virtual machine and programming language interpreter |
US11921497B2 (en) | 2019-04-30 | 2024-03-05 | Automation Anywhere, Inc. | Zero footprint robotic process automation system |
US11113095B2 (en) | 2019-04-30 | 2021-09-07 | Automation Anywhere, Inc. | Robotic process automation system with separate platform, bot and command class loaders |
US11243803B2 (en) | 2019-04-30 | 2022-02-08 | Automation Anywhere, Inc. | Platform agnostic robotic process automation |
US11301224B1 (en) | 2019-04-30 | 2022-04-12 | Automation Anywhere, Inc. | Robotic process automation system with a command action logic independent execution environment |
US11614731B2 (en) | 2019-04-30 | 2023-03-28 | Automation Anywhere, Inc. | Zero footprint robotic process automation system |
US11748073B2 (en) | 2019-04-30 | 2023-09-05 | Automation Anywhere, Inc. | Robotic process automation system with a command action logic independent execution environment |
US11954514B2 (en) | 2019-04-30 | 2024-04-09 | Automation Anywhere, Inc. | Robotic process automation system with separate code loading |
US11775814B1 (en) | 2019-07-31 | 2023-10-03 | Automation Anywhere, Inc. | Automated detection of controls in computer applications with region based detectors |
US11481304B1 (en) | 2019-12-22 | 2022-10-25 | Automation Anywhere, Inc. | User action generated process discovery |
US11954008B2 (en) | 2019-12-22 | 2024-04-09 | Automation Anywhere, Inc. | User action generated process discovery |
US10911546B1 (en) | 2019-12-30 | 2021-02-02 | Automation Anywhere, Inc. | Robotic process automation with automated user login for multiple terminal server hosted user sessions |
US11194702B2 (en) * | 2020-01-27 | 2021-12-07 | Red Hat, Inc. | History based build cache for program builds |
US11086614B1 (en) | 2020-01-31 | 2021-08-10 | Automation Anywhere, Inc. | Robotic process automation system with distributed download |
US11681517B2 (en) | 2020-01-31 | 2023-06-20 | Automation Anywhere, Inc. | Robotic process automation system with distributed download |
US11804056B2 (en) | 2020-01-31 | 2023-10-31 | Automation Anywhere, Inc. | Document spatial layout feature extraction to simplify template classification |
US11514154B1 (en) | 2020-01-31 | 2022-11-29 | Automation Anywhere, Inc. | Automation of workloads involving applications employing multi-factor authentication |
US11604663B2 (en) | 2020-02-21 | 2023-03-14 | Automation Anywhere, Inc. | Detection of user interface controls via invariance guided sub-control learning |
US11886892B2 (en) | 2020-02-21 | 2024-01-30 | Automation Anywhere, Inc. | Machine learned retraining for detection of user interface controls via variance parameters |
US11960930B2 (en) | 2020-11-12 | 2024-04-16 | Automation Anywhere, Inc. | Automated software robot creation for robotic process automation |
US11734061B2 (en) | 2020-11-12 | 2023-08-22 | Automation Anywhere, Inc. | Automated software robot creation for robotic process automation |
US11782734B2 (en) | 2020-12-22 | 2023-10-10 | Automation Anywhere, Inc. | Method and system for text extraction from an application window for robotic process automation |
CN112799702A (en) * | 2021-02-01 | 2021-05-14 | 北京百家科技集团有限公司 | Software online upgrading method, related equipment and storage medium |
CN112882746B (en) * | 2021-02-03 | 2023-07-07 | 网易（杭州）网络有限公司 | Application program updating method and device, storage medium and computer equipment |
CN112882746A (en) * | 2021-02-03 | 2021-06-01 | 网易（杭州）网络有限公司 | Application program updating method and device, storage medium and computer equipment |
CN114461264A (en) * | 2021-07-22 | 2022-05-10 | 荣耀终端有限公司 | Patching method, patch generating method and related equipment |
CN114461264B (en) * | 2021-07-22 | 2023-01-10 | 荣耀终端有限公司 | Patching method, patch generating method and related equipment |
US11820020B2 (en) | 2021-07-29 | 2023-11-21 | Automation Anywhere, Inc. | Robotic process automation supporting hierarchical representation of recordings |
US11968182B2 (en) | 2021-07-29 | 2024-04-23 | Automation Anywhere, Inc. | Authentication of software robots with gateway proxy for access to cloud-based services |
CN113721967A (en) * | 2021-08-30 | 2021-11-30 | 苏州磐联集成电路科技股份有限公司 | Differential packet generation method, differential packet generation device, and upgrade method |
US20230067872A1 (en) * | 2021-08-30 | 2023-03-02 | Suzhou PanKore Integrated Circuit Technology Co., Ltd. | Method and equipment for generating a differential upgrade package, and method for upgrade |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8438558B1 (en) | System and method of updating programs and data | |
JP6198939B2 (en) | Method for loading driver and embedded device | |
JP4928717B2 (en) | Synchronize logical views independent of physical storage representation | |
US9892144B2 (en) | Methods for in-place access of serialized data | |
US20140298318A1 (en) | Computer-executable application packaging method, computer-executable device and storage media performing the same | |
US20050028155A1 (en) | Java execution device and Java execution method | |
CN1467632A (en) | Image-based software installation | |
CN106843842B (en) | Method and device for updating application program configuration file | |
US20070300206A1 (en) | Delta compression using multiple pointers | |
US9116770B2 (en) | Recipe-based application conversion | |
CN103853535B (en) | The method and apparatus for changing middleware | |
CN106796525B (en) | On-demand loading dynamic script language codes are to reduce memory use | |
US9672018B2 (en) | Method for validating equivalent data structures | |
JP2000242501A (en) | Information processor, information processing method and program writing device | |
US10909086B2 (en) | File lookup in a distributed file system | |
WO2008156969A1 (en) | Discoscript: a simplified distributed computing scripting language | |
CN110119274A (en) | A kind of method, apparatus and electric terminal, computer readable storage medium of data compilation | |
KR20130139724A (en) | A computing system, a method for controlling thereof, and a computer-readable recording medium having a computer program for controlling thereof | |
EP2321734B1 (en) | Type descriptor management for frozen objects | |
WO2019077607A1 (en) | System and method for managing program memory on a storage device | |
CN116755713A (en) | Application program generation method, device, equipment and storage medium | |
US20120011490A1 (en) | Development system | |
US8719812B1 (en) | Methods, systems, and computer readable media for dynamically modifying and utilizing a software package description for software installation | |
CN106484375B (en) | Instruction block loading method, soft switch equipment and system | |
CN110221778A (en) | Processing method, system, storage medium and the electronic equipment of hotel's data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ADAMS, STEPHEN ROBERT;REEL/FRAME:022795/0789Effective date: 20090327 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20210507 |
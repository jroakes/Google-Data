CN107430859B - Mapping input to form fields - Google Patents
Mapping input to form fields Download PDFInfo
- Publication number
- CN107430859B CN107430859B CN201680020630.2A CN201680020630A CN107430859B CN 107430859 B CN107430859 B CN 107430859B CN 201680020630 A CN201680020630 A CN 201680020630A CN 107430859 B CN107430859 B CN 107430859B
- Authority
- CN
- China
- Prior art keywords
- text entry
- gram
- entry field
- target data
- grams
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
- G10L17/22—Interactive procedures; Man-machine interfaces
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/26—Speech to text systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/174—Form filling; Merging
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/183—Speech classification or search using natural language modelling using context dependencies, e.g. language models
- G10L15/19—Grammatical context, e.g. disambiguation of the recognition hypotheses based on word sequence rules
- G10L15/193—Formal grammars, e.g. finite state automata, context free grammars or word networks
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/48—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 specially adapted for particular use
Abstract
In some implementations, user input is received while accessing a form that includes a text entry field. In an aspect, a process may include mapping user input to fields of a form and populating the fields of the form with appropriate information. Such a process may allow a user to populate a form with speech input by generating a transcription of the input speech, determining the fields that best correspond to each portion of the speech, and populating each field with the appropriate information. In some examples, the processes described herein may reduce the load on the user input components, may reduce overall power consumption, and may reduce the cognitive burden on the user.
Description
Technical Field
The present disclosure relates generally to natural language processing, and one particular implementation relates to filling out an electronic form with data provided by a user, such as voice or text input.
Background
Speech recognition includes processes for converting spoken words into text or other data. For example, a microphone may accept an analog signal, which is converted to digital form, which is then divided into smaller segments. The digital fragments can be compared to the smallest elements of the spoken language, called phonemes. Based on this comparison and an analysis of the context (context) in which those sounds were emitted, the system is able to recognize speech.
To this end, a typical speech recognition system may include an acoustic model, a language model, and a dictionary. Briefly, an acoustic model includes a digital representation of individual sounds that may be combined to produce a collection of words, phrases, etc. The language model assigns a probability that a sequence of words will appear together in a particular sentence or phrase. The dictionary converts the sound sequences into words that can be understood by the language model.
One way to use speech recognition is to fill in fields of an electronic form using speech input. The website may provide a form for the user to fill out, wherein the website may be configured to perform an action based on the content of the received input.
Disclosure of Invention
In general, aspects of the subject matter described in this specification can relate to processes for mapping user input to fields of a form and for populating fields of a form with appropriate information. The process may allow a user to more easily fill out a form using speech input by generating a transcription of the input speech, determining fields that best correspond to each part of the speech, and filling each field with appropriate information.
Filling out forms manually can be a time consuming process, especially since the user may be required to provide input each time he or she wishes to type text into a new field. As such, as will be appreciated, the processes and associated apparatus and systems described herein may be used to reduce the number of user inputs required to fill out a form. Clearly, the reduction in the number of user inputs results in a reduction in the load on the user interface components of the device/system; however, it may also reduce the time for a user to interact with the device/system, which in turn may reduce the time for display activity on which forms are presented. The power used by the display and monitor can constitute a significant portion of the total energy usage of the computer system or device, and as such, reducing the time that the display is active can result in reduced power consumption. This may be particularly beneficial in mobile devices where minimizing the use of battery power is particularly important.
For example, consider a form that includes multiple fields in which a user will enter information, such as the user's name, date of birth, and home address. Instead of requiring the user to select each domain and enter corresponding information in the selected domain, the user may simply say "Ryan Pond,1203 Forty-Fifth Street New York, 8-5-1983" aloud and not in a particular order. In response to receiving the user's utterance, without any further input, the system may determine that the "Ryan Pond" input corresponds to the "name" field, the "8-5-1983" input corresponds to the "date of birth" field, and the "1203 Forty-Fifth Street New York" input corresponds to the "address" field, and may automatically populate each field with its corresponding information. The updated form may be displayed to the user.
If the above process is compared to a system in which the user is required to manually move between fields of a form, it will be appreciated that the number of user inputs required may be reduced by at least two. In addition, the process may reduce the cognitive burden on the user (particularly in examples where spoken input may be provided in any order).
For the case where the system discussed herein collects or may utilize personal information about a user, the user may be provided with an opportunity to control whether programs or features collect personal information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location) or whether and/or how to receive content from a content server that may be more relevant to the user. In addition, certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, the identity of the user may be anonymized such that no personally identifiable information may be determined for the user, or the geographic location of the user may be generalized where location information is obtained, such as to a city, zip code, or state level, such that the particular location of the user cannot be determined. Thus, the user may be able to control how information about him or her is collected and used by the content server.
In some aspects, the subject matter described in this specification can be implemented in methods that can include the following acts: presenting, at a user interface, a form comprising one or more text entry fields, wherein each text entry field corresponds to a respective target data type; receiving a spoken input; and associating each of one or more of the text entry fields of the form with a different portion of the transcription of the spoken input.
Other embodiments of this and other aspects include corresponding systems, apparatus, and computer programs configured to perform the actions of the methods encoded on computer storage devices. A system of one or more computers may be so configured by way of software, firmware, hardware, or a combination thereof installed on the system that in operation causes the system to perform actions. The one or more computer programs may be so configured by virtue of having instructions which, when executed by data processing apparatus, cause the apparatus to perform actions.
These other versions may each optionally include one or more of the following features. For example, embodiments may include: the form is updated at the user interface, wherein each of one or more of the text entry fields of the updated form includes a different portion of the transcription of the spoken input. In some embodiments, the spoken input may include a first spoken input portion followed by a second spoken input portion. Some of these embodiments may include: the form is updated prior to receiving the second spoken input portion and at the user interface, wherein each of one or more of the text entry fields of the updated form includes a different portion of the transcription of the first spoken input portion.
In some examples, receiving the spoken input and associating each of one or more of the text entry fields of the form with a different portion of the transcription may include: receiving a first speech input portion; associating a particular text entry field of the form with a particular portion of the transcription of the first spoken input portion; receiving a second speech input portion; and associating the particular text entry field of the form with the particular portion of the transcription of the first spoken input portion and the second portion in place of the particular portion of the transcription of the first spoken input portion.
In some examples, receiving the spoken input and associating each of one or more of the text entry fields of the form with a different portion of the transcription may include: receiving a first speech input portion; associating a first text entry field of the form with a particular portion of the transcription of the first spoken input portion; receiving a second speech input portion; and associating each of one or more of the text entry fields of the form with a different portion of the transcription of the first spoken input portion and the second portion, including (i) associating the second text entry field of the form with a particular portion of the transcription of the first and second spoken input portions that includes the particular portion of the transcription of the first spoken input portion, and (ii) disassociating the first text entry field of the form with the particular portion of the transcription of the first spoken input portion.
In some examples, receiving the spoken input and associating each of one or more of the text input fields of the form with a different portion of the transcription may include: receiving a first speech input portion; associating each of one or more of the text entry fields of the form with a different portion of the transcription of the first spoken input portion, such that the form includes a first set of text entry fields associated with the transcribed text; receiving a second speech input portion; and associating each of one or more of the text entry fields of the form with a different part of the transcription of the first and second spoken input parts, such that the form includes a second set of text entry fields associated with the transcribed text, wherein a difference between the first set of text entry fields and the second set of text entry fields depends at least on: (i) a respective target data type associated with the text entry field of the form; (ii) a first speech input section; and (iii) first and second speech input sections.
The one or more differences between the first set of text entry fields and the second set of text entry fields may also depend on a data type associated with the transcribed portion of the first speech input portion and a data type associated with the transcribed portions of the first and second speech input portions. Such differences between the first set of text entry fields and the second set of text entry fields may include, for example, one or more of a number and a type of text entry fields associated with the transcribed text.
In some implementations, associating each of one or more of the text entry fields of the form with a different portion of the transcription and updating the form at the user interface can include: each of one or more of the text entry fields is associated with a different portion of the transcription that has been determined to correspond to the respective target data type associated with the text entry field. In some examples, the different portions of the transcription may include at least: a first portion comprising a single text term; and a second portion comprising a plurality of text terms.
In some aspects, the subject matter described in this specification can be implemented in methods that can include the following acts: obtaining a form comprising one or more text entry fields each associated with a respective target data type; receiving an input comprising one or more words; generating a plurality of n-grams from the one or more words; selecting a particular n-gram for a particular text entry field from among a plurality of n-grams generated from one or more words based at least on a target data type associated with the particular text entry field; and populating the particular text entry field with the particular n-gram. The respective target data type associated with the text entry field may also be inferred from, for example, context or other information not directly associated with the respective text entry field. In this context, an n-gram may be a contiguous sequence of n terms (such as phonemes, syllables, text characters, and words). In some embodiments, the processes described in connection with such methods may be performed with an input comprising two or more words.
Other embodiments of this and other aspects include corresponding systems, apparatus, and computer programs configured to perform the actions of the methods encoded on computer storage devices. A system of one or more computers may be so configured by way of software, firmware, hardware, or a combination thereof installed on the system that in operation causes the system to perform actions. The one or more computer programs may be so configured by having instructions which, when executed by data processing apparatus, cause the apparatus to perform actions.
These other versions may each optionally include one or more of the following features. For example, embodiments may include: determining a mapping score based at least on a target data type associated with the particular text entry field, the mapping score indicating a confidence that the particular text entry field and one or more of the text entry fields different from the particular text entry field will be filled with the particular n-gram and one or more of the plurality of n-grams different from the particular n-gram, respectively. In these embodiments, selecting a particular n-gram for a particular text entry field from among a plurality of n-grams generated from one or more words based at least on a target data type associated with the particular text entry field may include: a particular n-gram for the particular text entry field is selected from among a plurality of n-grams generated from the one or more words based at least on the mapping score.
Embodiments may include: selecting one of n-grams different from the particular n-gram for one of the text entry fields different from the particular text entry field based at least on the mapping score from among the plurality of n-grams generated from the one or more words; and populating a text entry field that is different from the particular text entry field with an n-gram that is different from the particular n-gram.
Embodiments may include: receiving user input representing data provided by a user for populating a form; and determining one or more transcription hypotheses input by the user, the one or more transcription hypotheses including one or more words. In these embodiments, receiving input comprising one or more words may include receiving one or more transcription hypotheses.
In some implementations, generating the plurality of n-grams from the one or more words can include: one or more n-grams are generated from each of the one or more transcription hypotheses. Moreover, receiving user input representing data provided by a user for populating a form may include: receiving data reflecting utterances of one or more words spoken by a user; and determining the one or more transcription hypotheses entered by the user comprises determining one or more transcription hypotheses for the one or more words spoken by the user, wherein the one or more transcription hypotheses comprise the one or more words.
Embodiments may include: one or more confidence scores are determined for each of one or more of the transcription hypotheses each indicating a confidence in the one or more words of the respective transcription hypothesis that correctly represent one or more of the words spoken by the user. In these embodiments, selecting a particular n-gram for a particular text entry field from among a plurality of n-grams generated from one or more words based at least on a target data type associated with the particular text entry field may include: a particular n-gram for a particular text entry field is selected from among a plurality of n-grams generated from one or more words based at least on a target data type associated with the particular text entry field and one or more confidence scores associated with a particular transcription hypothesis from which the particular n-gram was generated.
Embodiments may include: determining a respective target data type associated with a text entry field of a form; and accessing, based on the respective target data type associated with the text entry field of the form, one or more target data type models indicating one or more of grammatical and lexical characteristics associated with words of the respective target data type. In some aspects, selecting a particular n-gram for a particular text entry field from among a plurality of n-grams generated from one or more words based at least on a target data type associated with the particular text entry field may include: a particular n-gram for a particular text entry field is selected from among a plurality of n-grams generated from one or more words based at least on one or more of the grammatical and lexical properties associated with the words of the target data type associated with the particular text entry field and one or more of the grammatical and lexical properties associated with the particular n-gram. In some implementations, the respective target data type can be inferred from, for example, context or other information not directly associated with the respective text entry field.
In some implementations, determining the respective target data type associated with the text entry field of the form can include: based at least on the one or more tags included in the form that are associated with the text entry field of the form, a respective target data type associated with the text entry field of the form is determined.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other potential features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
Fig. 1 and 2 are conceptual diagrams of an exemplary framework for mapping user input to fields of a form and populating the fields of the form with appropriate information in the system.
FIG. 3 is a diagram of a system for mapping user input to fields of a form and populating the form with appropriate information.
FIG. 4 is a flow diagram of an example process of mapping user input to fields of a form and populating the fields of the form with appropriate information.
FIG. 5 is a diagram of an exemplary computing device.
Like reference symbols in the various drawings indicate like elements.
Detailed Description
FIG. 1 is a conceptual diagram of an exemplary framework for mapping user input to fields of a form and populating the fields of the form with appropriate information in system 100. More particularly, the diagram depicts a user device 106 and a computing device 122, which collectively make up the system 100. The diagram also depicts a data flow 110 between the user device 106 and the computing device 122, as well as the forms 108 (labeled as forms 108A through 108F (in chronological stages "a" through "F," respectively)) displayed by the user device 106 in various stages. Briefly, and as described in more detail below, the user device 106 can display a form 108 that can receive the utterance 104 from the user 102, and the computing device 122 can generate a plurality of n-grams (n-grams) from the transcription of 104, map the n-grams to the text entry fields 140 and 148, and can populate the form 108 with the appropriate n-grams.
The user device 106 may be a mobile computing device, personal digital assistant, cellular telephone, smart phone, laptop, desktop, workstation, and other computing device. The user device 106 may display the form to the user 102. For example, the user device 106 may display a graphical user interface that includes the form 108. The form may be a document that includes one or more markup fields for user input for user entry of the target data type. The target data type associated with each text entry field may correspond to the type or nature of data that each text entry field is intended to receive. For example, the form 108 may include: a name field 140 for a user to enter the user's name; a telephone number field 142 for a user to enter a telephone number of the user; an address field 144 for a user to enter the user's address; an email field 146 for a user to enter an email address for the user; and an email confirmation field 148 for the user to enter the user's email address. The field may be a text entry field where the user may enter text.
Upon accessing the form 108, the system 100 identifies a corresponding target data type associated with each text entry field 140 and 148. The identification process may be performed at computing device 122 or locally at user device 106. For example, the domain 140 may be identified as a domain for receiving a user's name. This may be determined from the labels provided proximate to each text entry field in the form 108. For example, the form 108 may include a "name" text label proximate to the field 140.
The user device 106 may receive an utterance of the input word 104 spoken by the user 102. For example, the user 102 may say "1203 party-Fifth Street New York 2125519957 Ryan Pond rpond @ example. com." when the user 102 speaks, the user device 106 may record the user's utterance in real-time and provide the recorded audio data to the computing device 122. The computing device 122 may obtain transcription hypotheses for the utterance in the audio data. For example, when audio data of an utterance of a user is initially received by the computing device 122 (e.g., when the user 102 begins speaking), the computing device 122 can provide the audio data to a speech recognizer that generates word lattices (word lattices) that indicate a plurality of different combinations that can form different hypotheses of the recorded utterance. In some implementations, at least the transcription hypotheses may be obtained by the user device 106. In these embodiments, network connectivity may not be necessary for the user equipment 106 to perform the steps described in connection with fig. 1.
The word lattice may include a plurality of nodes corresponding to possible boundaries between words. Each pair of nodes may have one or more paths that each correspond to a different sequence of words. For example, the computing device 122 may determine each appropriate transcription hypothesis for the recorded utterance by analyzing a path from a beginning node of the word lattice (e.g., corresponding to a point at which the user 102 begins speaking) to an ending node of the word lattice (e.g., corresponding to a point at which the most recent audio data was received). In some embodiments, all transcription hypotheses are considered by the system 100. In other embodiments, not all of them are considered. In these embodiments, such transcription hypotheses obtained and/or considered may be those of the pruned search space. This may for example save computation time.
Further, the speech recognizer may indicate which of the words it considers is most likely correct (e.g., by providing a confidence score and/or ranking both the individual words and hypotheses). In this example, the word lattice may be updated as additional audio data is received from the user device 106. For example, the additional audio data may cause the word lattice to expand to include words between the additional nodes and the nodes based on the additional audio data.
The computing device 122 can also determine a sequence of words in each hypothesis that forms a path from the beginning node to the end node of the word lattice. Computing device 122 may generate one or more hypothesis variants for each hypothesis. Each hypothesis variant may include one or more n-grams generated from a sequence of words included in the original hypothesis. In this context, an n-gram is a contiguous sequence of n terms (such as phonemes, syllables, text characters, and words). For example, the generated n-gram may include one or more of phonemes, syllables, text characters, and words included in the corresponding transcription hypothesis. In some embodiments, the n-grams included in the hypothetical variant that includes multiple n-grams may be a sequence of n-grams.
The n-grams included in each hypothesis variant may be variants of words from the original hypothesis. For example, the n-grams included in each hypothetical variation can be one or more of: phrases or collections of these words, concatenations of these words and/or characters in these words, the words themselves, and segments of these words. In some implementations, the computing device 122 can determine a hypothesis variant for each transcription hypothesis under consideration. As with the other processes described above, the hypothesis variant generation process may be performed in real-time for the utterance of the user. That is, since the hypothesis of the word lattice changes with the additional audio data, the hypothesis varies as well. In some embodiments, all possible hypothetical variations are considered by the system 100. In other embodiments, not all of them are considered. In these embodiments, such hypothetical variations determined and/or considered may be those of the pruned search space. This may for example save computation time.
The computing device 122 may use the hypothesis variants to determine how the form 108 should be filled. In particular, computing device 122 can determine, for each hypothesis variant, various ways in which form 108 can be populated with n-grams of the hypothesis variant. In other words, the computing device 122 can consider a one-to-one mapping of the hypothetical variant n-grams to the text entry fields of the form 108. The number of mappings considered may depend at least in part on the number of n-grams in a given hypothesis variant and the number of text entry fields included in a given form. In some embodiments, all possible mappings are considered by the system 100. In other embodiments, not all of them are considered. In these embodiments, such mappings evaluated may be those of the pruned search space. This may for example save computation time.
For each mapping considered, computing device 122 may determine a mapping score that indicates a confidence that the form will be correctly filled if its text entry field is populated with n-grams of the hypothesized variants according to the mapping (e.g., how well each n-gram is paired with the text entry field to which each n-gram is mapped). That is, the mapping score for a given mapping reflects the likelihood that the n-gram represents data that the user 102 intends to provide to the text entry field with which each n-gram has been paired under the mapping.
The mapping score for each mapping may be based on one or more levels of correspondence between the n-grams of the hypothesis variants and the text entry fields to which each n-gram has been mapped accordingly. In some implementations, the computing device 122 can determine a relevance score for each n-gram to text entry field pair in the mapping.
The relevance score for a given pair may be based at least on the following: a target data type for the text entry field of the pair, a confidence score and/or ranking provided for the word from which the n-gram of the pair was generated, relevance scores for other n-grams of the hypothesized variant, an estimated data type of the n-gram, samples of the form that have been filled in by the user and/or others, a level of correspondence between the location of the n-gram in the sequence of n-grams of the hypothesized variant and the location of the text entry field within the form 108, user information, and information retrieved from one or more search fields. Computing device 122 can determine a mapping score based on one or more relevance scores determined for one or more n-gram to text entry field pairs in the mapping.
For example, the mapping score may be an average of the relevance scores determined for a given mapping. In some implementations, the mapping score can be a weighted average of its relevance scores. For example, relevance scores for n-grams and text entry field pairs may be weighted according to the estimated importance of the n-grams (e.g., the number of characters in the n-grams relative to the length of the hypothesized variant) and/or the level of estimated importance of the text entry field (e.g., based on whether the population of the text entry field is optional). Also, different weights may be assigned to the parameters on which the mapping scores are based, as described above.
In some implementations, computing device 122 can utilize a machine learning system to determine the mapping score. For example, the machine learning system may train to recognize when an n-gram has a target data type for its paired text entry field based on the populated form samples, the tagged form samples, and user information. That is, machine learning techniques can also be used to more accurately identify target data types for various text entry fields. The machine learning system may be able to learn how users typically fill in forms and tailor the mapping score scheme to reflect their habits. In some implementations, machine learning techniques may be used to determine confidence scores and/or rankings for both individual words and hypotheses of a word lattice. In some implementations, the user device 106 can utilize a machine learning system (such as that described in connection with the computing device 122) to determine such mapping scores. In these embodiments, network connectivity may not be necessary for the user equipment 106 to perform the steps described in connection with fig. 1.
Once computing device 122 has determined the mapping score for each mapping between a hypothesis variant and the form 108 to be considered and has done so for each hypothesis variant generated for each transcription hypothesis, computing device 122 may select a particular mapping and thus populate form 108. Computing device 122 may select a mapping based on the mapping score. In some implementations, computing device 122 may select the mapping with the highest mapping score at a given time. In some implementations, such mapping selection may be performed by the user device 106. In these embodiments, network connectivity may not be necessary for the user equipment 106 to perform the steps described in connection with fig. 1.
The computing device 122 can populate the text entry fields of the form 108 according to the selected mapping. The text entry fields may be populated in real-time (e.g., when the user 102 is speaking) or may be populated when the user 102 has completed speaking. In embodiments in which the user device 106 performs the steps described in conjunction with fig. 1, such a text entry field population process may be performed locally by the user device 106. In these embodiments, the form 108 may be updated concurrently or immediately following the obtaining or receiving of the information associating the text entry field with the transcribed portion. In other implementations, the form 108 may be updated once it has been determined that the user has finished providing input. In these embodiments, the process of associating the text entry field with the transcribed portion may still be performed in real-time. In some examples, the form 108 may be updated periodically. In these examples, the user device 106 may periodically update the form 108 according to the current association between the text entry field and the transcribed portion. That is, in some implementations, the association between the text entry field and the portion of the transcription resulting from such an association process may be apparent in the form 108 as displayed. In some examples, the process of associating text entry fields with transcribed portions may also be performed periodically.
In some implementations, the computing device 122 can modify the mapping. This may include replacing information included in the n-gram with additional information or augmenting such n-gram. For example, the computing device 122 may determine that the text entry field may require more information than the user 102 has provided, generate the required additional information, and augment the mapped n-gram with the additional information. Computing device 122 may also provide autocomplete functionality to the additional information. In these implementations, the computing device 122 can populate the corresponding text entry field with the modified mapped n-gram. In embodiments where the user device 106 performs the steps described in connection with fig. 1, such modification may be performed locally by the user device 106.
The computing device 122 may provide the user device 106 with updated information for the form 108. In embodiments where the text entry field is populated in real-time, this feature may enable the user 102 to view the form 108 as it speaks or shortly after it speaks to become populated with its information. In these implementations, the state of the form 108 at a given point in time represents a selected mapping of n-grams of audio data received up to that point in time to the text entry field. In embodiments where the user device 106 performs the steps described in connection with fig. 1, the user device 106 may directly provide the updated information for the form 108. In these embodiments, the form 108 may be updated concurrently or immediately following the obtaining or receiving of the information associating the text entry field with the transcribed portion. In other implementations, the form 108 may be updated once it has been determined that the user has finished providing input. In these embodiments, the process of associating the text entry field with the transcribed portion may still be performed in real-time. In some examples, the form 108 may be updated periodically. In these examples, the user device 106 may periodically update the form 108 according to the current association between the text entry field and the transcribed portion. That is, in some implementations, the association between the text entry field and the portion of the transcription resulting from such an association process may be apparent in the form 108 as displayed. In some examples, the process of associating text entry fields with transcribed portions may also be performed periodically.
In the example of fig. 1, the user 102 has accessed the form 108 and the computing device 122 has identified a respective target data type associated with each text entry field 140 and 148. Phase a represents where the user 102 begins to speak the phrase: point "1203 form-Fifth Street New York 2125519957 Ryan Pond rpond @ example. More particularly, the user 102 speaks a "1," and the user device 106 records the utterance of the user 102. The user device 106 transmits audio data including utterances of the user to the computing device 122 over the network.
The computing device 122 may generate a plurality of transcription hypotheses for the utterance. As described above, each hypothesis generated may be included as a path within a word lattice generated based on the audio data received in stage a. Computing device 122 may also generate one or more hypothesis variants. For example, assume that a variant may include (i) "1," and (ii) "Juan. That is, both "1" and "Juan" are n-grams generated from one or more words included in the respective hypothesis.
If computing device 122 would consider "Juan" to be the most likely name, then the mapping scores for "Juan" and name field 140 would be positively influenced (e.g., computing device 122 has identified "name" as the target data type for name field 140). "Juan" and the name field 140 may yield the maximum mapping score for at least three reasons. With this, the computing device 122 may populate the name field with "Juan" and provide the updated form 108A to the user device 106 for display. In some implementations, the user device 104 receives information associating the name field 140 of the form 108 with "Juan. For example, such information may include one or more of the following: information indicating the results of the mapping determination, instructions indicating how the form 108 is to be populated, updates to the form 108, and updated versions of the form 108. The user device 106 can, for example, update the form being displayed such that the namefield 140 includes "Juan" (such as the updated form 108A being displayed).
Through stage B of FIG. 1, the user 102 has said "1203 Forty. The user device 106 transmits audio data for the utterance to the computing device 122 over the network.
FIG. 2 is a conceptual diagram of an exemplary framework 200 for mapping user input to fields of a form and populating the fields of the form with appropriate information in system 100 at stage B as described in association with FIG. 1. In some implementations, the processes described in association with fig. 2 may be performed, at least in part, by computing device 122. In these embodiments, the processes described in association with fig. 1 and 2 may also be handled or performed by other cloud computing devices communicatively coupled with one or more of the user device 106 and the computing device 122. In other embodiments, the processes described in association with fig. 2 may be partially or fully performed by the user device 106. In these embodiments, network connectivity may not be necessary for the user device 106 to perform the steps described in association with fig. 1 and 2.
Referring again to fig. 1, the computing device 122 can generate multiple transcription hypotheses for the speech. For example, this may include computing device 122 updating a word lattice with the audio data received for phase B, e.g., the word lattice produced for the first portion of the spoken input in phase a. Such a word lattice updated in stage B will include words of audio data received in stages a to B, e.g. words of audio data of the first and second parts of the spoken input. As described above, the computing device 122 can determine each appropriate transcription hypothesis for the ensemble of recorded utterances, which can form each of at least some paths that can be taken from a beginning node to an ending node of the word lattice, e.g., phase a to phase B.
FIG. 2 includes a general depiction of a word lattice and its resulting hypotheses-e.g., H1To HnA model 210 of the relationship between. For example, the word lattice updated at stage B may be word lattice 212. Word lattice 212 includes a start node 214a and an end node 214 b. The sequence of words presented by each path from 214a to 214b reflects each appropriate transcription hypothesis produced by word lattice 212. Word lattice at stage B may be generatedSuppose H1To HnWhere n is less than or equal to the total number of paths from 214a to 214 b.
The computing device 122 generates one or more hypothesis variants for each transcription hypothesis of the recorded speech. FIG. 2 includes a general depiction of an exemplary hypothesis-e.g., HkAnd hypothesis variants-e.g. HkV1To HkViA model 220 of the relationship between. For phase B, exemplary hypothesis 222 is generated from word lattice 212. Words 222a-e, e.g., "Juan," "2," "0," "3," "40," form the path taken through hypothesis 222 from the beginning node 214a to the end node 214b of word lattice 212. Other assumptions that the word lattice 212 may implement may include, for example, (i) "wait", "to", "zero", "the", "Ford", "E", and (ii) "1", "2", "zero", "3", "for", "tea".
The hypothesis variants generated by the computing device 122 for the hypothesis 222 may each include a n-gram or a sequence of n-grams generated from the words 222 a-e. Each n-gram included in such a hypothetical variation can be any of the words 222a-e, a phrase formed by any of the words 222a-e, a concatenation of characters of any of the words 222a-e or the words 222a-e, a segmentation of any of the words 222a-e, and combinations thereof.
The computing device 122 can consider a respective one-to-one mapping of the hypothetical variant n-grams to the text entry fields of the form 108. For each mapping considered, computing device 122 may determine a mapping score that indicates a confidence that the form will be correctly filled in if its text entry field is populated with n-grams of hypothesized variants according to the mapping, e.g., the degree to which each n-gram is paired with the text entry field to which it is mapped.
FIG. 2 includes a model 230, which generally depicts an exemplary hypothetical variation-e.g., HkVkText entry field for a form, and variants for an exemplary hypothesis HkVkAnd various possible mappings of the text entry fields of the form-e.g., HkVkM1To HkVkMjA relationship between (A) and (B), saidEach of the various possible mappings has a corresponding mapping score. For phase B, exemplary hypothesis variants 232 are generated from hypotheses 222. For example, assume that variant 232 may include an N-gram N222aAnd N-gram N222b-eThe n-gram sequence of (1). In this example, assume the first N-gram, N-gram N, in the N-gram sequence of variant 232222aSimply the word 222a, such as "Juan". Assume the second N-gram in the N-gram sequence of variant 232, N-gram N222b-eIs a concatenation of words 222b, e.g., "2", 222c, e.g., "0", 222d, e.g., "3", and 222e, e.g., "40".
Each mapping of the hypothesis variants 232 and the form 108 considered by the computing device 122 may correspond to a mapping of "Juan" to one of the text entry fields 140-. Computing device 122 may traverse each of the respective mappings of the hypothesis variants and determine each corresponding mapping score. This may be performed for each hypothesis variant of each hypothesis developed for speech. The computing device 122 can determine, based at least on the mapping scores, which of the generated hypothesis variants maps most appropriately to the text entry fields and preferred mappings of the form 108, or how the form 108 should be populated with the n-grams included in this sequence, i.e., which text entry fields are paired with which n-grams.
In this example, the computing device 122 can determine that the hypothesized variant 232 most appropriately maps to the text entry field of the form 108 and further determine that the selected mapping comprises using a "Juan" n-gram, i.e., n-gram N222a Fill name field 140 and use "20340" N-gram-i.e., N-gram N222b-eFill in the phone number field 142. Fig. 2 depicts this mapping as mapping 240. It is assumed that the mapping score of this particular mapping of variants 232 to form 108 can be positively influenced by the level of correspondence between the first n-gram in the sequence of n-grams, i.e., "Juan", and the first text entry field in form 108, i.e., name field 140, in a manner similar to that described with reference to stage A.
Similarly, for example, the relevance score of the telephone number field 142 and the "20340" on which the mapping score is based may also reflect a relatively high level of correspondence. In determining the relevance score for this particular n-gram to text entry field pair, i.e., "20340" to telephone number field 142, computing device 122 may consider "20340" to be most likely the top five digits of a telephone number.
First, there is an explicit correspondence between the location of "20340" within the hypothesis variant 232 and the location of the telephone number field 142 within the form 108. Beyond the location correspondence, computing device 122 may have determined that "203" is a relatively common connecticut telephone area code from the information retrieved from the search field. For at least these reasons, the mapping score of the selected mapping may already be relatively higher than other generated mapping scores.
Through stage C of FIG. 1, user 102 has spoken "1203 form Fifth Street New York". The user device 106 transmits this verbal audio data over the network to the computing device 122. The computing device 122 may generate a plurality of transcription hypotheses for the utterance. This may include, for example, computing device 122 updating the word lattice with the audio data received in phase C. Such a word lattice updated in phase C will include the transcription hypotheses for the audio data received in phases a through C.
As described above, the computing device 122 may determine each hypothesis for the ensemble of recorded utterances, which may form each of the various paths that may be taken from the beginning node to the end node of the word lattice, e.g., phase a to phase C. Hypothesis variants may be generated for each hypothesis in a manner similar to that already described above, and utilized to determine an appropriate mapping of n-grams to text entry fields for phase C.
In this example, computing device 122 determines the preferred mapping includes populating address field 144 with "1203 comfort street Newark". This means that the mapping that has been selected corresponds to a hypothetical variant of a single n-gram that includes "1203 effort fast street Newark", which may be a phrase that includes words of the words found in the original hypothesis, as well as a concatenation of characters and/or words found in the original hypothesis, e.g., "1203". That is, the computing device 122 determines that this particular n-gram is an address, which is the target data type determined for the address realm 144, with a relatively high likelihood. Despite the correspondence between the n-grams and the locations of the text entry fields, the correspondence between their data types is important enough to produce a high relevance score in stage C.
The word lattice updated in phase C may have included both "Newark" and "New York" at the same point between the beginning and ending nodes of the word lattice. In this example, the characteristics of the speech provided to the speech recognizer may have indicated that the user 102 is most likely to say "Newark". That is, the confidence score provided in the word lattice of "Newark" may already be higher than the confidence score of "New York". In this regard, hypothetical variants that include "Newark" may be preferred over those that include "New York".
Prior to filling the form 108, the computing device 122 may modify a "1203 comfort street Newark" n-gram. For example, it may be determined that "forty firm street" is to be modified to write "45thSt.'. This modification may be performed to better conform to the address format and/or to minimize the number of characters provided to the address field 144. In some implementations, the computing device 122 can identify character restrictions within the text entry domain and modify the n-gram accordingly such that the character restrictions are satisfied. Such modifications may include abbreviationsA word. The computing device 122 may provide the updated form 108C to the user device 106 for display. In some implementations, the user device 106 receives information for associating the text entry field 140 and 148 of the form 108 with a transcribed portion of the input 104, e.g., transcribed text. In this example, information associating the text entry field 140 and 148 of the form 108 with the transcribed portion may be received by the user device 106, which disassociates the name field 140 and "Juan" of the form 108, disassociates the phone number field 142 and "203-40" of the form 108, and associates the address field 144 and "120345" of the form 108thNewark "is related. The user device 106 may, for example, update the form 108B to the form 108C for display. Such association is at least evident in the depictions of 108B and 108C.
Through stage D of FIG. 1, the user 102 has spoken "1203 form Fifth Street New York 21". The user device 106 transmits this verbal audio data over the network to the computing device 122. The computing device 122 may generate a plurality of transcription hypotheses for the utterance. This may include, for example, computing device 122 updating the word lattice with the audio data received for stage D. Such a word lattice updated in stage D will include candidate transcriptions of the audio data received in stages a to D.
As described above, the computing device 122 can determine each hypothesis for the ensemble of recorded utterances, which can form each of the various paths that can be taken from the beginning node to the end node of the word lattice, e.g., stage a through stage D. Hypothesis variants may be generated for each hypothesis in a manner similar to that already described above, and utilized to select a mapping of n-grams to text entry fields for phase D.
In this example, computing device 122 determines that the preferred mapping includes populating address field 144 with "1203 comfort street Newark" and populating phone number field 142 with "21". In addition to the modifications described above, "1203 comfort street Newark" may be modified to not only be written as "120445thNewark ", and further written" 120445th St.Newark,NJ”。
Upon receiving the "21" audio data at stage C, the computing device 122 may have determined that the user 102 has proceeded from providing the address to providing, for example, a telephone number. For example, if computing device 122 expected to provide a state at the end of the address, the address n-gram may have been modified to include the most likely state. Computing device 122 may have utilized information from the search domain to determine that the state associated with "Newark" is most likely the new jersey state or "NJ". The computing device 122 may provide the updated form 108D to the user device 106 for display. In some implementations, the user device 106 receives information associating the phone number field 142 of the form 108 with "21". For example, the user device 106 may update the form 108C to the form 109D for display. As described above and illustrated in FIG. 1, the associated fields of the text entry field 140 and 148 of the form 108 and the transcribed portion of the input 104, e.g., transcribed text, can be modified at each stage or as additional user input is received and/or processed.
Through stage E of FIG. 1, user 102 has spoken "1203 form Fifth Street New York 2125519957 Ryan Pond r". The user device 106 transmits this verbal audio data over the network to the computing device 122. The computing device 122 may generate a plurality of transcription hypotheses for the utterance. For example, this may include computing device 122 updating the word lattice with the audio data received for phase E. Such a word lattice updated in stage E will include candidate transcriptions of the audio data received in stages a to E.
As described above, the computing device 122 may determine each hypothesis for the ensemble of recorded utterances, which may form each of the various paths that may be taken from the beginning node to the end node of the word lattice, e.g., stages a through E. Hypothesis variants may then be generated for each hypothesis in a manner similar to that already described above, and utilized to select a mapping of n-grams to text entry fields for phase E.
In this example, the computing device 122 determines the preferred mapping includes populating the address field 144 with "1203 fordy fast street New York", populating the phone number field 142 with "2125519957", and populating the name field 140 with "Ryan binder". Upon receiving "25519957," the computing device may have determined that "2125519957" is most likely a phone number. Thus, a mapping score that includes a mapping of this n-gram paired with the telephone number field 142 would have benefited from this correspondence.
If, for example, computing device 122 is able to determine that "2125519957" is most likely a telephone number, and further determine that the area code for this telephone number is a manhattan area code, e.g., "212" is a common area code for manhattan, New York, the mapping score for hypothetical variants generated from "New York" instead of "Newark" may be increased. That is, the computing device 122 may determine that the provided address and telephone number likely correspond to the same region. For this reason, the selected mapping may include populating the address field 142 with n-grams of "1203 comfort street New York". The address n-gram may be modified in a manner similar to that already described above, and may be further modified to indicate that the address is located in Manhattan West, e.g., "120345th St.”
In this example, the characteristics of the speech provided to the speech recognizer may have indicated that the user 102 is most likely to say "punder" rather than "Pond" followed by "r". Thus, the mapping score of the selected mapping may have been advantageously affected by the confidence score and/or ranking associated with the "punder" in the word lattice. The computing device 122 may provide the updated form 108E to the user device 106 for display. In some implementations, the user device 106 receives information for modifying the text entry field 140 and 148 of the form 108 and the associated field of the transcribed portion of the input 104, e.g., the transcribed text. For example, the user device 106 may update the form 108D to the form 108E for display.
Through stage F of FIG. 1, the user 102 has spoken "1203 form Fifth Street New York 2125519957 Ryan Pond rpond @ example. com". The user device 106 transmits this verbal audio data over the network to the computing device 122. The computing device 122 may generate a plurality of transcription hypotheses for the utterance. For example, this may include computing device 122 updating the word lattice with the audio data received for stage F. Such word lattices updated in stage F will include candidate transcriptions of the audio data received in stages a to F.
As described above, the computing device 122 can determine each hypothesis for the ensemble of recorded speech utterances, which can form each of the various paths that can be taken from the beginning node to the end node of the word lattice, e.g., stage a through stage F. Hypothesis variants may be generated for each hypothesis in a manner similar to that already described above, and utilized to select a mapping of n-grams to text entry fields for phase F.
In this example, computing device 122 may have determined that email field 146 and email confirmation field 148 have exactly the same target data type. In this case, computing device 122 may treat domains 146 and 148 as if they were a single domain. Thus, the same n-gram will be mapped to these domains. For example, computing device 122 may determine, e.g., based on the user information, that "rpond @ example. com" is suitably mapped to domains 146 and 148. In some implementations, the mappings considered by the computing device 122 include mappings that assume that a single n-gram of a variant is mapped to multiple text entry fields of the form 108, e.g., n-to-m mappings.
For example, the user 102 may have previously provided "rpond @ example. com" to an email text entry field of another form displayed on the user device 106. Using machine learning techniques, computing device 122 may determine that "rpond @ example. com" is most likely the user's email address. Accordingly, computing device 122 may determine immediately that the last name of "Pond" maps more appropriately to the first name field 140 than "Ponder" because "r" received immediately after "Pond" is most likely part of the email address. The computing device 122 may provide the updated form 108F to the user device 106 for display. In some implementations, the user device 106 receives information for modifying the text entry field 140 and 148 of the form 108 and the associated field of the transcribed portion of the input 104, e.g., the transcribed text. For example, the user device 106 may update the form 108E to the form 108F for display.
Although the processes of fig. 1 and 2 have been described in association with voice input, the processes may be adapted to map inputs such as voice, keyboard entries, handwriting, and gestures to fields of a form. In some implementations, the processes as described in association with fig. 1 and 2 above may be performed entirely by a single device, such as user device 106, computing device 122, and other cloud computing devices.
FIG. 3 depicts an exemplary system 300 for mapping user input to fields of a form and populating the fields of the form with appropriate information. More specifically, fig. 3 depicts a user 302 that may provide input 304 to a user device 306. The user 302 may also access a digital form on the user device 306. User device 306 may communicate with computing device 322 over network 308. Similar to what has been described above with reference to fig. 1 and 2, the user device 306 may provide information associated with the input 304 and information about the digital form being accessed to the computing device 322. Computing device 322 may receive this information over network 308 and provide updated digital form 364, populated in accordance with the selected mapping, to user device 306. In some implementations, the functionality of the computing device 322 as described in association with fig. 3 may be performed by the user device 306 and/or other cloud computing devices. In some implementations, the processes described in association with fig. 3 may be performed, at least in part, by computing device 322. In these embodiments, the processes described in association with fig. 3 may also be handled or performed by other cloud computing devices communicatively coupled with one or more of the user device 106 and the computing device 122. In other embodiments, the processes described in association with fig. 3 may be partially or fully performed by user device 306. In these embodiments, network connectivity may not be necessary for user device 306 to perform the steps described in association with fig. 3. For example, user device 306 may perform all operations described in association with fig. 3 locally.
The computing device 322 may receive information over the network 308 by using the network interface 324, which network interface 324 may provide input information 330 to the automatic speech recognizer 332 and information about the digital form 340 to the parser 342. The input information 330 may indicate at least a portion of the input 304, for example, as audio data of recorded speech produced by the user 302. The information about digital form 340 may be information associated with a digital form being accessed by user 302 on user device 306. This information may allow computing device 322 to determine characteristics of the digital form, as well as obtain the digital form itself. For example, this information may include the text contained in the digital form, the layout of the digital form, the fields of the digital form, the source code of the digital form, such as HTML, the text formatting properties of the digital form, and/or the URL of the digital form.
The automatic speech recognizer 332 may receive the input information 330 and obtain acoustic features representing user speech of the input 304. The acoustic features may be mel-frequency cepstral coefficients (MFCCs), Linear Prediction Coefficients (LPCs), or some other audio representation. In some implementations, the automatic speech recognizer 332 can develop word lattices for speech based on the input information 330 and/or acoustic features it extracts from the input information 330. The automatic speech recognizer 332 may also recognize boundaries between one or more of words, syllables, and phones.
Similar to what has been described above with reference to fig. 1 and 2, the word lattice developed by the computing device 322 may include one or more nodes corresponding to possible boundaries between words. Such a word lattice also includes a number of links from node to node of possible words within the appropriate transcription hypothesis resulting from the word lattice. A given transcription hypothesis is formed by a sequence of links along a particular path from a beginning node to an end node of a word lattice. Further, each of these links may have one or more confidence scores that the link is the correct link from the corresponding node. The confidence score is determined by the automatic speech recognizer module 332 and may be based on, for example, the confidence for the match between the speech data of the link and the word and how well the word is grammatically and/or lexically suited to other words in the word lattice.
The word lattice may be processed by an n-gram generator 334. In some implementations, the n-gram generator 334 can be used to generate hypothesis variants for each transcription hypothesis provided in the word lattice developed by the automatic speech recognizer 332. Each hypothesis variant generated by n-gram generator 334 may include one or more n-grams generated from a sequence of words included in the original hypothesis. In some embodiments, the n-grams included in a hypothetical variant comprising a plurality of n-grams can be a sequence of n-grams. The n-grams included in each hypothesis variant may be variants of words from the original hypothesis. For example, the n-grams included in each hypothesis variant may be one or more of a phrase or collection of these words, a concatenation of these words and/or characters in these words, the words themselves, and a segmentation of these words.
In some embodiments, n-gram generator 334 may determine various hypothesis variants for each appropriate transcription hypothesis. Both the word lattice provided by the automatic speech recognizer and the hypothesis variants generated by the n-gram generator may be developed, updated, and maintained in real-time by the automatic speech recognizer 332 and the n-gram generator 334, respectively. That is, the automatic speech recognizer 332 and the n-gram generator 334 may adjust their respective outputs as the user 302 provides additional input 304 to the user device 306.
Populated form samples 354-e.g., forms that have been populated by the user 302 and/or other users and tagged form samples 356-e.g., forms with tagged text entry fields having known target data types can be utilized by the machine learning trainer 352 to train the machine learning system 350 to identify the target data type for each text entry field in the digital form and to determine the extent to which each n-gram corresponds to the target data type for the digital form. The target data type for the text entry field of the form indicates the type of data that the corresponding text entry field is intended to receive.
Within the digital form, the target data type for each text entry field may be reflected by their corresponding tags. The machine learning system trainer 352 may train the machine learning system 350 to simply identify the target data type for each text entry field of the digital form by its corresponding label. For example, the machine learning system trainer 352 may train the machine learning system 350 to recognize that the text entry field labeled "first name" is most likely intended to be the first name and possibly the last name of the user. The target data type identification may be performed by the computing device 322 when it initially accesses the digital form. In some implementations, the respective target data type can be inferred from, for example, context or other information not directly associated with the respective text entry field. For example, one or more target data types for a text entry field may be inferred based at least in part on the type of form to which they belong. In some examples, the data types included in the form may be inferred in view of the nature of the source of the form, e.g., the website.
The machine learning system trainer 352 may develop one or more target data type models and train the machine learning system 350 with the one or more models. For example, the one or more target data type models can define grammatical and/or lexical properties for the n-grams of each target data type. The machine learning system trainer 352 may create and update target data type models and use them to train the machine learning system 350 to more accurately populate digital forms. The target data type model may be created and updated by machine learning system trainer 352 based on the fill form samples 354, the mark up form samples 356, and/or the user information 358.
For example, as the filled-form samples 354 expand to include additional forms filled by the user 302, these models may be refined over time by the machine learning system trainer 352. In this sense, the machine learning system 350 may be able to learn information such as the user's name and date of birth, for example, based on text that the user has historically provided into the "name" field and "date of birth" field, respectively. The target data type model used by the machine learning system 350 may be further enhanced and/or validated through user information 358, which user information 358 may include information about the user's social network, social actions or activities, profession, user preferences, or the user's current location.
The machine learning system 350 may perform n-gram to text entry field mapping in a manner similar to that already described above with reference to fig. 1 and 2. In some implementations, the machine learning system 350 uses a bipartite graph matching algorithm to map n-grams to text entry fields.
By using a target data type model, machine learning system 350 may be able to determine the degree to which a given n-gram, provided by, for example, n-gram generator 334 and included as part of a hypothesis variant, exhibits grammatical and/or lexical characteristics of the target data type for a given text entry field. In some implementations, the degree to which a given n-gram exhibits grammatical and/or lexical properties of the target data type for a given text entry field is determined when the computing device 322 considers the given n-gram to text entry field pair for a given mapping. In these embodiments, one or more of the relevance scores and mapping scores of the pairs may be determined based at least on the degree to which a given n-gram exhibits grammatical and/or lexical properties of the target data type for a given text entry field, as determined based on one or more target data type models maintained by machine learning system trainer 352.
The mapping score for each mapping considered may be generated by the machine learning system 350 based on one or more levels of correspondence between the n-grams and the text entry fields to which each n-gram has been respectively mapped. For example, a relevance score for a given n-gram to text entry field pair for a mapping on which a mapping score may be based at least on: the target data type of the text entry field of the pair identified by the machine learning system 350, the confidence score and/or ranking provided for the word from which the n-gram of the pair was generated as indicated in the word lattice provided by the automatic speech recognizer 332, the relevance scores of the other n-grams of the hypothesis variants, the estimated data type of the n-grams determined based on one or more target data type models maintained by the machine learning system trainer 352, the level of correspondence between the positions of the n-grams in the sequence of n-grams of the hypothesis variants and the positions of the text entry field in the digital form, information retrieved from one or more search fields, fill form samples 354, mark form samples 356, and user information 358. The machine learning system 350 may determine a mapping score based on the determined one or more relevance scores for the mapped one or more n-gram-to-text entry field pairs in a manner similar to that already described above with reference to fig. 1 and 2.
The machine learning system trainer 352 may further train the machine learning system 350 to learn the habits of users and leverage their knowledge of habits to improve the accuracy of their mapping score scheme. For example, machine learning system 350 may learn based on user information 358 and populated form samples 354 completed by user 302 that user 302 typically provides "8000 Volcano Beach Road, Honolulu, Hawaii" to the "address" field of the form when the location of the user included in user information 358 indicates that user 302 is located in Hawaii. In this example, if the machine learning system 350 determines that the user 302 is located in Hawaii while filling out the digital form, the mapping score of the n-gram indicating the address of Hawaii may be advantageously affected, and vice versa.
In another example, the machine learning system 350 may learn that the user 302 almost always skips the text entry fields of the selectable form. In this example, the machine learning system 350 can be trained to identify this feature of the text entry field based on the information provided by the parser 342 and the labeled form samples 356. For this reason, the mapping scores generated by the machine learning system 350 for the maps that exclude the filling of the selectable domains may be advantageously affected.
Once the machine learning system 350 has considered each mapping and the generated mapping score accordingly, the optimizer 360 can evaluate the output of the machine learning system 350 to select a mapping. In some implementations, the optimizer 360 performs mapping functions in place of or in addition to those performed by the machine learning system 350. In some implementations, the mapping with the largest mapping score is selected. Upon selection of a mapping, the optimizer will provide an updated digital form 364 to the user device 306 that reflects the selected mapping. As described above, the digital form may be updated continuously and in real-time by the computing device 322.
FIG. 4 is a flow diagram of an example process 400 for mapping user input to fields of a form and populating the fields of the form with appropriate information. Process 400 is described below as being performed by components of the system described with reference to fig. 1-3. However, process 400 may be performed by other systems or system configurations.
At 410, process 400 may include obtaining a form that includes one or more text entry fields. For example, the user device 106 and/or the computing device 122 may obtain the form 108 that the user has accessed.
At 420, the process may include receiving an input including one or more words. In some examples, the process may include receiving an input including two or more words. For example, the input comprising one or more words may be one or more hypotheses provided for a word lattice generated by the speech, e.g., the word lattice itself and/or individual hypotheses provided by the word lattice. In some implementations, the input comprising one or more words can be a string of characters of text provided by a user, for example, through use of a keyboard. In these embodiments, the user may type a series of characters using the keyboard: "bobjonns 1/8/1960". The computing device may handle this series of characters in a manner similar to the processing of the transcription hypotheses described above.
At 430, the process can include generating a plurality of n-grams from the one or more words. This may be performed, for example, by n-gram generator 334 in generating one or more hypothetical variants that each include one or more n-grams. As described above, the n-grams of the hypothesis variants are generated from the words included in the original hypothesis. In embodiments where the one or more words are a series of characters that the user has typed, multiple variants of the series of characters, including one or more n-grams, may each be generated. In these embodiments, the n-grams included in each variation may be generated in a manner similar to that already described above. For example, a variant of "bobjrones 1/8/1960" may include a first n-gram "Bob Jones" and a second n-gram "1/8/1960". In an exemplary variation of a character series typed by a user, it can be seen that the first n-gram "Bob Jones" is a phrase/collection of segments of the character series.
At 440, the process can include selecting a particular n-gram for a particular text entry field. This may be performed, for example, when evaluating the mapping results and selecting a mapping corresponding to mapping one or more particular n-grams to one or more text entry fields, respectively. In some implementations, this may be performed by a machine learning system, such as the machine learning systems already described above with reference to fig. 1-3, which may develop and update a mapping scoring scheme and determine a mapping score for each mapping considered. A mapping selection may be determined based at least on the generated mapping score.
At 450, the process can include populating a particular text entry field with the selected n-gram. This may be performed, for example, by computing device 122 or 322 when populating the form according to the selected mapping. This may be performed in real time or once it has been determined that the user has finished providing input for the form. The forms 108A-F depict the form 108 as populated according to the mappings determined for the various phases A-F.
In some implementations, the form can be updated concurrently with or immediately after obtaining or receiving information for associating the text entry field with the transcribed portion. Such information may include one or more of information indicating one or more mapping determinations, instructions indicating how the form 108 is to be populated, updates to the form, and updated versions of the form. In some implementations, the process of associating the text entry field with the transcribed portion can still be performed in real-time while the information used to associate the text entry field with the transcribed portion is being processed. In some examples, the form 108 may be updated periodically. In these examples, the user device 106 may periodically update the form 108 according to the current association between the text entry field and the transcribed portion. That is, in some implementations, the association between the text entry field and the transcribed portion resulting from such an association process may be apparent in the form 108 as displayed. In some examples, the process of associating text entry fields with transcribed portions may also be performed periodically.
In some implementations, the form can be updated once it has been determined that the user has finished providing input. For example, the system described herein may determine that a predetermined amount of time has elapsed since the user input has been received and then update the form. In some examples, the form may be an update to the detection of the event. Such events may include receipt of an incoming communication at the user device, expiration of one or more timers, and occurrence of one or more characteristics of a user input, such as receipt of a user-initiated command.
In some implementations, the user may be provided with one or more opportunities to confirm and/or correct the fill form. For example, the user may be presented with an interface that may allow the user to indicate that they want to begin providing input for populating the form, indicate that the form has been incorrectly populated, confirm the current state of the form, and indicate that they have completed providing input for populating the form. In some implementations, this feedback can be utilized to train a machine learning system.
Further, the interface may also allow the user to provide one or more commands. For example, the user may say "grease the form with the following values: ues 'Hans Mueller' as the full name and enter the date of birth as 'February 29,1989' (Please fill the form with the value 'Hans Mueller' as the full name and enter the date of birth as '29/2 1989') to provide the mapping instructions. In these embodiments, the computing system may recognize the user's command and select a mapping with "Hans Mueller" corresponding to the name field and "February 29,1989" corresponding to the date of birth field. In some implementations, the mapping scoring schema may be modified with commands provided by a user and recognized by a computing device.
In some implementations, the computing device can modify one or more generated n-grams. This may include replacing information included in the n-gram with additional information or augmenting such n-gram. In some embodiments, such modification is performed immediately following the selection of the mapping. In some embodiments, such modifications are performed during n-gram generation by generating additional hypothetical variants that include the modified n-gram. In either case, the n-gram modification can be influenced by machine learning techniques and associated with the mapping score determined for its mapping.
In some embodiments, the mappings performed in any of the methods and systems of FIGS. 1-4 are injective and non-flood mappings of the n-gram for each variant of the word or words. In some embodiments, the mappings performed in any of the methods and systems of fig. 1-4 are non-unigram and non-floodgram mappings of one or more words. In these implementations, various non-unigram and non-floodgram mappings of one or more words to a form may be considered. For example, one or more words may belong to a transcription hypothesis. One or more optimization processes, such as bipartite graph matching, graph cutting, and Hungarian algorithms, may be utilized in selecting particular non-single-fire and non-full-fire mappings. In these embodiments, communication between the user device and the computing device may be performed in a manner similar to that already described above.
Fig. 5 illustrates an example of a computing device 500 and a mobile computing device 550 that can be used to implement the techniques described herein. Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. The mobile computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to be limiting.
The memory 504 stores information within the computing device 500. In some implementations, the memory 504 is a volatile memory unit or units. In some implementations, the memory 504 is a non-volatile memory unit or units. The memory 504 may also be another form of computer-readable medium, such as a magnetic or optical disk.
The storage device 506 is capable of providing mass storage for the computing device 500. In some implementations, the storage device 506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state storage device, or an array of devices including devices in a storage area network or other configurations. The instructions can be stored on an information carrier. When executed by one or more processing devices, such as processor 502, the instructions perform one or more methods, such as those described above. The instructions can also be stored by one or more storage devices, such as a computer or machine readable medium, for example, memory 504, storage device 506, or memory on processor 502.
The high-speed interface 508 manages bandwidth-intensive operations for the computing device 500, while the low-speed interface 512 manages lower bandwidth-intensive operations. This allocation of functionality is merely illustrative. In some implementations, the high-speed interface 508 is coupled to memory 504, display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510, which may accept various expansion cards (not shown). In an implementation, low-speed interface 512 is coupled to storage device 506 and low-speed expansion port 514. The low-speed expansion port 514, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled to one or more input/output devices such as a keyboard, a pointing device, a scanner, or a network device such as a switch or router, for example, through a network adapter.
As shown, computing device 500 may be implemented in a number of different forms. For example, it may be implemented as a standard server 520, or multiple times in a group of such servers. Further, it may be implemented in a personal computer such as laptop computer 522. It may also be implemented as part of a rack server system 524. Alternatively, components from computing device 500 may be combined with other components in a mobile device (not shown), such as mobile computing device 550. Each of these devices may contain one or more computing devices 500 and mobile computing device 550, and an entire system may be made up of multiple computing devices in communication with each other.
The processor 552 can execute instructions within the mobile computing device 550, including instructions stored in the memory 564. Processor 552 may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor 552 may, for example, provide for coordination of the other components of the mobile computing device 550, such as control of user interfaces, applications run by the mobile computing device 550, and wireless communication by the mobile computing device 550.
The processor 552 may communicate with a user through a control interface 558 and a display interface 556 coupled to a display 554. The display 554 may be, for example, a TFT LCD (thin film transistor liquid Crystal display) or OLED (organic light emitting diode) display or other suitable display technology. The display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user. The control interface 558 may receive commands from a user and convert them for submission to the processor 552. In addition, the external interface 562 may provide communication with the processor 552, so as to enable near field communication of the mobile computing device 550 with other devices. External interface 562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
The memory 564 stores information within the mobile computing device 550. The memory 564 can be implemented as one or more of a computer-readable medium, volatile memory units, or nonvolatile memory units. Expansion memory 574 may also be provided and connected to mobile computing device 550 through expansion interface 572, which may include, for example, a SIMM (Single in line memory Module) card interface. Expansion memory 574 may provide additional storage space for mobile computing device 550, or may also store applications or other information for mobile computing device 550. In particular, expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, the expansion memory 574 may be provided as a security module for the mobile computing device 550, and may be programmed with instructions that permit secure use of the mobile computing device 550. In addition, secure applications may be provided via the SIMM card as well as additional information, such as placing identifying information on the SIMM card in a non-offensive manner.
As described below, the memory may include, for example, flash memory and/or NVRAM memory (non-volatile random access memory). In some implementations, instructions are stored on an information carrier that, when executed by one or more processing devices, such as processor 552, perform one or more methods, such as those described above. The instructions can also be stored by one or more storage devices, such as one or more computers or machine-readable media, e.g., memory 564, expansion memory 574, or memory on processor 552. In some implementations, the instructions can be received via transceiver 568 or external interface 562 as, for example, a propagated signal.
The mobile computing device 550 may also communicate audibly using the audio codec 560, and the audio codec 560 may receive spoken information from the user and convert it to usable digital information. The audio codec 560 may likewise generate audible sound for the user, such as through a speaker, e.g., in a microphone of the mobile computing device 550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.), and may also include sound generated by applications operating on the mobile computing device 550.
As shown, the mobile computing device 550 may be implemented in a number of different forms. For example, it may be implemented as a cellular telephone 580. It may also be implemented as part of a smartphone 582, personal digital assistant, or other similar mobile device.
Embodiments of the subject matter, the functional operations and the processes described in this specification can be implemented in digital electronic circuitry, in tangible computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of these components. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible, non-volatile program carrier for execution by, or to be operated on by, a data processing apparatus. Alternatively or in addition, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated for execution by a data processing apparatus to encode information for transmission to suitable receiver apparatus. The computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of these devices.
The term "data processing apparatus" encompasses all types of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. An apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). In addition to hardware, an apparatus can also include code that generates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of these components.
A computer program, which may also be referred to or described as a program, software application, module, software module, script, or code, can be written in the form of a programming language, including compiled or interpreted languages, or declarative or procedural languages, and can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data, such as one or more scripts stored in a markup language file, in a single file dedicated to the program in question, or in multiple coordinated files, such as files that store one or more modules, sub programs, or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Computers suitable for executing computer programs include, by way of example, those that can be based on general or special purpose microprocessors or both, or any other type of central processing unit. Generally, a central processing unit will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a central processing unit for executing or carrying out instructions, and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, computers do not require these devices. Further, a computer can be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a Universal Serial Bus (USB) flash drive, to name a few.
Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, computers can interact with users by sending and receiving files to and from devices used by the users; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the internet.
The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are shown in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain situations, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program combinations and systems can generally be integrated together in a single software product or packaged into multiple software products.
Specific embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes illustrated in the figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous. Other steps may be provided, or steps may be eliminated, from the described processes. Accordingly, other implementations are within the scope of the following claims.
Claims (13)
1. A computer-implemented method for populating forms using speech input, comprising:
obtaining, by a parser of a voice form filling system, a form on a user device, wherein the form includes one or more text entry fields, wherein each text entry field is associated with a respective target data type, and wherein i) the parser, ii) an automatic speech recognizer, iii) an n-gram generator, iv) a machine learning system, and v) an optimizer are implemented on the voice form filling system;
providing, by the voice form filling system, the form for display on a display of the user device;
receiving, by the automatic speech recognizer, audio data corresponding to the spoken input captured by a microphone of the user device;
obtaining, by the automatic speech recognizer, one or more transcription hypotheses using the audio data, each transcription hypothesis including one or more words included in the spoken input;
generating, by the n-gram generator, a plurality of n-grams from the one or more words;
determining, by the machine learning system, a mapping score based at least on the respective target data type associated with each of the one or more text entry fields, the mapping score indicating a confidence that the text entry field associated with the respective target data type will be populated by each of the plurality of n-grams;
selecting, by the optimizer, a particular n-gram from among the plurality of n-grams for a particular text entry field based at least on a particular mapping score associated with the particular text entry field for the particular n-gram; and
updating, by the optimizer, the form provided for display on the display of the user device to populate the particular text entry field with the particular n-gram.
2. The computer-implemented method of claim 1, further comprising:
selecting a second n-gram, different from the particular n-gram, from among the plurality of n-grams for another text entry field of the one or more text entry fields that is different from the particular text entry field based at least on a mapping score for the other text entry field; and
populating the other text entry field with the second n-gram.
3. The computer-implemented method of claim 1, wherein generating a plurality of n-grams from the one or more words comprises generating one or more n-grams from each transcription hypothesis of the one or more transcription hypotheses.
4. The computer-implemented method of claim 3, further comprising:
determining, by the machine learning system, for each of one or more of the one or more transcription hypotheses, one or more confidence scores, each of the confidence scores indicating a confidence that the respective one or more words in that transcription hypothesis correctly represent the one or more words included in the spoken input, and
wherein selecting the particular n-gram for the particular text entry field comprises: selecting the particular n-gram for the particular text entry field from among the plurality of n-grams based at least on the mapping score, the mapping score indicating a confidence that the particular text entry field associated with the respective target data type will be filled by the particular n-gram and one or more confidence scores associated with a particular transcription hypothesis from which the particular n-gram was generated.
5. The computer-implemented method of claim 1, further comprising:
determining, by the parser, the respective target data types associated with the one or more text entry fields; and
accessing, by the machine learning system, one or more target data type models based on the respective target data types associated with the one or more text entry fields, the one or more target data type models indicating one or more of grammatical and lexical characteristics associated with words of the respective target data types, and
wherein selecting the particular n-gram for the particular text entry field comprises: selecting the particular n-gram for the particular text entry field from among the plurality of n-grams based on at least one or more of (i) grammars and lexical characteristics associated with words of the target data type associated with the particular text entry field and (ii) grammars and lexical characteristics associated with the particular n-gram.
6. The computer-implemented method of claim 5, wherein determining the respective target data types associated with the one or more text entry fields comprises: determining the respective target data type associated with the one or more text entry fields based at least on one or more tags included in the form associated with the one or more text entry fields.
7. A voice form filling system comprising one or more computers and one or more storage devices, wherein i) a parser, ii) an automatic speech recognizer, iii) an n-gram generator, iv) a machine learning system, and v) an optimizer are implemented on the voice form filling system, and wherein the one or more storage devices store instructions that when executed by the one or more computers cause the one or more computers to perform operations comprising:
obtaining, by the parser, a form on a user device, wherein the form includes one or more text entry fields, wherein each text entry field is associated with a respective target data type;
providing, by the voice form filling system, the form for display on a display of the user device;
receiving, by the automatic speech recognizer, audio data corresponding to the spoken input captured by a microphone of the user device;
obtaining, by the automatic speech recognizer, one or more transcription hypotheses using the audio data, each transcription hypothesis including one or more words included in the spoken input;
generating, by the n-gram generator, a plurality of n-grams from the one or more words;
determining, by the machine learning system, a mapping score based at least on a respective target data type associated with each particular text entry field of the one or more text entry fields, the mapping score indicating a confidence that the text entry field associated with the respective target data type will be populated by each n-gram of the plurality of n-grams;
selecting, by the optimizer, a particular n-gram from among the plurality of n-grams for a particular text entry field based at least on a particular mapping score associated with the particular text entry field for the particular n-gram; and
updating, by the optimizer, the form provided for display on the display of the user device to populate the particular text entry field with the particular n-gram.
8. The voice-form filling system of claim 7, the operations further comprising:
selecting a second n-gram, different from the particular n-gram, from among the plurality of n-grams for another text entry field of the one or more text entry fields that is different from the particular text entry field based at least on a mapping score for the other text entry field; and
populating the other text entry field with the second n-gram.
9. The phonetic form filling system of claim 7, wherein generating a plurality of n-grams from the one or more words includes generating one or more n-grams from each of the one or more transcription hypotheses.
10. The voice-form filling system of claim 9, the operations further comprising:
determining, by the machine learning system, for each of one or more of the one or more transcription hypotheses, one or more confidence scores, each of the confidence scores indicating a confidence that the respective one or more words in that transcription hypothesis correctly represent the one or more words included in the spoken input, and
wherein selecting the particular n-gram for the particular text entry field comprises: selecting the particular n-gram for the particular text entry field from among the plurality of n-grams based at least on the mapping score, the mapping score indicating a confidence that the particular text entry field associated with the respective target data type will be filled by the particular n-gram and one or more confidence scores associated with a particular transcription hypothesis from which the particular n-gram was generated.
11. The voice-form filling system of claim 7, the operations further comprising:
determining, by the parser, the respective target data types associated with the one or more text entry fields; and
accessing, by the machine learning system, one or more target data type models based on the respective target data types associated with the one or more text entry fields, the one or more target data type models indicating one or more of grammatical and lexical characteristics associated with words of the respective target data types, and
wherein selecting the particular n-gram for the particular text entry field comprises: selecting the particular n-gram for the particular text entry field from among the plurality of n-grams based on at least one or more of (i) grammars and lexical characteristics associated with words of the target data type associated with the particular text entry field and (ii) grammars and lexical characteristics associated with the particular n-gram.
12. The voice-form filling system of claim 11, wherein determining the respective target data types associated with the one or more text-entry fields comprises: determining the respective target data type associated with the one or more text entry fields based at least on one or more tags included in the form associated with the one or more text entry fields.
13. A non-transitory computer-readable storage medium storing instructions that, when executed by one or more computers, cause the one or more computers to perform operations comprising:
obtaining, by a parser of a voice form filling system, a form on a user device, wherein the form includes one or more text entry fields, wherein each text entry field is associated with a respective target data type, and wherein i) the parser, ii) an automatic speech recognizer, iii) an n-gram generator, iv) a machine learning system, and v) an optimizer are implemented on the voice form filling system;
providing, by the voice form filling system, the form for display on a display of the user device;
receiving, by the automatic speech recognizer, audio data corresponding to the spoken input captured by a microphone of the user device;
obtaining, by the automatic speech recognizer, one or more transcription hypotheses using the audio data, each transcription hypothesis including one or more words included in the spoken input;
generating, by the n-gram generator, a plurality of n-grams from the one or more words;
determining, by the machine learning system, a mapping score based at least on the respective target data type associated with each of the one or more text entry fields, the mapping score indicating a confidence that the text entry field associated with the respective target data type will be populated by each of the plurality of n-grams;
selecting, by the optimizer, a particular n-gram from among the plurality of n-grams for a particular text entry field based at least on a particular mapping score associated with the particular text entry field for the particular n-gram; and
updating, by the optimizer, the form provided for display on the display of the user device to populate the particular text entry field with the particular n-gram.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/681,408 | 2015-04-08 | ||
US14/681,408 US20160300573A1 (en) | 2015-04-08 | 2015-04-08 | Mapping input to form fields |
PCT/US2016/025276 WO2016164251A1 (en) | 2015-04-08 | 2016-03-31 | Mapping input to form fields |
Publications (2)
Publication Number | Publication Date |
---|---|
CN107430859A CN107430859A (en) | 2017-12-01 |
CN107430859B true CN107430859B (en) | 2021-04-13 |
Family
ID=55702175
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680020630.2A Active CN107430859B (en) | 2015-04-08 | 2016-03-31 | Mapping input to form fields |
Country Status (3)
Country | Link |
---|---|
US (1) | US20160300573A1 (en) |
CN (1) | CN107430859B (en) |
WO (1) | WO2016164251A1 (en) |
Families Citing this family (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10776571B2 (en) * | 2016-05-04 | 2020-09-15 | Google Llc | Dispatch of user input to multiple input fields in a user interface |
CN107193973B (en) * | 2017-05-25 | 2021-07-20 | 百度在线网络技术（北京）有限公司 | Method, device and equipment for identifying field of semantic analysis information and readable medium |
CN109241517B (en) * | 2017-07-10 | 2022-10-04 | 北京搜狗科技发展有限公司 | Entry learning method, device and equipment |
US11861298B1 (en) * | 2017-10-20 | 2024-01-02 | Teletracking Technologies, Inc. | Systems and methods for automatically populating information in a graphical user interface using natural language processing |
JP7004955B2 (en) * | 2017-12-11 | 2022-01-21 | トヨタ自動車株式会社 | How to provide services by service providing equipment, service providing programs and voice recognition |
CN108287815A (en) * | 2017-12-29 | 2018-07-17 | 重庆小雨点小额贷款有限公司 | Information input method, device, terminal and computer readable storage medium |
US10417328B2 (en) * | 2018-01-05 | 2019-09-17 | Searchmetrics Gmbh | Text quality evaluation methods and processes |
CN110110292B (en) * | 2018-01-29 | 2023-11-14 | 北京搜狗科技发展有限公司 | Data processing method and device for data processing |
CN108960046A (en) * | 2018-05-23 | 2018-12-07 | 北京图森未来科技有限公司 | A kind of training data method of sampling and its device, computer server |
CN108763565B (en) * | 2018-06-04 | 2022-06-14 | 广东京信软件科技有限公司 | Deep learning-based data automatic association matching construction method |
EP3857330A1 (en) * | 2018-09-27 | 2021-08-04 | Google LLC | Automatic navigation of interactive web documents |
CN109360571A (en) * | 2018-10-31 | 2019-02-19 | 深圳壹账通智能科技有限公司 | Processing method and processing device, storage medium, the computer equipment of credit information |
US11043214B1 (en) * | 2018-11-29 | 2021-06-22 | Amazon Technologies, Inc. | Speech recognition using dialog history |
US10853576B2 (en) * | 2018-12-13 | 2020-12-01 | Hong Kong Applied Science and Technology Research Institute Company Limited | Efficient and accurate named entity recognition method and apparatus |
US10990351B2 (en) * | 2019-02-13 | 2021-04-27 | GICSOFT, Inc. | Voice-based grading assistant |
US20200410601A1 (en) * | 2019-06-25 | 2020-12-31 | Verata Health, Inc. | Automated prior authorization request generation and tracking |
US20210004832A1 (en) | 2019-07-05 | 2021-01-07 | Talkdesk, Inc. | System and method for escalation using agent assist within a cloud-based contact center |
US11328205B2 (en) | 2019-08-23 | 2022-05-10 | Talkdesk, Inc. | Generating featureless service provider matches |
US11127073B2 (en) * | 2019-10-03 | 2021-09-21 | Capital One Services, Llc | Systems and methods for obtaining user parameters of e-commerce users to auto complete checkout forms |
US11308265B1 (en) * | 2019-10-11 | 2022-04-19 | Wells Fargo Bank, N.A. | Digitally aware neural dictation interface |
CN110796180B (en) * | 2019-10-12 | 2022-06-07 | 吉林大学 | Model training system and method based on artificial intelligence |
US20210117882A1 (en) | 2019-10-16 | 2021-04-22 | Talkdesk, Inc | Systems and methods for workforce management system deployment |
US20210136220A1 (en) | 2019-10-31 | 2021-05-06 | Talkdesk, Inc. | Monitoring and listening tools across omni-channel inputs in a graphically interactive voice response system |
CN110931010A (en) * | 2019-12-17 | 2020-03-27 | 用友网络科技股份有限公司 | Voice control system |
US11736615B2 (en) | 2020-01-16 | 2023-08-22 | Talkdesk, Inc. | Method, apparatus, and computer-readable medium for managing concurrent communications in a networked call center |
US11163944B2 (en) * | 2020-01-21 | 2021-11-02 | International Business Machines Corporation | Alignment of content entry with online form fields |
US11755661B2 (en) * | 2020-03-31 | 2023-09-12 | Roche Molecular Systems, Inc. | Text entry assistance and conversion to structured medical data |
US11734511B1 (en) * | 2020-07-08 | 2023-08-22 | Mineral Earth Sciences Llc | Mapping data set(s) to canonical phrases using natural language processing model(s) |
CA3125845C (en) * | 2020-07-24 | 2023-12-12 | Bola Technologies, Inc. | Systems and methods for voice assistant for electronic health records |
CN114840563B (en) * | 2021-02-01 | 2024-05-03 | 腾讯科技（深圳）有限公司 | Method, device, equipment and storage medium for generating field description information |
US11677875B2 (en) | 2021-07-02 | 2023-06-13 | Talkdesk Inc. | Method and apparatus for automated quality management of communication records |
US11816582B2 (en) * | 2021-10-21 | 2023-11-14 | Snowflake Inc. | Heuristic search for k-anonymization |
CN114462364B (en) * | 2022-02-07 | 2023-01-31 | 北京百度网讯科技有限公司 | Method and device for inputting information |
US11856140B2 (en) | 2022-03-07 | 2023-12-26 | Talkdesk, Inc. | Predictive communications system |
US11755837B1 (en) * | 2022-04-29 | 2023-09-12 | Intuit Inc. | Extracting content from freeform text samples into custom fields in a software application |
US11736616B1 (en) | 2022-05-27 | 2023-08-22 | Talkdesk, Inc. | Method and apparatus for automatically taking action based on the content of call center communications |
US11971908B2 (en) | 2022-06-17 | 2024-04-30 | Talkdesk, Inc. | Method and apparatus for detecting anomalies in communication data |
US11943391B1 (en) | 2022-12-13 | 2024-03-26 | Talkdesk, Inc. | Method and apparatus for routing communications within a contact center |
Family Cites Families (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6813603B1 (en) * | 2000-01-26 | 2004-11-02 | Korteam International, Inc. | System and method for user controlled insertion of standardized text in user selected fields while dictating text entries for completing a form |
CN1232920C (en) * | 2000-05-17 | 2005-12-21 | 微软公司 | System and method for matching textual input to lexical knowledge base and for utilizing results of that match |
US20030154085A1 (en) * | 2002-02-08 | 2003-08-14 | Onevoice Medical Corporation | Interactive knowledge base system |
WO2005017457A1 (en) * | 2003-08-18 | 2005-02-24 | Matsushita Electric Industrial Co., Ltd. | Voice guide device |
US8812321B2 (en) * | 2010-09-30 | 2014-08-19 | At&T Intellectual Property I, L.P. | System and method for combining speech recognition outputs from a plurality of domain-specific speech recognizers via machine learning |
US9245525B2 (en) * | 2011-01-05 | 2016-01-26 | Interactions Llc | Automated speech recognition proxy system for natural language understanding |
EP2834725A4 (en) * | 2012-04-07 | 2015-12-09 | Motorola Mobility Llc | Text select and enter |
GB2505400B (en) * | 2012-07-18 | 2015-01-07 | Toshiba Res Europ Ltd | A speech processing system |
US9123335B2 (en) * | 2013-02-20 | 2015-09-01 | Jinni Media Limited | System apparatus circuit method and associated computer executable code for natural language understanding and semantic content discovery |
EP3007165B1 (en) * | 2013-05-31 | 2018-08-01 | Yamaha Corporation | Technology for responding to remarks using speech synthesis |
CN104426857B (en) * | 2013-08-26 | 2018-10-12 | 中国移动通信集团公司 | A kind of method, system and device to client data verification |
-
2015
- 2015-04-08 US US14/681,408 patent/US20160300573A1/en not_active Abandoned
-
2016
- 2016-03-31 CN CN201680020630.2A patent/CN107430859B/en active Active
- 2016-03-31 WO PCT/US2016/025276 patent/WO2016164251A1/en active Application Filing
Also Published As
Publication number | Publication date |
---|---|
WO2016164251A1 (en) | 2016-10-13 |
CN107430859A (en) | 2017-12-01 |
US20160300573A1 (en) | 2016-10-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN107430859B (en) | Mapping input to form fields | |
CN111710333B (en) | Method and system for generating speech transcription | |
US9286892B2 (en) | Language modeling in speech recognition | |
US9711141B2 (en) | Disambiguating heteronyms in speech synthesis | |
US9805713B2 (en) | Addressing missing features in models | |
CN109844740B (en) | Follow-up voice query prediction | |
CN110110319B (en) | Word level correction of speech input | |
US9275635B1 (en) | Recognizing different versions of a language | |
US9594744B2 (en) | Speech transcription including written text | |
KR102390940B1 (en) | Context biasing for speech recognition | |
US9576578B1 (en) | Contextual improvement of voice query recognition | |
US11016968B1 (en) | Mutation architecture for contextual data aggregator | |
US10096317B2 (en) | Hierarchical speech recognition decoder | |
CN110869923A (en) | Generating sub-queries from a query |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
CB02 | Change of applicant information | ||
CB02 | Change of applicant information |
Address after: American CaliforniaApplicant after: Google limited liability companyAddress before: American CaliforniaApplicant before: Google Inc. |
|
GR01 | Patent grant | ||
GR01 | Patent grant |
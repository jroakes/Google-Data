FIELD OF THE INVENTION
The present invention relates generally to information extraction and, more particularly, to methods and systems for retrieval of information items and associated sentence fragments.
BACKGROUND OF THE INVENTION
Search engines can be used to locate documents from a large collection of documents, such as documents stored on a computer or in a distributed database, such as the World Wide Web (WWW) or an intranet. Search engines can compile and organize an index of documents by crawling or reading documents, such as web pages. Generally, such indexes are organized so that the index associates the contents of the documents, such as words and images, with the respective documents. The search engine can locate documents in response to a search query by matching terms or partial terms from a search query with the contents of the documents. A search result set generated by a search engine in response to a search query generally contains links to previously indexed documents.
Some users of search engines may be searching for specific information, such as a date or the name of a person or a place. If a user enters a search query for a specific information item in a search engine, the search engine may generate a search result set containing links to previously indexed documents. The search result set may contain a summary or snippet of each document. While the summaries or snippets may be based on the search query, they may not contain the user's desired specific information item. This may require the user to select (or “click on”) several of the documents cited in the search result set and review the documents to find the information sought. Reviewing documents linked to in a search result set to identify the specific information item may be cumbersome and time consuming for the user.
SUMMARY
Embodiments of the present invention comprise methods and systems for retrieval of information items and associated sentence fragments. One aspect of one embodiment of the present invention comprises identifying at least a first entry in an index relevant to a search query and generating a search result set relevant to the search query comprising at least the first information item contained in the first entry. The first entry may also comprise a first associated sentence fragment, and the index may comprise a plurality of information items and associated sentence fragments.
This illustrative embodiment is mentioned not to limit or define the invention, but to provide one example to aid understanding thereof. Illustrative embodiments are discussed in the Detailed Description, and further description of the invention is provided there. Advantages offered by the various embodiments of the present invention may be further understood by examining this specification.
BRIEF DESCRIPTION OF THE DRAWINGS
These and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:
FIG. 1 shows a diagram of a system in accordance with one embodiment of the present invention;
FIG. 2 shows one embodiment of an illustrative method according to one embodiment of the present invention;
FIG. 3 shows one embodiment of another illustrative method according to one embodiment of the present invention;
FIG. 4 shows one embodiment of another illustrative method according to one embodiment of the present invention;
FIG. 5 shows an illustrative search engine interface and search results document according to one embodiment of the present invention;
FIG. 6 shows an illustrative search engine interface and search results document according to one embodiment of the present invention;
FIG. 7 shows an illustrative search engine interface and search results document according to one embodiment of the present invention;
FIG. 8 shows an illustrative search engine interface and search results document according to one embodiment of the present invention; and
FIG. 9 shows an illustrative search engine interface and search results document according to one embodiment of the present invention.
DETAILED DESCRIPTION
Introduction
Embodiments of the present invention comprise methods and systems for retrieval of information items and associated sentence fragments. There are multiple embodiments of the present invention. By way of introduction and example, one illustrative embodiment of the present invention provides a method for retrieving a specific information item (such as a date or entity name) and a sentence fragment associated with the information item in response to a search query. The information item and sentence fragment may be located in or otherwise associated with an index.
In one such method, the index includes a number of information items, such as dates, entity names, or concepts, and each information item in the index has an associated sentence fragment. The index may be created by extracting information items and associated sentence fragments from documents indexed by a search engine and/or documents from other suitable sources where the information is organized systematically in semi-structured form. An entry in the index can include an information item, such as a date, “1990”, and an associated sentence fragment, “the newly unified Germany replaced West Germany as a NATO member.” The date may be a date in close proximity to the associated sentence fragment extracted from a document or a date determined to be associated with the sentence fragment in another suitable manner. The method utilizes the index to identify index entries relevant to a search query. The identified entries are ranked, and the top ranked one or more entries are selected and included in a search result set, which can be output in response to the search query.
A user may enter a search query “Germany unified” and be interested in the date that this occurred. The entry provided in the example above can be identified from an index and included in a search result set sent to a user. Thus, a user viewing the search result set is provided with specific information, such as “1990—the newly unified Germany replaced West Germany as a NATO member,” in response to the search query. A search result set can contain multiple information items and multiple associated sentence fragments. The search result set can also be displayed in a timeline format.
An information item, as used herein, may include a date, a name, such as of a person, place, or entity, and a concept. A sentence fragment, as used herein, may include a syntactic clause containing factual information. A sentence fragment may or may not be part of or associated with a complete sentence. A document, as used herein, may include web pages of various formats, such as HTML, XML, and XHTML, Portable Document Format (PDF) files, electronic mail messages, instant messenger messages, and word processor, database, and application program document files, audio, video, or any other documents or information of any suitable type whatsoever made available on a network, a personal computer, or other computing or storage means. The embodiments described herein are described generally in relation to HTML documents, but embodiments may operate on any suitable type of document.
This introduction is given to introduce the reader to the general subject matter of the application. By no means is the invention limited to such subject matter. Illustrative embodiments are described below.
System Architecture
Various systems in accordance with the present invention may be constructed. FIG. 1 is a diagram showing an illustrative system in which illustrative embodiments of the present invention may operate. The present invention may operate, and be embodied in, other systems as well.
Referring now to the drawings in which like numerals indicate like elements throughout the several figures, FIG. 1 is a diagram showing an illustrative environment for implementation of an embodiment of the present invention. The system 100 shown in FIG. 1 comprises a client device 102 in communication with a server device 104 via the network 106. FIG. 1 also shows a server device 150 in communication with the server device 104 over a network 106. In one embodiment, the network 106 shown comprises the Internet. The network may also comprise an intranet, a Local Area Network (LAN), a telephone network, or a combination of suitable networks. The client device 102 and server devices 104 and 150 may connect to the network through wired, wireless, or optical connections.
According to the embodiment shown in FIG. 1, the server device 104 can contain a search engine 120. The search engine may create a document index, such as a web page index, and store the indexed documents. The search engine may also create or have access to an information item index of information item—sentence fragment pairs. The search engine 120 can receive a search query from a client device 102 and locate information item—sentence fragment pairs and/or documents relevant to the query. The search engine 120 may output a search result set including information item—sentence fragment pairs and/or links to documents to the client device 102 in response to the search query.
According to the embodiment shown in FIG. 1, the server device 150 can contain an extraction engine 152. In one embodiment, the extraction engine 152 can create an information item index by extracting information item—sentence fragment pairs from documents indexed and stored by the search engine 120. The extraction engine 152 may also extract and index information item—sentence fragment pairs from documents contained in another corpus of documents. In one embodiment, the extraction engine 152 may reside on a client device, such as client device 102, or may reside in the search engine 120. The information item index may be located on storage device 170 or storage device 122 and may be accessed by search engine 120.
Client Devices
Examples of client device 102 are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, a client device 102 may be any suitable type of processor-based platform that is connected to a network 106 and that interacts with one or more application programs. The client device 102 can contain a processor 108 coupled to a computer readable medium, such as memory 110. Client device 102 may operate on any operating system capable of supporting a browser or browser-enabled application, such as MICROSOFT WINDOWS or LINUX. The client device 102 is, for example, a personal computer executing a browser application program such as MICROSOFT CORPORATION'S INTERNET EXPLORER, NETSCAPE COMMUNICATION CORPORATION'S NETSCAPE NAVIGATOR, MOZILLA ORGANIZATION'S FIREFOX, APPLE COMPUTER, INC.'S SAFARI, OPERA SOFTWARE′S OPERA WEB BROWSER, and the open source LINUX BROWSER. A user 112 can interact with the client device 102 and browser application program to input search queries. The client device 102 can send search queries input by the user 112 to the search engine 120 and receive search result sets from the search engine 120. The client device 102 and browser application program can display the search result sets to the user 112.
Server Devices
The server devices 104 and 150 shown in FIG. 1 each contain a processor 116 and 156 coupled to a computer-readable medium, such as memory 118 and 154. Server devices 104 and 150 also contain computer readable medium storage devices 122 and 170, such as magnetic disk storage devices. Server devices 104 and 150, depicted as single computer systems, may be implemented as a network of computer processors. Examples of server devices 104, 150 are servers, mainframe computers, networked computers, processor-based devices, and similar types of systems and devices. Client processor 108, server processor 116 and server processor 156 can be any of a number of computer processors, as described below, such as processors from INTEL CORPORATION of Santa Clara, Calif. and MOTOROLA CORPORATION of Schaumburg, Ill.
Such processors may include a microprocessor, an ASIC, and state machines. Such processors include, or may be in communication with computer-readable media, which stores pre gram code or instructions that, when executed by the processor, cause the processor to perform actions. Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 116 of server device 104, with computer-readable instructions. Other examples of suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, optical media, magnetic tape media, or any other suitable medium from which a computer processor can read instructions. Also, various other forms of computer-readable media may transmit or carry program code or instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless. The instructions may comprise program code from any computer-programming language, including, for example, C, C++, C#, VISUAL BASIC, JAVA, PYTHON, PERL, and JAVASCRIPT. Program code running on the server devices 104 and 150 may include web server software, such as the open source APACHE WEB SERVER and the INTERNET INFORMATION SERVER (IIS) from MICROSOFT CORPORATION.
Search Engine
Memory 118 of the server device 104 contains a search engine application program, also known as a search engine 120. The search engine 120 comprises a software application including program code executable by the processor 116 or a hardware application that is configured to facilitate locating indexed information item—sentence fragment pairs relevant to search queries received from a client device 102. The search engine 120 may also be configured to create an index of documents and locate indexed documents relevant to a search query from the client device 102. The indexed information item—sentence fragment pairs and indexed documents may be stored in the storage device 122. The search engine 120 illustrated in FIG. 1 comprises a query processor 124 and search result processor 126.
In one embodiment, the query processor 124 processes a received search query by, for example, identifying tokens in the search query and removing unnecessary tokens or words, such as stop words, from the search query. In one embodiment, the search result processor 126 identifies information item—sentence fragment pairs from an information item index relevant to a processed search query received from the query processor 124. The search result processor 126 may also rank the identified information item—sentence fragment pairs and create a search result set including one or more information item and associated sentence fragment. The search result set may also include links to documents identified by the search result processor 126 as relevant to the search query. The search result processor 126 may output the search result set via the network 106 to the client device 102 that sent the search query.
Extraction Engine
Memory 154 of the server device 150 contains an information extraction application program, also known as an extraction engine 152. The extraction engine 152 comprises a software application including program code executable by the processor 156 or a hardware application that is configured to facilitate identifying and extracting information item—sentence fragment pairs to create an index of information item—sentence fragment pairs. The extraction engine 152 may identify a document in an index relating to any suitable corpus of documents. The extraction engine 152 may access documents indexed by the search engine 120 to identify and extract information item—sentence fragment pairs. The extraction engine may also access an index of semi-structured information, such as, for example, encyclopedias and dictionaries. In the case of encyclopedias, the information items may be the subjects in the encyclopedia and the sentence fragments may be part of subjects' associated articles. With dictionaries, the information items may be words and the sentence fragments may be the words' associated definitions.
It should be noted that the present invention may comprise systems having different architecture than that which is shown in FIG. 1. For example, in some systems according to the present invention, extraction engine 152 may be contained in search engine 120. The system 100 shown in FIG. 1 is merely illustrative, and is used to help explain the illustrative systems and processes discussed below.
Illustrative Process for Retrieving Information Items and Associated Sentence Fragments
Various methods in accordance with embodiments of the present invention may be carried out. FIG. 2 illustrates an illustrative method 200 for retrieving information items and associated sentence fragments from an index that may be implemented by search engine 120 shown in FIG. 1. This illustrative method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention. The method 200 shown in FIG. 2 can be executed or otherwise performed by one or a combination of various systems. The system shown in FIG. 1 and described above is used for illustration purposes.
The illustrative method 200 begins in block 202 where a search query is received. The search query can be received from a client device 102 over a network 106 by query processor 124. In one embodiment, a user 112 may enter a search query in a browser application on the client device 102. The search query may indicate that the user is interested in one or more information items. In one embodiment, the user may select an information item search through the search engine interface on the browser application. For example, FIG. 5 shows an illustrative embodiment of a search engine interface and results page 500. The search engine interface shown in FIG. 5 includes information item search buttons, such as buttons for Date Search 512, Entity Search 514, and Concept Search 516. In this example, the user 112 can enter a search query, such as “Germany unified”, in a search field 510 and select the “Date Search” button 512 to indicate that the user is interested in a date or dates associated with “Germany unified”. Alternatively, the search engine interface may allow a user to select a preference so that information items are included in search result sets. In one embodiment, the query processor 124 may identify that the search query seeks an information item, such as a date or name. For example, if the search query received is “when was Germany unified”, the query processor 124 can identify the term “when” and interpret the query as looking for a date or dates associated with “Germany unified”.
The wh-term (“when”) is just one of the explicit or implicit clues that a query may contain to indicate that the desired result is a date. In order to capture other forms, such as “What year” in “What year was Germany unified”, or “What day” in “What day was Germany unified”, the queries may be parsed to identify the relevant phrase defining the type of the expected results (“year”, “day” etc.). The phrase is then mapped via rules into existing sets of target nouns, which is associated in turn with a desired type of results, in this case a date. Alternatively, search queries seeking dates may be identified through pattern matching, where each pattern captures one of the possible rules (“When”; “What” followed by “day”; “What” followed by “year”; etc.). The mapping of natural language queries into types of desired results, such as, dates vs. cities vs. countries vs. person names has been studied in previous work on information extraction and question answering and is known to those skilled in the art.
In one embodiment, users have the option of entering their queries as a set of keywords rather than full natural-language queries, and manually selecting the desired type of results that they are looking for, such as a date, for example.
In block 204 the search query is processed. In one embodiment, the search query is received by the search engine 120 as a string of characters. The query processor 124 may process the search query by parsing the string of characters and then tokenizing the string of characters. Tokenization of the search query can include parsing the string of characters that makes up the search query into known tokens, such as words, punctuation marks, and special characters, based on a lexicon. In addition, the search query may be processed more deeply to identify the part of speech tags associated with the query words, or organize the words into a syntactic parse tree if the search query is expressed in natural language. The query processor 124 may then remove stop words from the search query. Examples of stop words are determiners, conjunctions, and words beginning with the letters “wh”. The search query may be further processed by the query processor 124 to identify it as seeking an information item, such as described above.
After the search query is processed, relevant entries in the index are identified in block 206. As explained above, each entry in the information item index can include an information item and an associated sentence fragment. The extraction engine 152 can create the index by accessing documents indexed by the search engine 120 to identify and extract information item—sentence fragment pairs.
The extraction engine 152 may use a lightweight extraction method to identify and extract an information item and associated sentence fragment from a document previously indexed by a search engine 120, for example. The extraction method can identify an information item, such as a date, in the text of a document and match a pattern to identify a sentence fragment in close proximity to the date. One or more of a set of lexico-syntactic patterns can be used to identify a sentence fragment associated with the information item. Once identified, the sentence fragment may be filtered to exclude ambiguous or otherwise unhelpful sentence fragments. An identified sentence fragment that is not filtered is extracted with its corresponding information item and the information item—sentence fragment pair is indexed together. The extraction method can be used on all or most of the documents in a corpus of documents to create an index of information item—sentence fragment pairs. The extraction of information item—sentence fragment pairs to create an index is described in U.S. patent application Ser. No. 11/087,447, filed Mar. 23, 2005, entitled “Methods and Systems for Extracting an Information Item and Associated Sentence Fragment from a Document,” which is incorporated herein in its entirety by reference.
In response to a received search query, the query processor 124 may access the information item index to identify relevant entries in the index by matching words or terms from the search query to words or terms contained in the entries. In one embodiment, the query processor 124 can match words from the search query with the associated sentence fragments, the information items, or both to identify relevant entries in the information item index. Table 1 below illustrates some exemplary index entries matched to the search query, “Germany unified” for a date search.
TABLE 1 |
|
Information Item | Sentence Fragment | |
|
|
1990 |
the newly unified Germany replaced West Germany as |
|
a NATO member |
1990 |
West and East Germany unified |
1990 |
Kohl became the first chancellor of a unified Germany |
|
since 1945 |
1990 |
a unified Germany became a reality |
1990 |
Kohl was able to usher in a unified Germany |
1990 |
Germany was unified |
1989 |
the Berlin Wall fell paving the way for a unified |
|
Germany |
|
1989 |
Chancellor Kohl presented his Ten-Point Plan for a |
|
unified Germany to the Bundestag |
1949 |
Germany was divided into the German Democratic |
|
Republic and the Federal Republic of Germany ending |
|
a unified Germany |
1933 |
Hitler was appointed Chancellor of a unified Germany |
1871 |
Bismark succeeded in placing Wilhelm on the throne |
|
of a unified Germany |
1871 |
Germany was unified under Emperor Wilhelm I |
1871 |
a unified Germany was established as the German |
|
Empire |
|
In block 208 a search result set is generated from the relevant entries identified in block 206. The search result processor 126 may generate a search result set by ranking the identified relevant entries. The search result set may contain some or all of the ranked entries. In one embodiment, the search result set may contain one or more information items and one or more associated sentence fragments for each of the information items. In another embodiment, the search result set may include several information items and an associated sentence fragment for each information item, such as in timeline form.
FIG. 3 illustrates an example of method 208 used to generate a search result set. In block 302, the identified entries from block 206 are scored. In one embodiment, the search result processor 126 computes a relevance score for each of the identified entries in block 206 using a relevance score formula. The relevance score formula can favor sentence fragments having search terms appearing closer to each other and sentence fragments that have a smaller number of overall terms. In one embodiment, Formula 1 below is used to compute relevance scores for sentence fragments:
In Formula 1 above, Dist (i, j) is the minimum distance among matches of query terms in the sentence fragment, computed over all pairs (i, j) of non-stop query terms. Dist(i, j) equals 1 if there is only a single non-stop term in the query. V is the number of terms in the sentence fragment that are not stop terms. C is a score scaling constant. In one embodiment, C is set to 100. The effect of Formula 1 is to promote entries that contain search terms appearing close together in a sentence fragment and sentence fragments with a smaller number of terms by scoring such entries higher.
In block 304, the identified relevant entries are grouped based on the associated information item. The search result processor 126 may group entries with the same information items into groups. For the example shown in Table 1 above, all entries with the date 1990 are grouped together, all entries with the date 1989 are grouped together, all entries with the date 1949 are grouped together, all entries with the date 1933 are grouped together, and all entries with the date 1871 are grouped together.
In block 306, the relevance scores for each entry are aggregated for each group. In one embodiment, the search result processor 126 adds the relevance scores for all of the entries in each group together. For the example shown in Table 1, the relevance scores for the 1990 group are added together, the relevance scores for the 1989 group are added together, and the relevance scores for the 1871 group are added together. For the 1949 group and the 1933 group, the relevance score for these entries are used, because there is only one entry for each of these two groups. This results in groups with a greater number of entries generally scoring higher than groups with a lower number of entries.
In block 308, the groups are ranked based on each group's aggregate score. In one embodiment, the search result processor 126 ranks groups higher with greater aggregate scores. For example, if the 1990 group has an aggregate score of 700, the 1989 group has an aggregate score of 250, the 1949 group has an aggregate score of 110, the 1933 group has an aggregate score of 150, and the 1871 group has an aggregate score of 400, then the search result processor 126 may rank the groups as follows: 1990; 1871; 1989; 1933; and 1949.
In block 310, entries are selected for a search result set based on the ranking of groups. The search result processor 126 may identify and select an entry or multiple entries from one or more groups to include in the search result set. In one embodiment, the information item and associated sentence fragment are included in the search result set. In another embodiment, only the information items from each selected entry are included in the search result set. The search result processor 126 can use a variety of rules to select the entries that form the search result set. For example, the search result processor 126 may only select entries from the top one or two groups or may select an entry or entries out of a group if the group scores above a predetermined threshold. The search result processor 126 may use similar rules in selecting entries from the groups, such as selecting the top scoring one or two entries from a group. For the example discussed above in connection with Table 1, only groups 1990 and 1871 may be selected based on these two groups having the highest two aggregate relevance scores. From the 1990 group top scoring two entries may be selected and from the 1871 group the top scoring entry may be selected. For example, Table 2 below illustrates an example of the entries selected for the search result set from Table 1.
TABLE 2 |
|
Information Item | Sentence Fragment | |
|
|
1990 |
West and East Germany unified |
1990 |
Germany was unified |
1871 |
a unified Germany was established as the |
|
German Empire |
|
FIG. 4 illustrates an exemplary method 208 for generating a search result set such as a timeline from the relevant entries identified in 206. In block 402 the search result processor 126 identifies information items in the entries identified as relevant in block 206. In one embodiment, the search result processor 126 may identify all information relevant information items to include in the search result set. For example, in Table 1 above, the search result processor can identify all dates, 1990, 1989, 1949, 1933, and 1871, from the relevant entries to include in the search result set. In another embodiment, the search result processor 126 uses a scoring formula similar to Formula 1 to identify and select entries. For example, the search result processor 126 may only include information items in the search result set that are associated with entries above a certain scoring threshold.
In block 404, a representative sentence fragment for each identified information item in block 402 is selected. In one embodiment, the search result processor 126 calculates a relevance score for each identified relevant entry and selects one entry having the highest relevance score for each entry associated with the identified information items. For example, if all of the information items in Table 1 are identified in block 402, the search result processor can use a relevance score associated with each entry to select the sentence fragment to associate with each information item. For the date 1990, for example, the search result processor may select the sentence fragment “West and East Germany unified” if this sentence fragment has the highest associated relevance score compared to the other entries associated with the date 1990.
In another embodiment, the search result processor 126 may generate a new sentence fragment to associate with each identified information item. In this embodiment, for example, the search result processor 126 may generate the fragment “unified” to associate with the date 1990 and may generate the fragment “divided” to associate with the date 1949.
In block 406, a set of information items and associated sentence fragments is generated. For example, the search result processor 126 may generate a timeline including dates and an associated sentence fragment for each date.
Returning to FIG. 2, in block 210, the search result set is output. In one embodiment, the search engine 120 outputs the search result set to the client device 102 in response to the search query received from the client device 102. The search engine can send the search result set to the client device via network 106.
FIG. 5 shows an illustrative search engine interface and search results page 500 including a search result set 502 generated, for example, by the method 208 described in FIG. 3 for a date search. The search result set 502 includes information items (dates) 504 and associated sentence fragments 506. The sentence fragments may not be shown with the associated information item. When the sentence fragments are shown with the associated information item they can provide a user with a justification for the display of the information item. For example, if a user is interested in the recent unification of Germany, he can disregard the 1871 date provided for the nineteenth century unification of Germany.
In one embodiment, the information items 504 and/or the sentence fragments 506 may be a hyperlink to the document from which the information item and associated sentence fragment were extracted. A user may select the sentence fragment and be linked to the document containing the information item and sentence fragment. The search results page 500 also includes web search results 508 for documents relevant to the search query.
FIG. 6 shows an illustrative search engine interface and search results page 600 including a search result set 602 generated, for example, by the method 208 described in FIG. 4 for a date search. The search result set 602 includes information items (dates) 604 and associated sentence fragments 606 and is displayed in timeline form. In one embodiment, the information items 604 and/or the sentence fragments 606 may be a hyperlink to the document from which the information item and associated sentence fragment were extracted. The search results page 600 also includes web search results 608 for documents relevant to the search query. In another embodiment, the search results page may display a hyperlink indicating a timeline at the top of the web search results, for example. A user can select the timeline hyperlink to cause the browser application to display a separate web page displaying the timeline.
FIG. 7 shows an illustrative search engine interface and search results page 700 including a search result set 702 generated for an entity search. The search result set 702 includes information items, in this example entity names 704, and associated sentence fragments 706. The displayed entity names 704 are relevant to the search terms “highest mountain” entered into the search box 710. The associated sentence fragments 706 provide an indication of why each entity name 704 is displayed. For example, “Mount Everest” is displayed because it is the “highest mountain in the World” and “the World's highest mountain.” In one embodiment, multiple sentence fragments may be displayed for some or all of the displayed entity names 704. Alternatively, no sentence fragments may be displayed for the displayed entity names 704. In one embodiment, the information items 704 and/or the sentence fragments 706 may be a hyperlink to the document from which the information item and associated sentence fragment were extracted. The search results page 700 also includes web search results 708 for documents relevant to the search query.
FIG. 8 shows an illustrative search engine interface and search results page 800 including a search result set 802 generated for a concept search. The search result set 802 includes information items, in this example concepts 804, and associated sentence fragments 806. The displayed concepts 804 match the search term “joshua tree” entered into the search box 810. The associated sentence fragments provide an indication of the different concepts associated with the term “joshua tree” and, in the example of FIG. 8, two sentence fragments for each concept are displayed. For example, the sentence fragments 806 indicate that the term “joshua tree” is associated with the concepts of a national park, a plant, and a music album.
In one embodiment, one or more than two sentence fragments 806 may be displayed for some or all of the displayed information items (concepts) 804. In one embodiment, the information items 804 and/or the sentence fragments 806 may be a hyperlink to the document from which the information item and associated sentence fragment were extracted. The search results page 800 also includes web search results 808 for documents relevant to the search query.
FIG. 9 shows an illustrative search engine interface and search results page 900 including a search result set 902 generated for a concept search. The search result set 902 includes information items, in this example concepts 904, and associated sentence fragments 906. The displayed concepts 904 match the search terms “invention edison” entered into the search box 910. The concepts 904 provide an indication of the different concepts associated with the search terms “invention edison”. For example, the two concepts 904 displayed are “electric light bulb” and “phonograph”. The associated sentence fragments 906 provide a justification for the displayed concepts 904. For example, the sentence fragments indicate that “electric light bulb” and “phonograph” were inventions from Thomas Edison. More or less sentence fragments for each concept 904 can be displayed.
In one embodiment, the information items 904 and/or the sentence fragments 906 may be a hyperlink to the document from which the information item and associated sentence fragment were extracted. The search results page 900 also includes web search results 908 for documents relevant to the search query.
In the embodiment shown in FIG. 8, the search result set 802 is generated by matching the search query with information items in an information item index. For example, in FIG. 8, the search query “joshua tree” is matched with information items containing the term “joshua tree” by the query processor 124 to identify relevant entries in the index. The search results processor 126 then generates a search result set from the relevant entries.
In the embodiments shown in FIGS. 5, 6, 7 and 9, the search results sets 502, 602, 702 and 902 are generated by matching the search query with sentence fragments in an information item index. For example, in FIG. 9, the search query “invention edison” is matched with sentence fragments containing the words “invention” and “edison” by the query processor 124 to identify relevant entries in the index. The search results processor 126 then generates a search result set from the relevant entries.
Whether the query processor 124 searches the information items or sentence fragments in an information item index when identifying relevant entries can be determined automatically or manually. For example, in one embodiment, the query processor 124 may first search the information items for matches with the search query. In this example, if no information item matches are identified, the query processor 124 will search the sentence fragments in the information item index to identify matches. In one embodiment, the search results processor 126 may cause a prompt to be displayed to the user before searching the sentence fragments. For example, the prompt may say “The search of information items produced no results. Please click OK to search sentence fragments.”
In one embodiment, the user can manually select whether the query processor 124 searches the information items of sentence fragments. For example, the user can indicate a preference in a search options page associated with the search engine interface or the search engine interface may provide a choice as to searching information items or sentence fragments or both.
General
While the above description contains many specifics, these specifics should not be construed as limitations on the scope of the invention, but merely as exemplifications of the disclosed embodiments. Those skilled in the art will envision any other possible variations that are within the scope of the invention.
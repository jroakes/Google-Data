US20180232371A1 - Retargeting in a search environment - Google Patents
Retargeting in a search environment Download PDFInfo
- Publication number
- US20180232371A1 US20180232371A1 US15/590,861 US201715590861A US2018232371A1 US 20180232371 A1 US20180232371 A1 US 20180232371A1 US 201715590861 A US201715590861 A US 201715590861A US 2018232371 A1 US2018232371 A1 US 2018232371A1
- Authority
- US
- United States
- Prior art keywords
- action
- data
- digital components
- content
- computing device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/48—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G06F17/30038—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/432—Query formulation
- G06F16/433—Query formulation using audio data
-
- G06F17/30026—
-
- G06F17/3005—
Definitions
- the Internet provides access to a wide variety of resources. For example, video and/or audio files, as well as web pages for particular subjects or particular news articles are accessible over the Internet. Access to these resources presents opportunities for digital components to be provided with these resources and search results pages that facilitate identification of these resources.
- Excessive network transmissions, packet-based or otherwise, of network traffic data between computing devices can prevent a computing device from properly processing the network traffic data, completing an operation related to the network traffic data, or timely responding to the network traffic data.
- the excessive network transmissions of network traffic data can also complicate data routing or degrade the quality of the response if the responding computing device is at or above its processing capacity, which may result in inefficient bandwidth utilization.
- the control of network transmissions corresponding to content item objects can be complicated by the large number of content item objects that can initiate network transmissions of network traffic data between computing devices.
- a system for selecting digital components includes a data processing system that can have one or more processors.
- the data processing system can receive, from a client device, interaction data including a set identifier and an indication that the client device performed a pre-specified interaction with a script associated with the set identifier.
- the data processing system can identify a first plurality of candidate digital components based on a first match between a query and a first keyword associated with the first plurality of digital components.
- the data processing system can identify a second plurality of candidate digital components based on a second match between the query, a second keyword associated with the second plurality of digital components, and the interaction data.
- the data processing system can select a digital component from the first plurality of candidate digital components and the second plurality of candidate digital component based on a performance metric of each of the candidate digital components in the first plurality of digital components and the second plurality of digital components.
- the data processing system can transmit the digital component to the client device.
- a method for selecting digital components includes receiving, by a data processing system from a client device, interaction data.
- the interaction data can include a set identifier and an indication that the client device performed a pre-specified interaction with a script associated with the set identifier.
- the method can include identifying, by the data processing system, a first plurality of candidate digital components based on a first match between a query and a first keyword associated with the first plurality of digital components.
- the method can include identifying, by the data processing system, a second plurality of candidate digital components based on a second match between the query, a second keyword associated with the second plurality of digital components, and the interaction data.
- the method can include selecting, by the data processing system, a digital component from the first plurality of candidate digital components and the second plurality of candidate digital component based on a performance metric of each of the candidate digital components in the first plurality of digital components and the second plurality of digital components.
- the method can include transmitting, by the data processing system, the digital component to the client device.
- FIG. 1A is a block diagram of an example environment in which a content distribution system manages distribution of content items.
- FIG. 1B depicts a system to combine multiple voice activated audio input data packets that indicated sequence dependent operations in a voice activated computer network environment.
- FIG. 2 is an illustration of an example data flow for populating a retargeting set.
- FIG. 3 is a flow chart of an example process for populating a retargeting set.
- FIG. 4 is a flow diagram of an example process for providing retargeted content items with a search results page.
- FIG. 5 depicts a functional diagram of a single thread structure for a voice activated data packet based computer network environment.
- FIG. 6 depicts a functional diagram of thread data structure generation and communication between remote data processing systems and service provider computing devices in a voice activated data packet based computer network environment.
- FIG. 7 illustrates a block diagram of an example method for selecting digital components.
- FIG. 8 is a block diagram of an example computer system.
- Systems and methods of the present disclosure relate generally to a data processing system that optimizes or dynamically adjusts multiple voice activated packet (or other protocol) based input audio signals via packet based transmissions in a voice activated computer network environment.
- the data processing system can improve the efficiency and effectiveness of data packet transmission over one or more computer networks by, for example, extracting information from input audio signals to generate multiple corresponding action data structures.
- the action data structures can be constructed for transmission during communication sessions between the data processing system and multiple different service provider computing devices. From, for example, the packets of different action data structures, the data processing system can determine at least one sequence dependency parameter.
- the sequence dependency parameters can indicate an order of operation of actions indicated by the action data structures or their corresponding data transmissions. Based on the sequence dependency parameters, the data processing system can merge or combine multiple action data transmissions into a single thread.
- the single thread can include sequence dependent operations of multiple action data structures.
- the data processing system can provide the single thread or portions thereof (e.g., at least one packet based data structure) to multiple service provider computing devices to accomplish actions indicated by the single thread.
- the data processing system can also provide the single thread or portions thereof to at least one content provider computing device to obtain content items associated with the single thread.
- the service provider computing devices and the content provider computing devices can communicate, via or bypassing the data processing system, with at least one client computing device (e.g., a source of the audio input signals) to render audio output to accomplish the actions indicated by the thread, or to render content items at the client computing device.
- asynchronous or out-of-sequence processing of operations of individual action data structures can cause untimely, premature, or unnecessary data packet communications via established communication sessions between the data processing system and the service provider or content provider computing devices. This wastes bandwidth, and can cause unnecessary processing operations to occur by the data processing system as well as by the service provider or content provider computing devices, which wastes computing resources of multiple computing devices.
- the data processing system can temporarily or permanently skip initial operations of a set of sequence dependent operations and can instead proceed to an operation that corresponds to a later-in-time or final operation.
- the data processing system can reduce, delay, or eliminate data processing associated with the early stage operations. This saves processing power and other computing resources such as memory, reduces electrical power consumption by the data processing system and the reduced data transmissions via the computer network reduces bandwidth requirements and usage of the data processing system.
- the systems and methods described herein can include a data processing system that receives a first input audio signal. From the first input audio signal, the data processing system can identify a first request and a first trigger keyword corresponding to the request. Based on the first trigger keyword or the first request, the data processing system can generate a first action data structure, and can construct or prepare a first data transmission including the first action data structure. The first data transmission can be routed as a data packet or other protocol based transmission from the client computing device to at least one first service provider computing device as part of a first communication session.
- the data processing system can receive a second input audio signal. From the second input audio signal, the data processing system can identify a second request and a second trigger keyword corresponding to the request. Based on the second trigger keyword or the second request, the data processing system can generate a second action data structure, and can construct or prepare a second data transmission including the second action data structure.
- the second data transmission can be routed as a data packet or other protocol based transmission from the client computing device to at least one second service provider computing device as part of a second communication session.
- the first and second service provider computing devices can correspond to different entities that do not communicate with each other via the data processing system.
- the data processing system can obtain data packets of the first and second transmissions (e.g., from the first and second data structures) and can extract information from the data packets to determine at least one sequence dependency parameter.
- the sequence dependency parameter can indicate a sequence of operations for actions of the first and second data structures.
- the data processing system can compare the sequence dependency parameter to a threshold (e.g., a rule, policy, or value) and based on the comparison the data processing system can merge the first and second data transmissions (or associated action data structures) into a single thread.
- the single thread can indicate actions of the first and second (or more) action data structures, and can indicate a sequence or order of these actions, as well as sequence dependencies where for example a second action cannot (or is not scheduled to) begin until after a first action is complete.
- the data processing system can reorder, skip, or at least temporarily bypass operations related to some actions of the single thread, based for example on sequence dependencies or based on input received from the client computing device. This can be done before or without performing at least some of the data processing operations based on the bypassed action. Bypassing the processing operations for a first action can cause data related to a second action to identified, transmitted and rendered with less data processing and less electrical power usage than would be the case without the bypass.
- FIG. 1A is a block diagram of an example environment 100 in which a content distribution system 110 manages distribution of content items or digital components.
- Digital components can be a component of content items.
- Content items can be component of digital components.
- the example environment 100 includes a network 102 , such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof.
- the network 102 connects websites 104 , user devices 134 (also referred to as client computing devices), service provider devices 108 , and the content distribution system 110 .
- the example environment 100 may include many thousands of websites 104 , user devices 134 , and service provider devices 108 .
- a website 104 is one or more resources 105 associated with a domain name and hosted by one or more servers.
- An example website is a collection of web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, such as scripts.
- HTML hypertext markup language
- Each website 104 is maintained by a publisher, which is an entity that controls, manages and/or owns the website 104 .
- a resource 105 is any data that can be provided over the network 102 .
- a resource 105 is identified by a resource address that is associated with the resource 105 .
- Resources include HTML pages, word processing documents, and portable document format (PDF) documents, images, video, and feed sources, to name only a few.
- the resources can include content, such as words, phrases, images and sounds, that may include embedded information (such as meta-information in hyperlinks) and/or embedded instructions (such as JavaScript scripts).
- Units of content that are presented in (or with) resources are referred to as content items.
- An example of a content item is a digital component that is presented on a search results page.
- a user device 134 is an electronic device that is under control of a user and is capable of requesting and receiving resources over the network 102 .
- Example user devices 134 include personal computers, mobile communication devices, and other devices that can send and receive data over the network 102 .
- a user device 134 typically includes a user application, such as a web browser, to facilitate the sending and receiving of data over the network 102 .
- a user device 134 can submit a resource request 112 that requests a resource 105 from a website 104 .
- data representing the requested resource 114 can be provided to the user device 134 for presentation by the user device 134 .
- the requested resource 114 can be, for example, a home page of a website 104 , a search results page in which search results are presented, or another resource 105 .
- the data representing the requested resource 114 can include data that cause presentation of resource content 116 (e.g., search results) at the user device 134 .
- the data representing the requested resource 114 can also include data specifying a portion of the resource (e.g., a portion of a web page) in which digital components (or other content items) can be presented. Throughout this document, these specified portions of the resource or user display are referred to as digital component slots 118 .
- User devices 134 can submit search queries to the search system 115 over the network 102 .
- the search system 115 accesses a search index 117 to identify resources 105 that are relevant to the search query.
- the search system 115 identifies the resources 105 in the form of search results and returns the search results to the user devices 134 in search results pages.
- a search result is data generated by the search system 115 that identifies resources 105 that are responsive to a particular search query, and includes a link to the resources 105 .
- An example search result can include a web page title, a snippet of text or a portion of an image extracted from the web page, and the URL of the web page.
- Search results pages can also include one or more digital component slots 118 in which digital components can be presented.
- users that are interested in a particular product may research the particular product by submitting one or more search queries to the search system 115 in an effort to identify information that will assist the user in determining whether to purchase the product.
- a user that is interested in purchasing a DVD player may submit search queries such as “portable DVD player,” “cheap DVD player,” “Brand X DVD player.”
- search queries such as “portable DVD player,” “cheap DVD player,” “Brand X DVD player.”
- the user may be provided search results that have been identified as responsive to the search query (e.g., have at least a minimum threshold relevance to the search query, for example, based on cosine similarity measures or clustering techniques).
- the user can then select one or more of the search results to request presentation of a web page or another resource 105 that is referenced by a URL associated with the search result.
- the content distribution system 110 receives a request for digital components (or another content item) to be provided with the search results. In response to the request, the content distribution system 110 selects digital components that are determined to be relevant to the search query. In turn, the selected digital components are provided to the user device 134 for presentation with the search results.
- the content distribution system 110 selects digital components that are eligible to be provided in response to the request (“eligible digital components”).
- eligible digital components can include digital components having characteristics matching the characteristics of the digital component slots 118 and that are identified as relevant to a search query that has been submitted by a user.
- Digital components having targeting keywords that are matched by the search query can be selected as eligible digital components by content distribution system 110 .
- a digital component for “Service provider A” that sells portable DVD players may be targeted using the targeting keyword “portable DVD player.” This targeting keyword would be matched by the search query “portable DVD player” (and possibly other search queries), and may be presented with the search results page that is provided to the user. If the user selects (e.g., clicks) the digital component for Service Provider A, the user's device can be redirected, for example, to a web page provided for Service provider A.
- This web page can include, for example, information about a portable DVD player that Service Provider A sells, a price at which Service Provider A will sell the portable DVD player, and user interface elements that enable the user to specify a number of the DVD players that the user will buy, as well as payment information and shipping information required to complete the transaction.
- a targeting keyword can match a search query by having the same textual content (“text”) as the resource keyword or search query.
- a digital component associated with the targeting keyword “DVD” can be an eligible digital component for a digital component request including the search query “DVD.”
- a targeting keyword can also match a search query by having text that is identified as being relevant to (e.g., having at least a minimum relevance score relative to) a targeting keyword despite having different text than the targeting keyword.
- a digital component having the targeting keyword “DVD” may also be selected as an eligible digital component for a digital component request including a search query for “Movie Disk” because a DVD is a type of movie disk, and therefore, is likely to be relevant to the term “Movie Disk.”
- Targeting keywords and other data associated with the distribution of digital components can be stored in a content item data store 119 .
- the content item data store 119 is a data store that stores references to digital components, digital component campaign parameters that are used to control distribution of the digital components, data representing conditions under which the digital component was selected for presentation to a user, and data representing actions taken by users in response to presentation of the digital component.
- the content item data store can store targeting keywords, bids, and other criteria with which eligible digital components are selected for presentation.
- Targeting digital components using keywords enables a service provider to target users that, based at least in part on the search queries that the users submit, are considered interested in particular types of products.
- service providers may want to more specifically target particular digital components to users that have previously visited one or more of the service provider's web pages and/or performed other specified actions, referred to as target interactions.
- the service provider may consider this user more likely to buy a DVD player. Therefore, the amount the service provider may be willing to pay to present a digital component for DVD players to this user may be greater than the amount that the service provider is willing to pay to present the DVD player digital component to another user (i.e., that did not previously visit the DVD page on the service provider's site).
- the service provider in this example may want to present a special incentive (e.g., offer 10% off of a DVD player) to this user to purchase a DVD player, while not providing the special incentive to other users that did not view the DVD page at the service provider's site.
- a special incentive e.g., offer 10% off of a DVD player
- a user submits a particular search query does not provide information about the user's prior online activity.
- a user that submits the search query “DVD player” can be considered to be interested in information about DVD players
- this search query alone does not indicate whether the user previously viewed the DVD page on a particular service provider's site.
- keyword targeting it can be difficult for a service provider target digital components to users who, prior to submitting a particular search query, have previously performed pre-specified actions (e.g., requested particular pages from the service provider's site).
- the environment 100 includes a retargeting apparatus 120 that facilitates targeting digital components (or other content items) to a set of users based, at least in part, on the users having previously performed a pre-specified action (i.e., a target interaction).
- the retargeting apparatus 120 can be a component of the content distribution system 110 .
- the retargeting apparatus 120 enables a service provider to create, or request creation of, a retargeting set with which one or more retargeted digital components (or other content item) can be targeted.
- a retargeting set is a set of user identifiers for users that have been determined (e.g., based on interaction data) to have performed a target interaction.
- the service provider can specify the target interaction.
- a service provider can request from the retargeting apparatus 120 (e.g., through a digital component management user interface) a retargeting script that can facilitate population of the retargeting set in response to performance of the target interaction.
- the retargeting script is a portion of code that can be embedded in one or more of the service provider's web pages.
- the retargeting script provides interaction data to the retargeting apparatus 120 .
- the interaction data includes data indicating that a user identifier (e.g., a cookie or another user identifier, such as an account identifier) is to be added to a retargeting set.
- a user identifier e.g., a cookie or another user identifier, such as an account identifier
- the retargeting apparatus 120 adds the user identifier to a retargeting set that is stored, for example, in the content item data store 119 .
- the user identifier is considered to be a retargeted identifier.
- the term retargeted identifier refers to a user identifier that has been added to a retargeting set.
- Each retargeting script can include, for example, information specifying a set identifier.
- the set identifier is a unique character string that is indicative of the retargeting set with which the retargeting script is associated.
- the retargeting script can include the set identifier in the interaction data such that, upon receipt of interaction data, the retargeting apparatus 120 can add user identifiers to the correct retargeting set.
- the set identifier for this retargeting set could be included in the retargeting script, and added to interaction data such that the user identifiers for users that requested presentation of the service provider's web page would be added to this retargeting set.
- each retargeting set that is stored in the content item data store 119 are anonymized to protect the identity of the user with which the user interaction data is associated.
- each user identifier can be a pseudo-random string that uniquely identifies a user device (or user), but does not indicate the identity of a user.
- the user interaction data can include a hash value of the user identifier rather than the user identifier, thereby further protecting user privacy.
- user interaction data are only stored for users that opt-in to having user interaction data stored. For example, a user can be provided an opt-in/opt-out user interface that allows the user to specify whether they approve storage of data representing their interactions with content.
- the availability (or eligibility) of a retargeting set for targeting purposes can be conditioned on the number of retargeted identifiers in the retargeting set exceeding a pre-specified threshold value.
- a retargeting set may be considered ineligible to be used to target digital components until there are at least 500 retargeted identifiers in the retargeting set.
- Conditioning the availability of a retargeting set based on the number of retargeted identifiers in the retargeting set further protects the identity of the users with which the retargeted identifiers are associated by ensuring that at least a minimum number of different users have performed the target interaction.
- the retargeting apparatus 120 can enable a service provider to target digital components using one or more retargeting sets.
- the retargeting apparatus 120 enables a service provider to specify a set of digital components (or other content items) that are only eligible for presentation with a search results page when the user identifier that is associated with the content item request (e.g., the user identifier for the user device from which the search query was submitted) matches one of the retargeted identifiers that are included in a specified retargeting set.
- a service provider may select a particular digital component and specify that the digital component is to be targeted using the retargeting set.
- the service provider can also specify that all digital components that are included in a particular digital component group (e.g., a set of one or more digital components that that have been grouped together) or digital component campaign (e.g., a set of one or more digital component groups that have been grouped together) are to be targeted using the retargeting set.
- the digital components that are targeted using the retargeting set will only be eligible for presentation when the content item request (e.g., a digital component request) includes (or references) a user identifier that matches one of the retargeted identifiers in the specified retargeting set.
- the retargeting apparatus 120 can enable a service provider to target digital components using the retargeting set independent of, or in addition to, other targeting criteria that are used to target the digital components.
- a service provider may copy an existing digital component group (e.g., using a “copy ad group” function) to create a new instance of the digital component group.
- the service provider may edit the targeting criteria of the new instance of the digital component group to specify that digital components in the digital component group are only eligible for presentation when one of the retargeted identifiers in a particular retargeting set is matched by the user identifier that is included in the request for digital components.
- the eligibility of the digital components in this example is further conditioned on the other targeting criteria that were previously specified for the digital component group also being met. For example, assume that the digital component group that was copied was already targeted using only the targeting keyword “DVD player,” and that the service provider only modified the targeting criteria of the new instance of the digital component group to also target the digital component group using the retargeting set. In this example, the digital components in the new instance of the digital component group will not be eligible for presentation unless the search query matches the targeting keyword “DVD player” and the user identifier specified by the request matched one of the retargeted identifiers in the retargeting set.
- retargeted content items content items that are targeted using a retargeting set are referred to as retargeted content items, while content items that are targeted using targeting keywords and are not targeted using a retargeting set are referred to as keyword targeted content items.
- keyword targeted content items can be targeted using targeting criteria other than that discussed below.
- any of the content items can also be targeted using geographic information and/or demographic information.
- FIG. 1B depicts an example system 100 to optimize processing of multiple action data structures having sequence dependent operations in a voice activated data packet (or other protocol) based computer network environment.
- the system 100 can include content distribution system 110 , for example as part of a voice activated communication or planning system.
- the content distribution system 110 can include at least one server having at least one processor.
- the content distribution system 110 can include a plurality of servers located in at least one data center or server farm.
- the content distribution system 110 can determine, from an audio input signal a request and a trigger keyword associated with the request. Based on the request and trigger keyword the content distribution system 110 can generate an action data structure.
- the action data structure can indicate at least one action that corresponds to the input audio signal.
- the content distribution system 110 can receive multiple separate input audio signals, and for each input audio signal can create a respective data structure.
- the content distribution system 110 can construct or otherwise prepare data transmissions for each data structure to transmit the data structures during respective communication sessions with respective other computing devices (e.g., servicer provider computing devices or content provider computing devices).
- the content distribution system 110 can determine, from the action data structures or corresponding data transmissions, one or more sequence dependency parameter. Based on the sequence dependency parameter, the content distribution system 110 can merge multiple data transmissions (or corresponding action data structures) into a single thread.
- the single thread can indicate actions from at least two action data structures, as well as orders of operations or sequence dependencies of the actions.
- the content distribution system 110 can include multiple, logically-grouped servers and facilitate distributed computing techniques.
- the logical group of servers may be referred to as a data center, server farm or a machine farm.
- the servers can be geographically dispersed.
- a data center or machine farm may be administered as a single entity, or the machine farm can include a plurality of machine farms.
- the servers within each machine farm can be heterogeneous—one or more of the servers or machines can operate according to one or more type of operating system platform.
- the content distribution system 110 can include servers in a data center that are stored in one or more high-density rack systems, along with associated storage systems, located for example in an enterprise data center.
- the content distribution system 110 with consolidated servers in this way can improve system manageability, data security, the physical security of the system, and system performance by locating servers and high performance storage systems on localized high performance networks.
- Centralization of all or some of the content distribution system 110 components, including servers and storage systems, and coupling them with advanced system management tools allows more efficient use of server resources, which saves power and processing requirements and reduces bandwidth usage.
- the content distribution system 110 can include at least one natural language processor (NLP) component 122 , at least one interface 123 , at least one thread optimization component 124 , at least one content selector component 125 , at least one audio signal generator component 126 , at least one direct action application programming interface (API) 135 , at least one session handler component 128 , and at least one data repository 129 .
- NLP natural language processor
- API application programming interface
- the NLP component 122 , interface 123 , thread optimization component 124 , content selector component 125 , audio signal generator component 126 , direct action API 127 , and session handler component 128 can each include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with the data repository 129 and with other computing devices (e.g., the client computing device 134 , the content provider computing device 139 , or the service provider computing device 108 ) via the at least one computer network 102 .
- the network 102 can include computer networks such as the internet, local, wide, metro or other area networks, intranets, satellite networks, other computer networks such as voice or data mobile phone communication networks, and combinations thereof.
- the network 102 can include or constitute a display network, e.g., a subset of information resources available on the internet that are associated with a content placement or search engine results system, or that are eligible to include third party content items as part of a content item placement campaign.
- the network 102 can be used by the content distribution system 110 to access information resources such as web pages, web sites, domain names, or uniform resource locators that can be presented, output, rendered, or displayed by the client computing device 134 .
- information resources such as web pages, web sites, domain names, or uniform resource locators that can be presented, output, rendered, or displayed by the client computing device 134 .
- a user of the client computing device 134 can access information or data provided by the content provider computing device 139 or the service provider computing device 108 .
- the network 102 can include, for example a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (Asynchronous Transfer Mode) network, a SONET (Synchronous Optical Network) network, a SDH (Synchronous Digital Hierarchy) network, a wireless network or a wireline network, and combinations thereof
- the network 102 can include a wireless link, such as an infrared channel or satellite band.
- the topology of the network 102 may include a bus, star, or ring network topology.
- the network 102 can include mobile telephone networks using any protocol or protocols used to communicate among mobile devices, including advanced mobile phone protocol (“AMPS”), time division multiple access (“TDMA”), code-division multiple access (“CDMA”), global system for mobile communication (“GSM”), general packet radio services (“GPRS”) or universal mobile telecommunications system (“UMTS”).
- AMS advanced mobile phone protocol
- TDMA time division multiple access
- CDMA code-division multiple access
- GSM global system for mobile communication
- GPRS general packet radio services
- UMTS universal mobile telecommunications system
- Different types of data may be transmitted via different protocols, or the same types of data may be transmitted via different protocols.
- the client computing device 134 , the content provider computing device 139 , and the service provider computing device 108 can each include at least one logic device such as a computing device having a processor to communicate with each other or with the content distribution system 110 via the network 102 .
- the client computing device 134 , the content provider computing device 139 , and the service provider computing device 108 can each include at least one server, processor or memory, or a plurality of computation resources or servers located in at least one data center.
- the client computing device 134 , the content provider computing device 139 , and the service provider computing device 108 can each include at least one computing device such as a desktop computer, laptop, tablet, personal digital assistant, smartphone, portable computer, server, thin client computer, virtual server, or other computing device.
- the client computing device 134 can include at least one sensor 135 , at least one transducer 136 , at least one audio driver 137 , and at least one speaker 138 .
- the sensor 135 can include a microphone or audio input sensor.
- the transducer 136 can convert the audio input into an electronic signal.
- the audio driver 137 can include a script or program executed by one or more processors of the client computing device 134 to control the sensor 135 , the transducer 136 or the audio driver 137 , among other components of the client computing device 134 to process audio input or provide audio output.
- the speaker 138 can transmit the audio output signal.
- the client computing device 134 can be associated with an end user that enters voice queries as audio input into the client computing device 134 (via the sensor 135 ) and receives audio output in the form of a computer generated voice that can be provided from the content distribution system 110 (or the content provider computing device 139 or the service provider computing device 108 ) to the client computing device 134 , output from the speaker 138 .
- the computer generated voice can include recordings from a real person or computer generated language.
- the content provider computing device 139 can provide audio based content items for display by the client computing device 134 as an audio output content item.
- the content item can include an offer for a good or service, such as a voice based message that states: “Would you like me to order you a taxi?”
- the content provider computing device 139 can include memory to store a series of audio content items that can be provided in response to a voice based query.
- the content provider computing device 139 can also provide audio based content items (or other content items) to the content distribution system 110 where they can be stored in the data repository 129 .
- the content distribution system 110 can select the content items that include an audio component and provide (or instruct the content provider computing device 139 to provide) the content items to the client computing device 134 .
- the audio based content items can be exclusively audio or can be combined with text, image, or video data.
- the content items can include one or more audio files that when rendered provide an audio output or acoustic wave.
- the content items can include other content (e.g., text, video, or image content) in addition to or instead of audio content.
- the content items can include text or image files, or combinations thereof, that do not include audio files and that do not render audio output.
- the service provider computing device 108 can include at least one service provider natural language processor (NLP) component 141 and at least one service provider interface 142 .
- the service provider NLP component 141 (or other components such as a direct action API of the service provider computing device 108 ) can engage with the client computing device 134 (via the content distribution system 110 or bypassing the content distribution system 110 ) to create a back-and-forth real-time voice or audio based conversation (e.g., a session) between the client computing device 134 and the service provider computing device 108 .
- the service provider interface 142 can receive or provide data messages to the direct action API 127 of the content distribution system 110 .
- the service provider computing device 108 and the content provider computing device 139 can be associated with the same entity.
- the content provider computing device 139 can create, store, or make available content items for a car sharing service, and the service provider computing device 108 can establish a session with the client computing device 134 to arrange for a delivery of a taxi or car of the car share service to pick up the end user of the client computing device 134 .
- the content distribution system 110 via the direct action API 127 , the NLP component 122 or other components can also establish the session with the client computing device 134 , including or bypassing the service provider computing device 108 , to arrange for example for a delivery of a taxi or car of the car share service.
- the data repository 129 can include one or more local or distributed databases, and can include a database management system.
- the data repository 129 can include computer data storage or memory and can store one or more parameters 130 , one or more policies 131 , content data 132 , or templates 133 among other data.
- the parameters 130 , policies 131 , and templates 133 can include information such as rules about a voice based session between the client computing device 134 (or the service provider computing device 108 ) and the content distribution system 110 .
- the content data 132 can include content items for audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with the client computing device 134 .
- the content distribution system 110 can include an application, script or program installed at the client computing device 134 , such as an app to communicate input audio signals to the interface 123 of the content distribution system 110 and to drive components of the client computing device to render output audio signals.
- the content distribution system 110 can receive data packets or another signal that includes or identifies an audio input signal.
- the content distribution system 110 can execute or run at least part of the NLP component 122 to receive the audio input signal.
- the NLP component 122 can convert the audio input signal into recognized text by comparing the input signal against a stored, representative set of audio waveforms (e.g., in the data repository 129 ) and choosing the closest matches.
- the representative waveforms are generated across a large set of users, and can be augmented with speech samples.
- the NLP component 122 can match the text to words that are associated, for example via training across users or through manual specification, with actions that the content distribution system 110 can serve.
- the audio input signal can be detected by the sensor 135 (e.g., a microphone) of the client computing device. Via the transducer 136 , the audio driver 137 , or other components the client computing device 134 can provide the audio input signal to the content distribution system 110 (e.g., via the network 102 ) where it can be received (e.g., by the interface 123 ) and provided to the NLP component 122 or stored in the data repository 129 as content data 132 .
- the sensor 135 e.g., a microphone
- the client computing device 134 can provide the audio input signal to the content distribution system 110 (e.g., via the network 102 ) where it can be received (e.g., by the interface 123 ) and provided to the NLP component 122 or stored in the data repository 129 as content data 132 .
- the system 100 can optimize processing of action data structures that include sequence dependent operations in a voice activated data packet (or other protocol) environment.
- the content distribution system 110 can include or be part of a voice activated assistant service, voice command device, intelligent personal assistant, knowledge navigator, event planning, or another assistant program.
- the content distribution system 110 can provide one or more instances of audio output for display from the client computing device 134 to accomplish tasks related to this input audio signal.
- the tasks can include, for example, communicating with the service provider computing device 108 or other third party computing devices to make dinner reservations or purchase movie tickets.
- an end user can enter an input audio signal into the client computing device 134 of: “OK, I would like to go to go dinner tonight.”
- This input audio signal can be detected by the sensor 135 (e.g., a microphone) of the client computing device 134 and transformed (e.g., by the transducer 136 ) into a data packet or other protocol based structure for transmission to the content distribution system 110 .
- the NLP component 122 can receive or otherwise obtain at least one first input audio signal. For example, via the interface 123 and the computer network 102 the NLP component 122 can obtain the first input audio signal from the client computing device 134 .
- the NLP component 122 can extract data from or otherwise parse the first input audio signal to identify at least one first request or at least one first trigger keyword corresponding to the first request.
- the first request can indicate intent or subject matter of the first input audio signal, e.g., an intent to eat dinner.
- the first trigger keyword can indicate a type of action likely to be taken.
- the NLP component 122 can parse the first input audio signal to identify at least one request to leave home for the evening for dinner.
- the first trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken.
- the trigger keyword “go” or “to go to” from the input audio signal can indicate a need for transport.
- the input audio signal (or the identified request) does not directly express an intent for transport, however the trigger keyword indicates that transport is an ancillary or sub-action to at least one other action that is indicated by the request.
- the NLP component 122 can receive a second input audio signal.
- the first audio input signal can be “OK, I would like to go to go dinner tonight” and the second audio input signal can be “OK, I would like to catch a movie later”.
- the NLP component 122 can receive or otherwise obtain the second input audio signal from any client computing device 134 , in an analogous manner to which the first input audio signal was obtained, e.g., via the network 102 .
- the NLP component 122 can extract data from or otherwise parse the second input audio signal to identify at least one second request or at least one second trigger keyword corresponding to the second request.
- the second request can indicate intent or subject matter of the second input audio signal, e.g., an intent to watch a movie in a theater.
- the second trigger keyword can indicate a type of action likely to be taken.
- the NLP component 122 can parse the second input audio signal to identify at least one request to leave home for the evening to watch a movie.
- the second trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken.
- the trigger keyword “to catch” from the second input audio signal can indicate a need for transport, e.g., as an ancillary or sub-action to at least one other action that is indicated by the request.
- the direct action API 127 can execute programs or scripts, for example from the NLP component 122 , the thread optimization component 124 , or the content selector component 125 to perform tasks or actions, or to identify content items responsive to input audio signals.
- the direct action API 127 can execute a specified action to satisfy the end user's intention, as determined by the content distribution system 110 .
- the direct action API 127 can execute code or a dialog script that identifies the parameters required to fulfill a user request.
- Such code can look up additional information, e.g., in the data repository 129 , such as the name of a home automation service, or it can provide audio output for rendering at the client computing device 134 to ask the end user questions such as the intended destination of a requested taxi, genre of a movie to watch, or type of restaurant to go to for dinner.
- the direct action API 127 can determine necessary parameters and can package the information into an action data structure, which can then be sent to another component such as the content selector component 125 or to the service provider computing device 108 (or content provider computing device 139 ) to be fulfilled.
- the direct action API 127 of the content distribution system 110 can generate, based on the request or the trigger keyword, data structures for the actions of the thread.
- the action data structures can be generated responsive to the request.
- the action data structure can be included in the messages that are transmitted to or received by the service provider computing device 108 .
- the direct action API 127 can determine to which of a plurality of service provider computing devices 108 the message should be sent.
- the direct action API 127 can generate a first action data structure based on the first trigger keyword and in response to the first request, and can generate a second action data structure based on the second trigger keyword and in response to the second request. For example, if the first input audio signal includes “go to dinner tonight” the NLP component 122 can identify the trigger word “tonight” and the request for a dinner suggestion or reservation. The direct action API 127 can package the request into a first action data structure for transmission as a message to a service provider computing device 108 (or content provider computing device 139 ) of a restaurant. The first input audio signal can include other requests or trigger keywords that indicate other actions, ancillary to the dinner action. These actions can be included in the first action data structure. For example, the NLP component 122 can identify first requests or first trigger keywords for transportation to or from dinner (additional actions) from the first input audio signal of “OK, I would like to go to go dinner tonight”.
- the NLP component 122 can identify the request to see a movie with the trigger keywords “catch” or “later”.
- the direct action API 127 can package the request into a second action data structure for transmission as a message to a service provider computing device 108 (or content provider computing device 139 ) of a movie company or movie theater.
- the second input audio signal can include other second requests or second trigger keywords that indicate other actions, ancillary to the movie action. These actions can be included in the second action data structure.
- the NLP component 122 can identify first requests or first trigger keywords for transportation to or from a movie theater (additional actions) from the second input audio signal of “OK, I would like to catch a movie later”.
- the first and second, or any other action data structures can also be passed to the content selector component 125 .
- the action data structures can include information for completing one or more actions associated with the request.
- the information can include restaurant or movie interest indicators, location information, an identification or location of a restaurant or type of restaurant, restaurant reservation information, movie show times at a theater, theater location information, or a pick up location and a destination location.
- the direct action API 127 can retrieve a template 133 from the repository 129 to determine which fields to include in the action data structure.
- the direct action API 127 can retrieve content from the repository 129 to obtain information for the fields of the data structure.
- the direct action API 127 can populate the fields from the template with that information to generate the data structure.
- the direct action API 127 can also populate the fields with data from the input audio signal or third party sources.
- the templates 133 can be standardized for categories of service providers or can be standardized for specific service providers. For example, ride sharing service providers can use the following standardized template 133 to create the data structure: ⁇ client_device_identifier; authentication_credentials; pick_up_location; destination_location; no_passengers; service_level ⁇ .
- the data structure can include variable fields.
- the variable fields can indicate, for example, a sequence or order of operation of multiple actions identified indicated by or related to at least one action of a data structure.
- the direct action API 127 can populate fields of the data structure, including variable fields.
- the direct action API 127 can populate or enter data into one or more variable fields of a data structure based on a sequence dependency between actions, such as a second action that begins after a first action ends.
- the direct action API 127 can construct data transmissions that include data packets corresponding to action data structures.
- the data transmissions can include packetized versions of the action data structures, e.g., data packets with header and payload regions that indicate information represented by the data structures.
- the data transmissions can be used to establish (e.g., take part in) at least one communication session between the service provider computing device 108 and the client computing device 134 via the content distribution system 110 .
- the session handler component 128 can establish or identify the communication sessions via the interface 123 . For example, subsequent to merging or associating action first and second data structures (or their corresponding packetized data transmissions) into a single thread, the content distribution system 110 can provide the data transmissions to the service provider computing device 108 .
- the service provider computing device 108 can also receive, via the content distribution system 110 , data packets (or other data messages) from the client computing device 106 .
- the content distribution system 110 can receive and can route inbound data messages from the client computing device 134 to the service provider computing device 108 as part of the communication session.
- the thread optimization component 124 can obtain or access data packets of the first and second (and any other) data transmissions.
- the direct action API 127 can provide the transmissions (e.g., the corresponding data packets) to the data repository 129 for storage, where they can be retrieved by the thread optimization component 124 .
- the thread optimization component 124 can also receive the data packets (or other protocol based structure) of the data transmissions from the direct action API 127 (or other content distribution system 110 component) bypassing the data repository 129 .
- the thread optimization component 124 can parse or otherwise extract information from data packets of multiple data transmissions that correspond respectively to multiple action data structures. For example, the thread optimization component 124 can apply a heuristic technique to data packets of a first data transmission (or to the corresponding first data structure) and to data packets of a second data transmission (or to the corresponding second data structure) to determine at least one sequence dependency parameter.
- the heuristic or other statistical technique can determine or identify with a threshold degree of certainty patterns among the first and second data transmissions (or corresponding data structures) that indicate a sequence dependency of actions indicated by the data transmissions.
- the sequence dependency parameter can indicate the existence or likelihood (e.g., relative to a threshold level or other benchmark) of actions represented by the data transmissions (or corresponding action data structures) having an order of operations, time, or sequence dependency on each other.
- the sequence dependent operations or actions, indicated by the sequence dependency parameters can include a number of actions that occur in a known, suggested, required, or particular order. For example, going from home to a movie theater, then back home can include three sequence dependent operations or actions.
- the first action in this example includes travelling from home to the movie theater.
- the second action includes watching the movie in the theater.
- the third action includes returning home from the theater.
- These three (and perhaps other) actions can be determined by the direct action API 127 from requests or trigger keywords corresponding to the input audio signal “OK, I would like to catch a movie later”.
- the second action in the sequence is subsequent to and dependent on the first action (going out from home to the movie theater)
- the third action is subsequent to and dependent on the first action and the second action.
- the third action can be considered subsequent to and dependent on the second action, as having expressed an intent to do so, the content distribution system 110 determines or predicts that the end user would watch the movie in the theater before returning home as well.
- the thread optimization component 124 can merge two or more packetized data transmissions (or their corresponding action data structures) into a single thread.
- the single thread can include data identifying actions as well as other data (e.g., metadata or third party data) from multiple data action structures.
- the single thread can be in packetized (or other protocol based) form, e.g., in the same format as the first and second data transmissions.
- the single thread can also be in a data structure format, e.g., generated by the direct action API 127 , or following a format of at least one template 133 , policy 131 , or parameter 130 .
- the single thread can include or indicate an association or linking of actions from one or more data transmissions, or from one or more action data structures.
- the data transmissions or action data structures can be merged or otherwise associated with one another by the thread optimization component 124 to generate the single thread prior to transmission of the data indicated by the action data structures via the communication session to the service provider computing device 108 .
- the direct action API 127 or other content distribution system 110 component e.g., the interface 123
- the content distribution system 110 may have delayed, prevented withheld, or not transmitted data associated with the first or second (or any other) data structure.
- at least some of the data indicated by individual data structures can be provided by and from the content distribution system 110 to the service provider computing device 108 prior to creation of the single thread.
- the thread optimization component 124 can merge or otherwise consolidate or associate the data transmissions (or corresponding action data structures) into the single thread based on the sequence dependency parameter.
- the first data transmission (and first data structure) can represent actions associated with the first input audio signal “OK, I would like to go to go dinner tonight”
- the second data transmission (and second data structure) can represent actions associated with the second input audio signal “OK, I would like to catch a movie later”.
- the first and second (or any other) input audio signals can be sequential (following on another by less than one minute), separated from one another by time (e.g., greater than one minute), and can originate from the same or different client computing devices 134 .
- the thread optimization component 124 can obtain data packets (or other data) representing this information, and can determine at least one sequence dependency parameter.
- the sequence dependency parameter can indicate that the action of returning home from the movie theater occurs after the action of watching the movie, or that the action of watching the movie occurs or is predicted to occur after the action of eating dinner.
- the single thread (in any data structure or format) can indicate a set of sequence dependent operations that correspond to one or more input audio signals (or corresponding data structures or data transmissions), such as a series of actions.
- the thread can include any two or more actions, such as a first action, a second action, and a third action.
- a merger of the first input audio signal “OK, I would like to go to go dinner tonight,” and the second input audio signal “OK, I would like to catch a movie later” can include at least one request indicating an interest to attend dinner and a movie, and at least one trigger keyword, e.g., “go” indicating a need for transportation.
- the thread optimization component 124 can identify at least one sequence dependency parameter indicating at least one sequence, temporal, or order of operations dependency between the actions and can generate the single thread to combine the multiple input audio signals (or corresponding template based data structures or packet/protocol based data transmissions).
- the thread optimization component 124 can create the single thread that indicates at least three actions, such as a dinner action (first action), a movie action (second action), and a transportation home action (third action).
- the thread optimization component 124 generates a single thread from multiple separate inputs that indicates the three actions.
- the single thread can include other actions, such as an initial transport to dinner action.
- the content distribution system 110 or component thereof such as the thread optimization component 124 can determine that the actions of the thread are sequence dependent operations. For example, the thread optimization component can determine that the second action of watching the movie is subsequent to the first action of eating dinner, and that the third action of travelling home from the movie theater is after the second action of watching the movie.
- the thread optimization component 124 can access the parameters 130 or policies 131 in the data repository 129 to determine or otherwise estimate the order of the sequence dependent actions.
- the parameters 130 or policies 131 could indicate that a transport action (e.g., a taxi home) can occur after an event action (e.g., watching a movie).
- the content selector component 125 can obtain indications of any of the actions of the single thread.
- the thread optimization component 124 can directly or indirectly (e.g., via the data repository 129 ) provide at least a portion of the single thread that indicates the third (or any other) action to the content selector component 125 .
- the content selector component 125 can obtain this information from the data repository 129 , where it can be stored as part of the content data 132 .
- the indication of the third action can inform the content selector component 125 of a need for transportation from the location of the movie theater to a location as determined or indicated by the client computing device 134 , such as a ride to an end destination.
- the content selector component 125 can obtain indications of a later action in the thread prior to the occurrence of at least one earlier action. For example, the content selector component 125 can receive an indication of the third action (e.g., a need for a ride from the movie theater) before the movie plays in the theater (second action), or before the person who input the input audio signal into the client computing device 134 eats dinner at the restaurant (first action). The content selector component 125 can obtain indications of at least one action of the thread before completion of at least one action of the thread.
- the third action e.g., a need for a ride from the movie theater
- second action e.g., a need for a ride from the movie theater
- first action e.g., a need for a ride from the movie theater
- the content selector component 125 can obtain indications of at least one action of the thread before completion of at least one action of the thread.
- the content selector component 125 can identify at least one content item.
- the content item can be responsive or related to the third (or any other) action.
- the content item can include an audio message offering services of a car share company, responsive to the third action that indicates a transportation need.
- the content selector component 125 can query the data repository 129 to select or otherwise identify the content item, e.g., from the content data 132 .
- the content selector component 125 can also select the content item from the content provider computing device 139 .
- the content provider computing device 139 can provide a content item to the content distribution system 110 (or component thereof) for eventual output by the client computing device 134 .
- the audio signal generator component 126 can generate or otherwise obtain an output signal that includes the content item responsive to the third (or any other) action.
- the content distribution system 110 can execute the audio signal generator component to generate or create an output signal corresponding to the content item.
- the interface 123 of the content distribution system 110 can provide or transmit one or more data packets that include the output signal via the computer network 102 to the client computing device 134 , e.g., as part of the communication session.
- the interface 123 can be designed, configured, constructed, or operational to receive and transmit information using, for example, data packets.
- the interface 123 can receive and transmit information using one or more protocols, such as a network protocol.
- the interface 123 can include a hardware interface, software interface, wired interface, or wireless interface.
- the interface 123 can facilitate translating or formatting data from one format to another format.
- the interface 123 can include an application programming interface that includes definitions for communicating between various components, such as software components of the system 100 .
- the content distribution system 110 can provide the output signal from the data repository 129 or from the audio signal generator component 126 to the client computing device 134 .
- the content distribution system 110 can also instruct, via data packet transmissions, the content provider computing device 139 or the service provider computing device 108 to provide the output signal to the client computing device 134 .
- the output signal can be obtained, generated, transformed to or transmitted as one or more data packets (or other communications protocol) from the content distribution system 110 (or other computing device) to the client computing device 134 .
- the content selector component 125 can skip to a later action in a set of sequence dependent operations indicated by the single thread to select a content item for the later action prior to occurrence (and prior to an immediate need) for activity corresponding to the later action.
- a later sequenced action e.g., to select a content item for the second subsequent action prior to selecting a content item for a first prior action
- the content distribution system 110 is not required to first process information related to the prior action to select content items for subsequent actions. This reduces processor utilization, power consumption and bandwidth from data transmissions that would otherwise be associated with selecting a content item (for the first action) prior to selecting the content item for the second action.
- the content selector component 125 can select the content item for the (subsequent or later) action as part of a real-time content selection process.
- the content item can be provided to the client computing device for transmission as audio output in a conversational manner in direct response to the input audio signal.
- the real-time content selection process to identify the content item and provide the content item to the client computing device 134 can occur within one minute or less from the time of the input audio signal and be considered real-time.
- the output signal that corresponds to the content item corresponding to the content provider computing device 139 (or data corresponding to the service provider computing device 108 ), for example obtained or generated by the audio signal generator component 126 transmitted via the interface 123 and the computer network 102 to the client computing device 134 , can cause the client computing device 134 to execute the audio driver 137 to drive the speaker 138 to generate an acoustic wave corresponding to the output signal.
- the acoustic wave can include words of or corresponding to the content item or other data for the later, (e.g., second or third) action.
- the output signal that corresponds to the content item can also include non-audio content items that render on the client computing device 134 that is the source of the input audio signal or on a different client computing device 134 (e.g., a wearable device computing device) as text or image messages that can render without audio elements.
- non-audio content items that render on the client computing device 134 that is the source of the input audio signal or on a different client computing device 134 (e.g., a wearable device computing device) as text or image messages that can render without audio elements.
- the content distribution system 110 can provide the output signal that includes the content item or other data responsive to an action in direct or real-time response to the input audio signal so that the packet based data transmissions via the computer network 102 that are part of a communication session between the content distribution system 110 and the client computing device 134 has the flow and feel of a real-time person to person conversation.
- This packet based data transmission communication session can also include the content provider computing device 139 or the service provider computing device 108 .
- the content selector component 125 can select content items provided in response to the second (or any non-first) action in the sequence dependent set of actions before selecting any content item for any prior action in the sequence. This avoids the need to process at least some of the data corresponding to the prior actions, which causes the second content item to be selected with a reduced number of processing operations than would occur if the content items were selected in an order that matches the order of the sequence of actions.
- Content items for the prior (e.g., first and second) actions may or may not be selected, for example after selection of the content item for the second action.
- the content selector component 125 can select the content item (e.g., for the second action) based on at least one trigger keyword of the thread that indicates subject matter different than subject matter of the one or more requests of the same thread.
- the requests of the single thread can indicate subject matter of a dinner request (first action), and subject matter of a movie request (second action). This subject matter does not indicate any transportation request.
- the NLP component 122 or the thread optimization component 124 (or other content distribution system 110 components executing as part of the direct action API 127 ) can identify the trigger keyword “go” “go to” or “to go to” and can determine a transportation request based at least in part on the trigger keyword.
- the content distribution system 110 can infer actions from the input audio signal that are secondary requests that are not the primary request or subject of the input audio signal.
- the content distribution system 110 can prevent or delay transmission of the output signal that includes the content item.
- the interface 123 or a script executing via the direct action API 127 can prevent transmission of data packets that include the output signal corresponding to a content item or to an action of the single thread until a triggering event.
- the triggering event can include expiration of a pre-determined time period, such as two hours or a time coinciding with occurrence of an earlier action in the thread, such as a scheduled end time of a movie.
- the triggering event can also include an authorization indication received by the content distribution system 110 from the client computing device 134 .
- the authorization indication can originate as a subsequent audio input associated with the thread but received by the content distribution system 110 subsequent to the input audio signal, a text-based or other non-audible signal, or can include an indication of a setting of the client computing device 134 that authorizes receipt by the client computing device 134 of content items.
- the content distribution system 110 can also delay transmission of the content item associated with a second or subsequent to second action of the thread to optimize processing utilization. For example, the content distribution system 110 can delay content item transmission until an off-peak or non-peak period of data center usage, which results in more efficient utilization of the data center by reducing peak bandwidth usage, heat output or cooling requirements.
- the content distribution system 110 can also initiate a conversion or other activity associated with the content item, such as ordering a car service, based on data center utilization rates or bandwidth metrics or requirements of the network 102 or of a data center that includes the content distribution system 110 .
- the content items can correspond to the actions of the thread, and the content selector component 125 can select a content item for one, more than one, or all actions of the thread.
- the thread optimization component 124 can identify the sequence dependent thread of actions of, for example, “dinner” (first action) “movie” (second action) and “transport from movie location” (third action).
- the content item for the third action can be provided for rendering at the client computing device 134 as an audio response that states, “Would you like a ride home from the movie theater?” in response to the audio input signal.
- the content distribution system 110 can select or provide a content item, e.g., “the Italian restaurant downtown has an opening for 7 pm tonight—are you interested?” for the first action (dinner), and can select or provide another content item, e.g., “would you like tickets to the 9 pm movie at the downtown theater?” for the second action (movie).
- the content distribution system 110 can provide (which includes instructing the content provider computing device 139 to provide) these content items responsive to the input audio signal for rendering by the client computing device 134 as audio output content items.
- the content distribution system 110 via the interface 123 , can select or provide these content items in any order to the client computing device 134 .
- the content item for the third (e.g., last) action can be selected or provided first, before content items corresponding to other, earlier actions of the thread.
- the content distribution system 110 can receive a response to the content item “would you like a ride home from the movie theater?”
- the response can include an input audio signal, e.g., “yes please” that was entered into the client computing device 134 by the end user and received by the content distribution system 110 .
- the content distribution system 110 or component thereof e.g., the thread optimization component
- the direct action API 127 can communicate with the service provider computing device 108 (that can be associated with the content item, such as a car share company) to order a taxi or ride share vehicle for the location of the movie theater at the time the movie ends.
- the content distribution system 110 can obtain this location or time information as part of the data packet (or other protocol) based data message communication with the client computing device 134 , from the data repository 129 , or from other sources such as the service provider computing device 108 or the content provider computing device 139 . Confirmation of this order (or other conversion) can be provided as an audio communication from the content distribution system 110 to the client computing device 134 in the form of an output signal from the content distribution system 110 that drives the client computing device 134 to render audio output such as, “great, you will have a car waiting for you at 11 pm outside the theater.”
- the content distribution system 110 via the direct action API 127 , can communicate with the service provider computing device 108 to confirm the order for the car.
- the content distribution system 110 can obtain the response (e.g., “yes please”) to the content item (“would you like a ride home from the movie theater?”) and can route a packet based data message to the service provider NPL component 141 (or other component of the service provider computing device).
- This packet based data message can cause the service provider computing device 108 to affect a conversion, e.g., to make a car pick up reservation outside the movie theater.
- This conversion—or confirmed order—(or any other conversion of any other action of the thread) can occur prior to completion of one or more actions of the thread, such as prior to completion of the movie, as well as subsequent to completion of one or more actions of the thread, such as subsequent to dinner.
- the content distribution system 110 can initiate a conversion or action. This can occur before the end user has begun any activities associated with the thread, e.g., before dinner or before the movie is over.
- Processors of the content distribution system 110 can invoke the direct action API 127 to execute scripts that order a car from a car share service.
- the direct action API 127 can obtain content data 132 (or parameters 130 or policies 131 ) from the data repository 129 , as well as data received with end user consent from the client computing device 134 to determine location, time, user accounts, logistical or other information in order to reserve a car from the car share service.
- the content distribution system 110 can also communicate with the service provider computing device 108 to complete the conversion by in this example making the car share pick up reservation.
- the direct action API 127 can initiate the conversion or activity to accomplish an action of the thread at any time during a time period from receipt by the content distribution system 110 of the first input audio signal associated with the thread, (e.g., “OK, I would like to go to go dinner and then a movie tonight”) until a threshold time period subsequent to completion of one of the actions of the thread, (e.g., until 15 minutes after the end of the second action of watching the movie).
- the content distribution system 110 can also determine the end of this time period based on other factors, such as an indication that the end user has completed the actions of the thread, e.g., has returned home or is no longer located at the movie theater.
- the content distribution system 110 can also obtain an indication from the client computing device 134 (a data message transmitted via the network 102 ) that the thread is cancelled or dormant or that the end user has cancelled or completed actions of the thread.
- the direct action API 127 can initiate the conversion or activity to accomplish an action of the thread based on completion or time of completion of other actions of the thread.
- the content distribution system 110 can order a good or service (car share pick-up) directly or by communicating with the service provider computing device 108 within a threshold time period of a conclusion of a prior action in the thread.
- the content distribution system 110 can confirm or order a car share service to send a car to pick up the end user at the movie theater (subsequent, third action). This can occur in the absence of input received from the end user computing device 134 during this time period, or responsive to a prompt received from the end user computing device 134 during this time period.
- the direct action API 127 can initiate the conversions or other activity associated with the sequence dependent operations of the thread in any order.
- the direct action API 127 (or other content distribution system 110 component) can initiate activity corresponding to a final action (e.g., the third action in a three action thread such as ordering a taxi) prior to initiating activity corresponding to an earlier thread in the sequence, (e.g., prior to making a dinner reservation or prior to ordering movie tickets).
- the content distribution system 110 initiates activity for an earlier (e.g., second) action subsequent to initiation of activity for the later (e.g., third) action.
- the content selector component 125 can identify, select, or obtain multiple content items resulting from a multiple content selection processes.
- the content selection processes can be real-time, e.g., part of the same conversation, communication session, or series of communications sessions between the content distribution system 110 and the client computing device 134 that involve a thread.
- the conversation can include asynchronous communications separated from one another by a period of hours or days, for example.
- the conversation or communication session can last for a time period from receipt of the first input audio signal until an estimated or known conclusion of a final action of the thread, receipt by the content distribution system 110 of an indication of a termination of the thread. This can be referred to as the active time period of the thread.
- the content selector component 125 can select at least one content item for each action.
- the content item selector component 125 can run or obtain results from a different content selection process for each action.
- the content provider computing device 134 can set forth content items for selection by the content selector component 125 .
- the content item selector component can select or otherwise identify a first content item for the first action via a first content selection process, a second content item for the second action via a second content selection process, and a third content item for the third action via a third content selection process.
- the content distribution system 110 that provides these content items for rendering by the client computing device 134 during the active time period of the thread can be considered to be operating in real-time. In this example, the content selection processes and rendering of the content items occurs in real time.
- the content distribution system 110 can cancel actions associated with content items. For example, after ordering the car service the end user may watch the movie but then decide to walk home, or to have desert after the movie instead of taking a car home.
- An app or other program executing at the client computing device 134 as part of the content distribution system 110 can receive an input audio signal of “cancel my ride home”.
- the NLP component 122 can receive this input audio signal, for example as one or more packet based data messages, and can determine that this input audio signal relates to a pre-existing thread (e.g., dinner, movie, transport home) and is part of the same conversation or communication.
- the NLP component 122 (or other content distribution system 110 component) can evaluate time data, location data and pre-existing thread data such as past, present, or scheduled actions of a thread from the content data 132 of the data repository 129 to determine that an input audio signal relates to a pre-existing thread. Based, for example, on the request “ride” or the trigger keyword “cancel” the NLP component 122 can determine that the input audio signal “cancel my ride home” relates to the content item “would you like a ride home from the movie theater?” that corresponds to the third action of a pre-existing thread.
- the direct action API 127 (or other component) can cause the content distribution system 110 to communicate via the interface 123 with the service provider computing device 108 to cancel the order for the taxi or car share service to have a car waiting for the end user outside the movie theater upon conclusion of the movie.
- the NLP component 122 can receive the data packet or other protocol based message to cancel an action of the thread prior to or subsequent to completion of any action of the thread.
- the NLP component 122 can receive from the client computing device 134 (or obtain from the data repository 129 ) a data message (inbound audio signal) to cancel an action of the thread within a time interval triggered by an earlier action of the thread. For example, in a sequence dependent thread with three actions, dinner, movie, transport, the content distribution system 110 can receive the transport cancellation data message within 5 minutes (or other time period) of the conclusion of the movie.
- the content distribution system 110 can prompt for confirmation of a product or service related to an action of the thread.
- the content distribution system 110 can transmit a data message to the client computing device 134 that, when rendered at the client computing device 134 outputs the audio or text message stating “just confirming that you still want a car waiting for you after the movie.”
- the content distribution system 110 can receive a response, e.g., “yes, confirmed” or “no, cancel the car”. This response can be included as part of the thread.
- the direct action API 127 can execute scripts to process this information and can communicate with the service provider computing device 108 to indicate the confirmation or the cancellation.
- FIG. 2 is an illustration of an example data flow 200 for populating a retargeting set.
- a content item provider such as a service provider 108 , can create, or request creation of, a retargeting set 222 , for example, through a digital component management user interface (UI) 204 that is accessed using a computer 203 .
- UI digital component management user interface
- a service provider can access the digital component management user interface 204 and submit a request 208 for a retargeting script 210 , for a retargeting set.
- the request 208 can be submitted to the retargeting apparatus 120 in response to the service provider 108 interacting with (e.g., clicking) a “request script” user interface element 203 .
- the retargeting apparatus can generate the retargeting script 210 for the retargeting set 222 and provide the retargeting script 210 to the service provider 108 .
- the service provider 108 can create the retargeting script 210 and submit the retargeting script 210 to the retargeting apparatus 120 .
- the retargeting script 210 can include a set identifier 206 (e.g., “Set_ID”).
- the set identifier 206 can be, for example, a unique character string that is indicative of the retargeting set 222 with which the retargeting script 210 is associated.
- the set identifier 206 can be a name that the service provider 108 has specified for the retargeting set 222 or a set of characters that the retargeting apparatus 120 has assigned to the retargeting set 222 .
- the service provider can include the retargeting script 210 in the code of one or more of the service provider's web pages 212 .
- the retargeting script 210 is executed in response to the performance of a target user interaction.
- the target user interaction can occur when a user requests the web page 212 that includes the retargeting script 210 .
- the service provider 108 could embed the retargeting script 210 in the web page 212 such that the script is executed when the web page 212 is rendered at a user's device 216 (i.e., in response to the request for the web page).
- the target user interaction can occur when the user 214 interacts with (e.g. clicks) a portion of the service provider's webpage 212 .
- the service provider 108 could embed the retargeting script 210 in the web page such that user interaction with a particular user interface element (e.g., a particular button or tab) causes execution of the retargeting script 210 .
- Execution of the retargeting script 210 causes the user device 216 to submit interaction data 218 to the retargeting apparatus 120 .
- the interaction data 218 includes a user identifier 220 associated with the user device 216 , such as the character string “User_ID”.
- the interaction data 218 may also include the set identifier 206 for the retargeting set with which the retargeting script 210 is associated.
- the retargeting apparatus 120 receives the interaction data 218 and adds the user identifier 220 to the retargeting set associated with the set identifier 206 .
- the retargeting apparatus 120 may store the retargeting set in the content item data store 119 or another data store.
- the interaction data 218 can be stored with a reference to (e.g., indexed according to) the set identifier 206 to facilitate identification of the retargeted identifiers that have been added to each retargeting set.
- FIG. 3 is a flow chart of an example process 300 for populating a retargeting set.
- the process 300 is a process by which a retargeting script can be provided in response to a request to create a retargeting set.
- the retargeting script can be embedded in a web page such that performance of a target user interaction causes execution of the retargeting script, which in turn, causes interaction data to be generated.
- the interaction data are received, and a user identifier that is included in (or referenced by) the interaction data is added to a retargeting set that is also referenced (e.g., by way of a set identifier) by the interaction data.
- the retargeting set is associated with one or more content items (e.g., digital components) such that the eligibility of the content items for presentation in response to a content item request is conditioned on the request including a user identifier that is included in the retargeting group.
- content items e.g., digital components
- the process 300 can be implemented, for example, by the retargeting apparatus 120 or another data processing apparatus.
- the retargeting apparatus 120 is a data processing apparatus that includes one or more processors that are configured to perform actions of the process 300 .
- a non-transitory computer readable medium can include instructions that when executed by a data processing apparatus cause the data processing apparatus to perform actions of the process 300 .
- a request to create a retargeting set is received ( 302 ).
- the request can include (or reference), for example, a name for the retargeting set.
- a name for the retargeting set For example, if the retargeting set is being created to identify users that have viewed the service provider's DVD page (e.g., a web page that provides information about DVD players) the name of for the retargeting set may be “DVD page.”
- the request can include expiration data indicating when user identifiers are to be removed from the retargeting set.
- the expiration data specify a maximum amount of time that a particular retargeted identifier may remain in the retargeting set.
- the service provider may specify that each retargeted identifier that is added to the retargeting set may only remain in the retargeting set for 14 days after being added to the set. In this example, if a particular retargeted identifier is added to the retargeting set on April 1 st , that particular retargeted identifier will be removed from the retargeting set no later than April 15 th .
- the expiration data specify a rate at which retargeted identifiers are removed from the retargeting set. For example, if the expiration data specify that retargeted identifiers should be removed from the retargeting set every 10 days, some or all of the retargeted identifiers that are included in the retargeting set can be periodically removed every 10 days. The portion of the retargeted identifiers that are removed from the retargeting set can be limited to those retargeted identifiers that have been in the retargeting set for more than a pre-specified period of time (e.g., 2 days).
- a pre-specified period of time e.g. 2 days
- the expiration data can specify a maximum number (e.g., 10,000) of retargeted identifiers that can be included in the retargeting set.
- a maximum number e.g. 10,000
- an oldest retargeted identifier in the retargeting set can be removed when a next retargeted identifier is added to the retargeting set.
- An empty retargeting set can initially be created based on the information included in the request, and the empty retargeting set can be populated with user identifiers for users that perform a target interaction, as described below.
- the retargeting set may be associated with a set identifier that is used to distinguish the retargeting set from other retargeting sets. For example, when the retargeting set is created, a pseudo-random character string can be associated with the retargeting set, and the retargeting set can be identified using the pseudo-random character string.
- a code segment is provided in response to the request ( 304 ).
- the code segment is a retargeting script that upon execution causes a browser to transmit interaction data to a server.
- the interaction data indicate that the retargeting script was executed by the browser.
- the interaction data can include a user identifier for the user device at which the code segment was executed.
- execution of the code segment is caused by the performance of a target user interaction such that the interaction data indicates that the target interaction occurred.
- a service provider can select the target user interaction and embed the code segment into one or more web pages in a manner that causes execution of the code segment when the user performs the target user interaction. For example, if the target user interaction is selected by a service provider to be a request by a user device of a particular web page, the service provider can embed the code segment in the web page in a manner that causes the code segment to be executed when the web page is rendered by the browser.
- the code segment can be embedded in the web page in a manner that causes the code segment to be executed in response to user interaction with the user interface element.
- Interaction data are received ( 306 ).
- the interaction data that are received are considered an indication that a target user interaction occurred.
- the interaction data can be received, for example, by a retargeting apparatus (e.g., retargeting apparatus 120 of FIGS. 1 and 2 ).
- the interaction data can include a user identifier for a user device from which the interaction data was transmitted.
- the interaction data can include a user identifier from a “cookie” that is stored at the user device.
- the cookie may be placed on the user device in response to execution of the code segment. Alternatively, the cookie may have been previously placed on the user device, and upon execution of the code segment the cookie was detected, and the user identifier from the cookie (or the cookie itself) was included in the interaction data.
- the interaction data can also include a set identifier that indicates the retargeting set in which the user identifier is to be stored.
- the submitted interaction data includes a timestamp that can be used to determine an expiration time for the user identifier that is included in the interaction data. If temporal expiration data has been associated with the retargeting set in which the user identifier is included, the time at which the user identifier is removed from the retargeting set can be determined based on the time stamp and the expiration data.
- a particular user identifier can be removed from the retargeting set when the difference between the time stamp and a current time is at least 14 days.
- the user identifier from the interaction data is included in a retargeting set ( 308 ).
- the user identifier is included in the set of retargeted content items that is associated with the set identifier that is specified by the interaction data.
- the set identifier can be detected, and the user identifier from the interaction data can be stored with a reference to (e.g., indexed according to) the set identifier.
- the timestamp that is included in (or received with) the interaction data can also be stored with the user identifier.
- the set of content items includes one or more digital components that are only eligible for presentation in response to determining that a user identifier that is included in (or referenced by) a content item request matches a user identifier in the retargeting set.
- a service provider that has a particular set of digital components for DVD players may specify that the digital components are only eligible for presentation with a search results page if the user identifier received with the content item request matches a user identifier that is included in a retargeting set for users that viewed a DVD page on the service provider's website.
- digital components can be organized in digital component groups, and targeting criteria (e.g., targeting keywords) can be specified on a per-digital component-group basis.
- targeting criteria e.g., targeting keywords
- a service provider may want to target a particular digital component group using targeting criteria other than a retargeting set (e.g., irrespective of whether the user identifier received with the search query matches a user identifier in a retargeting set), and also target the particular set of digital components using the targeting criteria and the retargeting set.
- the service provider may be willing to pay a first price (e.g., $1 per click) for digital components that are provided in response to search queries that do not include a user identifier that matches a retargeted identifier in the retargeting set, but be willing to pay a second, possibly higher, price (e.g., $5 per click) for digital components that are provided in response to search queries that include a user identifier that matches a retargeted identifier in the retargeting set.
- a first price e.g., $1 per click
- a second, possibly higher, price e.g. $5 per click
- the service provider can request that a copy of the particular digital component group be created, and then specify that the copy of the digital component group be targeted using a specified retargeting set.
- the digital components that are included in the copy of the digital component group will only be eligible for presentation if a digital component request (or another content item request) includes (or references) a user identifier that matches a retargeted identifier from a retargeting set.
- the bids for the digital components in the initial instance of the digital component group will be eligible for presentation irrespective of the user identifier that is included in the digital component request (i.e., assuming all of the other targeting criteria for the digital component group are satisfied).
- bids for the digital components in the copy of the digital component group will not be submitted to an auction unless the user identifier matches a retargeted identifier from the retargeting set, while the bids for the digital components in the initial instance of the digital component group will be submitted to the auction irrespective of the user identifier matching a retargeted identifier for the retargeting set.
- a set of content items can be targeted using a Boolean combination of two or more retargeting sets.
- the data received from a service provider may specify that a set of digital components are only eligible for presentation with a search results page if the user identifier received with a digital component request matches both a retargeted identifier from a first retargeting set and (e.g., Boolean AND) a retargeted identifier from a second retargeting set.
- the data received from a service provider may specify that a set of digital components are only eligible for presentation with the search results page if the user identifier received with a digital component request matches a retargeted identifier in one particular retargeting set, but is not included in a second different retargeting set.
- a service provider that sells computers and printers may not want to present a digital component for a computer to a user that has recently purchased a computer, but may want to present digital components for printers to users that have recently purchased a computer, but are not known to have purchased a printer.
- the service provider could provide data specifying that a digital component group that includes digital components for printers is to be eligible for presentation when the user identifier that is included in the digital component request includes a user identifier that matches a retargeted identifier in the retargeting set for users that purchased a computer, but is not included in a retargeting set for users that have purchased a printer.
- the data that are received from the service provider can also specify other combinations (e.g., AND, OR, NOR, or XOR) of retargeting sets in which a user identifier is to be included for a digital component to be eligible for presentation.
- Service providers can also adjust bids that are associated with the copy of the digital component group. For example, a service provider can specify that the bid for the copy of the digital component group (i.e., the retargeted digital component group) have a higher bid (e.g., $5 per click) than the bid (e.g., $1 per click) for the initial instance of the digital component group (e.g., the keyword targeted digital component group). Service providers can further be allowed to change the creatives (e.g., the digital components that are presented) for the copy of the digital component group. For example, the service providers may include digital components for special offers (e.g., 10% discounts on products) in the retargeted digital component group, while the keyword targeted digital component group may include more general informational digital components that do not include special offers.
- special offers e.g. 10% discounts on products
- FIG. 4 is a flow diagram of an example process 400 for providing retargeted content items (e.g., digital components) with a search results page.
- the process 400 is a process by which one or more retargeted content items (and/or one or more keyword targeted content items) are determined to be eligible for presentation in response to a content item request.
- the retargeted content items that are determined to be eligible for presentation can be those retargeted content items that are targeted using a targeting keyword that matches a search query that is referenced by the content item request and that are also targeted using a retargeting set that includes a retargeted identifier that matches a user identifier (e.g., a cookie) that is referenced by the content item request.
- a targeting keyword that matches a search query that is referenced by the content item request
- a retargeting set that includes a retargeted identifier that matches a user identifier (e.g., a cookie) that is reference
- the keyword targeted content items can be eligible for presentation irrespective of the user identifier that is referenced by the content item request.
- a responsive content item that is to be provided in response to the content item request is selected based, in part, on bids that are associated with the eligible content items, and data specifying the responsive content item can be provided in response to the content item request.
- the process 400 can be implemented, for example, by the retargeting apparatus 120 or another data processing apparatus.
- the retargeting apparatus 120 is a data processing apparatus that includes one or more processors that are configured to perform actions of the process 400 .
- a non-transitory computer readable medium can include instructions that when executed by a data processing apparatus cause the data processing apparatus to perform actions of the process 400 .
- a request for a content item that is to be provided with a search results page is received ( 402 ).
- the request includes data indicating that a search query was submitted by a user device.
- the data can also include a user identifier for the user device that submitted the search query.
- a content distribution system may receive a request to provide a digital component for presentation with a search results page.
- the request may include a search query (e.g., “DVD player”) and a user identifier which identifies a computer (or other user device) from which the search query was submitted.
- the user identifier can be, for example, a user identifier (e.g., a cookie) that was placed on the user device when the retargeting script was executed or a user identifier that was placed on the user device prior to execution of the retargeting script, as described above with reference to FIG. 3 (e.g., 306 ).
- a user identifier e.g., a cookie
- a plurality of keyword targeted content items that are eligible for presentation with the search results page are identified ( 404 ).
- each eligible keyword targeted content item is a content item that is eligible for presentation based on the search query matching a targeting keyword for the keyword targeted content item.
- the eligibility of a keyword targeted content item does not require that the user identifier referenced by the content item request match a retargeted identifier that is included in a set of retargeted identifiers.
- a keyword targeted digital component may be eligible for presentation based on “DVD player” matching a targeting keyword (for example, “DVD”, “player”, or “DVD player”) for the keyword targeted digital component (i.e., irrespective of whether a user identifier is referenced by the content item request or whether a user identifier referenced by the content item request matches a retargeted identifier that is included in a retargeting set).
- a targeting keyword for example, “DVD”, “player”, or “DVD player”
- each retargeted content item is a content item for which presentation eligibility is conditioned, at least in part, on a user identifier that is referenced by the content item request matching a retargeted identifier that is included in a retargeting set.
- the presentation eligibility of a retargeted content item can further be conditioned on a search query referenced by the content item request matching a targeting keyword for the retargeted content item.
- a particular digital component is associated with the targeting keyword “DVD,” and that the service provider has specified that the particular digital component is only eligible for presentation if the content item request includes a user identifier (e.g., identifier A) that matches a retargeted identifier (e.g., identifiers A, B, or C) in a specified retargeting set (e.g., a set of user identifiers for user devices that have requested a DVD page from the service provider's website).
- a content item request that references the search query e.g., “DVD”
- a determination can be made that the search query matches the targeting keyword (e.g., “DVD”).
- the particular digital component will not be eligible for presentation in response to the content item request (e.g., on the search results page) unless it is further determined that the user identifier that is referenced by the content item request matches a retargeted identifier from the retargeting set.
- a service provider can specify additional targeting criteria for digital components. For example, in addition to specifying that presentation eligibility for a digital component is conditioned on the user identifier that is included in the content item request matching a retargeted identifier that is in a particular retargeting set, a service provider can further specify that the user not match a non-targeted user identifier in a set of non-targeted identifiers.
- a non-targeted identifier is a user identifier for a user (or user device) that is used to prevent a digital component from being eligible for presentation.
- the service provider may wish to prevent digital components for the DVD player to be provided to the user.
- the service provider may add the user identifier for the user to a set of non-targeted user identifiers (e.g., thereby identifying the user identifier as a non-targeted identifier) and specify that the digital components for the DVD players not be eligible for presentation when the user identifier that is included in the content item request matches a non-targeted identifier that is included in the set of non-targeted user identifiers.
- retargeted content items that are eligible for presentation in response to content item request can be identified, for example, by first identifying a set of retargeting content items that are targeted using keywords that are matched by the search query. Once this set of retargeted content items has been identified, a further determination of whether additional targeting criteria for each of the retargeted content items can be made. For example, for each of the retargeted content items in the set, a determination can be made whether the user identifier that is included in the content item request matches a retargeted identifier that is included in a retargeting set with which the retargeted content item is targeted.
- the retargeted content item can be removed from (or prevented from inclusion in) a set of eligible retargeted content items for the content item request.
- retargeted content items and keyword targeted content items that that are targeted using keywords that match the search query can all be identified together based on their targeting keywords.
- the retargeted digital components can then be identified as such based on the retargeted digital components being further targeted using a retargeting set.
- the retargeted content items that are determined to be eligible for presentation can be limited, for example, to retargeted content items that are targeted using retargeting sets that contain at least a pre-specified minimum number of retargeted identifiers.
- each retargeted digital component that is eligible for presentation can be required to be targeted using retargeting sets that include more than 1,000 (or another threshold number of) unique retargeted identifiers in order to protect the privacy of users (e.g., in addition to using user identifiers that are identity neutral and do not contain personal information).
- the particular retargeting set can be disabled and/or content items that are eligible for presentation based on the particular retargeting set can be removed from the set of eligible retargeted content items.
- a retargeted content item is removed from the plurality of content items eligible for presentation in response to determining that a user identifier matches a particular non-targeted user identifier in a set of non-targeted user identifiers. For example, if a user identifier matches a particular non-targeted user identifier in a set of non-targeted user identifiers for a retargeted digital component, the retargeted digital component may be removed from the set of digital components that are eligible for presentation with a search results page.
- a content distribution system may determine that a particular keyword targeted digital component and at least one of the retargeted digital components are both provided by the same service provider. The determination can be made, for example, based on a determination that each of the keyword targeted content item and the retargeted content item are both identified as belonging to a same digital component management account. The determination can also be made, for example, based on the particular content item and the retargeted content item each being included in the same digital component campaign.
- the particular keyword targeted content item can be optionally removed from the plurality of keyword targeted content items that are eligible for presentation ( 410 ). For example, if a keyword targeted digital component and a retargeted digital component from a same service provider are both eligible for presentation, the keyword targeted digital component may be deemed ineligible, for example, so that bids for the digital components for which the service provider has provided more specific targeting criteria (e.g., retargeted content items) are used in the auction. This prevents a service providers two sets of digital components from competing in the auction. Other techniques for selecting eligible content items from among multiple sets of content items that are provided by a same service provider can also be used (e.g., selecting the set of digital components having a higher bid or higher historical performance measure).
- a responsive content item to be presented with the search results page is selected ( 412 ).
- the responsive content item is selected based at least in part on bids that are associated with each of the keyword targeted content items that are eligible for presentation with the search results page and bids for each of the retargeted content items that are eligible for presentation with the search results page.
- a content distribution system may conduct an auction to select a digital component to be presented with the search results page.
- the winner of the auction i.e., the digital component that is selected
- the auction score may be based on the bid and/or digital component quality measures associated with each digital component.
- Data specifying the responsive content item is provided ( 414 ).
- a content distribution system may provide data specifying a network location from which the winning digital component can be obtained by the user device.
- the digital component itself can be provided to the user device in response to the request.
- the thread optimization component 124 can create at least one single thread data structure 250 .
- the single thread data structure 250 can include a packet based architecture (or other format) and can include at least one header 251 .
- the header 251 can include supplemental data identifying the content distribution system 110 , source or destination address information, governing protocol information, IP addresses, frame synchronization data, size data, resolution data, or metadata associated with action data structures.
- the payload or body of the single thread data structure 250 can include at least one sequence dependency parameter 252 , or other information such as at least one first data transmission 253 or at least one second data transmission 254 .
- the single thread data structure 250 can include one or more than one structures, e.g., multiple packets having respective headers 251 and payloads indicating at least part of the first data transmission 253 or the second data transmission 254 .
- the sequence dependency parameter 253 can indicate a sequence dependency of actions from the plurality of actions indicated by the first data transmission 253 or the second data transmission 254 .
- the header 251 , sequence dependency parameter 252 , first data transmission 253 , and the second data transmission 254 may but need not be included in the single thread data structure 250 .
- the body of the single thread data structure 250 can include only the first data transmission 253 (or portion thereof) and not include any of the sequence dependency parameter 252 or the second data transmission 254 , or the body of the single thread data structure 250 can include the sequence dependency parameter 252 as well as one or more of the first data transmission 253 and the second data transmission 254 .
- the single thread data structure 250 can include one or more individual packets transmitted separately in sequence or parallel as part of one or more data transmissions between the content distribution system 110 and the service provider computing device 108 or the content provider computing device 139 .
- the header 251 or the sequence dependency parameter 252 can indicate that the separate transmissions or separate data packets are associated with the same batch transmission, e.g., the same overall single thread data structure 250 .
- the direct action API 127 can merge or otherwise link together multiple different single thread data structures into one single thread data structure 250 .
- the single thread data structure 250 can include multiple packets or multiple different structures that are separate but associated with one another.
- the thread optimization component 124 can prioritize one action of the single thread data structure 250 over another action.
- the prioritization can be indicated by the sequence dependency parameter 252 or otherwise provided to the direct action API 127 or the content selector component 125 .
- the thread optimization component 124 can prioritize a first in time action indicated by the single thread data structure 250 .
- the direct action API 127 or other component such as the content selector component 125 can provide data transmissions (e.g., at least part of the first data transmission 253 or the second data transmission 254 ) to the content provider computing device 139 or to the service provider computing device 108 to effect a conversion related to the first in time action.
- the content distribution system 110 can receive, from a first client computing device 134 , the first input audio signal 605 , (e.g., “OK, I would like to go to go dinner tonight”).
- the content distribution system 110 can also receive, from the same or a different client computing device 134 , the second input audio signal 610 , (e.g., “OK, I would like to catch a movie later”).
- the content distribution system 110 can generate respective action data structures and corresponding data transmissions for the first and second audio input signals 605 , 610 .
- the content distribution system 110 components such as the thread optimization component 124 can apply statistical or heuristic techniques to the first input audio signal 605 and the second input audio signal 610 to generate at least one sequence dependency parameter indicative of sequence dependent actions from among the actions of the first input audio signal 605 and the second input audio signal 610 .
- the content distribution system 110 can batch or pool the data transmission (e.g., packets) or the action data structures corresponding to the first input audio signal 605 and the second input audio signal 610 to create the batched or pooled single thread data structure 250 .
- the content distribution system 110 can transmit or otherwise provide the single thread data structure 250 to the service provider computing device 108 for processing by the service provider computing device 108 to, for example reserve at least one car, purchase movie tickets, or make a dinner reservation responsive to the first and second input audio signals 605 , 610 .
- portions of the same single thread data structure can be provided to different computing devices.
- all or some of the single thread 250 can be provided to a service provider computing device 108 to effect a conversion, e.g., order a car from a car share service, and the same or different portions of the single thread 250 can be provided (simultaneously is sequentially) to a content provider computing device 139 to effect another conversion, e.g., obtain a content item for a restaurant.
- the content provider computing device 139 or the service provider computing device 108 can perform at least one operation defined or indicated by the single thread data structure 250 .
- the operation can correspond to one or more of the respective actions of the action data structures (or data transmissions) of the first or second input audio signals 605 , 610 .
- the operations can include reserving a car from a car share service, from the service provider computing device 108 , or providing a content item for a movie.
- the content provider computing device 139 can provide a first response 615 (e.g., a content item for a movie) to the client computing device 134
- the service provider computing device 108 can provide a second response 620 (e.g., to reserve a car) to the same or a different client computing device 134
- the first and second responses 615 , 620 can bypass the content distribution system 110 during transmission from the content provider computing device 139 or the service provider computing device 108 to the client computing device 134 .
- the responses 615 , 620 can include text, image, or other data messages (including audio) that confirm a conversion action, such as a reservation for a car from a car service or rending of a content item.
- the content distribution system 110 can receive an indication of the conversion (or of the responses 615 , 620 ) via the computer network 102 from the service provider computing device 108 , the content provider computing device 139 , or from the client computing device 134 .
- the single thread 250 created by the content distribution system 110 can indicate an actual, known, scheduled, or estimated time of actions that correspond to the thread. These times can include movie start times, transport pick up times, dinner reservation times, or event times, among others. The times can be discrete times, e.g., 8:00 pm dinner reservations, or relative times relative to other actions, e.g., the action ‘B’ is scheduled to begin 15 minutes after the known or estimated conclusion time of action ‘A’.
- the thread 250 can indicate that a first action (e.g., eating dinner) is scheduled to occur prior to a second action (e.g. watching a movie).
- the direct action API 127 can detect the completion of a first action. For example, the computing device 134 can execute a script to pay the bill at the restaurant, or the direct action API 127 can estimate that dinner will last for 90 minutes, or the end user can provide an audio input signal or other data message to indicate that the first action is complete or scheduled for completion at a time or within a time window. Responsive to detection of completion (e.g., a known or estimate end time) of a first action, the direct action API 127 can proceed to transmit data packets of the single thread to a service provider computing device 108 or to a content provider computing device 139 .
- completion e.g., a known or estimate end time
- This transmission can occur subsequent to known or estimated completion of the first action, or during a time window, (e.g., within one hour) of known or estimated completion of the first action.
- the direct action API 127 can provide at least part of the single thread 250 to a service provider computing device 108 to purchase movie tickets, or to a content provider computing device 139 to obtain a content item for a movie.
- Indications of the conversions e.g., purchase of the tickets or rendering of the content item at the client computing device 134
- the sequence dependency parameter 252 can indicate the order in which actions of the single thread 250 are scheduled to occur, e.g., can indicate that a first action is scheduled to occur prior to a second action.
- the direct action API 127 can identify at least one deadlock condition of at least one action of the single thread 250 .
- a deadlock condition can indicate that a second action cannot proceed until after a first, prior action is complete.
- the direct action API 127 can identify a deadlock condition when the first action is a movie action (watching a movie in a theater) and a second action is transport home via a car share service after the movie is over.
- the direct action API 127 can determine a deadlock condition for the second action (e.g., the ride home) that lasts until a time associated with the first action, such as a scheduled end time of the movie.
- the direct action API 127 or other component such as the interface 123 can prevent transmission of the data transmission to a service provider computing device (e.g., a car share service) responsive to the deadlock condition.
- a service provider computing device e.g., a car share service
- the content distribution system 110 or component thereof can prevent transmission of data packets of the data transmission (or data structure) for the action (e.g., to reserve a car) to a service provider computing device 108 (e.g., of a car share service) during the time period of the deadlock condition. This prevents the service provider computing device 108 from receiving the request for a car (or other service) too early.
- the direct action API 127 can obtain an indication or otherwise determine that the deadlock condition has terminated or no longer exists. For example, the direct action API 127 can query the service provider computing device 108 or other third party computing device to determine a scheduled end time of a movie or other action. Upon arrival of this time, or within a threshold time period (e.g., 30 minutes or 5 minutes) in advance of this time the direct action API can break, release, or terminate the deadlock condition. Subsequent to expiration of the deadlock condition the content distribution system 110 can transmit (e.g., via the interface) to the service provider computing device 108 data of the data transmission or data structure corresponding to a subsequent action such as a ride home after the movie.
- a threshold time period e.g. 30 minutes or 5 minutes
- the direct action API 127 can receive an indication form the client computing device 134 to terminate the deadlock condition. For example, the end user may decide to leave the movie early, before the movie is finished, and can enter an input audio signal into the client computing device, e.g., “OK, this movie stinks, I'd like a ride home please”.
- the content distribution system 110 e.g., the NLP component 122 or the direct action API 127
- the direct action API 127 can also provide data for an action (e.g., data of a data transmission or action data structure of the single thread 250 ) to the content provider computing device 139 to obtain a content item related to the post-deadlock action.
- the content item can be provided by the content distribution system 110 or by the content provider computing device 139 to the client computing device 134 for rendering.
- the content item can indicate, for example, “Sorry to hear about the movie, would you like to order a car from a car share company?”.
- the content selector component 125 (or other component such as the interface 123 or the direct action API 127 ) can block selection of the content item, or transmission of the selected content item to the client computing device 134 , responsive to a deadlock condition or until release of the deadlock condition.
- the direct action API 127 can modify sequential orders of actions indicated by the single thread 250 .
- the direct action API can determine an indication of a first sequential order, e.g., a first action, a second action subsequent to the first action, and a third action subsequent to the second action (dinner, then a movie, then a ride home).
- the direct action API 127 and other components such as the NLP component 122 and the interface 123 can receive a request to modify the sequential order.
- the content distribution system 110 can receive in input audio signal from the client computing device of “OK I'd like to eat dinner after the movie.”
- the direct action API 127 (or NLP component 122 ) can obtain from this audio input signal a request to modify the sequential order of the actions to, for example, a movie, then dinner, then a ride home. From this information, the direct action API 127 can generate a modified sequential order so that the second action (watching the movie) is now scheduled to occur prior to the first action (eating dinner).
- the direct action API 127 or content selector component 125 (or other components) can proceed accordingly to transmit data transmission of the movie action prior to data transmissions of the dinner action to the content provider computing device 139 or the service provider computing device 108 .
- the direct action API 127 can also identify or modify a deadlock condition to delay operations related to the dinner action based on an end time of the first movie action.
- the actions of dinner, movies, and transport are examples and any number of end user activities or requests can constitute actions. The modifications can occur responsive to inputs other than the input audio signal. For example, if tickets to the 9 pm movie (after dinner) are sold out, the content distribution system 110 can provide an audio output for rendering at the client computing device 134 to suggest watching a movie (e.g., the 5 pm showing) prior to dinner.
- the content distribution system 110 can perform offline action. This can save processing and electrical power requirements and reduce or shift network traffic to off-peak times.
- the single thread 250 can indicate a first action and a second subsequent action that depends on resolution of the first action. These actions can be days or weeks (or more) apart from one another, such as buying a plane ticket (first action, today) for a three week tropical beach vacation that will occur six months in the future, and booking scuba lessons for the last day of the vacation (second action, more than six months away).
- the direct action API 127 can communicate in real time with the service provider computing device 108 corresponding to an airline entity responsive to receipt of the input audio signal to buy the plane tickets in an online action to effect a conversion—the purchase of the plane tickets.
- the second action in this example remains six months away. Over this six month period or other time window the direct action API 127 or other component such as the content selector component 125 can select content items or perform other operations responsive to the second action (scuba lessons).
- the direct action API can obtain offline by obtaining this information from the data repository 129 or from a third party data repository relating to scuba lessons.
- the offline action may or may not be in real time, and an offline action does not require time separation (e.g., six months) between actions.
- the content distribution system 110 can obtain information responsive to actions from the data repository 129 or from a third party database in a real time, as part of a communication session or synchronous or asynchronous conversation with the client computing device.
- FIG. 7 illustrates a block diagram of a method 700 for selecting digital components.
- the method 700 can include receiving interaction data (ACT 702 ).
- the method 700 can include identifying a first plurality of candidate digital components (ACT 704 ).
- the method 700 can include identifying a second plurality of candidate digital components (ACT 706 ).
- the method 700 can include selecting a digital component from the first plurality of candidate digital components and the second plurality of candidate digital component (ACT 708 ).
- the method 700 can include transmitting the digital component to the client device (ACT 710 ).
- the method 700 can include receiving interaction data (ACT 702 ).
- the interaction data can be received by a data processing system from a client device.
- the interaction data can include a set identifier.
- the interaction data can also include an indication that the client device performed a pre-specified interaction with a script associated with the set identifier.
- the script can be a component of a content item previously presented to the client device.
- the method 700 can include receiving, by a natural language processor and via an interface of the data processing system, data packets that can include a first input audio signal and a second input audio signal that were detected by a sensor of the client device.
- the natural language processor can parse the first and the second input audio signal to identify a first request and a first trigger keyword.
- the natural language processor can also parse the second input audio signal to identify a second request and a second trigger keyword.
- the content distribution system can execute, launch, or invoke the NLP component to receive packets or other protocol based transmissions via the network from at least one client computing device.
- the data packets can include or correspond to an input audio signal detected by the sensor (e.g., a microphone) of a first client computing device, such as a first end user saying “OK, I would like to go to go dinner tonight” into the client computing device, e.g., a smartphone.
- the NLP component can parse the input audio signal to identify requests (e.g., an entertainment request for “dinner”) as well as trigger keywords (“to go to”) that correspond or relate to the request.
- the method 700 can include generating at least one first action data structure based on the identified requests or keywords associated with the received first audio input signal.
- the direct action API can generate an action data structure that indicates a first action, such as a location for a taxi pick-up, a requested service provider, or a restaurant recommendation.
- the NLP component can also receive the second audio input signal.
- the NPL component can receive the audio input signal via a packet or other protocol based transmissions via the network.
- the second audio input signal can be received from the same or a different client computing device that originated the first input audio signal.
- the data packets can include or correspond to an input audio signal detected by the sensor of the second client computing device, such as an end user saying “OK, I would like to catch a movie later” into the client computing device.
- the data processing system can identify at least one second request or at least one second trigger keyword from the second input audio signal.
- the NLP component can parse the input audio signal to identify requests (an entertainment request for a “movie”) as well as trigger keywords (“to catch”) that correspond or relate to the request.
- the data processing system can generate at least one second action data structure based on the identified requests or keywords associated with the received first audio input signal.
- the direct action API can generate an action data structure that indicates a second action, such as a location for a taxi pick-up, a requested service provider, or movie information.
- the method 700 can include identifying a first plurality of candidate digital components (ACT 704 ).
- the first plurality of candidate digital components can be identified by the data processing system.
- the data processing system can identify the first plurality of candidate digital components based on a first match between a query and a first keyword associated with the first plurality of digital components. For example, assume that the query submitted by the client device is “DVD player.”
- a digital component can be selected as one of the candidate digital components based on the query “DVD player” matching a keyword (e.g., a targeting keyword) such as, for example, “DVD”, “player”, or “DVD player”.
- a keyword e.g., a targeting keyword
- the method 700 can include identifying a second plurality of candidate digital components (ACT 706 ).
- the second plurality of candidate digital components can be identified based on a second match between the query, a second keyword associated with the second plurality of digital components, and the interaction data.
- the second plurality of candidate digital components can be identified because the client device interacted with the script associated with the set identified (e.g., the client device previously performed the pre-specified action).
- the second plurality of candidate digital components can be identified in a method similar to the identification of the first plurality of candidate digital components.
- the second plurality of candidate digital components can be retargeted content items.
- the retargeted content items can be content items that are stored in association with the set identifier.
- the retargeted content items can be selected for a client device after the client device has performed the pre-specified interaction.
- the method 700 can include determining that a first portion of the first plurality of candidate digital components is associated with a publisher and that a second portion of the second plurality of candidate digital components is also associated with.
- the publisher can be a content provider.
- the first portion of the first plurality of candidate digital components can be removed from the first plurality of candidate digital components prior to the selection of the digital component. For example, if a publisher has candidate digital components in the first plurality and the second plurality of candidate digital components that are both eligible for selection, the candidate digital component in the first plurality of candidate digital component can be removed to prevent the two digital components from competing in a selection process.
- Other techniques for selecting eligible content items from among multiple sets of content items that are provided by a same advertiser can also be used (e.g., selecting the set of advertisements having a higher bid or higher historical performance measure).
- the method 700 can include selecting a digital component from the first plurality of candidate digital components and the second plurality of candidate digital components (ACT 708 ).
- the digital components can be selected from the first and second plurality of candidate digital components based on a performance metric of each of the candidate digital components in the first plurality of digital components and the second plurality of digital components.
- the performance metric can be a historical performance measure.
- the performance metric can include a bid value.
- the performance metric can be a function of one or more of the digital component's relevance to a current user interest (e.g., as determined by the relationship between the digital component and the input audio signal).
- the performance metric can be can be based on a relevance to a user type, relevance to a user, an offer per impression, an offer per user action (e.g., selection, conversion, etc.), a performance parameter of the digital component (e.g., selection rate, user rating, conversion rate, etc.), how the digital component performs (e.g., in terms of selection rate, conversion rate, etc.) on computing devices device configurations similar to the computing device.
- the performance metric can be weighted in the favor of the digital components in the second plurality of candidate digital components.
- the digital processing system can be more likely to select the digital component from the second plurality of candidate digital components. For example, if a candidate digital component from the first plurality of candidate digital components has a conversion rate of 0.67 and a candidate digital component from the second plurality of candidate digital components has a conversion rate of 0.51, but a weighting of 2 ⁇ because the client device performed the pre-specified interaction, the candidate digital component from the second plurality of digital components can be selected even though the unweighted conversion rate for the candidate digital component from the first plurality of candidate digital components is higher.
- the method 700 can include identifying, by the direction action API, a deadlock condition associated with the second action.
- a deadlock condition can indicate that a second action cannot proceed until after a first, prior action is complete.
- the direct action API can identify a deadlock condition when the first action is a movie action (watching a movie in a theater) and a second action is transport home via a car share service after the movie is over.
- the direct action API can determine a deadlock condition for the second action (e.g., the ride home) that lasts until a time associated with the first action, such as a scheduled end time of the movie.
- the direct action API or other component such as the interface can prevent transmission of the data transmission to a service provider computing device (e.g., a car share service) responsive to the deadlock condition.
- a service provider computing device e.g., a car share service
- the content distribution system or component thereof can prevent transmission of data packets of the data transmission (or data structure) for the action (e.g., to reserve a car) to a service provider computing device (e.g., of a car share service) during the time period of the deadlock condition. This prevents the service provider computing device from receiving the request for a car (or other service) too early.
- the method 700 can include transmitting the digital component to a client device (ACT 710 ).
- the digital component can be transmitted to a second client device that is different from the client device that transmitted the input audio signal to the data processing system.
- the method can include transmitting the second action data structure to a second service provider device subsequent to receiving an indication of a completion of a first action associated with the first action data structure.
- the data processing system can include a thread optimization component.
- the thread optimization component can determine a sequence dependency parameter.
- the sequence dependency parameter can be determined based on a heuristic technique applied to the first action data structure and the second action data structure. For example, the thread optimization component can apply a heuristic technique to data packets of a first data transmission (or to the corresponding first data structure) and to data packets of a second data transmission (or to the corresponding second data structure) to determine at least one sequence dependency parameter.
- the heuristic or other statistical technique can determine or identify with a threshold degree of certainty patterns among the first and second data transmissions (or corresponding data structures) that indicate a sequence dependency of actions indicated by the data transmissions.
- the sequence dependency parameter can indicate the existence or likelihood (e.g., relative to a threshold level or other benchmark) of actions represented by the data transmissions (or corresponding action data structures) having an order of operations, time, or sequence dependency on each other.
- the sequence dependent operations or actions, indicated by the sequence dependency parameters can include a number of actions that occur in a known, suggested, required, or particular order. For example, going from home to a movie theater, then back home can include three sequence dependent operations or actions.
- the first action in this example includes travelling from home to the movie theater.
- the second action includes watching the movie in the theater.
- the third action includes returning home from the theater.
- the method 700 can include merging a transmission of the first action data structure and the second action data structure into a single thread.
- the data processing system can compare the sequence dependency parameter to a threshold (e.g., a rule, policy, or value) and based on the comparison the data processing system can merge the first and second data transmissions (or associated action data structures) into a single thread.
- the single thread can indicate actions of the first and second (or more) action data structures, and can indicate a sequence or order of these actions, as well as sequence dependencies where for example a second action cannot (or is not scheduled to) begin until after a first action is complete.
- the first action corresponds to the pre-specified interaction with the script and the second action includes the digital component.
- FIG. 8 is a block diagram of an example computer system 500 that can be used to perform operations described above.
- the system 500 includes a processor 510 , a memory 520 , a storage device 530 , and an input/output device 540 .
- Each of the components 510 , 520 , 530 , and 540 can be interconnected, for example, using a system bus 550 .
- the processor 510 is capable of processing instructions for execution within the system 500 .
- the processor 510 is a single-threaded processor.
- the processor 510 is a multi-threaded processor.
- the processor 510 is capable of processing instructions stored in the memory 520 or on the storage device 530 .
- the memory 520 stores information within the system 500 .
- the memory 520 is a computer-readable medium.
- the memory 520 is a volatile memory unit.
- the memory 520 is a non-volatile memory unit.
- the storage device 530 is capable of providing mass storage for the system 500 .
- the storage device 530 is a computer-readable medium.
- the storage device 530 can include, for example, a hard disk device, an optical disk device, a storage device that is shared over a network by multiple computing devices (e.g., a cloud storage device), or some other large capacity storage device.
- the input/output device 540 provides input/output operations for the system 500 .
- the input/output device 540 can include one or more of a network interface device, e.g., an Ethernet card, a serial communication device, e.g., and RS-232 port, and/or a wireless interface device, e.g., and 802.11 card.
- the input/output device can include driver devices configured to receive input data and send output data to other input/output devices, e.g., keyboard, printer and display devices 560 .
- Other implementations, however, can also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, etc.
- FIG. 8 Although an example processing system has been described in FIG. 8 , implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
- This application is a continuation-in-part of and claims priority under 35 U.S.C. § 120 to U.S. application Ser. No. 15/361,668, filed Nov. 28, 2016, which claims the benefit of priority under 35 U.S.C. § 120 as a continuation of U.S. application Ser. No. 14/870,725, now U.S. Pat. No. 9,530,153, filed Sep. 30, 2015, which is a continuation of and claims priority under 35 U.S.C. § 120 to U.S. application Ser. No. 14/176,845, now U.S. Pat. No. 9,177,329, filed on Feb. 10, 2014, which is a continuation of and claims priority under 35 U.S.C. § 120 to U.S. application Ser. No. 13/222,380, now U.S. Pat. No. 8,650,188, filed on Aug. 31, 2011. This application also claims the benefit of priority under 35 U.S.C. § 120 as a continuation-in-part of U.S. application Ser. No. 15/395,725, filed Dec. 30, 2016. Each of the foregoing applications are hereby incorporated herein by reference in their entirety.
- The Internet provides access to a wide variety of resources. For example, video and/or audio files, as well as web pages for particular subjects or particular news articles are accessible over the Internet. Access to these resources presents opportunities for digital components to be provided with these resources and search results pages that facilitate identification of these resources. Excessive network transmissions, packet-based or otherwise, of network traffic data between computing devices can prevent a computing device from properly processing the network traffic data, completing an operation related to the network traffic data, or timely responding to the network traffic data. The excessive network transmissions of network traffic data can also complicate data routing or degrade the quality of the response if the responding computing device is at or above its processing capacity, which may result in inefficient bandwidth utilization. The control of network transmissions corresponding to content item objects can be complicated by the large number of content item objects that can initiate network transmissions of network traffic data between computing devices.
- According to one aspect of the disclosure, a system for selecting digital components includes a data processing system that can have one or more processors. The data processing system can receive, from a client device, interaction data including a set identifier and an indication that the client device performed a pre-specified interaction with a script associated with the set identifier. The data processing system can identify a first plurality of candidate digital components based on a first match between a query and a first keyword associated with the first plurality of digital components. The data processing system can identify a second plurality of candidate digital components based on a second match between the query, a second keyword associated with the second plurality of digital components, and the interaction data. The data processing system can select a digital component from the first plurality of candidate digital components and the second plurality of candidate digital component based on a performance metric of each of the candidate digital components in the first plurality of digital components and the second plurality of digital components. The data processing system can transmit the digital component to the client device.
- According to another aspect of the disclosure, a method for selecting digital components includes receiving, by a data processing system from a client device, interaction data. The interaction data can include a set identifier and an indication that the client device performed a pre-specified interaction with a script associated with the set identifier. The method can include identifying, by the data processing system, a first plurality of candidate digital components based on a first match between a query and a first keyword associated with the first plurality of digital components. The method can include identifying, by the data processing system, a second plurality of candidate digital components based on a second match between the query, a second keyword associated with the second plurality of digital components, and the interaction data. The method can include selecting, by the data processing system, a digital component from the first plurality of candidate digital components and the second plurality of candidate digital component based on a performance metric of each of the candidate digital components in the first plurality of digital components and the second plurality of digital components. The method can include transmitting, by the data processing system, the digital component to the client device.
-
FIG. 1A is a block diagram of an example environment in which a content distribution system manages distribution of content items. -
FIG. 1B depicts a system to combine multiple voice activated audio input data packets that indicated sequence dependent operations in a voice activated computer network environment. -
FIG. 2 is an illustration of an example data flow for populating a retargeting set. -
FIG. 3 is a flow chart of an example process for populating a retargeting set. -
FIG. 4 is a flow diagram of an example process for providing retargeted content items with a search results page. -
FIG. 5 depicts a functional diagram of a single thread structure for a voice activated data packet based computer network environment. -
FIG. 6 depicts a functional diagram of thread data structure generation and communication between remote data processing systems and service provider computing devices in a voice activated data packet based computer network environment. -
FIG. 7 illustrates a block diagram of an example method for selecting digital components. -
FIG. 8 is a block diagram of an example computer system. - Like reference numbers and designations in the various drawings indicate like elements.
- Following below are more detailed descriptions of various concepts related to, and implementations of, methods, apparatuses, and systems to optimize processing of multiple voice activated audio input data packets in a voice activated computer network environment. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways.
- Systems and methods of the present disclosure relate generally to a data processing system that optimizes or dynamically adjusts multiple voice activated packet (or other protocol) based input audio signals via packet based transmissions in a voice activated computer network environment. The data processing system can improve the efficiency and effectiveness of data packet transmission over one or more computer networks by, for example, extracting information from input audio signals to generate multiple corresponding action data structures. The action data structures can be constructed for transmission during communication sessions between the data processing system and multiple different service provider computing devices. From, for example, the packets of different action data structures, the data processing system can determine at least one sequence dependency parameter. The sequence dependency parameters can indicate an order of operation of actions indicated by the action data structures or their corresponding data transmissions. Based on the sequence dependency parameters, the data processing system can merge or combine multiple action data transmissions into a single thread.
- The single thread can include sequence dependent operations of multiple action data structures. The data processing system can provide the single thread or portions thereof (e.g., at least one packet based data structure) to multiple service provider computing devices to accomplish actions indicated by the single thread. The data processing system can also provide the single thread or portions thereof to at least one content provider computing device to obtain content items associated with the single thread. The service provider computing devices and the content provider computing devices can communicate, via or bypassing the data processing system, with at least one client computing device (e.g., a source of the audio input signals) to render audio output to accomplish the actions indicated by the thread, or to render content items at the client computing device.
- By merging or otherwise consolidating multiple action data structures into a single thread, and by identifying sequence dependent operations indicated by the single thread, the processing, power, and memory utilization requirements of the data processing system are reduced, relative to individual processing of multiple action data structures without such consolidation and sequence dependency identification. For example, asynchronous or out-of-sequence processing of operations of individual action data structures can cause untimely, premature, or unnecessary data packet communications via established communication sessions between the data processing system and the service provider or content provider computing devices. This wastes bandwidth, and can cause unnecessary processing operations to occur by the data processing system as well as by the service provider or content provider computing devices, which wastes computing resources of multiple computing devices.
- Based on identified sequence dependent operations in the single thread, the data processing system can temporarily or permanently skip initial operations of a set of sequence dependent operations and can instead proceed to an operation that corresponds to a later-in-time or final operation. By bypassing packet or other protocol based data transmissions that correspond to an early operation of a plurality of sequence dependent operations, and instead proceeding directly to packet based data transmissions for later stage operations in a sequence of operations the data processing system can reduce, delay, or eliminate data processing associated with the early stage operations. This saves processing power and other computing resources such as memory, reduces electrical power consumption by the data processing system and the reduced data transmissions via the computer network reduces bandwidth requirements and usage of the data processing system.
- The systems and methods described herein can include a data processing system that receives a first input audio signal. From the first input audio signal, the data processing system can identify a first request and a first trigger keyword corresponding to the request. Based on the first trigger keyword or the first request, the data processing system can generate a first action data structure, and can construct or prepare a first data transmission including the first action data structure. The first data transmission can be routed as a data packet or other protocol based transmission from the client computing device to at least one first service provider computing device as part of a first communication session.
- The data processing system can receive a second input audio signal. From the second input audio signal, the data processing system can identify a second request and a second trigger keyword corresponding to the request. Based on the second trigger keyword or the second request, the data processing system can generate a second action data structure, and can construct or prepare a second data transmission including the second action data structure. The second data transmission can be routed as a data packet or other protocol based transmission from the client computing device to at least one second service provider computing device as part of a second communication session. The first and second service provider computing devices can correspond to different entities that do not communicate with each other via the data processing system.
- The data processing system can obtain data packets of the first and second transmissions (e.g., from the first and second data structures) and can extract information from the data packets to determine at least one sequence dependency parameter. The sequence dependency parameter can indicate a sequence of operations for actions of the first and second data structures. The data processing system can compare the sequence dependency parameter to a threshold (e.g., a rule, policy, or value) and based on the comparison the data processing system can merge the first and second data transmissions (or associated action data structures) into a single thread. The single thread can indicate actions of the first and second (or more) action data structures, and can indicate a sequence or order of these actions, as well as sequence dependencies where for example a second action cannot (or is not scheduled to) begin until after a first action is complete.
- The data processing system can reorder, skip, or at least temporarily bypass operations related to some actions of the single thread, based for example on sequence dependencies or based on input received from the client computing device. This can be done before or without performing at least some of the data processing operations based on the bypassed action. Bypassing the processing operations for a first action can cause data related to a second action to identified, transmitted and rendered with less data processing and less electrical power usage than would be the case without the bypass.
-
FIG. 1A is a block diagram of anexample environment 100 in which acontent distribution system 110 manages distribution of content items or digital components. Digital components can be a component of content items. Content items can be component of digital components. Theexample environment 100 includes anetwork 102, such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof. Thenetwork 102 connectswebsites 104, user devices 134 (also referred to as client computing devices),service provider devices 108, and thecontent distribution system 110. Theexample environment 100 may include many thousands ofwebsites 104,user devices 134, andservice provider devices 108. - A
website 104 is one ormore resources 105 associated with a domain name and hosted by one or more servers. An example website is a collection of web pages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, such as scripts. Eachwebsite 104 is maintained by a publisher, which is an entity that controls, manages and/or owns thewebsite 104. - A
resource 105 is any data that can be provided over thenetwork 102. Aresource 105 is identified by a resource address that is associated with theresource 105. Resources include HTML pages, word processing documents, and portable document format (PDF) documents, images, video, and feed sources, to name only a few. The resources can include content, such as words, phrases, images and sounds, that may include embedded information (such as meta-information in hyperlinks) and/or embedded instructions (such as JavaScript scripts). Units of content that are presented in (or with) resources are referred to as content items. An example of a content item is a digital component that is presented on a search results page. - A
user device 134 is an electronic device that is under control of a user and is capable of requesting and receiving resources over thenetwork 102.Example user devices 134 include personal computers, mobile communication devices, and other devices that can send and receive data over thenetwork 102. Auser device 134 typically includes a user application, such as a web browser, to facilitate the sending and receiving of data over thenetwork 102. - A
user device 134 can submit aresource request 112 that requests aresource 105 from awebsite 104. In turn, data representing the requestedresource 114 can be provided to theuser device 134 for presentation by theuser device 134. The requestedresource 114 can be, for example, a home page of awebsite 104, a search results page in which search results are presented, or anotherresource 105. The data representing the requestedresource 114 can include data that cause presentation of resource content 116 (e.g., search results) at theuser device 134. The data representing the requestedresource 114 can also include data specifying a portion of the resource (e.g., a portion of a web page) in which digital components (or other content items) can be presented. Throughout this document, these specified portions of the resource or user display are referred to asdigital component slots 118. -
User devices 134 can submit search queries to thesearch system 115 over thenetwork 102. In response, thesearch system 115 accesses asearch index 117 to identifyresources 105 that are relevant to the search query. Thesearch system 115 identifies theresources 105 in the form of search results and returns the search results to theuser devices 134 in search results pages. A search result is data generated by thesearch system 115 that identifiesresources 105 that are responsive to a particular search query, and includes a link to theresources 105. An example search result can include a web page title, a snippet of text or a portion of an image extracted from the web page, and the URL of the web page. Search results pages can also include one or moredigital component slots 118 in which digital components can be presented. - For example, users that are interested in a particular product may research the particular product by submitting one or more search queries to the
search system 115 in an effort to identify information that will assist the user in determining whether to purchase the product. For example, a user that is interested in purchasing a DVD player may submit search queries such as “portable DVD player,” “cheap DVD player,” “Brand X DVD player.” In response to each of these search queries, the user may be provided search results that have been identified as responsive to the search query (e.g., have at least a minimum threshold relevance to the search query, for example, based on cosine similarity measures or clustering techniques). The user can then select one or more of the search results to request presentation of a web page or anotherresource 105 that is referenced by a URL associated with the search result. - When search results are requested by a
user device 134, thecontent distribution system 110 receives a request for digital components (or another content item) to be provided with the search results. In response to the request, thecontent distribution system 110 selects digital components that are determined to be relevant to the search query. In turn, the selected digital components are provided to theuser device 134 for presentation with the search results. - Based on data included in the request for digital components, the
content distribution system 110 selects digital components that are eligible to be provided in response to the request (“eligible digital components”). For example, eligible digital components can include digital components having characteristics matching the characteristics of thedigital component slots 118 and that are identified as relevant to a search query that has been submitted by a user. Digital components having targeting keywords that are matched by the search query can be selected as eligible digital components bycontent distribution system 110. - For example, a digital component for “Service provider A” that sells portable DVD players may be targeted using the targeting keyword “portable DVD player.” This targeting keyword would be matched by the search query “portable DVD player” (and possibly other search queries), and may be presented with the search results page that is provided to the user. If the user selects (e.g., clicks) the digital component for Service Provider A, the user's device can be redirected, for example, to a web page provided for Service provider A. This web page can include, for example, information about a portable DVD player that Service Provider A sells, a price at which Service Provider A will sell the portable DVD player, and user interface elements that enable the user to specify a number of the DVD players that the user will buy, as well as payment information and shipping information required to complete the transaction.
- A targeting keyword can match a search query by having the same textual content (“text”) as the resource keyword or search query. For example, a digital component associated with the targeting keyword “DVD” can be an eligible digital component for a digital component request including the search query “DVD.”
- A targeting keyword can also match a search query by having text that is identified as being relevant to (e.g., having at least a minimum relevance score relative to) a targeting keyword despite having different text than the targeting keyword. For example, a digital component having the targeting keyword “DVD” may also be selected as an eligible digital component for a digital component request including a search query for “Movie Disk” because a DVD is a type of movie disk, and therefore, is likely to be relevant to the term “Movie Disk.”
- Targeting keywords and other data associated with the distribution of digital components can be stored in a content
item data store 119. The contentitem data store 119 is a data store that stores references to digital components, digital component campaign parameters that are used to control distribution of the digital components, data representing conditions under which the digital component was selected for presentation to a user, and data representing actions taken by users in response to presentation of the digital component. For example, the content item data store can store targeting keywords, bids, and other criteria with which eligible digital components are selected for presentation. - Targeting digital components using keywords enables a service provider to target users that, based at least in part on the search queries that the users submit, are considered interested in particular types of products. However, service providers may want to more specifically target particular digital components to users that have previously visited one or more of the service provider's web pages and/or performed other specified actions, referred to as target interactions.
- For example, if a user that submits the search query “DVD player” has previously requested, from the service provider's site, presentation of a web page on which information about available DVD players is presented, the service provider may consider this user more likely to buy a DVD player. Therefore, the amount the service provider may be willing to pay to present a digital component for DVD players to this user may be greater than the amount that the service provider is willing to pay to present the DVD player digital component to another user (i.e., that did not previously visit the DVD page on the service provider's site). Alternatively (or additionally), the service provider in this example may want to present a special incentive (e.g., offer 10% off of a DVD player) to this user to purchase a DVD player, while not providing the special incentive to other users that did not view the DVD page at the service provider's site.
- In a search environment, the fact that a user submits a particular search query does not provide information about the user's prior online activity. For example, while a user that submits the search query “DVD player” can be considered to be interested in information about DVD players, this search query alone does not indicate whether the user previously viewed the DVD page on a particular service provider's site. Thus, using keyword targeting alone, it can be difficult for a service provider target digital components to users who, prior to submitting a particular search query, have previously performed pre-specified actions (e.g., requested particular pages from the service provider's site).
- The
environment 100 includes aretargeting apparatus 120 that facilitates targeting digital components (or other content items) to a set of users based, at least in part, on the users having previously performed a pre-specified action (i.e., a target interaction). Theretargeting apparatus 120 can be a component of thecontent distribution system 110. In some implementations, theretargeting apparatus 120 enables a service provider to create, or request creation of, a retargeting set with which one or more retargeted digital components (or other content item) can be targeted. A retargeting set is a set of user identifiers for users that have been determined (e.g., based on interaction data) to have performed a target interaction. As described in more detail below, the service provider can specify the target interaction. - As described in more detail with reference to
FIG. 2 , a service provider can request from the retargeting apparatus 120 (e.g., through a digital component management user interface) a retargeting script that can facilitate population of the retargeting set in response to performance of the target interaction. The retargeting script is a portion of code that can be embedded in one or more of the service provider's web pages. When the user performs an action that causes execution of the retargeting script (e.g., the user requests the web page or interacts with a specified portion of the web page), the retargeting script provides interaction data to theretargeting apparatus 120. - The interaction data includes data indicating that a user identifier (e.g., a cookie or another user identifier, such as an account identifier) is to be added to a retargeting set. In response to receiving the interaction data, the
retargeting apparatus 120 adds the user identifier to a retargeting set that is stored, for example, in the contentitem data store 119. When a user identifier is added to a retargeting set, the user identifier is considered to be a retargeted identifier. As used throughout this document the term retargeted identifier refers to a user identifier that has been added to a retargeting set. - Each retargeting script can include, for example, information specifying a set identifier. The set identifier is a unique character string that is indicative of the retargeting set with which the retargeting script is associated. The retargeting script can include the set identifier in the interaction data such that, upon receipt of interaction data, the
retargeting apparatus 120 can add user identifiers to the correct retargeting set. For example, if a service provider created a retargeting set for users that requested presentation of one of the service provider's web pages, the set identifier for this retargeting set could be included in the retargeting script, and added to interaction data such that the user identifiers for users that requested presentation of the service provider's web page would be added to this retargeting set. - In some implementations, each retargeting set that is stored in the content
item data store 119 are anonymized to protect the identity of the user with which the user interaction data is associated. For example, each user identifier can be a pseudo-random string that uniquely identifies a user device (or user), but does not indicate the identity of a user. Alternatively (or additionally), the user interaction data can include a hash value of the user identifier rather than the user identifier, thereby further protecting user privacy. In some implementations, user interaction data are only stored for users that opt-in to having user interaction data stored. For example, a user can be provided an opt-in/opt-out user interface that allows the user to specify whether they approve storage of data representing their interactions with content. - In some implementations, the availability (or eligibility) of a retargeting set for targeting purposes can be conditioned on the number of retargeted identifiers in the retargeting set exceeding a pre-specified threshold value. For example, a retargeting set may be considered ineligible to be used to target digital components until there are at least 500 retargeted identifiers in the retargeting set. Conditioning the availability of a retargeting set based on the number of retargeted identifiers in the retargeting set further protects the identity of the users with which the retargeted identifiers are associated by ensuring that at least a minimum number of different users have performed the target interaction.
- The
retargeting apparatus 120 can enable a service provider to target digital components using one or more retargeting sets. In some implementations, theretargeting apparatus 120 enables a service provider to specify a set of digital components (or other content items) that are only eligible for presentation with a search results page when the user identifier that is associated with the content item request (e.g., the user identifier for the user device from which the search query was submitted) matches one of the retargeted identifiers that are included in a specified retargeting set. - For example, a service provider may select a particular digital component and specify that the digital component is to be targeted using the retargeting set. The service provider can also specify that all digital components that are included in a particular digital component group (e.g., a set of one or more digital components that that have been grouped together) or digital component campaign (e.g., a set of one or more digital component groups that have been grouped together) are to be targeted using the retargeting set. In this example, the digital components that are targeted using the retargeting set will only be eligible for presentation when the content item request (e.g., a digital component request) includes (or references) a user identifier that matches one of the retargeted identifiers in the specified retargeting set.
- The
retargeting apparatus 120 can enable a service provider to target digital components using the retargeting set independent of, or in addition to, other targeting criteria that are used to target the digital components. For example, a service provider may copy an existing digital component group (e.g., using a “copy ad group” function) to create a new instance of the digital component group. In this example, the service provider may edit the targeting criteria of the new instance of the digital component group to specify that digital components in the digital component group are only eligible for presentation when one of the retargeted identifiers in a particular retargeting set is matched by the user identifier that is included in the request for digital components. The eligibility of the digital components in this example is further conditioned on the other targeting criteria that were previously specified for the digital component group also being met. For example, assume that the digital component group that was copied was already targeted using only the targeting keyword “DVD player,” and that the service provider only modified the targeting criteria of the new instance of the digital component group to also target the digital component group using the retargeting set. In this example, the digital components in the new instance of the digital component group will not be eligible for presentation unless the search query matches the targeting keyword “DVD player” and the user identifier specified by the request matched one of the retargeted identifiers in the retargeting set. - Throughout this document content items that are targeted using a retargeting set are referred to as retargeted content items, while content items that are targeted using targeting keywords and are not targeted using a retargeting set are referred to as keyword targeted content items. Note that both retargeted content items and keyword targeted content items can be targeted using targeting criteria other than that discussed below. For example, any of the content items can also be targeted using geographic information and/or demographic information.
-
FIG. 1B depicts anexample system 100 to optimize processing of multiple action data structures having sequence dependent operations in a voice activated data packet (or other protocol) based computer network environment. Thesystem 100 can includecontent distribution system 110, for example as part of a voice activated communication or planning system. Thecontent distribution system 110 can include at least one server having at least one processor. For example, thecontent distribution system 110 can include a plurality of servers located in at least one data center or server farm. Thecontent distribution system 110 can determine, from an audio input signal a request and a trigger keyword associated with the request. Based on the request and trigger keyword thecontent distribution system 110 can generate an action data structure. The action data structure can indicate at least one action that corresponds to the input audio signal. Thecontent distribution system 110 can receive multiple separate input audio signals, and for each input audio signal can create a respective data structure. Thecontent distribution system 110 can construct or otherwise prepare data transmissions for each data structure to transmit the data structures during respective communication sessions with respective other computing devices (e.g., servicer provider computing devices or content provider computing devices). Thecontent distribution system 110 can determine, from the action data structures or corresponding data transmissions, one or more sequence dependency parameter. Based on the sequence dependency parameter, thecontent distribution system 110 can merge multiple data transmissions (or corresponding action data structures) into a single thread. The single thread can indicate actions from at least two action data structures, as well as orders of operations or sequence dependencies of the actions. - The
content distribution system 110 can include multiple, logically-grouped servers and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, server farm or a machine farm. The servers can be geographically dispersed. A data center or machine farm may be administered as a single entity, or the machine farm can include a plurality of machine farms. The servers within each machine farm can be heterogeneous—one or more of the servers or machines can operate according to one or more type of operating system platform. Thecontent distribution system 110 can include servers in a data center that are stored in one or more high-density rack systems, along with associated storage systems, located for example in an enterprise data center. Thecontent distribution system 110 with consolidated servers in this way can improve system manageability, data security, the physical security of the system, and system performance by locating servers and high performance storage systems on localized high performance networks. Centralization of all or some of thecontent distribution system 110 components, including servers and storage systems, and coupling them with advanced system management tools allows more efficient use of server resources, which saves power and processing requirements and reduces bandwidth usage. - The
content distribution system 110 can include at least one natural language processor (NLP)component 122, at least oneinterface 123, at least onethread optimization component 124, at least onecontent selector component 125, at least one audiosignal generator component 126, at least one direct action application programming interface (API) 135, at least onesession handler component 128, and at least onedata repository 129. TheNLP component 122,interface 123,thread optimization component 124,content selector component 125, audiosignal generator component 126,direct action API 127, andsession handler component 128 can each include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with thedata repository 129 and with other computing devices (e.g., theclient computing device 134, the contentprovider computing device 139, or the service provider computing device 108) via the at least onecomputer network 102. Thenetwork 102 can include computer networks such as the internet, local, wide, metro or other area networks, intranets, satellite networks, other computer networks such as voice or data mobile phone communication networks, and combinations thereof. - The
network 102 can include or constitute a display network, e.g., a subset of information resources available on the internet that are associated with a content placement or search engine results system, or that are eligible to include third party content items as part of a content item placement campaign. Thenetwork 102 can be used by thecontent distribution system 110 to access information resources such as web pages, web sites, domain names, or uniform resource locators that can be presented, output, rendered, or displayed by theclient computing device 134. For example, via the network 102 a user of theclient computing device 134 can access information or data provided by the contentprovider computing device 139 or the serviceprovider computing device 108. - The
network 102 can include, for example a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (Asynchronous Transfer Mode) network, a SONET (Synchronous Optical Network) network, a SDH (Synchronous Digital Hierarchy) network, a wireless network or a wireline network, and combinations thereof Thenetwork 102 can include a wireless link, such as an infrared channel or satellite band. The topology of thenetwork 102 may include a bus, star, or ring network topology. Thenetwork 102 can include mobile telephone networks using any protocol or protocols used to communicate among mobile devices, including advanced mobile phone protocol (“AMPS”), time division multiple access (“TDMA”), code-division multiple access (“CDMA”), global system for mobile communication (“GSM”), general packet radio services (“GPRS”) or universal mobile telecommunications system (“UMTS”). Different types of data may be transmitted via different protocols, or the same types of data may be transmitted via different protocols. - The
client computing device 134, the contentprovider computing device 139, and the serviceprovider computing device 108 can each include at least one logic device such as a computing device having a processor to communicate with each other or with thecontent distribution system 110 via thenetwork 102. Theclient computing device 134, the contentprovider computing device 139, and the serviceprovider computing device 108 can each include at least one server, processor or memory, or a plurality of computation resources or servers located in at least one data center. Theclient computing device 134, the contentprovider computing device 139, and the serviceprovider computing device 108 can each include at least one computing device such as a desktop computer, laptop, tablet, personal digital assistant, smartphone, portable computer, server, thin client computer, virtual server, or other computing device. - The
client computing device 134 can include at least onesensor 135, at least onetransducer 136, at least oneaudio driver 137, and at least onespeaker 138. Thesensor 135 can include a microphone or audio input sensor. Thetransducer 136 can convert the audio input into an electronic signal. Theaudio driver 137 can include a script or program executed by one or more processors of theclient computing device 134 to control thesensor 135, thetransducer 136 or theaudio driver 137, among other components of theclient computing device 134 to process audio input or provide audio output. Thespeaker 138 can transmit the audio output signal. - The
client computing device 134 can be associated with an end user that enters voice queries as audio input into the client computing device 134 (via the sensor 135) and receives audio output in the form of a computer generated voice that can be provided from the content distribution system 110 (or the contentprovider computing device 139 or the service provider computing device 108) to theclient computing device 134, output from thespeaker 138. The computer generated voice can include recordings from a real person or computer generated language. - The content
provider computing device 139 can provide audio based content items for display by theclient computing device 134 as an audio output content item. The content item can include an offer for a good or service, such as a voice based message that states: “Would you like me to order you a taxi?” For example, the contentprovider computing device 139 can include memory to store a series of audio content items that can be provided in response to a voice based query. The contentprovider computing device 139 can also provide audio based content items (or other content items) to thecontent distribution system 110 where they can be stored in thedata repository 129. Thecontent distribution system 110 can select the content items that include an audio component and provide (or instruct the contentprovider computing device 139 to provide) the content items to theclient computing device 134. The audio based content items can be exclusively audio or can be combined with text, image, or video data. The content items can include one or more audio files that when rendered provide an audio output or acoustic wave. The content items can include other content (e.g., text, video, or image content) in addition to or instead of audio content. For example, the content items can include text or image files, or combinations thereof, that do not include audio files and that do not render audio output. - The service
provider computing device 108 can include at least one service provider natural language processor (NLP)component 141 and at least oneservice provider interface 142. The service provider NLP component 141 (or other components such as a direct action API of the service provider computing device 108) can engage with the client computing device 134 (via thecontent distribution system 110 or bypassing the content distribution system 110) to create a back-and-forth real-time voice or audio based conversation (e.g., a session) between theclient computing device 134 and the serviceprovider computing device 108. For example, theservice provider interface 142 can receive or provide data messages to thedirect action API 127 of thecontent distribution system 110. The serviceprovider computing device 108 and the contentprovider computing device 139 can be associated with the same entity. For example, the contentprovider computing device 139 can create, store, or make available content items for a car sharing service, and the serviceprovider computing device 108 can establish a session with theclient computing device 134 to arrange for a delivery of a taxi or car of the car share service to pick up the end user of theclient computing device 134. Thecontent distribution system 110, via thedirect action API 127, theNLP component 122 or other components can also establish the session with theclient computing device 134, including or bypassing the serviceprovider computing device 108, to arrange for example for a delivery of a taxi or car of the car share service. - The
data repository 129 can include one or more local or distributed databases, and can include a database management system. Thedata repository 129 can include computer data storage or memory and can store one ormore parameters 130, one ormore policies 131,content data 132, ortemplates 133 among other data. Theparameters 130,policies 131, andtemplates 133 can include information such as rules about a voice based session between the client computing device 134 (or the service provider computing device 108) and thecontent distribution system 110. Thecontent data 132 can include content items for audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with theclient computing device 134. - The
content distribution system 110 can include an application, script or program installed at theclient computing device 134, such as an app to communicate input audio signals to theinterface 123 of thecontent distribution system 110 and to drive components of the client computing device to render output audio signals. Thecontent distribution system 110 can receive data packets or another signal that includes or identifies an audio input signal. For example, thecontent distribution system 110 can execute or run at least part of theNLP component 122 to receive the audio input signal. - The
NLP component 122 can convert the audio input signal into recognized text by comparing the input signal against a stored, representative set of audio waveforms (e.g., in the data repository 129) and choosing the closest matches. The representative waveforms are generated across a large set of users, and can be augmented with speech samples. After the audio signal is converted into recognized text, theNLP component 122 can match the text to words that are associated, for example via training across users or through manual specification, with actions that thecontent distribution system 110 can serve. - The audio input signal can be detected by the sensor 135 (e.g., a microphone) of the client computing device. Via the
transducer 136, theaudio driver 137, or other components theclient computing device 134 can provide the audio input signal to the content distribution system 110 (e.g., via the network 102) where it can be received (e.g., by the interface 123) and provided to theNLP component 122 or stored in thedata repository 129 ascontent data 132. - The
system 100 can optimize processing of action data structures that include sequence dependent operations in a voice activated data packet (or other protocol) environment. For example, thecontent distribution system 110 can include or be part of a voice activated assistant service, voice command device, intelligent personal assistant, knowledge navigator, event planning, or another assistant program. Thecontent distribution system 110 can provide one or more instances of audio output for display from theclient computing device 134 to accomplish tasks related to this input audio signal. The tasks can include, for example, communicating with the serviceprovider computing device 108 or other third party computing devices to make dinner reservations or purchase movie tickets. For example, an end user can enter an input audio signal into theclient computing device 134 of: “OK, I would like to go to go dinner tonight.” This input audio signal can be detected by the sensor 135 (e.g., a microphone) of theclient computing device 134 and transformed (e.g., by the transducer 136) into a data packet or other protocol based structure for transmission to thecontent distribution system 110. - The
NLP component 122 can receive or otherwise obtain at least one first input audio signal. For example, via theinterface 123 and thecomputer network 102 theNLP component 122 can obtain the first input audio signal from theclient computing device 134. TheNLP component 122 can extract data from or otherwise parse the first input audio signal to identify at least one first request or at least one first trigger keyword corresponding to the first request. The first request can indicate intent or subject matter of the first input audio signal, e.g., an intent to eat dinner. The first trigger keyword can indicate a type of action likely to be taken. For example, theNLP component 122 can parse the first input audio signal to identify at least one request to leave home for the evening for dinner. The first trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken. For example, the trigger keyword “go” or “to go to” from the input audio signal can indicate a need for transport. In this example, the input audio signal (or the identified request) does not directly express an intent for transport, however the trigger keyword indicates that transport is an ancillary or sub-action to at least one other action that is indicated by the request. - The
NLP component 122 can receive a second input audio signal. For example, the first audio input signal can be “OK, I would like to go to go dinner tonight” and the second audio input signal can be “OK, I would like to catch a movie later”. TheNLP component 122 can receive or otherwise obtain the second input audio signal from anyclient computing device 134, in an analogous manner to which the first input audio signal was obtained, e.g., via thenetwork 102. TheNLP component 122 can extract data from or otherwise parse the second input audio signal to identify at least one second request or at least one second trigger keyword corresponding to the second request. The second request can indicate intent or subject matter of the second input audio signal, e.g., an intent to watch a movie in a theater. The second trigger keyword can indicate a type of action likely to be taken. For example, theNLP component 122 can parse the second input audio signal to identify at least one request to leave home for the evening to watch a movie. The second trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken. For example, the trigger keyword “to catch” from the second input audio signal can indicate a need for transport, e.g., as an ancillary or sub-action to at least one other action that is indicated by the request. - The
direct action API 127 can execute programs or scripts, for example from theNLP component 122, thethread optimization component 124, or thecontent selector component 125 to perform tasks or actions, or to identify content items responsive to input audio signals. Thedirect action API 127 can execute a specified action to satisfy the end user's intention, as determined by thecontent distribution system 110. Depending on the action specified in its inputs, thedirect action API 127 can execute code or a dialog script that identifies the parameters required to fulfill a user request. Such code can look up additional information, e.g., in thedata repository 129, such as the name of a home automation service, or it can provide audio output for rendering at theclient computing device 134 to ask the end user questions such as the intended destination of a requested taxi, genre of a movie to watch, or type of restaurant to go to for dinner. Thedirect action API 127 can determine necessary parameters and can package the information into an action data structure, which can then be sent to another component such as thecontent selector component 125 or to the service provider computing device 108 (or content provider computing device 139) to be fulfilled. - The
direct action API 127 of thecontent distribution system 110 can generate, based on the request or the trigger keyword, data structures for the actions of the thread. The action data structures can be generated responsive to the request. The action data structure can be included in the messages that are transmitted to or received by the serviceprovider computing device 108. Based on the request parsed by theNLP component 122, thedirect action API 127 can determine to which of a plurality of serviceprovider computing devices 108 the message should be sent. - The
direct action API 127 can generate a first action data structure based on the first trigger keyword and in response to the first request, and can generate a second action data structure based on the second trigger keyword and in response to the second request. For example, if the first input audio signal includes “go to dinner tonight” theNLP component 122 can identify the trigger word “tonight” and the request for a dinner suggestion or reservation. Thedirect action API 127 can package the request into a first action data structure for transmission as a message to a service provider computing device 108 (or content provider computing device 139) of a restaurant. The first input audio signal can include other requests or trigger keywords that indicate other actions, ancillary to the dinner action. These actions can be included in the first action data structure. For example, theNLP component 122 can identify first requests or first trigger keywords for transportation to or from dinner (additional actions) from the first input audio signal of “OK, I would like to go to go dinner tonight”. - If, for example the second input audio signal includes “catch a movie later” the
NLP component 122 can identify the request to see a movie with the trigger keywords “catch” or “later”. Thedirect action API 127 can package the request into a second action data structure for transmission as a message to a service provider computing device 108 (or content provider computing device 139) of a movie company or movie theater. The second input audio signal can include other second requests or second trigger keywords that indicate other actions, ancillary to the movie action. These actions can be included in the second action data structure. For example, theNLP component 122 can identify first requests or first trigger keywords for transportation to or from a movie theater (additional actions) from the second input audio signal of “OK, I would like to catch a movie later”. - The first and second, or any other action data structures can also be passed to the
content selector component 125. The action data structures can include information for completing one or more actions associated with the request. In this example, the information can include restaurant or movie interest indicators, location information, an identification or location of a restaurant or type of restaurant, restaurant reservation information, movie show times at a theater, theater location information, or a pick up location and a destination location. Thedirect action API 127 can retrieve atemplate 133 from therepository 129 to determine which fields to include in the action data structure. Thedirect action API 127 can retrieve content from therepository 129 to obtain information for the fields of the data structure. Thedirect action API 127 can populate the fields from the template with that information to generate the data structure. Thedirect action API 127 can also populate the fields with data from the input audio signal or third party sources. Thetemplates 133 can be standardized for categories of service providers or can be standardized for specific service providers. For example, ride sharing service providers can use the followingstandardized template 133 to create the data structure: {client_device_identifier; authentication_credentials; pick_up_location; destination_location; no_passengers; service_level}. The data structure can include variable fields. The variable fields can indicate, for example, a sequence or order of operation of multiple actions identified indicated by or related to at least one action of a data structure. Thedirect action API 127 can populate fields of the data structure, including variable fields. Thedirect action API 127 can populate or enter data into one or more variable fields of a data structure based on a sequence dependency between actions, such as a second action that begins after a first action ends. - The
direct action API 127 can construct data transmissions that include data packets corresponding to action data structures. For example, the data transmissions can include packetized versions of the action data structures, e.g., data packets with header and payload regions that indicate information represented by the data structures. The data transmissions can be used to establish (e.g., take part in) at least one communication session between the serviceprovider computing device 108 and theclient computing device 134 via thecontent distribution system 110. Thesession handler component 128 can establish or identify the communication sessions via theinterface 123. For example, subsequent to merging or associating action first and second data structures (or their corresponding packetized data transmissions) into a single thread, thecontent distribution system 110 can provide the data transmissions to the serviceprovider computing device 108. As part of the communications of the communication session, the serviceprovider computing device 108 can also receive, via thecontent distribution system 110, data packets (or other data messages) from the client computing device 106. For example, thecontent distribution system 110 can receive and can route inbound data messages from theclient computing device 134 to the serviceprovider computing device 108 as part of the communication session. - The
thread optimization component 124 can obtain or access data packets of the first and second (and any other) data transmissions. For example, thedirect action API 127 can provide the transmissions (e.g., the corresponding data packets) to thedata repository 129 for storage, where they can be retrieved by thethread optimization component 124. Thethread optimization component 124 can also receive the data packets (or other protocol based structure) of the data transmissions from the direct action API 127 (or othercontent distribution system 110 component) bypassing thedata repository 129. - The
thread optimization component 124 can parse or otherwise extract information from data packets of multiple data transmissions that correspond respectively to multiple action data structures. For example, thethread optimization component 124 can apply a heuristic technique to data packets of a first data transmission (or to the corresponding first data structure) and to data packets of a second data transmission (or to the corresponding second data structure) to determine at least one sequence dependency parameter. The heuristic or other statistical technique can determine or identify with a threshold degree of certainty patterns among the first and second data transmissions (or corresponding data structures) that indicate a sequence dependency of actions indicated by the data transmissions. - The sequence dependency parameter can indicate the existence or likelihood (e.g., relative to a threshold level or other benchmark) of actions represented by the data transmissions (or corresponding action data structures) having an order of operations, time, or sequence dependency on each other. The sequence dependent operations or actions, indicated by the sequence dependency parameters, can include a number of actions that occur in a known, suggested, required, or particular order. For example, going from home to a movie theater, then back home can include three sequence dependent operations or actions. The first action in this example includes travelling from home to the movie theater. The second action includes watching the movie in the theater. The third action includes returning home from the theater.
- These three (and perhaps other) actions can be determined by the
direct action API 127 from requests or trigger keywords corresponding to the input audio signal “OK, I would like to catch a movie later”. In this example, the second action in the sequence (watching the movie) is subsequent to and dependent on the first action (going out from home to the movie theater), and the third action (returning home) is subsequent to and dependent on the first action and the second action. The third action can be considered subsequent to and dependent on the second action, as having expressed an intent to do so, thecontent distribution system 110 determines or predicts that the end user would watch the movie in the theater before returning home as well. - Based on the sequence dependency parameter, the
thread optimization component 124 can merge two or more packetized data transmissions (or their corresponding action data structures) into a single thread. The single thread can include data identifying actions as well as other data (e.g., metadata or third party data) from multiple data action structures. The single thread can be in packetized (or other protocol based) form, e.g., in the same format as the first and second data transmissions. The single thread can also be in a data structure format, e.g., generated by thedirect action API 127, or following a format of at least onetemplate 133,policy 131, orparameter 130. The single thread can include or indicate an association or linking of actions from one or more data transmissions, or from one or more action data structures. - The data transmissions or action data structures can be merged or otherwise associated with one another by the
thread optimization component 124 to generate the single thread prior to transmission of the data indicated by the action data structures via the communication session to the serviceprovider computing device 108. In this example, thedirect action API 127 or othercontent distribution system 110 component (e.g., the interface 123) can transmit at least part of the data indicated by the single thread, subsequent to the merger or creation of the single thread, to the serviceprovider computing device 108 for the first time. For example, prior to creation of the single thread, thecontent distribution system 110 may have delayed, prevented withheld, or not transmitted data associated with the first or second (or any other) data structure. In some examples, at least some of the data indicated by individual data structures can be provided by and from thecontent distribution system 110 to the serviceprovider computing device 108 prior to creation of the single thread. - The
thread optimization component 124 can merge or otherwise consolidate or associate the data transmissions (or corresponding action data structures) into the single thread based on the sequence dependency parameter. For example, the first data transmission (and first data structure) can represent actions associated with the first input audio signal “OK, I would like to go to go dinner tonight” the second data transmission (and second data structure) can represent actions associated with the second input audio signal “OK, I would like to catch a movie later”. The first and second (or any other) input audio signals can be sequential (following on another by less than one minute), separated from one another by time (e.g., greater than one minute), and can originate from the same or differentclient computing devices 134. Thethread optimization component 124 can obtain data packets (or other data) representing this information, and can determine at least one sequence dependency parameter. For example, the sequence dependency parameter can indicate that the action of returning home from the movie theater occurs after the action of watching the movie, or that the action of watching the movie occurs or is predicted to occur after the action of eating dinner. - The single thread (in any data structure or format) can indicate a set of sequence dependent operations that correspond to one or more input audio signals (or corresponding data structures or data transmissions), such as a series of actions. The thread can include any two or more actions, such as a first action, a second action, and a third action. For example, a merger of the first input audio signal “OK, I would like to go to go dinner tonight,” and the second input audio signal “OK, I would like to catch a movie later” can include at least one request indicating an interest to attend dinner and a movie, and at least one trigger keyword, e.g., “go” indicating a need for transportation. The
thread optimization component 124 can identify at least one sequence dependency parameter indicating at least one sequence, temporal, or order of operations dependency between the actions and can generate the single thread to combine the multiple input audio signals (or corresponding template based data structures or packet/protocol based data transmissions). Thethread optimization component 124 can create the single thread that indicates at least three actions, such as a dinner action (first action), a movie action (second action), and a transportation home action (third action). In this example, from the requests or the trigger keywords thethread optimization component 124 generates a single thread from multiple separate inputs that indicates the three actions. The single thread can include other actions, such as an initial transport to dinner action. - The
content distribution system 110 or component thereof such as thethread optimization component 124 can determine that the actions of the thread are sequence dependent operations. For example, the thread optimization component can determine that the second action of watching the movie is subsequent to the first action of eating dinner, and that the third action of travelling home from the movie theater is after the second action of watching the movie. Thethread optimization component 124 can access theparameters 130 orpolicies 131 in thedata repository 129 to determine or otherwise estimate the order of the sequence dependent actions. For example, theparameters 130 orpolicies 131 could indicate that a transport action (e.g., a taxi home) can occur after an event action (e.g., watching a movie). - The
content selector component 125 can obtain indications of any of the actions of the single thread. For example, thethread optimization component 124 can directly or indirectly (e.g., via the data repository 129) provide at least a portion of the single thread that indicates the third (or any other) action to thecontent selector component 125. Thecontent selector component 125 can obtain this information from thedata repository 129, where it can be stored as part of thecontent data 132. The indication of the third action can inform thecontent selector component 125 of a need for transportation from the location of the movie theater to a location as determined or indicated by theclient computing device 134, such as a ride to an end destination. - The
content selector component 125 can obtain indications of a later action in the thread prior to the occurrence of at least one earlier action. For example, thecontent selector component 125 can receive an indication of the third action (e.g., a need for a ride from the movie theater) before the movie plays in the theater (second action), or before the person who input the input audio signal into theclient computing device 134 eats dinner at the restaurant (first action). Thecontent selector component 125 can obtain indications of at least one action of the thread before completion of at least one action of the thread. - From the information received by the
content selector component 125, e.g., an indication of the third action before occurrence of at least one prior action in the sequence dependent thread, thecontent selector component 125 can identify at least one content item. The content item can be responsive or related to the third (or any other) action. For example, the content item can include an audio message offering services of a car share company, responsive to the third action that indicates a transportation need. Thecontent selector component 125 can query thedata repository 129 to select or otherwise identify the content item, e.g., from thecontent data 132. Thecontent selector component 125 can also select the content item from the contentprovider computing device 139. For example, responsive to a query received from thecontent distribution system 110, the contentprovider computing device 139 can provide a content item to the content distribution system 110 (or component thereof) for eventual output by theclient computing device 134. - The audio
signal generator component 126 can generate or otherwise obtain an output signal that includes the content item responsive to the third (or any other) action. For example, thecontent distribution system 110 can execute the audio signal generator component to generate or create an output signal corresponding to the content item. Theinterface 123 of thecontent distribution system 110 can provide or transmit one or more data packets that include the output signal via thecomputer network 102 to theclient computing device 134, e.g., as part of the communication session. Theinterface 123 can be designed, configured, constructed, or operational to receive and transmit information using, for example, data packets. Theinterface 123 can receive and transmit information using one or more protocols, such as a network protocol. Theinterface 123 can include a hardware interface, software interface, wired interface, or wireless interface. Theinterface 123 can facilitate translating or formatting data from one format to another format. For example, theinterface 123 can include an application programming interface that includes definitions for communicating between various components, such as software components of thesystem 100. - For example, the
content distribution system 110 can provide the output signal from thedata repository 129 or from the audiosignal generator component 126 to theclient computing device 134. Thecontent distribution system 110 can also instruct, via data packet transmissions, the contentprovider computing device 139 or the serviceprovider computing device 108 to provide the output signal to theclient computing device 134. The output signal can be obtained, generated, transformed to or transmitted as one or more data packets (or other communications protocol) from the content distribution system 110 (or other computing device) to theclient computing device 134. - The
content selector component 125 can skip to a later action in a set of sequence dependent operations indicated by the single thread to select a content item for the later action prior to occurrence (and prior to an immediate need) for activity corresponding to the later action. By skipping to a later sequenced action, e.g., to select a content item for the second subsequent action prior to selecting a content item for a first prior action, thecontent distribution system 110 is not required to first process information related to the prior action to select content items for subsequent actions. This reduces processor utilization, power consumption and bandwidth from data transmissions that would otherwise be associated with selecting a content item (for the first action) prior to selecting the content item for the second action. - The
content selector component 125 can select the content item for the (subsequent or later) action as part of a real-time content selection process. For example, the content item can be provided to the client computing device for transmission as audio output in a conversational manner in direct response to the input audio signal. The real-time content selection process to identify the content item and provide the content item to theclient computing device 134 can occur within one minute or less from the time of the input audio signal and be considered real-time. - The output signal that corresponds to the content item corresponding to the content provider computing device 139 (or data corresponding to the service provider computing device 108), for example obtained or generated by the audio
signal generator component 126 transmitted via theinterface 123 and thecomputer network 102 to theclient computing device 134, can cause theclient computing device 134 to execute theaudio driver 137 to drive thespeaker 138 to generate an acoustic wave corresponding to the output signal. The acoustic wave can include words of or corresponding to the content item or other data for the later, (e.g., second or third) action. The output signal that corresponds to the content item can also include non-audio content items that render on theclient computing device 134 that is the source of the input audio signal or on a different client computing device 134 (e.g., a wearable device computing device) as text or image messages that can render without audio elements. - The
content distribution system 110 can provide the output signal that includes the content item or other data responsive to an action in direct or real-time response to the input audio signal so that the packet based data transmissions via thecomputer network 102 that are part of a communication session between thecontent distribution system 110 and theclient computing device 134 has the flow and feel of a real-time person to person conversation. This packet based data transmission communication session can also include the contentprovider computing device 139 or the serviceprovider computing device 108. - The
content selector component 125 can select content items provided in response to the second (or any non-first) action in the sequence dependent set of actions before selecting any content item for any prior action in the sequence. This avoids the need to process at least some of the data corresponding to the prior actions, which causes the second content item to be selected with a reduced number of processing operations than would occur if the content items were selected in an order that matches the order of the sequence of actions. Content items for the prior (e.g., first and second) actions may or may not be selected, for example after selection of the content item for the second action. - The
content selector component 125 can select the content item (e.g., for the second action) based on at least one trigger keyword of the thread that indicates subject matter different than subject matter of the one or more requests of the same thread. For example, the requests of the single thread can indicate subject matter of a dinner request (first action), and subject matter of a movie request (second action). This subject matter does not indicate any transportation request. However, theNLP component 122 or the thread optimization component 124 (or othercontent distribution system 110 components executing as part of the direct action API 127) can identify the trigger keyword “go” “go to” or “to go to” and can determine a transportation request based at least in part on the trigger keyword. Thus, thecontent distribution system 110 can infer actions from the input audio signal that are secondary requests that are not the primary request or subject of the input audio signal. - The
content distribution system 110 can prevent or delay transmission of the output signal that includes the content item. For example, theinterface 123 or a script executing via thedirect action API 127 can prevent transmission of data packets that include the output signal corresponding to a content item or to an action of the single thread until a triggering event. The triggering event can include expiration of a pre-determined time period, such as two hours or a time coinciding with occurrence of an earlier action in the thread, such as a scheduled end time of a movie. The triggering event can also include an authorization indication received by thecontent distribution system 110 from theclient computing device 134. The authorization indication can originate as a subsequent audio input associated with the thread but received by thecontent distribution system 110 subsequent to the input audio signal, a text-based or other non-audible signal, or can include an indication of a setting of theclient computing device 134 that authorizes receipt by theclient computing device 134 of content items. - The
content distribution system 110 can also delay transmission of the content item associated with a second or subsequent to second action of the thread to optimize processing utilization. For example, thecontent distribution system 110 can delay content item transmission until an off-peak or non-peak period of data center usage, which results in more efficient utilization of the data center by reducing peak bandwidth usage, heat output or cooling requirements. Thecontent distribution system 110 can also initiate a conversion or other activity associated with the content item, such as ordering a car service, based on data center utilization rates or bandwidth metrics or requirements of thenetwork 102 or of a data center that includes thecontent distribution system 110. - The content items can correspond to the actions of the thread, and the
content selector component 125 can select a content item for one, more than one, or all actions of the thread. Thethread optimization component 124 can identify the sequence dependent thread of actions of, for example, “dinner” (first action) “movie” (second action) and “transport from movie location” (third action). - For example, based on the single thread, the content item for the third action can be provided for rendering at the
client computing device 134 as an audio response that states, “Would you like a ride home from the movie theater?” in response to the audio input signal. Subsequent or prior to this rendering, thecontent distribution system 110 can select or provide a content item, e.g., “the Italian restaurant downtown has an opening for 7 pm tonight—are you interested?” for the first action (dinner), and can select or provide another content item, e.g., “would you like tickets to the 9 pm movie at the downtown theater?” for the second action (movie). Thecontent distribution system 110 can provide (which includes instructing the contentprovider computing device 139 to provide) these content items responsive to the input audio signal for rendering by theclient computing device 134 as audio output content items. Thecontent distribution system 110, via theinterface 123, can select or provide these content items in any order to theclient computing device 134. For example, the content item for the third (e.g., last) action can be selected or provided first, before content items corresponding to other, earlier actions of the thread. - The
content distribution system 110 can receive a response to the content item “would you like a ride home from the movie theater?” The response can include an input audio signal, e.g., “yes please” that was entered into theclient computing device 134 by the end user and received by thecontent distribution system 110. Thecontent distribution system 110 or component thereof (e.g., the thread optimization component) can include the response as part of the single thread. Based on this response, thedirect action API 127 can communicate with the service provider computing device 108 (that can be associated with the content item, such as a car share company) to order a taxi or ride share vehicle for the location of the movie theater at the time the movie ends. Thecontent distribution system 110 can obtain this location or time information as part of the data packet (or other protocol) based data message communication with theclient computing device 134, from thedata repository 129, or from other sources such as the serviceprovider computing device 108 or the contentprovider computing device 139. Confirmation of this order (or other conversion) can be provided as an audio communication from thecontent distribution system 110 to theclient computing device 134 in the form of an output signal from thecontent distribution system 110 that drives theclient computing device 134 to render audio output such as, “great, you will have a car waiting for you at 11 pm outside the theater.” Thecontent distribution system 110, via thedirect action API 127, can communicate with the serviceprovider computing device 108 to confirm the order for the car. - The
content distribution system 110 can obtain the response (e.g., “yes please”) to the content item (“would you like a ride home from the movie theater?”) and can route a packet based data message to the service provider NPL component 141 (or other component of the service provider computing device). This packet based data message can cause the serviceprovider computing device 108 to affect a conversion, e.g., to make a car pick up reservation outside the movie theater. This conversion—or confirmed order—(or any other conversion of any other action of the thread) can occur prior to completion of one or more actions of the thread, such as prior to completion of the movie, as well as subsequent to completion of one or more actions of the thread, such as subsequent to dinner. - Based on a response to a content item for a subsequent action in the thread, such as the response “yes please” to the content item “would you like a ride home from the movie theater” for the third and last action in a sequence dependent thread, the
content distribution system 110 can initiate a conversion or action. This can occur before the end user has begun any activities associated with the thread, e.g., before dinner or before the movie is over. - Processors of the
content distribution system 110 can invoke thedirect action API 127 to execute scripts that order a car from a car share service. Thedirect action API 127 can obtain content data 132 (orparameters 130 or policies 131) from thedata repository 129, as well as data received with end user consent from theclient computing device 134 to determine location, time, user accounts, logistical or other information in order to reserve a car from the car share service. Using thedirect action API 127, thecontent distribution system 110 can also communicate with the serviceprovider computing device 108 to complete the conversion by in this example making the car share pick up reservation. - The
direct action API 127 can initiate the conversion or activity to accomplish an action of the thread at any time during a time period from receipt by thecontent distribution system 110 of the first input audio signal associated with the thread, (e.g., “OK, I would like to go to go dinner and then a movie tonight”) until a threshold time period subsequent to completion of one of the actions of the thread, (e.g., until 15 minutes after the end of the second action of watching the movie). Thecontent distribution system 110 can also determine the end of this time period based on other factors, such as an indication that the end user has completed the actions of the thread, e.g., has returned home or is no longer located at the movie theater. Thecontent distribution system 110 can also obtain an indication from the client computing device 134 (a data message transmitted via the network 102) that the thread is cancelled or dormant or that the end user has cancelled or completed actions of the thread. - The
direct action API 127 can initiate the conversion or activity to accomplish an action of the thread based on completion or time of completion of other actions of the thread. For example, thecontent distribution system 110 can order a good or service (car share pick-up) directly or by communicating with the serviceprovider computing device 108 within a threshold time period of a conclusion of a prior action in the thread. Within 5 minutes (or other time period) prior or subsequent to the scheduled or actual conclusion of the movie (second action), thecontent distribution system 110 can confirm or order a car share service to send a car to pick up the end user at the movie theater (subsequent, third action). This can occur in the absence of input received from the enduser computing device 134 during this time period, or responsive to a prompt received from the enduser computing device 134 during this time period. - The
direct action API 127 can initiate the conversions or other activity associated with the sequence dependent operations of the thread in any order. For example, the direct action API 127 (or othercontent distribution system 110 component) can initiate activity corresponding to a final action (e.g., the third action in a three action thread such as ordering a taxi) prior to initiating activity corresponding to an earlier thread in the sequence, (e.g., prior to making a dinner reservation or prior to ordering movie tickets). In this example, thecontent distribution system 110 initiates activity for an earlier (e.g., second) action subsequent to initiation of activity for the later (e.g., third) action. - The
content selector component 125 can identify, select, or obtain multiple content items resulting from a multiple content selection processes. The content selection processes can be real-time, e.g., part of the same conversation, communication session, or series of communications sessions between thecontent distribution system 110 and theclient computing device 134 that involve a thread. The conversation can include asynchronous communications separated from one another by a period of hours or days, for example. The conversation or communication session can last for a time period from receipt of the first input audio signal until an estimated or known conclusion of a final action of the thread, receipt by thecontent distribution system 110 of an indication of a termination of the thread. This can be referred to as the active time period of the thread. For example, for a thread with three actions (e.g., dinner, move, and transport home), thecontent selector component 125 can select at least one content item for each action. The contentitem selector component 125 can run or obtain results from a different content selection process for each action. In the content selection processes the contentprovider computing device 134 can set forth content items for selection by thecontent selector component 125. For a thread with at least three actions, the content item selector component can select or otherwise identify a first content item for the first action via a first content selection process, a second content item for the second action via a second content selection process, and a third content item for the third action via a third content selection process. Thecontent distribution system 110 that provides these content items for rendering by theclient computing device 134 during the active time period of the thread can be considered to be operating in real-time. In this example, the content selection processes and rendering of the content items occurs in real time. - The
content distribution system 110 can cancel actions associated with content items. For example, after ordering the car service the end user may watch the movie but then decide to walk home, or to have desert after the movie instead of taking a car home. An app or other program executing at theclient computing device 134 as part of thecontent distribution system 110 can receive an input audio signal of “cancel my ride home”. TheNLP component 122 can receive this input audio signal, for example as one or more packet based data messages, and can determine that this input audio signal relates to a pre-existing thread (e.g., dinner, movie, transport home) and is part of the same conversation or communication. For example, the NLP component 122 (or othercontent distribution system 110 component) can evaluate time data, location data and pre-existing thread data such as past, present, or scheduled actions of a thread from thecontent data 132 of thedata repository 129 to determine that an input audio signal relates to a pre-existing thread. Based, for example, on the request “ride” or the trigger keyword “cancel” theNLP component 122 can determine that the input audio signal “cancel my ride home” relates to the content item “would you like a ride home from the movie theater?” that corresponds to the third action of a pre-existing thread. The direct action API 127 (or other component) can cause thecontent distribution system 110 to communicate via theinterface 123 with the serviceprovider computing device 108 to cancel the order for the taxi or car share service to have a car waiting for the end user outside the movie theater upon conclusion of the movie. - The
NLP component 122 can receive the data packet or other protocol based message to cancel an action of the thread prior to or subsequent to completion of any action of the thread. TheNLP component 122 can receive from the client computing device 134 (or obtain from the data repository 129) a data message (inbound audio signal) to cancel an action of the thread within a time interval triggered by an earlier action of the thread. For example, in a sequence dependent thread with three actions, dinner, movie, transport, thecontent distribution system 110 can receive the transport cancellation data message within 5 minutes (or other time period) of the conclusion of the movie. Thecontent distribution system 110 can prompt for confirmation of a product or service related to an action of the thread. For example, during a time period between the first action and the second action (e.g., after dinner and before the movie) thecontent distribution system 110 can transmit a data message to theclient computing device 134 that, when rendered at theclient computing device 134 outputs the audio or text message stating “just confirming that you still want a car waiting for you after the movie.” Thecontent distribution system 110 can receive a response, e.g., “yes, confirmed” or “no, cancel the car”. This response can be included as part of the thread. Thedirect action API 127 can execute scripts to process this information and can communicate with the serviceprovider computing device 108 to indicate the confirmation or the cancellation. -
FIG. 2 is an illustration of anexample data flow 200 for populating a retargeting set. A content item provider, such as aservice provider 108, can create, or request creation of, aretargeting set 222, for example, through a digital component management user interface (UI) 204 that is accessed using a computer 203. For example, a service provider can access the digital componentmanagement user interface 204 and submit arequest 208 for aretargeting script 210, for a retargeting set. - The
request 208 can be submitted to theretargeting apparatus 120 in response to theservice provider 108 interacting with (e.g., clicking) a “request script” user interface element 203. In response to therequest 208, the retargeting apparatus can generate theretargeting script 210 for the retargeting set 222 and provide theretargeting script 210 to theservice provider 108. In some implementations, theservice provider 108 can create theretargeting script 210 and submit theretargeting script 210 to theretargeting apparatus 120. - The
retargeting script 210 can include a set identifier 206 (e.g., “Set_ID”). Theset identifier 206 can be, for example, a unique character string that is indicative of the retargeting set 222 with which theretargeting script 210 is associated. Theset identifier 206 can be a name that theservice provider 108 has specified for the retargeting set 222 or a set of characters that theretargeting apparatus 120 has assigned to the retargeting set 222. - The service provider can include the
retargeting script 210 in the code of one or more of the service provider's web pages 212. Theretargeting script 210 is executed in response to the performance of a target user interaction. In some implementations, the target user interaction can occur when a user requests the web page 212 that includes theretargeting script 210. For example, theservice provider 108 could embed theretargeting script 210 in the web page 212 such that the script is executed when the web page 212 is rendered at a user's device 216 (i.e., in response to the request for the web page). - In some implementations, the target user interaction can occur when the user 214 interacts with (e.g. clicks) a portion of the service provider's webpage 212. For example, the
service provider 108 could embed theretargeting script 210 in the web page such that user interaction with a particular user interface element (e.g., a particular button or tab) causes execution of theretargeting script 210. - Execution of the
retargeting script 210 causes the user device 216 to submitinteraction data 218 to theretargeting apparatus 120. Theinteraction data 218 includes auser identifier 220 associated with the user device 216, such as the character string “User_ID”. Theinteraction data 218 may also include theset identifier 206 for the retargeting set with which theretargeting script 210 is associated. - The
retargeting apparatus 120 receives theinteraction data 218 and adds theuser identifier 220 to the retargeting set associated with theset identifier 206. Theretargeting apparatus 120 may store the retargeting set in the contentitem data store 119 or another data store. Theinteraction data 218 can be stored with a reference to (e.g., indexed according to) theset identifier 206 to facilitate identification of the retargeted identifiers that have been added to each retargeting set. -
FIG. 3 is a flow chart of anexample process 300 for populating a retargeting set. Theprocess 300 is a process by which a retargeting script can be provided in response to a request to create a retargeting set. As described above, the retargeting script can be embedded in a web page such that performance of a target user interaction causes execution of the retargeting script, which in turn, causes interaction data to be generated. The interaction data are received, and a user identifier that is included in (or referenced by) the interaction data is added to a retargeting set that is also referenced (e.g., by way of a set identifier) by the interaction data. In some implementations, the retargeting set is associated with one or more content items (e.g., digital components) such that the eligibility of the content items for presentation in response to a content item request is conditioned on the request including a user identifier that is included in the retargeting group. - The
process 300 can be implemented, for example, by theretargeting apparatus 120 or another data processing apparatus. In some implementations, theretargeting apparatus 120 is a data processing apparatus that includes one or more processors that are configured to perform actions of theprocess 300. In some implementations, a non-transitory computer readable medium can include instructions that when executed by a data processing apparatus cause the data processing apparatus to perform actions of theprocess 300. - A request to create a retargeting set is received (302). The request can include (or reference), for example, a name for the retargeting set. For example, if the retargeting set is being created to identify users that have viewed the service provider's DVD page (e.g., a web page that provides information about DVD players) the name of for the retargeting set may be “DVD page.”
- The request can include expiration data indicating when user identifiers are to be removed from the retargeting set. In some implementations, the expiration data specify a maximum amount of time that a particular retargeted identifier may remain in the retargeting set. For example, the service provider may specify that each retargeted identifier that is added to the retargeting set may only remain in the retargeting set for 14 days after being added to the set. In this example, if a particular retargeted identifier is added to the retargeting set on April 1st, that particular retargeted identifier will be removed from the retargeting set no later than April 15th.
- In some implementations, the expiration data specify a rate at which retargeted identifiers are removed from the retargeting set. For example, if the expiration data specify that retargeted identifiers should be removed from the retargeting set every 10 days, some or all of the retargeted identifiers that are included in the retargeting set can be periodically removed every 10 days. The portion of the retargeted identifiers that are removed from the retargeting set can be limited to those retargeted identifiers that have been in the retargeting set for more than a pre-specified period of time (e.g., 2 days). Alternatively (or additionally), the expiration data can specify a maximum number (e.g., 10,000) of retargeted identifiers that can be included in the retargeting set. When the maximum number of retargeted identifiers has been reached, an oldest retargeted identifier in the retargeting set can be removed when a next retargeted identifier is added to the retargeting set.
- An empty retargeting set can initially be created based on the information included in the request, and the empty retargeting set can be populated with user identifiers for users that perform a target interaction, as described below. The retargeting set may be associated with a set identifier that is used to distinguish the retargeting set from other retargeting sets. For example, when the retargeting set is created, a pseudo-random character string can be associated with the retargeting set, and the retargeting set can be identified using the pseudo-random character string.
- A code segment is provided in response to the request (304). In some implementations, the code segment is a retargeting script that upon execution causes a browser to transmit interaction data to a server. As described above, the interaction data indicate that the retargeting script was executed by the browser. The interaction data can include a user identifier for the user device at which the code segment was executed.
- In some implementations, execution of the code segment is caused by the performance of a target user interaction such that the interaction data indicates that the target interaction occurred. a service provider can select the target user interaction and embed the code segment into one or more web pages in a manner that causes execution of the code segment when the user performs the target user interaction. For example, if the target user interaction is selected by a service provider to be a request by a user device of a particular web page, the service provider can embed the code segment in the web page in a manner that causes the code segment to be executed when the web page is rendered by the browser. Similarly, if the target user interaction is selected to be user interaction with a particular user interface element (e.g., a “share this” or “more information” user interface element) the code segment can be embedded in the web page in a manner that causes the code segment to be executed in response to user interaction with the user interface element.
- Interaction data are received (306). In some implementations, the interaction data that are received are considered an indication that a target user interaction occurred. The interaction data can be received, for example, by a retargeting apparatus (e.g.,
retargeting apparatus 120 ofFIGS. 1 and 2 ). The interaction data can include a user identifier for a user device from which the interaction data was transmitted. For example, the interaction data can include a user identifier from a “cookie” that is stored at the user device. The cookie may be placed on the user device in response to execution of the code segment. Alternatively, the cookie may have been previously placed on the user device, and upon execution of the code segment the cookie was detected, and the user identifier from the cookie (or the cookie itself) was included in the interaction data. - The interaction data can also include a set identifier that indicates the retargeting set in which the user identifier is to be stored. In some implementations, the submitted interaction data includes a timestamp that can be used to determine an expiration time for the user identifier that is included in the interaction data. If temporal expiration data has been associated with the retargeting set in which the user identifier is included, the time at which the user identifier is removed from the retargeting set can be determined based on the time stamp and the expiration data. For example, if the expiration data indicates that user identifiers are to be removed from a retargeting set 14 days after being added to the retargeting set, a particular user identifier can be removed from the retargeting set when the difference between the time stamp and a current time is at least 14 days.
- The user identifier from the interaction data is included in a retargeting set (308). In some implementations, the user identifier is included in the set of retargeted content items that is associated with the set identifier that is specified by the interaction data. For example, when the interaction data is received, the set identifier can be detected, and the user identifier from the interaction data can be stored with a reference to (e.g., indexed according to) the set identifier. Additionally, the timestamp that is included in (or received with) the interaction data can also be stored with the user identifier.
- Data are received that specify a set of content items that are targeted using the retargeting set (310). In some implementations, the set of content items includes one or more digital components that are only eligible for presentation in response to determining that a user identifier that is included in (or referenced by) a content item request matches a user identifier in the retargeting set. For example, a service provider that has a particular set of digital components for DVD players may specify that the digital components are only eligible for presentation with a search results page if the user identifier received with the content item request matches a user identifier that is included in a retargeting set for users that viewed a DVD page on the service provider's website.
- As described above, digital components can be organized in digital component groups, and targeting criteria (e.g., targeting keywords) can be specified on a per-digital component-group basis. In some implementations, a service provider may want to target a particular digital component group using targeting criteria other than a retargeting set (e.g., irrespective of whether the user identifier received with the search query matches a user identifier in a retargeting set), and also target the particular set of digital components using the targeting criteria and the retargeting set. For example, the service provider may be willing to pay a first price (e.g., $1 per click) for digital components that are provided in response to search queries that do not include a user identifier that matches a retargeted identifier in the retargeting set, but be willing to pay a second, possibly higher, price (e.g., $5 per click) for digital components that are provided in response to search queries that include a user identifier that matches a retargeted identifier in the retargeting set.
- In these situations, the service provider can request that a copy of the particular digital component group be created, and then specify that the copy of the digital component group be targeted using a specified retargeting set. By specifying that the copy of the digital component group be targeting using the specified retargeting set, the digital components that are included in the copy of the digital component group will only be eligible for presentation if a digital component request (or another content item request) includes (or references) a user identifier that matches a retargeted identifier from a retargeting set. However, assuming that the initial instance of the digital component group is not targeted using a retargeting set, the bids for the digital components in the initial instance of the digital component group will be eligible for presentation irrespective of the user identifier that is included in the digital component request (i.e., assuming all of the other targeting criteria for the digital component group are satisfied). Thus, bids for the digital components in the copy of the digital component group will not be submitted to an auction unless the user identifier matches a retargeted identifier from the retargeting set, while the bids for the digital components in the initial instance of the digital component group will be submitted to the auction irrespective of the user identifier matching a retargeted identifier for the retargeting set.
- In some implementations, a set of content items can be targeted using a Boolean combination of two or more retargeting sets. For example, the data received from a service provider may specify that a set of digital components are only eligible for presentation with a search results page if the user identifier received with a digital component request matches both a retargeted identifier from a first retargeting set and (e.g., Boolean AND) a retargeted identifier from a second retargeting set. As another example, the data received from a service provider may specify that a set of digital components are only eligible for presentation with the search results page if the user identifier received with a digital component request matches a retargeted identifier in one particular retargeting set, but is not included in a second different retargeting set.
- For example, a service provider that sells computers and printers may not want to present a digital component for a computer to a user that has recently purchased a computer, but may want to present digital components for printers to users that have recently purchased a computer, but are not known to have purchased a printer. In this example, the service provider could provide data specifying that a digital component group that includes digital components for printers is to be eligible for presentation when the user identifier that is included in the digital component request includes a user identifier that matches a retargeted identifier in the retargeting set for users that purchased a computer, but is not included in a retargeting set for users that have purchased a printer. The data that are received from the service provider can also specify other combinations (e.g., AND, OR, NOR, or XOR) of retargeting sets in which a user identifier is to be included for a digital component to be eligible for presentation.
- Service providers can also adjust bids that are associated with the copy of the digital component group. For example, a service provider can specify that the bid for the copy of the digital component group (i.e., the retargeted digital component group) have a higher bid (e.g., $5 per click) than the bid (e.g., $1 per click) for the initial instance of the digital component group (e.g., the keyword targeted digital component group). Service providers can further be allowed to change the creatives (e.g., the digital components that are presented) for the copy of the digital component group. For example, the service providers may include digital components for special offers (e.g., 10% discounts on products) in the retargeted digital component group, while the keyword targeted digital component group may include more general informational digital components that do not include special offers.
-
FIG. 4 is a flow diagram of anexample process 400 for providing retargeted content items (e.g., digital components) with a search results page. Theprocess 400 is a process by which one or more retargeted content items (and/or one or more keyword targeted content items) are determined to be eligible for presentation in response to a content item request. The retargeted content items that are determined to be eligible for presentation can be those retargeted content items that are targeted using a targeting keyword that matches a search query that is referenced by the content item request and that are also targeted using a retargeting set that includes a retargeted identifier that matches a user identifier (e.g., a cookie) that is referenced by the content item request. The keyword targeted content items can be eligible for presentation irrespective of the user identifier that is referenced by the content item request. A responsive content item that is to be provided in response to the content item request is selected based, in part, on bids that are associated with the eligible content items, and data specifying the responsive content item can be provided in response to the content item request. - The
process 400 can be implemented, for example, by theretargeting apparatus 120 or another data processing apparatus. In some implementations, theretargeting apparatus 120 is a data processing apparatus that includes one or more processors that are configured to perform actions of theprocess 400. In some implementations, a non-transitory computer readable medium can include instructions that when executed by a data processing apparatus cause the data processing apparatus to perform actions of theprocess 400. - A request for a content item that is to be provided with a search results page is received (402). In some implementations, the request includes data indicating that a search query was submitted by a user device. The data can also include a user identifier for the user device that submitted the search query. For example, a content distribution system may receive a request to provide a digital component for presentation with a search results page. The request may include a search query (e.g., “DVD player”) and a user identifier which identifies a computer (or other user device) from which the search query was submitted. The user identifier can be, for example, a user identifier (e.g., a cookie) that was placed on the user device when the retargeting script was executed or a user identifier that was placed on the user device prior to execution of the retargeting script, as described above with reference to
FIG. 3 (e.g., 306). - A plurality of keyword targeted content items that are eligible for presentation with the search results page are identified (404). In some implementations, each eligible keyword targeted content item is a content item that is eligible for presentation based on the search query matching a targeting keyword for the keyword targeted content item. As mentioned above, for the purposes of this disclosure, the eligibility of a keyword targeted content item does not require that the user identifier referenced by the content item request match a retargeted identifier that is included in a set of retargeted identifiers. For example, assume that the search query submitted by the user is “DVD player.” In this example, a keyword targeted digital component may be eligible for presentation based on “DVD player” matching a targeting keyword (for example, “DVD”, “player”, or “DVD player”) for the keyword targeted digital component (i.e., irrespective of whether a user identifier is referenced by the content item request or whether a user identifier referenced by the content item request matches a retargeted identifier that is included in a retargeting set).
- A determination is made that one or more retargeted content items are eligible for presentation with the search results page (406). In some implementations, each retargeted content item is a content item for which presentation eligibility is conditioned, at least in part, on a user identifier that is referenced by the content item request matching a retargeted identifier that is included in a retargeting set. The presentation eligibility of a retargeted content item can further be conditioned on a search query referenced by the content item request matching a targeting keyword for the retargeted content item.
- For example, assume that a particular digital component is associated with the targeting keyword “DVD,” and that the service provider has specified that the particular digital component is only eligible for presentation if the content item request includes a user identifier (e.g., identifier A) that matches a retargeted identifier (e.g., identifiers A, B, or C) in a specified retargeting set (e.g., a set of user identifiers for user devices that have requested a DVD page from the service provider's website). Further assume that a content item request that references the search query (e.g., “DVD”) is received. In this example, a determination can be made that the search query matches the targeting keyword (e.g., “DVD”). However, in this example, the particular digital component will not be eligible for presentation in response to the content item request (e.g., on the search results page) unless it is further determined that the user identifier that is referenced by the content item request matches a retargeted identifier from the retargeting set.
- As described above, a service provider can specify additional targeting criteria for digital components. For example, in addition to specifying that presentation eligibility for a digital component is conditioned on the user identifier that is included in the content item request matching a retargeted identifier that is in a particular retargeting set, a service provider can further specify that the user not match a non-targeted user identifier in a set of non-targeted identifiers. A non-targeted identifier is a user identifier for a user (or user device) that is used to prevent a digital component from being eligible for presentation.
- For example, if a service provider that sells DVD players has recently (e.g., within 1 week) sold a DVD player to a particular user, the service provider may wish to prevent digital components for the DVD player to be provided to the user. In this example, the service provider may add the user identifier for the user to a set of non-targeted user identifiers (e.g., thereby identifying the user identifier as a non-targeted identifier) and specify that the digital components for the DVD players not be eligible for presentation when the user identifier that is included in the content item request matches a non-targeted identifier that is included in the set of non-targeted user identifiers.
- In some implementations, retargeted content items that are eligible for presentation in response to content item request can be identified, for example, by first identifying a set of retargeting content items that are targeted using keywords that are matched by the search query. Once this set of retargeted content items has been identified, a further determination of whether additional targeting criteria for each of the retargeted content items can be made. For example, for each of the retargeted content items in the set, a determination can be made whether the user identifier that is included in the content item request matches a retargeted identifier that is included in a retargeting set with which the retargeted content item is targeted. If a match between the user identifier and the retargeting set for a particular retargeted content item is determined to not exist, the retargeted content item can be removed from (or prevented from inclusion in) a set of eligible retargeted content items for the content item request.
- Note that in some implementations, retargeted content items and keyword targeted content items that that are targeted using keywords that match the search query can all be identified together based on their targeting keywords. The retargeted digital components can then be identified as such based on the retargeted digital components being further targeted using a retargeting set.
- In some implementations, the retargeted content items that are determined to be eligible for presentation can be limited, for example, to retargeted content items that are targeted using retargeting sets that contain at least a pre-specified minimum number of retargeted identifiers. For example, each retargeted digital component that is eligible for presentation can be required to be targeted using retargeting sets that include more than 1,000 (or another threshold number of) unique retargeted identifiers in order to protect the privacy of users (e.g., in addition to using user identifiers that are identity neutral and do not contain personal information). If a particular retargeting set is determined to have fewer than the pre-specified minimum number of retargeted identifiers, the particular retargeting set can be disabled and/or content items that are eligible for presentation based on the particular retargeting set can be removed from the set of eligible retargeted content items.
- A retargeted content item is removed from the plurality of content items eligible for presentation in response to determining that a user identifier matches a particular non-targeted user identifier in a set of non-targeted user identifiers. For example, if a user identifier matches a particular non-targeted user identifier in a set of non-targeted user identifiers for a retargeted digital component, the retargeted digital component may be removed from the set of digital components that are eligible for presentation with a search results page.
- In some implementations, a determination is optionally made that a particular keyword targeted content item and at least one eligible retargeted content item are both provided by the same content item provider (408). For example, a content distribution system may determine that a particular keyword targeted digital component and at least one of the retargeted digital components are both provided by the same service provider. The determination can be made, for example, based on a determination that each of the keyword targeted content item and the retargeted content item are both identified as belonging to a same digital component management account. The determination can also be made, for example, based on the particular content item and the retargeted content item each being included in the same digital component campaign.
- In response to determining that the particular keyword targeted content item and at least one of the eligible retargeted content items is provided by a same content item provider, the particular keyword targeted content item can be optionally removed from the plurality of keyword targeted content items that are eligible for presentation (410). For example, if a keyword targeted digital component and a retargeted digital component from a same service provider are both eligible for presentation, the keyword targeted digital component may be deemed ineligible, for example, so that bids for the digital components for which the service provider has provided more specific targeting criteria (e.g., retargeted content items) are used in the auction. This prevents a service providers two sets of digital components from competing in the auction. Other techniques for selecting eligible content items from among multiple sets of content items that are provided by a same service provider can also be used (e.g., selecting the set of digital components having a higher bid or higher historical performance measure).
- A responsive content item to be presented with the search results page is selected (412). In some implementations, the responsive content item is selected based at least in part on bids that are associated with each of the keyword targeted content items that are eligible for presentation with the search results page and bids for each of the retargeted content items that are eligible for presentation with the search results page. For example, using the bids, a content distribution system may conduct an auction to select a digital component to be presented with the search results page. The winner of the auction (i.e., the digital component that is selected) may be the keyword targeted digital component or retargeted digital component with the highest auction score. The auction score may be based on the bid and/or digital component quality measures associated with each digital component.
- Data specifying the responsive content item is provided (414). For example, a content distribution system may provide data specifying a network location from which the winning digital component can be obtained by the user device. Alternatively, the digital component itself can be provided to the user device in response to the request.
- Referring to
FIG. 1B andFIG. 5 , among others, based on the sequence dependency parameter, thethread optimization component 124 can create at least one singlethread data structure 250. The singlethread data structure 250 can include a packet based architecture (or other format) and can include at least oneheader 251. Theheader 251 can include supplemental data identifying thecontent distribution system 110, source or destination address information, governing protocol information, IP addresses, frame synchronization data, size data, resolution data, or metadata associated with action data structures. The payload or body of the singlethread data structure 250 can include at least onesequence dependency parameter 252, or other information such as at least onefirst data transmission 253 or at least onesecond data transmission 254. The singlethread data structure 250 can include one or more than one structures, e.g., multiple packets havingrespective headers 251 and payloads indicating at least part of thefirst data transmission 253 or thesecond data transmission 254. Thesequence dependency parameter 253 can indicate a sequence dependency of actions from the plurality of actions indicated by thefirst data transmission 253 or thesecond data transmission 254. - The
header 251,sequence dependency parameter 252,first data transmission 253, and thesecond data transmission 254 may but need not be included in the singlethread data structure 250. For example, the body of the singlethread data structure 250 can include only the first data transmission 253 (or portion thereof) and not include any of thesequence dependency parameter 252 or thesecond data transmission 254, or the body of the singlethread data structure 250 can include thesequence dependency parameter 252 as well as one or more of thefirst data transmission 253 and thesecond data transmission 254. The singlethread data structure 250 can include one or more individual packets transmitted separately in sequence or parallel as part of one or more data transmissions between thecontent distribution system 110 and the serviceprovider computing device 108 or the contentprovider computing device 139. Theheader 251 or thesequence dependency parameter 252 can indicate that the separate transmissions or separate data packets are associated with the same batch transmission, e.g., the same overall singlethread data structure 250. Thedirect action API 127 can merge or otherwise link together multiple different single thread data structures into one singlethread data structure 250. The singlethread data structure 250 can include multiple packets or multiple different structures that are separate but associated with one another. - The
thread optimization component 124 can prioritize one action of the singlethread data structure 250 over another action. The prioritization can be indicated by thesequence dependency parameter 252 or otherwise provided to thedirect action API 127 or thecontent selector component 125. For example, thethread optimization component 124 can prioritize a first in time action indicated by the singlethread data structure 250. Responsive to the prioritization, thedirect action API 127 or other component such as thecontent selector component 125 can provide data transmissions (e.g., at least part of thefirst data transmission 253 or the second data transmission 254) to the contentprovider computing device 139 or to the serviceprovider computing device 108 to effect a conversion related to the first in time action. - Referring to
FIG. 6 , among others, thecontent distribution system 110 can receive, from a firstclient computing device 134, the firstinput audio signal 605, (e.g., “OK, I would like to go to go dinner tonight”). Thecontent distribution system 110 can also receive, from the same or a differentclient computing device 134, the second input audio signal 610, (e.g., “OK, I would like to catch a movie later”). Thecontent distribution system 110 can generate respective action data structures and corresponding data transmissions for the first and second audio input signals 605, 610.content distribution system 110 components such as thethread optimization component 124 can apply statistical or heuristic techniques to the firstinput audio signal 605 and the second input audio signal 610 to generate at least one sequence dependency parameter indicative of sequence dependent actions from among the actions of the firstinput audio signal 605 and the second input audio signal 610. Thecontent distribution system 110 can batch or pool the data transmission (e.g., packets) or the action data structures corresponding to the firstinput audio signal 605 and the second input audio signal 610 to create the batched or pooled singlethread data structure 250. Thecontent distribution system 110 can transmit or otherwise provide the singlethread data structure 250 to the serviceprovider computing device 108 for processing by the serviceprovider computing device 108 to, for example reserve at least one car, purchase movie tickets, or make a dinner reservation responsive to the first and second input audio signals 605, 610. - Different instances of portions of the same single thread data structure can be provided to different computing devices. For example, all or some of the
single thread 250 can be provided to a serviceprovider computing device 108 to effect a conversion, e.g., order a car from a car share service, and the same or different portions of thesingle thread 250 can be provided (simultaneously is sequentially) to a contentprovider computing device 139 to effect another conversion, e.g., obtain a content item for a restaurant. - Responsive to receipt of the single
thread data structure 250, the contentprovider computing device 139 or the serviceprovider computing device 108 can perform at least one operation defined or indicated by the singlethread data structure 250. The operation can correspond to one or more of the respective actions of the action data structures (or data transmissions) of the first or second input audio signals 605, 610. For example, the operations can include reserving a car from a car share service, from the serviceprovider computing device 108, or providing a content item for a movie. For example, the contentprovider computing device 139 can provide a first response 615 (e.g., a content item for a movie) to theclient computing device 134, and the serviceprovider computing device 108 can provide a second response 620 (e.g., to reserve a car) to the same or a differentclient computing device 134. The first andsecond responses content distribution system 110 during transmission from the contentprovider computing device 139 or the serviceprovider computing device 108 to theclient computing device 134. Theresponses content distribution system 110 can receive an indication of the conversion (or of theresponses 615, 620) via thecomputer network 102 from the serviceprovider computing device 108, the contentprovider computing device 139, or from theclient computing device 134. - The
single thread 250 created by the content distribution system 110 (e.g., by thethread optimization component 124 or the direct action API 127) can indicate an actual, known, scheduled, or estimated time of actions that correspond to the thread. These times can include movie start times, transport pick up times, dinner reservation times, or event times, among others. The times can be discrete times, e.g., 8:00 pm dinner reservations, or relative times relative to other actions, e.g., the action ‘B’ is scheduled to begin 15 minutes after the known or estimated conclusion time of action ‘A’. For example, thethread 250 can indicate that a first action (e.g., eating dinner) is scheduled to occur prior to a second action (e.g. watching a movie). These actions can correspond to data structure (or data transmission) actions identified from input audio signals. Thedirect action API 127 can detect the completion of a first action. For example, thecomputing device 134 can execute a script to pay the bill at the restaurant, or thedirect action API 127 can estimate that dinner will last for 90 minutes, or the end user can provide an audio input signal or other data message to indicate that the first action is complete or scheduled for completion at a time or within a time window. Responsive to detection of completion (e.g., a known or estimate end time) of a first action, thedirect action API 127 can proceed to transmit data packets of the single thread to a serviceprovider computing device 108 or to a contentprovider computing device 139. This transmission can occur subsequent to known or estimated completion of the first action, or during a time window, (e.g., within one hour) of known or estimated completion of the first action. For example, upon completion of dinner, thedirect action API 127 can provide at least part of thesingle thread 250 to a serviceprovider computing device 108 to purchase movie tickets, or to a contentprovider computing device 139 to obtain a content item for a movie. Indications of the conversions (e.g., purchase of the tickets or rendering of the content item at the client computing device 134) can be provided to thecontent distribution system 110 from theclient computing device 134, the contentprovider computing device 139, or the serviceprovider computing device 108. Thesequence dependency parameter 252 can indicate the order in which actions of thesingle thread 250 are scheduled to occur, e.g., can indicate that a first action is scheduled to occur prior to a second action. - The
direct action API 127 can identify at least one deadlock condition of at least one action of thesingle thread 250. A deadlock condition can indicate that a second action cannot proceed until after a first, prior action is complete. For example, thedirect action API 127 can identify a deadlock condition when the first action is a movie action (watching a movie in a theater) and a second action is transport home via a car share service after the movie is over. Thedirect action API 127 can determine a deadlock condition for the second action (e.g., the ride home) that lasts until a time associated with the first action, such as a scheduled end time of the movie. Thedirect action API 127 or other component such as theinterface 123 can prevent transmission of the data transmission to a service provider computing device (e.g., a car share service) responsive to the deadlock condition. For example, thecontent distribution system 110 or component thereof can prevent transmission of data packets of the data transmission (or data structure) for the action (e.g., to reserve a car) to a service provider computing device 108 (e.g., of a car share service) during the time period of the deadlock condition. This prevents the serviceprovider computing device 108 from receiving the request for a car (or other service) too early. - The
direct action API 127 can obtain an indication or otherwise determine that the deadlock condition has terminated or no longer exists. For example, thedirect action API 127 can query the serviceprovider computing device 108 or other third party computing device to determine a scheduled end time of a movie or other action. Upon arrival of this time, or within a threshold time period (e.g., 30 minutes or 5 minutes) in advance of this time the direct action API can break, release, or terminate the deadlock condition. Subsequent to expiration of the deadlock condition thecontent distribution system 110 can transmit (e.g., via the interface) to the serviceprovider computing device 108 data of the data transmission or data structure corresponding to a subsequent action such as a ride home after the movie. - The
direct action API 127 can receive an indication form theclient computing device 134 to terminate the deadlock condition. For example, the end user may decide to leave the movie early, before the movie is finished, and can enter an input audio signal into the client computing device, e.g., “OK, this movie stinks, I'd like a ride home please”. The content distribution system 110 (e.g., theNLP component 122 or the direct action API 127) can determine from this input audio signal that the deadlock condition has expired, and can transmit data for the subsequent action to the serviceprovider computing device 108. Subsequent to release of the deadlock condition thedirect action API 127 can also provide data for an action (e.g., data of a data transmission or action data structure of the single thread 250) to the contentprovider computing device 139 to obtain a content item related to the post-deadlock action. The content item can be provided by thecontent distribution system 110 or by the contentprovider computing device 139 to theclient computing device 134 for rendering. The content item can indicate, for example, “Sorry to hear about the movie, would you like to order a car from a car share company?”. The content selector component 125 (or other component such as theinterface 123 or the direct action API 127) can block selection of the content item, or transmission of the selected content item to theclient computing device 134, responsive to a deadlock condition or until release of the deadlock condition. - The
direct action API 127 can modify sequential orders of actions indicated by thesingle thread 250. For example, the direct action API can determine an indication of a first sequential order, e.g., a first action, a second action subsequent to the first action, and a third action subsequent to the second action (dinner, then a movie, then a ride home). Thedirect action API 127 and other components such as theNLP component 122 and theinterface 123 can receive a request to modify the sequential order. For example, thecontent distribution system 110 can receive in input audio signal from the client computing device of “OK I'd like to eat dinner after the movie.” The direct action API 127 (or NLP component 122) can obtain from this audio input signal a request to modify the sequential order of the actions to, for example, a movie, then dinner, then a ride home. From this information, thedirect action API 127 can generate a modified sequential order so that the second action (watching the movie) is now scheduled to occur prior to the first action (eating dinner). Thedirect action API 127 or content selector component 125 (or other components) can proceed accordingly to transmit data transmission of the movie action prior to data transmissions of the dinner action to the contentprovider computing device 139 or the serviceprovider computing device 108. Thedirect action API 127 can also identify or modify a deadlock condition to delay operations related to the dinner action based on an end time of the first movie action. The actions of dinner, movies, and transport are examples and any number of end user activities or requests can constitute actions. The modifications can occur responsive to inputs other than the input audio signal. For example, if tickets to the 9 pm movie (after dinner) are sold out, thecontent distribution system 110 can provide an audio output for rendering at theclient computing device 134 to suggest watching a movie (e.g., the 5 pm showing) prior to dinner. - The
content distribution system 110 can perform offline action. This can save processing and electrical power requirements and reduce or shift network traffic to off-peak times. For example, thesingle thread 250 can indicate a first action and a second subsequent action that depends on resolution of the first action. These actions can be days or weeks (or more) apart from one another, such as buying a plane ticket (first action, today) for a three week tropical beach vacation that will occur six months in the future, and booking scuba lessons for the last day of the vacation (second action, more than six months away). Thedirect action API 127 can communicate in real time with the serviceprovider computing device 108 corresponding to an airline entity responsive to receipt of the input audio signal to buy the plane tickets in an online action to effect a conversion—the purchase of the plane tickets. The second action in this example remains six months away. Over this six month period or other time window thedirect action API 127 or other component such as thecontent selector component 125 can select content items or perform other operations responsive to the second action (scuba lessons). For example, the direct action API can obtain offline by obtaining this information from thedata repository 129 or from a third party data repository relating to scuba lessons. The offline action may or may not be in real time, and an offline action does not require time separation (e.g., six months) between actions. For example, thecontent distribution system 110 can obtain information responsive to actions from thedata repository 129 or from a third party database in a real time, as part of a communication session or synchronous or asynchronous conversation with the client computing device. -
FIG. 7 illustrates a block diagram of amethod 700 for selecting digital components. Themethod 700 can include receiving interaction data (ACT 702). Themethod 700 can include identifying a first plurality of candidate digital components (ACT 704). Themethod 700 can include identifying a second plurality of candidate digital components (ACT 706). Themethod 700 can include selecting a digital component from the first plurality of candidate digital components and the second plurality of candidate digital component (ACT 708). Themethod 700 can include transmitting the digital component to the client device (ACT 710). - The
method 700 can include receiving interaction data (ACT 702). In some implementations, the interaction data can be received by a data processing system from a client device. The interaction data can include a set identifier. The interaction data can also include an indication that the client device performed a pre-specified interaction with a script associated with the set identifier. The script can be a component of a content item previously presented to the client device. - The
method 700 can include receiving, by a natural language processor and via an interface of the data processing system, data packets that can include a first input audio signal and a second input audio signal that were detected by a sensor of the client device. The natural language processor can parse the first and the second input audio signal to identify a first request and a first trigger keyword. The natural language processor can also parse the second input audio signal to identify a second request and a second trigger keyword. - For example, the content distribution system can execute, launch, or invoke the NLP component to receive packets or other protocol based transmissions via the network from at least one client computing device. The data packets can include or correspond to an input audio signal detected by the sensor (e.g., a microphone) of a first client computing device, such as a first end user saying “OK, I would like to go to go dinner tonight” into the client computing device, e.g., a smartphone. The NLP component can parse the input audio signal to identify requests (e.g., an entertainment request for “dinner”) as well as trigger keywords (“to go to”) that correspond or relate to the request. In some implementations, the
method 700 can include generating at least one first action data structure based on the identified requests or keywords associated with the received first audio input signal. For example, the direct action API can generate an action data structure that indicates a first action, such as a location for a taxi pick-up, a requested service provider, or a restaurant recommendation. - The NLP component can also receive the second audio input signal. The NPL component can receive the audio input signal via a packet or other protocol based transmissions via the network. The second audio input signal can be received from the same or a different client computing device that originated the first input audio signal. The data packets can include or correspond to an input audio signal detected by the sensor of the second client computing device, such as an end user saying “OK, I would like to catch a movie later” into the client computing device. The data processing system can identify at least one second request or at least one second trigger keyword from the second input audio signal. For example, the NLP component can parse the input audio signal to identify requests (an entertainment request for a “movie”) as well as trigger keywords (“to catch”) that correspond or relate to the request. The data processing system can generate at least one second action data structure based on the identified requests or keywords associated with the received first audio input signal. For example, the direct action API can generate an action data structure that indicates a second action, such as a location for a taxi pick-up, a requested service provider, or movie information.
- The
method 700 can include identifying a first plurality of candidate digital components (ACT 704). The first plurality of candidate digital components can be identified by the data processing system. The data processing system can identify the first plurality of candidate digital components based on a first match between a query and a first keyword associated with the first plurality of digital components. For example, assume that the query submitted by the client device is “DVD player.” In this example, a digital component can be selected as one of the candidate digital components based on the query “DVD player” matching a keyword (e.g., a targeting keyword) such as, for example, “DVD”, “player”, or “DVD player”. - The
method 700 can include identifying a second plurality of candidate digital components (ACT 706). The second plurality of candidate digital components can be identified based on a second match between the query, a second keyword associated with the second plurality of digital components, and the interaction data. For example, the second plurality of candidate digital components can be identified because the client device interacted with the script associated with the set identified (e.g., the client device previously performed the pre-specified action). The second plurality of candidate digital components can be identified in a method similar to the identification of the first plurality of candidate digital components. The second plurality of candidate digital components can be retargeted content items. The retargeted content items can be content items that are stored in association with the set identifier. The retargeted content items can be selected for a client device after the client device has performed the pre-specified interaction. - In some implementations, the
method 700 can include determining that a first portion of the first plurality of candidate digital components is associated with a publisher and that a second portion of the second plurality of candidate digital components is also associated with. The publisher can be a content provider. The first portion of the first plurality of candidate digital components can be removed from the first plurality of candidate digital components prior to the selection of the digital component. For example, if a publisher has candidate digital components in the first plurality and the second plurality of candidate digital components that are both eligible for selection, the candidate digital component in the first plurality of candidate digital component can be removed to prevent the two digital components from competing in a selection process. Other techniques for selecting eligible content items from among multiple sets of content items that are provided by a same advertiser can also be used (e.g., selecting the set of advertisements having a higher bid or higher historical performance measure). - The
method 700 can include selecting a digital component from the first plurality of candidate digital components and the second plurality of candidate digital components (ACT 708). The digital components can be selected from the first and second plurality of candidate digital components based on a performance metric of each of the candidate digital components in the first plurality of digital components and the second plurality of digital components. The performance metric can be a historical performance measure. In some implementations, the performance metric can include a bid value. The performance metric can be a function of one or more of the digital component's relevance to a current user interest (e.g., as determined by the relationship between the digital component and the input audio signal). The performance metric can be can be based on a relevance to a user type, relevance to a user, an offer per impression, an offer per user action (e.g., selection, conversion, etc.), a performance parameter of the digital component (e.g., selection rate, user rating, conversion rate, etc.), how the digital component performs (e.g., in terms of selection rate, conversion rate, etc.) on computing devices device configurations similar to the computing device. In some implementations, if the client device performed the pre-specified interaction, the performance metric can be weighted in the favor of the digital components in the second plurality of candidate digital components. For example, if the client device performed the pre-specified interaction, the digital processing system can be more likely to select the digital component from the second plurality of candidate digital components. For example, if a candidate digital component from the first plurality of candidate digital components has a conversion rate of 0.67 and a candidate digital component from the second plurality of candidate digital components has a conversion rate of 0.51, but a weighting of 2× because the client device performed the pre-specified interaction, the candidate digital component from the second plurality of digital components can be selected even though the unweighted conversion rate for the candidate digital component from the first plurality of candidate digital components is higher. - The
method 700 can include identifying, by the direction action API, a deadlock condition associated with the second action. A deadlock condition can indicate that a second action cannot proceed until after a first, prior action is complete. For example, the direct action API can identify a deadlock condition when the first action is a movie action (watching a movie in a theater) and a second action is transport home via a car share service after the movie is over. The direct action API can determine a deadlock condition for the second action (e.g., the ride home) that lasts until a time associated with the first action, such as a scheduled end time of the movie. The direct action API or other component such as the interface can prevent transmission of the data transmission to a service provider computing device (e.g., a car share service) responsive to the deadlock condition. For example, the content distribution system or component thereof can prevent transmission of data packets of the data transmission (or data structure) for the action (e.g., to reserve a car) to a service provider computing device (e.g., of a car share service) during the time period of the deadlock condition. This prevents the service provider computing device from receiving the request for a car (or other service) too early. - The
method 700 can include transmitting the digital component to a client device (ACT 710). In some implementations, the digital component can be transmitted to a second client device that is different from the client device that transmitted the input audio signal to the data processing system. The method can include transmitting the second action data structure to a second service provider device subsequent to receiving an indication of a completion of a first action associated with the first action data structure. - The data processing system can include a thread optimization component. The thread optimization component can determine a sequence dependency parameter. The sequence dependency parameter can be determined based on a heuristic technique applied to the first action data structure and the second action data structure. For example, the thread optimization component can apply a heuristic technique to data packets of a first data transmission (or to the corresponding first data structure) and to data packets of a second data transmission (or to the corresponding second data structure) to determine at least one sequence dependency parameter.
- The heuristic or other statistical technique can determine or identify with a threshold degree of certainty patterns among the first and second data transmissions (or corresponding data structures) that indicate a sequence dependency of actions indicated by the data transmissions. The sequence dependency parameter can indicate the existence or likelihood (e.g., relative to a threshold level or other benchmark) of actions represented by the data transmissions (or corresponding action data structures) having an order of operations, time, or sequence dependency on each other. The sequence dependent operations or actions, indicated by the sequence dependency parameters, can include a number of actions that occur in a known, suggested, required, or particular order. For example, going from home to a movie theater, then back home can include three sequence dependent operations or actions. The first action in this example includes travelling from home to the movie theater. The second action includes watching the movie in the theater. The third action includes returning home from the theater.
- The
method 700 can include merging a transmission of the first action data structure and the second action data structure into a single thread. The data processing system can compare the sequence dependency parameter to a threshold (e.g., a rule, policy, or value) and based on the comparison the data processing system can merge the first and second data transmissions (or associated action data structures) into a single thread. The single thread can indicate actions of the first and second (or more) action data structures, and can indicate a sequence or order of these actions, as well as sequence dependencies where for example a second action cannot (or is not scheduled to) begin until after a first action is complete. In some implementations, the first action corresponds to the pre-specified interaction with the script and the second action includes the digital component. -
FIG. 8 is a block diagram of an example computer system 500 that can be used to perform operations described above. The system 500 includes aprocessor 510, amemory 520, astorage device 530, and an input/output device 540. Each of thecomponents system bus 550. Theprocessor 510 is capable of processing instructions for execution within the system 500. In one implementation, theprocessor 510 is a single-threaded processor. In another implementation, theprocessor 510 is a multi-threaded processor. Theprocessor 510 is capable of processing instructions stored in thememory 520 or on thestorage device 530. - The
memory 520 stores information within the system 500. In one implementation, thememory 520 is a computer-readable medium. In one implementation, thememory 520 is a volatile memory unit. In another implementation, thememory 520 is a non-volatile memory unit. - The
storage device 530 is capable of providing mass storage for the system 500. In one implementation, thestorage device 530 is a computer-readable medium. In various different implementations, thestorage device 530 can include, for example, a hard disk device, an optical disk device, a storage device that is shared over a network by multiple computing devices (e.g., a cloud storage device), or some other large capacity storage device. - The input/
output device 540 provides input/output operations for the system 500. In one implementation, the input/output device 540 can include one or more of a network interface device, e.g., an Ethernet card, a serial communication device, e.g., and RS-232 port, and/or a wireless interface device, e.g., and 802.11 card. In another implementation, the input/output device can include driver devices configured to receive input data and send output data to other input/output devices, e.g., keyboard, printer anddisplay devices 560. Other implementations, however, can also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, etc. - Although an example processing system has been described in
FIG. 8 , implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. - Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. Alternatively, or in addition, the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, while a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal. The computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- The term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing. The apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Moreover, a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (21)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/590,861 US10956485B2 (en) | 2011-08-31 | 2017-05-09 | Retargeting in a search environment |
Applications Claiming Priority (6)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/222,380 US8650188B1 (en) | 2011-08-31 | 2011-08-31 | Retargeting in a search environment |
US14/176,845 US9177329B2 (en) | 2011-08-31 | 2014-02-10 | Retargeting in a search environment |
US14/870,725 US9530153B2 (en) | 2011-08-31 | 2015-09-30 | Retargeting in a search environment |
US15/361,668 US10102545B2 (en) | 2011-08-31 | 2016-11-28 | Retargeting in a search environment |
US15/395,725 US10630751B2 (en) | 2016-12-30 | 2016-12-30 | Sequence dependent data message consolidation in a voice activated computer network environment |
US15/590,861 US10956485B2 (en) | 2011-08-31 | 2017-05-09 | Retargeting in a search environment |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/361,668 Continuation-In-Part US10102545B2 (en) | 2011-08-31 | 2016-11-28 | Retargeting in a search environment |
US15/395,725 Continuation US10630751B2 (en) | 2011-08-31 | 2016-12-30 | Sequence dependent data message consolidation in a voice activated computer network environment |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180232371A1 true US20180232371A1 (en) | 2018-08-16 |
US10956485B2 US10956485B2 (en) | 2021-03-23 |
Family
ID=63104582
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/590,861 Active 2032-07-29 US10956485B2 (en) | 2011-08-31 | 2017-05-09 | Retargeting in a search environment |
Country Status (1)
Country | Link |
---|---|
US (1) | US10956485B2 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190205901A1 (en) * | 2017-12-29 | 2019-07-04 | Facebook, Inc. | Dynamic creation of content items for distribution in an online system by combining content components |
US10482140B2 (en) * | 2015-01-08 | 2019-11-19 | Naver Corporation | Method and system for providing retargeting search service |
WO2020051357A1 (en) * | 2018-09-06 | 2020-03-12 | Amazon Technologies, Inc. | Communicating context to a device using an imperceptible audio identifier |
CN111290755A (en) * | 2020-02-04 | 2020-06-16 | 北京字节跳动网络技术有限公司 | Method and device for presenting data, electronic equipment and storage medium |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090327032A1 (en) * | 2008-06-26 | 2009-12-31 | Microsoft Corporation | Quality based pricing and ranking for online ads |
US20100082780A1 (en) * | 2008-10-01 | 2010-04-01 | Matt Muilenburg | Systems and methods for configuring a website having a plurality of operational modes |
US20160092699A1 (en) * | 2014-09-26 | 2016-03-31 | Microsoft Corporation | Privacy-preserving cookies for personalization without user tracking |
US9542956B1 (en) * | 2012-01-09 | 2017-01-10 | Interactive Voice, Inc. | Systems and methods for responding to human spoken audio |
US20170169817A1 (en) * | 2015-12-09 | 2017-06-15 | Lenovo (Singapore) Pte. Ltd. | Extending the period of voice recognition |
Family Cites Families (133)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4603430A (en) | 1984-09-21 | 1986-07-29 | Hughes Aircraft Company | Target discrimination utilizing median filters |
JP3181592B2 (en) | 1992-12-01 | 2001-07-03 | マイクロソフト コーポレイション | Method and system for in-place interaction with embedded objects |
US5812935A (en) | 1993-04-17 | 1998-09-22 | Hughes Electronics | Cellular system employing base station transmit diversity according to transmission quality level |
US5608727A (en) | 1995-05-02 | 1997-03-04 | Motorola, Inc. | Method and system for management of frequency spectrum among multiple applications on a shared medium |
US6119101A (en) | 1996-01-17 | 2000-09-12 | Personal Agents, Inc. | Intelligent agents for electronic commerce |
DE19716445A1 (en) | 1997-04-21 | 1998-10-22 | Heidelberger Druckmasch Ag | Character broadening process |
US6529730B1 (en) | 1998-05-15 | 2003-03-04 | Conexant Systems, Inc | System and method for adaptive multi-rate (AMR) vocoder rate adaption |
US6829646B1 (en) | 1999-10-13 | 2004-12-07 | L. V. Partners, L.P. | Presentation of web page content based upon computer video resolutions |
US20010016034A1 (en) | 1998-12-08 | 2001-08-23 | Sukhinder Singh | Method and apparatus for obtaining and aggregating off-line user data for re-packaging and presentation to users over a data-packet-network |
US7003729B1 (en) | 1999-04-20 | 2006-02-21 | I2 Technologies Us, Inc. | Method and apparatus for supporting multiple alternative graphical user interfaces in computer-moderated electronic commerce |
US6275806B1 (en) | 1999-08-31 | 2001-08-14 | Andersen Consulting, Llp | System method and article of manufacture for detecting emotion in voice signals by utilizing statistics for voice signal parameters |
US6684249B1 (en) | 2000-05-26 | 2004-01-27 | Sonicbox, Inc. | Method and system for adding advertisements over streaming audio based upon a user profile over a world wide area network of computers |
FI20001577A (en) | 2000-06-30 | 2001-12-31 | Nokia Mobile Phones Ltd | Speech coding |
US6857007B1 (en) | 2000-08-30 | 2005-02-15 | Bloomfield Enterprises, Llc | Personal digital assistant facilitated communication system |
WO2002086864A1 (en) | 2001-04-18 | 2002-10-31 | Rutgers, The State University Of New Jersey | System and method for adaptive language understanding by computers |
WO2002089105A2 (en) | 2001-05-02 | 2002-11-07 | Bitstream, Inc. | Methods, systems, and programming for producing and displaying subpixel-optimized images and digital content including such images |
US7219309B2 (en) | 2001-05-02 | 2007-05-15 | Bitstream Inc. | Innovations for the display of web pages |
GB0118294D0 (en) | 2001-07-27 | 2001-09-19 | Ibm | Method and system for deadlock detection and avoidance |
GB2392595A (en) | 2002-08-30 | 2004-03-03 | Hewlett Packard Co | Page composition |
US20040056894A1 (en) | 2002-09-19 | 2004-03-25 | Igor Zaika | System and method for describing and instantiating extensible user interfaces |
US7296230B2 (en) | 2002-11-29 | 2007-11-13 | Nippon Telegraph And Telephone Corporation | Linked contents browsing support device, linked contents continuous browsing support device, and method and program therefor, and recording medium therewith |
WO2004068320A2 (en) | 2003-01-27 | 2004-08-12 | Vincent Wen-Jeng Lue | Method and apparatus for adapting web contents to different display area dimensions |
WO2004072867A1 (en) | 2003-02-14 | 2004-08-26 | Access Co., Ltd. | Browser program for performing table-layout |
KR20040076649A (en) | 2003-02-26 | 2004-09-03 | 삼성전자주식회사 | Apparatus and method for displaying browser graphic by aspect ratio |
KR100447526B1 (en) | 2003-03-18 | 2004-09-08 | 엔에이치엔(주) | A method of determining an intention of internet user, and a method of advertising via internet by using the determining method and a system thereof |
GB2418509A (en) | 2003-06-03 | 2006-03-29 | Forbes Holton Norris Iii | Flexible, dynamic menu-based web-page architecture |
JP3920818B2 (en) | 2003-07-22 | 2007-05-30 | 株式会社東芝 | Scheduling method and information processing system |
GB0320278D0 (en) | 2003-08-29 | 2003-10-01 | Hewlett Packard Development Co | Constrained document layout |
US7809843B1 (en) | 2003-09-18 | 2010-10-05 | Intel Corporation | Globally unique identification in communications protocols and databases |
NO20034724D0 (en) | 2003-10-22 | 2003-10-22 | Opera Software Asa | Presentation of HTML content on a display terminal |
KR100458461B1 (en) | 2004-03-04 | 2004-11-26 | 엔에이치엔(주) | Method and system for advertisement related to information service |
US7853255B2 (en) | 2004-04-16 | 2010-12-14 | Broadcom Corporation | Digital personal assistance via a broadband access gateway |
US20060103667A1 (en) | 2004-10-28 | 2006-05-18 | Universal-Ad. Ltd. | Method, system and computer readable code for automatic reize of product oriented advertisements |
US20060111971A1 (en) | 2004-11-24 | 2006-05-25 | Microsoft Corporation | System and method for on-line and off-line advertising in content delivered to a display screen |
EP1861800A1 (en) | 2005-03-09 | 2007-12-05 | Medio Systems, Inc. | Method and system of bidding for advertisement placement on computing devices |
US7730418B2 (en) | 2005-05-04 | 2010-06-01 | Workman Nydegger | Size to content windows for computer graphics |
JP4665639B2 (en) | 2005-07-19 | 2011-04-06 | 日本電気株式会社 | Communication quality monitoring system, communication quality monitoring device, communication quality degradation point identifying device, method and program in the device |
JP2007080357A (en) | 2005-09-13 | 2007-03-29 | Toshiba Corp | Information storage medium, information reproducing method, information reproducing apparatus |
US8195133B2 (en) | 2005-09-14 | 2012-06-05 | Jumptap, Inc. | Mobile dynamic advertisement creation and placement |
FI118779B (en) | 2005-10-07 | 2008-03-14 | Riku Rikkola | Cards, receiving device for cards and systems for transmitting electrical energy |
JP2007115293A (en) | 2005-10-17 | 2007-05-10 | Toshiba Corp | Information storage medium, program, information reproducing method, information reproducing apparatus, data transfer method, and data processing method |
US7904505B2 (en) | 2005-11-02 | 2011-03-08 | At&T Intellectual Property I, L.P. | Service to push author-spoken audio content with targeted audio advertising to users |
WO2007091096A1 (en) | 2006-02-10 | 2007-08-16 | Spinvox Limited | A mass-scale, user-independent, device-independent, voice message to text conversion system |
US7606875B2 (en) | 2006-03-28 | 2009-10-20 | Microsoft Corporation | Detecting serving area of a web resource |
CN101055577A (en) | 2006-04-12 | 2007-10-17 | 龙搜（北京）科技有限公司 | Collector capable of extending markup language |
US8582663B2 (en) | 2006-08-08 | 2013-11-12 | Core Wireless Licensing S.A.R.L. | Method, device, and system for multiplexing of video streams |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
CN101529307B (en) | 2006-11-01 | 2012-03-28 | 日本电气株式会社 | Image display device |
US7742922B2 (en) | 2006-11-09 | 2010-06-22 | Goller Michael D | Speech interface for search engines |
US8031857B2 (en) | 2006-12-19 | 2011-10-04 | Scenera Technologies, Llc | Methods and systems for changing a communication quality of a communication session based on a meaning of speech data |
US7877696B2 (en) | 2007-01-05 | 2011-01-25 | Eastman Kodak Company | Multi-frame display system with semantic image arrangement |
US8107960B2 (en) | 2007-01-23 | 2012-01-31 | Toshiba America Research, Inc. | Prioritized query |
GB2451415B (en) | 2007-02-13 | 2011-08-17 | Vodafone Plc | Content reproduction in telecommunications systems |
US8413070B1 (en) | 2007-05-07 | 2013-04-02 | Adobe Systems Incorporated | Declarative resizeable list in electronic form |
KR20100017440A (en) | 2007-05-29 | 2010-02-16 | 가부시키가이샤 아쿠세스 | Terminal, history management method, and computer usable recording medium for history management |
US20090085921A1 (en) | 2007-10-01 | 2009-04-02 | Lydia Mai Do | Populate Web-Based Content Based on Space Availability |
US8095865B2 (en) | 2007-11-21 | 2012-01-10 | Microsoft Corporation | Layout manager |
US8555193B2 (en) | 2008-01-17 | 2013-10-08 | Google Inc. | System for intelligent automated layout and management of interactive windows |
US8453051B1 (en) | 2008-03-31 | 2013-05-28 | Amazon Technologies, Inc. | Dynamic display dependent markup language interface |
US20090279108A1 (en) | 2008-05-12 | 2009-11-12 | Nagayasu Hoshi | Image Processing Apparatus |
JP4547638B2 (en) | 2008-05-29 | 2010-09-22 | ソニー株式会社 | Web page display device and Web page display method |
CA2633177A1 (en) | 2008-06-03 | 2009-12-03 | Contec Innovations, Inc. | Method and system for producing a presentation message for a mobile device |
US20090300120A1 (en) | 2008-06-03 | 2009-12-03 | Contec Innovations Inc. | Method and system for producing a presentation message for a mobile device |
US9357075B1 (en) | 2008-06-05 | 2016-05-31 | Avaya Inc. | Conference call quality via a connection-testing phase |
US8938672B2 (en) | 2008-11-04 | 2015-01-20 | International Business Machines Corporation | Amending the display property of grid elements |
US8145561B1 (en) | 2009-01-05 | 2012-03-27 | Sprint Communications Company L.P. | Phone usage pattern as credit card fraud detection trigger |
JP4978629B2 (en) | 2009-01-19 | 2012-07-18 | コニカミノルタビジネステクノロジーズ株式会社 | Item setting device, control method thereof, and control program |
JP5018794B2 (en) | 2009-01-20 | 2012-09-05 | コニカミノルタビジネステクノロジーズ株式会社 | PRINT JOB OUTPUT DEVICE, ITS CONTROL METHOD, AND CONTROL PROGRAM |
JP4760921B2 (en) | 2009-01-28 | 2011-08-31 | コニカミノルタビジネステクノロジーズ株式会社 | Item setting device, control method thereof, and control program |
US8949582B2 (en) | 2009-04-27 | 2015-02-03 | Lsi Corporation | Changing a flow identifier of a packet in a multi-thread, multi-flow network processor |
US8448074B2 (en) | 2009-05-01 | 2013-05-21 | Qualcomm Incorporated | Method and apparatus for providing portioned web pages in a graphical user interface |
US9858925B2 (en) | 2009-06-05 | 2018-01-02 | Apple Inc. | Using context information to facilitate processing of commands in a virtual assistant |
JP5299125B2 (en) | 2009-06-30 | 2013-09-25 | 富士ゼロックス株式会社 | Document processing apparatus and program |
JP5340088B2 (en) | 2009-09-07 | 2013-11-13 | キヤノン株式会社 | Information processing method and apparatus |
JP5032543B2 (en) | 2009-09-16 | 2012-09-26 | 株式会社東芝 | Scheduling apparatus, method and program |
US8402379B2 (en) | 2009-09-30 | 2013-03-19 | SAP Portals Israel Limited | Dynamic content layout for a user interface display |
US9124642B2 (en) | 2009-10-16 | 2015-09-01 | Qualcomm Incorporated | Adaptively streaming multimedia |
JP5186047B2 (en) | 2009-11-30 | 2013-04-17 | 楽天株式会社 | Object display device, object display method, object display control program, and computer-readable recording medium recording the program |
US10276170B2 (en) | 2010-01-18 | 2019-04-30 | Apple Inc. | Intelligent automated assistant |
US8793598B2 (en) | 2010-04-14 | 2014-07-29 | Microsoft Corporation | Cross-browser web dialog platform |
BR112012033098A2 (en) | 2010-06-29 | 2016-11-22 | Rakuten Inc | information processing device, method and program, and recording media |
KR101731843B1 (en) | 2010-09-02 | 2017-05-02 | 삼성전자 주식회사 | Method and Apparatus for displaying items |
KR101045589B1 (en) | 2010-09-15 | 2011-07-01 | 주식회사 유비온 | Playback equipment for contents received over network and method thereof |
JP2012073863A (en) | 2010-09-29 | 2012-04-12 | Rakuten Inc | Advertisement display program, advertisement display device, advertisement display method, recording medium, and advertisement display system |
US20120158490A1 (en) | 2010-12-16 | 2012-06-21 | Yahoo! Inc. | Sponsored search auction mechanism for rich media advertising |
US20120159314A1 (en) | 2010-12-16 | 2012-06-21 | Microsoft Corporation | Adaptive content layout |
US8510237B2 (en) | 2011-03-15 | 2013-08-13 | Qualcomm Incorporated | Machine learning method to identify independent tasks for parallel layout in web browsers |
US20130007602A1 (en) | 2011-06-29 | 2013-01-03 | Apple Inc. | Fixed layout electronic publications |
US9396167B2 (en) | 2011-07-21 | 2016-07-19 | Flipboard, Inc. | Template-based page layout for hosted social magazines |
US8872855B2 (en) | 2011-07-21 | 2014-10-28 | Flipboard, Inc. | Adjusting orientation of content regions in a page layout |
US9020981B2 (en) | 2011-09-30 | 2015-04-28 | Comprehend Systems, Inc. | Systems and methods for generating schemas that represent multiple data sources |
US9760236B2 (en) | 2011-10-14 | 2017-09-12 | Georgia Tech Research Corporation | View virtualization and transformations for mobile applications |
WO2013155619A1 (en) | 2012-04-20 | 2013-10-24 | Sam Pasupalak | Conversational agent |
WO2013162582A1 (en) | 2012-04-26 | 2013-10-31 | Empire Technology Development Llc | Multimedia application rental and billing |
US9323443B2 (en) | 2012-05-02 | 2016-04-26 | International Business Machines Corporation | Drilling of displayed content in a touch screen device |
US20130305145A1 (en) | 2012-05-09 | 2013-11-14 | Ni Group Limited | A Method of Publishing Digital Content |
US20130305144A1 (en) | 2012-05-09 | 2013-11-14 | Ni Group Limited | Method of Publishing Digital Content |
US9280610B2 (en) | 2012-05-14 | 2016-03-08 | Apple Inc. | Crowd sourcing information to fulfill user requests |
US20140019462A1 (en) | 2012-07-15 | 2014-01-16 | Microsoft Corporation | Contextual query adjustments using natural action input |
US20140033228A1 (en) | 2012-07-25 | 2014-01-30 | Google Inc. | Configuring content display dimensions |
EP2898460A1 (en) | 2012-09-20 | 2015-07-29 | Google, Inc. | Determining a configuration of a content item display environment |
US20140108941A1 (en) | 2012-10-17 | 2014-04-17 | Christopher Stephen Joel | Method and Apparatus for Automatically Optimizing the Loading of Images in a Cloud-Based Proxy Service |
US9164966B1 (en) | 2012-10-24 | 2015-10-20 | Google Inc. | Determining sizes of content items |
US20140180796A1 (en) | 2012-12-21 | 2014-06-26 | Sándor Sás | Selecting and serving content items of different content item types for a content item slot |
KR20140089876A (en) | 2013-01-07 | 2014-07-16 | 삼성전자주식회사 | interactive interface apparatus and method for comtrolling the server |
US20140258849A1 (en) | 2013-03-06 | 2014-09-11 | Google Inc. | Automatic Alignment of a Multi-Dimensional Layout |
US11233841B2 (en) | 2013-03-15 | 2022-01-25 | Yottaa, Inc. | Systems and methods for configuration-based optimization by an intermediary |
EP2814244A1 (en) | 2013-06-11 | 2014-12-17 | Alcatel Lucent | A method and a system for improving communication quality of a video conference |
US9483444B2 (en) | 2013-07-09 | 2016-11-01 | Flipboard, Inc. | Dynamic layout engine for a digital magazine |
US20150088970A1 (en) | 2013-09-20 | 2015-03-26 | Yottaa Inc. | Systems and methods for managing loading priority or sequencing of fragments of a web object |
US10614153B2 (en) | 2013-09-30 | 2020-04-07 | Google Llc | Resource size-based content item selection |
US10431209B2 (en) | 2016-12-30 | 2019-10-01 | Google Llc | Feedback controller for data transmissions |
US9703757B2 (en) | 2013-09-30 | 2017-07-11 | Google Inc. | Automatically determining a size for a content item for a web page |
WO2015062627A1 (en) | 2013-10-29 | 2015-05-07 | Telefonaktiebolaget L M Ericsson (Publ) | Control of a chain of services |
US10726831B2 (en) | 2014-05-20 | 2020-07-28 | Amazon Technologies, Inc. | Context interpretation in natural language processing using previous dialog acts |
US9350770B2 (en) | 2014-05-30 | 2016-05-24 | Apple Inc. | Redundant transmission channels for real-time applications on mobile devices |
US9330433B2 (en) | 2014-06-30 | 2016-05-03 | Intel Corporation | Data distribution fabric in scalable GPUs |
US10235996B2 (en) | 2014-10-01 | 2019-03-19 | XBrain, Inc. | Voice and connection platform |
US9959129B2 (en) | 2015-01-09 | 2018-05-01 | Microsoft Technology Licensing, Llc | Headless task completion within digital personal assistants |
US20160274864A1 (en) | 2015-03-20 | 2016-09-22 | Google Inc. | Systems and methods for enabling user voice interaction with a host computing device |
US20160358367A1 (en) | 2015-06-07 | 2016-12-08 | Apple Inc. | Animation based on Content Presentation Structures |
US10331312B2 (en) | 2015-09-08 | 2019-06-25 | Apple Inc. | Intelligent automated assistant in a media environment |
US20170092278A1 (en) | 2015-09-30 | 2017-03-30 | Apple Inc. | Speaker recognition |
US9928840B2 (en) | 2015-10-16 | 2018-03-27 | Google Llc | Hotword recognition |
US9747926B2 (en) | 2015-10-16 | 2017-08-29 | Google Inc. | Hotword recognition |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
CN105654950B (en) | 2016-01-28 | 2019-07-16 | 百度在线网络技术（北京）有限公司 | Adaptive voice feedback method and device |
US11477139B2 (en) | 2016-02-25 | 2022-10-18 | Meta Platforms, Inc. | Techniques for messaging bot rich communication |
US9864732B2 (en) | 2016-05-02 | 2018-01-09 | Google Inc. | User interfaces that facilitate management of formatting of digital content |
CN106033476B (en) | 2016-05-19 | 2019-07-23 | 西安交通大学 | A kind of increment type figure calculation method under distributed computation mode in cloud computing environment |
US10192552B2 (en) | 2016-06-10 | 2019-01-29 | Apple Inc. | Digital assistant providing whispered speech |
US20180012595A1 (en) | 2016-07-07 | 2018-01-11 | Intelligently Interactive, Inc. | Simple affirmative response operating system |
US20180191798A1 (en) | 2016-12-30 | 2018-07-05 | Google Inc. | Methods and systems for server-side rendering of native content for presentation |
-
2017
- 2017-05-09 US US15/590,861 patent/US10956485B2/en active Active
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090327032A1 (en) * | 2008-06-26 | 2009-12-31 | Microsoft Corporation | Quality based pricing and ranking for online ads |
US20100082780A1 (en) * | 2008-10-01 | 2010-04-01 | Matt Muilenburg | Systems and methods for configuring a website having a plurality of operational modes |
US9542956B1 (en) * | 2012-01-09 | 2017-01-10 | Interactive Voice, Inc. | Systems and methods for responding to human spoken audio |
US20160092699A1 (en) * | 2014-09-26 | 2016-03-31 | Microsoft Corporation | Privacy-preserving cookies for personalization without user tracking |
US20170169817A1 (en) * | 2015-12-09 | 2017-06-15 | Lenovo (Singapore) Pte. Ltd. | Extending the period of voice recognition |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10482140B2 (en) * | 2015-01-08 | 2019-11-19 | Naver Corporation | Method and system for providing retargeting search service |
US20190205901A1 (en) * | 2017-12-29 | 2019-07-04 | Facebook, Inc. | Dynamic creation of content items for distribution in an online system by combining content components |
WO2020051357A1 (en) * | 2018-09-06 | 2020-03-12 | Amazon Technologies, Inc. | Communicating context to a device using an imperceptible audio identifier |
US10971144B2 (en) * | 2018-09-06 | 2021-04-06 | Amazon Technologies, Inc. | Communicating context to a device using an imperceptible audio identifier |
CN111290755A (en) * | 2020-02-04 | 2020-06-16 | 北京字节跳动网络技术有限公司 | Method and device for presenting data, electronic equipment and storage medium |
Also Published As
Publication number | Publication date |
---|---|
US10956485B2 (en) | 2021-03-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11625402B2 (en) | Data structure pooling of voice activated data packets | |
US11218434B2 (en) | Audio data packet status determination | |
US10893088B2 (en) | Sequence dependent data message consolidation in a voice activated computer network environment | |
US11503355B2 (en) | Event-based content distribution | |
US10013978B1 (en) | Sequence dependent operation processing of packet based data message transmissions | |
US10795959B2 (en) | Conversion latency reduction in online chat-based communication infrastructure | |
US10614801B2 (en) | Protocol based computer network exposure interval content item transmission | |
US10956485B2 (en) | Retargeting in a search environment | |
US10776830B2 (en) | Methods and systems for identifying new computers and providing matching services | |
JP6271726B2 (en) | Deciding whether to send callouts to bidders in online content auctions | |
US20190104199A1 (en) | Cross device bandwidth utilization control | |
CN107005616A (en) | For providing the system and method for calling context to content provider | |
US10957002B2 (en) | Sequence dependent or location based operation processing of protocol based data message transmissions | |
US20180357678A1 (en) | Offline conversion tracking | |
US20190318394A1 (en) | Third party customized content based on first party identifer | |
US9830353B1 (en) | Determining match type for query tokens | |
US10497031B1 (en) | Conditional bids in an auction | |
US8719259B1 (en) | Providing content based on geographic area |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LEE, WEI-HSIN;SCHONBERG, JACOB D.;SO, CHIU WAH KELVIN;AND OTHERS;SIGNING DATES FROM 20170601 TO 20170809;REEL/FRAME:043262/0374 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: PETITION RELATED TO MAINTENANCE FEES GRANTED (ORIGINAL EVENT CODE: PTGR); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP., ISSUE FEE NOT PAID |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
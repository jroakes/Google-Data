US11347801B2 - Multi-modal interaction between users, automated assistants, and other computing services - Google Patents
Multi-modal interaction between users, automated assistants, and other computing services Download PDFInfo
- Publication number
- US11347801B2 US11347801B2 US16/240,609 US201916240609A US11347801B2 US 11347801 B2 US11347801 B2 US 11347801B2 US 201916240609 A US201916240609 A US 201916240609A US 11347801 B2 US11347801 B2 US 11347801B2
- Authority
- US
- United States
- Prior art keywords
- dialog state
- automated assistant
- digital component
- visual
- verbal
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90332—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/0485—Scrolling or panning
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L13/00—Speech synthesis; Text to speech systems
- G10L13/02—Methods for producing synthetic speech; Speech synthesisers
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
Definitions
- Computing devices may have access to one or more types of input and output interfaces.
- the computing device can receive or transmit data to one or more types of devices via a network.
- it can be challenging to efficiently present data via the computing device.
- assistant devices As automated assistants become more ubiquitous, computing devices specifically designed to facilitate interaction with automated assistants—referred to herein as “assistant devices”—are becoming more commonplace. Many assistant devices enable users to engage in touch-free interaction with automated assistants. For example, assistant devices often include microphones that allow users to provide vocal utterances as input. Additionally, more and more assistant devices now include display capabilities.
- the provision of a mechanism for enabling users to interact with third party services using a combination of both verbal and non-verbal inputs may facilitate access to the third party services by both able-bodied users and users with a wide range of disabilities (and may reduce the need for specially-adapted versions of the service). This is not least because the mechanism may enable users to interact with the third party service in the manner which is most appropriate for them.
- an automated assistant may include a client portion and a server portion.
- the client portion of the automated assistant may operate on a client device (e.g., a smart phone, smart watch, assistant device, etc.) as an “assistant app.”
- the server portion of the automated assistant may operate on one or more servers that are sometimes referred to herein as a “cloud” computing system or “the cloud.”
- the client device may include a display that is used, e.g., by the client portion of the automated assistant, to render a graphical user interface (“GUI”).
- GUI graphical user interface
- the GUI may take the form of an embedded web browser that renders graphics based on underlying markup language (e.g., HTML, XML) provided by a third party computing service. The provision of a GUI may enable the user to interact with the third party computing service in a more efficient manner than may be possible through audio interaction alone.
- the third party computing service may engage with a user in accordance with a verbal dialog state machine and/or a visual dialog state machine.
- the verbal dialog state machine may govern a verbal dialog between the user and the computing service in which the user provides typed and/or vocal free form natural language input.
- the visual dialog state machine may govern what is rendered on the GUI as part of the immersive experience.
- one or more verbal dialog states of the verbal dialog state machine may be linked to one or more visual dialog states of the visual dialog state machine, such that a particular GUI is rendered when the verbal dialog reaches a particular state, and/or the verbal dialog automatically advances to a particular state when a user interacts with the GUI in a particular way to advance the visual dialog state machine to a particular visual dialog state.
- a user may be able to touchlessly interact with the GUI provided by the third party computing service using verbal commands or other touchless input (indicative of an intent of the user) that are funneled through the server portion of the automated assistant. For example, suppose the user engages (through the automated assistant) with a third party computing service that allows control of a smart home device. Various options relating to controlling/configuring the smart home device may be presented on the GUI, e.g., within multiple tiles of the GUI.
- the user In addition to being able to select one of the tiles (e.g., using a mouse or touchscreen), the user also can select one of the tiles by issuing a verbal command, such as “Let's configure my device” or “I need help.” This may trigger a touchless interaction with the GUI that progresses to an interface module which allows the user to configure the device or which provides a list of selectable FAQs.
- a verbal command such as “Let's configure my device” or “I need help.” This may trigger a touchless interaction with the GUI that progresses to an interface module which allows the user to configure the device or which provides a list of selectable FAQs.
- a user may scroll through a document rendered as part of the GUI by issuing a verbal command, such as “scroll down one screen” or “move to the next paragraph.”
- a verbal command such as “scroll down one screen” or “move to the next paragraph.”
- all data and commands from the third party computing service to the client device may be channeled via the server portion of the automated assistant. This may serve to increase the security of the client device since the server portion of the automated assistant may prevent nefarious messages and the like, which originate from or are received via the third party computing services, from reaching the client device.
- a user may interact with the GUI provided by the third party computing service in order to advance through both the visual dialog state machine and the verbal dialog state machine.
- a user may operate the GUI to zoom in on a particular object, and then provide a verbal query such as “What's this?”
- the user By focusing the GUI in on the particular object, the user also advances the verbal state machine to a state in which the particular object is in focus. Consequently, the term “this” in the query “What's this?” may be resolved to the particular object.
- a GUI rendered at the client computing device may correspond to a particular state of the third party computing service's visual dialog state machine, and may include the multiple-choice question and the answer choices.
- verbal natural language output may be provided in accordance with the third party computing service's verbal dialog state machine.
- the verbal natural language output may, for instance, read aloud the multiple-choice question (and in some cases, go through the answer choices as well).
- the user may advance both the visual and verbal dialog state machines to different respective states (e.g., to the next question) by either selecting one of the answer choices on the screen, or by providing a vocal utterance that indicates a particular answer choice.
- interpreting and/or performing intent matching based on free form input ties up considerable computing resources.
- these resources may be conserved, both from not having to perform the interpretation/intent matching and by enabling efficient traversal of dialog state machines associated with third party computing services.
- Such wastage or otherwise inefficient or unnecessary use of power and computing resources may occur at the client computing device itself and/or at a remote computing apparatus, such as one or more network servers operating the server portions of automated assistants.
- unnecessary communication with a remote computing apparatus causes unwanted load on the communication network.
- third party developers are able to provide visual content to accompany their computing services in a uniform manner. This may enable the computing services and the visual content to be provided across a wide range of the client devices, without requiring the mechanism/process to be specifically configured for the particular client device.
- a system in some implementations, includes at least one client computing device.
- the client computing device has a display and implements a client portion of an automated assistant.
- the system further includes one or more server computing devices that implement a server portion of the automated assistant.
- a user interacts with the client portion to participate in a human-to-computer dialog session between the user, the automated assistant, and a third party computing service.
- the third party computing service engages with the user in accordance with a verbal dialog state machine and a visual dialog state machine.
- the client portion of the automated assistant is configured to receive, from the third party computing service by way of the server portion of the automated assistant, data indicative of a first visual dialog state of the visual dialog state machine.
- the client portion of the automated assistant is further configured to render, on the display based on the first visual dialog state, a graphical user interface associated with the human-to-computer dialog session.
- the graphical user interface includes at least one graphical element that is operable to cause the verbal state machine to transition from a first verbal dialog state corresponding to the first visual dialog state to a second verbal dialog state.
- the client portion of the automated assistant is further configured to detect operation of the at least one graphical element by the user.
- the client portion of the automated assistant is further configured to provide, to the server portion of the automated assistant, data indicative of operation of the at least one graphical element.
- the server portion of the automated assistant is configured to provide the data indicative of operation of the at least one graphical element to the third party computing service.
- the data indicative of operation of the at least one graphical element causes the third party computing service to transition from the first verbal dialog state to the second verbal dialog state.
- the server portion of the automated assistant may be further configured to receive, from the third party computing service, data indicative of the second verbal dialog state, and provide, to the client portion of the automated assistant, the data indicative of the second verbal dialog state.
- the data indicative of the second verbal dialog state may include text or audio data.
- the client device may be further configured to, in response to receiving the data indicative of the second verbal dialog state, convert the text to speech and audibly render the speech, or audibly render the audio data.
- provision of the data indicative of operation of the at least one graphical element from the server portion of the automated assistant to the third party computing service may cause the third party computing service to transition from the first visual dialog state to a second visual dialog state.
- the second visual dialog state may correspond to the second verbal dialog state.
- the client portion of the automated assistant may be further configured to receive, from the third party computing service by way of the server portion of the automated assistant, data indicative of the second visual dialog state, and render, on the display based on the second visual dialog state, an updated graphical user interface associated with the human-to-computer dialog session.
- the data indicative of the second visual dialog state may cause the client device to automatically perform a touchless interaction to render the updated graphical user interface.
- the touchless interaction may include one or multiple of: operation of a selectable element of the graphical user interface, scrolling to a particular position of a document rendered in the graphical user interface, and zooming in on a portion of the graphical user interface.
- the client portion of the automated assistant may be further configured to receive, from the user at one or more input components of the client computing device, vocal free form input, provide, to the server portion of the automated assistant, data indicative of the vocal free form input, and receive, from the server portion of the automated assistant, data indicative of a display context.
- the server portion of the automated assistant may obtain the data indicative of the display context from the third party computing service based on providing the third party computing service with the data indicative of the vocal free form input, or with additional data that is based on the data indicative of the vocal free form input.
- the third party computing service may generate the data indicative of the display context based on the received data or additional data, and based on the transitioned to second verbal dialog state.
- the client portion of the automated assistant may be further configured to, based on the received display context, trigger a touchless interaction at the graphical user interface.
- the touchless interaction may include one or multiple of: operation of a selectable element of the graphical user interface, scrolling to a particular position of a document rendered in the graphical user interface, and zooming in on a portion of the graphical user interface.
- a system in some implementations, includes at least one client computing device and one or more server computing devices.
- the client computing device has a display and implements a client portion of an automated assistant.
- the system further includes one or more server computing devices that implement a server portion of the automated assistant.
- a user interacts with the client portion to participate in a human-to-computer dialog session between the user, the automated assistant, and a third party computing service.
- the client portion of the automated assistant is configured to render, on the display of the client computing device, a graphical user interface associated with the human-to-computer dialog session.
- the client portion of the automated assistant is further configured to receive, from the user at one or more input components of the client computing device, vocal free form input.
- the client portion of the automated assistant is further configured to provide, to the server portion of the automated assistant, data indicative of the vocal free form input.
- the client portion of the automated assistant is further configured to receive, from the server portion of the automated assistant, data indicative of a display context.
- the client portion of the automated assistant is further configured to, based on the display context, trigger a touchless interaction between the user and the graphical user interface.
- the server portion of the automated assistant is configured to determine an intent of the user based on the data indicative of the vocal free form input.
- the server portion of the automated assistant is further configured to provide data indicative of the intent to the third party computing service.
- the data indicative of the intent causes the third party computing service to resolve the intent to generate resolution information.
- the server portion of the automated assistant is further configured to receive, from the third party computing service in response to provision of the data indicative of the intent, the display context.
- the display context is maintained for the third party computing service in association with the human-to-computer dialog session and is updated based at least in part on one or both of the intent of the user and the resolution information.
- the graphical user interface may include a web browser embedded into the client portion of the automated assistant.
- the touchless interaction may include one or multiple of: operation of a selectable element of the graphical user interface, scrolling to a particular position of a document rendered in the graphical user interface, and zooming in on a portion of the graphical user interface.
- a method performed by one or more processors includes, at a client device having a display, implementing a client portion of an automated assistant.
- the method further includes, at one or more server computing devices, implementing a server portion of the automated assistant.
- a user interacts with the client portion to participate in a human-to-computer dialog session between the user, the automated assistant, and a third party computing service.
- the third party computing service engages with the user in accordance with a verbal dialog state machine and a visual dialog state machine.
- the method further includes receiving, at the client portion, from the third party computing service by way of the server portion of the automated assistant, data indicative of a first visual dialog state of the visual dialog state machine.
- the method further includes rendering, by the client portion, on the display based on the first visual dialog state, a graphical user interface associated with the human-to-computer dialog session.
- the graphical user interface includes at least one graphical element that is operable to cause the verbal state machine to transition from a first verbal dialog state corresponding to the first visual dialog state to a second verbal dialog state.
- the method further includes detecting, by the client portion, operation of the at least one graphical element by the user.
- the method further includes providing, by the client portion to the server portion of the automated assistant, data indicative of operation of the at least one graphical element.
- the method further includes providing, by the server portion, the data indicative of operation of the at least one graphical element to the third party computing service.
- the data indicative of operation of the at least one graphical element causes the third party computing service to transition from the first verbal dialog state to the second verbal dialog state
- the method may further include receiving, by the server portion, from the third party computing service, data indicative of the second verbal dialog state, and providing, by the server portion, to the client portion of the automated assistant, the data indicative of the second verbal dialog state.
- provision of the data indicative of operation of the at least one graphical element from the server portion of the automated assistant to the third party computing service may cause the third party computing service to transition from the first visual dialog state to a second visual dialog state.
- a method performed by one or more processors includes receiving, by a computing service implemented at least in part by the one or more processors, from an automated assistant, data indicative of an intent of a user of a computing device in communication with the automated assistant as part of a human-to-computer dialog session between the user and the automated assistant.
- the method further includes resolving the intent of the user to generate resolution information.
- the method further includes updating a display context maintained for the computing service in association with the human-to-computer dialog session. The updating is based at least in part on one or both of the intent and the resolution information.
- the method further includes providing data indicative of the display context to the automated assistant.
- the data indicative of the display context is provided by the automated assistant to the computing device and causes an assistant application executing on the computing device to trigger a touchless interaction between the user and a graphical user interface of the assistant application.
- the graphical user interface may include a web browser embedded in the assistant application.
- the touchless interaction may include one or multiple of: operation of a selectable element of the graphical user interface, scrolling to a particular position of a document rendered in the graphical user interface, and zooming in on a portion of the graphical user interface.
- the data indicative of the intent of the user may include speech recognition output of vocal free form input provided by the user at the computing device.
- the method may further include determining, by the computing service, the intent of the user based on the speech recognition output.
- implementations may include a non-transitory computer readable storage medium storing instructions executable by one or more processors (e.g., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s)) to perform a method such as one or more of the methods described above and/or elsewhere herein.
- processors e.g., central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s)
- CPU central processing unit
- GPU graphics processing unit
- TPU tensor processing unit
- implementations may include a system of one or more computers that include one or more processors operable to execute stored instructions to perform a method such as one or more of the methods described above and/or elsewhere herein.
- FIG. 1 is a block diagram of an example environment in which implementations disclosed herein may be implemented.
- FIG. 2 depicts an example of components that may be implemented in a client portion of an automated assistant, in accordance with various implementations.
- FIGS. 3 and 4 depict an example of how techniques described herein may be employed in one scenario.
- FIGS. 5 and 6 depict an example of how techniques described herein may be employed in another scenario.
- FIG. 7 depicts an example of how techniques described herein may be employed in yet another scenario.
- FIGS. 8 and 9 depict flowcharts illustrating example methods according to implementations disclosed herein.
- FIG. 10 illustrates an example architecture of a computing device.
- Humans may engage in human-to-computer dialogs with interactive software applications referred to herein as “automated assistants” (also referred to as “chatbots,” “interactive personal assistants,” “intelligent personal assistants,” “personal voice assistants,” “conversational agents,” etc.).
- automated assistants also referred to as “chatbots,” “interactive personal assistants,” “intelligent personal assistants,” “personal voice assistants,” “conversational agents,” etc.
- humans which when they interact with automated assistants may be referred to as “users”
- the automated assistant must first be “invoked,” e.g., using predefined oral invocation phrases.
- Computing services can interact with automated assistants. These computing services can be developed and/or provided by what will be referred to herein as “third parties” (or “third party developers”) because the entity providing a computing service may not be directly affiliated with an entity that provides the automated assistant. However, computing services are not limited to those developed by third parties, and may be implemented by the same entity that implements the automated assistant. Computing services may be configured to resolve a variety of different user intents, many of which might not be resolvable by automated assistants. Such intents may relate to, but are of course not limited to, controlling or configuring smart devices, receiving step-by-step instructions for performing tasks, and interacting with online services. Accordingly, automated assistants may interact with both users and third party computing services simultaneously, effectively acting as a mediator or intermediary between the users and the third party.
- Some third party computing services may operate in accordance with dialog state machines that effectively define a plurality of states, as well as transitions between those states, that occur based on various inputs received from the user and/or elsewhere (e.g., sensors, web services, etc.).
- dialog state machines that effectively define a plurality of states, as well as transitions between those states, that occur based on various inputs received from the user and/or elsewhere (e.g., sensors, web services, etc.).
- a dialog state machine associated with the third party computing service advances between various dialog states.
- the dialog state machine may reach a state at which the user's intent is resolved.
- the example environment includes one or more client computing devices 106 .
- Each client device 106 may execute a respective instance of an automated assistant client 108 , which may also be referred to herein as a “client portion” of an automated assistant.
- One or more cloud-based automated assistant components 119 which may also be referred to herein collectively as a “server portion” of an automated assistant, may be implemented on one or more computing systems (collectively referred to as a “cloud” computing system) that are communicatively coupled to client devices 106 via one or more local and/or wide area networks (e.g., the Internet) indicated generally at 114 .
- cloud computing system
- an instance of an automated assistant client 108 by way of its interactions with one or more cloud-based automated assistant components 119 , may form what appears to be, from the user's perspective, a logical instance of an automated assistant 120 with which the user may engage in a human-to-computer dialog.
- a logical instance of an automated assistant 120 with which the user may engage in a human-to-computer dialog.
- FIG. 1 One instance of such an automated assistant 120 is depicted in FIG. 1 in dashed line. It thus should be understood that each user that engages with an automated assistant client 108 executing on a client device 106 may, in effect, engage with his or her own logical instance of an automated assistant 120 .
- automated assistant as used herein as “serving” a particular user will refer to the combination of an automated assistant client 108 executing on a client device 106 operated by the user and one or more cloud-based automated assistant components 119 (which may be shared amongst multiple automated assistant clients 108 ). It should also be understood that in some implementations, automated assistant 120 may respond to a request from any user regardless of whether the user is actually “served” by that particular instance of automated assistant 120 .
- the one or more client devices 106 may include, for example, one or more of: a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a computing device of a vehicle of the user (e.g., an in-vehicle communications system, an in-vehicle entertainment system, an in-vehicle navigation system), a standalone interactive speaker (which in some cases may include a vision sensor), a smart appliance such as a smart television (or a standard television equipped with a networked dongle with automated assistant capabilities), and/or a wearable apparatus of the user that includes a computing device (e.g., a watch of the user having a computing device, glasses of the user having a computing device, a virtual or augmented reality computing device). Additional and/or alternative client computing devices may be provided. Some client devices 106 , such as standalone interactive speakers (or “smart speakers”), may take the form of assistant devices that are primarily designed to facilitate dialog between users and automated assistant 120 .
- client device 106 may be equipped with one or more vision sensors 107 having one or more fields of view, although this is not required.
- Vision sensor(s) 107 may take various forms, such as digital cameras, passive infrared (“PIR”) sensors, stereoscopic cameras, RGBd cameras, etc.
- the one or more vision sensors 107 may be used, e.g., by an image capture module 111 , to capture image frames (still images or video) of an environment in which client device 106 is deployed. These image frames may then be analyzed, e.g., by a visual cue module 112 1 , to detect user-provided visual cues contained in the image frames.
- These visual cues may include but are not limited to hand gestures, gazes towards particular reference points, facial expressions, predefined movements by users, etc. These detected visual cues may be used for various purposes, such as invoking automated assistant 120 and/or causing automated assistant 120 to take various actions.
- automated assistant 120 engages in human-to-computer dialog sessions with one or more users via user interface input and output devices of one or more client devices 106 .
- automated assistant 120 may engage in a human-to-computer dialog session with a user in response to user interface input provided by the user via one or more user interface input devices of one of the client devices 106 .
- the user interface input is explicitly directed to automated assistant 120 .
- a user may verbally provide (e.g., type, speak) a predetermined invocation phrase, such as “OK, Assistant,” or “Hey, Assistant,” to cause automated assistant 120 to begin actively listening or monitoring typed text.
- automated assistant 120 may be invoked based on one or more detected visual cues, alone or in combination with verbal invocation phrases.
- automated assistant 120 may engage in a human-to-computer dialog session in response to user interface input, even when that user interface input is not explicitly directed to automated assistant 120 .
- automated assistant 120 may examine the contents of user interface input and engage in a dialog session in response to certain terms being present in the user interface input and/or based on other cues.
- automated assistant 120 may utilize speech recognition to convert utterances from users into text, and respond to the text accordingly, e.g., by providing search results, general information, and/or taking one or more responsive actions (e.g., playing media, launching a game, ordering food, etc.).
- the automated assistant 120 can additionally or alternatively respond to utterances without converting the utterances into text.
- the automated assistant 120 can convert voice input into an embedding, into entity representation(s) (that indicate entity/entities present in the voice input), and/or other “non-textual” representation and operate on such non-textual representation. Accordingly, implementations described herein as operating based on text converted from voice input may additionally and/or alternatively operate on the voice input directly and/or other non-textual representations of the voice input.
- Each of client device 106 and computing device(s) operating cloud-based automated assistant components 119 may include one or more memories for storage of data and software applications, one or more processors for accessing data and executing applications, and other components that facilitate communication over a network.
- the operations performed by client device 106 and/or by automated assistant 120 may be distributed across multiple computer systems.
- Automated assistant 120 may be implemented as, for example, computer programs running on one or more computers in one or more locations that are coupled to each other through a network.
- client device 106 may operate an automated assistant client 108 , or “client portion” of automated assistant 120 .
- automated assistant client 108 may include a speech capture module 110 , the aforementioned image capture module 111 , a visual cue module 112 1 , and/or an invocation module 113 .
- one or more aspects of speech capture module 110 , image capture module 111 , visual cue module 112 1 , and/or invocation module 113 may be implemented separately from automated assistant client 108 , e.g., by one or more cloud-based automated assistant components 119 .
- FIG. 1 there is also a cloud-based visual cue module 112 2 that may detect visual cues in image data.
- speech capture module 110 may interface with hardware such as a microphone 109 or other pressure sensor to capture an audio recording of a user's utterance(s). Various types of processing may be performed on this audio recording for various purposes.
- image capture module 111 which may be implemented using any combination of hardware or software, may be configured to interface with camera 107 to capture one or more image frames (e.g., digital photographs) that correspond to a field of view of the vision sensor 107 .
- visual cue module 112 1 (and/or cloud-based visual cue module 112 2 ) may be implemented using any combination of hardware or software, and may be configured to analyze one or more image frames provided by image capture module 111 to detect one or more visual cues captured in and/or across the one or more image frames.
- Visual cue module 112 1 may employ a variety of techniques to detect visual cues.
- visual cue module 112 1 is communicatively coupled with a visual cue model database 114 (which may be integral with client device 106 and/or hosted remotely from client device 106 , e.g., in the cloud).
- Visual cue model database 114 may include, for instance, one or more artificial intelligence (or machine learning) models that are trained to generate output indicative of detected user-provided visual cues in image frames.
- Speech capture module 110 may be configured to capture a user's speech, e.g., via a microphone 109 , as mentioned previously. Additionally or alternatively, in some implementations, speech capture module 110 may be further configured to convert that captured audio to text and/or to other representations or embeddings, e.g., using speech-to-text (“STT”) processing techniques. Additionally or alternatively, in some implementations, speech capture module 110 may be configured to convert text to computer-synthesized speech, e.g., using one or more voice synthesizers.
- STT speech-to-text
- speech capture module 110 local to client device 106 may be configured to convert a finite number of different spoken phrases—particularly phrases that invoke automated assistant 120 —to text (or to other forms, such as lower dimensionality embeddings).
- Other speech input may be sent to cloud-based automated assistant components 119 , which may include a cloud-based text-to-speech (“TTS”) module 116 and/or a cloud-based STT module 117 .
- TTS text-to-speech
- invocation module 113 may be configured to determine whether to invoke automated assistant 120 , e.g., based on output provided by speech capture module 110 and/or visual cue module 112 1 (which in some implementations may be combined with image capture module 111 in a single module). For example, invocation module 113 may determine whether a user's utterance qualifies as an invocation phrase that should initiate a human-to-computer dialog session with automated assistant 120 . In some implementations, invocation module 113 may analyze data indicative of the user's utterance, such as an audio recording or a vector of features extracted from the audio recording (e.g., an embedding) in conjunction with one or more visual cues detected by visual cue module 112 1 .
- data indicative of the user's utterance such as an audio recording or a vector of features extracted from the audio recording (e.g., an embedding) in conjunction with one or more visual cues detected by visual cue module 112 1 .
- a threshold that is employed by invocation module 113 to determine whether to invoke automated assistant 120 in response to a vocal utterance may be lowered when particular visual cues are also detected. Consequently, even when a user provides a vocal utterance that is different from but somewhat phonetically similar to the proper invocation phrase, “OK assistant,” that utterance may nonetheless be accepted as a proper invocation when detected in conjunction with a visual cue (e.g., hand waving by the speaker, speaker gazes directly into vision sensor 107 , etc.).
- a visual cue e.g., hand waving by the speaker, speaker gazes directly into vision sensor 107 , etc.
- an on-device invocation model may be used by invocation module 113 to determine whether an utterance and/or visual cue(s) qualify as an invocation.
- Such an on-device invocation model may be trained to detect variations of invocation phrases/gestures.
- the on-device invocation model e.g., one or more neural networks
- the on-device invocation model may be trained using training examples that each include an audio recording (or an extracted feature vector) of an utterance from a user, as well as data indicative of one or more image frames and/or detected visual cues captured contemporaneously with the utterance.
- Cloud-based TTS module 116 may be configured to leverage the virtually limitless resources of the cloud to convert textual data (e.g., natural language responses formulated by automated assistant 120 ) into computer-generated speech output.
- TTS module 116 may provide the computer-generated speech output to client device 106 to be output directly, e.g., using one or more speakers.
- textual data e.g., natural language responses
- speech capture module 110 may then convert the textual data into computer-generated speech that is output locally.
- Cloud-based STT module 117 may be configured to leverage the virtually limitless resources of the cloud to convert audio data captured by speech capture module 110 into text, which may then be provided to natural language understanding module 135 .
- cloud-based STT module 117 may convert an audio recording of speech to one or more phonemes, and then convert the one or more phonemes to text.
- STT module 117 may employ a state decoding graph.
- STT module 117 may generate a plurality of candidate textual interpretations of the user's utterance.
- STT module 117 may weight or bias particular candidate textual interpretations higher than others depending on whether there are contemporaneously detected visual cues.
- one or more detected visual cues may be used to “break the tie.”
- Automated assistant 120 may include intent matcher 135 , the aforementioned TTS module 116 , the aforementioned STT module 117 , and other components that are described in more detail below.
- one or more of the modules and/or modules of automated assistant 120 may be omitted, combined, and/or implemented in a component that is separate from automated assistant 120 .
- one or more of the components of automated assistant 120 such as natural language processor 122 , TTS module 116 , STT module 117 , etc., may be implemented at least on part on client devices 106 (e.g., to the exclusion of the cloud).
- automated assistant 120 generates responsive content in response to various inputs generated by a user of one of the client devices 106 during a human-to-computer dialog session with automated assistant 120 .
- Automated assistant 120 may provide the responsive content (e.g., over one or more networks when separate from a client device of a user) for presentation to the user as part of the dialog session.
- automated assistant 120 may generate responsive content in response to free-form natural language input provided via client device 106 .
- free-form input is input that is formulated by a user and that is not constrained to a group of options presented for selection by the user.
- a “dialog session” may include a logically-self-contained exchange of one or more messages between a user and automated assistant 120 (and in some cases, other human participants).
- Automated assistant 120 may differentiate between multiple dialog sessions with a user based on various signals, such as passage of time between sessions, change of user context (e.g., location, before/during/after a scheduled meeting, etc.) between sessions, detection of one or more intervening interactions between the user and a client device other than dialog between the user and the automated assistant (e.g., the user switches applications for a while, the user walks away from then later returns to a standalone voice-activated product), locking/sleeping of the client device between sessions, change of client devices used to interface with one or more instances of automated assistant 120 , and so forth.
- An intent matcher 135 may be configured to determine a user's intent based on input(s) (e.g., vocal utterances, visual cues, etc.) provided by the user and/or based on other signals, such as sensor signals, online signals (e.g., data obtained from web services), and so forth.
- intent matcher 135 may include a natural language processor 122 and the aforementioned cloud-based visual cue module 112 2 .
- cloud-based visual cue module 112 2 may operate similarly to visual cue module 112 1 except that cloud-based visual cue module 112 2 may have more resources at its disposal.
- cloud-based visual cue module 112 2 may detect visual cues that may be used by intent matcher 135 , alone or in combination with other signals, to determine a user's intent.
- Natural language processor 112 may be configured to process natural language input generated by user(s) via client device 106 and may generate annotated output (e.g., in textual form) for use by one or more other components of automated assistant 120 .
- the natural language processor 122 may process natural language free-form input that is generated by a user via one or more user interface input devices of client device 106 .
- the generated annotated output includes one or more annotations of the natural language input and one or more (e.g., all) of the terms of the natural language input.
- the natural language processor 122 is configured to identify and annotate various types of grammatical information in natural language input.
- the natural language processor 122 may include a morphological module that may separate individual words into morphemes and/or annotate the morphemes, e.g., with their classes.
- Natural language processor 122 may also include a part of speech tagger configured to annotate terms with their grammatical roles.
- the part of speech tagger may tag each term with its part of speech such as “noun,” “verb,” “adjective,” “pronoun,” etc.
- the natural language processor 122 may additionally and/or alternatively include a dependency parser (not depicted) configured to determine syntactic relationships between terms in natural language input.
- the dependency parser may determine which terms modify other terms, subjects and verbs of sentences, and so forth (e.g., a parse tree)—and may make annotations of such dependencies.
- the natural language processor 122 may additionally and/or alternatively include an entity tagger (not depicted) configured to annotate entity references in one or more segments such as references to people (including, for instance, literary characters, celebrities, public figures, etc.), organizations, locations (real and imaginary), and so forth.
- entity tagger (not depicted) configured to annotate entity references in one or more segments such as references to people (including, for instance, literary characters, celebrities, public figures, etc.), organizations, locations (real and imaginary), and so forth.
- data about entities may be stored in one or more databases, such as in a knowledge graph (not depicted).
- the knowledge graph may include nodes that represent known entities (and in some cases, entity attributes), as well as edges that connect the nodes and represent relationships between the entities.
- a “banana” node may be connected (e.g., as a child) to a “fruit” node,” which in turn may be connected (e.g., as a child) to “produce” and/or “food” nodes.
- a restaurant called “Hypothetical Café” may be represented by a node that also includes attributes such as its address, type of food served, hours, contact information, etc.
- the “Hypothetical Café” node may in some implementations be connected by an edge (e.g., representing a child-to-parent relationship) to one or more other nodes, such as a “restaurant” node, a “business” node, a node representing a city and/or state in which the restaurant is located, and so forth.
- edge e.g., representing a child-to-parent relationship
- other nodes such as a “restaurant” node, a “business” node, a node representing a city and/or state in which the restaurant is located, and so forth.
- the entity tagger of the natural language processor 122 may annotate references to an entity at a high level of granularity (e.g., to enable identification of all references to an entity class such as people) and/or a lower level of granularity (e.g., to enable identification of all references to a particular entity such as a particular person).
- the entity tagger may rely on content of the natural language input to resolve a particular entity and/or may optionally communicate with a knowledge graph or other entity database to resolve a particular entity.
- the natural language processor 122 may additionally and/or alternatively include a coreference resolver (not depicted) configured to group, or “cluster,” references to the same entity based on one or more contextual cues.
- the coreference resolver may be utilized to resolve the term “there” to “Hypothetical Café” in the natural language input “I liked Hypothetical Café last time we ate there.”
- one or more components of the natural language processor 122 may rely on annotations from one or more other components of the natural language processor 122 .
- the named entity tagger may rely on annotations from the coreference resolver and/or dependency parser in annotating all mentions to a particular entity.
- the coreference resolver may rely on annotations from the dependency parser in clustering references to the same entity.
- one or more components of the natural language processor 122 may use related prior input and/or other related data outside of the particular natural language input to determine one or more annotations.
- Intent matcher 135 may use various techniques to determine an intent of the user, e.g., based on output from natural language processor 122 (which may include annotations and terms of the natural language input) and/or based on output from visual cue module (e.g., 112 1 and/or 112 2 ).
- intent matcher 135 may have access to one or more databases (not depicted) that include, for instance, a plurality of mappings between grammars, visual cues, and responsive actions (or more generally, intents). In many cases, these grammars may be selected and/or learned over time, and may represent the most common intents of users.
- one grammar “play ⁇ artist>”, may be mapped to an intent that invokes a responsive action that causes music by the ⁇ artist> to be played on the client device 106 operated by the user.
- Another grammar [weather
- intent matcher 135 may employ one or more trained machine learning models, alone or in combination with one or more grammars and/or visual cues. These trained machine learning models may also be stored in one or more databases and may be trained to identify intents, e.g., by embedding data indicative of a user's utterance and/or any detected user-provided visual cues into a reduced dimensionality space, and then determining which other embeddings (and therefore, intents) are most proximate, e.g., using techniques such as Euclidean distance, cosine similarity, etc.
- some grammars have slots (e.g., ⁇ artist>) that can be filled with slot values (or “parameters”). Slot values may be determined in various ways. Often users will provide the slot values proactively. For example, for a grammar “Order me a ⁇ topping> pizza,” a user may likely speak the phrase “order me a sausage pizza,” in which case the slot ⁇ topping> is filled automatically. Additionally or alternatively, if a user invokes a grammar that includes slots to be filled with slot values, without the user proactively providing the slot values, automated assistant 120 may solicit those slot values from the user (e.g., “what type of crust do you want on your pizza?”).
- slots may be filled with slot values based on visual cues detected by visual cue modules 112 1-2 . For example, a user could utter something like “Order me this many cat bowls” while holding up three fingers to visual sensor 107 of client device 106 . Or, a user could utter something like “Find me more movies like this” while holding of a DVD case for a particular movie.
- automated assistant 120 may serve as an intermediary between users and one or more third party computing services 140 (or “third party agents”, or “agents”). These third party computing services 140 may be independent software processes that receive input and provide responsive output. Some third party computing services may take the form of third party applications that may or may not operate on computing systems that are separate from those that operate, for instance, cloud-based automated assistant components 119 .
- One kind of user intent that may be identified by intent matcher 135 is to engage a third party computing service 140 .
- automated assistant 120 may provide access to an application programming interface (“API”) to a service for controlling a smart device.
- API application programming interface
- a user may invoke automated assistant 120 and provide a command such as “I'd like to turn the heating on.”
- Intent matcher 135 may map this command to a grammar that triggers automated assistant 120 to engage with the third party service, thereby to cause the user's heating to be switched on.
- the third party service may provide automated assistant 120 with a minimum list of slots that need to be filled in order to fulfill (or “resolve”) a command to turn the heating on.
- the slots may include the temperature to which the heating is to be set, and a duration for which the heating is to be on.
- Automated assistant 120 may generate and provide to the user (via client device 106 ) natural language output that solicits parameters for the slots.
- Fulfillment module 124 may be configured to receive the predicted/estimated intent that is output by intent matcher 135 , as well as an associated slot values (whether provided by the user proactively or solicited from the user) and fulfill (or “resolve”) the intent.
- fulfillment (or “resolution”) of the user's intent may cause various fulfillment information (also referred to as “responsive” information or “resolution information”) to be generated/obtained, e.g., by fulfillment module 124 .
- the fulfillment information may in some implementations be provided to a natural language generator (“NLG” in some FIG. 126 , which may generate natural language output based on the fulfillment information.
- NVG natural language generator
- Fulfillment (or “resolution”) information may take various forms because an intent can be fulfilled (or “resolved”) in a variety of ways.
- a user requests pure information, such as “Where were the outdoor shots of ‘The Shining’ filmed?”
- the intent of the user may be determined, e.g., by intent matcher 135 , as being a search query.
- the intent and content of the search query may be provided to fulfillment module 124 , which as depicted in FIG. 1 may be in communication with one or more search modules 150 configured to search corpuses of documents and/or other data sources (e.g., knowledge graphs, etc.) for responsive information.
- Fulfillment module 124 may provide data indicative of the search query (e.g., the text of the query, a reduced dimensionality embedding, etc.) to search module 150 .
- Search module 150 may provide responsive information, such as GPS coordinates, or other more explicit information, such as “Timberline Lodge, Mt. Hood, Oreg.” This responsive information may form part of the fulfillment information generated by fulfillment module 124 .
- fulfillment module 124 may be configured to receive, e.g., from natural language understanding module 135 , a user's intent and any slot values provided by the user or determined using other means (e.g., GPS coordinates of the user, user preferences, etc.) and trigger a responsive action. Responsive actions may include, for instance, ordering a good/service, starting a timer, setting a reminder, initiating a phone call, playing media, sending a message, etc. In some such implementations, fulfillment information may include slot values associated with the fulfillment, confirmation responses (which may be selected from predetermined responses in some cases), etc.
- Natural language generator 126 may be configured to generate and/or select natural language output (e.g., words/phrases that are designed to mimic human speech) based on data obtained from various sources.
- natural language generator 126 may be configured to receive, as input, fulfillment information associated with fulfillment of an intent, and to generate natural language output based on the fulfillment information. Additionally or alternatively, natural language generator 126 may receive information from other sources, such as third party applications (e.g., required slots), which it may use to compose natural language output for the user.
- third party applications e.g., required slots
- the digital component selector 160 can be a part of the cloud-based automated assistant component 119 or separate from the cloud-based automated assistant component 119 .
- the digital component selector 160 can interact, interface or otherwise communicate with the cloud-based automated assistant component 119 .
- the digital component selector 160 can interact, interface or otherwise communicate with the fulfillment module 124 .
- the digital component selector 160 can receive a content request or an indication thereof for the selection of a digital component based on the request.
- the digital component selector 160 can create a content request or generate a content request.
- the digital component selector 160 can execute a real-time digital component selection process to select the digital component.
- the digital component selector 160 can execute the real-time digital component selection process responsive to the content request.
- the digital component selector 160 can execute the real-time digital component selection process without a content request, such as based on a time interval, trigger, or other condition.
- the digital component selector 160 can select addition or supplemental digital components based on the input request.
- the real-time digital component selection process can refer to, or include, selecting digital component objects (which may include sponsored digital component objects) provided by third party content providers 162 .
- the real-time content selection process can include a service in which digital components provided by multiple content providers are parsed, processed, weighted, or matched based on request identified in the input audio signal in order to select one or more digital components to provide to the client device 106 .
- the digital component selector 160 can perform the content selection process in real-time. For example, in response to a request a plurality of content provider devices can provide a digital component with associated bid to the digital component selector 160 . Based on a ranking of the bids from each of the content provider devices, the digital component selector 160 can select one of the provided digital components.
- Performing the content selection process in real-time can refer to performing the content selection process responsive to the request or determination to perform the content selection process.
- the request can be received via the client device 106 , or the request can be generated by the digital component selector 160 , or triggered by one or more of the automated assistant components 119 .
- the real-time content selection process can be performed (e.g., initiated or completed) within a time interval of receiving the request (e.g., 5 seconds, 10 seconds, 20 seconds, 30 seconds, 1 minute, 2 minutes, 3 minutes, 5 minutes, 10 minutes, or 20 minutes).
- the real-time content selection process can be performed during a communication session with the client device 106 , or within a time interval after the communication session is terminated.
- the digital component selector 160 can be designed, constructed, configured or operational to select digital component objects based on the content request in the input audio signal.
- the digital component selector 160 can identify, analyze, or recognize voice, audio, terms, characters, text, symbols, or images of the candidate digital components using an image processing technique, character recognition technique, natural language processing technique, or database lookup.
- the candidate digital components can include metadata indicative of the subject matter of the candidate digital components, in which case digital component selector 160 can process the metadata to determine whether the subject matter of the candidate digital component corresponds to the content request.
- the digital component selector 160 can select a digital component object from a database associated with the digital component provider 162 and provide the digital component for presentation via the client device 106 .
- the digital component object can be provided by a digital component provider 162 .
- the digital component selector 160 can select multiple digital components.
- the multiple digital components can be provided by different digital component providers 162 .
- a first digital component provider 162 can provide a primary digital component responsive to the request and a second digital component provider 162 can provide a supplemental digital component that is associated with or relates to the primary digital component.
- the client device 106 e.g., which can be referred to as a client computing device or a user thereof can interact with the digital component object.
- the client device 106 can receive an audio, touch, or other input response to the digital component.
- the client device 106 can receive an indication to select a hyperlink or other button associated with the digital component object that causes or allows the client device 106 to identify digital component provider 162 , request a service from the digital component provider 162 , instruct the digital component provider 162 to perform a service, transmit information to the digital component provider 162 , or otherwise identify a good or service associated with digital component provider 162 .
- the digital component selector 160 can select a digital component that includes text, strings, or characters that can be processed by a text to speech system or presentable via a display.
- the digital component selector 160 can select a digital component that is in a parameterized format configured for a parametrically driven text to speech technique.
- the digital component selector 160 can select a digital component that is in a format configured for display via client device 106 .
- the digital component selector 160 can select a digital component that can be re-formatted to match a native output format of the client device 106 or application to which the digital component is transmitted.
- the digital component selector 160 can provide the selected digital component to the client device 106 or automated assistant client 108 or application executing on the client device 106 for presentation by the client device 106 .
- the system 100 can include one or more digital component providers 162 .
- the digital component providers 162 can provide audio, visual, or multimedia based digital components (which can also be referred to as content, images, or supplemental content) for presentation by the client device 106 as an audio and visual based output digital components.
- the digital component can be or include other digital components.
- the digital component can be or include a digital object.
- the digital component can be configured for a parametrically driven text to speech technique.
- the digital component can be configured for text-to-speech (TTS) implementations that convert normal language text into speech.
- TTS text-to-speech
- the digital component can include an image that is displayed to the user and, via TTS, text related to the displayed image is presented to the user.
- the digital component can be input to an application programming interface that utilizes a speech-synthesis capability to synthesize text into natural-sounding speech in a variety of languages, accents, and voices.
- the digital component can be coded as plain text or a speech synthesis markup language (SSML).
- SSML can include parameters that can be set to control aspects of speech, such as pronunciation, volume, pitch, or rate that can form an acoustic fingerprint or native voice.
- the digital component provider 162 can provide selection criteria for the digital component, such as a value, keyword, concept, or other metadata or information to facilitate a content selection process.
- the digital component provider 162 can provide video based digital components (or other digital components) to the digital component selector 160 where they can be stored in a data repository.
- the digital component selector 160 can select the digital components from the data repository and provide the selected digital components to the client device 106 .
- the digital component provider 162 can provide the digital component to the digital component selector 160 for storage in the data repository in a content data structure.
- the digital component selector 160 can retrieve the digital component responsive to a request for content from the client device 106 or otherwise determining to provide the digital component.
- the digital component provider 162 can establish a digital component campaign (or electronic content campaign).
- a digital component campaign can refer to one or more content groups that correspond to a common theme.
- a content campaign can include a hierarchical data structure that includes content groups, digital component data objects (e.g., digital components or digital objects), and content selection criteria.
- digital component provider 162 can specify values for campaign level parameters of the digital component campaign.
- the campaign level parameters can include, for example, a campaign name, a preferred content network for placing digital component objects, a value of resources to be used for the digital component campaign, start and end dates for the content campaign, a duration for the digital component campaign, a schedule for digital component object placements, language, geographical locations, type of computing devices on which to provide digital component objects.
- an impression can refer to when a digital component object is fetched from its source and is countable. Due to the possibility of click fraud, robotic activity can be filtered and excluded, as an impression. Thus, an impression can refer to a measurement of responses from a Web server to a page request from a browser, which is filtered from robotic activity and error codes, and is recorded at a point as close as possible to opportunity to render the digital component object for display on the computing device 104 .
- an impression can refer to a viewable or audible impression; e.g., the digital component object or digital component is at least partially (e.g., 20%, 30%, 30%, 40%, 50%, 60%, 70%, or more) viewable on a display device of the client device 106 , or audible via a speaker of the client device 106 .
- a click or selection can refer to a user interaction with the digital component object, such as a voice response to an audible impression, a mouse-click, touch interaction, gesture, shake, audio interaction, or keyboard click.
- a conversion can refer to a user taking a desired action with respect to the digital component objection; e.g., purchasing a product or service, completing a survey, visiting a physical store corresponding to the digital component, or completing an electronic transaction.
- the digital component provider 162 can establish one or more content groups for a digital component campaign.
- a content group includes one or more digital component objects and corresponding content selection criteria, such as keywords, words, terms, phrases, geographic locations, type of computing device, time of day, interest, topic, or vertical.
- Content groups under the same content campaign can share the same campaign level parameters, but may have tailored specifications for content group level parameters, such as keywords, negative keywords (e.g., that block placement of the digital component in the presence of the negative keyword on main content), or parameters associated with the content campaign.
- the digital component provider 162 can provide values for the content group level parameters of the content group.
- the content group level parameters include, for example, a content group name or content group theme, and bids for different content placement opportunities (e.g., automatic placement or managed placement) or outcomes (e.g., clicks, impressions, or conversions).
- a content group name or content group theme can be one or more terms that the digital component provider 162 can use to capture a topic or subject matter for which digital component objects of the content group is to be selected for display.
- a food and beverage company can create a different content group for each brand of food or beverage it carries, and may further create a different content group for each model of vehicle it carries.
- Examples of the content group themes that the food and beverage company can use include, for example, “Brand A cola”, “Brand B ginger ale,” “Brand C orange juice,” “Brand D sports drink,” or “Brand E purified water.”
- An example content campaign theme can be “soda” and include content groups for both “Brand A cola” and “Brand B ginger ale”, for example.
- the digital component (or digital component object or digital component) can include “Brand A”, “Brand B”, “Brand C”, “Brand D” or “Brand E”.
- the digital component provider 162 can provide one or more keywords and digital component objects to each content group.
- the keywords can include terms that are relevant to the product or services of associated with or identified by the digital component objects.
- a keyword can include one or more terms or phrases.
- the food and beverage company can include “soda,” “cola,” “soft drink,” as keywords for a content group or content campaign that can be descriptive of the goods or services the brand provides.
- negative keywords can be specified by the content provider to avoid, prevent, block, or disable content placement on certain terms or keywords.
- the content provider can specify a type of matching, such as exact match, phrase match, or broad match, used to select digital component objects.
- the digital component provider 162 can provide the one or more keywords to be used by the digital component selector 160 to select a digital component object provided by the digital component provider 162 .
- the digital component provider 162 can provide additional content selection criteria to be used by the digital component selector 160 to select digital component objects.
- the digital component selector 160 can run a content selection process involving multiple content providers 138 responsive to receiving an indication of a keyword of an electronic message.
- the digital component provider 162 can provide one or more digital component objects for selection by the digital component selector 160 .
- the digital component objects can be a digital component or a collection of digital components.
- the digital component selector 160 can select the digital component objects when a content placement opportunity becomes available that matches the resource allocation, content schedule, maximum bids, keywords, and other selection criteria specified for the content group.
- Different types of digital component objects can be included in a content group, such as a voice digital component, audio digital component, a text digital component, an image digital component, video digital component, multimedia digital component, or digital component link.
- the digital component selector 160 can transmit the digital component object for presentation or rendering on a client device 106 or display device of the client device 106 .
- Presenting or rendering can include displaying the digital component on a display device or playing the digital component via a speaker of the client device 106 .
- the digital component selector 160 to present or render the digital component object.
- the digital component selector 160 can instruct the client device 106 to generate audio signals, acoustic waves, or visual output.
- the automated assistant client 108 can present the selected digital component via an audio output.
- the digital component selector 160 can provide, for render on a display device of the client device 106 (e.g., user interface output devices 1020 ), a digital component selected via the real-time digital component selection process.
- the digital component selector 160 can determine, based on a policy, to initiate a real-time digital component selection process.
- the digital component selector 160 can retrieve the policy from a data repository or memory of the cloud-based automated assistant component 119 , or a server thereof.
- the policy can include a computing resource reduction policy, network bandwidth utilization reduction policy, preferences, performance-related policy, content-related policy or other type of policy.
- the policy can be a computing resource reduction policy.
- the policy can determine, based on a type of client device 106 , whether or not to provide a digital component for render by the client device 106 . For example, if the client device 106 does not have access to a user interface output device 1020 that includes a display, then the digital component selector 160 , using the policy, can block execution of the real-time digital component selection process. If the client device 106 has access to a user interface output device 1020 that includes a display, then the digital component selector 160 , using the policy, can determine to execute the real-time digital component selection process.
- the policy can take into account the visual dialog state of the visual dialog state machine.
- the digital component selector 160 can determine, using the policy, whether or not to execute or block execution of the real-time digital component selection process based on the visual dialog state of the visual dialog state machine. For example, if the visual dialog state is active, then the digital component selector 160 , using the policy, can determine to select a digital component for rendering by the client device 106 . In some cases, if the visual dialog state is active and the display resources are being fully utilized or utilized at an amount greater than a threshold (e.g., 70% percent, 80%, 90% or greater), then the digital component selector 160 , using the policy, can determine to block execution of the digital component real-time selection process.
- a threshold e.g. 70% percent, 80%, 90% or greater
- the visual dialog state can indicate a zoom level of at least a portion of the display of the client device 106 . For example, if the visual dialog state is zoomed in an amount greater than a threshold (e.g., 60%, 70%, 80%, 90% or greater), then the digital component selector 160 , using the policy, can determine to block execution of the digital component real-time selection process. If the zoom amount is less than the threshold, the digital component selector 160 , using the policy, can determine to execute the digital component real-time selection process.
- a threshold e.g. 60%, 70%, 80%, 90% or greater
- the digital component selector 160 can receive an indication of a type of visual dialog state.
- the digital component selector 160 can execute, based on the indication of the type of visual dialog state, a real-time digital component selection process.
- the digital component selector 160 can provide, to the client device 160 , a digital component selected via the real-time digital component selection process.
- the digital component selector 160 can receive an indication of a type of visual dialog state.
- the digital component selector 160 can receive the indication from one or more component of the cloud-based automated assistant components 119 , or a third party computing service 140 .
- the digital component selector 160 can block execution, based on the indication of the type of visual dialog state, a real-time digital component selection process.
- the indication of the visual dialog state can include, for example, one or more of active, standby, disabled, available, unavailable, percent utilization, zoom level, or type of content.
- the policy can take into account an aspect of the dialog session.
- the policy can take into account a verbal dialog state.
- a dialog state machine can define a plurality of states, as well as transitions between those states, that occur based on various inputs received from the user and/or elsewhere (e.g., sensors, web services, etc.).
- a dialog state machine associated with the third party computing service advances between various dialog states.
- the dialog state machine may reach a state at which the user's intent is resolved.
- the digital component selector 160 can determine whether or not to execute the real-time digital component selection process based on the state of the dialog. For example, if the user's intent is resolved or close to being resolved, then the digital component selector 160 can determine to execute the real-time digital component selection process because the cloud-based automated assistant may be close to providing an output. If the user's intent is resolved or close to being resolved, then the digital component selector 160 can determine to execute the real-time digital component selection process because the intent can be used as input into the selection process, thereby resulting in improved selection process that is more accurate, relevant, or efficient because the intent may be resolved or resolved to a higher degree as compared to previous dialog state. If, however, the dialog state indicates that the user's intent is not yet resolved or resolved at a low level, then the digital component selector 160 , using the policy, can determine to block execution of the real-time digital component selection process.
- the digital component selector 160 can identify a identify a computing resource reduction policy.
- the digital component selector 160 can determine, via the computing resource reduction policy, to block execution of a real-time digital component selection process based on the first verbal dialog state.
- the first verbal dialog state may indicate that an intent is not fully resolved or resolved to a satisfactory threshold, which can result in wasted computing resources, or a faulty selection process or a selection process that consumes increased computing resources (e.g., processor or memory).
- the digital component selector 106 can then detect an indication of a transition from the first visual state to a second visual state corresponding to the second verbal dialog state.
- the digital component selector 160 can determine, via the computing resource reduction policy, to initiate execution of a real-time digital component selection process based on a metric associated with the second visual state.
- the metric associated with the second visual state can include, for example, a zoom level, or a scrolling value, or an interface feature such as selectable buttons or touchless operation.
- the digital component selector 160 can provide, to the client device 106 , a digital component selected via the real-time digital component selection process.
- the digital component selector 160 can identify a computing resource reduction policy and determine, via the computing resource reduction policy, to initiate execution of a real-time digital component selection process based on the first verbal dialog state and first visual state.
- the first verbal dialog state can indicate that a user is making a request and the intent can be resolved or in the process of being resolved.
- the first visual state can indicate an original zoom level or an unzoomed level.
- the digital component selector can provide, to the client device 106 , a digital component selected via the real-time digital component selection process for presentation during the first visual state.
- the digital component selector 160 can detect an indication of a transition from the first visual state to a second visual state corresponding to the second verbal dialog state.
- the digital component selector 160 can determine, via the computing resource reduction policy, to block execution of a real-time digital component selection process based on a metric associated with the second visual state.
- the digital component selector 160 can receive data indicative of a first visual dialog state of the visual dialog state machine from the third party computing service 140 by way of the server portion 119 of the automated assistant 120 .
- the client device 106 can render, on the display based on the first visual dialog state, a graphical user interface associated with the human-to-computer dialog session.
- the graphical user interface may include at least one graphical element (e.g., a button, actionable text, etc.) that is operable to cause the verbal state machine to transition from a first verbal dialog state corresponding to the first visual dialog state to a second verbal dialog state.
- the client device 106 can detect operation of the at least one graphical element by the user. For example, the user may tap the graphical element or speak a command (e.g., utter a phrase associated with actionable text to interact with the graphical element).
- the digital component selector 160 can receive, from the client device 106 , data indicative of operation of the at least one graphical element (e.g., an intent).
- the digital component selector 160 can determine or detect a transition from the first verbal dialog state to the second verbal dialog state.
- the digital component selector 160 (or other component 119 ) can provide the data indicative of operation of the at least one graphical element to the third party computing service 140 .
- the data indicative of operation of the at least one graphical element may cause the third party computing service 140 to transition from the first verbal dialog state to the second verbal dialog state.
- FIG. 2 schematically demonstrates one example of how a client portion 108 of automated assistant 120 (also referred to as “automated assistant client” in FIG. 1 ) may be configured to facilitate multi-modal interaction between users, automated assistant 120 , and third party computing services 140 .
- client portion 108 includes one or more libraries 242 that may include, for instance, a library specific to automated assistant 120 (e.g., libassistant), a cast companion library (“CCL”), and/or other libraries that facilitate data exchange with an immersive engine 244 of client portion 108 .
- libraries 242 may include, for instance, a library specific to automated assistant 120 (e.g., libassistant), a cast companion library (“CCL”), and/or other libraries that facilitate data exchange with an immersive engine 244 of client portion 108 .
- libraries 242 may include, for instance, a library specific to automated assistant 120 (e.g., libassistant), a cast companion library (“CCL”), and/or other libraries that facilitate data exchange with an immersive engine
- Immersive engine 244 may implement a variety of different technologies, such as HTML5 (including HTML, CSS, and JavaScript), CSS cards, and so forth to provide visual output to a user who engages with a third party computing service (and hence, to provide a more immersive user experience).
- immersive engine 244 may include various components, such as a JavaScript controller 246 (or other similar controllers) and an embedded browser 248 .
- embedded browser 248 may be rendered as a GUI, e.g., on a screen associated with client device 106 .
- the GUI may include information associated with a human-to-computer dialog involving a user, automated assistant 120 , and a third party computing service 140 .
- third party computing service 140 may provide, e.g., via server portion 119 of automated assistant 120 , markup language data such as HTML, XML, CSS, etc., which is provided by immersive engine 244 to embedded browser 248 for visual rendition.
- Embedded browser 248 may be implemented using a variety of different technologies, such as webviews (e.g., for the Android® operating system, for the iOS® operating system), iframes, and so forth.
- a user may provide verbal free form input to client portion 108 .
- This input may be typed or spoken.
- the spoken input may be analyzed to generate textual speech recognition output.
- data indicative of the free form input such as textual data
- server portion 119 may itself attempt to determine the user's intent based on this textual data.
- server portion 119 may relay the textual data to third party computing service 140 , so that third party computing service 140 can attempt to ascertain the user's intent.
- third party computing service 140 may resolve the user's intent, e.g., by taking a responsive action (e.g., turning the user's heating on). Additionally, one or more dialog state machines associated with third party computing service 140 may transition between various states. For example, a visual dialog state machine may be transitioned from one visual dialog state to another, and a verbal dialog state machine may also be transitioned from one verbal dialog state to another.
- resolution of the user's intent may cause fulfillment or resolution information to be generated.
- This resolution information may be provided by third party computing service 140 to server portion 119 , e.g., as part of a mixed payload.
- the resolution information may be used, e.g., by server portion 119 , to perform various actions, such as generating natural language output.
- the mixed payload may also include data indicative of the transitioned-to visual dialog state, such as markup language (e.g., HTML, XML), or a command to interact with an existing GUI in a particular way (e.g., zoom in/out, scroll down, focus on particular item, etc.).
- markup language e.g., HTML, XML
- a command to interact with an existing GUI in a particular way e.g., zoom in/out, scroll down, focus on particular item, etc.
- the third party computing service 140 can control the client portion 108 by causing the client portion to implement the command to cause the interaction with the existing GUI.
- server portion 119 may forward at least some of the mixed payload to client portion 108 .
- server portion 119 provides data indicative of a transitioned-to visual state to client portion 108 .
- Client portion 108 e.g., by way of immersive engine 244 , may then update a GUI rendered by embedded browser 248 based on the received visual state data.
- the mixed payload includes a command to interact with an existing GUI in a particular way
- the immersive engine 244 can cause the command to be implemented and, as a result, the GUI, rendered by embedded browser 248 , to be updated.
- the data that needs to be transferred between the client device and the third party computing service 140 in order to allow the GUI to be updated may be reduced.
- FIGS. 3 and 4 depict one example of how techniques described herein may be employed in a particular scenario.
- a user 301 operates a first client device 306 A taking the form of a standalone interactive speaker to engage with automated assistant 120 .
- first client device 306 A may have an instance of client portion 108 of automated assistant 120 installed.
- first client device 306 A lacks onboard display capabilities.
- it is in network communication with a second client device 306 B in the form of a smart television.
- a smart television may be made “smart” by virtue of a “smart dongle” with wireless communication capabilities (e.g., Wi-Fi, Bluetooth) being inserted into, for instance, a USB or HDMI slot of the television.
- wireless communication capabilities e.g., Wi-Fi, Bluetooth
- a television may be inherently “smart” by virtue of it having onboard logic that enables it to, for instance, operate another instance of client portion 108 of automated assistant 120 .
- client devices 306 A and 306 B may be part of the same coordinated “ecosystem” of client devices that are, for instance, associated with an online profile of user 301 .
- an instance of client portion 108 of automated assistant 120 that operates on first client device 306 A may “cast” its GUI onto second client device 306 B.
- the instance of client portion 108 operating on first client device 306 A may cast embedded browser 248 onto second client device 306 B.
- user 301 is engaging with automated assistant 120 in facilitating wiring of an electrical device such as a thermostat, or a dimmer for a light switch.
- Audible and visual guidance for wiring the electrical device is provided by a third party computing service by interacting with a client portion 108 of automated assistant 120 operating on first client device 306 A.
- Automated assistant 120 provides vocal output via first client device 306 A, asking the user 301 to choose a wiring configuration in his or her home from a list of potential wiring configurations, “What is your wiring configuration?” Meanwhile, automated assistant 120 has caused a GUI provided by the third party computing service to be rendered on second client device 306 B.
- This GUI includes the same wiring configuration question and a series of potential wiring configurations that are candidate answer choices A-C.
- candidate answer choices A-C may or may not also be read aloud by automated assistant 120 via first client device 306 A.
- the user 301 eliminates candidate answer choice A by providing the utterance, “Not two-wire.”
- the third party computing service updates both a verbal dialog state machine and a visual dialog state machine associated with the wiring configurations.
- second client device 306 B included a touchscreen and user 301 knew the correct wiring configuration from the candidate answer choices A-C
- user 301 could have tapped on his selected answer.
- the selected answer may be visually emphasized at least temporarily.
- the utterance by user 301 may be recorded and processed using various components described above in association with client portion 108 and server portion 119 of automated assistant 120 , and data indicative of the answer provided by user 301 eventually is provided to the third party computing service.
- the third party computing service may, based on the updated state of its visual dialog state machine, provide visual dialog state data (e.g., as part of the mixed payload described with reference to FIG. 2 ) to server portion 119 of automated assistant 120 , which may in turn provide the visual dialog state data to client portion 108 of automated assistant 120 .
- Client portion 108 of automated assistant 120 updates, in response to receiving the visual dialog state data, the GUI rendered on second client device 306 B to provide a visual indication that the eliminated answer A) was incorrect (e.g., using strikethrough or other similar visual annotations).
- the user 301 has only eliminated candidate answer choice A and not selected either candidate answer choices B-C.
- the third party computing service may, based on the updated state of its verbal dialog state machine, generate resolution data that causes automated assistant 120 to render vocal output, “Is one of the wires green?”
- the user 301 may respond by providing the utterance, “Yes, one of the wires is green.”
- the third party computing service may then determine the user 301 has a wiring configuration with a ground wire and, based on the updated state of its verbal dialog state machine, generate resolution data that causes automated assistant 120 to render vocal output, “Your wiring configuration is probably three-wire with ground.”
- the third party computing service may update both a verbal dialog state machine and a visual dialog state machine associated with the potential wiring configurations it provides.
- the third party computing service may, based on the updated state of its visual dialog state machine, provide visual dialog state data (e.g., as part of the mixed payload described with reference to FIG. 2 ) to server portion 119 of automated assistant 120 , which may in turn provide the visual dialog state data to client portion 108 of automated assistant 120 .
- Client portion 108 of automated assistant 120 may, in response to receiving the visual dialog state data, update the GUI rendered on second client device 306 B to provide a visual indication and that the correct wiring configuration is probably a three-wire configuration with ground, or candidate answer choice B (e.g., using bold, underline, italics, or other fonts or animation to highlight the correct answer).
- the third party computing service may, based on the updated state of its visual dialog state machine, provide a visual indication of a wiring diagram that includes the three-wire with ground connection used to wire the electrical device. This may include step-by-step diagrams from the third party computing service for wiring the three-wire with ground configuration, video tutorials from the third party computing service for wiring the three-wire with ground configuration, etc.
- FIGS. 5 and 6 depict another example of how techniques described herein may be employed in a specific scenario.
- a client device 506 taking the form of a tablet computing device is currently displaying, on a touchscreen 570 , a GUI related to a third party computing service (such as the third party computing service also related to the wiring configuration of a thermostat device in FIGS. 3 and 4 ) that provides users an interface in which they can access, monitor, interact with, and save various components and/or configurations related to the thermostat.
- the GUI includes a series of tiles 556 1-6 (or cards) that are related to various components and/or configurations provided by the third party computing service, and allow the user to interact with actionable content provided by the third party computing service on the client device 506 .
- a first tile 556 1 relates to a current temperature detected by the thermostat in the user's home.
- a second tile 556 2 relates to current account settings of the user.
- a third tile 556 3 relates to past, present, and projected future usage of the thermostat by the user.
- a fourth tile 556 4 enables the user to contact a third party hosting the third party computing service for support related to operation of the thermostat.
- a fifth tile 556 5 relates to the device configuration of the thermostat device (after the device has been properly wired in FIGS. 3 and 4 ) that is provided by the third party computing service and may be interacted with by the user.
- the user has provided the utterance, “Let's have a look at the bottom tile.”
- This utterance may be recorded and processed using the various components of automated assistant 120 described previously, until data indicative of the user's intent makes its way to the third party computing service.
- the third party computing service may update its visual dialog state machine and its verbal dialog state machine accordingly.
- the visual dialog state machine is transitioned to a new state that zooms in on (i.e. enlarges) the fifth tile 556 5 and effectively makes the device configuration a focus of the visual and/or verbal dialog state machines.
- the third party computing service may provide a plurality of device configuration options for display on the touchscreen 570 . Consequently, in FIG.
- the third party computing service when the user provides an additional utterance, “Let's do the bottom one”, the third party computing service is able to resolve the term “bottom one” to be the “set temperature” device configuration, and can provide additional information about the current temperature and/or suggest a temperature for the user based on an ambient room temperature, an outdoor temperature, or a temperature that is frequently set by other users.
- the third party computing service via the client device 506 may ask the user to input a particular set temperature either audibly or tactilely. Further, the user may save the particular device configuration by providing audible input of “save”, “save configuration”, or the like. Alternatively, the user may provide tactile input by tapping “save device configuration” on the touchscreen 570 .
- FIG. 7 depicts an example of how techniques described herein may be employed by a first party computing service.
- a client device 706 takes the form of a standalone interactive speaker that has display capabilities in the form of a touchscreen display 770 .
- display 770 renders a GUI that includes various information of potential relevance to a user (not depicted). Most relevant is a reminder that the user needs to pick up Joseph from soccer in 45 mins. In various implementations, this reminder may be pushed to the user automatically, e.g., on display 770 and/or as a card rendered on other client devices of a coordinated ecosystem of client devices that includes client device 706 .
- actionable text that reads, “See all reminders.”
- the user may select actionable text, e.g., by tapping it, or the user may speak the phrase associated with the actionable text—“see all reminders” in this example—and in either case a new GUI may be rendered on display 770 by automated assistant 120 that shows the user his or her reminders. From the user's perspective, this actionable text may appear to operate similar to a hyperlink. However, in some implementations, when a user taps this actionable text, that does not trigger an HTTP command to be transmitted to an HTTP server to load a new webpage on display 770 .
- data indicative of the user's tap may be provided to server portion 119 of automated assistant 120 , which may provide data indicative of the user's tap to a computing service (first or third party).
- the computing service may interpret the data (e.g., as an intent to see all reminders) and respond accordingly, e.g., by updating its verbal and/or visual dialog state machines and providing visual dialog state data to client portion 108 of automated assistant 120 via server portion 119 .
- automated assistant 120 may be configured to “listen” for any utterance that corresponds to actionable text, even without requiring invocation first. Put another way, when actionable text is presented on a display, automated assistant 120 may listen for both traditional invocation phrases (e.g., “OK Assistant”) and utterances associated with displayed actionable text. Thus, when confronted with the GUI in FIG. 7 , a user may invoke automated assistant 120 using traditional invocation phrases and also may invoke automated assistant 120 by speaking (or tapping) the actionable text, “See all reminders.”
- traditional invocation phrases e.g., “OK Assistant”
- a user may invoke automated assistant 120 using traditional invocation phrases and also may invoke automated assistant 120 by speaking (or tapping) the actionable text, “See all reminders.”
- additional tiles or cards may be provided that are operable to trigger other tasks that might otherwise be triggered by vocal engagement with automated assistant 120 .
- a first tile 7561 is operable to cause automated assistant 120 to update its verbal dialog state machine and provide audible output describing the weather.
- automated assistant 120 may resolve the ambiguous query to something like “What's the weather next week,” and respond accordingly.
- the phrase “Tell me the weather” may be actionable text that the user may speak (or tap) to achieve the same goal.
- Another card 7562 in FIG. 7 is operable by a user to present the user's schedule, e.g., audibly via a speaker (not depicted) of client device 706 and/or visually on display 770 .
- the text “What's on my schedule?” may be actionable text that the user may speak (instead of tapping card 7562 ) to achieve the same goal.
- the user taps on card 7562 that may cause the user's schedule to be displayed on display 770 by automated assistant 120
- the user speaks actionable text “What's on my schedule?” that may cause automated assistant 120 to audibly output the user's schedule.
- FIG. 8 is a flowchart illustrating an example method 800 according to implementations disclosed herein.
- This system may include various components of various computer systems, such as one or more components of computing systems that implement automated assistant 120 .
- operations of method 800 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted or added. In some implementations, the operations of method 800 may be performed by one or more computing systems that operate third party computing service 140 , although this is not required.
- the system may receive, e.g., at a (first or third party) computing service implemented at least in part by one or more processors, from an automated assistant (e.g., a server portion 119 ), data indicative of an intent of a user of a computing device (e.g., client device 106 , 306 , 506 , 706 ) in communication with the automated assistant as part of a human-to-computer dialog session between the user and the automated assistant.
- the data may include speech recognition output generated based on a vocal utterance provided by the user.
- the data may include an intent that is determined by server portion 119 of automated assistant 120 (in particular, intent matcher 135 ).
- the data may include one or more slot values that may or may not be required by the computing service.
- a user engaged in a human-to-computer dialog session with automated assistant 120 may be presented with a document on a display.
- the user may provide a command (vocally and/or by swiping down on the screen) to scroll down through the document, e.g., to the next page.
- the system may resolve the intent of the user to generate resolution information.
- the computing service may determine a “next” portion of the document to display, e.g., below the previously-displayed portion of the document.
- the computing service may generate a command that is designed to cause client portion 108 of automated assistant 120 operating on the client device to alter a GUI, e.g., rendered in embedded browser 248 , so that the next portion of the document is now displayed.
- the system may update a display context or visual dialog state machine maintained for the computing service in association with the human-to-computer dialog session.
- the updating of block 806 may be based at least in part on at least one of the intent determined at block 802 and the resolution information generated at block 804 .
- the system may provide data indicative of the updated display context or visual dialog state machine to automated assistant 120 , and in particular, server portion 119 thereof.
- the data indicative of the display context may then be provided by server portion 119 to the computing device (e.g., 106 , 306 , 506 , 706 ).
- the data indicative of the display context may cause an assistant application (e.g., client portion 108 ) executing on the computing device to trigger a touchless interaction between the user and a graphical user interface of the assistant application.
- the display may be altered so that it “scrolls down” to the next portion of the document, without the user having to touch anything.
- FIG. 9 is a flowchart illustrating an example method 900 according to implementations disclosed herein. For convenience, the operations of the flow chart are described with reference to a system that performs the operations. This system may include various components of various computer systems, such as one or more components of computing systems that implement automated assistant 120 . Moreover, while operations of method 900 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted or added.
- the system may implement, at a client device (e.g., 106 , 306 , 506 , 706 ) having a display (e.g., 306 B, 570 , 770 ), a client portion ( 108 ) of an automated assistant 120 .
- the system may implement, at one or more server computing devices, a server portion ( 119 ) of the automated assistant 120 .
- a user may interact with the client portion 108 to participate in a human-to-computer dialog session between the user, the automated assistant 120 , and a third party computing service 140 .
- the third party computing service 140 may engage with the user in accordance with a verbal dialog state machine and a visual dialog state machine.
- the system may receive, e.g., at client portion 108 , data indicative of a first visual dialog state of the visual dialog state machine from the third party computing service 140 by way of the server portion 119 of the automated assistant 120 .
- the client portion may render, on the display based on the first visual dialog state, a graphical user interface associated with the human-to-computer dialog session.
- the graphical user interface may include at least one graphical element (e.g., a button, actionable text, etc.) that is operable to cause the verbal state machine to transition from a first verbal dialog state corresponding to the first visual dialog state to a second verbal dialog state.
- the client portion 108 may detect operation of the at least one graphical element by the user. For example, the user may tap the graphical element or speak a command (e.g., utter a phrase associated with actionable text to interact with the graphical element).
- the client portion 108 may provide, to the server portion 119 , data indicative of operation of the at least one graphical element (e.g., an intent).
- the server portion 119 may provide the data indicative of operation of the at least one graphical element to the third party computing service 140 .
- the data indicative of operation of the at least one graphical element may cause the third party computing service 140 to transition from the first verbal dialog state to the second verbal dialog state.
- FIG. 10 is a block diagram of an example computing device 1010 that may optionally be utilized to perform one or more aspects of techniques described herein.
- one or more of a client computing device, user-controlled resources module 130 , and/or other component(s) may comprise one or more components of the example computing device 1010 .
- Computing device 1010 typically includes at least one processor 1014 which communicates with a number of peripheral devices via bus subsystem 1012 .
- peripheral devices may include a storage subsystem 1024 , including, for example, a memory subsystem 1025 and a file storage subsystem 1026 , user interface output devices 1020 , user interface input devices 1022 , and a network interface subsystem 1016 .
- the input and output devices allow user interaction with computing device 1010 .
- Network interface subsystem 1016 provides an interface to outside networks and is coupled to corresponding interface devices in other computing devices.
- User interface input devices 1022 may include a keyboard, pointing devices such as a mouse, trackball, touchpad, or graphics tablet, a scanner, a touchscreen incorporated into the display, audio input devices such as voice recognition systems, microphones, and/or other types of input devices.
- pointing devices such as a mouse, trackball, touchpad, or graphics tablet
- audio input devices such as voice recognition systems, microphones, and/or other types of input devices.
- use of the term “input device” is intended to include all possible types of devices and ways to input information into computing device 1010 or onto a communication network.
- User interface output devices 1020 may include a display subsystem, a printer, a fax machine, or non-visual displays such as audio output devices.
- the display subsystem may include a cathode ray tube (CRT), a flat-panel device such as a liquid crystal display (LCD), a projection device, or some other mechanism for creating a visible image.
- the display subsystem may also provide non-visual display such as via audio output devices.
- output device is intended to include all possible types of devices and ways to output information from computing device 1010 to the user or to another machine or computing device.
- Storage subsystem 1024 stores programming and data constructs that provide the functionality of some or all of the modules described herein.
- the storage subsystem 1024 may include the logic to perform selected aspects of the methods of FIGS. 8-9 , as well as to implement various components depicted in FIGS. 1 and 2 .
- Memory 1025 used in the storage subsystem 1024 can include a number of memories including a main random access memory (RAM) 1030 for storage of instructions and data during program execution and a read only memory (ROM) 1032 in which fixed instructions are stored.
- a file storage subsystem 1026 can provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or removable media cartridges.
- the modules implementing the functionality of certain implementations may be stored by file storage subsystem 1026 in the storage subsystem 1024 , or in other machines accessible by the processor(s) 1014 .
- Bus subsystem 1012 provides a mechanism for letting the various components and subsystems of computing device 1010 communicate with each other as intended. Although bus subsystem 1012 is shown schematically as a single bus, alternative implementations of the bus subsystem may use multiple busses.
- Computing device 1010 can be of varying types including a workstation, server, computing cluster, blade server, server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computing device 1010 depicted in FIG. 10 is intended only as a specific example for purposes of illustrating some implementations. Many other configurations of computing device 1010 are possible having more or fewer components than the computing device depicted in FIG. 10 .
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current geographic location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current geographic location
- certain data may be treated in one or more ways before it is stored or used, so that personal identifiable information is removed.
- a user's identity may be treated so that no personal identifiable information can be determined for the user, or a user's geographic location may be generalized where geographic location information is obtained (such as to a city, ZIP code, or state level), so that a particular geographic location of a user cannot be determined.
- the user may have control over how information is collected about the user and/or used.
- users may opt out of assistant devices attempting to detect visual cues, e.g., by disabling vision sensor 107 .
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/240,609 US11347801B2 (en) | 2018-05-07 | 2019-01-04 | Multi-modal interaction between users, automated assistants, and other computing services |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/774,950 US10984786B2 (en) | 2018-05-07 | 2018-05-07 | Multi-modal interaction between users, automated assistants, and other computing services |
PCT/US2018/031444 WO2019216875A1 (en) | 2018-05-07 | 2018-05-07 | Multi-modal interaction between users, automated assistants, and other computing services |
US16/240,609 US11347801B2 (en) | 2018-05-07 | 2019-01-04 | Multi-modal interaction between users, automated assistants, and other computing services |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/774,950 Continuation-In-Part US10984786B2 (en) | 2018-05-07 | 2018-05-07 | Multi-modal interaction between users, automated assistants, and other computing services |
PCT/US2018/031444 Continuation-In-Part WO2019216875A1 (en) | 2018-05-07 | 2018-05-07 | Multi-modal interaction between users, automated assistants, and other computing services |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190340200A1 US20190340200A1 (en) | 2019-11-07 |
US11347801B2 true US11347801B2 (en) | 2022-05-31 |
Family
ID=68383659
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/240,609 Active 2038-09-14 US11347801B2 (en) | 2018-05-07 | 2019-01-04 | Multi-modal interaction between users, automated assistants, and other computing services |
Country Status (1)
Country | Link |
---|---|
US (1) | US11347801B2 (en) |
Families Citing this family (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2569335B (en) * | 2017-12-13 | 2022-07-27 | Sage Global Services Ltd | Chatbot system |
US11200893B2 (en) * | 2018-05-07 | 2021-12-14 | Google Llc | Multi-modal interaction between users, automated assistants, and other computing services |
US11347801B2 (en) * | 2018-05-07 | 2022-05-31 | Google Llc | Multi-modal interaction between users, automated assistants, and other computing services |
JP7203865B2 (en) | 2018-05-07 | 2023-01-13 | グーグル エルエルシー | Multimodal interaction between users, automated assistants, and other computing services |
US11003419B2 (en) | 2019-03-19 | 2021-05-11 | Spotify Ab | Refinement of voice query interpretation |
US10997968B2 (en) * | 2019-04-30 | 2021-05-04 | Microsofttechnology Licensing, Llc | Using dialog context to improve language understanding |
US11470017B2 (en) * | 2019-07-30 | 2022-10-11 | At&T Intellectual Property I, L.P. | Immersive reality component management via a reduced competition core network component |
US11636438B1 (en) | 2019-10-18 | 2023-04-25 | Meta Platforms Technologies, Llc | Generating smart reminders by assistant systems |
KR20230007478A (en) * | 2020-06-02 | 2023-01-12 | 구글 엘엘씨 | Automated assistant control from external applications that do not have automated assistant API capabilities |
US11361515B2 (en) | 2020-10-18 | 2022-06-14 | International Business Machines Corporation | Automated generation of self-guided augmented reality session plans from remotely-guided augmented reality sessions |
US11769018B2 (en) * | 2020-11-24 | 2023-09-26 | Openstream Inc. | System and method for temporal attention behavioral analysis of multi-modal conversations in a question and answer system |
CN116107573B (en) * | 2023-04-12 | 2023-06-30 | 广东省新一代通信与网络创新研究院 | Intention analysis method and system based on finite state machine |
Citations (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030144055A1 (en) * | 2001-12-28 | 2003-07-31 | Baining Guo | Conversational interface agent |
US20110022393A1 (en) | 2007-11-12 | 2011-01-27 | Waeller Christoph | Multimode user interface of a driver assistance system for inputting and presentation of information |
US7885388B2 (en) | 2006-01-17 | 2011-02-08 | General Motors Llc | Method and apparatus for initiating communication via a multi-mode system in a vehicle |
WO2011088053A2 (en) | 2010-01-18 | 2011-07-21 | Apple Inc. | Intelligent automated assistant |
US20120293551A1 (en) * | 2011-05-19 | 2012-11-22 | Qualcomm Incorporated | User interface elements augmented with force detection |
US8458655B1 (en) * | 2004-01-15 | 2013-06-04 | The Mathworks, Inc. | Implicit reset |
US20130275873A1 (en) | 2012-04-13 | 2013-10-17 | Qualcomm Incorporated | Systems and methods for displaying a user interface |
US20130275164A1 (en) * | 2010-01-18 | 2013-10-17 | Apple Inc. | Intelligent Automated Assistant |
US20140136187A1 (en) * | 2012-11-15 | 2014-05-15 | Sri International | Vehicle personal assistant |
US20140282586A1 (en) * | 2013-03-15 | 2014-09-18 | Advanced Elemental Technologies | Purposeful computing |
US20140316764A1 (en) * | 2013-04-19 | 2014-10-23 | Sri International | Clarifying natural language input using targeted questions |
US20150142435A1 (en) * | 2013-11-21 | 2015-05-21 | Google Technology Holdings LLC | System and Method for Speech-Based Navigation and Interaction with a Device's Visible Screen Elements Using a Corresponding View Hierarchy |
US20160219078A1 (en) * | 2015-01-16 | 2016-07-28 | Sri International | Multimodal help agent for network administrator |
US20160239568A1 (en) * | 2015-02-13 | 2016-08-18 | Microsoft Technology Licensing, Llc | Extension of Third Party Application Functionality for Intent Determination |
US9436820B1 (en) * | 2004-08-02 | 2016-09-06 | Cisco Technology, Inc. | Controlling access to resources in a network |
US20170031896A1 (en) * | 2015-07-28 | 2017-02-02 | Xerox Corporation | Robust reversible finite-state approach to contextual generation and semantic parsing |
US20170270929A1 (en) * | 2016-03-16 | 2017-09-21 | Google Inc. | Determining Dialog States for Language Models |
US20170277364A1 (en) * | 2016-03-22 | 2017-09-28 | Amazon Technologies, Inc. | User interface with dynamic refinement of filtered results |
US20180068657A1 (en) * | 2016-09-07 | 2018-03-08 | Microsoft Technology Licensing, Llc. | Ambiguity Resolving Conversational Understanding System |
US20180182398A1 (en) * | 2016-12-22 | 2018-06-28 | Soundhound, Inc. | Full-duplex utterance processing in a natural language virtual assistant |
US20180307761A1 (en) * | 2017-04-19 | 2018-10-25 | Verizon Patent And Licensing Inc. | Advanced user interface for voice search and results display |
US20190027131A1 (en) * | 2017-07-18 | 2019-01-24 | Disney Enterprises, Inc. | Verbal cues for high-speed control of a voice-enabled device |
US10418032B1 (en) * | 2015-04-10 | 2019-09-17 | Soundhound, Inc. | System and methods for a virtual assistant to manage and use context in a natural language dialog |
US20190340200A1 (en) * | 2018-05-07 | 2019-11-07 | Google Llc | Multi-modal interaction between users, automated assistants, and other computing services |
US20190347842A1 (en) * | 2018-05-08 | 2019-11-14 | Google Llc | Condensed transistions of graphical elements presented in graphical user interfaces |
US10482874B2 (en) * | 2017-05-15 | 2019-11-19 | Apple Inc. | Hierarchical belief states for digital assistants |
US20200033981A1 (en) | 2016-06-06 | 2020-01-30 | Nureva, Inc. | Method, apparatus and computer-readable media for touch and speech interface |
US20200202853A1 (en) * | 2017-10-03 | 2020-06-25 | Google Llc | Multiple digital assistant coordination in vehicular environments |
-
2019
- 2019-01-04 US US16/240,609 patent/US11347801B2/en active Active
Patent Citations (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030144055A1 (en) * | 2001-12-28 | 2003-07-31 | Baining Guo | Conversational interface agent |
US8458655B1 (en) * | 2004-01-15 | 2013-06-04 | The Mathworks, Inc. | Implicit reset |
US9436820B1 (en) * | 2004-08-02 | 2016-09-06 | Cisco Technology, Inc. | Controlling access to resources in a network |
US7885388B2 (en) | 2006-01-17 | 2011-02-08 | General Motors Llc | Method and apparatus for initiating communication via a multi-mode system in a vehicle |
US20110022393A1 (en) | 2007-11-12 | 2011-01-27 | Waeller Christoph | Multimode user interface of a driver assistance system for inputting and presentation of information |
US20130275164A1 (en) * | 2010-01-18 | 2013-10-17 | Apple Inc. | Intelligent Automated Assistant |
WO2011088053A2 (en) | 2010-01-18 | 2011-07-21 | Apple Inc. | Intelligent automated assistant |
US20120293551A1 (en) * | 2011-05-19 | 2012-11-22 | Qualcomm Incorporated | User interface elements augmented with force detection |
US20130275873A1 (en) | 2012-04-13 | 2013-10-17 | Qualcomm Incorporated | Systems and methods for displaying a user interface |
US20140136187A1 (en) * | 2012-11-15 | 2014-05-15 | Sri International | Vehicle personal assistant |
US20140282586A1 (en) * | 2013-03-15 | 2014-09-18 | Advanced Elemental Technologies | Purposeful computing |
US20140316764A1 (en) * | 2013-04-19 | 2014-10-23 | Sri International | Clarifying natural language input using targeted questions |
US20150142435A1 (en) * | 2013-11-21 | 2015-05-21 | Google Technology Holdings LLC | System and Method for Speech-Based Navigation and Interaction with a Device's Visible Screen Elements Using a Corresponding View Hierarchy |
US20160219078A1 (en) * | 2015-01-16 | 2016-07-28 | Sri International | Multimodal help agent for network administrator |
US20160239568A1 (en) * | 2015-02-13 | 2016-08-18 | Microsoft Technology Licensing, Llc | Extension of Third Party Application Functionality for Intent Determination |
US10418032B1 (en) * | 2015-04-10 | 2019-09-17 | Soundhound, Inc. | System and methods for a virtual assistant to manage and use context in a natural language dialog |
US20170031896A1 (en) * | 2015-07-28 | 2017-02-02 | Xerox Corporation | Robust reversible finite-state approach to contextual generation and semantic parsing |
US20170270929A1 (en) * | 2016-03-16 | 2017-09-21 | Google Inc. | Determining Dialog States for Language Models |
US20170277364A1 (en) * | 2016-03-22 | 2017-09-28 | Amazon Technologies, Inc. | User interface with dynamic refinement of filtered results |
US20200033981A1 (en) | 2016-06-06 | 2020-01-30 | Nureva, Inc. | Method, apparatus and computer-readable media for touch and speech interface |
US20180068657A1 (en) * | 2016-09-07 | 2018-03-08 | Microsoft Technology Licensing, Llc. | Ambiguity Resolving Conversational Understanding System |
US20180182398A1 (en) * | 2016-12-22 | 2018-06-28 | Soundhound, Inc. | Full-duplex utterance processing in a natural language virtual assistant |
US20180307761A1 (en) * | 2017-04-19 | 2018-10-25 | Verizon Patent And Licensing Inc. | Advanced user interface for voice search and results display |
US10482874B2 (en) * | 2017-05-15 | 2019-11-19 | Apple Inc. | Hierarchical belief states for digital assistants |
US20190027131A1 (en) * | 2017-07-18 | 2019-01-24 | Disney Enterprises, Inc. | Verbal cues for high-speed control of a voice-enabled device |
US20200202853A1 (en) * | 2017-10-03 | 2020-06-25 | Google Llc | Multiple digital assistant coordination in vehicular environments |
US20190340200A1 (en) * | 2018-05-07 | 2019-11-07 | Google Llc | Multi-modal interaction between users, automated assistants, and other computing services |
US20190347842A1 (en) * | 2018-05-08 | 2019-11-14 | Google Llc | Condensed transistions of graphical elements presented in graphical user interfaces |
Non-Patent Citations (12)
Title |
---|
Bajpei et al., "Voice Operated Web Browser," International Journal of Soft Computing and Artificial Intelligence, vol. 3, issue 1, May 2015 (3 pages). |
Examination Report for EP Appln. Ser. No. 18729841.9 dated Sep. 25, 2020 (7 pages). |
First Action Interview Pilot Program Pre-Interview Communication for U.S. Appl. No. 15/774,950 dated Jul. 17, 2020 (4 pages). |
https://www.the-ambient.com/features/amazon-echo-vs-amazon-echo-show-157. |
International Search Report and Written Opinion for PCT Appln. Ser. No. PCT/US2018/031444 dated Aug. 8, 2018 (17 pages). |
International Search Report and Written Opinion of PCT Ser. No. PCT/US2018/031444, 17 pages, dated Aug. 8, 2018. |
Kurlander, "Persona: An Architecture for Animated Agent Interfaces", Mar. 1998, accessed from: https://www.kurlander.net/DJ//Pubs/imagina98p.pdf (7 pages). |
Nield "How to Control Your Computer with Your Voice," Popular Science, May 2, 2017, accessed from: https://www.popsci.com/control-your-computer-with-your-voice (5 pages). |
Opera Tutorials, "Using Opera with Voice," Opera, accessed from: https://www.opera.com/help/tutorials/voice/using/ (3 pages). |
Rouse, "Android WebView," SearchSecurity, Apr. 17, 2015, accessed from: https://searchsecurity.techtarget.com/definition/Android-WebView (1 page). |
Tiffny, "Using Voice Commands in Chrome Makes Surfing a Breeze, Here's How to Set It Up," Technorms, accessed from: https://www.technorms.com/19067/voice-commands-chrome (7 pages). |
Windows Help, "Use Speech Recognition," Apr. 16, 2018, accessed from: https://support.microsoft.com/en-us/help/17208/windows-10-use-speech-recognition (2 pages). |
Also Published As
Publication number | Publication date |
---|---|
US20190340200A1 (en) | 2019-11-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11347801B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
US11735182B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
US11200893B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
CN111033492B (en) | Providing command bundle suggestions for automated assistants | |
JP7418526B2 (en) | Dynamic and/or context-specific hotwords to trigger automated assistants | |
US10679622B2 (en) | Dependency graph generation in a networked system | |
US11775254B2 (en) | Analyzing graphical user interfaces to facilitate automatic interaction | |
JP7384976B2 (en) | determining whether to automatically resume the first automated assistant session upon termination of the interrupting second session; | |
CN112292724A (en) | Dynamic and/or context-specific hotwords for invoking automated assistants | |
US20240055003A1 (en) | Automated assistant interaction prediction using fusion of visual and audio input | |
JP2023017791A (en) | Selecting content to render on display of assistant device | |
CN115605871A (en) | Recommending actions based on an entity or entity type | |
US20230343336A1 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
JP2022103191A (en) | Automated assistants that accommodate multiple age groups and/or vocabulary levels |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KIRAZCI, ULAS;COIMBRA, ADAM;LEE, ABRAHAM;AND OTHERS;SIGNING DATES FROM 20190115 TO 20190215;REEL/FRAME:049320/0856 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT RECEIVED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
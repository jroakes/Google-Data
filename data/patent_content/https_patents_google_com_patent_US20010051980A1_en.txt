US20010051980A1 - Preloading content objects on content exchanges - Google Patents
Preloading content objects on content exchanges Download PDFInfo
- Publication number
- US20010051980A1 US20010051980A1 US09/867,868 US86786801A US2001051980A1 US 20010051980 A1 US20010051980 A1 US 20010051980A1 US 86786801 A US86786801 A US 86786801A US 2001051980 A1 US2001051980 A1 US 2001051980A1
- Authority
- US
- United States
- Prior art keywords
- content
- origin server
- objects
- store
- exchange
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/40—Network security protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/02—Network architectures or network communication protocols for network security for separating internal from external traffic, e.g. firewalls
- H04L63/0281—Proxies
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/12—Shortest path evaluation
- H04L45/125—Shortest path evaluation based on throughput or bandwidth
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/30—Routing of multiclass traffic
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/12—Avoiding congestion; Recovering from congestion
- H04L47/125—Avoiding congestion; Recovering from congestion by balancing the load, e.g. traffic engineering
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4505—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols
- H04L61/4511—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols using domain name system [DNS]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4552—Lookup mechanisms between a plurality of directories; Synchronisation of directories, e.g. metadirectories
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/50—Address allocation
- H04L61/5069—Address allocation for group communication, multicast communication or broadcast communication
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
- H04L63/101—Access control lists [ACL]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/1066—Session management
- H04L65/1101—Session protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/61—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio
- H04L65/611—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio for multicast or broadcast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/80—Responding to QoS
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1004—Server selection for load balancing
- H04L67/1008—Server selection for load balancing based on parameters of servers, e.g. available memory or workload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1004—Server selection for load balancing
- H04L67/101—Server selection for load balancing based on network conditions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/14—Session management
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
- H04L67/568—Storing data temporarily at an intermediate stage, e.g. caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
- H04L67/63—Routing a service request depending on the request content or context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2216/00—Indexing scheme relating to additional aspects of information retrieval not explicitly covered by G06F16/00 and subgroups
- G06F2216/09—Obsolescence
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/604—Address structures or formats
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/618—Details of network addresses
- H04L2101/663—Transport layer addresses, e.g. aspects of transmission control protocol [TCP] or user datagram protocol [UDP] ports
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/10015—Access to distributed or replicated servers, e.g. using brokers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1029—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers using data related to the state of servers by a load balancer
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/2866—Architectures; Arrangements
- H04L67/288—Distributed intermediate devices, i.e. intermediate devices for interaction with other intermediate devices on the same level
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/24—Negotiation of communication capabilities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/322—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions
- H04L69/329—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions in the application layer [OSI layer 7]
Definitions
- This invention relates in general to storing information and, more specifically, to storing information on a network.
- ISPs Internet service providers
- upstream bandwidth is limited to a fraction of the downstream bandwidth by the Internet service provider.
- Limited upstream bandwidth is further constrained by peak loading conditions in oversubscribed bandwidth situations. For example, there is an increased demand on Internet systems just after work that is generally attributed to large amounts of people checking e-mail and browsing the web. This increased demand taxes all users such that each of their network connections is slow. Anything that can reduce bandwidth required during those peak periods is greatly desired.
- FIG. 1 is a block diagram of an embodiment of a content distribution system
- FIG. 2 is a block diagram of an embodiment of an active directory portion of the content distribution system
- FIG. 3A is a block diagram of an embodiment of an origin server portion of the content distribution system
- FIG. 3B is a block diagram of an embodiment of an external origin server portion of the content distribution system
- FIG. 4A is a block diagram of an embodiment of a content exchange portion of the content distribution system
- FIG. 4B is a block diagram of another embodiment of a content exchange portion of the content distribution system.
- FIG. 4C is a block diagram of an embodiment of a content exchange site including multiple content exchange servers
- FIG. 5 is a block diagram of an embodiment of a client computer portion of the content distribution system
- FIG. 6 is a block diagram of an embodiment of a content distribution system
- FIG. 7 is a block diagram of another embodiment of the content distribution system that has two types of content exchanges
- FIG. 8 is a block diagram of yet another embodiment of the content distribution system
- FIG. 9 is a flow diagram of an embodiment of a process for populating the captive content exchange that has available storage capacity
- FIG. 10 is a flow diagram of another embodiment of a process for populating the captive content exchange
- FIG. 11 is a flow diagram of yet another embodiment of a process for populating the captive content exchange
- FIG. 12 is a flow diagram of an embodiment of a process for populating a distributed storage system with content from an origin server.
- FIG. 13 is a flow diagram of an embodiment of a process for providing a list of content exchanges to a client computer.
- the present invention includes techniques for preloading content exchanges with content objects.
- the content exchanges that are preloaded are associated with client computers and origin servers. Some or all of the content objects on origin servers are loaded on the associated content exchanges.
- a triggering event such as low bandwidth utilization into the content exchange, causes the content exchange to load content objects.
- the content distribution system 100 includes an active directory 104 , one or more origin servers 108 , one or more client computers 112 , one or more content exchanges 116 , one or more external origin servers 118 , one or more unassociated origin servers 106 , the Internet 120 and a crawling directory 124 .
- a particular client computer 112 interacts with the active directory 104 to select a content object for download.
- the object can be played during download if it is streaming media or can be stored for playback at a later time.
- the content object could be any type of information, such as audio, video or data, that is available for download from a network.
- the request for the content object is forwarded to the appropriate origin server 108 along with preference information from the client computer 112 .
- the origin server 108 decides where the object is downloaded from. In order to provide sufficient QOS, any of the content exchanges 116 or even the origin server 108 itself could provide the object.
- the active directory 104 can be the interface that the client computer 112 uses for selecting a content object.
- Software for both the origin server 108 and optionally for the client computer 112 can be downloaded from the active directory 104 to enable the content distribution system 100 .
- Either a directory interface page or a search interface page in the active directory 104 may be used to determine the content object desired for download.
- the interfaces are maintained in an active manner to avoid broken links to content objects on the origin servers 108 .
- the active directory 104 can provide a path back to the proper origin server 108 that originated the content object.
- Other embodiments could have multiple active directories. Users of the system could be divided amongst the several active directories to distribute the loading among the active directories. Additionally, the other active directories could be used for redundancy such that if one active directory were offline, the others would absorb the loading.
- the origin server 108 serves as the source of a content object, directs a user to a preferred source of the content object and provides directory information to the active directory 104 .
- Content objects are introduced to the system 100 by origin servers 108 . Introduction involves selection by an origin server administrator of the content objects to make available to the active directory 104 . The administrator is person or system that manages the origin server 108 . The content objects could include previously stored information or a streaming feed of information. According to a predetermined cycle, the origin server 108 provides a catalog of the selected information that is updated as the content on the origin server 108 changes.
- the origin server 108 determines the preferred source to direct the client computer 112 to in order to download the content object.
- the preference list of the client computer 112 , the loading of the content exchanges and the location of copies of the content object are all considerations of the origin server 108 in redirecting the client computer to the preferred source of the information. That source could be the origin server 108 itself or one of the content exchanges 116 .
- the user directs the client computer 112 to the location to find the desired content object and subsequently download that object.
- the client computer 112 determines the content exchanges 116 that can deliver content with the adequate QOS.
- the process of determining a content exchange 116 with adequate QOS involves, for example, receiving test information from the content exchanges 116 who are likely to produce the best results and preparing a preferred list based upon those test results.
- the user can modify the preferred list of content exchanges 116 if a customized approach is desired.
- the preference information is used to provide adequate QOS.
- Unassociated content servers 106 are servers on the Internet that are not formally associated with the system 100 .
- the content exchanges 116 will still cache the content objects from the unassociated content servers 106 to provide enhanced QOS to the client computers 112 .
- the users of the client computers 112 will compensate the content exchange owners for the enhanced QOS.
- the external origin servers 118 can be additional sources of content objects available to the client computer 112 .
- external origin servers 118 are coupled to a content exchange(s) 116 .
- the content objects on the external origin servers are mirrored on the distributed content exchanges to enhance distribution without overly taxing the external origin server.
- Client computers 112 requesting content objects from an external origin server 118 is transparently redirected to a content exchange 116 to fulfill the request for that content object.
- the content exchanges 116 are storage repositories that cache content objects. A number of these content exchanges 116 are distributed to different points of the Internet 120 to cache content objects. In this way, any client computer 112 is likely to have a cache close to it on the Internet 120 . Information can be cached based upon a number of considerations, such as the desirability of information to users, as a service to origin servers 108 who want their content readily available to users, as a service to users who want improved QOS, or to offload upstream bandwith. Grouping of the content exchanges 116 could be in clusters or individually to service the demand of client computers 112 for content objects.
- an origin server 108 may refer a client computer 112 request for a content object to a content exchange 116 for fulfillment of the request.
- a request by the content exchange 116 to other content exchanges is made for that content object. If no other content exchanges 116 have the content object, the active directory 104 is queried for the origin server 108 , unassigned origin server 106 , or external origin server 188 who is the source of the content object and the content object is downloaded from there to the content exchange 116 .
- the client computer 112 While the content exchange 116 is gathering the content object, the client computer 112 is receiving any initial portions of the content object that are available.
- the content object could be stored in pieces on several content exchanges 116 and, under those circumstances, the requesting content exchange 116 will retrieve those pieces to reassemble the whole content object as needed by the client computer 112 .
- a crawling directory 124 is used to supplement the catalog information reported by all the origin servers 108 .
- the active directory 104 could display content objects available from the origin servers 108 as well as other content objects uncovered by the crawling directory 124 that resides on unassociated origin servers 106 or external origin servers 118 .
- crawling directories 124 catalog the content objects and other information they encounter. For example, a keyword search of the crawling directory 124 by way of the active directory 104 can direct the user to a content object on an external origin server 118 or unassociated origin server 106 that is not available from any origin server 108 .
- One of the content exchanges 116 could be selected by the active directory 104 to cache the content object as the client computer 112 downloads it. Although only one crawling directory 124 is used in this embodiment, other embodiments could use a number of crawling directories to offer additional search results.
- the Internet 120 is comprised of servers linked together by nodes. Data is divided into packets that travel through the Internet 120 by hopping from one node to the next until the destination is reached. Each packet may take a different route through the Internet and arrive at the destination at a different time. Additionally, some packets can be lost during travel through the Internet 120 as the bandwidth of any node saturates. As the number of hops between the source of a content object and the destination increases, so does the likelihood of excessive delay and packet loss.
- the smallest bandwidth between any two nodes in the path defines the maximum bandwidth of that path.
- the bandwidth from the Internet 120 to the client computer i.e., the “last mile”
- the bandwidth from the Internet 120 to the client computer has the least bandwidth allocation.
- some other hop between nodes has the smallest bandwidth. Caching the content object in a content exchange 116 with a minimal amount of hops between the content exchange 116 and the client computer 112 improves the likelihood of adequate or sufficient QOS.
- Downloading the content object at a desired data-rate that does not exceed the data-rate of the client computer to the Internet 120 is adequate QOS.
- the maximum QOS a user can expect is defined by the speed of their network connection, the processing power of their computer and other factors.
- the minimum QOS is subjectively defined by the user based upon the quality they desire within certain limits. For example, a user with a 400 Kbps network connection and a fast computer may have a choice of a 28 Kbps, 56 Kbps, or 128 Kbps stream for an audio clip from which the user chooses the 128 Kbps stream. So long as the datarate provided by the client computer is in the range of 128-400 Kbps, adequate QOS is possible for that stream.
- the above embodiment primarily uses the Internet 120 as a connection between the various blocks, other embodiments could use private links outside or in parallel to the Internet 120 .
- the private links could allocate bandwidth sufficient for improved QOS or use other techniques to improve QOS.
- content objects on external origin servers 118 or unassociated origin servers 106 could benefit from the system 100 to the extent caching, encryption and compression is provided.
- FIG. 2 a block diagram of an embodiment of an active directory portion 104 of the content distribution system 100 is shown. Included in the active directory 104 are a dynamic domain name server (DNS) 204 , a server manager 208 , a directory page 212 , a search page 216 , a download page 220 , a subscriber database 224 , a server database 228 , a content exchange database 232 , and a route database 234 .
- DNS dynamic domain name server
- the content distribution system 100 interacts with the active directory 104 to provide directory information to the user and assist in downloading a content object to the user.
- Both the user of the client computer 112 and the administrator of the origin server 108 are subscribers to the content distribution system 100 .
- Software is downloaded from a download page 220 to the user and/or administrator.
- the software for the client computer 112 is optional in some embodiments and improves QOS when installed.
- the software for the origin server 108 allows the active directory 104 to update the content available on the system 100 and to direct the client computer 112 to a preferred source for receiving that content.
- the client computer 112 attaches to the domain of the active directory 104 to find a desired content object.
- the user may use a directory page 212 or search page 216 to find the content object.
- the search page 216 may be a traditional boolean search engine that accesses a catalog of the content objects provided by all origin servers 108 as well as information gathered from the crawling directory 124 .
- Other embodiments could only display information from the crawling directory 124 after a search of the content from the origin servers 108 is unsuccessful or omit information from the crawling directory 124 altogether.
- the catalog of content objects for all origin servers 108 is maintained in the server database 228 .
- the directory page 212 organizes the possible content objects in a hierarchy of categories that are organized by subject. For example, the first page might show a number of topics of general interest where the user selects sports. In the next page, which is one level down in the hierarchy, a number of sports are displayed where the user selects football. Down another level in the hierarchy, the user may select the San Diego ChargersTM to see another page of related content object links. Each link points to the origin server 108 that originated the content object.
- the administrator categorizes the content on the origin server 108 to allow the directory page 212 to present it properly.
- the administrator can choose a category for content objects in an HTML SSI tag associated with that content object.
- This classification is harvested and stored on the active directory to allow presenting content objects in different categories.
- a moderator may describe and arrange content objects in the categories for the directory page 212 . For example, the moderator could mark certain content objects for more prominent display and/or add a review and/or synopsis for the content objects.
- the server manager 208 maintains information on all client computers 112 , all origin servers 108 , all external origin servers 118 , all content exchanges 116 , and all content objects on origin servers 108 .
- the information related to client computers 112 and origin servers 108 is maintained in the subscriber database 224 .
- the full name, a login name, a password, a unique identifier, token credits available, and other information is maintained in the subscriber database 224 for each user associated with a client computer 112 .
- This database 224 also holds the last time the origin server 108 was verified, an Internet Protocol (IP) address for the origin server 108 , the port the content manager server runs upon, on-/off-line status of the origin server 108 , a banner ad URL, a name for the origin server 108 , a description of the origin server 108 , the credits or tokens needed to use the origin server 108 or other billing model, and the number of connections or viewers allowed at one time.
- IP Internet Protocol
- Information on content objects for all origin servers 108 is maintained in the server database 228 .
- the origin server name, content object file name and path are stored along with category information, a brief description and keywords.
- the server database 228 is queried to provide content selections to the user during navigation of the directory and search pages 212 , 216 .
- the server manager 208 periodically interacts with the origin server 108 to get the most recent changes to the catalog of content objects and to determine if the origin server 108 has gone offline. Whenever an origin server 108 goes offline, the entries in the server database 228 corresponding to that origin server 108 are removed and the status information in the subscriber database 224 is updated.
- the entries in the server database 228 remain even after the origin server 108 goes offline.
- the status is updated to reflect that the content associated with the origin server is unavailable, but the information remains stored in the server database 228 . If the status is updated to online, the information is once again presented to users that are searching for content objects.
- an origin server 108 may indicate to the active directory 104 that it is going offline for a period of time. Presuming the period of time is short, the active directory can keep information in the server database 228 without presenting it to users.
- a list of the content exchanges 116 available to the system 100 is maintained by the server manager 208 in the content exchange database 232 .
- the content exchange database 232 can include a list of IP addresses for all possible content exchanges 116 within the content distribution system 100 .
- the content exchange database 232 can include a number of content exchange fields associated with each content exchange 116 .
- fields associated with each content exchange 116 in the content exchange database 232 can include a content exchange identifier, a content exchange site, a content exchange provider, a content exchange name, a content exchange location, a content exchange status, an icon, or any other desired information.
- the content exchange identifier and content exchange site identify a unique content exchange 116 at a particular content exchange site.
- the content exchange provider is an indicator of the party responsible for the content exchange, such as XYZ company.
- the content name is a domain name and the content exchange location can be geographic coordinates for a content exchange 116 .
- the content exchange database 232 includes a content exchange identifier, a content exchange site, a content exchange IP address, a content exchange provider, a content exchange name, a content exchange location, and an icon for each content exchange 116 in the content exchange database 232 .
- the content exchange database 232 can be regionalized or partitioned by a variety of methods including, but not limited to, improved QOS criteria or subscription services criteria. Additionally, the content exchange database 232 can include a listing of alternative active directories 104 , origin servers 108 , or any other useful information.
- the content exchanges 116 in the system 100 regularly provide status to the server manager 208 . As content exchanges 116 become available or unavailable, their operational status is reported to the server manager 208 and recorded in the content exchange database 232 .
- the content exchange database 232 can include additional status information including content exchange 116 loading, capacity, utilization, health, etc.
- the routing database 234 includes a list of external origin servers 118 .
- the routing database 234 includes identification, status and organization information related to the external origin servers 118 .
- Identification information can include an IP address and a domain name for an external origin server 118 .
- Status information can include availability, loading or other status about the external origin server.
- Organization information can include a list of alternative external origin servers 118 .
- the routing database 234 includes an IP address and a domain name for each external origin server 118 .
- identifying an external origin server 118 in the routing database 234 is the mechanism for associating the external origin server 118 with the content distribution system 100 .
- each external origin server 118 in the routing database there are a list of user names that are allowed to use a content exchange 116 to access the information on the external origin server 118 .
- the user name is unique to the user of the client computer 112 .
- a list of external origin servers 118 a client computer can route through a content exchange 116 is provided to the client computer 112 .
- the client computer 112 uses the information from the routing database to redirect user requests for an external origin server 118 to a content exchange 116 .
- bandwidth is offloaded from the external origin server 118 to the content exchange 116 .
- the user may compensate the owner of the content exchange 116 and/or the administrator of the origin server 108 for this enhanced service.
- the dynamic DNS 204 provides an origin server name for each IP address for the origin servers 108 .
- the origin server name uniquely identifies the origin server 108 on the Internet 120 . This information is maintained in the subscriber database 224 .
- the content exchange 116 does not know the IP address of the origin server 108 that provided the content object to the content exchange 116 , but knows the origin server name.
- the dynamic DNS 204 is queried to determine the IP address or domain name of the origin server 108 that is the source of the content object. If a domain name is retrieved from the dynamic DNS 204 , the IP address corresponding to that domain name is retrieved from a DNS.
- FIG. 3A a block diagram of an embodiment of an origin server portion 108 of the content distribution system 100 is shown.
- the origin server 108 is managed by an administrator and provides one source of content objects to the content distribution system 100 .
- QOS is provided by the origin server 108 directing the client computer to a content exchange 116 that can adequately deliver the desired content object.
- Included in the origin server 108 are a content source 304 , a content server 308 , a content manager 312 , a local content catalog 316 , a content location database 320 , content exchange information 324 , and a health check 330 .
- Content is provided to the origin server 108 by a content source 304 .
- the content source 304 could include a live web cam, a video or audio feed, a data object, a data stream, a video tape or audio tape, an optical or magnetic disk, or any other content delivery mechanism.
- Content objects are delivered by the content source 304 to the content server 308 for possible distribution to the system 100 .
- Time and date information is maintained in each content exchange 116 for the content objects or portions of content objects maintained therein.
- the time and date information allows distinguishing content objects which may have the same origin sever name, path name and file name.
- Other embodiments could alternatively use any unique code such as a checksum, CRC or hash to uniquely identify a content object.
- All content objects of the origin server 308 are stored on the content server 308 .
- the administrator can select a content object or groups of content objects for publishing to the system 100 while leaving other content objects on the content server 308 such that they are unavailable to the system 100 .
- Some content objects are discreet files, but others are streams of content produced, for example, by live web cams.
- the software that runs the content server 308 may be integrated with the software of the content manager 312 .
- the content manager 312 publishes the desired content objects to the system 100 and directs users to the preferred content exchange 116 for downloading content objects associated with the content manager 312 .
- the content manager 312 selects content objects or groups of content objects by filename, directory or drive volume for publishing to the active directory 104 .
- Some content objects on the content server 308 may be excluded from publishing such that they are not available to the system 100 .
- the content objects selected for publishing to the system are maintained in a local content catalog 316 .
- Entries in the local content catalog 316 are kept current by the content manager 312 as the objects corresponding to those entries may become unavailable or updated.
- the content object file name and path are stored along with category information, a brief description and keywords.
- the local content catalog 316 is sent by the content manager 312 to the active directory 104 for entry to the server database 228 .
- changes to the local content catalog 316 are sent to the server database 228 to keep the directory information as current as possible. Updates could happen on a regular interval such as every two minutes and/or whenever a change in the local content catalog is made.
- the content manager 312 also knows the location of all portions of content objects associated with that content manager 312 . Upon attaching to the system 100 , the content manager 312 contacts each of the content exchanges 116 for status. Each of the content exchanges 116 periodically reports on its content object or content object portions to the originating content managers 312 . Armed with this information, the content manager 312 can direct a client computer 112 to a content exchange 116 that may have some or all of the desired content object available for download.
- Location information for content objects that is reported by all the content exchanges 108 is maintained by the content manager in the content location database 320 .
- the content manager 312 can determine the content exchanges 116 that contain a content object or a portion of a content object.
- the presence of the content object in a particular content exchange 112 can affect the routing determination.
- the content exchange information store 324 holds information on all active content exchanges 116 .
- the content exchange database 232 in the active directory 104 is downloaded into the content exchange information store 324 .
- All the content exchanges 116 listed in the content exchange information store 324 are queried after power-up for status information that is retained as content exchange information 324 .
- the status information includes the number of concurrent links used, total number of concurrent links allowed, bandwidth utilization, and cache chum rate.
- the chum rate of the cache is the amount of time unused data remains in the cache and is indicative of the loading of the cache. For example, data is usually flushed out of the cache quickly for content exchanges 116 that are busy relative to the amount of storage in the cache. However, some embodiments that could have sticky content objects that remains pinned in the content exchange 116 for a period of time regardless of use.
- the content manager 312 intelligently redirects the client computer 112 wanting a content object to the preferred source for that object.
- Preference information provided from the client computer 112 is used to determine the sources of the content object preferred by the client computer 112 . This information is used along with the current locations of the content object and the loading of the possible content exchanges in order to direct the client computer 112 to the preferred content exchange 116 for download of the content object.
- the content manager 312 can regulate access to content objects.
- a login dialog can be presented if the administrator has secured the content object.
- the user may enter a user name and/or password in the login dialog to enable redirection of the client computer 112 to a source for the content object.
- This user name and/or password is in addition to any required for the active directory 104 .
- the user name and/or password or login information is checked against a list of acceptable login information previously stored on the origin server 108 . Access to a whole origin server 108 or a volume, a directory or a content object on the origin server 108 may be regulated in this manner.
- Some embodiments allow the origin server 108 or active directory 104 to preload content objects on a content exchange 116 .
- the requests for content objects are monitored to determine desirability. Desirability information, billing information, size, and/or other considerations are used to determine which content objects to preload on a content exchange 116 .
- Either the origin server 108 , active directory 104 or content exchange 116 can request the content objects from a content exchange 116 to preload them there.
- the content objects could be requested for a content exchange 116 to keep them loaded on the content exchange 116 such that they are not unloaded because of inactivity.
- Other embodiments could designate the content objects as sticky content objects as described above.
- the health check 330 can be either a hardware or software application which provides operational characteristics of an associated origin server 108 .
- the health check 330 provides a single indication of origin server 108 status.
- the single indication is a normalized value between zero and one indicating a combination of origin server characteristics. For example, it could include a CPU load, a CPU temperature, a number of concurrent connections, and/or a number of requests an origin server is facilitating.
- the health check 330 could monitor characteristics of a content exchange 116 while running on another content exchange 116 or origin server 108 .
- FIG. 3B a block diagram of an embodiment of an external origin server portion 118 of the content distribution system 100 is shown.
- the external origin server 118 differs from the origin server 108 in that the external origin server 118 does not have content manager software installed upon it. Included in the external origin server 118 are a content server 308 and a content source 304 .
- the administrator of the external origin server 118 determines one or more client computers 112 authorized for receiving content objects through a content exchange 116 .
- the routing database 234 is updated by the administrator to allow individual client computers 112 to access the content objects through a content exchange 116 .
- a web page on the active directory provides an interface to entering information on client computers 112 into the routing database 234 .
- Other embodiments could automate the interface between the external origin server 118 and the routing database 234 such that users are automatically added to the routing database 234 upon signing up with the external origin server 118 .
- the updates to the routing database 234 are downloaded and stored locally by client computer 112 . Subsequent attempts to access the external origin server 118 are redirected to a content exchange 116 to service that request. Redirection in this way allows an external origin server 118 to redirect client computers 112 to a content exchange 116 without assistance from content manager software.
- An external origin server 118 may have one or more content exchanges 116 assigned to carry content objects for the external origin server 118 .
- the routing database 234 could redirect subscribing client computers to one or more of these content exchanges 116 . If the client computer were allowed to use two or more of these content exchanges 116 , a client-side routing analysis would be performed on the two or more content exchanges to allow ranking of the relative QOS between them.
- the content objects of an external origin server 118 can be preloaded to a content exchange(s) allocated to provide those content objects.
- the active directory 104 can crawl the external origin server 118 to determine the content objects available from that server 118 .
- the available content objects may be added to the crawling directory 124 .
- the active directory 104 requests each content object from the associated content exchange(s) in order to cause loading of each content object on the associated content exchange(s). In this way, content objects are preloaded on the associated content exchanges.
- FIG. 4A a block diagram of an embodiment of a content exchange portion 116 of the content distribution system 100 is shown.
- the content exchange 116 caches content objects requested by client computers 112 under the control of the content manager 312 .
- Included in the content exchange 116 are a tracking system 402 , and a content node 406 .
- the tracking system includes a content tracker 404 , a health check 426 , status information 420 , a local content catalog 416 , and an origin server database 424 while the content node 406 includes a content controller 408 and a content store 412 .
- the health check 426 can be either a hardware or software application which provides operational characteristics of an associated content exchange 116 .
- the health check 426 provides a single indication of content exchange 116 status.
- the single indication may be a normalized value between zero and one indicating a combination of content exchange characteristics including, for example, a CPU load, a CPU temperature, a number of concurrent connections, and a number of requests a content exchange is facilitating.
- the health check 426 could monitor characteristics of a content exchange 116 while running on another content exchange 116 , origin server 108 or other location.
- the content store 412 holds the content objects available for download to the client computers 112 from that content exchange 116 .
- the name of the origin server 108 providing the content object along with path information and the filename is stored with the content object in the content store 412 .
- the client computers 112 connect to the content store 412 and download the content object file or data stream.
- old content objects are typically removed.
- the age of a content object relates to the last time a content object was accessed. Some content objects on the store 412 never age such that they stay in the store 412 for a predetermined time.
- An origin server 108 could arrange for the content exchange 112 to store a content object for a predetermined period of time.
- the content object may not be currently loaded in the content store 412 .
- the content store 412 notifies the content controller 408 of the unfulfilled request for the content object.
- the content controller 408 locates missing content objects or portions thereof in other content exchanges 116 or from the content server 308 that originated the content object.
- the missing content objects are loaded into the content store 412 by the content controller 408 such that the client computer 112 can download this information.
- the content controller 408 When a content object is missing from content store 412 , the content controller 408 first checks with other content exchanges 116 to determine if the object is available. If no content exchange 116 has the desired content object, the content server 308 that originated the information is queried for the content object. The content store 412 does not include the IP address for the originating content server 308 so the dynamic DNS 204 is queried for that information. Given the origin server name, the dynamic DNS 204 provides the IP address such that the content controller 408 can request the content object from the proper content server 308 .
- the content tracker 404 reports to the system 100 the current items in the content store 412 and status information for the content exchange 116 .
- the local content catalog 416 records the origin server name, path and filename for each content object or portion of a content object in the content store 412 . As new items are added to and old items are removed from the content store 412 , the local content catalog 416 is updated.
- a content manager 312 connects to the system 100 , a query is made to all content trackers 404 to determine what portions of content objects are stored on the content stores 412 .
- the initial query provides a baseline to which the content tracker 404 updates as changes are made to the various content stores 412 .
- the changes are sent directly to each of the content managers 312 that has content stored in the content store 412 .
- the dynamic DNS 204 is used during this process to determine the IP address corresponding to the origin server name for each content object.
- the content tracker 404 also provides status information 420 for the content exchange 116 to the content mangers 312 .
- the status information 420 is sent periodically to each of the content managers 312 as a broadcast or multicast, for example, every five minutes and/or when changes occur.
- the status information 420 could include the number of concurrent links to the content exchange currently in use, the total number of concurrent links allowed, the bandwidth utilization, the cache churn rate, and/or other information.
- the status information is posted to a central location that the content manager 312 can query when determining where to send a client computer 112 for a downloading a content object.
- the content tracker 404 maintains the origin server database 424 to track the origin servers 108 active in the system 100 . After attaching to the system, all origin servers 108 identify themselves to the content trackers 404 . The content trackers 404 record the origin server name and IP address in the origin server database 424 . A query to the dynamic DNS provides the IP address for a given origin server name. If an origin server 108 notifies the content tracker 404 of impending unavailability or if the content tracker 404 cannot contact a particular origin server, the entry for that origin server is removed from the origin server database 424 . Additionally, the content corresponding to that origin server 108 may be purged from the content store 412 , and the local content catalog 416 is updated. In some embodiments, the content object and content object portions are not purged, but are simply tagged for deletion as the storage space is requested.
- the content controller 408 can be instructed by the system 100 to acquire and retain predetermined content objects in the content store 412 .
- Content objects that are anticipated to be wanted can be preloaded in preparation for the demand.
- the desirability of a content object can be determined by monitoring click-throughs to those content objects from the search and directory pages 212 , 216 .
- content objects related to a famous person could be loaded onto content stores 412 immediately before a biography program on the famous person is aired on network television.
- users could subscribe to a service that loads content objects to some content exchanges 116 .
- a scheduled network program could be loaded to coincide with a TV broadcast the user could view over the Internet 120 in lieu of the TV broadcast. In this way, the content would be available without delay to the subscribed users.
- FIG. 4B a block diagram of another embodiment of a content exchange portion 116 of the content distribution system 100 is shown.
- This embodiment includes multiple content nodes 406 coupled to a single tracking server 402 .
- a content bus 428 allows content nodes 406 to check each others content stores 412 for missing content objects.
- the content bus 428 could also couple to other content notes in other locations.
- the content bus 428 may or may not travel in part over the Internet 120 .
- FIG. 4C a block diagram of an embodiment of a content exchange site 432 including multiple content exchange servers 116 is shown. Even though the content exchange site 432 includes multiple content exchange servers 116 , it appears to the system a single content exchange 116 . The load of the content exchange site 432 is distributed among the constituent content exchange servers 116 .
- a switch 436 such as a layer four switch, distributes the content object requests to the content exchanges 116 and aggregates the spooled responses to the Internet 120 .
- FIG. 5 a block diagram of an embodiment of a client computer portion 112 of the content distribution system 100 is shown.
- the client computer 112 communicates to the Internet 120 in order to deliver content to a user.
- Included in the client computer 112 are a viewer object proxy 504 , a content processing program 508 , preference information 512 , a network interface 516 , and hosted server routing 520 .
- the content processing program 508 is typically software that interprets or processes a content object downloaded from the Internet 120 .
- Examples of content processing programs 508 include web browsers, file transfer protocol (FTP) software, gopher software, news (NNTP), mail programs, streaming media players, non-streaming media players, and other software.
- FTP file transfer protocol
- NTP news
- mail programs streaming media players, non-streaming media players, and other software.
- the Internet communication from content processing program 508 that is normally sent directly to the Internet is redirected to the viewer object proxy 504 .
- the viewer object proxy 504 serves as intermediary between the Internet 120 and the content processing program 508 . After installation of the viewer object proxy 504 , it determines its general location relative to known points on the Internet 120 . Content exchanges 116 that are reasonable candidates for providing sufficient QOS are tested to determine the number of hops necessary to reach each content exchange 116 and the latencies between each content exchange 116 and the viewer object proxy 504 . A weighting of QOS factors, such as the number of hops and bandwidth achieved, is recorded as preference information 512 and is passed as meta-data to the content manager 312 in an HTTP header.
- meta-data could travel through a dedicated port, an IP address, a URL, a header, or other logical channel.
- the preference information 512 is the result of network analysis performed from the client computer perspective 112 .
- the preference information 512 is communicated to the content object manager 312 which in turn selects an appropriate content exchange 116 for the client computer 112 .
- the preference information 512 is updated using automated tests or is updated manually by the user. Subsequent tests take into account the previous results to efficiently consider preferred content exchanges. For example, the first analysis may check one hundred content exchanges, but a subsequent analysis could eliminate the poor performing content exchanges such that only fifty are analyzed.
- the preference information 512 includes a list of content exchanges 116 and their associated QOS values resulting from client-side network analysis.
- the multiple pathways are separated by port, IP address, server identification (ID), and/or other mechanisms.
- Client-side network analysis could be used to determine a QOS value associated with each pathway to an external origin server 118 or any other source of a content object that could also have multiple pathways.
- the origin server name is provided to the viewer object proxy 504 .
- the origin server name is used for the viewer object proxy 504 to query the dynamic DNS 204 for the IP address of the origin server 108 .
- the content processing program 508 is redirected to the content manager 312 for the desired content object.
- the content manager 312 is passed the preference information 512 to allow routing the client computer 112 to the appropriate content exchange 116 .
- the preference information 512 includes the preferred ten content exchanges, but the amount of preferred content exchanges could be adjusted by the user.
- the viewer object proxy 504 can be HTTP-specific but protocol independent for routing information. Thus, routing information is transferred according to HTTP, but the actual routing information is protocol independent. However, one skilled in the art would recognize that the viewer object proxy 504 can also be configured to work with other network protocols as needed. For example, the viewer object proxy 504 can also be configured to operate in accordance with FTP, NNTP, RTP, RTSP, SMTP, or SHOUT etc.
- the client computer 112 includes a host server routing database 520 .
- This host server routing database 520 can include information related to external origin servers 118 accessible by the client computer 112 .
- host server routing database 520 is a subset of the entries in the routing database 234 found in the active directory 104 .
- the client computer 112 includes a network interface 516 that connects the viewer object proxy 504 to the Internet 120 .
- network interfaces 516 include analog modems, DSL modems, ISDN, cable modems, satellite modems, cellular modems, power line modems, line-of-sight microwave modems, line-of-sight laser modems, etc.
- the client computer is associated with a home user.
- the client computer could serve digital movies to a theater or provide content objects to a corporate network user, a hotel patron or apartment complex.
- FIG. 6 a block diagram of an embodiment of a content distribution system 600 is shown. This figure depicts data flow between data blocks without showing transport over the Internet 120 or any other network. It is to be understood, however, that the Internet 120 or another packet switched network is used in some embodiments. Also, the figure is somewhat simplified in that some blocks from FIGS. 2 - 5 and the external origin server(s) 118 and crawling directory 124 are not included to simplify the FIG. 6.
- the network interface 516 is the connection to the Internet 120 for the client computer 112 .
- the client computer 112 connects to the directory and search pages 212 , 216 to allow the user to select content objects for download.
- redirection of the client computer 112 from the active directory 104 to the appropriate origin server 108 uses the dynamic DNS 204 .
- Preference information 512 is passed to the content manager 312 to assist its selection of the source for the content object.
- the content object is downloaded from one of the content exchanges 116 or from the content server 308 .
- the active directory 104 interacts with the other modules in the system 600 .
- the client computer 112 accesses the directory and search pages 212 , 216 to select a content object.
- the content tracker 404 and content manager 312 respectively provide status and catalog information to the server manager 208 .
- Account information is provided to the server manager 208 by the administrator of the origin server 108 and by the user of client computer 112 to maintain the subscriber database 224 . Redirection from the origin server name to the IP address of the origin server 108 is provided to the viewer object proxy 504 , the content tracker 404 and the content controller 408 by the dynamic DNS 204 .
- the origin server 108 communicates with the server manager 208 , the client computer 112 , the content tracker 404 , the content store 412 , and the content controller 408 .
- the local content catalog 316 is provided to the server manager 208 from the content manager 312 in order to maintain the server database 228 with current content information.
- Preference information 512 is provided to the content manager 312 from the client computer 112 to facilitate selection of a source of the content object.
- the content tracker 404 interacts with the content manager 312 to know what content objects are stored on the content exchange 116 . Content objects are read from the content server 308 by either the content store 412 or the client computer 112 .
- the content exchanges 116 interact with the other modules in the system 600 as well. Status information is provided to the active directory 104 and/or the content manager 312 .
- the dynamic DNS is used by both the content controller 408 and the content tracker 404 to find the IP address of an origin server 108 that contains a content object.
- a selected content exchange may contact other content exchanges when an object is needed for the content store 412 . If the other content exchanges do not have the content object, the content controller 408 requests the object from the content server 308 for delivery to the selected content store 412 .
- FIG. 7 a block diagram of another embodiment of the content distribution system 700 is shown that has two types of content exchanges 702 , 704 .
- This embodiment includes public content exchanges 702 and captive content exchanges 704 .
- One or more associated client computers 708 and one or more associated origin servers 712 are grouped with the one or more captive content exchanges 704 .
- the public content exchanges 702 are available to source content objects to any of the client computers 112 or any of the associated client computers 708 .
- Those content objects stored on the public content exchanges 702 could originate from any of the unassociated origin servers 106 , origin servers 108 , external origin servers 118 , or associated origin servers 712 .
- the captive content exchanges 704 are not fully available to the system 700 in the same way as the public content exchanges 702 are.
- the captive content exchanges 704 cache content objects originating from associated origin servers 712 . Those cached objects are provided to either the associated client computers 708 or client computers 112 .
- Content objects originating from the unassociated origin servers 106 , origin servers 108 and external origin servers 118 are cached for associated client computer 708 , but not for client computers 112 .
- the client computers 112 cannot rely on the captive content exchanges 704 for caching content objects that were sourced from any unassociated origin servers 106 , origin servers 108 or external origin servers 118 . Accordingly, the preference information 512 for the client computer 112 only includes public content exchanges 702 and not captive content exchanges 704 .
- the captive content exchanges 704 in this embodiment are linked to the public content exchanges 702 such that missing content objects or portions of content objects may be passed between content exchanges 702 , 704 when requested by a user.
- a content object is requested from the preferred content exchange 702 , 704 a local search is first performed for the content object or any portion of the content object. If that search fails, the other content exchanges 702 , 704 are searched before resorting to requesting the content object from the origin server 106 , 108 , 118 , 712 that first provided the content object to the system 700 .
- the captive content exchanges 704 could be located in the central office, headend, ISP location, or nodes where the Internet bandwidth begins to travel the “last mile” or final leg to the associated client computer 708 .
- MSO cable multi-system operator
- DOCSIS DOCSIS modems
- FIG. 8 a block diagram of yet another embodiment of the content distribution system 800 is shown.
- This embodiment demonstrates how the captive content exchange 704 , associated client computers 708 and associated origin servers 712 can be virtually connected through the Internet 120 .
- These functional blocks 704 , 708 , 712 could be coupled in any way.
- the captive content exchanges 704 could be coupled to the associated client computers 708 through a hybrid fiber/cable distribution system.
- the associated origin servers 712 could be linked to the captive content exchanges 704 through the Internet 120 .
- FIG. 9 a flow diagram of an embodiment of a process 900 for populating captive content exchanges 704 that has available storage capacity is shown.
- the depicted process 900 picks-up in step 904 where a test detects bandwidth utilization below a threshold.
- the bandwidth measurement for this test could be the bandwidth from all associated origin servers 712 to the captive content exchange 704 in this embodiment or could be the bandwidth from a single associated origin server 712 to the captive content exchange 704 in other embodiments.
- step 908 a determination of which origin servers are associated origin servers 712 is made.
- the active directory 104 could be queried for this information or the information could be maintained local to the captive content exchange 704 .
- each local content catalog 316 is queried to determine the content objects available on that associated origin server 712 in step 912 .
- step 916 the content objects from all the associated origin servers 712 are analyzed to determine a ranking between the content objects.
- the popularity of the content objects controls the ranking. The number of times a content object is downloaded over the last day is the algorithm used for determining popularity, however, other embodiments could use other time periods. Although this embodiment uses popularity for ranking, other embodiments could also use size of the content object, price of the content object, and/or other factors when determining the ranking.
- the associated origin servers 712 or captive content exchanges 704 could monitor popularity by respectively determining the number of click-throughs or hits for a content object. Click-throughs of the user of the client computer can be monitored with CGI scripts that redirect a content object selection back to the associated origin server 712 . Once redirected back, the click-through is recorded and the client computer 112 , 708 is redirected to the content exchange 702 , 704 that serves as the source of the content object.
- step 920 a determination of how much cache space in the content store 412 will be allocated to storing the popular content objects. This embodiment uses half of the content store 412 to store popular content, but other embodiments could use other fractions of the capacity of the content store 412 .
- step 922 A determination is made in step 922 as to whether any of the content objects are stored in the content store 412 already. To determine what is already stored, the local content catalog 316 for the associated origin server 712 is cross referenced against the local content catalog 416 for the captive content exchange 704 to determine which of the content objects are not already stored in step 922 . Those content objects that are already stored are marked as not needing any reload in step 924 .
- the highest ranked content objects that will fit into the allocated cache space and are not already loaded are determined in step 928 . Those content objects that will not fit are removed from the list. Starting with the least popular on the ranked list, the content objects that are not already in the content store 412 are requested such that they are loaded onto the content store 412 . The content objects that are already loaded on the content store 412 are moved to the front of the cache when their entry is reached when cycling through the list. In this way, all the popular content objects that will fit are loaded in the cache according to ranking. Those with lower rankings will be pushed out of the back of the cache first if there are no subsequent hits or requests for those content objects.
- each associated origin server 712 is harvested for content objects in a separate process that is run in parallel to other processes harvesting other associated origin servers 712 .
- the bandwidth between a specific associated origin server 712 and the captive content exchange 704 is tested to determine if bandwidth utilization has fallen below a threshold. Once the threshold is crossed, the content objects are loaded onto the captive content exchange.
- other associated origin servers 712 are harvested for content objects.
- FIG. 10 a flow diagram of another embodiment of a process 1000 for populating the captive content exchange 704 is shown.
- a file system rather than a cache is used.
- Content objects loaded into the file system remain until an expiration time. For example, a content object could be loaded one day with an expiration period of one day such that only twenty-four hours later can the file be overwritten.
- step 1004 the space in the file system reserved for preloading is determined.
- the file system space is logically separated from the space used for cacheing.
- Content objects that are stored on the file system should not be redundantly cached.
- step 1002 and 924 entries for files that are already stored in the cache are marked such that they are not reloaded.
- the content objects that will not fit on the file system are removed from the list in step 1008 . Any content objects that are not already loaded and that will fit are loaded in step 1012 .
- the expiration time for all the content objects on the file system is set for one day or some other time period.
- FIG. 11 a flow diagram of yet another embodiment of a process 1100 for populating the captive content exchange 704 is shown.
- the captive content exchange 704 populates itself after becoming available to the system 700 .
- the captive content exchange 704 may populate itself after powering on.
- This embodiment does not determine which content objects are already stored in the cache. Instead, all content objects that are determined to fit are loaded.
- FIGS. 9 - 11 populate captive content exchanges 704 .
- Other embodiments could also populate public content exchanges 702 .
- a process in the active directory 104 would determine the popular content objects on the Internet and where those objects are likely to be requested from the distributed network of public content exchanges 702 .
- the active directory could instruct public content exchanges 702 to preload content such that it is available with enhanced QOS.
- FIG. 12 a flow diagram of an embodiment of a process 1100 for populating a distributed storage system with content from an origin server 106 , 108 , 118 , 712 is shown.
- the origin server 712 populates the captive content exchange 704 when it becomes available to the system 700 if hosting is allowed.
- the depicted process picks-up in step 1204 as the origin server 106 , 108 , 118 , 712 comes online.
- step 1208 a determination is made as to whether there is a captive content exchange 704 associated with the origin server 106 , 108 , 118 , 712 . Where there is no captive content exchange 704 no preloading occurs and processing continues to step 1212 and 1240 where the request for a content object is fulfilled by the preferred content exchange 702 , 704 .
- step 1220 a further determination is made as to whether hosting of the content objects on the captive content exchange 704 is allowed for this origin server 106 , 108 , 118 , 712 .
- a captive content exchange 704 may require compensation for the ability of an origin server 106 , 108 , 118 , 712 to offload its content objects. If hosting is allowed, the popularity of the content objects is determined in step 916 .
- step 1228 the content objects are loaded onto the captive content exchange 704 such that the most popular objects are last to be expired out the back of the cache. Other embodiments could use a file system, with lifetime information specified for each content object as described above.
- step 1220 If hosting is not allowed in step 1220 , conservation of upstream bandwidth is possible by first populating the captive content exchange 704 with the content object. Once the captive content exchange 704 has the content object it can propagate to other content exchanges 702 , 704 efficiently.
- the client computer 112 requests the content from the origin server 106 , 108 , 118 , 712 .
- a determination in step 1232 is performed as to whether the content is already stored in any content exchange 702 , 704 . If the content is already stored in a content exchange 702 , 704 away from the origin server 106 , 108 , 118 , 712 , the client computer 112 is directed to the preferred content exchange 702 , 704 in step 1240 . If needed, the preferred content exchange 702 , 704 can get the content object from any other content exchange 702 , 704 that already has the content object.
- the client computer 112 is directed first to the captive content exchange 704 associated with the origin server 712 .
- the captive content exchange 704 preferentially stores content objects from associated origin servers 712 .
- FIG. 13 a flow diagram of an embodiment of a process 1300 for providing a list of content exchanges 702 , 704 to a client computer 112 , 712 is shown.
- a check for captive content exchanges 704 is performed before providing a list of preferred content exchanges 702 , 704 to the client computer 708 .
- the depiction of the process picks-up in step 1304 where a determination of which captive content exchanges 704 are associated with which associated client computers 708 . These associations are recorded in a central location such as the active directory 104 .
- a client computer 112 , 708 requests a list content exchanges 702 , 704 from the active directory 104 .
- a determination is made as to whether there are any captive content exchanges 704 in step 1312 . If there are captive content exchanges 704 , processing continues to step 1308 where those captive content exchanges 704 are included in the list. In step 1312 , other public content exchanges 702 likely to have sufficient or adequate QOS are added to the list. If there are no captive content exchanges 704 as determined in step 1312 , step 1308 is skipped and the list of preferred content exchanges 702 is assembled without any captive content exchanges 704 .
- the list of preferred content exchanges 702 , 704 is assembled, it is sent to the client computer 112 in step 1316 and stored in the preference information database 512 .
- the client computer 112 analyzes each content exchange 702 , 704 on the list to rank them.
- the captive content exchanges 704 can provide the best QOS to associated client computers 708 .
- QOS is improved by preloading content objects onto a content exchange.
- the content object is passed through the upstream connection between the associated origin server and the captive content exchange in a controlled manner.
- the associated origin server is likely to be less taxed by requests for the content object.
Abstract
According to the invention, a way for loading content objects in a content store on a network is disclosed. In one step, processing waits for a triggering event. It is determined if a first origin server is authorized to store content in the content store. A first content object is loaded from the first origin server onto the content store without a request for the first content object. It is determined if a second origin server is authorized to store content in the content store. A second content object is loaded from the second origin server onto the content store without a request for the second content object.
Description
- This application claims the benefit of U.S. provisional application Ser. No. 60/209,007 filed on Jun. 1, 2000 and U.S. patent application Ser. No. 09/665,204 filed on Sep. 18, 2000.
- This invention relates in general to storing information and, more specifically, to storing information on a network.
- There is an ongoing effort in the broadband industry to improve quality of service (QOS) for streaming content. Today, the Internet infrastructure is ill-equipped to provide streams of data at a constant data rate over long periods of time. One solution some have tried is to cache information at some point between the user requesting the data and the origin server providing the data.
- There are many other limitations to the Internet infrastructure that affect QOS. An example of a current limitation that affects QOS are the limitations imposed by Internet service providers (ISPs) on upstream bandwidth. Typically, upstream bandwidth is limited to a fraction of the downstream bandwidth by the Internet service provider.
- Limited upstream bandwidth is further constrained by peak loading conditions in oversubscribed bandwidth situations. For example, there is an increased demand on Internet systems just after work that is generally attributed to large amounts of people checking e-mail and browsing the web. This increased demand taxes all users such that each of their network connections is slow. Anything that can reduce bandwidth required during those peak periods is greatly desired.
- The present invention is described in conjunction with the appended figures:
- FIG. 1 is a block diagram of an embodiment of a content distribution system;
- FIG. 2 is a block diagram of an embodiment of an active directory portion of the content distribution system;
- FIG. 3A is a block diagram of an embodiment of an origin server portion of the content distribution system;
- FIG. 3B is a block diagram of an embodiment of an external origin server portion of the content distribution system;
- FIG. 4A is a block diagram of an embodiment of a content exchange portion of the content distribution system;
- FIG. 4B is a block diagram of another embodiment of a content exchange portion of the content distribution system;
- FIG. 4C is a block diagram of an embodiment of a content exchange site including multiple content exchange servers;
- FIG. 5 is a block diagram of an embodiment of a client computer portion of the content distribution system;
- FIG. 6 is a block diagram of an embodiment of a content distribution system;
- FIG. 7 is a block diagram of another embodiment of the content distribution system that has two types of content exchanges;
- FIG. 8 is a block diagram of yet another embodiment of the content distribution system;
- FIG. 9 is a flow diagram of an embodiment of a process for populating the captive content exchange that has available storage capacity;
- FIG. 10 is a flow diagram of another embodiment of a process for populating the captive content exchange;
- FIG. 11 is a flow diagram of yet another embodiment of a process for populating the captive content exchange;
- FIG. 12 is a flow diagram of an embodiment of a process for populating a distributed storage system with content from an origin server; and
- FIG. 13 is a flow diagram of an embodiment of a process for providing a list of content exchanges to a client computer.
- In the appended figures, similar components and/or features may have the same reference label. Further, various components of the same type may be distinguished by following the reference label by a dash and a second label that distinguishes among the similar components. If only the first reference label is used in the specification, the description is applicable to any one of the similar components having the same first reference label irrespective of the second reference label.
- The ensuing description provides preferred exemplary embodiment(s) only, and is not intended to limit the scope, applicability or configuration of the invention. Rather, the ensuing description of the preferred exemplary embodiment(s) will provide those skilled in the art with an enabling description for implementing a preferred exemplary embodiment of the invention. It being understood that various changes may be made in the function and arrangement of elements without departing from the spirit and scope of the invention as set for in the appended claims.
- The present invention includes techniques for preloading content exchanges with content objects. Typically, the content exchanges that are preloaded are associated with client computers and origin servers. Some or all of the content objects on origin servers are loaded on the associated content exchanges. A triggering event, such as low bandwidth utilization into the content exchange, causes the content exchange to load content objects.
- Referring to FIG. 1, a block diagram of an embodiment of a content distribution system100 is shown. In this embodiment, the content distribution system 100 includes an
active directory 104, one ormore origin servers 108, one ormore client computers 112, one ormore content exchanges 116, one or moreexternal origin servers 118, one or moreunassociated origin servers 106, the Internet 120 and acrawling directory 124. Aparticular client computer 112 interacts with theactive directory 104 to select a content object for download. The object can be played during download if it is streaming media or can be stored for playback at a later time. The content object could be any type of information, such as audio, video or data, that is available for download from a network. The request for the content object is forwarded to theappropriate origin server 108 along with preference information from theclient computer 112. Theorigin server 108 decides where the object is downloaded from. In order to provide sufficient QOS, any of thecontent exchanges 116 or even theorigin server 108 itself could provide the object. - The
active directory 104 can be the interface that theclient computer 112 uses for selecting a content object. Software for both theorigin server 108 and optionally for theclient computer 112 can be downloaded from theactive directory 104 to enable the content distribution system 100. Either a directory interface page or a search interface page in theactive directory 104 may be used to determine the content object desired for download. The interfaces are maintained in an active manner to avoid broken links to content objects on theorigin servers 108. When a content object is requested from theorigin server 108 by acontent exchange 116, theactive directory 104 can provide a path back to theproper origin server 108 that originated the content object. - Other embodiments could have multiple active directories. Users of the system could be divided amongst the several active directories to distribute the loading among the active directories. Additionally, the other active directories could be used for redundancy such that if one active directory were offline, the others would absorb the loading.
- In some embodiments, the
origin server 108 serves as the source of a content object, directs a user to a preferred source of the content object and provides directory information to theactive directory 104. Content objects are introduced to the system 100 byorigin servers 108. Introduction involves selection by an origin server administrator of the content objects to make available to theactive directory 104. The administrator is person or system that manages theorigin server 108. The content objects could include previously stored information or a streaming feed of information. According to a predetermined cycle, theorigin server 108 provides a catalog of the selected information that is updated as the content on theorigin server 108 changes. - The
origin server 108 determines the preferred source to direct theclient computer 112 to in order to download the content object. The preference list of theclient computer 112, the loading of the content exchanges and the location of copies of the content object are all considerations of theorigin server 108 in redirecting the client computer to the preferred source of the information. That source could be theorigin server 108 itself or one of the content exchanges 116. - The user directs the
client computer 112 to the location to find the desired content object and subsequently download that object. Using viewer object proxy software downloaded from theactive directory 104, theclient computer 112 determines thecontent exchanges 116 that can deliver content with the adequate QOS. The process of determining acontent exchange 116 with adequate QOS involves, for example, receiving test information from thecontent exchanges 116 who are likely to produce the best results and preparing a preferred list based upon those test results. The user can modify the preferred list ofcontent exchanges 116 if a customized approach is desired. When theorigin server 108 is deciding the source of the requested content object, the preference information is used to provide adequate QOS. -
Unassociated content servers 106 are servers on the Internet that are not formally associated with the system 100. In this embodiment, thecontent exchanges 116 will still cache the content objects from theunassociated content servers 106 to provide enhanced QOS to theclient computers 112. In some embodiments, the users of theclient computers 112 will compensate the content exchange owners for the enhanced QOS. - The
external origin servers 118 can be additional sources of content objects available to theclient computer 112. In an embodiment,external origin servers 118 are coupled to a content exchange(s) 116. The content objects on the external origin servers are mirrored on the distributed content exchanges to enhance distribution without overly taxing the external origin server.Client computers 112 requesting content objects from anexternal origin server 118 is transparently redirected to acontent exchange 116 to fulfill the request for that content object. - The content exchanges116 are storage repositories that cache content objects. A number of these
content exchanges 116 are distributed to different points of theInternet 120 to cache content objects. In this way, anyclient computer 112 is likely to have a cache close to it on theInternet 120. Information can be cached based upon a number of considerations, such as the desirability of information to users, as a service toorigin servers 108 who want their content readily available to users, as a service to users who want improved QOS, or to offload upstream bandwith. Grouping of thecontent exchanges 116 could be in clusters or individually to service the demand ofclient computers 112 for content objects. - As stated above, an
origin server 108 may refer aclient computer 112 request for a content object to acontent exchange 116 for fulfillment of the request. When a requested content object or part of a requested content object is not found by a user requesting it from acontent exchange 116, a request by thecontent exchange 116 to other content exchanges is made for that content object. If noother content exchanges 116 have the content object, theactive directory 104 is queried for theorigin server 108,unassigned origin server 106, or external origin server 188 who is the source of the content object and the content object is downloaded from there to thecontent exchange 116. While thecontent exchange 116 is gathering the content object, theclient computer 112 is receiving any initial portions of the content object that are available. The content object could be stored in pieces onseveral content exchanges 116 and, under those circumstances, the requestingcontent exchange 116 will retrieve those pieces to reassemble the whole content object as needed by theclient computer 112. - A
crawling directory 124 is used to supplement the catalog information reported by all theorigin servers 108. When searching for content objects for a user, theactive directory 104 could display content objects available from theorigin servers 108 as well as other content objects uncovered by thecrawling directory 124 that resides onunassociated origin servers 106 orexternal origin servers 118. By traversing the web, crawlingdirectories 124 catalog the content objects and other information they encounter. For example, a keyword search of thecrawling directory 124 by way of theactive directory 104 can direct the user to a content object on anexternal origin server 118 orunassociated origin server 106 that is not available from anyorigin server 108. One of thecontent exchanges 116 could be selected by theactive directory 104 to cache the content object as theclient computer 112 downloads it. Although only onecrawling directory 124 is used in this embodiment, other embodiments could use a number of crawling directories to offer additional search results. - The
Internet 120 is comprised of servers linked together by nodes. Data is divided into packets that travel through theInternet 120 by hopping from one node to the next until the destination is reached. Each packet may take a different route through the Internet and arrive at the destination at a different time. Additionally, some packets can be lost during travel through theInternet 120 as the bandwidth of any node saturates. As the number of hops between the source of a content object and the destination increases, so does the likelihood of excessive delay and packet loss. - As the content object traverses a path from source to destination through the
Internet 120, the smallest bandwidth between any two nodes in the path defines the maximum bandwidth of that path. Generally, the bandwidth from theInternet 120 to the client computer (i.e., the “last mile”) has the least bandwidth allocation. At other times, however, some other hop between nodes has the smallest bandwidth. Caching the content object in acontent exchange 116 with a minimal amount of hops between thecontent exchange 116 and theclient computer 112 improves the likelihood of adequate or sufficient QOS. - Downloading the content object at a desired data-rate that does not exceed the data-rate of the client computer to the
Internet 120 is adequate QOS. The maximum QOS a user can expect is defined by the speed of their network connection, the processing power of their computer and other factors. The minimum QOS is subjectively defined by the user based upon the quality they desire within certain limits. For example, a user with a 400 Kbps network connection and a fast computer may have a choice of a 28 Kbps, 56 Kbps, or 128 Kbps stream for an audio clip from which the user chooses the 128 Kbps stream. So long as the datarate provided by the client computer is in the range of 128-400 Kbps, adequate QOS is possible for that stream. - Although the above embodiment primarily uses the
Internet 120 as a connection between the various blocks, other embodiments could use private links outside or in parallel to theInternet 120. The private links could allocate bandwidth sufficient for improved QOS or use other techniques to improve QOS. Additionally, content objects onexternal origin servers 118 orunassociated origin servers 106 could benefit from the system 100 to the extent caching, encryption and compression is provided. - With reference to FIG. 2, a block diagram of an embodiment of an
active directory portion 104 of the content distribution system 100 is shown. Included in theactive directory 104 are a dynamic domain name server (DNS) 204, aserver manager 208, adirectory page 212, asearch page 216, adownload page 220, asubscriber database 224, aserver database 228, acontent exchange database 232, and aroute database 234. The content distribution system 100 interacts with theactive directory 104 to provide directory information to the user and assist in downloading a content object to the user. - Both the user of the
client computer 112 and the administrator of theorigin server 108 are subscribers to the content distribution system 100. Software is downloaded from adownload page 220 to the user and/or administrator. The software for theclient computer 112 is optional in some embodiments and improves QOS when installed. The software for theorigin server 108 allows theactive directory 104 to update the content available on the system 100 and to direct theclient computer 112 to a preferred source for receiving that content. - The
client computer 112 attaches to the domain of theactive directory 104 to find a desired content object. Depending on preference, the user may use adirectory page 212 orsearch page 216 to find the content object. Thesearch page 216 may be a traditional boolean search engine that accesses a catalog of the content objects provided by allorigin servers 108 as well as information gathered from thecrawling directory 124. Other embodiments could only display information from thecrawling directory 124 after a search of the content from theorigin servers 108 is unsuccessful or omit information from thecrawling directory 124 altogether. The catalog of content objects for allorigin servers 108 is maintained in theserver database 228. - The
directory page 212, in this embodiment, organizes the possible content objects in a hierarchy of categories that are organized by subject. For example, the first page might show a number of topics of general interest where the user selects sports. In the next page, which is one level down in the hierarchy, a number of sports are displayed where the user selects football. Down another level in the hierarchy, the user may select the San Diego Chargers™ to see another page of related content object links. Each link points to theorigin server 108 that originated the content object. - The administrator categorizes the content on the
origin server 108 to allow thedirectory page 212 to present it properly. On a site, directory or file basis, the administrator can choose a category for content objects in an HTML SSI tag associated with that content object. This classification is harvested and stored on the active directory to allow presenting content objects in different categories. Additionally, a moderator may describe and arrange content objects in the categories for thedirectory page 212. For example, the moderator could mark certain content objects for more prominent display and/or add a review and/or synopsis for the content objects. - The
server manager 208 maintains information on allclient computers 112, allorigin servers 108, allexternal origin servers 118, allcontent exchanges 116, and all content objects onorigin servers 108. The information related toclient computers 112 andorigin servers 108 is maintained in thesubscriber database 224. The full name, a login name, a password, a unique identifier, token credits available, and other information is maintained in thesubscriber database 224 for each user associated with aclient computer 112. Thisdatabase 224 also holds the last time theorigin server 108 was verified, an Internet Protocol (IP) address for theorigin server 108, the port the content manager server runs upon, on-/off-line status of theorigin server 108, a banner ad URL, a name for theorigin server 108, a description of theorigin server 108, the credits or tokens needed to use theorigin server 108 or other billing model, and the number of connections or viewers allowed at one time. - Information on content objects for all
origin servers 108 is maintained in theserver database 228. For each content object, the origin server name, content object file name and path are stored along with category information, a brief description and keywords. Theserver database 228 is queried to provide content selections to the user during navigation of the directory andsearch pages server database 228, theserver manager 208 periodically interacts with theorigin server 108 to get the most recent changes to the catalog of content objects and to determine if theorigin server 108 has gone offline. Whenever anorigin server 108 goes offline, the entries in theserver database 228 corresponding to thatorigin server 108 are removed and the status information in thesubscriber database 224 is updated. - In some embodiments, the entries in the
server database 228 remain even after theorigin server 108 goes offline. The status is updated to reflect that the content associated with the origin server is unavailable, but the information remains stored in theserver database 228. If the status is updated to online, the information is once again presented to users that are searching for content objects. In some circumstances, anorigin server 108 may indicate to theactive directory 104 that it is going offline for a period of time. Presuming the period of time is short, the active directory can keep information in theserver database 228 without presenting it to users. - A list of the
content exchanges 116 available to the system 100 is maintained by theserver manager 208 in thecontent exchange database 232. In some embodiments, thecontent exchange database 232 can include a list of IP addresses for allpossible content exchanges 116 within the content distribution system 100. Further, thecontent exchange database 232 can include a number of content exchange fields associated with eachcontent exchange 116. For example, fields associated with eachcontent exchange 116 in thecontent exchange database 232 can include a content exchange identifier, a content exchange site, a content exchange provider, a content exchange name, a content exchange location, a content exchange status, an icon, or any other desired information. - Together, the content exchange identifier and content exchange site identify a
unique content exchange 116 at a particular content exchange site. The content exchange provider is an indicator of the party responsible for the content exchange, such as XYZ company. The content name is a domain name and the content exchange location can be geographic coordinates for acontent exchange 116. In an exemplary embodiment, thecontent exchange database 232 includes a content exchange identifier, a content exchange site, a content exchange IP address, a content exchange provider, a content exchange name, a content exchange location, and an icon for eachcontent exchange 116 in thecontent exchange database 232. - In general, the
content exchange database 232 can be regionalized or partitioned by a variety of methods including, but not limited to, improved QOS criteria or subscription services criteria. Additionally, thecontent exchange database 232 can include a listing of alternativeactive directories 104,origin servers 108, or any other useful information. - The content exchanges116 in the system 100 regularly provide status to the
server manager 208. Ascontent exchanges 116 become available or unavailable, their operational status is reported to theserver manager 208 and recorded in thecontent exchange database 232. In some embodiments, thecontent exchange database 232 can include additional status information includingcontent exchange 116 loading, capacity, utilization, health, etc. - The
routing database 234 includes a list ofexternal origin servers 118. In some embodiments, therouting database 234 includes identification, status and organization information related to theexternal origin servers 118. Identification information can include an IP address and a domain name for anexternal origin server 118. Status information can include availability, loading or other status about the external origin server. Organization information can include a list of alternativeexternal origin servers 118. In an embodiment, therouting database 234 includes an IP address and a domain name for eachexternal origin server 118. In some embodiments, identifying anexternal origin server 118 in therouting database 234 is the mechanism for associating theexternal origin server 118 with the content distribution system 100. - For each
external origin server 118 in the routing database, there are a list of user names that are allowed to use acontent exchange 116 to access the information on theexternal origin server 118. The user name is unique to the user of theclient computer 112. A list of external origin servers 118 a client computer can route through acontent exchange 116 is provided to theclient computer 112. Theclient computer 112 uses the information from the routing database to redirect user requests for anexternal origin server 118 to acontent exchange 116. After thecontent exchange 116 populates with the content objects from theexternal origin server 118, bandwidth is offloaded from theexternal origin server 118 to thecontent exchange 116. The user may compensate the owner of thecontent exchange 116 and/or the administrator of theorigin server 108 for this enhanced service. - The
dynamic DNS 204 provides an origin server name for each IP address for theorigin servers 108. The origin server name uniquely identifies theorigin server 108 on theInternet 120. This information is maintained in thesubscriber database 224. Thecontent exchange 116 does not know the IP address of theorigin server 108 that provided the content object to thecontent exchange 116, but knows the origin server name. When acontent exchange 116 wants to populate its cache with a content object or a portion of a content object that is not available fromother content exchanges 116, thedynamic DNS 204 is queried to determine the IP address or domain name of theorigin server 108 that is the source of the content object. If a domain name is retrieved from thedynamic DNS 204, the IP address corresponding to that domain name is retrieved from a DNS. - Referring next to FIG. 3A, a block diagram of an embodiment of an
origin server portion 108 of the content distribution system 100 is shown. Theorigin server 108 is managed by an administrator and provides one source of content objects to the content distribution system 100. QOS is provided by theorigin server 108 directing the client computer to acontent exchange 116 that can adequately deliver the desired content object. Included in theorigin server 108 are acontent source 304, acontent server 308, acontent manager 312, alocal content catalog 316, acontent location database 320,content exchange information 324, and ahealth check 330. - Content is provided to the
origin server 108 by acontent source 304. Thecontent source 304 could include a live web cam, a video or audio feed, a data object, a data stream, a video tape or audio tape, an optical or magnetic disk, or any other content delivery mechanism. Content objects are delivered by thecontent source 304 to thecontent server 308 for possible distribution to the system 100. - Time and date information is maintained in each
content exchange 116 for the content objects or portions of content objects maintained therein. The time and date information allows distinguishing content objects which may have the same origin sever name, path name and file name. Other embodiments could alternatively use any unique code such as a checksum, CRC or hash to uniquely identify a content object. - All content objects of the
origin server 308 are stored on thecontent server 308. The administrator can select a content object or groups of content objects for publishing to the system 100 while leaving other content objects on thecontent server 308 such that they are unavailable to the system 100. Some content objects are discreet files, but others are streams of content produced, for example, by live web cams. In some embodiments, the software that runs thecontent server 308 may be integrated with the software of thecontent manager 312. - The
content manager 312 publishes the desired content objects to the system 100 and directs users to thepreferred content exchange 116 for downloading content objects associated with thecontent manager 312. At the direction of the administrator, thecontent manager 312 selects content objects or groups of content objects by filename, directory or drive volume for publishing to theactive directory 104. Some content objects on thecontent server 308 may be excluded from publishing such that they are not available to the system 100. - The content objects selected for publishing to the system are maintained in a
local content catalog 316. Entries in thelocal content catalog 316 are kept current by thecontent manager 312 as the objects corresponding to those entries may become unavailable or updated. For each entry, the content object file name and path are stored along with category information, a brief description and keywords. Upon attachment to the system 100, thelocal content catalog 316 is sent by thecontent manager 312 to theactive directory 104 for entry to theserver database 228. Periodically, changes to thelocal content catalog 316 are sent to theserver database 228 to keep the directory information as current as possible. Updates could happen on a regular interval such as every two minutes and/or whenever a change in the local content catalog is made. - The
content manager 312 also knows the location of all portions of content objects associated with thatcontent manager 312. Upon attaching to the system 100, thecontent manager 312 contacts each of thecontent exchanges 116 for status. Each of thecontent exchanges 116 periodically reports on its content object or content object portions to the originatingcontent managers 312. Armed with this information, thecontent manager 312 can direct aclient computer 112 to acontent exchange 116 that may have some or all of the desired content object available for download. - Location information for content objects that is reported by all the
content exchanges 108 is maintained by the content manager in thecontent location database 320. By querying thecontent location database 320, thecontent manager 312 can determine thecontent exchanges 116 that contain a content object or a portion of a content object. During the routing of theclient computer 112 to a content source, the presence of the content object in aparticular content exchange 112 can affect the routing determination. - The content
exchange information store 324 holds information on all active content exchanges 116. Upon power-up of theorigin server 108, thecontent exchange database 232 in theactive directory 104 is downloaded into the contentexchange information store 324. All thecontent exchanges 116 listed in the contentexchange information store 324 are queried after power-up for status information that is retained ascontent exchange information 324. The status information includes the number of concurrent links used, total number of concurrent links allowed, bandwidth utilization, and cache chum rate. The chum rate of the cache is the amount of time unused data remains in the cache and is indicative of the loading of the cache. For example, data is usually flushed out of the cache quickly forcontent exchanges 116 that are busy relative to the amount of storage in the cache. However, some embodiments that could have sticky content objects that remains pinned in thecontent exchange 116 for a period of time regardless of use. - The
content manager 312 intelligently redirects theclient computer 112 wanting a content object to the preferred source for that object. Preference information provided from theclient computer 112 is used to determine the sources of the content object preferred by theclient computer 112. This information is used along with the current locations of the content object and the loading of the possible content exchanges in order to direct theclient computer 112 to thepreferred content exchange 116 for download of the content object. - In some embodiments, the
content manager 312 can regulate access to content objects. When aclient computer 112 attempts to download a content object associated with acontent manager 312, a login dialog can be presented if the administrator has secured the content object. The user may enter a user name and/or password in the login dialog to enable redirection of theclient computer 112 to a source for the content object. This user name and/or password is in addition to any required for theactive directory 104. Before redirecting theclient computer 112 to that source, the user name and/or password or login information is checked against a list of acceptable login information previously stored on theorigin server 108. Access to awhole origin server 108 or a volume, a directory or a content object on theorigin server 108 may be regulated in this manner. - Some embodiments allow the
origin server 108 oractive directory 104 to preload content objects on acontent exchange 116. The requests for content objects are monitored to determine desirability. Desirability information, billing information, size, and/or other considerations are used to determine which content objects to preload on acontent exchange 116. Either theorigin server 108,active directory 104 orcontent exchange 116 can request the content objects from acontent exchange 116 to preload them there. Periodically, the content objects could be requested for acontent exchange 116 to keep them loaded on thecontent exchange 116 such that they are not unloaded because of inactivity. Other embodiments could designate the content objects as sticky content objects as described above. - The
health check 330 can be either a hardware or software application which provides operational characteristics of an associatedorigin server 108. In an embodiment, thehealth check 330 provides a single indication oforigin server 108 status. The single indication is a normalized value between zero and one indicating a combination of origin server characteristics. For example, it could include a CPU load, a CPU temperature, a number of concurrent connections, and/or a number of requests an origin server is facilitating. In an alternate embodiment, thehealth check 330 could monitor characteristics of acontent exchange 116 while running on anothercontent exchange 116 ororigin server 108. - Referring next to FIG. 3B, a block diagram of an embodiment of an external
origin server portion 118 of the content distribution system 100 is shown. Theexternal origin server 118 differs from theorigin server 108 in that theexternal origin server 118 does not have content manager software installed upon it. Included in theexternal origin server 118 are acontent server 308 and acontent source 304. - The administrator of the
external origin server 118 determines one ormore client computers 112 authorized for receiving content objects through acontent exchange 116. Therouting database 234 is updated by the administrator to allowindividual client computers 112 to access the content objects through acontent exchange 116. A web page on the active directory provides an interface to entering information onclient computers 112 into therouting database 234. Other embodiments could automate the interface between theexternal origin server 118 and therouting database 234 such that users are automatically added to therouting database 234 upon signing up with theexternal origin server 118. - The updates to the
routing database 234 are downloaded and stored locally byclient computer 112. Subsequent attempts to access theexternal origin server 118 are redirected to acontent exchange 116 to service that request. Redirection in this way allows anexternal origin server 118 to redirectclient computers 112 to acontent exchange 116 without assistance from content manager software. - An
external origin server 118 may have one ormore content exchanges 116 assigned to carry content objects for theexternal origin server 118. Therouting database 234 could redirect subscribing client computers to one or more of these content exchanges 116. If the client computer were allowed to use two or more of thesecontent exchanges 116, a client-side routing analysis would be performed on the two or more content exchanges to allow ranking of the relative QOS between them. - The content objects of an
external origin server 118 can be preloaded to a content exchange(s) allocated to provide those content objects. To decrease latency when a content object is requested for the first time, theactive directory 104 can crawl theexternal origin server 118 to determine the content objects available from thatserver 118. The available content objects may be added to thecrawling directory 124. Once the available content objects are known, theactive directory 104 requests each content object from the associated content exchange(s) in order to cause loading of each content object on the associated content exchange(s). In this way, content objects are preloaded on the associated content exchanges. - With reference to FIG. 4A, a block diagram of an embodiment of a
content exchange portion 116 of the content distribution system 100 is shown. Thecontent exchange 116 caches content objects requested byclient computers 112 under the control of thecontent manager 312. Included in thecontent exchange 116 are atracking system 402, and acontent node 406. The tracking system includes acontent tracker 404, ahealth check 426,status information 420, alocal content catalog 416, and anorigin server database 424 while thecontent node 406 includes acontent controller 408 and acontent store 412. - The
health check 426 can be either a hardware or software application which provides operational characteristics of an associatedcontent exchange 116. In an embodiment, thehealth check 426 provides a single indication ofcontent exchange 116 status. The single indication may be a normalized value between zero and one indicating a combination of content exchange characteristics including, for example, a CPU load, a CPU temperature, a number of concurrent connections, and a number of requests a content exchange is facilitating. In an alternate embodiment, thehealth check 426 could monitor characteristics of acontent exchange 116 while running on anothercontent exchange 116,origin server 108 or other location. - The
content store 412 holds the content objects available for download to theclient computers 112 from thatcontent exchange 116. The name of theorigin server 108 providing the content object along with path information and the filename is stored with the content object in thecontent store 412. Via theInternet 120, theclient computers 112 connect to thecontent store 412 and download the content object file or data stream. As new content objects are added to thecontent store 412, old content objects are typically removed. The age of a content object relates to the last time a content object was accessed. Some content objects on thestore 412 never age such that they stay in thestore 412 for a predetermined time. Anorigin server 108 could arrange for thecontent exchange 112 to store a content object for a predetermined period of time. - When the
client computer 112 requests a content object from thecontent store 412, the content object may not be currently loaded in thecontent store 412. Thecontent store 412 notifies thecontent controller 408 of the unfulfilled request for the content object. Thecontent controller 408 locates missing content objects or portions thereof inother content exchanges 116 or from thecontent server 308 that originated the content object. The missing content objects are loaded into thecontent store 412 by thecontent controller 408 such that theclient computer 112 can download this information. - When a content object is missing from
content store 412, thecontent controller 408 first checks withother content exchanges 116 to determine if the object is available. If nocontent exchange 116 has the desired content object, thecontent server 308 that originated the information is queried for the content object. Thecontent store 412 does not include the IP address for the originatingcontent server 308 so thedynamic DNS 204 is queried for that information. Given the origin server name, thedynamic DNS 204 provides the IP address such that thecontent controller 408 can request the content object from theproper content server 308. - The
content tracker 404 reports to the system 100 the current items in thecontent store 412 and status information for thecontent exchange 116. Thelocal content catalog 416 records the origin server name, path and filename for each content object or portion of a content object in thecontent store 412. As new items are added to and old items are removed from thecontent store 412, thelocal content catalog 416 is updated. When acontent manager 312 connects to the system 100, a query is made to allcontent trackers 404 to determine what portions of content objects are stored on the content stores 412. The initial query provides a baseline to which thecontent tracker 404 updates as changes are made to thevarious content stores 412. The changes are sent directly to each of thecontent managers 312 that has content stored in thecontent store 412. Thedynamic DNS 204 is used during this process to determine the IP address corresponding to the origin server name for each content object. - The
content tracker 404 also providesstatus information 420 for thecontent exchange 116 to thecontent mangers 312. Thestatus information 420 is sent periodically to each of thecontent managers 312 as a broadcast or multicast, for example, every five minutes and/or when changes occur. Thestatus information 420 could include the number of concurrent links to the content exchange currently in use, the total number of concurrent links allowed, the bandwidth utilization, the cache churn rate, and/or other information. In other embodiments, the status information is posted to a central location that thecontent manager 312 can query when determining where to send aclient computer 112 for a downloading a content object. - The
content tracker 404 maintains theorigin server database 424 to track theorigin servers 108 active in the system 100. After attaching to the system, allorigin servers 108 identify themselves to thecontent trackers 404. Thecontent trackers 404 record the origin server name and IP address in theorigin server database 424. A query to the dynamic DNS provides the IP address for a given origin server name. If anorigin server 108 notifies thecontent tracker 404 of impending unavailability or if thecontent tracker 404 cannot contact a particular origin server, the entry for that origin server is removed from theorigin server database 424. Additionally, the content corresponding to thatorigin server 108 may be purged from thecontent store 412, and thelocal content catalog 416 is updated. In some embodiments, the content object and content object portions are not purged, but are simply tagged for deletion as the storage space is requested. - In some embodiments, the
content controller 408 can be instructed by the system 100 to acquire and retain predetermined content objects in thecontent store 412. Content objects that are anticipated to be wanted can be preloaded in preparation for the demand. The desirability of a content object can be determined by monitoring click-throughs to those content objects from the search anddirectory pages content stores 412 immediately before a biography program on the famous person is aired on network television. Alternatively, users could subscribe to a service that loads content objects to some content exchanges 116. For example, a scheduled network program could be loaded to coincide with a TV broadcast the user could view over theInternet 120 in lieu of the TV broadcast. In this way, the content would be available without delay to the subscribed users. - With reference to FIG. 4B, a block diagram of another embodiment of a
content exchange portion 116 of the content distribution system 100 is shown. This embodiment includesmultiple content nodes 406 coupled to asingle tracking server 402. Acontent bus 428 allowscontent nodes 406 to check each otherscontent stores 412 for missing content objects. Thecontent bus 428 could also couple to other content notes in other locations. Thecontent bus 428 may or may not travel in part over theInternet 120. - Referring next to FIG. 4C, a block diagram of an embodiment of a
content exchange site 432 including multiplecontent exchange servers 116 is shown. Even though thecontent exchange site 432 includes multiplecontent exchange servers 116, it appears to the system asingle content exchange 116. The load of thecontent exchange site 432 is distributed among the constituentcontent exchange servers 116. Aswitch 436, such as a layer four switch, distributes the content object requests to thecontent exchanges 116 and aggregates the spooled responses to theInternet 120. - Referring next to FIG. 5, a block diagram of an embodiment of a
client computer portion 112 of the content distribution system 100 is shown. Theclient computer 112 communicates to theInternet 120 in order to deliver content to a user. Included in theclient computer 112 are aviewer object proxy 504, acontent processing program 508,preference information 512, anetwork interface 516, and hostedserver routing 520. - The
content processing program 508 is typically software that interprets or processes a content object downloaded from theInternet 120. Examples ofcontent processing programs 508 include web browsers, file transfer protocol (FTP) software, gopher software, news (NNTP), mail programs, streaming media players, non-streaming media players, and other software. The Internet communication fromcontent processing program 508 that is normally sent directly to the Internet is redirected to theviewer object proxy 504. - The
viewer object proxy 504 serves as intermediary between theInternet 120 and thecontent processing program 508. After installation of theviewer object proxy 504, it determines its general location relative to known points on theInternet 120.Content exchanges 116 that are reasonable candidates for providing sufficient QOS are tested to determine the number of hops necessary to reach eachcontent exchange 116 and the latencies between eachcontent exchange 116 and theviewer object proxy 504. A weighting of QOS factors, such as the number of hops and bandwidth achieved, is recorded aspreference information 512 and is passed as meta-data to thecontent manager 312 in an HTTP header. - Other embodiments could pass meta-data in any sort of data channel and not just through a HTTP header. For example, the meta-data could travel through a dedicated port, an IP address, a URL, a header, or other logical channel.
- The
preference information 512 is the result of network analysis performed from theclient computer perspective 112. When a content object is requested, thepreference information 512 is communicated to thecontent object manager 312 which in turn selects anappropriate content exchange 116 for theclient computer 112. Periodically, such as every hour, thepreference information 512 is updated using automated tests or is updated manually by the user. Subsequent tests take into account the previous results to efficiently consider preferred content exchanges. For example, the first analysis may check one hundred content exchanges, but a subsequent analysis could eliminate the poor performing content exchanges such that only fifty are analyzed. - The
preference information 512 includes a list ofcontent exchanges 116 and their associated QOS values resulting from client-side network analysis. In some embodiments, there are multiple pathways to anexternal origin server 118. The multiple pathways are separated by port, IP address, server identification (ID), and/or other mechanisms. Client-side network analysis could be used to determine a QOS value associated with each pathway to anexternal origin server 118 or any other source of a content object that could also have multiple pathways. - After the user of the
client computer 112 chooses a content object, the origin server name is provided to theviewer object proxy 504. The origin server name is used for theviewer object proxy 504 to query thedynamic DNS 204 for the IP address of theorigin server 108. Once the IP address is known, thecontent processing program 508 is redirected to thecontent manager 312 for the desired content object. Thecontent manager 312 is passed thepreference information 512 to allow routing theclient computer 112 to theappropriate content exchange 116. In this embodiment, thepreference information 512 includes the preferred ten content exchanges, but the amount of preferred content exchanges could be adjusted by the user. - In some embodiments, the
viewer object proxy 504 can be HTTP-specific but protocol independent for routing information. Thus, routing information is transferred according to HTTP, but the actual routing information is protocol independent. However, one skilled in the art would recognize that theviewer object proxy 504 can also be configured to work with other network protocols as needed. For example, theviewer object proxy 504 can also be configured to operate in accordance with FTP, NNTP, RTP, RTSP, SMTP, or SHOUT etc. - The
client computer 112 includes a hostserver routing database 520. This hostserver routing database 520 can include information related toexternal origin servers 118 accessible by theclient computer 112. In an embodiment, hostserver routing database 520 is a subset of the entries in therouting database 234 found in theactive directory 104. - The
client computer 112 includes anetwork interface 516 that connects theviewer object proxy 504 to theInternet 120. Common examples ofnetwork interfaces 516 include analog modems, DSL modems, ISDN, cable modems, satellite modems, cellular modems, power line modems, line-of-sight microwave modems, line-of-sight laser modems, etc. - In this embodiment, the client computer is associated with a home user. In other embodiments, the client computer could serve digital movies to a theater or provide content objects to a corporate network user, a hotel patron or apartment complex.
- With reference to FIG. 6, a block diagram of an embodiment of a
content distribution system 600 is shown. This figure depicts data flow between data blocks without showing transport over theInternet 120 or any other network. It is to be understood, however, that theInternet 120 or another packet switched network is used in some embodiments. Also, the figure is somewhat simplified in that some blocks from FIGS. 2-5 and the external origin server(s) 118 andcrawling directory 124 are not included to simplify the FIG. 6. - The
network interface 516 is the connection to theInternet 120 for theclient computer 112. Theclient computer 112 connects to the directory andsearch pages client computer 112 from theactive directory 104 to theappropriate origin server 108 uses thedynamic DNS 204.Preference information 512 is passed to thecontent manager 312 to assist its selection of the source for the content object. Depending on the selection made by thecontent manager 312, the content object is downloaded from one of thecontent exchanges 116 or from thecontent server 308. - The
active directory 104 interacts with the other modules in thesystem 600. Theclient computer 112 accesses the directory andsearch pages content tracker 404 andcontent manager 312 respectively provide status and catalog information to theserver manager 208. Account information is provided to theserver manager 208 by the administrator of theorigin server 108 and by the user ofclient computer 112 to maintain thesubscriber database 224. Redirection from the origin server name to the IP address of theorigin server 108 is provided to theviewer object proxy 504, thecontent tracker 404 and thecontent controller 408 by thedynamic DNS 204. - The
origin server 108 communicates with theserver manager 208, theclient computer 112, thecontent tracker 404, thecontent store 412, and thecontent controller 408. Thelocal content catalog 316 is provided to theserver manager 208 from thecontent manager 312 in order to maintain theserver database 228 with current content information.Preference information 512 is provided to thecontent manager 312 from theclient computer 112 to facilitate selection of a source of the content object. Thecontent tracker 404 interacts with thecontent manager 312 to know what content objects are stored on thecontent exchange 116. Content objects are read from thecontent server 308 by either thecontent store 412 or theclient computer 112. - The content exchanges116 interact with the other modules in the
system 600 as well. Status information is provided to theactive directory 104 and/or thecontent manager 312. The dynamic DNS is used by both thecontent controller 408 and thecontent tracker 404 to find the IP address of anorigin server 108 that contains a content object. A selected content exchange may contact other content exchanges when an object is needed for thecontent store 412. If the other content exchanges do not have the content object, thecontent controller 408 requests the object from thecontent server 308 for delivery to the selectedcontent store 412. - Referring next to FIG. 7, a block diagram of another embodiment of the
content distribution system 700 is shown that has two types ofcontent exchanges public content exchanges 702 and captive content exchanges 704. One or moreassociated client computers 708 and one or more associatedorigin servers 712 are grouped with the one or more captive content exchanges 704. Thepublic content exchanges 702 are available to source content objects to any of theclient computers 112 or any of the associatedclient computers 708. Those content objects stored on thepublic content exchanges 702 could originate from any of theunassociated origin servers 106,origin servers 108,external origin servers 118, or associatedorigin servers 712. - The
captive content exchanges 704, however, are not fully available to thesystem 700 in the same way as thepublic content exchanges 702 are. Thecaptive content exchanges 704 cache content objects originating from associatedorigin servers 712. Those cached objects are provided to either the associatedclient computers 708 orclient computers 112. Content objects originating from theunassociated origin servers 106,origin servers 108 andexternal origin servers 118 are cached for associatedclient computer 708, but not forclient computers 112. Theclient computers 112 cannot rely on thecaptive content exchanges 704 for caching content objects that were sourced from anyunassociated origin servers 106,origin servers 108 orexternal origin servers 118. Accordingly, thepreference information 512 for theclient computer 112 only includespublic content exchanges 702 and not captive content exchanges 704. - The
captive content exchanges 704 in this embodiment are linked to thepublic content exchanges 702 such that missing content objects or portions of content objects may be passed betweencontent exchanges preferred content exchange 702, 704 a local search is first performed for the content object or any portion of the content object. If that search fails, theother content exchanges origin server system 700. Other embodiments, however, could go without passing files between thecaptive content exchanges 704 and public content exchanges 702. - In various embodiments, the
captive content exchanges 704 could be located in the central office, headend, ISP location, or nodes where the Internet bandwidth begins to travel the “last mile” or final leg to the associatedclient computer 708. By moving the cache as close as possible to the destination, the potential bottlenecks are reduced to improve QOS. For example, a cable multi-system operator (MSO) providing service to associatedclient computers 708 by way of DOCSIS modems could havecaptive content exchanges 704 in the headend or in neighborhood nodes. In this way, the associatedclient computers 708 and associatedorigin servers 712 connect to thecaptive content exchange 704 to provide enhanced QOS through caching. - With reference to FIG. 8, a block diagram of yet another embodiment of the
content distribution system 800 is shown. This embodiment demonstrates how thecaptive content exchange 704, associatedclient computers 708 and associatedorigin servers 712 can be virtually connected through theInternet 120. Thesefunctional blocks captive content exchanges 704 could be coupled to the associatedclient computers 708 through a hybrid fiber/cable distribution system. But, the associatedorigin servers 712 could be linked to thecaptive content exchanges 704 through theInternet 120. - Referring next to FIG. 9, a flow diagram of an embodiment of a
process 900 for populatingcaptive content exchanges 704 that has available storage capacity is shown. The depictedprocess 900 picks-up instep 904 where a test detects bandwidth utilization below a threshold. The bandwidth measurement for this test could be the bandwidth from all associatedorigin servers 712 to thecaptive content exchange 704 in this embodiment or could be the bandwidth from a single associatedorigin server 712 to thecaptive content exchange 704 in other embodiments. - In
step 908, a determination of which origin servers are associatedorigin servers 712 is made. Theactive directory 104 could be queried for this information or the information could be maintained local to thecaptive content exchange 704. Once the associatedorigin servers 712 are known, eachlocal content catalog 316 is queried to determine the content objects available on that associatedorigin server 712 instep 912. - In
step 916, the content objects from all the associatedorigin servers 712 are analyzed to determine a ranking between the content objects. In this embodiment, the popularity of the content objects controls the ranking. The number of times a content object is downloaded over the last day is the algorithm used for determining popularity, however, other embodiments could use other time periods. Although this embodiment uses popularity for ranking, other embodiments could also use size of the content object, price of the content object, and/or other factors when determining the ranking. - The associated
origin servers 712 orcaptive content exchanges 704 could monitor popularity by respectively determining the number of click-throughs or hits for a content object. Click-throughs of the user of the client computer can be monitored with CGI scripts that redirect a content object selection back to the associatedorigin server 712. Once redirected back, the click-through is recorded and theclient computer content exchange - In
step 920, a determination of how much cache space in thecontent store 412 will be allocated to storing the popular content objects. This embodiment uses half of thecontent store 412 to store popular content, but other embodiments could use other fractions of the capacity of thecontent store 412. - A determination is made in
step 922 as to whether any of the content objects are stored in thecontent store 412 already. To determine what is already stored, thelocal content catalog 316 for the associatedorigin server 712 is cross referenced against thelocal content catalog 416 for thecaptive content exchange 704 to determine which of the content objects are not already stored instep 922. Those content objects that are already stored are marked as not needing any reload instep 924. - The highest ranked content objects that will fit into the allocated cache space and are not already loaded are determined in
step 928. Those content objects that will not fit are removed from the list. Starting with the least popular on the ranked list, the content objects that are not already in thecontent store 412 are requested such that they are loaded onto thecontent store 412. The content objects that are already loaded on thecontent store 412 are moved to the front of the cache when their entry is reached when cycling through the list. In this way, all the popular content objects that will fit are loaded in the cache according to ranking. Those with lower rankings will be pushed out of the back of the cache first if there are no subsequent hits or requests for those content objects. - In some embodiments, each associated
origin server 712 is harvested for content objects in a separate process that is run in parallel to other processes harvesting other associatedorigin servers 712. The bandwidth between a specific associatedorigin server 712 and thecaptive content exchange 704 is tested to determine if bandwidth utilization has fallen below a threshold. Once the threshold is crossed, the content objects are loaded onto the captive content exchange. In parallel, other associatedorigin servers 712 are harvested for content objects. - With reference to FIG. 10, a flow diagram of another embodiment of a
process 1000 for populating thecaptive content exchange 704 is shown. In this embodiment, a file system rather than a cache is used. Content objects loaded into the file system remain until an expiration time. For example, a content object could be loaded one day with an expiration period of one day such that only twenty-four hours later can the file be overwritten. - The notable differences between this embodiment and the embodiment of FIG. 9 begin in
step 1004 where the space in the file system reserved for preloading is determined. The file system space is logically separated from the space used for cacheing. Content objects that are stored on the file system should not be redundantly cached. Instep step 1008. Any content objects that are not already loaded and that will fit are loaded instep 1012. The expiration time for all the content objects on the file system is set for one day or some other time period. - With reference to FIG. 11, a flow diagram of yet another embodiment of a
process 1100 for populating thecaptive content exchange 704 is shown. In this embodiment, thecaptive content exchange 704 populates itself after becoming available to thesystem 700. For example, thecaptive content exchange 704 may populate itself after powering on. This embodiment does not determine which content objects are already stored in the cache. Instead, all content objects that are determined to fit are loaded. - The above embodiments in FIGS.9-11 populate captive content exchanges 704. Other embodiments could also populate public content exchanges 702. A process in the
active directory 104 would determine the popular content objects on the Internet and where those objects are likely to be requested from the distributed network of public content exchanges 702. The active directory could instructpublic content exchanges 702 to preload content such that it is available with enhanced QOS. - Referring next to FIG. 12, a flow diagram of an embodiment of a
process 1100 for populating a distributed storage system with content from anorigin server origin server 712 populates thecaptive content exchange 704 when it becomes available to thesystem 700 if hosting is allowed. The depicted process picks-up instep 1204 as theorigin server step 1208, a determination is made as to whether there is acaptive content exchange 704 associated with theorigin server captive content exchange 704 no preloading occurs and processing continues to step 1212 and 1240 where the request for a content object is fulfilled by thepreferred content exchange - In
step 1220, a further determination is made as to whether hosting of the content objects on thecaptive content exchange 704 is allowed for thisorigin server captive content exchange 704 may require compensation for the ability of anorigin server step 916. Instep 1228, the content objects are loaded onto thecaptive content exchange 704 such that the most popular objects are last to be expired out the back of the cache. Other embodiments could use a file system, with lifetime information specified for each content object as described above. - If hosting is not allowed in
step 1220, conservation of upstream bandwidth is possible by first populating thecaptive content exchange 704 with the content object. Once thecaptive content exchange 704 has the content object it can propagate toother content exchanges step 1224, theclient computer 112 requests the content from theorigin server step 1232 is performed as to whether the content is already stored in anycontent exchange content exchange origin server client computer 112 is directed to thepreferred content exchange step 1240. If needed, thepreferred content exchange other content exchange - If the content object is not available on the distributed storage network of
content exchanges step 1232, theclient computer 112 is directed first to thecaptive content exchange 704 associated with theorigin server 712. In this way, thecaptive content exchange 704 preferentially stores content objects from associatedorigin servers 712. - With reference to FIG. 13, a flow diagram of an embodiment of a
process 1300 for providing a list ofcontent exchanges client computer captive content exchanges 704 is performed before providing a list ofpreferred content exchanges client computer 708. The depiction of the process picks-up instep 1304 where a determination of whichcaptive content exchanges 704 are associated with which associatedclient computers 708. These associations are recorded in a central location such as theactive directory 104. - In
step 1308, aclient computer list content exchanges active directory 104. A determination is made as to whether there are anycaptive content exchanges 704 instep 1312. If there arecaptive content exchanges 704, processing continues to step 1308 where thosecaptive content exchanges 704 are included in the list. Instep 1312, otherpublic content exchanges 702 likely to have sufficient or adequate QOS are added to the list. If there are nocaptive content exchanges 704 as determined instep 1312,step 1308 is skipped and the list ofpreferred content exchanges 702 is assembled without any captive content exchanges 704. - Once the list of
preferred content exchanges client computer 112 instep 1316 and stored in thepreference information database 512. Theclient computer 112 analyzes eachcontent exchange captive content exchanges 704 can provide the best QOS to associatedclient computers 708. - In light of the above description, a number of advantages of the present invention are readily apparent. For example, QOS is improved by preloading content objects onto a content exchange. By preloading based upon triggering events, the content object is passed through the upstream connection between the associated origin server and the captive content exchange in a controlled manner. Once a content object is offloaded to the captive content exchange, the associated origin server is likely to be less taxed by requests for the content object.
- A number of variations and modifications of the invention can also be used. For example, some of the above embodiments detect low bandwidth utilization to trigger preloading of the content exchange. But, other embodiments could preload at a preset time, such as the middle of the night. Presumably, bandwidth utilization is at a minimum in the middle of the night.
- While the principles of the invention have been described above in connection with specific apparatuses and methods, it is to be clearly understood that this description is made only by way of example and not as limitation on the scope of the invention.
Claims (24)
1. A method for loading content objects in a content store on a network, the method comprising steps of:
waiting for a triggering event;
determining if a first origin server is authorized to store content in the content store;
loading a first content object from the first origin server onto the content store without a request for the first content object;
determining if a second origin server is authorized to store content in the content store; and
loading a second content object from the second origin server onto the content store without a request for the second content object.
2. The method for loading content objects in the content store on the network as recited in , further comprising a step of determining the popularity of the content object.
claim 1
3. The method for loading content objects in the content store on the network as recited in , wherein the performance of the loading steps are conditioned on the waiting step.
claim 1
4. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises at least one of the following steps of waiting for:
claim 1
upstream bandwidth between the first origin server and the content store to fall below a predetermined threshold; and
upstream bandwidth between the second origin server and the content store to fall below a predetermined threshold.
5. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for upstream bandwidth into the content store to fall below a predetermined threshold.
claim 1
6. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for connection to the network.
claim 1
7. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for upstream bandwidth utilization from a client computer to the content store to fall below a predetermined threshold.
claim 1
8. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for a temporal event.
claim 1
9. A method for loading content objects in a content store on a network, the method comprising steps of:
waiting for a triggering event;
determining the popularity of the content object;
loading a first content object from the first origin server onto the content store without a request for the first content object; and
loading a second content object from the second origin server onto the content store without a request for the second content object.
10. The method for loading content objects in the content store on the network as recited in , wherein the performance of the loading steps are conditioned on the waiting step.
claim 1
11. The method for loading content objects in the content store on the network as recited in , further comprising steps of:
claim 1
determining if a first origin server is authorized to store content in the content store; and
determining if a second origin server is authorized to store content in the content store.
12. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises at least one of the following steps of waiting for:
claim 1
upstream bandwidth between the first origin server and the content store to fall below a predetermined threshold; and
upstream bandwidth between the second origin server and the content store to fall below a predetermined threshold.
13. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for upstream bandwidth into the content store to fall below a predetermined threshold.
claim 1
14. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for connection to the network.
claim 1
15. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for upstream bandwidth utilization from a client computer to the content store to fall below a predetermined threshold.
claim 1
16. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for a temporal event.
claim 1
17. A method for loading content objects in a content store on a network, the method comprising steps of:
waiting for a triggering event;
loading a first plurality of content objects from the first origin server onto the content store without a request for any of the first plurality of content objects; and
loading a second plurality of content objects from the second origin server onto the content store without a request for the second plurality of content objects, wherein the performance of the loading steps are conditioned on the waiting step.
18. The method for loading content objects in the content store on the network as recited in , further comprising a step of determining the popularity of the content object.
claim 1
19. The method for loading content objects in the content store on the network as recited in , further comprising steps of:
claim 1
determining if a first origin server is authorized to store content in the content store; and
determining if a second origin server is authorized to store content in the content store.
20. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises at least one of the following steps of waiting for:
claim 1
upstream bandwidth between the first origin server and the content store to fall below a predetermined threshold; and
upstream bandwidth between the second origin server and the content store to fall below a predetermined threshold.
21. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for upstream bandwidth into the content store to fall below a predetermined threshold.
claim 1
22. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for connection to the network.
claim 1
23. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for upstream bandwidth utilization from a client computer to the content store to fall below a predetermined threshold.
claim 1
24. The method for loading content objects in the content store on the network as recited in , wherein the waiting step comprises a step of waiting for a temporal event.
claim 1
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/867,868 US20010051980A1 (en) | 2000-06-01 | 2001-05-29 | Preloading content objects on content exchanges |
AU2001265310A AU2001265310A1 (en) | 2000-06-01 | 2001-06-01 | Preloading content objects on content exchanges |
PCT/US2001/017799 WO2001093533A2 (en) | 2000-06-01 | 2001-06-01 | Preloading content objects on content exchanges |
CA002410853A CA2410853A1 (en) | 2000-06-01 | 2001-06-01 | Preloading content objects on content exchanges |
EP01939833A EP1287657A2 (en) | 2000-06-01 | 2001-06-01 | Preloading content objects on content exchanges |
JP2001588198A JP2004508613A (en) | 2000-06-01 | 2001-06-01 | Preloading content objects into the content exchange |
KR1020027016449A KR20040008258A (en) | 2000-06-01 | 2001-06-01 | Preloading content objects on content exchanges |
CN01813508A CN1451220A (en) | 2000-06-01 | 2001-06-01 | Preloading content object in content server |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US20900700P | 2000-06-01 | 2000-06-01 | |
US66520400A | 2000-09-18 | 2000-09-18 | |
US09/867,868 US20010051980A1 (en) | 2000-06-01 | 2001-05-29 | Preloading content objects on content exchanges |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US66520400A Continuation-In-Part | 2000-06-01 | 2000-09-18 |
Publications (1)
Publication Number | Publication Date |
---|---|
US20010051980A1 true US20010051980A1 (en) | 2001-12-13 |
Family
ID=26903736
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/867,868 Abandoned US20010051980A1 (en) | 2000-06-01 | 2001-05-29 | Preloading content objects on content exchanges |
Country Status (10)
Country | Link |
---|---|
US (1) | US20010051980A1 (en) |
EP (1) | EP1287659A2 (en) |
JP (1) | JP2003535396A (en) |
KR (2) | KR20030026932A (en) |
CN (1) | CN1454426A (en) |
AR (2) | AR029109A1 (en) |
AU (1) | AU2001266652A1 (en) |
CA (1) | CA2410850A1 (en) |
TW (1) | TW510106B (en) |
WO (1) | WO2001093532A2 (en) |
Cited By (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040133478A1 (en) * | 2001-12-18 | 2004-07-08 | Scott Leahy | Prioritization of third party access to an online commerce site |
US20040138835A1 (en) * | 1997-02-12 | 2004-07-15 | Power Measurement Ltd. | Push communications architecture for intelligent electronic devices |
US20050015512A1 (en) * | 2003-05-23 | 2005-01-20 | International Business Machines Corporation | Targeted web page redirection |
US20050022007A1 (en) * | 2003-06-02 | 2005-01-27 | Qwest Communications International Inc | Systems and methods for distributing content objects in a telecommunication system |
US20060041531A1 (en) * | 2003-05-08 | 2006-02-23 | Bart Provoost | Method and arrangement for establishing and updating a user surface used for accessing data pages in a data network |
US20060123395A1 (en) * | 2004-12-07 | 2006-06-08 | International Business Machines Corporation | Controlling user intervention in a multi-processing computer system |
US20060155779A1 (en) * | 2004-12-20 | 2006-07-13 | Chang-Soo Kim | Contents distribution management system with multi-service type management function and method thereof |
US7240361B2 (en) | 2003-01-31 | 2007-07-03 | Qwest Communications International Inc. | Systems and methods for controlled transmittance in a telecommunication system |
US20080071859A1 (en) * | 2002-02-14 | 2008-03-20 | Level 3 Communications, Llc | Popularity-based selective replication in content delivery network |
US20090070782A1 (en) * | 2003-05-09 | 2009-03-12 | Vignette Corporation | Method and system for performing bulk operations on transactional items |
US20090157852A1 (en) * | 2007-12-14 | 2009-06-18 | Michail Krupkin | Flexible and scalable method and apparatus for dynamic subscriber services configuration and management |
US20110026536A1 (en) * | 2005-11-23 | 2011-02-03 | Comcast Cable Holdings, Llc | Device-to-device communication among customer premise equipment devices |
US20110078017A1 (en) * | 2009-09-29 | 2011-03-31 | Selina Lam | Systems and methods for rating an originator of an online publication |
US7941453B1 (en) * | 2003-05-09 | 2011-05-10 | Vignette Software Llc | Method and system for deployment of content using proxy objects |
US8112449B2 (en) | 2003-08-01 | 2012-02-07 | Qwest Communications International Inc. | Systems and methods for implementing a content object access point |
US20130318089A1 (en) * | 2012-05-23 | 2013-11-28 | Oracle International Corporation | Catalog performance and integrity analysis |
US8601545B2 (en) | 2007-11-01 | 2013-12-03 | Comcast Cable Holdings, Llc | Method and system for directing user between captive and open domains |
US8769614B1 (en) * | 2009-12-29 | 2014-07-01 | Akamai Technologies, Inc. | Security framework for HTTP streaming architecture |
US8930538B2 (en) | 2008-04-04 | 2015-01-06 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US20150081846A1 (en) * | 2013-09-17 | 2015-03-19 | Karos Health Incorporated | System and method for bridging divergent information networks |
US9130898B2 (en) | 2003-01-31 | 2015-09-08 | Qwest Communications International Inc. | Transmitting utility usage data via a network interface device |
GB2525700A (en) * | 2013-12-06 | 2015-11-04 | Fastly Inc | Return path selection for content delivery |
US20160212454A1 (en) * | 2010-08-22 | 2016-07-21 | Qwilt, Inc. | System and method for live service content handling with content storing servers caching popular content therein |
US20170019316A1 (en) * | 2010-08-22 | 2017-01-19 | Qwilt, Inc. | System and method for caching popular content respective of a content strong server in an asymmetrical routing topology |
US20170041425A1 (en) * | 2007-11-30 | 2017-02-09 | At&T Intellectual Property I, L.P. | Preloader employing enhanced messages |
US9762692B2 (en) | 2008-04-04 | 2017-09-12 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US9934482B2 (en) | 2013-05-24 | 2018-04-03 | Sap Se | Content maintenance optimization |
US10044802B2 (en) | 2010-08-22 | 2018-08-07 | Qwilt, Inc. | System for detection of content servers and caching popular content therein |
US10127335B2 (en) | 2010-08-22 | 2018-11-13 | Qwilt, Inc | System and method of performing analytics with respect to content storing servers caching popular content |
CN108804351A (en) * | 2018-05-30 | 2018-11-13 | 郑州云海信息技术有限公司 | A kind of caching replacement method and device |
US10796022B2 (en) | 2018-05-16 | 2020-10-06 | Ebay Inc. | Weighted source data secured on blockchains |
US10828092B2 (en) | 2007-05-21 | 2020-11-10 | Atricure, Inc. | Cardiac ablation systems and methods |
US10924573B2 (en) | 2008-04-04 | 2021-02-16 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US11032583B2 (en) | 2010-08-22 | 2021-06-08 | QWLT, Inc. | Method and system for improving high availability for live content |
US11038922B2 (en) | 2013-12-06 | 2021-06-15 | Fastly, Inc. | Secure traffic optimization in an edge network |
US11240335B2 (en) | 2014-04-22 | 2022-02-01 | Qwilt, Inc. | System and methods thereof for delivery of popular content using a multimedia broadcast multicast service |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN100461712C (en) * | 2003-07-24 | 2009-02-11 | 华为技术有限公司 | A network signalling test method |
KR100860734B1 (en) * | 2003-09-12 | 2008-09-29 | 닛본 덴끼 가부시끼가이샤 | Media stream multicast distribution method and apparatus |
KR100829074B1 (en) * | 2006-04-06 | 2008-05-16 | 경희대학교 산학협력단 | Method for selecting the web service provider based on the PROMETHEE algorithm |
CN101262413B (en) * | 2007-03-05 | 2011-01-05 | 华为技术有限公司 | Method, system and device for media buffer |
AU2010202034B1 (en) | 2010-04-07 | 2010-12-23 | Limelight Networks, Inc. | Partial object distribution in content delivery network |
BR112012025582A2 (en) * | 2010-04-07 | 2019-09-24 | Limelight Networks Inc | partial object distribution in content delivery network |
EP3010195A1 (en) * | 2014-10-14 | 2016-04-20 | Alcatel Lucent | Adapting a network for transmitting data between end devices |
CN104320487B (en) * | 2014-11-11 | 2018-03-20 | 网宿科技股份有限公司 | The HTTP scheduling system and method for content distributing network |
Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5185598A (en) * | 1989-12-21 | 1993-02-09 | Matsushita Electric Industrial Co., Ltd. | Character graphic information display device |
US5956716A (en) * | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US5978381A (en) * | 1997-06-06 | 1999-11-02 | Webtv Networks, Inc. | Transmitting high bandwidth network content on a low bandwidth communications channel during off peak hours |
US5991306A (en) * | 1996-08-26 | 1999-11-23 | Microsoft Corporation | Pull based, intelligent caching system and method for delivering data over a network |
US6003030A (en) * | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US6029175A (en) * | 1995-10-26 | 2000-02-22 | Teknowledge Corporation | Automatic retrieval of changed files by a network software agent |
US6038599A (en) * | 1997-04-23 | 2000-03-14 | Mpath Interactive, Inc. | Latency server and matchmaker |
US6101180A (en) * | 1996-11-12 | 2000-08-08 | Starguide Digital Networks, Inc. | High bandwidth broadcast system having localized multicast access to broadcast content |
US6108703A (en) * | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
US6112239A (en) * | 1997-06-18 | 2000-08-29 | Intervu, Inc | System and method for server-side optimization of data delivery on a distributed computer network |
US6275796B1 (en) * | 1997-04-23 | 2001-08-14 | Samsung Electronics Co., Ltd. | Apparatus for quantizing spectral envelope including error selector for selecting a codebook index of a quantized LSF having a smaller error value and method therefor |
US6341304B1 (en) * | 1999-09-23 | 2002-01-22 | International Business Machines Corporation | Data acquisition and distribution processing system |
US6405240B1 (en) * | 1998-08-04 | 2002-06-11 | Mitsubishi Denki Kabushiki Kaisha | Data transfer method |
US6442598B1 (en) * | 1997-10-27 | 2002-08-27 | Microsoft Corporation | System and method for delivering web content over a broadcast medium |
US6553417B1 (en) * | 1998-08-05 | 2003-04-22 | International Business Machines Corporation | Internet data access acknowledgment applet and method |
US6591288B1 (en) * | 1998-05-19 | 2003-07-08 | Nortel Networks Limited | Data network accelerated access system |
US6714976B1 (en) * | 1997-03-20 | 2004-03-30 | Concord Communications, Inc. | Systems and methods for monitoring distributed applications using diagnostic information |
US20040128618A1 (en) * | 2000-04-10 | 2004-07-01 | Anindya Datta | Dynamic page generation acceleration using component-level caching |
US6775828B2 (en) * | 1999-07-19 | 2004-08-10 | Microsoft Corporation | Delayed uploading of user registration data |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
SE507138C2 (en) * | 1996-10-14 | 1998-04-06 | Mirror Image Internet Ab | Procedure and apparatus for information transmission on the Internet |
-
2001
- 2001-05-29 US US09/867,868 patent/US20010051980A1/en not_active Abandoned
- 2001-05-31 AR ARP010102620A patent/AR029109A1/en unknown
- 2001-05-31 AR ARP010102621A patent/AR029110A1/en unknown
- 2001-06-01 CN CN01813213A patent/CN1454426A/en active Pending
- 2001-06-01 AU AU2001266652A patent/AU2001266652A1/en not_active Abandoned
- 2001-06-01 JP JP2001588197A patent/JP2003535396A/en active Pending
- 2001-06-01 CA CA002410850A patent/CA2410850A1/en not_active Abandoned
- 2001-06-01 KR KR1020027016434A patent/KR20030026932A/en active IP Right Grant
- 2001-06-01 EP EP01944219A patent/EP1287659A2/en not_active Withdrawn
- 2001-06-01 KR KR1020027016449A patent/KR20040008258A/en not_active Application Discontinuation
- 2001-06-01 WO PCT/US2001/017779 patent/WO2001093532A2/en not_active Application Discontinuation
- 2001-07-24 TW TW090113228A patent/TW510106B/en not_active IP Right Cessation
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5185598A (en) * | 1989-12-21 | 1993-02-09 | Matsushita Electric Industrial Co., Ltd. | Character graphic information display device |
US5956716A (en) * | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US6003030A (en) * | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US6029175A (en) * | 1995-10-26 | 2000-02-22 | Teknowledge Corporation | Automatic retrieval of changed files by a network software agent |
US5991306A (en) * | 1996-08-26 | 1999-11-23 | Microsoft Corporation | Pull based, intelligent caching system and method for delivering data over a network |
US6101180A (en) * | 1996-11-12 | 2000-08-08 | Starguide Digital Networks, Inc. | High bandwidth broadcast system having localized multicast access to broadcast content |
US6714976B1 (en) * | 1997-03-20 | 2004-03-30 | Concord Communications, Inc. | Systems and methods for monitoring distributed applications using diagnostic information |
US6038599A (en) * | 1997-04-23 | 2000-03-14 | Mpath Interactive, Inc. | Latency server and matchmaker |
US6275796B1 (en) * | 1997-04-23 | 2001-08-14 | Samsung Electronics Co., Ltd. | Apparatus for quantizing spectral envelope including error selector for selecting a codebook index of a quantized LSF having a smaller error value and method therefor |
US5978381A (en) * | 1997-06-06 | 1999-11-02 | Webtv Networks, Inc. | Transmitting high bandwidth network content on a low bandwidth communications channel during off peak hours |
US6112239A (en) * | 1997-06-18 | 2000-08-29 | Intervu, Inc | System and method for server-side optimization of data delivery on a distributed computer network |
US6442598B1 (en) * | 1997-10-27 | 2002-08-27 | Microsoft Corporation | System and method for delivering web content over a broadcast medium |
US6591288B1 (en) * | 1998-05-19 | 2003-07-08 | Nortel Networks Limited | Data network accelerated access system |
US6108703A (en) * | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
US6405240B1 (en) * | 1998-08-04 | 2002-06-11 | Mitsubishi Denki Kabushiki Kaisha | Data transfer method |
US6553417B1 (en) * | 1998-08-05 | 2003-04-22 | International Business Machines Corporation | Internet data access acknowledgment applet and method |
US6775828B2 (en) * | 1999-07-19 | 2004-08-10 | Microsoft Corporation | Delayed uploading of user registration data |
US6341304B1 (en) * | 1999-09-23 | 2002-01-22 | International Business Machines Corporation | Data acquisition and distribution processing system |
US20040128618A1 (en) * | 2000-04-10 | 2004-07-01 | Anindya Datta | Dynamic page generation acceleration using component-level caching |
Cited By (90)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7734380B2 (en) * | 1997-02-12 | 2010-06-08 | Power Measurement Ltd. | Push communications architecture for intelligent electronic devices |
US20040138835A1 (en) * | 1997-02-12 | 2004-07-15 | Power Measurement Ltd. | Push communications architecture for intelligent electronic devices |
CN100428213C (en) * | 2001-12-18 | 2008-10-22 | 电子湾有限公司 | Prioritization of third party access to an online commerce site |
US8793375B2 (en) | 2001-12-18 | 2014-07-29 | Ebay Inc. | Prioritization of third party access to an online commerce site |
US9679323B2 (en) | 2001-12-18 | 2017-06-13 | Paypal, Inc. | Prioritization of third party access to an online commerce site |
US9626705B2 (en) | 2001-12-18 | 2017-04-18 | Paypal, Inc. | Prioritization of third party access to an online commerce site |
US9589289B2 (en) | 2001-12-18 | 2017-03-07 | Paypal, Inc. | Prioritization of third party access to an online commerce site |
US9508094B2 (en) | 2001-12-18 | 2016-11-29 | Paypal, Inc. | Prioritization of third party access to an online commerce site |
US20040133478A1 (en) * | 2001-12-18 | 2004-07-08 | Scott Leahy | Prioritization of third party access to an online commerce site |
US7305469B2 (en) | 2001-12-18 | 2007-12-04 | Ebay Inc. | Prioritization of third party access to an online commerce site |
US8108518B2 (en) | 2001-12-18 | 2012-01-31 | Ebay Inc. | Prioritization of third party access to an online commerce site |
US8239533B2 (en) | 2001-12-18 | 2012-08-07 | Ebay Inc. | Prioritization of third party access to an online commerce site |
US8918505B2 (en) | 2001-12-18 | 2014-12-23 | Ebay Inc. | Prioritization of third party access to an online commerce site |
AU2002357254B2 (en) * | 2001-12-18 | 2008-12-04 | Paypal, Inc. | Prioritization of third party access to an online commerce site |
US10979499B2 (en) | 2002-02-14 | 2021-04-13 | Level 3 Communications, Llc | Managed object replication and delivery |
US9992279B2 (en) | 2002-02-14 | 2018-06-05 | Level 3 Communications, Llc | Managed object replication and delivery |
US8924466B2 (en) | 2002-02-14 | 2014-12-30 | Level 3 Communications, Llc | Server handoff in content delivery network |
US20080071859A1 (en) * | 2002-02-14 | 2008-03-20 | Level 3 Communications, Llc | Popularity-based selective replication in content delivery network |
US9167036B2 (en) | 2002-02-14 | 2015-10-20 | Level 3 Communications, Llc | Managed object replication and delivery |
US20100293599A1 (en) * | 2003-01-31 | 2010-11-18 | Qwest Communications International Inc. | Systems and Methods for Controlled Transmittance in a Telecommunication System |
US8261321B2 (en) | 2003-01-31 | 2012-09-04 | Qwest Communications International Inc. | Systems and methods for controlled transmittance in a telecommunication system |
US7793337B2 (en) | 2003-01-31 | 2010-09-07 | Qwest Communications International Inc | Systems and methods for controlled transmittance in a telecommunication system |
US7240361B2 (en) | 2003-01-31 | 2007-07-03 | Qwest Communications International Inc. | Systems and methods for controlled transmittance in a telecommunication system |
US20070180494A1 (en) * | 2003-01-31 | 2007-08-02 | Qwest Communications International Inc. | Systems And Methods For Controlled Transmittance In A Telecommunication System |
US9130898B2 (en) | 2003-01-31 | 2015-09-08 | Qwest Communications International Inc. | Transmitting utility usage data via a network interface device |
US7617215B2 (en) * | 2003-05-08 | 2009-11-10 | Siemens Aktiengesellschaft | Method and arrangement for setting up and updating a user interface for accessing information pages in a data network |
US20060041531A1 (en) * | 2003-05-08 | 2006-02-23 | Bart Provoost | Method and arrangement for establishing and updating a user surface used for accessing data pages in a data network |
US20110161986A1 (en) * | 2003-05-09 | 2011-06-30 | Vignette Corporation | System and computer program product for performing bulk operations on transactional items |
US9305033B2 (en) | 2003-05-09 | 2016-04-05 | Open Text S.A. | Object based content management system and method |
US7908608B2 (en) | 2003-05-09 | 2011-03-15 | Vignette Software Llc | Method and system for performing bulk operations on transactional items |
US20110196823A1 (en) * | 2003-05-09 | 2011-08-11 | Vignette Software Llc | Object based content management system and method |
US20090070782A1 (en) * | 2003-05-09 | 2009-03-12 | Vignette Corporation | Method and system for performing bulk operations on transactional items |
US10146827B2 (en) | 2003-05-09 | 2018-12-04 | Open Text Sa Ulc | Object based content management system and method |
US8136123B2 (en) | 2003-05-09 | 2012-03-13 | Open Text S.A. | System and computer program product for performing bulk operations on transactional items |
US8364719B2 (en) | 2003-05-09 | 2013-01-29 | Open Text S.A. | Object based content management system and method |
US7941453B1 (en) * | 2003-05-09 | 2011-05-10 | Vignette Software Llc | Method and system for deployment of content using proxy objects |
US20090119391A1 (en) * | 2003-05-23 | 2009-05-07 | International Business Machines Corporation | Targeted web page redirection |
US7519679B2 (en) | 2003-05-23 | 2009-04-14 | International Business Machines Corporation | Targeted web page redirection |
US7970874B2 (en) | 2003-05-23 | 2011-06-28 | International Business Machines Corporation | Targeted web page redirection |
US20050015512A1 (en) * | 2003-05-23 | 2005-01-20 | International Business Machines Corporation | Targeted web page redirection |
US20050022007A1 (en) * | 2003-06-02 | 2005-01-27 | Qwest Communications International Inc | Systems and methods for distributing content objects in a telecommunication system |
US7376386B2 (en) * | 2003-06-02 | 2008-05-20 | Qwest Communications International Inc | Systems and methods for distributing content objects in a telecommunication system |
US8112449B2 (en) | 2003-08-01 | 2012-02-07 | Qwest Communications International Inc. | Systems and methods for implementing a content object access point |
US7703082B2 (en) | 2004-12-07 | 2010-04-20 | International Business Machines Corporation | Controlling user intervention in a multi-processing computer system |
US20060123395A1 (en) * | 2004-12-07 | 2006-06-08 | International Business Machines Corporation | Controlling user intervention in a multi-processing computer system |
US7873609B2 (en) * | 2004-12-20 | 2011-01-18 | Electronics And Telecommunications Research Institute | Contents distribution management system with multi-service type management function and method thereof |
US20060155779A1 (en) * | 2004-12-20 | 2006-07-13 | Chang-Soo Kim | Contents distribution management system with multi-service type management function and method thereof |
US11196622B2 (en) | 2005-11-23 | 2021-12-07 | Comcast Cable Communications, Llc | Initializing, provisioning, and managing devices |
US10171293B2 (en) | 2005-11-23 | 2019-01-01 | Comcast Cable Communications, Llc | Initializing, provisioning, and managing devices |
US20110026536A1 (en) * | 2005-11-23 | 2011-02-03 | Comcast Cable Holdings, Llc | Device-to-device communication among customer premise equipment devices |
US8726306B2 (en) | 2005-11-23 | 2014-05-13 | Comcast Cable Holdings, Llc | Device-specific pre-provisoining access-limiting for a modem and a consumer premise equipment device |
US10828092B2 (en) | 2007-05-21 | 2020-11-10 | Atricure, Inc. | Cardiac ablation systems and methods |
US9654412B2 (en) | 2007-11-01 | 2017-05-16 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US8601545B2 (en) | 2007-11-01 | 2013-12-03 | Comcast Cable Holdings, Llc | Method and system for directing user between captive and open domains |
US11502969B2 (en) | 2007-11-01 | 2022-11-15 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US10200299B2 (en) | 2007-11-01 | 2019-02-05 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US11425212B2 (en) * | 2007-11-30 | 2022-08-23 | At&T Intellectual Property I, L.P. | Preloader employing enhanced messages |
US20170041425A1 (en) * | 2007-11-30 | 2017-02-09 | At&T Intellectual Property I, L.P. | Preloader employing enhanced messages |
US20090157852A1 (en) * | 2007-12-14 | 2009-06-18 | Michail Krupkin | Flexible and scalable method and apparatus for dynamic subscriber services configuration and management |
US9313108B2 (en) * | 2007-12-14 | 2016-04-12 | Ericsson Ab | Flexible and scalable method and apparatus for dynamic subscriber services configuration and management |
US10218806B2 (en) | 2008-04-04 | 2019-02-26 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US10924573B2 (en) | 2008-04-04 | 2021-02-16 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US9762692B2 (en) | 2008-04-04 | 2017-09-12 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US8930538B2 (en) | 2008-04-04 | 2015-01-06 | Level 3 Communications, Llc | Handling long-tail content in a content delivery network (CDN) |
US20110078017A1 (en) * | 2009-09-29 | 2011-03-31 | Selina Lam | Systems and methods for rating an originator of an online publication |
US9485238B2 (en) * | 2009-12-29 | 2016-11-01 | Akamai Technologies, Inc. | Security framework for HTTP streaming architecture |
US20140337958A1 (en) * | 2009-12-29 | 2014-11-13 | Akamai Technologies, Inc. | Security framework for http streaming architecture |
US8769614B1 (en) * | 2009-12-29 | 2014-07-01 | Akamai Technologies, Inc. | Security framework for HTTP streaming architecture |
US10812837B2 (en) | 2010-08-22 | 2020-10-20 | Qwilt, Inc | System and method for live service content handling with content storing servers caching popular content therein |
US10127335B2 (en) | 2010-08-22 | 2018-11-13 | Qwilt, Inc | System and method of performing analytics with respect to content storing servers caching popular content |
US10044802B2 (en) | 2010-08-22 | 2018-08-07 | Qwilt, Inc. | System for detection of content servers and caching popular content therein |
US10097428B2 (en) * | 2010-08-22 | 2018-10-09 | Qwilt, Inc. | System and method for caching popular content respective of a content strong server in an asymmetrical routing topology |
US10097863B2 (en) * | 2010-08-22 | 2018-10-09 | Qwilt, Inc. | System and method for live service content handling with content storing servers caching popular content therein |
US11032583B2 (en) | 2010-08-22 | 2021-06-08 | QWLT, Inc. | Method and system for improving high availability for live content |
US20170019316A1 (en) * | 2010-08-22 | 2017-01-19 | Qwilt, Inc. | System and method for caching popular content respective of a content strong server in an asymmetrical routing topology |
US20160212454A1 (en) * | 2010-08-22 | 2016-07-21 | Qwilt, Inc. | System and method for live service content handling with content storing servers caching popular content therein |
US20130318089A1 (en) * | 2012-05-23 | 2013-11-28 | Oracle International Corporation | Catalog performance and integrity analysis |
US8943065B2 (en) * | 2012-05-23 | 2015-01-27 | Oracle International Corporation | Catalog performance and integrity analysis |
US9934482B2 (en) | 2013-05-24 | 2018-04-03 | Sap Se | Content maintenance optimization |
US20150081846A1 (en) * | 2013-09-17 | 2015-03-19 | Karos Health Incorporated | System and method for bridging divergent information networks |
US10116752B2 (en) * | 2013-09-17 | 2018-10-30 | Karos Health Incorporated | System and method for bridging divergent information networks |
US11038922B2 (en) | 2013-12-06 | 2021-06-15 | Fastly, Inc. | Secure traffic optimization in an edge network |
US9906618B2 (en) | 2013-12-06 | 2018-02-27 | Fastly Inc. | Return path selection for content delivery |
US10469610B2 (en) | 2013-12-06 | 2019-11-05 | Fastly, Inc. | Return path selection for content delivery |
GB2525700A (en) * | 2013-12-06 | 2015-11-04 | Fastly Inc | Return path selection for content delivery |
US11240335B2 (en) | 2014-04-22 | 2022-02-01 | Qwilt, Inc. | System and methods thereof for delivery of popular content using a multimedia broadcast multicast service |
US10796022B2 (en) | 2018-05-16 | 2020-10-06 | Ebay Inc. | Weighted source data secured on blockchains |
US11514191B2 (en) | 2018-05-16 | 2022-11-29 | Ebay Inc. | Weighted source data secured on blockchains |
CN108804351A (en) * | 2018-05-30 | 2018-11-13 | 郑州云海信息技术有限公司 | A kind of caching replacement method and device |
US11706256B2 (en) | 2019-06-14 | 2023-07-18 | Fastly, Inc. | Secure traffic optimization in an edge network |
Also Published As
Publication number | Publication date |
---|---|
WO2001093532B1 (en) | 2003-03-20 |
JP2003535396A (en) | 2003-11-25 |
WO2001093532A3 (en) | 2002-06-06 |
WO2001093532A2 (en) | 2001-12-06 |
EP1287659A2 (en) | 2003-03-05 |
CA2410850A1 (en) | 2001-12-06 |
AR029110A1 (en) | 2003-06-04 |
CN1454426A (en) | 2003-11-05 |
AU2001266652A1 (en) | 2001-12-11 |
KR20030026932A (en) | 2003-04-03 |
KR20040008258A (en) | 2004-01-28 |
TW510106B (en) | 2002-11-11 |
AR029109A1 (en) | 2003-06-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20010051980A1 (en) | Preloading content objects on content exchanges | |
CA2410861C (en) | System for network addressing | |
US6879998B1 (en) | Viewer object proxy | |
US6658000B1 (en) | Selective routing | |
CA2413956C (en) | Active directory for content objects | |
US6904460B1 (en) | Reverse content harvester | |
WO2001093533A2 (en) | Preloading content objects on content exchanges | |
CA2410959A1 (en) | Content tracking | |
CA2413886A1 (en) | Client side holistic health check | |
CA2410847A1 (en) | Content manager | |
CA2410863A1 (en) | Client side address routing analysis |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: AEROCAST.COM, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:RACIBORSKI, NATHAN F.;THOMPSON, MARK R.;REEL/FRAME:011873/0367Effective date: 20010524 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:035465/0001Effective date: 20141028 |
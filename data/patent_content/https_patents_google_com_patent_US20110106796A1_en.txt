US20110106796A1 - System and method for recommendation of interesting web pages based on user browsing actions - Google Patents
System and method for recommendation of interesting web pages based on user browsing actions Download PDFInfo
- Publication number
- US20110106796A1 US20110106796A1 US12/608,922 US60892209A US2011106796A1 US 20110106796 A1 US20110106796 A1 US 20110106796A1 US 60892209 A US60892209 A US 60892209A US 2011106796 A1 US2011106796 A1 US 2011106796A1
- Authority
- US
- United States
- Prior art keywords
- computer
- user
- web
- page
- web pages
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/954—Navigation, e.g. using categorised browsing
Definitions
- the present invention provides systems and methods for recommending content stored on computer systems interconnected by one or more networks and accessible through graphical user interfaces such as the World Wide Web.
- the Internet is a vast and expanding network of computer systems and other devices linked together by various communications media, enabling these computer systems and other devices to exchange and share data.
- Content available on the computer systems (often called “hosts”) which make up the Internet provides information about a myriad of companies, people and products, as well as educational, research and entertainment information and services. All hosts accessible through the Internet have an associated address (often expressed in the form of a Uniform Resource Locator or URL), which allows each host to be uniquely identified and located.
- URL Uniform Resource Locator
- a graphical user interface provides means for users to view the hosted content using specialized computer programs called Web browsers.
- a browser runs on a user's local computer system (which may be a personal computer or handheld device, mobile phone, etc.), and receives from a host instructions which inform the browser how to present or render content retrieved from the host (or other computer resource).
- Such presentations often take the form of “Web pages”, and a collection of Web pages organized under a common Internet address is often referred to as a Web site.
- Web sites and portals (which may be regarded as Web site that aggregate information from other Web sites in a common manner—more recent portals include features for user-specified patterns of aggregation) include recommender systems—that is, means for filtering information from a variety of hosts and other resources in a manner thought to be of likely interest for a particular user or class of users.
- recommender systems have detailed information regarding the user (e.g., in the form of a user profile) and make recommendations concerning content by comparing that user information to some reference characteristic of a plurality of Web sites.
- the information about users in user profiles can be obtained from their behavior on the site or from other kinds of activities off the site, for example, histories of purchases from e-commerce sites or histories of viewed movies from online DVD rental sites.
- Recommender systems are used for many purposes, such as presenting to users opportunities for reviewing potentially interesting new content available through one or more Web sites, and suggesting items for purchase.
- StumbleUponTM a recommendation system that uses social networking concepts to display Web pages thought to be of interest to a user. Recommendations may be based on the user's ratings of previously viewed Web pages, ratings provided by the user's “friends” (as defined by the user), and ratings provided by users with similar interests to the subject users (as determined by comparisons of information included in the various users' profiles). In particular, users rate pages they like and which are clustered in categories. Clusters of pages which have been rated interesting in certain categories by a large group of users can then be used as a basis for recommending new pages from such clusters.
- recommended Web sites are presented in response to a user visit to a Web site, a Web history of previous visits to a Web site, or a user-initiated search query.
- the Web sites that are recommended are those deemed most similar to the subject Web site or to the results of the search query, as appropriate.
- Information regarding each of the recommended Web sites is retrieved from a data structure stored at a location within a distributed system identified by a distributed hash table. Similarity between the subject Web site or query responses and various Web pages may be estimated according to a scalar product of vectors representing the subject Web site or query response and each respective Web page. These vectors are updated, for example in response to user visits to the associated Web pages and according to maturity factors associated with each respective user that visits the respective Web page.
- the user visits may include references by virtual users and/or ratings by oracles.
- information regarding recommended sites is stored in a hybrid data structure consisting of a distributed system and a centralized system that includes multiple computers connected through a local network.
- Similarity between Web pages may be assessed each time an individual user visits a page and data structures stored in the distributed system may be updated to reflect these assessments. These assessments may make use of history information regarding user browsing activities and/or category information associated with each Web page and may be performed for Web pages along routes defined within an undirected graph between computer systems that make up the distributed system.
- FIG. 1 illustrates an example of a distributed system suitable for storing information at locations defined by a DHT in accordance with an embodiment of the present invention.
- FIG. 2 illustrates an example of a computer system suitable for use in the distributed system shown in FIG. 1 .
- FIG. 3 illustrates an architectural view of the computer system shown in FIG. 2 .
- Described below are new methods and systems for recommending Web pages based on user browsing actions.
- a set of tuples (user, page, rating, lime), is used to describe a user's interest in a particular Web page.
- information will exist only for a subset of every possible (user, page) pair, and ratings will typically be known only for a relatively small number of such pairs. Stated differently, it is not necessary for purposes of the present invention to have complete information regarding every possible (user, page) pair.
- Values of the ratings can be measured in any of several ways.
- a rating may be either 0 or 1, depending on whether the subject user has visited the page or not.
- Page visits can be tracked, for example, using a browser extension that monitors the URL of pages loaded in a user's Web browser.
- ratings can be also calculated using information such as the time spent by a user viewing a subject page (which time can be monitored by the browser extension), preferences or interests explicitly stated by a subject user (e.g., as part of a user profile maintained by the browser extension or in a centralized server or in a distributed system based on a distributed hash table such as a distributed file system-based distributed hash table (DHTFS)), or preference or interest information derived from a subject user's Web browsing history (which may be compiled by the browser extension based on items such as number or frequency of visits, keywords in visited Web pages, bookmarking, etc.). Rating information for the (user, page) pairs is maintained and forms the basis for providing recommendations regarding Web pages that are likely to be of interest but which a subject user has not yet visited.
- a distributed hash table such as a distributed file system-based distributed hash table (DHTFS)
- preference or interest information derived from a subject user's Web browsing history which may be compiled by the browser extension based on items such as number or frequency
- each user and each page is defined by a k-element vector, U for a user and V for a page, where k is a fixed constant.
- U and V can be regarded as descriptions of the user's preferences and descriptions of the page's properties, respectively. That is, the values of the i th elements of the user vector (U i ) and the page vector (V i ) represent how much the designated user likes the i th property (or how important that property is to the user) and how much a particular Web page has (or is representative of) the i th property, respectively.
- We can then estimate how much a particular user likes a particular Web page by calculating the dot (scalar) product of their vectors
- the k-element vectors U and V may be formed as follows: Each time a user's rating of a page is obtained, the respective vectors are matched against each other and updated, so that the scalar product of the two vectors after each is updated is a successively closer approximation to the user's actual rating of the subject page than was the case before the vectors were updated.
- maturity is determined empirically as a fixed constant that, in the process of computing rating values, gives the best tradeoff between low maturities, which give well-formed pages slower influence but reduce rates of convergence, and high maturities, which give early vectors more influence in the process of convergence but can increase errors.
- the updating operation is performed as follows: For a given user vector U and page vector V, a random subset of U's indices is selected. Then, for each index j in that subset, U j is modified by an amount proportional to the difference between U j and V j and the maturity number of vector V. We make sure that V j stays within wanted bounds (e.g., ⁇ 1 to 1, where ⁇ 1 indicates a complete absence of a property and +1 indicates the property is fully encompassed or represented by the subject page) by trimming out of bound values.
- wanted bounds e.g., ⁇ 1 to 1, where ⁇ 1 indicates a complete absence of a property and +1 indicates the property is fully encompassed or represented by the subject page
- rating is the user's actual rating of the subject page (obtained from user input via a browser extension, for example);
- virtual users can be used to speed up the vector forming process.
- Each virtual user has an associated set of pages that have something in common.
- each blogroll of a certain blog is, almost by definition, a set of pages that the blogger responsible for the blog likes, hence, the blogger may be considered as a virtual user for purposes of rating the pages encompassed by the blogroll.
- Another example of a virtual user could be an RSS feed and the page links contained therein can be considered as having been rated by the feed.
- certain virtual users are considered to be so important that they should be permitted to rate any page.
- Examples of such oracles may be well-known Web portals such as Yahoo!TM and the like. Oracles are important for dealing with the cold start problem.
- Cold start refers to the circumstance of a new page entering the system (i.e., a page which no user has previously rated). A new page will have no associated vector V, and so any attempt to determine how similar it is to other vectors would give a meaningless result.
- the present invention employs an “inverse triggering” strategy: Whenever a new page is encountered, various oracles are called or polled to rate it so that its initial vector can be formed in a relatively short period of time. This may be done, for example, by the above-mentioned browser extension sending a request for an oracle rating if a new page is loaded by the browser and no corresponding vector for that page can be located.
- Oracles can also be used as classifiers for various categories, hence, a rating that an oracle assigns to a page can be regarded as a measure of how well the page fits the category associated with the oracle (each oracle is preferably associated with only one category).
- the page vectors are stored in a distributed system at storage locations defined by a distributed hash table-based distributed file system (DHTFS). Such locations may be distributed among a number of different computer systems communicatively coupled to one another through one or more networks.
- DTFS distributed hash table-based distributed file system
- a hash table is a function that uniformly and, often uniquely, maps strings to a range of numbers. The number to which a hash function maps a given string is called the key for that string.
- a distributed hash table then, is a means for partitioning the space of all possible keys among a set of computers communicatively connected to one another through one or more networks. The DHT automatically routes messages to the computer responsible for a set of keys to which a given key belongs.
- a distributed file system is a method for storing and organizing computer data on many computers connected through a network.
- An important characteristic of a distributed file system is that it presents a unified view to data and files stored on it such that all data can be accessed without regard to what particular computer, or plurality of computers, the data are actually stored on.
- FIG. 1 An example of a distributed system 100 suitable for storing information at locations defined by a DHT is illustrated in FIG. 1 .
- Each computer 102 a - 102 n is communicatively coupled via one or more networks 104 (such as the Internet) and can be responsible for storing various pieces of information.
- the page vectors are each stored as part of a larger construct called a url_tracker.
- Each url_tracker contains a variety of information about its subject page, e.g., a page identifier (urlID), the title of the page, keywords on the page, the rank of the page with respect to those keywords, etc.
- urlID page identifier
- keyword_tracker structures that contain all URLs with the corresponding keyword in it are maintained. These trackers are distributed among and stored at computer systems 102 a - 102 n , at locations defined by a DHT.
- computer systems 102 a - 102 n are used to store the url_trackers and keyword_trackers in a DHTFS, for example through the use of appropriately coded computer-readable instructions stored on computer-readable media and executed by computer processors associated with each computer system 120 a - 102 n .
- the DHTFS stores this content across the address space defined by the storage devices of computer systems 102 a - 102 n using the DHT keys as partitions for that address space and in practice the number of individual computer systems that make up distributed system 100 may be very large.
- user vectors may be stored locally at these computer systems, with each respective computer system storing the user vector(s) for one or more users associated with the respective computer system.
- An example of such a computer system 200 is shown in FIG. 2 .
- Computer system 200 upon which the above-mentioned browser extension may be installed, includes a bus 202 or other communication mechanism for communicating information, and a processor 204 coupled with the bus 202 for processing information.
- Computer system 200 also includes a main memory 206 , such as a RAM or other dynamic storage device, coupled to the bus 202 for storing information and instructions (such as instructions comprising the browser extension software when it is running) to be executed by processor 204 .
- Main memory 206 also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed by processor 204 .
- Computer system 200 further includes a ROM 208 or other static storage device coupled to the bus 202 for storing static information and instructions for the processor 204 .
- a storage device 210 such as a hard disk, is provided and coupled to the bus 202 for storing information and instructions (such as instructions comprising the browser extension).
- Computer system 200 may be coupled via the bus 202 to a display 212 for displaying information to a computer user.
- An input device 214 is coupled to the bus 202 for communicating information and command selections to the processor 204 .
- cursor control device 216 is Another type of user input device, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor 204 and for controlling cursor movement on the display 212 .
- Computer system 200 also includes a communication interface 218 coupled to the bus 202 .
- Communication interface 208 provides for two-way, wired and/or wireless data communication to/from computer system 200 , for example, via a local area network (LAN).
- Communication interface 218 sends and receives electrical, electromagnetic or optical signals which carry digital data streams representing various types of information.
- two or more computer systems 200 may be networked together in a conventional manner with each using a respective communication interface 218 .
- Network link 220 typically provides data communication through one or more networks to other data devices.
- network link 220 may provide a connection through LAN 222 to a host computer 224 or to data equipment operated by an Internet service provider (ISP) 226 .
- ISP 226 in turn provides data communication services through the Internet 228 , which, in turn, may provide connectivity to multiple remote computer systems 230 a - 230 n (any or all of which may be similar to computer system 200 ).
- LAN 222 and Internet 228 both use electrical, electromagnetic or optical signals which carry digital data streams.
- Computer system 200 can send messages and receive data through the network(s), network link 220 and communication interface 218 .
- FIG. 3 illustrates the same computer system 200 , this time from an architectural standpoint.
- the computer system includes a hardware layer 302 , which is abstracted by an operating system 304 . Any conventional operating system may be used.
- the operating system may be stored in storage device 210 and read into memory 206 when executing.
- Running on top of the operating system are the programs which make up the application layer 306 , including a Web browser 308 .
- the browser extension or plug-in 310 or in some cases a separate program in application layer 306 , runs on computer system 200 to provide the recommendation functions described herein.
- Browser plug-ins and extensions are computer implemented processes integrated into a browser environment and which are capable of performing miscellaneous actions in response to user actions within the browser.
- the url_trackers (with the associated page vectors) are distributed among the user computer systems that form the distributed network at locations identified by the DHT, and when needed can be accessed in real time. Copies of the url_trackers are stored a different ones of the user computer systems to account for the fact that not all of these user computers will be accessible at all times and the copies are synchronized to reflect updates.
- the user vectors are stored at the respective user computers and each user computer runs an instance of the browser extension which performs the recommendation computations discussed herein.
- the corresponding user vector is obtained (using a DHT get operation) from the url_tracker responsible for the page, new vectors are computed (at the associated user computer) and the resulting page vector is sent back to the location (using a DHT put operation) where it is stored (locally or at another computer system of the distributed network).
- the updates can be performed at the computer hosting the associated url_tracker and the updated user vector and other information returned to the subject user's computer system.
- keyword_trackers are distributed among the user computer systems that form the distributed network at locations identified by the DHT, and when needed can be accessed in real time. Copies of the keyword_trackers are stored a different ones of the user computer systems to account for the fact that not all of these user computers will be accessible at all times and the copies are synchronized to reflect updates.
- the corresponding keyword_tracker is obtained (e.g., using a DHT get operation) and the pages identified on the keyword_tracker returned.
- a resulting list of pages can be presented to the user.
- the present system locates pages similar to those which are visited by a user or which are identified in response to a search query.
- the recommendations may be presented via a display, such as display 212 , at the user's computer system.
- the recommendations may be displayed in a separate area of a Web page that lists search results, or may be displayed in a toolbar or other screen area associated with the browser extension discussed above.
- the K most similar pages to P are collected and displayed.
- identifiers for the most similar pages for page P are stored on page. P's url_tracker.
- B Pairing in web history.
- User client programs e.g., the browser extensions
- a threshold value which may be a global threshold for all pages or a page-specific threshold
- this information is provided (e.g., via a put operation) to the corresponding url_trackers for the pages.
- each page is tagged with one or more category tags.
- the tags are considered as keywords, and all pages with the same tag are listed on a common keyword_tracker.
- a check of all pairs of pages on each keyword_tracker (no matter if it represents a tag or a regular word) is made and if their similarity is greater than the threshold for a given page (or a global threshold for all pages), the keyword_tracker provides this information to the corresponding url_tracker
- E. Dedicated trackers Beside regular vectors with lengths of, say, 100, it is also possible to maintain much smaller vectors, containing just a few elements. These smaller vectors can be quantized and dedicated vector trackers introduced to represent them. Each url_tracker then sends its vector to the vector tracker which is most similar to small vector of subject page (which can be computed locally), and so the vector trackers associated with the small vectors will, over time, gather URLs of pages that are similar to each other.
- Any or all of the above-described methods can be used collectively and/or independently of one another, thereby maximizing the opportunity to determine the exact set of K most similar pages for a subject page.
- the present recommendation methodologies can be used for finding recommended pages for a given user, finding similar pages to a given Web page, personalized ranking schemes, and extending a query result set with similar pages not necessarily containing query words, among other applications.
- page vectors can be stored in a hybrid system that combines a distributed system based on a distributed hash table and a centralized system that includes multiple computers connected through a local network.
- various embodiments of the present invention may be implemented with the aid of computer-implemented processes or methods (i.e., computer programs or routines) or on any programmable or dedicated hardware implementing digital logic.
- Such processes may be rendered in any computer language including, without limitation, a object oriented programming language, assembly language, markup languages, and the like, as well as object-oriented environments such as the Common Object Request Broker Architecture (CORBA), JavaTM and the like, or on any programmable logic hardware like CPLD, FPGA and the like.
- CORBA Common Object Request Broker Architecture
- JavaTM JavaTM
- CPLD programmable logic hardware
- Such apparatus may be specially constructed for the required purposes, or may be appropriately programmed, or selectively activated or reconfigured by a computer-readable instructions stored in or on computer-readable storage media (such as, but not limited to, any type of disk including floppy disks, optical disks, hard disks, CD-ROMs, and magnetic-optical disks, or read-only memories (ROMs), random access memories (RAMs), erasable ROMs (EPROMs), electrically erasable ROMs (EEPROMs), magnetic or optical cards, or any type of media suitable for storing computer-readable instructions) to perform the operations.
- ROMs read-only memories
- RAMs random access memories
- EPROMs erasable ROMs
- EEPROMs electrically erasable ROMs
- magnetic or optical cards or any type of media suitable for storing computer-readable instructions
Abstract
Description
- The present invention provides systems and methods for recommending content stored on computer systems interconnected by one or more networks and accessible through graphical user interfaces such as the World Wide Web.
- The Internet is a vast and expanding network of computer systems and other devices linked together by various communications media, enabling these computer systems and other devices to exchange and share data. Content available on the computer systems (often called “hosts”) which make up the Internet provides information about a myriad of companies, people and products, as well as educational, research and entertainment information and services. All hosts accessible through the Internet have an associated address (often expressed in the form of a Uniform Resource Locator or URL), which allows each host to be uniquely identified and located.
- A graphical user interface, the World Wide Web or simply the “Web”, provides means for users to view the hosted content using specialized computer programs called Web browsers. A browser runs on a user's local computer system (which may be a personal computer or handheld device, mobile phone, etc.), and receives from a host instructions which inform the browser how to present or render content retrieved from the host (or other computer resource). Such presentations often take the form of “Web pages”, and a collection of Web pages organized under a common Internet address is often referred to as a Web site.
- Many Web sites and portals (which may be regarded as Web site that aggregate information from other Web sites in a common manner—more recent portals include features for user-specified patterns of aggregation) include recommender systems—that is, means for filtering information from a variety of hosts and other resources in a manner thought to be of likely interest for a particular user or class of users. Often, such recommender systems have detailed information regarding the user (e.g., in the form of a user profile) and make recommendations concerning content by comparing that user information to some reference characteristic of a plurality of Web sites. The information about users in user profiles can be obtained from their behavior on the site or from other kinds of activities off the site, for example, histories of purchases from e-commerce sites or histories of viewed movies from online DVD rental sites. Recommender systems are used for many purposes, such as presenting to users opportunities for reviewing potentially interesting new content available through one or more Web sites, and suggesting items for purchase.
- One example of a content recommendation system is StumbleUpon™, a recommendation system that uses social networking concepts to display Web pages thought to be of interest to a user. Recommendations may be based on the user's ratings of previously viewed Web pages, ratings provided by the user's “friends” (as defined by the user), and ratings provided by users with similar interests to the subject users (as determined by comparisons of information included in the various users' profiles). In particular, users rate pages they like and which are clustered in categories. Clusters of pages which have been rated interesting in certain categories by a large group of users can then be used as a basis for recommending new pages from such clusters.
- In one embodiment, recommended Web sites are presented in response to a user visit to a Web site, a Web history of previous visits to a Web site, or a user-initiated search query. The Web sites that are recommended are those deemed most similar to the subject Web site or to the results of the search query, as appropriate. Information regarding each of the recommended Web sites is retrieved from a data structure stored at a location within a distributed system identified by a distributed hash table. Similarity between the subject Web site or query responses and various Web pages may be estimated according to a scalar product of vectors representing the subject Web site or query response and each respective Web page. These vectors are updated, for example in response to user visits to the associated Web pages and according to maturity factors associated with each respective user that visits the respective Web page. The user visits may include references by virtual users and/or ratings by oracles. In another embodiment of the invention, information regarding recommended sites is stored in a hybrid data structure consisting of a distributed system and a centralized system that includes multiple computers connected through a local network.
- Similarity between Web pages may be assessed each time an individual user visits a page and data structures stored in the distributed system may be updated to reflect these assessments. These assessments may make use of history information regarding user browsing activities and/or category information associated with each Web page and may be performed for Web pages along routes defined within an undirected graph between computer systems that make up the distributed system.
- These and further embodiments and features of the present invention are discussed in greater detail below.
- The present invention is illustrated by way of example, and not limitation, in the figures of the accompanying drawings, in which:
-
FIG. 1 illustrates an example of a distributed system suitable for storing information at locations defined by a DHT in accordance with an embodiment of the present invention. -
FIG. 2 illustrates an example of a computer system suitable for use in the distributed system shown inFIG. 1 . -
FIG. 3 illustrates an architectural view of the computer system shown inFIG. 2 . - Described below are new methods and systems for recommending Web pages based on user browsing actions.
- In one embodiment of the present invention, a set of tuples, (user, page, rating, lime), is used to describe a user's interest in a particular Web page. Of course, information will exist only for a subset of every possible (user, page) pair, and ratings will typically be known only for a relatively small number of such pairs. Stated differently, it is not necessary for purposes of the present invention to have complete information regarding every possible (user, page) pair.
- Values of the ratings can be measured in any of several ways. In its simplest form, a rating may be either 0 or 1, depending on whether the subject user has visited the page or not. Page visits can be tracked, for example, using a browser extension that monitors the URL of pages loaded in a user's Web browser.
- In addition, ratings can be also calculated using information such as the time spent by a user viewing a subject page (which time can be monitored by the browser extension), preferences or interests explicitly stated by a subject user (e.g., as part of a user profile maintained by the browser extension or in a centralized server or in a distributed system based on a distributed hash table such as a distributed file system-based distributed hash table (DHTFS)), or preference or interest information derived from a subject user's Web browsing history (which may be compiled by the browser extension based on items such as number or frequency of visits, keywords in visited Web pages, bookmarking, etc.). Rating information for the (user, page) pairs is maintained and forms the basis for providing recommendations regarding Web pages that are likely to be of interest but which a subject user has not yet visited.
- To provide meaningful recommendations, various correlations are important. Accordingly, we measure (a) the similarity between two Web pages, (b) associations between Web pages and users, and (c) similarities between pairs of users. In one embodiment of the invention, these measurements are achieved using a collaborative filtering methodology somewhat similar to singular value decomposition.
- More particularly, to measure associations between Web pages and users, each user and each page is defined by a k-element vector, U for a user and V for a page, where k is a fixed constant. For each user and each page, U and V can be regarded as descriptions of the user's preferences and descriptions of the page's properties, respectively. That is, the values of the ith elements of the user vector (Ui) and the page vector (Vi) represent how much the designated user likes the ith property (or how important that property is to the user) and how much a particular Web page has (or is representative of) the ith property, respectively. We can then estimate how much a particular user likes a particular Web page by calculating the dot (scalar) product of their vectors
-
- To measure similarities between pairs of pages or pairs of users, we perform a similar measurement between the two corresponding vectors (e.g., between U1 and U2 for users 1 and 2, respectively, and between V1 and V2 for pages 1 and 2, respectively).
- The k-element vectors U and V may be formed as follows: Each time a user's rating of a page is obtained, the respective vectors are matched against each other and updated, so that the scalar product of the two vectors after each is updated is a successively closer approximation to the user's actual rating of the subject page than was the case before the vectors were updated.
- Because pages and users can appear at any time (i.e., because new Web pages can be created and/or rated at any time and new users can agree to participate in or opt out of a system or service which provides the recommendations discussed herein at any time), it is desirable to avoid situations where new, unformed vectors influence already well-formed vectors. This is accomplished, in one embodiment of the invention, by associating a maturity number (or weight) with each vector. The maturity number is set to zero (0) initially, and each time a vector is matched against another the maturity number for the vector is increased by a small positive value, smaller than one (1), with the sum increasing towards one (1). The larger the maturity number, the greater the modification to the vector it modifies. In one embodiment of the invention, maturity is determined empirically as a fixed constant that, in the process of computing rating values, gives the best tradeoff between low maturities, which give well-formed pages slower influence but reduce rates of convergence, and high maturities, which give early vectors more influence in the process of convergence but can increase errors.
- In one embodiment of the invention, the updating operation is performed as follows: For a given user vector U and page vector V, a random subset of U's indices is selected. Then, for each index j in that subset, Uj is modified by an amount proportional to the difference between Uj and Vj and the maturity number of vector V. We make sure that Vj stays within wanted bounds (e.g., −1 to 1, where −1 indicates a complete absence of a property and +1 indicates the property is fully encompassed or represented by the subject page) by trimming out of bound values. Thus, for a given U and V,
-
guess=U·V, - where • is a dot (scalar) product and “guess” is an estimate of the user's rating of the subject page (i.e., an estimate of how much the subject user likes the subject page)
-
err=rating−guess, - where rating is the user's actual rating of the subject page (obtained from user input via a browser extension, for example);
- and the update is performed as follows:
-
- for R random indices i,
-
U i =U i+[training_speed*signum(V i)*maturity(V)*err], -
- where training_speed is a damping factor, which may be selected empirically as a best tradeoff between a rate of convergence and a magnitude of the error, signum(Vi) is defined as +1 for Vi>0 and −1 for Vi<0, and values of Ui are trimmed if they are out of range;
- increase maturity(U); and
- perform a similar modification of vector V.
- where training_speed is a damping factor, which may be selected empirically as a best tradeoff between a rate of convergence and a magnitude of the error, signum(Vi) is defined as +1 for Vi>0 and −1 for Vi<0, and values of Ui are trimmed if they are out of range;
- Given the vast number of web pages and users but the relatively small intersection between a particular Web page and an individual user, it is useful to have a seeding process to assist in establishing initial values for the user and page vectors. Hence, in one embodiment of the invention, “virtual users” can be used to speed up the vector forming process. Each virtual user has an associated set of pages that have something in common. For example, each blogroll of a certain blog is, almost by definition, a set of pages that the blogger responsible for the blog likes, hence, the blogger may be considered as a virtual user for purposes of rating the pages encompassed by the blogroll. Another example of a virtual user could be an RSS feed and the page links contained therein can be considered as having been rated by the feed.
- In some instances, certain virtual users, called “oracles”, are considered to be so important that they should be permitted to rate any page. Examples of such oracles may be well-known Web portals such as Yahoo!™ and the like. Oracles are important for dealing with the cold start problem.
- Cold start refers to the circumstance of a new page entering the system (i.e., a page which no user has previously rated). A new page will have no associated vector V, and so any attempt to determine how similar it is to other vectors would give a meaningless result. To deal with this issue, the present invention employs an “inverse triggering” strategy: Whenever a new page is encountered, various oracles are called or polled to rate it so that its initial vector can be formed in a relatively short period of time. This may be done, for example, by the above-mentioned browser extension sending a request for an oracle rating if a new page is loaded by the browser and no corresponding vector for that page can be located. Oracles can also be used as classifiers for various categories, hence, a rating that an oracle assigns to a page can be regarded as a measure of how well the page fits the category associated with the oracle (each oracle is preferably associated with only one category).
- As alluded to above, in order to be used as part of the recommendation process the user and page vectors need to be accessible to the browser extensions or other computational engine responsible for providing the recommendations. In one embodiment of the invention, the page vectors are stored in a distributed system at storage locations defined by a distributed hash table-based distributed file system (DHTFS). Such locations may be distributed among a number of different computer systems communicatively coupled to one another through one or more networks.
- A hash table is a function that uniformly and, often uniquely, maps strings to a range of numbers. The number to which a hash function maps a given string is called the key for that string. A distributed hash table (DHT) then, is a means for partitioning the space of all possible keys among a set of computers communicatively connected to one another through one or more networks. The DHT automatically routes messages to the computer responsible for a set of keys to which a given key belongs.
- A distributed file system is a method for storing and organizing computer data on many computers connected through a network. An important characteristic of a distributed file system is that it presents a unified view to data and files stored on it such that all data can be accessed without regard to what particular computer, or plurality of computers, the data are actually stored on.
- An example of a distributed
system 100 suitable for storing information at locations defined by a DHT is illustrated inFIG. 1 . Each computer 102 a-102 n is communicatively coupled via one or more networks 104 (such as the Internet) and can be responsible for storing various pieces of information. The storage space for the entire distributed system divided among computers 102 a-102 n using a DHT. - In an embodiment of the present invention, the page vectors are each stored as part of a larger construct called a url_tracker. Each url_tracker contains a variety of information about its subject page, e.g., a page identifier (urlID), the title of the page, keywords on the page, the rank of the page with respect to those keywords, etc. In addition, keyword_tracker structures that contain all URLs with the corresponding keyword in it are maintained. These trackers are distributed among and stored at computer systems 102 a-102 n, at locations defined by a DHT. More particularly, computer systems 102 a-102 n are used to store the url_trackers and keyword_trackers in a DHTFS, for example through the use of appropriately coded computer-readable instructions stored on computer-readable media and executed by computer processors associated with each computer system 120 a-102 n. The DHTFS stores this content across the address space defined by the storage devices of computer systems 102 a-102 n using the DHT keys as partitions for that address space and in practice the number of individual computer systems that make up distributed
system 100 may be very large. - The storage and retrieval of content items from the DHTFS are facilitated through two principal kinds of messages:
-
- put(key,value)
- go(key)
The DHT put message is used for storing an arbitrary sequence of bytes value under the key key. The DHT get message returns the last value stored in the DHT under a given key. Thus, each url_tracker can be encoded as a DHT put request to the hash corresponding to, for example, the URL of the page to which the url_tracker pertains. Similarly, keyword_trackers may be stored in appropriate locations. Creation of replicas of the stored trackers and synchronization among them may, in various embodiments of the invention, be handled by the underlying distributed file system as more fully discussed in a co-pending U.S. patent application entitled, “DHT-BASED DISTRIBUTED FILE SYSTEM FOR SIMULTANEOUS USE BY MILLIONS OF FREQUENTLY DISCONNECTED, WORLD-WIDE USERS”, attorney's docket no. 12000091-0001-002, filed on even date herewith, assigned to the assignee of the present invention and incorporated herein by reference in its entirety.
- Of course, many of the computers 102 a-102 n of distributed
system 100 will be associated with users of the service for providing recommendations. Accordingly, user vectors may be stored locally at these computer systems, with each respective computer system storing the user vector(s) for one or more users associated with the respective computer system. An example of such acomputer system 200 is shown inFIG. 2 . -
Computer system 200, upon which the above-mentioned browser extension may be installed, includes a bus 202 or other communication mechanism for communicating information, and aprocessor 204 coupled with the bus 202 for processing information.Computer system 200 also includes amain memory 206, such as a RAM or other dynamic storage device, coupled to the bus 202 for storing information and instructions (such as instructions comprising the browser extension software when it is running) to be executed byprocessor 204.Main memory 206 also may be used for storing temporary variables or other intermediate information during execution of instructions to be executed byprocessor 204.Computer system 200 further includes aROM 208 or other static storage device coupled to the bus 202 for storing static information and instructions for theprocessor 204. Astorage device 210, such as a hard disk, is provided and coupled to the bus 202 for storing information and instructions (such as instructions comprising the browser extension). -
Computer system 200 may be coupled via the bus 202 to adisplay 212 for displaying information to a computer user. Aninput device 214, including alphanumeric and other keys, is coupled to the bus 202 for communicating information and command selections to theprocessor 204. Another type of user input device iscursor control device 216, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections toprocessor 204 and for controlling cursor movement on thedisplay 212. -
Computer system 200 also includes acommunication interface 218 coupled to the bus 202.Communication interface 208 provides for two-way, wired and/or wireless data communication to/fromcomputer system 200, for example, via a local area network (LAN).Communication interface 218 sends and receives electrical, electromagnetic or optical signals which carry digital data streams representing various types of information. For example, two ormore computer systems 200 may be networked together in a conventional manner with each using arespective communication interface 218. - Network link 220 typically provides data communication through one or more networks to other data devices. For example,
network link 220 may provide a connection throughLAN 222 to ahost computer 224 or to data equipment operated by an Internet service provider (ISP) 226.ISP 226 in turn provides data communication services through theInternet 228, which, in turn, may provide connectivity to multiple remote computer systems 230 a-230 n (any or all of which may be similar to computer system 200).LAN 222 andInternet 228 both use electrical, electromagnetic or optical signals which carry digital data streams.Computer system 200 can send messages and receive data through the network(s),network link 220 andcommunication interface 218. -
FIG. 3 illustrates thesame computer system 200, this time from an architectural standpoint. In this simplified representation, the computer system includes ahardware layer 302, which is abstracted by anoperating system 304. Any conventional operating system may be used. The operating system may be stored instorage device 210 and read intomemory 206 when executing. Running on top of the operating system are the programs which make up theapplication layer 306, including aWeb browser 308. As shown, the browser extension or plug-in 310, or in some cases a separate program inapplication layer 306, runs oncomputer system 200 to provide the recommendation functions described herein. Browser plug-ins and extensions are computer implemented processes integrated into a browser environment and which are capable of performing miscellaneous actions in response to user actions within the browser. - To summarize, the url_trackers (with the associated page vectors) are distributed among the user computer systems that form the distributed network at locations identified by the DHT, and when needed can be accessed in real time. Copies of the url_trackers are stored a different ones of the user computer systems to account for the fact that not all of these user computers will be accessible at all times and the copies are synchronized to reflect updates. The user vectors are stored at the respective user computers and each user computer runs an instance of the browser extension which performs the recommendation computations discussed herein. Each time a user rates (visits) a page, the corresponding user vector is obtained (using a DHT get operation) from the url_tracker responsible for the page, new vectors are computed (at the associated user computer) and the resulting page vector is sent back to the location (using a DHT put operation) where it is stored (locally or at another computer system of the distributed network). Alternatively, the updates can be performed at the computer hosting the associated url_tracker and the updated user vector and other information returned to the subject user's computer system.
- Likewise, keyword_trackers are distributed among the user computer systems that form the distributed network at locations identified by the DHT, and when needed can be accessed in real time. Copies of the keyword_trackers are stored a different ones of the user computer systems to account for the fact that not all of these user computers will be accessible at all times and the copies are synchronized to reflect updates. Each time a user executes a search query, the corresponding keyword_tracker is obtained (e.g., using a DHT get operation) and the pages identified on the keyword_tracker returned. By taking the intersection of the page lists from all of the keyword_trackers involved in the response to the search query (e.g., for compound or Boolean queries), a resulting list of pages can be presented to the user.
- To make recommendations, the present system locates pages similar to those which are visited by a user or which are identified in response to a search query. The recommendations may be presented via a display, such as
display 212, at the user's computer system. For example, the recommendations may be displayed in a separate area of a Web page that lists search results, or may be displayed in a toolbar or other screen area associated with the browser extension discussed above. - Regardless of how the recommendations are displayed, for each page P, the K most similar pages to P are collected and displayed. In one embodiment, identifiers for the most similar pages for page P are stored on page. P's url_tracker. Of course, it is a practical impossibility to pair all possible Web pages P in order to produce and maintain sets {P1, . . . , Pk} of similar pages for the entire World Wide Web, and so we propose a collection of practical approaches for doing so.
- A. Matching on each visit. Each time a user M visits a page P, the computer hosting the user's user_tracker sends its K best matching pages to the computer hosting the url_tracker for page P, and the computer hosting the url_tracker for page P sends its K best matching users to the computer hosting the user_tracker for M. These functions may be performed by the respective browser extensions or other applications running on the subject computer systems. Updates are performed at each computer, accordingly. After a time, this solution should converge approximately to the situation where each user knows about his/her K most similar users and each page (url_tracker) has information concerning its K best matching pages.
- B. Pairing in web history. User client programs (e.g., the browser extensions) periodically examine their respective Web histories and perform similarity measurements on each pair of pages in that history. If a measurement for a pair of pages P1 and P2 produces a result greater than a threshold value (which may be a global threshold for all pages or a page-specific threshold), this information is provided (e.g., via a put operation) to the corresponding url_trackers for the pages.
- C. Pairing on keyword trackers. In this scenario, each page is tagged with one or more category tags. The tags are considered as keywords, and all pages with the same tag are listed on a common keyword_tracker. A check of all pairs of pages on each keyword_tracker (no matter if it represents a tag or a regular word) is made and if their similarity is greater than the threshold for a given page (or a global threshold for all pages), the keyword_tracker provides this information to the corresponding url_tracker
- D. Routing through link structure. The Web can be modeled as an undirected graph and one can assume that similar pages are probably close to each other within such a graph. Hence, in this scheme a vector for each page P is sent to a subset of its neighbors S, from and this vector propagation continues through the graph for a few (say 2 or 3) hops. Along the path, the vector for page P is matched against vectors of the pages in the path to determine whether or not those pages should be added to the set of top K similar pages for the subject page P.
- E. Dedicated trackers. Beside regular vectors with lengths of, say, 100, it is also possible to maintain much smaller vectors, containing just a few elements. These smaller vectors can be quantized and dedicated vector trackers introduced to represent them. Each url_tracker then sends its vector to the vector tracker which is most similar to small vector of subject page (which can be computed locally), and so the vector trackers associated with the small vectors will, over time, gather URLs of pages that are similar to each other.
- Any or all of the above-described methods can be used collectively and/or independently of one another, thereby maximizing the opportunity to determine the exact set of K most similar pages for a subject page.
- Thus, methods and systems for recommending Web pages have been described. Although discussed with reference to certain examples, the present invention should not be limited thereby. For example, the present recommendation methodologies can be used for finding recommended pages for a given user, finding similar pages to a given Web page, personalized ranking schemes, and extending a query result set with similar pages not necessarily containing query words, among other applications. Further, page vectors can be stored in a hybrid system that combines a distributed system based on a distributed hash table and a centralized system that includes multiple computers connected through a local network. Moreover, while it should be apparent from the foregoing discussion, various embodiments of the present invention may be implemented with the aid of computer-implemented processes or methods (i.e., computer programs or routines) or on any programmable or dedicated hardware implementing digital logic. Such processes may be rendered in any computer language including, without limitation, a object oriented programming language, assembly language, markup languages, and the like, as well as object-oriented environments such as the Common Object Request Broker Architecture (CORBA), Java™ and the like, or on any programmable logic hardware like CPLD, FPGA and the like.
- It should also be appreciated that the portions of this detailed description were presented in terms of computer-implemented processes and symbolic representations of operations on data within a computer memory, but in all instances, the processes performed by the computer system are those requiring physical manipulations of physical quantities. The computer-implemented processes are usually, though not necessarily, embodied the form of electrical or magnetic information (e.g., bits) that is stored (e.g., on computer-readable storage media), transferred (e.g., via wired or wireless communication links), combined, compared and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, keys, numbers or the like. It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities.
- Unless specifically stated otherwise, it should be appreciated that the use of terms such as processing, computing, calculating, determining, displaying or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers, memories and other storage media into other data similarly represented as physical quantities within the computer system memories, registers or other storage media. Embodiments of the present invention can be implemented with apparatus to perform the operations described herein. Such apparatus may be specially constructed for the required purposes, or may be appropriately programmed, or selectively activated or reconfigured by a computer-readable instructions stored in or on computer-readable storage media (such as, but not limited to, any type of disk including floppy disks, optical disks, hard disks, CD-ROMs, and magnetic-optical disks, or read-only memories (ROMs), random access memories (RAMs), erasable ROMs (EPROMs), electrically erasable ROMs (EEPROMs), magnetic or optical cards, or any type of media suitable for storing computer-readable instructions) to perform the operations. Of course, the processes presented herein are not restricted to implementation through computer-readable instructions and can be implemented in appropriate circuitry, such as that instantiated in an application specific integrated circuit (ASIC), a programmed field programmable gate array (FPGA), or the like.
- Thus, the invention should be measured only in terms of the claims, which follow.
Claims (11)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/608,922 US20110106796A1 (en) | 2009-10-29 | 2009-10-29 | System and method for recommendation of interesting web pages based on user browsing actions |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/608,922 US20110106796A1 (en) | 2009-10-29 | 2009-10-29 | System and method for recommendation of interesting web pages based on user browsing actions |
Publications (1)
Publication Number | Publication Date |
---|---|
US20110106796A1 true US20110106796A1 (en) | 2011-05-05 |
Family
ID=43926487
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/608,922 Abandoned US20110106796A1 (en) | 2009-10-29 | 2009-10-29 | System and method for recommendation of interesting web pages based on user browsing actions |
Country Status (1)
Country | Link |
---|---|
US (1) | US20110106796A1 (en) |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120136855A1 (en) * | 2010-11-29 | 2012-05-31 | Microsoft Corporation | Mobile Query Suggestions With Time-Location Awareness |
US20120215846A1 (en) * | 2011-02-23 | 2012-08-23 | Rockmelt, Inc. | Display of content interaction data in a browser |
CN102929990A (en) * | 2012-10-19 | 2013-02-13 | 北京奇虎科技有限公司 | Method, device and system for website navigation |
US20130055327A1 (en) * | 2011-08-29 | 2013-02-28 | Praphul Chandra | Mapping web content to unused broadcast channel |
CN102999586A (en) * | 2012-11-15 | 2013-03-27 | 北京小米科技有限责任公司 | Method and device for recommending website |
US20130288725A1 (en) * | 2011-01-31 | 2013-10-31 | International Business Machines Corporation | Mobile terminal to recommend a short message recipient |
US20130332444A1 (en) * | 2012-06-06 | 2013-12-12 | International Business Machines Corporation | Identifying unvisited portions of visited information |
US20140172855A1 (en) * | 2012-12-19 | 2014-06-19 | Facebook, Inc. | Formation and description of user subgroups |
US8782197B1 (en) | 2012-07-17 | 2014-07-15 | Google, Inc. | Determining a model refresh rate |
US20140201351A1 (en) * | 2013-01-11 | 2014-07-17 | Adobe Systems Incorporated | Segment Generation Describing Usage Patterns |
US8874589B1 (en) | 2012-07-16 | 2014-10-28 | Google Inc. | Adjust similar users identification based on performance feedback |
US8886575B1 (en) | 2012-06-27 | 2014-11-11 | Google Inc. | Selecting an algorithm for identifying similar user identifiers based on predicted click-through-rate |
US8886799B1 (en) * | 2012-08-29 | 2014-11-11 | Google Inc. | Identifying a similar user identifier |
US8914500B1 (en) | 2012-05-21 | 2014-12-16 | Google Inc. | Creating a classifier model to determine whether a network user should be added to a list |
US20150026148A1 (en) * | 2010-03-09 | 2015-01-22 | Yahoo! Inc. | User specific feed recommendations |
US9053185B1 (en) | 2012-04-30 | 2015-06-09 | Google Inc. | Generating a representative model for a plurality of models identified by similar feature data |
US9065727B1 (en) | 2012-08-31 | 2015-06-23 | Google Inc. | Device identifier similarity models derived from online event signals |
US9146910B2 (en) | 2010-12-14 | 2015-09-29 | Alibaba Group Holding Limited | Method and system of displaying cross-website information |
US20180276005A1 (en) * | 2017-03-24 | 2018-09-27 | Google Inc. | Smart setup of assistant services |
WO2019042163A1 (en) * | 2017-09-01 | 2019-03-07 | 广东神马搜索科技有限公司 | Page information suggestion method, device, computing apparatus, and storage medium |
US10282757B1 (en) * | 2013-02-08 | 2019-05-07 | A9.Com, Inc. | Targeted ad buys via managed relationships |
CN112507230A (en) * | 2020-12-16 | 2021-03-16 | 平安银行股份有限公司 | Webpage recommendation method and device based on browser, electronic equipment and storage medium |
US20220382424A1 (en) * | 2021-05-26 | 2022-12-01 | Intuit Inc. | Smart navigation |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050198328A1 (en) * | 2004-01-30 | 2005-09-08 | Sung-Ju Lee | Identifying a service node in a network |
US7069271B1 (en) * | 2000-11-03 | 2006-06-27 | Oracle International Corp. | Methods and apparatus for implementing internet storefronts to provide integrated functions |
US20080243815A1 (en) * | 2007-03-30 | 2008-10-02 | Chan James D | Cluster-based assessment of user interests |
US20080243637A1 (en) * | 2007-03-30 | 2008-10-02 | Chan James D | Recommendation system with cluster-based filtering of recommendations |
-
2009
- 2009-10-29 US US12/608,922 patent/US20110106796A1/en not_active Abandoned
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7069271B1 (en) * | 2000-11-03 | 2006-06-27 | Oracle International Corp. | Methods and apparatus for implementing internet storefronts to provide integrated functions |
US20050198328A1 (en) * | 2004-01-30 | 2005-09-08 | Sung-Ju Lee | Identifying a service node in a network |
US20080243815A1 (en) * | 2007-03-30 | 2008-10-02 | Chan James D | Cluster-based assessment of user interests |
US20080243637A1 (en) * | 2007-03-30 | 2008-10-02 | Chan James D | Recommendation system with cluster-based filtering of recommendations |
Cited By (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9747374B2 (en) * | 2010-03-09 | 2017-08-29 | Excalibur Ip, Llc | User specific feed recommendations |
US20150026148A1 (en) * | 2010-03-09 | 2015-01-22 | Yahoo! Inc. | User specific feed recommendations |
US20120136855A1 (en) * | 2010-11-29 | 2012-05-31 | Microsoft Corporation | Mobile Query Suggestions With Time-Location Awareness |
US8489625B2 (en) * | 2010-11-29 | 2013-07-16 | Microsoft Corporation | Mobile query suggestions with time-location awareness |
US9146910B2 (en) | 2010-12-14 | 2015-09-29 | Alibaba Group Holding Limited | Method and system of displaying cross-website information |
US9734258B2 (en) | 2010-12-14 | 2017-08-15 | Alibaba Group Holding Limited | Method and system of displaying cross-website information |
US20130288725A1 (en) * | 2011-01-31 | 2013-10-31 | International Business Machines Corporation | Mobile terminal to recommend a short message recipient |
US9055419B2 (en) * | 2011-01-31 | 2015-06-09 | International Business Machines Corporation | Mobile terminal to recommend a short message recipient |
US20120215846A1 (en) * | 2011-02-23 | 2012-08-23 | Rockmelt, Inc. | Display of content interaction data in a browser |
US8510379B2 (en) * | 2011-02-23 | 2013-08-13 | Rockmelt, Inc. | Display of content interaction data in a browser |
US20130055327A1 (en) * | 2011-08-29 | 2013-02-28 | Praphul Chandra | Mapping web content to unused broadcast channel |
US9053185B1 (en) | 2012-04-30 | 2015-06-09 | Google Inc. | Generating a representative model for a plurality of models identified by similar feature data |
US8914500B1 (en) | 2012-05-21 | 2014-12-16 | Google Inc. | Creating a classifier model to determine whether a network user should be added to a list |
US20130332444A1 (en) * | 2012-06-06 | 2013-12-12 | International Business Machines Corporation | Identifying unvisited portions of visited information |
US10671584B2 (en) | 2012-06-06 | 2020-06-02 | International Business Machines Corporation | Identifying unvisited portions of visited information |
US9916337B2 (en) | 2012-06-06 | 2018-03-13 | International Business Machines Corporation | Identifying unvisited portions of visited information |
US9430567B2 (en) * | 2012-06-06 | 2016-08-30 | International Business Machines Corporation | Identifying unvisited portions of visited information |
US8886575B1 (en) | 2012-06-27 | 2014-11-11 | Google Inc. | Selecting an algorithm for identifying similar user identifiers based on predicted click-through-rate |
US8874589B1 (en) | 2012-07-16 | 2014-10-28 | Google Inc. | Adjust similar users identification based on performance feedback |
US8782197B1 (en) | 2012-07-17 | 2014-07-15 | Google, Inc. | Determining a model refresh rate |
US8886799B1 (en) * | 2012-08-29 | 2014-11-11 | Google Inc. | Identifying a similar user identifier |
US9065727B1 (en) | 2012-08-31 | 2015-06-23 | Google Inc. | Device identifier similarity models derived from online event signals |
CN102929990A (en) * | 2012-10-19 | 2013-02-13 | 北京奇虎科技有限公司 | Method, device and system for website navigation |
CN102999586A (en) * | 2012-11-15 | 2013-03-27 | 北京小米科技有限责任公司 | Method and device for recommending website |
US9348886B2 (en) * | 2012-12-19 | 2016-05-24 | Facebook, Inc. | Formation and description of user subgroups |
US20140172855A1 (en) * | 2012-12-19 | 2014-06-19 | Facebook, Inc. | Formation and description of user subgroups |
US20140201351A1 (en) * | 2013-01-11 | 2014-07-17 | Adobe Systems Incorporated | Segment Generation Describing Usage Patterns |
US11019160B2 (en) * | 2013-01-11 | 2021-05-25 | Adobe Inc. | Segment generation describing usage patterns |
US10282757B1 (en) * | 2013-02-08 | 2019-05-07 | A9.Com, Inc. | Targeted ad buys via managed relationships |
US20180276005A1 (en) * | 2017-03-24 | 2018-09-27 | Google Inc. | Smart setup of assistant services |
US11231943B2 (en) * | 2017-03-24 | 2022-01-25 | Google Llc | Smart setup of assistant services |
WO2019042163A1 (en) * | 2017-09-01 | 2019-03-07 | 广东神马搜索科技有限公司 | Page information suggestion method, device, computing apparatus, and storage medium |
CN112507230A (en) * | 2020-12-16 | 2021-03-16 | 平安银行股份有限公司 | Webpage recommendation method and device based on browser, electronic equipment and storage medium |
US20220382424A1 (en) * | 2021-05-26 | 2022-12-01 | Intuit Inc. | Smart navigation |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20110106796A1 (en) | System and method for recommendation of interesting web pages based on user browsing actions | |
US20220398280A1 (en) | Methods and systems for associating internet devices | |
US7885986B2 (en) | Enhanced browsing experience in social bookmarking based on self tags | |
Zhong et al. | Comsoc: adaptive transfer of user behaviors over composite social network | |
Xu et al. | A social-aware service recommendation approach for mashup creation | |
Shafiq et al. | On personalizing Web search using social network analysis | |
White et al. | Predicting user interests from contextual information | |
KR101173163B1 (en) | Method for evaluating user reputation through social network, system and method for evaluating content reputation using the same | |
El Helou et al. | The 3A Personalized, Contextual and Relation-based Recommender System. | |
Forsati et al. | Effective page recommendation algorithms based on distributed learning automata and weighted association rules | |
US20080059454A1 (en) | Search document generation and use to provide recommendations | |
US20140280251A1 (en) | Almost online large scale collaborative filtering based recommendation system | |
US20100082637A1 (en) | Web Page and Web Site Importance Estimation Using Aggregate Browsing History | |
Shang et al. | A randomwalk based model incorporating social information for recommendations | |
CN105760443A (en) | Project recommending system, device and method | |
Jafari et al. | Applying web usage mining techniques to design effective web recommendation systems: A case study | |
Dohare et al. | Novel web usage mining for web mining techniques | |
Román et al. | Identifying user sessions from web server logs with integer programming | |
Zhang et al. | Recommendation over a heterogeneous social network | |
Dong et al. | Improving sequential recommendation with attribute-augmented graph neural networks | |
US8706721B1 (en) | Method to optimally link information and humans using human referral signals | |
Johny et al. | Towards a social graph approach for modeling risks in big data and Internet of Things (IoT) | |
Wu et al. | Future link prediction in the blogosphere for recommendation | |
Jalali et al. | A recommender system approach for classifying user navigation patterns using longest common subsequence algorithm | |
Thakur et al. | Performance based novel techniques for semantic web mining |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: WOWD, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:SAVIC, MARKO;REEL/FRAME:023445/0368Effective date: 20090929 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:WOWD, INC.;REEL/FRAME:027008/0060Effective date: 20110623 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
US7149803B2 - Method for content distribution in a network supporting a security protocol - Google Patents
Method for content distribution in a network supporting a security protocol Download PDFInfo
- Publication number
- US7149803B2 US7149803B2 US09/877,977 US87797701A US7149803B2 US 7149803 B2 US7149803 B2 US 7149803B2 US 87797701 A US87797701 A US 87797701A US 7149803 B2 US7149803 B2 US 7149803B2
- Authority
- US
- United States
- Prior art keywords
- content distribution
- server
- sid
- client
- cache server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
- 238000000034 method Methods 0.000 title claims abstract description 12
- 238000004891 communication Methods 0.000 claims description 16
- 238000012545 processing Methods 0.000 abstract description 9
- 230000006870 function Effects 0.000 description 5
- 238000012546 transfer Methods 0.000 description 4
- 238000013459 approach Methods 0.000 description 2
- 230000000593 degrading effect Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 239000000284 extract Substances 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000035755 proliferation Effects 0.000 description 1
- 101150062870 ssl3 gene Proteins 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
- H04L63/0442—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload wherein the sending and receiving network entities apply asymmetric encryption, i.e. different keys for encryption and decryption
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/16—Implementing security features at a particular protocol layer
- H04L63/166—Implementing security features at a particular protocol layer at the transport layer
Definitions
- the present invention relates to content distribution in packet-switched networks.
- Packet-switched networks such as networks based on the TCP/IP protocol suite, can be utilized to distribute a rich array of digital content to a variety of different client applications.
- the most popular applications on the Internet today are browsing applications for searching the World Wide Web, e.g. Netscape Navigator or Microsoft Internet Explorer, which utilize the HyperText Transfer Protocol (HTTP) to retrieve documents written in the HyperText Markup Language (HTML) along with embedded content.
- HTTP HyperText Transfer Protocol
- HTML HyperText Markup Language
- SSL Secure Sockets Layer
- S-HTTP Secure HTTP
- SSL Protocol Version 3.0 IETF Internet Draft, Netscape Communications, http://home.netscape.com/eng/ssl3/index.html
- Rescorla et al. “The Secure HyperText Transfer Protocol,” RFC 2660, IETF Network Working Group (March 1990), which are incorporated by reference herein.
- U.S. Pat. No. 5,657,390 “Secure Socket Layer Application Program Apparatus and Method,” to Elgamal et al., which is incorporated by reference herein.
- CDNs content distribution networks
- the present invention is directed to a method of providing content distribution services while minimizing the processing time required for security protocols such as the Secure Sockets Layer.
- packets which are part of a secure communication connection negotiated with a particular cache server are directed to the same cache server in the content distribution network.
- the cache server can choose a session identifier that can be utilized by the content distribution network to direct subsequent packets to the proper cache server.
- the cache servers can be labeled with a number that can be rapidly computed from the generated session identifier.
- the content distribution network can maintain a table associating client addresses with particular cache servers to ensure that client requests are served by the server that negotiated the secure communication connection.
- the content distribution network cache servers share state information regarding secure connections so that, even if a client request gets redirected to another cache server, that cache server will have access to the state information necessary to handle the secure communication connection.
- the client does not need to renegotiate with each different cache server in order to create state information required for the secure communication connection.
- the invention advantageously reduces the number of state negotiations that take place, thereby saving processing time and reducing the overall latency to the client.
- FIG. 1 is an illustrative content distribution architecture, suitable for practice of the present invention.
- FIG. 2 is a conceptual representation of an entry in a secure session identification table.
- FIG. 3 is a flowchart of processing performed by a content distribution network switch, in accordance with one embodiment of the invention.
- FIG. 4 is a conceptual representation of an entry in a table maintaining associations between client addresses and cache servers in a content distribution network.
- FIG. 5 is a flowchart of processing performed by a content distribution network switch, in accordance with a second embodiment of the invention.
- FIG. 6 is a flowchart of processing performed by a plurality of content distribution network cache servers, in accordance with a third embodiment of the invention.
- FIG. 1 is an illustrative content distribution architecture, suitable for practice of the present invention.
- a client 110 is connected to a packet-switched network 100 , e.g. the Internet, which provides access to a plurality of content servers such as server 120 .
- content server 120 can be a Web server that responds to HTTP requests by serving Web pages and other content to clients running Web browser applications.
- DNS domain name service
- Each entity has access to a domain name service (DNS) server, which is not shown in FIG. 1 .
- DNS domain name service
- a content distribution provider enables a network of content distribution network nodes, illustratively 130 , 140 in FIG. 1 . Utilizing any of a variety of known techniques, content requests from client 110 may be redirected to a content distribution node, 130 or 140 in FIG.
- Each content distribution node 130 can be a single cache server or, as shown in FIG. 1 , can have a switch 135 providing access to a plurality of cache servers 131 , 132 , 133 , etc. for further load balancing.
- requests from the same client are directed to the same content distribution node, illustratively node 130 in FIG. 1 .
- This can be accomplished, for example, by increasing the timeout value on domain name system cache entries where the domain name system is utilized to redirect requests in the content distribution network.
- the client addresses packets to the same domain so that, from the client's perspective, it appears that it is communicating with the same server.
- a standard security protocol such as SSL is utilized.
- SSL standard security protocol
- the discussion herein is directed in particular to SSL, although the principles of the invention apply to any security protocol that requires the cache server to maintain state information.
- the client 110 and a server 131 first undertake a handshake protocol during which they agree on a protocol version, select cryptographic algorithms, optionally authenticate each other, and use public-key encryption techniques to generate shared secrets.
- the handshake protocol permits the client 110 and the server 131 to coordinate state information which includes:
- the server in the content distribution network negotiates a secure connection with the client and chooses a session identifier that advantageously can be used to direct the SSL traffic back to the proper server. Assume that the servers capable of dealing with SSL traffic are labeled 1 . . .
- the particular server labels are arbitrary, as is the relationship between the server labels and the particular session identifiers chosen. Any particularly advantageous function can be utilized by the cache server 131 to choose a session identifier that the switch 135 will be capable of associating with the server 131 .
- the process of computing the SID can proceed as follows.
- the cache server 131 can compute the results of f(SID) for a given session identifier it generates from the process of negotiating the SSL connection. If the cache server 131 determines that f(SID) does not equal its server label, then it can re-generate another SID and recompute f(SID). Since n is relatively small, on average, the n/2 iterations that it takes to generate a proper session ID should be negligible, particularly if a fast pseudo-random generator is utilized for randomness. Alternatively, each cache server can precompute the SIDs that work for it and can be utilized wherever necessary.
- FIG. 3 sets forth the processing performed at the switch 135 in the content distribution node 130 in directing traffic to the cache servers. It is assumed that the switch is a content-aware switch capable of interpreting the HTTP or other application-layer protocol request.
- the content distribution switch 135 receives a packet or packets to be forwarded to one of the cache servers 131 . . . 133 in the content distribution node 130 .
- the switch 135 interprets the request encapsulated in the packet(s) and determines whether it is an SSL message. If it is not, at step 303 , the switch 135 processes the request normally and forwards it in accordance with whatever load-balancing functionality is provided.
- the switch 135 extracts the session identifier from the packet at step 303 .
- the switch 135 sends the packet(s) to the address of server/which presumably maintains the SSL session state from the previous secure connection. The server twill then be able to serve the client request and resume the secure connection without recomputation of state.
- the content distribution network switch 135 can maintain a table of client addresses and store which cache server 131 . . . 133 was last assigned to communicate with that client.
- FIG. 4 is an illustrative conceptual representation of an entry in such a table that includes a field for the client network address 401 , one or more fields for identifying the cache server to the switch, and a timer field 404 to permit the entries to expire after some specified period of time.
- the switch 135 can direct that traffic to the same server that handled the traffic previously.
- FIG. 5 sets forth the processing performed by the switch 135 in the content distribution node 130 in directing traffic to the cache servers, in accordance with this embodiment of the invention.
- the content distribution switch 135 receives a packet or packets to be forwarded to one of the cache servers 131 . . . 133 in the content distribution node 130 .
- the cache servers 132 , 133 receive the state information and store the information in their respective session caches. Accordingly, when a future request from the same client arrives at any of the cache servers 131 . . . 133 , the receiving cache server will have access to the state information for the SSL connection already in its session cache.
- the cache servers 131 . . . 133 can utilize a distributed file system protocol such as NFS (Network File System) to share the state information. See, e.g., S. Shepler et al., “NFS Version 4 Protocol,” RFC 3010, IETF Network Working Group (December 2000), which is incorporated by reference herein. However such an embodiment would possibly suffer from efficiency problems.
- NFS Network File System
- Another alternative is to have the cache servers 131 . . . 133 utilize a distributed shared memory system to share the state information. See, e.g., K. Li and P. Hudak, “Memory coherence in shared memory systems,” ACM Transactions on Computer Systems, 7(4), November 1989.
Abstract
Description
-
- (a) a session identifier (“SID”) which is an arbitrary byte sequence chosen by the server to identify an active or resumable session state;
- (b) a specification of the encryption algorithms utilized; and
- (c) a master symmetric key which is a secret shared by the client and server.
When the client and the server resume a previous session, the client need only present the session identifier to the server which checks a session cache which stores state information from prior sessions.FIG. 2 is an illustrative conceptual representation of an entry in a secure session identification table that includes a field identifying aSID 201 and a variety of other fields including thesecret master key 203. If the server finds a matching session identifier in the table that has not expired, the server and the client may resume the SSL connection without the need for the consuming task of exchanging a new master key using the relatively slow public-key algorithm.
j=SID MOD n+1
where n is the number of servers capable of handling SSL traffic. It should be noted that the particular server labels are arbitrary, as is the relationship between the server labels and the particular session identifiers chosen. Any particularly advantageous function can be utilized by the
Claims (4)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/877,977 US7149803B2 (en) | 2000-06-08 | 2001-06-08 | Method for content distribution in a network supporting a security protocol |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US21019100P | 2000-06-08 | 2000-06-08 | |
US09/877,977 US7149803B2 (en) | 2000-06-08 | 2001-06-08 | Method for content distribution in a network supporting a security protocol |
Publications (2)
Publication Number | Publication Date |
---|---|
US20020007415A1 US20020007415A1 (en) | 2002-01-17 |
US7149803B2 true US7149803B2 (en) | 2006-12-12 |
Family
ID=26904919
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/877,977 Expired - Fee Related US7149803B2 (en) | 2000-06-08 | 2001-06-08 | Method for content distribution in a network supporting a security protocol |
Country Status (1)
Country | Link |
---|---|
US (1) | US7149803B2 (en) |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020126135A1 (en) * | 1998-10-19 | 2002-09-12 | Keith Ball | Image sharing for instant messaging |
US20020161835A1 (en) * | 1998-11-13 | 2002-10-31 | Keith Ball | Meta content distribution network |
US20030182423A1 (en) * | 2002-03-22 | 2003-09-25 | Magnifier Networks (Israel) Ltd. | Virtual host acceleration system |
US20060005026A1 (en) * | 2004-06-09 | 2006-01-05 | Samsung Electronics Co., Ltd. | Method and apparatus for secure communication reusing session key between client and server |
US20060080446A1 (en) * | 2000-11-01 | 2006-04-13 | Microsoft Corporation | Session load balancing and use of VIP as source address for inter-cluster traffic through the use of a session identifier |
US20060168264A1 (en) * | 2003-03-10 | 2006-07-27 | Sony Corporation | Information processing device, information processing method, and computer program |
US20070124477A1 (en) * | 2005-11-29 | 2007-05-31 | Martin Cameron K | Load Balancing System |
US20070283141A1 (en) * | 2003-12-31 | 2007-12-06 | Pollutro Dennis V | Method and System for Establishing the Identity of an Originator of Computer Transactions |
US7839415B2 (en) | 1998-11-13 | 2010-11-23 | Verisign, Inc. | Method and system for improved internet color |
US8286082B2 (en) | 2007-09-12 | 2012-10-09 | Citrix Systems, Inc. | Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine |
US8516539B2 (en) | 2007-11-09 | 2013-08-20 | Citrix Systems, Inc | System and method for inferring access policies from access event records |
US8910241B2 (en) * | 2002-04-25 | 2014-12-09 | Citrix Systems, Inc. | Computer security system |
US8943575B2 (en) | 2008-04-30 | 2015-01-27 | Citrix Systems, Inc. | Method and system for policy simulation |
US8990573B2 (en) | 2008-11-10 | 2015-03-24 | Citrix Systems, Inc. | System and method for using variable security tag location in network communications |
US8990910B2 (en) | 2007-11-13 | 2015-03-24 | Citrix Systems, Inc. | System and method using globally unique identities |
Families Citing this family (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7340530B2 (en) * | 2001-01-17 | 2008-03-04 | International Business Machines Corporation | Methods, for providing data from network secure communications in a cluster computing environment |
US7543066B2 (en) * | 2001-04-30 | 2009-06-02 | International Business Machines Corporation | Method and apparatus for maintaining session affinity across multiple server groups |
US7212527B2 (en) * | 2001-05-09 | 2007-05-01 | Intel Corporation | Method and apparatus for communicating using labeled data packets in a network |
US8041814B2 (en) * | 2001-06-28 | 2011-10-18 | International Business Machines Corporation | Method, system and computer program product for hierarchical load balancing |
US7533179B2 (en) * | 2001-09-20 | 2009-05-12 | Hitwise Pty, Ltd. | Method and system for characterization of online behavior |
US7752331B2 (en) * | 2001-10-30 | 2010-07-06 | At&T Intellectual Property I, L.P. | Information gateway manager for multiple devices |
JP3988451B2 (en) * | 2001-12-06 | 2007-10-10 | ソニー株式会社 | COMMUNICATION DEVICE AND METHOD, RECORDING MEDIUM, AND PROGRAM |
US7584500B2 (en) * | 2003-11-19 | 2009-09-01 | Hughes Network Systems, Llc | Pre-fetching secure content using proxy architecture |
WO2005121972A1 (en) | 2004-06-14 | 2005-12-22 | Research In Motion Limited | Method and system for securing data utilizing redundant secure key storage |
JP4520840B2 (en) * | 2004-12-02 | 2010-08-11 | 株式会社日立製作所 | Encrypted communication relay method, gateway server device, encrypted communication program, and encrypted communication program storage medium |
GB2430591B (en) * | 2005-09-23 | 2010-09-01 | Scansafe Ltd | Network communications |
US8200971B2 (en) * | 2005-09-23 | 2012-06-12 | Cisco Technology, Inc. | Method for the provision of a network service |
GB0519466D0 (en) * | 2005-09-23 | 2005-11-02 | Scansafe Ltd | Network communications |
CN1980232A (en) * | 2005-12-02 | 2007-06-13 | 国际商业机器公司 | Telnet session maitenance method, telnet proxy and computer network system |
US8599788B2 (en) * | 2006-03-20 | 2013-12-03 | Samsung Electronics Co., Ltd. | Method and system for mobile secure socket layer in virtual private networks |
US20080183874A1 (en) * | 2007-01-30 | 2008-07-31 | Utstarcom, Inc. | Method and Apparatus to Facilitate Secure Connection Provisioning |
US8190881B2 (en) * | 2007-10-15 | 2012-05-29 | Foundry Networks Llc | Scalable distributed web-based authentication |
US8843738B2 (en) * | 2012-05-14 | 2014-09-23 | Sierra Wireless, Inc. | TLS abbreviated session identifier protocol |
US9231951B2 (en) * | 2013-11-01 | 2016-01-05 | Google Inc. | Probabilistically expedited secure connections via connection parameter reuse |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5657390A (en) | 1995-08-25 | 1997-08-12 | Netscape Communications Corporation | Secure socket layer application program apparatus and method |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
US6141758A (en) * | 1997-07-14 | 2000-10-31 | International Business Machines Corporation | Method and system for maintaining client server security associations in a distributed computing system |
US6185598B1 (en) | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
US6523067B2 (en) * | 1999-01-19 | 2003-02-18 | Intel Corporation | System and method for using internet based caller ID for controlling access to an object stored in a computer |
US6735206B1 (en) * | 2000-01-10 | 2004-05-11 | Sun Microsystems, Inc. | Method and apparatus for performing a fast service lookup in cluster networking |
US6842906B1 (en) * | 1999-08-31 | 2005-01-11 | Accenture Llp | System and method for a refreshable proxy pool in a communication services patterns environment |
-
2001
- 2001-06-08 US US09/877,977 patent/US7149803B2/en not_active Expired - Fee Related
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5657390A (en) | 1995-08-25 | 1997-08-12 | Netscape Communications Corporation | Secure socket layer application program apparatus and method |
US6141758A (en) * | 1997-07-14 | 2000-10-31 | International Business Machines Corporation | Method and system for maintaining client server security associations in a distributed computing system |
US6185598B1 (en) | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
US6523067B2 (en) * | 1999-01-19 | 2003-02-18 | Intel Corporation | System and method for using internet based caller ID for controlling access to an object stored in a computer |
US6842906B1 (en) * | 1999-08-31 | 2005-01-11 | Accenture Llp | System and method for a refreshable proxy pool in a communication services patterns environment |
US6735206B1 (en) * | 2000-01-10 | 2004-05-11 | Sun Microsystems, Inc. | Method and apparatus for performing a fast service lookup in cluster networking |
Non-Patent Citations (7)
Title |
---|
E. Rescorla et al., "The Secure HyperText Transfer Protocol," RFC 2660, IETF Network Working Group (Aug. 1990). |
Freier et al., "The SSL Protocol Version 3.0," IETF Internet Draft, Netscape Communications, http://home.netscape.com/eng/ss13/index.html. |
J. Postel, "User Datagram Protocol," RFC 768, IETF (Aug. 1980). |
R. Fielding et al., "Hypertext Transfer Protocol-HTTP/1.1," IETF RFC 2616, Network Working Group, 1999. |
S. Shepler et al., "NFS Version 4 Protocol," RFC 3010, IETF Network Working Group (Dec. 2000). |
Schneier, Bruce, Applied Cryptography, John Wiley & Sons, Inc., Second edition, 514-515. * |
V. Pai et al., "Locality Aware Request Distribution in Cluster Based Network Servers," In Proceedings of the Eighth International Conference on Architectural Support for Programming Languages and Operating Systems, ACM, San Jose, CA, Oct. 1998. |
Cited By (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020126135A1 (en) * | 1998-10-19 | 2002-09-12 | Keith Ball | Image sharing for instant messaging |
US8345060B2 (en) | 1998-10-19 | 2013-01-01 | Verisign, Inc. | Method and system for improved internet color |
US20020161835A1 (en) * | 1998-11-13 | 2002-10-31 | Keith Ball | Meta content distribution network |
US7839415B2 (en) | 1998-11-13 | 2010-11-23 | Verisign, Inc. | Method and system for improved internet color |
US7664864B2 (en) * | 1998-11-13 | 2010-02-16 | Verisign, Inc. | Meta content distribution network |
US7483992B2 (en) | 2000-11-01 | 2009-01-27 | Microsoft Corporation | Session load balancing and use of VIP as source address for inter-cluster traffic through the use of a session identifier |
US20060080446A1 (en) * | 2000-11-01 | 2006-04-13 | Microsoft Corporation | Session load balancing and use of VIP as source address for inter-cluster traffic through the use of a session identifier |
US7707287B2 (en) * | 2002-03-22 | 2010-04-27 | F5 Networks, Inc. | Virtual host acceleration system |
US20030182423A1 (en) * | 2002-03-22 | 2003-09-25 | Magnifier Networks (Israel) Ltd. | Virtual host acceleration system |
US9781114B2 (en) | 2002-04-25 | 2017-10-03 | Citrix Systems, Inc. | Computer security system |
US8910241B2 (en) * | 2002-04-25 | 2014-12-09 | Citrix Systems, Inc. | Computer security system |
US20060168264A1 (en) * | 2003-03-10 | 2006-07-27 | Sony Corporation | Information processing device, information processing method, and computer program |
US7870261B2 (en) * | 2003-03-10 | 2011-01-11 | Sony Corporation | Information processing device, an information processing method, and a computer program to securely connect clients on an external network to devices within an internal network |
US20070283141A1 (en) * | 2003-12-31 | 2007-12-06 | Pollutro Dennis V | Method and System for Establishing the Identity of an Originator of Computer Transactions |
US8234699B2 (en) | 2003-12-31 | 2012-07-31 | Citrix Systems, Inc. | Method and system for establishing the identity of an originator of computer transactions |
US20060005026A1 (en) * | 2004-06-09 | 2006-01-05 | Samsung Electronics Co., Ltd. | Method and apparatus for secure communication reusing session key between client and server |
US20070124477A1 (en) * | 2005-11-29 | 2007-05-31 | Martin Cameron K | Load Balancing System |
US8341208B2 (en) | 2007-09-12 | 2012-12-25 | Citrix Systems, Inc. | Methods and systems for providing, by a remote machine, access to functionality associated with a resource executing on a local machine |
US8484290B2 (en) | 2007-09-12 | 2013-07-09 | Citrix Systems, Inc. | Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine |
US8296352B2 (en) | 2007-09-12 | 2012-10-23 | Citrix Systems, Inc. | Methods and systems for providing, by a remote machine, access to graphical data associated with a resource provided by a local machine |
US9032026B2 (en) | 2007-09-12 | 2015-05-12 | Citrix Systems, Inc. | Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine |
US9239666B2 (en) | 2007-09-12 | 2016-01-19 | Citrix Systems, Inc. | Methods and systems for maintaining desktop environments providing integrated access to remote and local resources |
US8286082B2 (en) | 2007-09-12 | 2012-10-09 | Citrix Systems, Inc. | Methods and systems for providing, by a remote machine, access to a desk band associated with a resource executing on a local machine |
US8516539B2 (en) | 2007-11-09 | 2013-08-20 | Citrix Systems, Inc | System and method for inferring access policies from access event records |
US8990910B2 (en) | 2007-11-13 | 2015-03-24 | Citrix Systems, Inc. | System and method using globally unique identities |
US8943575B2 (en) | 2008-04-30 | 2015-01-27 | Citrix Systems, Inc. | Method and system for policy simulation |
US8990573B2 (en) | 2008-11-10 | 2015-03-24 | Citrix Systems, Inc. | System and method for using variable security tag location in network communications |
Also Published As
Publication number | Publication date |
---|---|
US20020007415A1 (en) | 2002-01-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7149803B2 (en) | Method for content distribution in a network supporting a security protocol | |
US7177945B2 (en) | Non-intrusive multiplexed transaction persistency in secure commerce environments | |
US9210163B1 (en) | Method and system for providing persistence in a secure network access | |
US8533453B2 (en) | Method and system for configuring a server and dynamically loading SSL information | |
Fayazbakhsh et al. | Less pain, most of the gain: Incrementally deployable icn | |
Koponen et al. | A data-oriented (and beyond) network architecture | |
Stoica et al. | Internet indirection infrastructure | |
US7209977B2 (en) | Method and apparatus for content-aware web switching | |
JP5855867B2 (en) | Service virtualization via content-centric network | |
US6182224B1 (en) | Enhanced network services using a subnetwork of communicating processors | |
US8266294B2 (en) | Routing hints | |
IL173157A (en) | Routing hints | |
EP2223501B1 (en) | Publish/subscribe networks | |
US7246148B1 (en) | Enhanced network services using a subnetwork of communicating processors | |
US7233981B2 (en) | System and method for multi-site load-balancing of encrypted traffic | |
Gan et al. | LSMAC: An improved load sharing network service dispatcher | |
Zhuang et al. | Internet indirection infrastructure | |
Paul et al. | Performance of WebRTC in the Context of a Decentralised Storage Solution |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: AT&T CORP., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DOUGLIS, FREDERICK;RABINOVICH, MICHAEL;RUBIN, AVIEL D.;AND OTHERS;REEL/FRAME:012154/0933;SIGNING DATES FROM 20010816 TO 20010827 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: AT&T INTELLECTUAL PROPERTY II, L.P., GEORGIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AT&T PROPERTIES, LLC;REEL/FRAME:033110/0563Effective date: 20140611Owner name: AT&T PROPERTIES, LLC, NEVADAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AT&T CORP.;REEL/FRAME:033110/0308Effective date: 20140611 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AT&T INTELLECTUAL PROPERTY II, L.P.;REEL/FRAME:033498/0320Effective date: 20140630 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044213/0313Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.) |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20181212 |
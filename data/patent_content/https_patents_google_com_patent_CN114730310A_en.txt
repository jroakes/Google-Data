CN114730310A - Universal data indexing for fast data retrieval - Google Patents
Universal data indexing for fast data retrieval Download PDFInfo
- Publication number
- CN114730310A CN114730310A CN202080080624.2A CN202080080624A CN114730310A CN 114730310 A CN114730310 A CN 114730310A CN 202080080624 A CN202080080624 A CN 202080080624A CN 114730310 A CN114730310 A CN 114730310A
- Authority
- CN
- China
- Prior art keywords
- database
- query
- index
- field value
- columns
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
- G06F16/2272—Management thereof
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/2228—Indexing structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/21—Design, administration or maintenance of databases
- G06F16/211—Schema design and management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
- G06F16/221—Column-oriented storage; Management thereof
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2452—Query translation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24573—Query processing with adaptation to user needs using data annotations, e.g. user-defined metadata
Abstract
A method of universal data index construction includes establishing a communicative coupling with the database (100, 240) through the database management system (250). The method further includes creating a union (150A, 150B) of said field values (120A, 120B, 120N) in all columns of the database and all said metadata (130A, 130B, 130N) for columns of the database in said index (170, 270) in the memory of said host computer (230). In this regard, the index associates each value and each metadata with a particular location in the database. The method also includes adding pairs of field values (160A, 160B, 160N) to the index as a co-occurrence list (180). Finally, the method includes issuing the query to the index without issuing a SQL WHERE statement to the database management system to produce a filtered query result (100C).
Description
Technical Field
The present disclosure relates to the field of data analysis, and more particularly to query generation for business intelligence.
Background
The term database refers to an organized collection of data that is electronically stored and accessed by a computing system. A database management system (DBMS) is, in turn, a computer program that provides an interface between a database and one or more end users in order to facilitate each end user's interaction with the database. The DBMS also typically provides an interface for other computer programs to access data in the underlying database. Generally, end users and other computer programs interact with databases through a DBMS using query instructions formed according to a corresponding query language, such as the long-history Structured Query Language (SQL).
While it is not difficult for many end users to query and manage data in a database using SQL, formulating more complex SQL queries is not suitable for people with small intentions. More importantly, regardless of the mechanism of the actual query, specifying a query requires a strong understanding of the data in the database and the underlying relationships between the data. Typically, in order to locate particular data in a database, an SQL query must be created that contains a filter that specifies values for particular fields of the database records. The WHERE statement is the primary tool used in this example. However, to make such a query, the author of the query first knows a priori the names of the fields of the filter to be applied, and the filter will fail if the values searched in the filter exist in or are related to different values of different fields. Of course, performing extensive query operations on a database in order to search the database for a desired record comprehensively can be slow and consume a large amount of resources.
Disclosure of Invention
Examples of the present disclosure address deficiencies of the art in respect to data analysis and provide a novel and non-obvious method, system and computer program product for universal data index building. In an example of the present disclosure, a universal data index building method includes establishing, by data processing hardware of a host computer, a communicative coupling with a database through a database management system. The method also includes creating, by the data processing hardware, a union of field values in all columns of the database with all metadata for columns of the database in an index in a memory of the host computer. In this regard, the index associates each value and each metadata with a particular location in the database. The method also includes adding, by the data processing hardware, the pair field value as a co-occurrence list to the index. Finally, the method includes issuing the query to the index without issuing a SQL WHERE statement to the database management system to produce the filtered query result.
This aspect of the disclosure may include one or more of the following optional features. In one aspect of the disclosure, the metadata includes a name for each column. In this regard, the query may include query terms associated with a column name of one of the columns. Also, the query may include field values, such that issuance of the query results in the name of the column containing the field values as a reverse lookup of the name of the column based on the field values. Even further, the query may include a first field value such that issuance of the query results in a second field value from a corresponding one of the pair of field values of the co-occurrence list to locate the second field value as co-occurrence with the first field value.
In another aspect of the present disclosure, a data analysis data processing system is configured for universal data index construction. The system includes a host computing system having one or more computers, each computer having a memory and at least one processor. The system also includes a database index that is persistent in memory of the host computing system. Finally, the system includes a generic data index building module. The modules include computer program instructions that execute in a memory of the computing system to cause the at least one processor to perform operations. The operations include establishing, by a database management system, a communicative coupling with a database. Another operation includes creating a union of field values in all columns of the database with all metadata for columns of the database in a database index in memory of the host computing system, the index associating each value and each metadata with a particular location in the database. Another operation includes adding the pair field values as a co-occurrence list to the database index. Yet another operation includes issuing a query to the database index without issuing an SQL WHERE statement to the database management system to produce a filtered query result.
This aspect of the disclosure may include one or more of the following optional features. In one example, the metadata includes a name for each column. In this regard, the query may include query terms associated with a column name of one of the columns. Also, the query may include field values, such that issuance of the query results in the name of the column containing the field values as a reverse lookup of the name of the column based on the field values. Even further, the query may include a first field value such that issuance of the query results in a second field value from a corresponding one of the pair of field values of the co-occurrence list to locate the second field value as co-occurrence with the first field value.
Another aspect of the present disclosure provides a computer program product for universal data index construction. The computer program product includes a computer readable storage medium having program instructions embodied therewith. The program instructions may be executable by a device to cause the device to perform operations. The operations include establishing, by a database management system, a communicative coupling with a database. Another operation includes creating a union of field values in all columns of a database with all metadata for the columns of the database in a database index in memory of a host computer, the index associating each of the values and each of the metadata with a particular location in the database. Another operation includes adding the pair field values as a co-occurrence list to the database index. Yet another operation includes issuing a query to the database index without issuing an SQL WHERE statement to the database management system to produce a filtered query result.
This aspect of the disclosure may include one or more of the following optional features. In one example, the metadata includes a name for each column. In this regard, the query may include a query term for one of the column names associated with the column name. Also, the query may include field values, such that issuance of the query results in the name of the column containing the field values as a reverse lookup of the name of the column based on the field values. Even further, the query may include a first field value such that issuance of the query results in a second field value from a corresponding one of the pair of field values of the co-occurrence list to locate the second field value as co-occurrence with the first field value.
Additional aspects of the disclosure will be set forth in part in the description which follows, and in part will be obvious from the description, or may be learned by practice of the disclosure. The aspects of the disclosure will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the disclosure, as claimed.
Drawings
The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate examples of the disclosure and together with the description, serve to explain the principles of the disclosure. The embodiments illustrated herein are presently preferred, it being understood, however, that the disclosure is not limited to the precise arrangements and instrumentalities shown, wherein:
FIG. 1 is a pictorial illustration of a process for generating and utilizing a universal database index for fast query searching of databases;
FIG. 2 is a schematic diagram of a data processing system configured for generating and utilizing a universal database index to quickly query a database; and the combination of (a) and (b),
FIG. 3 is a flow diagram illustrating a process for generating a universal database index for fast query searching of databases.
Detailed Description
Examples of the present disclosure provide for the generation and use of a generic database index for fast query search of databases. According to examples of the present disclosure, a universal data index may be generated by opening a communication connection to a database via a database management system. Thereafter, an index is created as a union of field values in all columns of the database with all metadata of the columns of the database. An association is then established within the index for each value and each metadata with a particular location in the database. Also, the pair field values are added to the index as a co-occurrence list. The universal data index is then used by issuing queries to the index without issuing Structured Query Language (SQL) WHERE statements to a database management system to produce filtered query results.
In further illustration, the figures illustrate processes for generating and using a universal database index to quickly query a database. As shown in FIG. 1, database 100 includes different records for different values 120A, 120B, 120N for different fields 110A, 110B, 110N, respectively, and optionally pseudo-columns, pseudo-column values, dimensions, and dimension values. Each of the different fields 110A, 110B, 110N includes metadata 130A, 130B, 130N, such as a name of each of the fields 110A, 110B, 110N. Each of the values 120A, 120B, 120N of the records of the database 100 is unified into a data structure 150A, 150B, such as an array, a linked list, or a simple separator split value string to name three such examples. The data structures 150A, 150B are then stored in the universal index 170 associated with the locations 140A, 140B where a corresponding one of the records is located in the database 100 at the locations 140A, 140B.
Notably, the co-occurrence list 180 is also generated from the universal index 170. In this regard, for each data structure 150A, 150B, the co-occurrence list 180 includes a set of pairs (pair) of values 160A, 160B, 160N and a relationship to the locations 140A, 140B such that the number of pairs 160A, 160B, 160N of values 120A, 120B, 120N in the set is:
each pair 160A, 160B, 160N of values 120A, 120B, 120N in the set shares the same location 140A, 140B in the database 100. The co-occurrence list 180 is then appended to the index 170.
Thereafter, an index interface 190 is provided, the key 100A is received in the index query 100 through the index interface 190, and in response to the index query 100, the universal index 170 can be searched to identify the corresponding data structure 150A, 150B containing the key 100A, and then the corresponding location 100B for one of the identified data structures 150A, 150B is identified. Alternatively, not only the location 100B in the database may be located by searching the co-occurrence list 180, but also values co-occurring with the values 120A, 120B, 120N, where one of the values 120A, 120B, 120N corresponding to the key 100A may be found in the database. In either case, the indexing interface 190 then issues a query to the database 100 at location 100B in order to retrieve the associated records in the result set 100C without having to participate in a resource-intensive SQL query using the WHERE instruction.
The process described in connection with FIG. 1 may be implemented in a data processing system. In further illustration, FIG. 2 schematically shows a data processing system configured for generating and utilizing a universal database index to quickly query a database. The system includes a host computing system 230, the host computing system 230 including one or more computers, each computer having a memory and at least one processor. The host computing system is coupled to various client devices 210 through a computer communications network 220. The host computing system 230 is coupled to the database 240 and supports execution in memory of a database management system 250, the database management system 250 regulating access to the database 240 by different requesters from client devices 210 requesting from the computer communications network 220.
Notably, the system includes a universal data indexing module 300, the universal data indexing module 300 including computer program instructions that execute in a memory of the computing system 230. The program instructions are enabled during execution to generate an index 270 to the database 240 by including a union list 280 of data fields of different entries in the index 270, each entry including a union of values of data fields and metadata related to the data fields of a corresponding record in the database 240 and a location of the corresponding record in the database 240. The program instructions are also enabled during execution to include in the index 270 a co-occurrence list 290 of different value pairs co-occurring in the same record of the database 250 and the corresponding location of the record in the database 250.
Finally, the program instructions are enabled to generate an index query interface 260 adapted to receive a keyword query from a client device 210 in the computer communications network 220. The program instructions, upon receiving a keyword query, extract the keyword and search the data field federated list 280 of the index 270 to locate an entry that includes the keyword. The corresponding location value is then identified and program instructions retrieve a record at that location from the database 240, which is then returned to one of the requesting client devices 210 through the query interface 260. Alternatively, the program instructions can return metadata with the record for the fields of the record that match the key, such as the column name of the field, to implement a "reverse lookup". Alternatively, the program instructions also search the co-occurrence list 290 and return other values in the query results that co-occur with the value associated with the keyword.
In yet further illustration of the operation of the universal data indexing module 300, FIG. 3 is a flow chart illustrating a process for generating and utilizing a universal database index to quickly query a database. Beginning in block 305, a connection is established to the database and in block 310, a first record is retrieved from the database. In block 315, a location in the database is determined for the record, and in block 320, a union of all field values in the record is computed for each field of the record, and in block 325, metadata is computed for each field of the record. Then, in block 330, an entry comprising the union of the value, metadata, and location is written to the universal data index. If additional records remain in the database to be processed in decision block 335, the process returns to block 310 to retrieve the next record in the database in block 310.
When no other records remain to be processed in the database, the first index entry is selected for processing in block 340. In block 345, the index entry is expanded to include a set of entries for the co-existing entries, each sharing the same location value of the database as the entry in the index. If, in decision block 350, additional entries in the index remain to be processed, the process returns to block 340 where the next entry in the index is selected for processing at block 340. When no other entries remain in the index in decision block 350, the index query interface is opened for access by a remote device over the computer communications network in block 355.
The present disclosure may be embodied within a system, method, computer program product, or any combination thereof. The computer program product may include a computer-readable storage medium or media having computer-readable program instructions thereon for causing a processor to perform aspects of the present disclosure. The computer readable storage medium may be a tangible device capable of holding and storing instructions for use by an instruction execution device. The computer readable storage medium may be, for example, but is not limited to, an electronic storage device, a magnetic storage device, an optical storage device, an electromagnetic storage device, a semiconductor storage device, or any suitable combination of the foregoing.
The computer-readable program instructions described herein may be downloaded from a computer-readable storage medium to a corresponding computing/processing device, or to an external computer or external storage device via a network. The computer-readable program instructions may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer, partly on a remote computer or entirely on the remote computer or server. Aspects of the present disclosure are described herein with reference to flowchart illustrations and/or block diagrams of methods, apparatus (systems) and computer program products according to aspects of the disclosure. It will be understood that each block of the flowchart illustrations and/or block diagrams, and combinations of blocks in the flowchart illustrations and/or block diagrams, can be implemented by computer-readable program instructions.
These computer readable program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions/acts specified in the flowchart and/or block diagram block or blocks. These computer-readable program instructions may also be stored in a computer-readable storage medium that can direct a computer, a programmable data processing apparatus, and/or other devices to function in a particular manner, such that the computer-readable storage medium having the instructions stored therein comprise an article of manufacture including instructions which implement an aspect of the function/act specified in the flowchart and/or block diagram block or blocks.
The computer readable program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational steps to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer, other programmable apparatus or other devices implement the functions/acts specified in the flowchart and/or block diagram block or blocks.
The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various aspects of the present disclosure. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of instructions, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and/or flowchart illustration, and combinations of blocks in the block diagrams and/or flowchart illustration, can be implemented by special purpose hardware-based systems which perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.
Finally, the terminology used herein is for the purpose of describing particular aspects only and is not intended to be limiting of the disclosure. As used herein, the singular forms "a", "an" and "the" are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms "comprises" and/or "comprising," when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.
The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The above examples were chosen and described in order to best explain the principles of the disclosure and the practical application, and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.
Various implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly, other implementations are within the scope of the following claims.
Claims (15)
1. A method for generating and utilizing a universal data index is characterized by comprising the following steps:
establishing, by data processing hardware of a host computer (230), a communicative coupling with a database (100, 240) through a database management system (250);
creating, by the data processing hardware (230), a union (150A, 150B) of field values (120A, 120B, 120N) in all columns of the database (100, 240) and all metadata (130A, 130B, 130N) for the columns of the database (100, 240) in an index (170, 270) in memory of the host computer (230), the index (170, 270) associating each of the values (120A, 120B, 120N) and each of the metadata (130A, 130B, 130N) with a particular location (100B, 140A, 140B) in the database (100, 240);
adding, by the data processing hardware (230), the pair field values (160A, 160B, 160N) to the index (170, 270) as a co-occurrence list (180); and
issuing, by the data processing hardware (230), a query to the index (170, 270) without issuing a structured query language, SQL WHERE, statement to the database management system (250) to produce a filtered query result (100C).
2. The method of claim 1, wherein the metadata (130A, 130B, 130N) includes a name for each of the columns.
3. The method of claim 2, wherein the query comprises a query term associated with a column name of one of the columns.
4. The method of any of claims 2-3, wherein the query includes a field value (120A, 120B, 120N), and wherein a name of a column containing the field value (120A, 120B, 120N) is generated based on the field value (120A, 120B, 120N) as a reverse lookup of the name of the column.
5. The method according to any of claims 1-4, wherein said query includes a first field value (120A, 120B, 120N), and said issuing of said query results in a second field value (120A, 120B, 120N) from a corresponding one of said pair field values (160A, 160B, 160N) of said co-occurrence list (180) in order to locate said second field value (120A, 120B, 120N) as co-occurring with said first field value (120A, 120B, 120N).
6. A data analysis data processing system configured for universal data index building, comprising:
a host computing system (230) comprising one or more computers, each computer having a memory and at least one processor;
a database index (170, 270) that persists in the memory of the host computing system (230); and
a universal data index building module (300) comprising computer program instructions executing in the memory of the host computing system (230) to cause the at least one processor to:
establishing a communicative coupling with a database (100, 240) through a database management system (250);
creating, in the database index (170, 270) in the memory of the host computer (230), a union (150A, 150B) of field values (120A, 120B, 120N) in all columns of the database (100, 240) with all metadata (130A, 130B, 130N) of the columns of the database (100, 240), the index (170, 270) associating each of the values (120A, 120B, 120N) and each of the metadata (130A, 130B, 130N) with a particular location (100B, 140A, 140B) in the database (100, 240);
adding a pair field value (160A, 160B, 160N) to the index (170, 270) as a co-occurrence list (180); and
issuing a query to the index (170, 270) without issuing a structured query language, SQL WHERE, statement to the database management system (250) to produce a filtered query result (100C).
7. The system of claim 6, wherein the metadata (130A, 130B, 130N) includes a name for each of the columns.
8. The system of claim 7, wherein the query comprises a query term associated with a column name of one of the columns.
9. The system of any of claims 7-8, wherein the query includes a field value (120A, 120B, 120N), and wherein a name of a column containing the field value (120A, 120B, 120N) is generated based on the field value (120A, 120B, 120N) as a reverse lookup of the name of the column.
10. The system according to any of the claims 6-9, wherein said query comprises a first field value (120A, 120B, 120N), and said issuing of said query results in a second field value (120A, 120B, 120N) from a corresponding one of said pair field values (160A, 160B, 160N) of said co-occurrence list (180) in order to locate said second field value (120A, 120B, 120N) as co-occurrence with said first field value (120A, 120B, 120N).
11. A computer program product (300) for universal data index building, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by an apparatus to cause the apparatus to:
establishing a communicative coupling with a database (100, 240) through a database management system (250);
creating, in an index (270) in memory of a host computer (230), a union (150A, 150B) of field values (120A, 120B, 120N) in all columns of the database (100, 240) with all metadata (130A, 130B, 130N) for the columns of the database (100, 240), the index (170, 270) associating each of the values (120A, 120B, 120N) and each of the metadata (130A, 130B, 130N) with a particular location (100B, 140A, 140B) in the database (100, 240);
adding a pair field value (160A, 160B, 160N) to the index (170, 270) as a co-occurrence list (180); and
issuing a query to the index (170, 270) without issuing a structured query language, SQL WHERE, statement to the database management system (250) to produce a filtered query result (100C).
12. The computer program product in accordance with claim 11, wherein the metadata includes a name for each of the columns.
13. The computer program product in accordance with claim 12, wherein the query includes a query term associated with a column name of one of the columns.
14. A computer program product according to any of claims 12-13, wherein the query includes a field value, and wherein a name of a column containing the field value is generated based on the field value as a reverse lookup of the name of the column.
15. A computer program product according to any of claims 11-14, wherein said query includes a first field value, and said issuing of said query results in a second field value from a corresponding one of said pair field values (120A, 120B, 120N) of said co-occurrence list, so as to locate said second field value as co-occurrence with said first field value.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/690,069 | 2019-11-20 | ||
US16/690,069 US20210149866A1 (en) | 2019-11-20 | 2019-11-20 | Universal data index for rapid data exploration |
PCT/US2020/061184 WO2021102083A1 (en) | 2019-11-20 | 2020-11-19 | Universal data index for rapid data exploration |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114730310A true CN114730310A (en) | 2022-07-08 |
Family
ID=73793842
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080080624.2A Pending CN114730310A (en) | 2019-11-20 | 2020-11-19 | Universal data indexing for fast data retrieval |
Country Status (6)
Country | Link |
---|---|
US (1) | US20210149866A1 (en) |
EP (1) | EP4062292A1 (en) |
JP (1) | JP7373663B2 (en) |
KR (1) | KR20220092990A (en) |
CN (1) | CN114730310A (en) |
WO (1) | WO2021102083A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2024086796A1 (en) | 2022-10-20 | 2024-04-25 | Alector Llc | Anti-ms4a4a antibodies with amyloid-beta therapies |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6980976B2 (en) | 2001-08-13 | 2005-12-27 | Oracle International Corp. | Combined database index of unstructured and structured columns |
US6801904B2 (en) * | 2001-10-19 | 2004-10-05 | Microsoft Corporation | System for keyword based searching over relational databases |
DE10260088A1 (en) | 2002-12-19 | 2004-08-05 | Endress + Hauser Gmbh + Co. Kg | Device for determining and / or monitoring at least one physical variable with a piezo drive for vibration excitation and detection |
US20050216518A1 (en) | 2004-03-26 | 2005-09-29 | Oracle International Corporation | Database management system with persistent, user-accessible bitmap values |
US7925678B2 (en) * | 2007-01-12 | 2011-04-12 | Loglogic, Inc. | Customized reporting and mining of event data |
JP5567967B2 (en) * | 2010-09-30 | 2014-08-06 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Cache control method, system and program in database |
US10394848B2 (en) | 2013-07-29 | 2019-08-27 | Amazon Technologies, Inc. | Generating a multi-column index for relational databases by interleaving data bits for selectivity |
US10095720B2 (en) | 2016-02-05 | 2018-10-09 | Amadeus S.A.S. | Database table index |
-
2019
- 2019-11-20 US US16/690,069 patent/US20210149866A1/en active Pending
-
2020
- 2020-11-19 EP EP20824031.7A patent/EP4062292A1/en active Pending
- 2020-11-19 CN CN202080080624.2A patent/CN114730310A/en active Pending
- 2020-11-19 KR KR1020227019744A patent/KR20220092990A/en unknown
- 2020-11-19 WO PCT/US2020/061184 patent/WO2021102083A1/en unknown
- 2020-11-19 JP JP2022529376A patent/JP7373663B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
EP4062292A1 (en) | 2022-09-28 |
WO2021102083A1 (en) | 2021-05-27 |
JP7373663B2 (en) | 2023-11-02 |
US20210149866A1 (en) | 2021-05-20 |
JP2023502434A (en) | 2023-01-24 |
KR20220092990A (en) | 2022-07-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8180758B1 (en) | Data management system utilizing predicate logic | |
US11120019B2 (en) | Adapting a relational query to accommodate hierarchical data | |
US9639542B2 (en) | Dynamic mapping of extensible datasets to relational database schemas | |
US7472140B2 (en) | Label-aware index for efficient queries in a versioning system | |
US11347742B2 (en) | Querying across a composite join of multiple database tables using a search engine index | |
US8521711B2 (en) | Providing persistent refined intermediate results selected from dynamic iterative filtering | |
US20040162816A1 (en) | Text and attribute searches of data stores that include business objects | |
US9959326B2 (en) | Annotating schema elements based on associating data instances with knowledge base entities | |
US20140046928A1 (en) | Query plans with parameter markers in place of object identifiers | |
US11216474B2 (en) | Statistical processing of natural language queries of data sets | |
CN107329987A (en) | A kind of search system based on mongo databases | |
US20220391367A1 (en) | Efficient Indexing for Querying Arrays in Databases | |
JP2017535842A (en) | Simplify calling the import procedure to transfer data from the data source to the data target | |
US20150363442A1 (en) | Index merge ordering | |
Xirogiannopoulos et al. | Graphgen: Adaptive graph processing using relational databases | |
US7970757B2 (en) | Computer program product for database query optimization | |
US6345271B1 (en) | Method and apparatus for transforming queries | |
US8200673B2 (en) | System and method for on-demand indexing | |
CN114730310A (en) | Universal data indexing for fast data retrieval | |
Wittenburg et al. | An adaptive document management system for shared multimedia data | |
JP2007501476A (en) | Database system that does not drop objects and dependent objects | |
WO2004072756A2 (en) | Adapting business objects for searches and searching adapted business objects | |
US9020995B2 (en) | Hybrid relational, directory, and content query facility | |
Yafooz et al. | Model for automatic textual data clustering in relational databases schema | |
US8666972B2 (en) | System and method for content management and determination of search conditions |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US20060085544A1 - Algorithm for Minimizing Rebate Value Due to SLA Breach in a Utility Computing Environment - Google Patents
Algorithm for Minimizing Rebate Value Due to SLA Breach in a Utility Computing Environment Download PDFInfo
- Publication number
- US20060085544A1 US20060085544A1 US10/711,981 US71198104A US2006085544A1 US 20060085544 A1 US20060085544 A1 US 20060085544A1 US 71198104 A US71198104 A US 71198104A US 2006085544 A1 US2006085544 A1 US 2006085544A1
- Authority
- US
- United States
- Prior art keywords
- resource
- customer
- sla
- resources
- customers
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/50—Allocation of resources, e.g. of the central processing unit [CPU]
- G06F9/5005—Allocation of resources, e.g. of the central processing unit [CPU] to service a request
- G06F9/5027—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resource being a machine, e.g. CPUs, Servers, Terminals
- G06F9/505—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resource being a machine, e.g. CPUs, Servers, Terminals considering the load
Definitions
- This invention generally relates to the field of managing resources in a utility computing environment.
- this invention relates to a process for minimizing the total value of rebates disbursed to customers, in a utility computing environment, as a result of a service level agreement breach.
- IT information technology
- the providers have offered IT management services and computing resources to other businesses (the “customers”) within a utility computing environment. While a customer may purchase or lease IT resources directly from a provider for that customer's exclusive benefit, a customer also may share a provider's computing resources and management services with other customers. In a typical utility computing environment, the customer does not purchase or lease the physical resources; instead, the provider retains the discretion to allocate the resources as needed to meet its service obligations. Nonetheless, the provider must meet the requirements of each customer sharing the IT resources as specified in a contract or an agreement. If these service requirements are not met, the provider has breached its service obligation to the customer and the provider must compensate the customer for the breach.
- FIG. 1 portrays another characteristic of the on-demand model—multiple customers sharing the same subsystem within the same computing resource, such as a logical partition (LPAR).
- LPAR logical partition
- customer 3 and customer 4 each could run separate instances of operating system 3 , such as International Business Machines, Inc.'s (IBM) Z/LINUX, on a single Z/VM (also by IBM) LPAR.
- IBM International Business Machines, Inc.'s
- Z/VM also by IBM
- a Service Level Agreement typically is used in an on-demand shared environment to establish to threshold levels of service and guide the dynamic allocation of IT resources.
- the SLA is a contract, or series of contracts, that embodies the mutual understandings between the provider and the customer.
- SLA breach or “breach.”
- the SLA also sets system (and subsystem) performance expectations and defines the procedures and reports needed to track compliance to the agreement.
- the SLA may contain the process for reporting service problems, the time frame for problem resolution, the process for monitoring service levels, and the penalties associated with any given SLA breach.
- a performance monitoring tool collects performance data to determine compliance with the SLA.
- the profiling tool tracks and measures performance characteristics of the system including CPU utilization, processing time, and the memory or storage available to a customer. Often, these tools are designed to operate in a particular environment.
- metrics information obtained from these performance measurements
- the profiling tool indicates that system resources are not available, or are not performing according to the SLA
- the SLA is breached.
- the provider pays a penalty to compensate the customer for the SLA breach according to the terms of the SLA.
- One of the fundamental tenets of a utility computing environment is the concept of proactively rebating, i.e., compensating, a customer when an SLA is breached.
- the various customers hosted by a single provider agree to different levels of service and compensation or “rebate” for an associated breach.
- some of these customers may be “premium” customers, who pay more for higher service levels and are entitled to greater compensation when there is an SLA breach. These premium customers consequently represent a greater penalty to the provider in the event of an SLA breach.
- Other customers may subscribe as “standard” customers, who pay relatively less for the services, receive less compensation when there is a breach, and thus, represent a lesser degree of penalty in the event of an SLA breach.
- a sample scenario is provided in FIG. 2 .
- Patent App. No. 0062205 assigns a financial value to identified performance flows based on SLA requirements and penalties for breach of the requirements. This financial value alerts operators of the possible financial impacts of reconfiguring hardware or software associated with those identified flows. This process, however, merely calculates and displays the financial loss associated with a breach or potential breach of one individual customer's SLA.
- U.S. patent application Ser. No. ______ (Attorney Docket No. RSW920030148US) does provide a method for estimating an SLA breach value, based on data acquired from an individual customer and on data acquired from an aggregated group of customers. But again, this method does not disclose a means for minimizing the total rebate a service provider must offer when an SLA is breached.
- Rebates in the form of monetary compensation, free software, or other forms, are costly to service providers. Rebates affect a provider's overall profitability as well impact the provider's goodwill. After all, those customers who have paid a premium price for service are not receiving the level of service agreed upon. These customers may suffer financial losses and losses of goodwill, as well, if they, in turn, cannot meet their business demands. Therefore, one skilled in the art should appreciate the advantages of an invention that precisely addresses the problem of minimizing rebates the service providers disburse to customers as a result of an SLA breach. This and other objects of the invention will be apparent to those skilled in the art from the following detailed description of a preferred embodiment of the invention.
- the invention described is a new and useful process for minimizing the overall rebate a provider disburses when an SLA breach occurs in a utility computing environment.
- the inventive process calculates the total minimum rebate value payable by a provider to a customer, or group of customers, in the event of an SLA breach.
- the process compares performance data and resource usage with the SLAs of the customers, and reallocates shared resources to those breached customers who represent a lesser penalty to the provider in the event of an SLA breach. Specifically, the process determines if there is a breach, and if so, identifies the breached customer and the breached customer's status based on the penalty provided in the SLA.
- the process also identifies the underlying resource causing the breach.
- the process then creates a list of customers with a lower customer status and determines if any of the customers with the lower status are under-utilizing the resource. If the resource is under-utilized, the process then reallocates these under-utilized resources to those breached customers requiring additional resources to meet SLA thresholds. If all resources are operating at peak capacity, the process reallocates the resources to those customers whose SLAs provide a greater penalty in the event of an SLA breach, as compared to those customers whose SLAs provide for a lesser penalty, thereby minimizing the total rebate due upon an SLA breach.
- FIG. 1 illustrates an exemplary shared resource configuration
- FIG. 2 depicts an exemplary customer scenario in a utility computing environment
- FIG. 3 represents an exemplary prior art network of computers and other hardware devices, in which the Rebate Minimization Algorithm may be implemented;
- FIG. 4 is a schematic diagram of the host server memory used to implement the Rebate Minimization Algorithm.
- FIG. 5 depicts the inventive process for minimizing rebates disbursed to customers sharing IT resources.
- the present invention is a process for minimizing the total rebate value that an IT provider disburses to customers in the event of an SLA breach.
- the invention although operable in a variety of hardware and software configurations, operates in a utility computing environment wherein an IT service provider allocates shared IT resources to customers according to the terms of previously established SLAs.
- computer hardware refers to any machine or apparatus that is capable of accepting, performing logic operations on, storing, or displaying data, and includes without limitation processors and memory; the term “computer software” or “software,” refers to any set of instructions operable to cause computer hardware to perform an operation.
- a “computer program” or “program” includes without limitation any software operable to cause computer hardware to accept, perform logic operations on, store, or display data.
- a computer program may, and often is, comprised of a plurality of smaller programming units, including without limitation subroutines, modules, functions, methods, and procedures.
- the functions of the present invention may be distributed among a plurality of computers and computer programs.
- the invention is described best, though, as a single computer program that configures and enables one or more general-purpose computers to implement the novel aspects of the invention.
- the inventive computer program will be referred to as the “Rebate Minimization Algorithm” (RMA).
- the RMA calculates the total minimum rebate value payable by an IT service provider to a customer, or group of customers, in the event of an SLA breach.
- service provider or “provider” refers to any entity that provides management services and computing resources to any individual or entity.
- a “customer” is any individual or entity acquiring the management services and shared computing resources from the service provider.
- the RMA determines if the provider has breached an SLA. If so, the RMA reallocates under-utilized resources to meet the demands of the breached customer if the breached customer represents a greater penalty to the provider than those customers under-utilizing the resources.
- a service provider offers management services and computing resources to a customer at the system and subsystem level.
- the customer acquires services and resources from the provider, the customer may, in turn, offer goods, services, or information, for purchase, lease, or use to other individuals or entities, usually via the Internet. Any such individual or entity purchasing, leasing, or otherwise obtaining or using goods, services, or information from the customer is referred to herein as a “consumer.”
- the consumer may purchase items on-line from the customer's website.
- the consumer communicates with the customer by means of a network, routed through a utility computing environment, which the provider maintains.
- the amount of IT resources available to the customers determines the number of consumers a customer may host on its website at any particular instance, and thus, further determines the amount of business that a customer may transact.
- a “network” comprises any number of hardware devices coupled to and in communication with each other through a communications medium, such as the Internet.
- a “communications medium” includes without limitation any physical, optical, electromagnetic, or other medium through which hardware or software can transmit data.
- exemplary prior art network 100 has a limited number of nodes, including consumer workstation computer 105 , consumer workstation computer 110 , consumer workstation computer 115 (collectively consumer workstation computers 105 - 115 ), host server computer 120 , database server computer 125 , and database 130 .
- server refers to a computer system that is shared by multiple clients.
- a server may refer to the entire computer system, i.e., hardware and software, or just the software that performs the service.
- database server refers to the both the hardware and software necessary to store and retrieve data.
- web application server refers to any software product designed to operate in a web-environment, such as an HTTP server that manages requests from a browser and delivers HTML documents and files in response.
- Web server software is frequently used in e-commerce and executes server-side scripts, such as Java Script and Java server pages (JSPs), to retrieve data from a database and display the data in the form of a web page via browsers or client applications.
- server computer refers to the hardware on which the RMA and customers' resources reside.
- a database may exist in many forms.
- database generally refers to any collection of data stored together and organized for rapid search and retrieval, including without limitation flat file databases, fielded databases, full-text databases, object-oriented databases, and relational databases. While host server computer 120 , database server computer 125 , and database 130 are further located within utility computing environment 135 , consumer workstation computers 105 - 115 are outside of the utility computing environment 135 .
- Host server computer 120 hosts programs, applications, and tools that control consumption of computing resources in utility computing environment 135 . Therefore, in this embodiment, the consumer accesses the utility computing environment 135 via consumer computer workstations 105 - 115 networked to host server computer 120 by network connection 140 .
- the amount of IT resources available to the customer, as allocated by applications installed on host server computer 120 determine the actual number of consumers that may access the customer's website, and thus determine the number of consumers that a customer may service.
- Network connection 140 comprises all hardware, software, and communications media necessary to enable communication between network nodes 100 - 130 . Consumer workstation computers 105 - 115 use publicly available protocols or messaging services to communicate with the host server computer 120 through network connection 140 .
- Host server computer 120 interacts with database server 125 to store and retrieve SLA information 145 , system performance data 150 , and customer information 155 to and from database 130 .
- SLA information includes the level of service on which the customers and providers have agreed, and the penalty the provider pays when the provider breaches the SLA.
- Performance data obtained in a web application environment, may include the retrieval rate from the web application server to the database, the time to request and return a displayed web-page, and the number of pooling requests, i.e., the number of users, an application can manage.
- Customer data may include information regarding inventory, shipping, prices, and consumer records.
- the nodes in the utility computing environment 135 also use publicly available network protocols; however, a firewall may control access to the utility computing environment 135 .
- Memory 200 of host server computer 120 typically contains various applications such as web application server 205 , profiling tool 210 , and RMA 215 , as depicted in FIG. 4 .
- Web application server 205 executes server-side scripts, such as Java Script and JSPs, to retrieve data from a database and transmit data in the form of a web page to the consumer workstation computers 105 - 115 .
- Profiling tool 210 collects performance data 150 by tracking and timing individual transactions within utility computing environment 135 .
- Web application server 205 actively allocates customer memory resources 220 - 230 as part of its normal operation.
- FIG. 4 is included as a descriptive expedient and does not necessarily reflect any physical embodiment of memory 200 .
- customer memory resources 220 - 230 represent any number of shared resources.
- the term “shared resource” includes any computing resource that the service provider allocates among various customers according to the terms of the customer's SLAS. Although volatile memory is depicted in FIG. 4 as the allocated resource, other resources, such as persistent memory, CPU utilization, and network bandwidth may be provisioned according to the SLA.
- the applications are stored on host server computer 120 , but these applications may be located on any server which the host server computer is capable of accessing.
- RMA 215 determines if there is an SLA breach or a potential SLA breach, by comparing the resource usage of the customers, as indicated by performance data 150 , with the corresponding customer SLA information 145 ( 410 ). If there is an actual or potential breach, RMA 215 identifies the breached customer, the breached customer's status, and the underlying resource causing the breach ( 420 , 430 , and 440 ). Customer status is determined by the severity of the penalty, i.e., the amount the provider rebates the customer, for services not rendered, when the provider breaches the SLA.
- RMA 215 determines if there are any customers, sharing the underlying resource causing the breach, with a lower customer status than the breached customer ( 450 ). If there are no customers with a lower customer status than the breached customer, the current breach scenario is the optimal scenario, no resources are allocated, and the process ends ( 510 ). If there are customers sharing the underlying resource causing the breach, then RMA 215 next creates a target customer list, which includes all customers whose status is lower than the breached customer's status ( 460 ). RMA 215 determines if the resource usage of customers included in the target customer list is less than specified in the corresponding SLAs, i.e., the resources are not operating at peak capacity and therefore are under-utilized ( 470 ).
- RMA 215 reallocates the under-utilized resources to the breached customer to minimize the rebate value disbursed for the SLA breach, and the process ends ( 480 and 510 ).
- RMA 215 determines that all customers are operating at peak capacity by using the resources to the maximum extent specified in the SLA so that the resource is not under-utilized, RMA 215 releases the resource allocated to customers having a lower customer status, as indicated in the target customer list. RMA 215 then reallocates the resources to the breached customer who represents a greater penalty to the provider ( 470 , 490 , and 500 ). RMA 215 thus determines the minimum total rebate payable by the provider for an SLA breach and the process ends ( 510 ).
Abstract
Description
- The present invention is related to the subject matter of U.S. patent application Ser. No. ______ (Attorney Docket number AUS920030302US1), and U.S. patent application Ser. No. ______ (Attorney Docket No. RSW920030148US1), both of which are incorporated herein by reference.
- This invention generally relates to the field of managing resources in a utility computing environment. In particular, this invention relates to a process for minimizing the total value of rebates disbursed to customers, in a utility computing environment, as a result of a service level agreement breach.
- For years, information technology (IT) organizations (the “providers”) have offered IT management services and computing resources to other businesses (the “customers”) within a utility computing environment. While a customer may purchase or lease IT resources directly from a provider for that customer's exclusive benefit, a customer also may share a provider's computing resources and management services with other customers. In a typical utility computing environment, the customer does not purchase or lease the physical resources; instead, the provider retains the discretion to allocate the resources as needed to meet its service obligations. Nonetheless, the provider must meet the requirements of each customer sharing the IT resources as specified in a contract or an agreement. If these service requirements are not met, the provider has breached its service obligation to the customer and the provider must compensate the customer for the breach.
- As illustrated in
FIG. 1 , customers of on-demand services share management and computing resources (to the system and subsystem level), including persistent memory (“storage”), volatile memory (“memory”), and processors.FIG. 1 portrays another characteristic of the on-demand model—multiple customers sharing the same subsystem within the same computing resource, such as a logical partition (LPAR). InFIG. 1 , for example,customer 3 and customer 4 each could run separate instances ofoperating system 3, such as International Business Machines, Inc.'s (IBM) Z/LINUX, on a single Z/VM (also by IBM) LPAR. When multiple external customers share the same hardware, as described here, performance tuning of the system must be applicable to both the workload and to all customers sharing the hardware. - A Service Level Agreement (SLA) typically is used in an on-demand shared environment to establish to threshold levels of service and guide the dynamic allocation of IT resources. The SLA is a contract, or series of contracts, that embodies the mutual understandings between the provider and the customer. Thus, any failure to provide the agreed level of service to a customer is referred to herein as an “SLA breach” or “breach.” The SLA also sets system (and subsystem) performance expectations and defines the procedures and reports needed to track compliance to the agreement. The SLA may contain the process for reporting service problems, the time frame for problem resolution, the process for monitoring service levels, and the penalties associated with any given SLA breach.
- A performance monitoring tool, commonly referred to as a profiling tool, collects performance data to determine compliance with the SLA. The profiling tool tracks and measures performance characteristics of the system including CPU utilization, processing time, and the memory or storage available to a customer. Often, these tools are designed to operate in a particular environment. Performance Monitoring Infrastructure Request Metrics is an example of a profiling tool designed to operate after deployment in a web-based environment. See, generally, http://publib.boulder.ibm.com/infocenter/ws51help/index.jsp?topic=/com.ibm.web sphere.exp.doc/info/exp/ae/tprf_requestmetrics.html. Additionally, system administrators use the information obtained from these performance measurements (“metrics”) to tune the performance of the system and take corrective action if needed. When the profiling tool indicates that system resources are not available, or are not performing according to the SLA, the SLA is breached. The provider pays a penalty to compensate the customer for the SLA breach according to the terms of the SLA.
- One of the fundamental tenets of a utility computing environment is the concept of proactively rebating, i.e., compensating, a customer when an SLA is breached. In a typical on-demand scenario, the various customers hosted by a single provider agree to different levels of service and compensation or “rebate” for an associated breach. For example, some of these customers may be “premium” customers, who pay more for higher service levels and are entitled to greater compensation when there is an SLA breach. These premium customers consequently represent a greater penalty to the provider in the event of an SLA breach. Other customers may subscribe as “standard” customers, who pay relatively less for the services, receive less compensation when there is a breach, and thus, represent a lesser degree of penalty in the event of an SLA breach. A sample scenario is provided in
FIG. 2 . - In addition to using profiling tools, there are several methods available to IT service providers in the utility computing environment to measure compliance with an SLA. Some of these methods also calculate appropriate rebates to customers in the event of an SLA breach, and proactively disburse a rebate to a customer. These processes are disclosed in U.S. Pat. No. 6,195,697 (issued Feb. 27, 2001), U.S. Pat. No. 6,556,659 (issued Apr. 29, 2003), and U.S. patent application Ser. No. ______ (Attorney Docket No. AUS920030302US). These processes do not address optimizing network resources and managing conflicting needs among the customers of the shared network collectively, nor do these processes address reallocating resources among the customers to minimize the total rebate awarded in the event of an SLA breach.
- Patent App. No. 0062205 (published Apr. 1, 2004) assigns a financial value to identified performance flows based on SLA requirements and penalties for breach of the requirements. This financial value alerts operators of the possible financial impacts of reconfiguring hardware or software associated with those identified flows. This process, however, merely calculates and displays the financial loss associated with a breach or potential breach of one individual customer's SLA. U.S. patent application Ser. No. ______ (Attorney Docket No. RSW920030148US) does provide a method for estimating an SLA breach value, based on data acquired from an individual customer and on data acquired from an aggregated group of customers. But again, this method does not disclose a means for minimizing the total rebate a service provider must offer when an SLA is breached.
- Thus, the tools used to track and measure the performance characteristics of transactions throughout a system to determine compliance to an SLA are common. Similarly, processes for calculating the rebate that a service provider must proactively award to a customer when the SLA is breached are not new. There is not, however, a tool or process available to service providers for minimizing the total rebate a service provider awards in the event of an SLA breach.
- Rebates in the form of monetary compensation, free software, or other forms, are costly to service providers. Rebates affect a provider's overall profitability as well impact the provider's goodwill. After all, those customers who have paid a premium price for service are not receiving the level of service agreed upon. These customers may suffer financial losses and losses of goodwill, as well, if they, in turn, cannot meet their business demands. Therefore, one skilled in the art should appreciate the advantages of an invention that precisely addresses the problem of minimizing rebates the service providers disburse to customers as a result of an SLA breach. This and other objects of the invention will be apparent to those skilled in the art from the following detailed description of a preferred embodiment of the invention.
- The invention described is a new and useful process for minimizing the overall rebate a provider disburses when an SLA breach occurs in a utility computing environment. The inventive process calculates the total minimum rebate value payable by a provider to a customer, or group of customers, in the event of an SLA breach. The process compares performance data and resource usage with the SLAs of the customers, and reallocates shared resources to those breached customers who represent a lesser penalty to the provider in the event of an SLA breach. Specifically, the process determines if there is a breach, and if so, identifies the breached customer and the breached customer's status based on the penalty provided in the SLA. The process also identifies the underlying resource causing the breach. The process then creates a list of customers with a lower customer status and determines if any of the customers with the lower status are under-utilizing the resource. If the resource is under-utilized, the process then reallocates these under-utilized resources to those breached customers requiring additional resources to meet SLA thresholds. If all resources are operating at peak capacity, the process reallocates the resources to those customers whose SLAs provide a greater penalty in the event of an SLA breach, as compared to those customers whose SLAs provide for a lesser penalty, thereby minimizing the total rebate due upon an SLA breach.
- The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will be understood best by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:
-
FIG. 1 illustrates an exemplary shared resource configuration; -
FIG. 2 depicts an exemplary customer scenario in a utility computing environment; -
FIG. 3 represents an exemplary prior art network of computers and other hardware devices, in which the Rebate Minimization Algorithm may be implemented; -
FIG. 4 is a schematic diagram of the host server memory used to implement the Rebate Minimization Algorithm; and -
FIG. 5 depicts the inventive process for minimizing rebates disbursed to customers sharing IT resources. - The present invention is a process for minimizing the total rebate value that an IT provider disburses to customers in the event of an SLA breach. The invention, although operable in a variety of hardware and software configurations, operates in a utility computing environment wherein an IT service provider allocates shared IT resources to customers according to the terms of previously established SLAs.
- The term “computer hardware” or “hardware,” as used herein, refers to any machine or apparatus that is capable of accepting, performing logic operations on, storing, or displaying data, and includes without limitation processors and memory; the term “computer software” or “software,” refers to any set of instructions operable to cause computer hardware to perform an operation. A “computer,” as that term is used herein, includes without limitation any useful combination of hardware and software. A “computer program” or “program” includes without limitation any software operable to cause computer hardware to accept, perform logic operations on, store, or display data. A computer program may, and often is, comprised of a plurality of smaller programming units, including without limitation subroutines, modules, functions, methods, and procedures. Thus, the functions of the present invention may be distributed among a plurality of computers and computer programs. The invention is described best, though, as a single computer program that configures and enables one or more general-purpose computers to implement the novel aspects of the invention. For illustrative purposes, the inventive computer program will be referred to as the “Rebate Minimization Algorithm” (RMA).
- The RMA calculates the total minimum rebate value payable by an IT service provider to a customer, or group of customers, in the event of an SLA breach. As used herein, the term “service provider” or “provider” refers to any entity that provides management services and computing resources to any individual or entity. A “customer” is any individual or entity acquiring the management services and shared computing resources from the service provider.
- Notably, the RMA determines if the provider has breached an SLA. If so, the RMA reallocates under-utilized resources to meet the demands of the breached customer if the breached customer represents a greater penalty to the provider than those customers under-utilizing the resources. A “penalty,” as that term is used here, refers to the amount of compensation or rebate a provider must pay a customer for breaching an SLA. The compensation the customer receives from the provider determines the customer's “status.” If all resources are operating at peak capacity, the RMA reallocates the resources used by customers with a lower customer status to the customers with a higher customer status, thereby minimizing the total rebate cost associated with an SLA breach.
- As noted above, in a utility computing environment, a service provider offers management services and computing resources to a customer at the system and subsystem level. Inasmuch as the customer acquires services and resources from the provider, the customer may, in turn, offer goods, services, or information, for purchase, lease, or use to other individuals or entities, usually via the Internet. Any such individual or entity purchasing, leasing, or otherwise obtaining or using goods, services, or information from the customer is referred to herein as a “consumer.” In other words, the consumer may purchase items on-line from the customer's website. The consumer communicates with the customer by means of a network, routed through a utility computing environment, which the provider maintains. The amount of IT resources available to the customers, in the utility computing environment, determines the number of consumers a customer may host on its website at any particular instance, and thus, further determines the amount of business that a customer may transact.
- The inventive RMA is described in detail below with reference to an exemplary prior art network of hardware devices, as depicted in
FIG. 3 . A “network” comprises any number of hardware devices coupled to and in communication with each other through a communications medium, such as the Internet. A “communications medium” includes without limitation any physical, optical, electromagnetic, or other medium through which hardware or software can transmit data. - For descriptive purposes, exemplary
prior art network 100 has a limited number of nodes, includingconsumer workstation computer 105,consumer workstation computer 110, consumer workstation computer 115 (collectively consumer workstation computers 105-115),host server computer 120,database server computer 125, anddatabase 130. The term “server” refers to a computer system that is shared by multiple clients. A server may refer to the entire computer system, i.e., hardware and software, or just the software that performs the service. For example, the term “database server”, as used herein, refers to the both the hardware and software necessary to store and retrieve data. In contrast, the term “web application server”, as used herein, refers to any software product designed to operate in a web-environment, such as an HTTP server that manages requests from a browser and delivers HTML documents and files in response. Web server software is frequently used in e-commerce and executes server-side scripts, such as Java Script and Java server pages (JSPs), to retrieve data from a database and display the data in the form of a web page via browsers or client applications. The term “host server computer” refers to the hardware on which the RMA and customers' resources reside. A person of skill in the art also should appreciate that a database may exist in many forms. As used herein, the term “database” generally refers to any collection of data stored together and organized for rapid search and retrieval, including without limitation flat file databases, fielded databases, full-text databases, object-oriented databases, and relational databases. Whilehost server computer 120,database server computer 125, anddatabase 130 are further located withinutility computing environment 135, consumer workstation computers 105-115 are outside of theutility computing environment 135. -
Host server computer 120 hosts programs, applications, and tools that control consumption of computing resources inutility computing environment 135. Therefore, in this embodiment, the consumer accesses theutility computing environment 135 via consumer computer workstations 105-115 networked to hostserver computer 120 bynetwork connection 140. The amount of IT resources available to the customer, as allocated by applications installed onhost server computer 120, determine the actual number of consumers that may access the customer's website, and thus determine the number of consumers that a customer may service.Network connection 140 comprises all hardware, software, and communications media necessary to enable communication between network nodes 100-130. Consumer workstation computers 105-115 use publicly available protocols or messaging services to communicate with thehost server computer 120 throughnetwork connection 140.Host server computer 120 interacts withdatabase server 125 to store and retrieveSLA information 145,system performance data 150, andcustomer information 155 to and fromdatabase 130. SLA information includes the level of service on which the customers and providers have agreed, and the penalty the provider pays when the provider breaches the SLA. Performance data, obtained in a web application environment, may include the retrieval rate from the web application server to the database, the time to request and return a displayed web-page, and the number of pooling requests, i.e., the number of users, an application can manage. Customer data may include information regarding inventory, shipping, prices, and consumer records. The nodes in theutility computing environment 135 also use publicly available network protocols; however, a firewall may control access to theutility computing environment 135. -
Memory 200 ofhost server computer 120 typically contains various applications such as web application server 205,profiling tool 210, andRMA 215, as depicted inFIG. 4 . The term “memory,” as used herein, includes without limitation any volatile or persistent medium, such as an electrical circuit, magnetic disk, or optical disk, in which a computer can store data or software for any duration. A single memory may encompass and be distributed across a plurality of media.Memory 200 may include additional data and applications.Memory 200 also containscustomer 1memory resource 220,customer 2memory resource 225, andcustomer 3 memory resource 230 (collectively customer memory resources 220-230), as represented schematically inFIG. 4 . Web application server 205 executes server-side scripts, such as Java Script and JSPs, to retrieve data from a database and transmit data in the form of a web page to the consumer workstation computers 105-115. -
Profiling tool 210 collectsperformance data 150 by tracking and timing individual transactions withinutility computing environment 135. Web application server 205 actively allocates customer memory resources 220-230 as part of its normal operation.FIG. 4 is included as a descriptive expedient and does not necessarily reflect any physical embodiment ofmemory 200. Notably, customer memory resources 220-230 represent any number of shared resources. The term “shared resource” includes any computing resource that the service provider allocates among various customers according to the terms of the customer's SLAS. Although volatile memory is depicted inFIG. 4 as the allocated resource, other resources, such as persistent memory, CPU utilization, and network bandwidth may be provisioned according to the SLA. For descriptive purposes, the applications are stored onhost server computer 120, but these applications may be located on any server which the host server computer is capable of accessing. - As
FIG. 5 depicts,RMA 215 determines if there is an SLA breach or a potential SLA breach, by comparing the resource usage of the customers, as indicated byperformance data 150, with the corresponding customer SLA information 145 (410). If there is an actual or potential breach,RMA 215 identifies the breached customer, the breached customer's status, and the underlying resource causing the breach (420, 430, and 440). Customer status is determined by the severity of the penalty, i.e., the amount the provider rebates the customer, for services not rendered, when the provider breaches the SLA.RMA 215 then determines if there are any customers, sharing the underlying resource causing the breach, with a lower customer status than the breached customer (450). If there are no customers with a lower customer status than the breached customer, the current breach scenario is the optimal scenario, no resources are allocated, and the process ends (510). If there are customers sharing the underlying resource causing the breach, thenRMA 215 next creates a target customer list, which includes all customers whose status is lower than the breached customer's status (460).RMA 215 determines if the resource usage of customers included in the target customer list is less than specified in the corresponding SLAs, i.e., the resources are not operating at peak capacity and therefore are under-utilized (470). If the resources are under-utilized,RMA 215 reallocates the under-utilized resources to the breached customer to minimize the rebate value disbursed for the SLA breach, and the process ends (480 and 510). In contrast, ifRMA 215 determines that all customers are operating at peak capacity by using the resources to the maximum extent specified in the SLA so that the resource is not under-utilized,RMA 215 releases the resource allocated to customers having a lower customer status, as indicated in the target customer list.RMA 215 then reallocates the resources to the breached customer who represents a greater penalty to the provider (470, 490, and 500).RMA 215 thus determines the minimum total rebate payable by the provider for an SLA breach and the process ends (510). - A preferred form of the invention has been shown in the drawings and described above, but variations in the preferred form will be apparent to those skilled in the art. The preceding description is for illustration purposes only, and the invention should not be construed as limited to the specific form shown and described. The scope of the invention should be limited only by the language of the following claims.
Claims (3)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/711,981 US7269652B2 (en) | 2004-10-18 | 2004-10-18 | Algorithm for minimizing rebate value due to SLA breach in a utility computing environment |
CNA2005101135492A CN1764127A (en) | 2004-10-18 | 2005-10-17 | Method for distributing resource for high-grade user and data processor |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/711,981 US7269652B2 (en) | 2004-10-18 | 2004-10-18 | Algorithm for minimizing rebate value due to SLA breach in a utility computing environment |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060085544A1 true US20060085544A1 (en) | 2006-04-20 |
US7269652B2 US7269652B2 (en) | 2007-09-11 |
Family
ID=36182113
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/711,981 Expired - Fee Related US7269652B2 (en) | 2004-10-18 | 2004-10-18 | Algorithm for minimizing rebate value due to SLA breach in a utility computing environment |
Country Status (2)
Country | Link |
---|---|
US (1) | US7269652B2 (en) |
CN (1) | CN1764127A (en) |
Cited By (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060143024A1 (en) * | 2004-12-17 | 2006-06-29 | Salle Mathias J R | Methods and systems that calculate a projected utility of information technology recovery plans based on contractual agreements |
US20070130325A1 (en) * | 2005-12-06 | 2007-06-07 | Amichai Lesser | System and method for comparing service levels to a service level objective |
US20070130306A1 (en) * | 2005-12-06 | 2007-06-07 | Gal Ofel | System and method for comparing a service level at a remote network location to a service level objective |
US20090049487A1 (en) * | 2005-12-08 | 2009-02-19 | Matsushita Electric Industrial Co., Ltd. | Router apparatus and network trouble determining method |
US20090119673A1 (en) * | 2007-11-06 | 2009-05-07 | Credit Suisse Securities (Usa) Llc | Predicting and managing resource allocation according to service level agreements |
US20090125619A1 (en) * | 2007-11-14 | 2009-05-14 | International Business Machines Corporation | Autonomic definition and management of distributed appication information |
US7711657B1 (en) * | 2006-06-26 | 2010-05-04 | Hewlett-Packard Development Company, L.P. | Resource-reservation pricing structures based on expected ability to deliver |
US20100223166A1 (en) * | 2009-01-15 | 2010-09-02 | Bmc Software, Inc. | Unified Service Model for Business Service Management |
US20110276490A1 (en) * | 2010-05-07 | 2011-11-10 | Microsoft Corporation | Security service level agreements with publicly verifiable proofs of compliance |
US20130006680A1 (en) * | 2011-06-29 | 2013-01-03 | International Business Machines Corporation | Evaluating Computing Resources Utilization in Accordance with Computing Environment Entitlement Contracts |
CN102932940A (en) * | 2012-10-17 | 2013-02-13 | 大唐移动通信设备有限公司 | Communication resource adjustment method and device |
US20130246118A1 (en) * | 2012-03-15 | 2013-09-19 | Aptitude, Llc | Method, apparatus, and computer program product for a market platform |
CN103562940A (en) * | 2011-06-29 | 2014-02-05 | 国际商业机器公司 | Managing organizational computing resources in accordance with computing environment entitlement contracts |
US8812679B2 (en) | 2011-06-29 | 2014-08-19 | International Business Machines Corporation | Managing computing environment entitlement contracts and associated resources using cohorting |
US9495651B2 (en) | 2011-06-29 | 2016-11-15 | International Business Machines Corporation | Cohort manipulation and optimization |
US9760917B2 (en) | 2011-06-29 | 2017-09-12 | International Business Machines Corporation | Migrating computing environment entitlement contracts between a seller and a buyer |
US10313887B2 (en) | 2015-06-01 | 2019-06-04 | Huawei Technologies Co., Ltd. | System and method for provision and distribution of spectrum resources |
US10366358B1 (en) * | 2014-12-19 | 2019-07-30 | Amazon Technologies, Inc. | Backlogged computing work exchange |
US10374917B2 (en) * | 2013-08-15 | 2019-08-06 | International Business Machines Corporation | Computer system productivity monitoring |
US10448320B2 (en) | 2015-06-01 | 2019-10-15 | Huawei Technologies Co., Ltd. | System and method for virtualized functions in control and data planes |
US10579422B2 (en) | 2014-06-25 | 2020-03-03 | Amazon Technologies, Inc. | Latency-managed task processing |
US10700936B2 (en) | 2015-06-02 | 2020-06-30 | Huawei Technologies Co., Ltd. | System and methods for virtual infrastructure management between operator networks |
US10726456B2 (en) | 2013-07-15 | 2020-07-28 | Aptitude, Llc | Method, apparatus, and computer program product for providing a virtual aggregation group |
US10862818B2 (en) * | 2015-09-23 | 2020-12-08 | Huawei Technologies Co., Ltd. | Systems and methods for distributing network resources to network service providers |
US10887118B2 (en) | 2014-10-10 | 2021-01-05 | Huawei Technologies Co., Ltd. | Methods and systems for provisioning a virtual network in software defined networks |
US10892949B2 (en) | 2015-06-02 | 2021-01-12 | Huawei Technologies Co., Ltd. | Method and apparatus to use infra-structure or network connectivity services provided by 3RD parties |
Families Citing this family (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8775585B2 (en) * | 2003-09-30 | 2014-07-08 | International Business Machines Corporation | Autonomic SLA breach value estimation |
US8954584B1 (en) * | 2004-08-18 | 2015-02-10 | Oracle America, Inc. | Policy engine for automating management of scalable distributed persistent applications in a grid |
US20070028300A1 (en) * | 2005-07-28 | 2007-02-01 | Bishop Ellis E | System and method for controlling on-demand security |
US8136114B1 (en) * | 2006-04-21 | 2012-03-13 | Sprint Communications Company L.P. | Business process management system having dynamic task assignment |
US9112808B2 (en) * | 2007-02-06 | 2015-08-18 | At&T Intellectual Property Ii, L.P. | Devices, systems, and methods for providing data |
JP4523965B2 (en) * | 2007-11-30 | 2010-08-11 | 株式会社日立製作所 | Resource allocation method, resource allocation program, and operation management apparatus |
US8862738B2 (en) * | 2010-10-18 | 2014-10-14 | International Business Machines Corporation | Reallocating resource capacity among resource pools in a cloud computing environment |
US9047111B2 (en) * | 2012-09-06 | 2015-06-02 | International Business Machines Corporation | Resource allocation in a virtualized computing environment |
CN105302630B (en) * | 2015-10-26 | 2018-07-13 | 深圳大学 | A kind of dynamic adjusting method and its system of virtual machine |
Citations (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6195697B1 (en) * | 1999-06-02 | 2001-02-27 | Ac Properties B.V. | System, method and article of manufacture for providing a customer interface in a hybrid network |
US20010047299A1 (en) * | 2000-04-11 | 2001-11-29 | Brewer Sherran Irene | Rebate calculator |
US20020059427A1 (en) * | 2000-07-07 | 2002-05-16 | Hitachi, Ltd. | Apparatus and method for dynamically allocating computer resources based on service contract with user |
US6470386B1 (en) * | 1997-09-26 | 2002-10-22 | Worldcom, Inc. | Integrated proxy interface for web based telecommunications management tools |
US20020156914A1 (en) * | 2000-05-31 | 2002-10-24 | Lo Waichi C. | Controller for managing bandwidth in a communications network |
US20020174227A1 (en) * | 2000-03-03 | 2002-11-21 | Hartsell Neal D. | Systems and methods for prioritization in information management environments |
US20030069972A1 (en) * | 2001-10-10 | 2003-04-10 | Yutaka Yoshimura | Computer resource allocating method |
US20030074245A1 (en) * | 2001-09-21 | 2003-04-17 | Salle Mathias Jean Rene | Method of resource allocation using electronic contracts |
US6556659B1 (en) * | 1999-06-02 | 2003-04-29 | Accenture Llp | Service level management in a hybrid network architecture |
US6594698B1 (en) * | 1998-09-25 | 2003-07-15 | Ncr Corporation | Protocol for dynamic binding of shared resources |
US20040010592A1 (en) * | 2000-01-14 | 2004-01-15 | Carver Andrew Richard | Resource allocation |
US20040062205A1 (en) * | 2002-09-30 | 2004-04-01 | Robert Friskney | Determining and using value of traffic relying on a given component of a communications network |
US6728748B1 (en) * | 1998-12-01 | 2004-04-27 | Network Appliance, Inc. | Method and apparatus for policy based class of service and adaptive service level management within the context of an internet and intranet |
US6799208B1 (en) * | 2000-05-02 | 2004-09-28 | Microsoft Corporation | Resource manager architecture |
US6842783B1 (en) * | 2000-02-18 | 2005-01-11 | International Business Machines Corporation | System and method for enforcing communications bandwidth based service level agreements to plurality of customers hosted on a clustered web server |
US20050015504A1 (en) * | 2001-09-13 | 2005-01-20 | Dorne Raphael Jh | Resource management method and apparatus |
US6857020B1 (en) * | 2000-11-20 | 2005-02-15 | International Business Machines Corporation | Apparatus, system, and method for managing quality-of-service-assured e-business service systems |
US20050120102A1 (en) * | 2003-06-27 | 2005-06-02 | Cisco Technology, Inc. | Methods and devices for flexible bandwidth allocation |
US20050149940A1 (en) * | 2003-12-31 | 2005-07-07 | Sychron Inc. | System Providing Methodology for Policy-Based Resource Allocation |
US6917979B1 (en) * | 2000-10-03 | 2005-07-12 | Net2Phone, Inc. | System and method for managing compliance with service level agreements |
US20050172291A1 (en) * | 2004-01-30 | 2005-08-04 | Rajarshi Das | Method and apparatus for utility-based dynamic resource allocation in a distributed computing system |
US20050188089A1 (en) * | 2004-02-24 | 2005-08-25 | Lichtenstein Walter D. | Managing reservations for resources |
US20050198266A1 (en) * | 2004-02-05 | 2005-09-08 | Cole Robert G. | Method for determining VoIP gateway performance and slas based upon path measurements |
US6950874B2 (en) * | 2000-12-15 | 2005-09-27 | International Business Machines Corporation | Method and system for management of resource leases in an application framework system |
US6954739B1 (en) * | 1999-11-16 | 2005-10-11 | Lucent Technologies Inc. | Measurement-based management method for packet communication networks |
US20050228878A1 (en) * | 2004-03-31 | 2005-10-13 | Kathy Anstey | Method and system to aggregate evaluation of at least one metric across a plurality of resources |
US20050235288A1 (en) * | 2004-04-20 | 2005-10-20 | Takashi Yamakabe | Method and system for controlling computer resources |
US6959335B1 (en) * | 1999-12-22 | 2005-10-25 | Nortel Networks Limited | Method of provisioning a route in a connectionless communications network such that a guaranteed quality of service is provided |
US20050240668A1 (en) * | 2004-04-27 | 2005-10-27 | Jerry Rolia | Trending method and apparatus for resource demand in a computing utility |
US20050256946A1 (en) * | 2004-03-31 | 2005-11-17 | International Business Machines Corporation | Apparatus and method for allocating resources based on service level agreement predictions and associated costs |
US20060129687A1 (en) * | 2000-04-28 | 2006-06-15 | International Business Machines Corporation | Method and apparatus for dynamically adjusting resources assigned to plurality of customers, for meeting service level agreements (SLAs) with minimal resources, and allowing common pools of resources to be used across plural customers on a demand basis |
US20060140115A1 (en) * | 2003-01-14 | 2006-06-29 | Telefonaktiebolaget L M Ericsson | Resource allocation management |
US7146353B2 (en) * | 2003-07-22 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Resource allocation for multiple applications |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP1229685B1 (en) | 2001-02-06 | 2006-04-05 | Nortel Networks Limited | Service level agreement manager for a data network |
-
2004
- 2004-10-18 US US10/711,981 patent/US7269652B2/en not_active Expired - Fee Related
-
2005
- 2005-10-17 CN CNA2005101135492A patent/CN1764127A/en active Pending
Patent Citations (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6470386B1 (en) * | 1997-09-26 | 2002-10-22 | Worldcom, Inc. | Integrated proxy interface for web based telecommunications management tools |
US6594698B1 (en) * | 1998-09-25 | 2003-07-15 | Ncr Corporation | Protocol for dynamic binding of shared resources |
US6728748B1 (en) * | 1998-12-01 | 2004-04-27 | Network Appliance, Inc. | Method and apparatus for policy based class of service and adaptive service level management within the context of an internet and intranet |
US6556659B1 (en) * | 1999-06-02 | 2003-04-29 | Accenture Llp | Service level management in a hybrid network architecture |
US6195697B1 (en) * | 1999-06-02 | 2001-02-27 | Ac Properties B.V. | System, method and article of manufacture for providing a customer interface in a hybrid network |
US6954739B1 (en) * | 1999-11-16 | 2005-10-11 | Lucent Technologies Inc. | Measurement-based management method for packet communication networks |
US6959335B1 (en) * | 1999-12-22 | 2005-10-25 | Nortel Networks Limited | Method of provisioning a route in a connectionless communications network such that a guaranteed quality of service is provided |
US20040010592A1 (en) * | 2000-01-14 | 2004-01-15 | Carver Andrew Richard | Resource allocation |
US6842783B1 (en) * | 2000-02-18 | 2005-01-11 | International Business Machines Corporation | System and method for enforcing communications bandwidth based service level agreements to plurality of customers hosted on a clustered web server |
US20020174227A1 (en) * | 2000-03-03 | 2002-11-21 | Hartsell Neal D. | Systems and methods for prioritization in information management environments |
US20010047299A1 (en) * | 2000-04-11 | 2001-11-29 | Brewer Sherran Irene | Rebate calculator |
US20060129687A1 (en) * | 2000-04-28 | 2006-06-15 | International Business Machines Corporation | Method and apparatus for dynamically adjusting resources assigned to plurality of customers, for meeting service level agreements (SLAs) with minimal resources, and allowing common pools of resources to be used across plural customers on a demand basis |
US6799208B1 (en) * | 2000-05-02 | 2004-09-28 | Microsoft Corporation | Resource manager architecture |
US20020156914A1 (en) * | 2000-05-31 | 2002-10-24 | Lo Waichi C. | Controller for managing bandwidth in a communications network |
US20020059427A1 (en) * | 2000-07-07 | 2002-05-16 | Hitachi, Ltd. | Apparatus and method for dynamically allocating computer resources based on service contract with user |
US6917979B1 (en) * | 2000-10-03 | 2005-07-12 | Net2Phone, Inc. | System and method for managing compliance with service level agreements |
US6857020B1 (en) * | 2000-11-20 | 2005-02-15 | International Business Machines Corporation | Apparatus, system, and method for managing quality-of-service-assured e-business service systems |
US6950874B2 (en) * | 2000-12-15 | 2005-09-27 | International Business Machines Corporation | Method and system for management of resource leases in an application framework system |
US20050015504A1 (en) * | 2001-09-13 | 2005-01-20 | Dorne Raphael Jh | Resource management method and apparatus |
US20030074245A1 (en) * | 2001-09-21 | 2003-04-17 | Salle Mathias Jean Rene | Method of resource allocation using electronic contracts |
US20030069972A1 (en) * | 2001-10-10 | 2003-04-10 | Yutaka Yoshimura | Computer resource allocating method |
US20040062205A1 (en) * | 2002-09-30 | 2004-04-01 | Robert Friskney | Determining and using value of traffic relying on a given component of a communications network |
US20060140115A1 (en) * | 2003-01-14 | 2006-06-29 | Telefonaktiebolaget L M Ericsson | Resource allocation management |
US20050120102A1 (en) * | 2003-06-27 | 2005-06-02 | Cisco Technology, Inc. | Methods and devices for flexible bandwidth allocation |
US7146353B2 (en) * | 2003-07-22 | 2006-12-05 | Hewlett-Packard Development Company, L.P. | Resource allocation for multiple applications |
US20050149940A1 (en) * | 2003-12-31 | 2005-07-07 | Sychron Inc. | System Providing Methodology for Policy-Based Resource Allocation |
US20050172291A1 (en) * | 2004-01-30 | 2005-08-04 | Rajarshi Das | Method and apparatus for utility-based dynamic resource allocation in a distributed computing system |
US20050198266A1 (en) * | 2004-02-05 | 2005-09-08 | Cole Robert G. | Method for determining VoIP gateway performance and slas based upon path measurements |
US20050188089A1 (en) * | 2004-02-24 | 2005-08-25 | Lichtenstein Walter D. | Managing reservations for resources |
US20050228878A1 (en) * | 2004-03-31 | 2005-10-13 | Kathy Anstey | Method and system to aggregate evaluation of at least one metric across a plurality of resources |
US20050256946A1 (en) * | 2004-03-31 | 2005-11-17 | International Business Machines Corporation | Apparatus and method for allocating resources based on service level agreement predictions and associated costs |
US20050235288A1 (en) * | 2004-04-20 | 2005-10-20 | Takashi Yamakabe | Method and system for controlling computer resources |
US20050240668A1 (en) * | 2004-04-27 | 2005-10-27 | Jerry Rolia | Trending method and apparatus for resource demand in a computing utility |
Cited By (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060143024A1 (en) * | 2004-12-17 | 2006-06-29 | Salle Mathias J R | Methods and systems that calculate a projected utility of information technology recovery plans based on contractual agreements |
US7647399B2 (en) * | 2005-12-06 | 2010-01-12 | Shunra Software Ltd. | System and method for comparing a service level at a remote network location to a service level objective |
US20070130325A1 (en) * | 2005-12-06 | 2007-06-07 | Amichai Lesser | System and method for comparing service levels to a service level objective |
US20070130306A1 (en) * | 2005-12-06 | 2007-06-07 | Gal Ofel | System and method for comparing a service level at a remote network location to a service level objective |
US7673042B2 (en) * | 2005-12-06 | 2010-03-02 | Shunra Software, Ltd. | System and method for comparing service levels to a service level objective |
US20090049487A1 (en) * | 2005-12-08 | 2009-02-19 | Matsushita Electric Industrial Co., Ltd. | Router apparatus and network trouble determining method |
US7711657B1 (en) * | 2006-06-26 | 2010-05-04 | Hewlett-Packard Development Company, L.P. | Resource-reservation pricing structures based on expected ability to deliver |
US20090119673A1 (en) * | 2007-11-06 | 2009-05-07 | Credit Suisse Securities (Usa) Llc | Predicting and managing resource allocation according to service level agreements |
EP2223235A1 (en) * | 2007-11-06 | 2010-09-01 | Credit Suisse Securities (USA) LLC | Predicting and managing resource allocation according to service level agreements |
EP2223235A4 (en) * | 2007-11-06 | 2011-12-21 | Credit Suisse Securities Usa Llc | Predicting and managing resource allocation according to service level agreements |
US20090125619A1 (en) * | 2007-11-14 | 2009-05-14 | International Business Machines Corporation | Autonomic definition and management of distributed appication information |
US8108522B2 (en) * | 2007-11-14 | 2012-01-31 | International Business Machines Corporation | Autonomic definition and management of distributed application information |
US20100223166A1 (en) * | 2009-01-15 | 2010-09-02 | Bmc Software, Inc. | Unified Service Model for Business Service Management |
US10867259B2 (en) * | 2009-01-15 | 2020-12-15 | Bmc Software, Inc. | Unified service model for business service management |
US20110276490A1 (en) * | 2010-05-07 | 2011-11-10 | Microsoft Corporation | Security service level agreements with publicly verifiable proofs of compliance |
EP2727056A1 (en) * | 2011-06-29 | 2014-05-07 | International Business Machines Corporation | Managing organizational computing resources in accordance with computing environment entitlement contracts |
CN103562940A (en) * | 2011-06-29 | 2014-02-05 | 国际商业机器公司 | Managing organizational computing resources in accordance with computing environment entitlement contracts |
US8812679B2 (en) | 2011-06-29 | 2014-08-19 | International Business Machines Corporation | Managing computing environment entitlement contracts and associated resources using cohorting |
US8819240B2 (en) | 2011-06-29 | 2014-08-26 | International Business Machines Corporation | Managing computing environment entitlement contracts and associated resources using cohorting |
EP2727056A4 (en) * | 2011-06-29 | 2014-11-05 | Ibm | Managing organizational computing resources in accordance with computing environment entitlement contracts |
US9495651B2 (en) | 2011-06-29 | 2016-11-15 | International Business Machines Corporation | Cohort manipulation and optimization |
US9659267B2 (en) | 2011-06-29 | 2017-05-23 | International Business Machines Corporation | Cohort cost analysis and workload migration |
US9760917B2 (en) | 2011-06-29 | 2017-09-12 | International Business Machines Corporation | Migrating computing environment entitlement contracts between a seller and a buyer |
US20130006680A1 (en) * | 2011-06-29 | 2013-01-03 | International Business Machines Corporation | Evaluating Computing Resources Utilization in Accordance with Computing Environment Entitlement Contracts |
US10769687B2 (en) | 2011-06-29 | 2020-09-08 | International Business Machines Corporation | Migrating computing environment entitlement contracts between a seller and a buyer |
US20130246118A1 (en) * | 2012-03-15 | 2013-09-19 | Aptitude, Llc | Method, apparatus, and computer program product for a market platform |
CN102932940A (en) * | 2012-10-17 | 2013-02-13 | 大唐移动通信设备有限公司 | Communication resource adjustment method and device |
US10726456B2 (en) | 2013-07-15 | 2020-07-28 | Aptitude, Llc | Method, apparatus, and computer program product for providing a virtual aggregation group |
US10374917B2 (en) * | 2013-08-15 | 2019-08-06 | International Business Machines Corporation | Computer system productivity monitoring |
US11171852B2 (en) | 2013-08-15 | 2021-11-09 | International Business Machines Corporation | Computer system productivity monitoring |
US10579422B2 (en) | 2014-06-25 | 2020-03-03 | Amazon Technologies, Inc. | Latency-managed task processing |
US10887118B2 (en) | 2014-10-10 | 2021-01-05 | Huawei Technologies Co., Ltd. | Methods and systems for provisioning a virtual network in software defined networks |
US10366358B1 (en) * | 2014-12-19 | 2019-07-30 | Amazon Technologies, Inc. | Backlogged computing work exchange |
US10448320B2 (en) | 2015-06-01 | 2019-10-15 | Huawei Technologies Co., Ltd. | System and method for virtualized functions in control and data planes |
US10313887B2 (en) | 2015-06-01 | 2019-06-04 | Huawei Technologies Co., Ltd. | System and method for provision and distribution of spectrum resources |
US10700936B2 (en) | 2015-06-02 | 2020-06-30 | Huawei Technologies Co., Ltd. | System and methods for virtual infrastructure management between operator networks |
US10892949B2 (en) | 2015-06-02 | 2021-01-12 | Huawei Technologies Co., Ltd. | Method and apparatus to use infra-structure or network connectivity services provided by 3RD parties |
US10862818B2 (en) * | 2015-09-23 | 2020-12-08 | Huawei Technologies Co., Ltd. | Systems and methods for distributing network resources to network service providers |
Also Published As
Publication number | Publication date |
---|---|
US7269652B2 (en) | 2007-09-11 |
CN1764127A (en) | 2006-04-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7269652B2 (en) | Algorithm for minimizing rebate value due to SLA breach in a utility computing environment | |
EP2756412B1 (en) | Coordination engine for cloud selection | |
US7848988B2 (en) | Automated service level management in financial terms | |
US7729270B2 (en) | Method for supporting on-demand performance | |
US9009289B1 (en) | Systems and methods for assessing application usage | |
US9251483B2 (en) | Performance optimization of business processes by stochastic environmental changes | |
US7904759B2 (en) | System and method for service availability management | |
CN100422939C (en) | Method and system of configuring elements of a distributed computing system for optimized value | |
US9495220B2 (en) | Self-management of request-centric systems | |
US7996820B2 (en) | Determining proportionate use of system resources by applications executing in a shared hosting environment | |
US9176789B2 (en) | Capacity control | |
US10217067B2 (en) | System, method and program product for scheduling interventions on allocated resources with minimized client impacts | |
US8725741B2 (en) | Assessing application performance with an operational index | |
US6978257B1 (en) | System and method for measuring and pricing midrange computer server outsourcing services | |
EP3480753A1 (en) | A computer implemented method, a system and a computer program for optimizing the operation of a cloud hosted software as a service (saas) system | |
US7925755B2 (en) | Peer to peer resource negotiation and coordination to satisfy a service level objective | |
US7941466B2 (en) | On-demand service reconciliation, audit, and alert | |
US10896440B2 (en) | Offsite data analysis for appliances | |
US20070027822A1 (en) | System and method for estimating transition costs | |
Liu et al. | Sora: A latency sensitive approach for microservice soft resource adaptation | |
US10067778B2 (en) | Management system, recording medium and method for managing virtual machines | |
JP2007265244A (en) | Performance monitoring device for web system | |
JP4169157B2 (en) | Management server, system and program using the same | |
JP5758783B2 (en) | Analysis device, analysis method, and computer program | |
Gillam et al. | Adding Cloud Performance to Service Level Agreements. |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHEN, YEN-FU;DAUGHTREY, ERIK ALAN;SHANKAR, HARI;AND OTHERS;REEL/FRAME:015267/0311;SIGNING DATES FROM 20041007 TO 20041008 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
SULP | Surcharge for late payment | ||
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026894/0001Effective date: 20110817 |
|
REMI | Maintenance fee reminder mailed | ||
LAPS | Lapse for failure to pay maintenance fees | ||
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20150911 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
JP2023089216A - Secured management of data distribution restriction - Google Patents
Secured management of data distribution restriction Download PDFInfo
- Publication number
- JP2023089216A JP2023089216A JP2023067940A JP2023067940A JP2023089216A JP 2023089216 A JP2023089216 A JP 2023089216A JP 2023067940 A JP2023067940 A JP 2023067940A JP 2023067940 A JP2023067940 A JP 2023067940A JP 2023089216 A JP2023089216 A JP 2023089216A
- Authority
- JP
- Japan
- Prior art keywords
- application
- digital component
- universal
- blocked
- digital
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 76
- 230000004044 response Effects 0.000 claims abstract description 35
- 241000544061 Cuculus canorus Species 0.000 claims description 30
- 230000003993 interaction Effects 0.000 claims description 25
- 238000012545 processing Methods 0.000 claims description 22
- 101710165590 Mitochondrial pyruvate carrier 1 Proteins 0.000 abstract description 60
- 102100024828 Mitochondrial pyruvate carrier 1 Human genes 0.000 abstract description 60
- 101710101695 Probable mitochondrial pyruvate carrier 1 Proteins 0.000 abstract description 60
- 101710165595 Mitochondrial pyruvate carrier 2 Proteins 0.000 abstract description 54
- 102100025031 Mitochondrial pyruvate carrier 2 Human genes 0.000 abstract description 54
- 101710101698 Probable mitochondrial pyruvate carrier 2 Proteins 0.000 abstract description 54
- 238000004590 computer program Methods 0.000 abstract description 14
- 230000006870 function Effects 0.000 description 42
- 230000001186 cumulative effect Effects 0.000 description 16
- 238000004364 calculation method Methods 0.000 description 13
- 239000013598 vector Substances 0.000 description 13
- 238000013515 script Methods 0.000 description 12
- 235000014510 cooky Nutrition 0.000 description 9
- 238000010586 diagram Methods 0.000 description 8
- 238000004891 communication Methods 0.000 description 6
- 238000010187 selection method Methods 0.000 description 6
- CDBYLPFSWZWCQE-UHFFFAOYSA-L Sodium Carbonate Chemical compound [Na+].[Na+].[O-]C([O-])=O CDBYLPFSWZWCQE-UHFFFAOYSA-L 0.000 description 5
- 230000009471 action Effects 0.000 description 4
- 238000004422 calculation algorithm Methods 0.000 description 4
- 101150039239 LOC1 gene Proteins 0.000 description 3
- 238000004458 analytical method Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 3
- 235000013361 beverage Nutrition 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 3
- 230000008859 change Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000008569 process Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000001960 triggered effect Effects 0.000 description 3
- 101100346189 Caenorhabditis elegans mpc-1 gene Proteins 0.000 description 2
- 238000013459 approach Methods 0.000 description 2
- 238000003491 array Methods 0.000 description 2
- 239000002131 composite material Substances 0.000 description 2
- 230000001934 delay Effects 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 238000003780 insertion Methods 0.000 description 2
- 230000037431 insertion Effects 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 238000010295 mobile communication Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000012795 verification Methods 0.000 description 2
- 101100346198 Caenorhabditis elegans mpc-2 gene Proteins 0.000 description 1
- 241000295146 Gallionellaceae Species 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 238000013528 artificial neural network Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 238000001816 cooling Methods 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000003066 decision tree Methods 0.000 description 1
- 238000012217 deletion Methods 0.000 description 1
- 230000037430 deletion Effects 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 238000005265 energy consumption Methods 0.000 description 1
- 230000007717 exclusion Effects 0.000 description 1
- 238000010413 gardening Methods 0.000 description 1
- 230000002068 genetic effect Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 230000002787 reinforcement Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012706 support-vector machine Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
- G06F21/6254—Protecting personal data, e.g. for financial or medical purposes by anonymising data, e.g. decorrelating personal data from the owner's identification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/085—Secret sharing or secret splitting, e.g. threshold schemes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
- G06F21/6263—Protecting personal data, e.g. for financial or medical purposes during internet communication, e.g. revealing personal data from cookies
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0407—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the identity of one or more communicating identities is hidden
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/14—Session management
- H04L67/146—Markers for unambiguous identification of a particular session, e.g. session cookie or URL-encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/06—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols the encryption apparatus using shift registers or memories for block-wise or stream coding, e.g. DES systems or RC4; Hash functions; Pseudorandom sequence generators
- H04L9/0643—Hash functions, e.g. MD5, SHA, HMAC or f9 MAC
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/0819—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s)
- H04L9/083—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s) involving central third party, e.g. key distribution center [KDC] or trusted third party [TTP]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q2220/00—Business processing using cryptography
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/46—Secure multiparty computation, e.g. millionaire problem
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/60—Digital content management, e.g. content distribution
Abstract
Description
本明細書は、データ処理およびデータセキュリティに関する。 This specification relates to data processing and data security.
クライアントデバイスは、アプリケーション(たとえば、ウェブブラウザ、ネイティブアプリケーション)を使用して、コンテンツプラットフォーム(たとえば、検索プラットフォーム、ソーシャルメディアプラットフォーム、またはコンテンツをホストする別のプラットフォーム)にアクセスすることができる。コンテンツプラットフォームは、1つまたは複数のコンテンツソース/プラットフォームによって提供され得るデジタルコンポーネント(たとえば、ビデオクリップ、オーディオクリップ、マルチメディアクリップ、画像、テキストなどのデジタルコンテンツもしくはデジタル情報の個別単位、またはコンテンツの別の単位)をクライアントデバイス上に起動したアプリケーション内に表示することができる。いくつかのシステムは、処理リソースの節約など、様々な理由で、デジタルコンポーネントなどのデータの配布を制限している。しかしながら、それらの制限を実装するための技法は、データセキュリティ問題につながることもある。 A client device can use an application (eg, web browser, native application) to access a content platform (eg, a search platform, social media platform, or another platform that hosts content). A content platform is a digital component that may be provided by one or more content sources/platforms (e.g., discrete units of digital content or digital information such as video clips, audio clips, multimedia clips, images, text, or separate pieces of content). units) can be displayed within the application launched on the client device. Some systems limit the distribution of data such as digital components for various reasons, such as conserving processing resources. However, techniques for implementing those restrictions can lead to data security issues.
概して、本明細書に記載の主題の1つの発明的態様は、アプリケーションによって、アプリケーションに提示されるデジタルコンポーネントについて、(i) デジタルコンポーネントを提供するコンテンツソースについてのキャンペーン識別子と(ii)コンテンツソースのドメインとの組合せの暗号化バージョンであるユニバーサル識別子を生成する動作と、アプリケーションによって、生成されたユニバーサル識別子に基づいて、指定された時間期間にわたってアプリケーションによって提示されるデジタルコンポーネントについて作成されたことがあるユニバーサル識別子の組を更新する動作と、アプリケーションによって、(i)アプリケーションによって生成されたことがあり、(ii)アプリケーションに今後のデジタルコンポーネントを提示するための使用をブロッキングされたことがあるユニバーサル識別子に対応するブロッキングされたユニバーサル識別子の組を特定する動作と、アプリケーションによって、ブロッキングされたユニバーサル識別子の組を表す確率的データ構造を生成する動作と、アプリケーションによって、確率的データ構造の複数のシェアを作成する動作と、アプリケーションによって、複数のシェアのうちの異なるシェアを異なるサーバに送信する動作と、アプリケーションによって、異なるサーバに送信された複数のシェアのうちの異なるシェアに基づいて、異なるサーバのそれぞれによって生成される別個の応答を受信する動作と、アプリケーションによって、別個の応答の組合せに基づいて、アプリケーションに提示するためのデジタルコンポーネントを特定する動作とを含む方法において具現化され得る。 In general, one inventive aspect of the subject matter described herein is that for a digital component presented to the application by an application, (i) a campaign identifier for the content source providing the digital component and (ii) a content source The act of generating a universal identifier that is an encrypted version of the combination with the domain and the digital component presented by the application over a specified period of time based on the universal identifier generated by the application. The act of updating the set of universal identifiers and universal identifiers that (i) have been generated by the application and (ii) have been blocked from use to present future digital components to the application. An act of identifying a corresponding set of blocked universal identifiers; an act of generating, by an application, a probabilistic data structure representing the set of blocked universal identifiers; and creating, by an application, multiple shares of the probabilistic data structure. by each of the different servers based on the different shares of the plurality of shares sent by the application to the different servers; It can be embodied in a method that includes the acts of receiving generated distinct responses and identifying digital components for presentation to an application by an application based on a combination of the distinct responses.
本態様の他の実装形態は、対応する装置、システム、およびコンピュータプログラムを含み、コンピュータプログラムは、方法の態様を行うように構成され、コンピュータストレージデバイスにおいて符号化される。これらおよび他の実装形態はそれぞれ、次の特徴のうちの1つまたは複数をオプションで含むことができる。 Other implementations of the present aspects include corresponding apparatus, systems, and computer programs, the computer programs configured and encoded in computer storage devices to perform aspects of the methods. Each of these and other implementations can optionally include one or more of the following features.
いくつかの態様においては、アプリケーションに提示される所与のデジタルコンポーネントに対応するミュート要素との対話が検出され、ブロッキングされたユニバーサル識別子の組は、直近のタイムフレームでのミュート要素との対話の検出に応答して、所与のデジタルコンポーネントのユニバーサル識別子を含むように更新される。 In some aspects, an interaction with a muted element corresponding to a given digital component presented to an application is detected, and the set of blocked universal identifiers is the interaction with the muted element in the most recent timeframe. In response to detection, it is updated to include the universal identifier for the given digital component.
いくつかの態様においては、ユニバーサル識別子の組を更新する動作は、特定のユニバーサル識別子を有するデジタルコンポーネントの提示の頻度を示す提示カウンタを、アプリケーションによって特定のユニバーサル識別子に関連付けられたデジタルコンポーネントの提示に応答して、増分する動作を含む。いくつかの態様においては、ユニバーサル識別子の組を更新する動作は、提示カウンタが指定値を上回ったとき、特定のユニバーサル識別子をブロッキングされたユニバーサル識別子の組に追加する動作を含む。 In some aspects, the act of updating the set of universal identifiers includes setting a presentation counter indicative of frequency of presentation of digital components having a particular universal identifier to presentation of digital components associated with a particular universal identifier by an application. In response, include an incrementing action. In some aspects, the act of updating the set of universal identifiers includes the act of adding the particular universal identifier to the set of blocked universal identifiers when the presentation counter exceeds a specified value.
いくつかの態様においては、確率的データ構造を生成する動作は、(i)ブロッキングされたユニバーサル識別子の組と、(ii)アプリケーションのユーザに割り当てられたユーザグループに対応するユーザグループ識別子の組とを表す確率的データ構造を生成する動作を含む。いくつかの態様においては、確率的データ構造を生成する動作は、2つ以上のランダム変数によってパラメータ化される擬似ランダム関数を使用する動作をさらに含み、確率的データ構造は、カッコウフィルタ(cuckoo filter)である。 In some aspects, the act of generating the probabilistic data structure includes (i) a set of blocked universal identifiers and (ii) a set of user group identifiers corresponding to user groups assigned to users of the application. includes the act of generating a probabilistic data structure representing In some aspects, the act of generating the stochastic data structure further comprises the act of using a pseudo-random function parameterized by two or more random variables, the stochastic data structure being filtered by a cuckoo filter. ).
いくつかの態様においては、デジタルコンポーネントを提供するエンティティは、デジタルコンポーネントについてのユニバーサル識別子を生成することができる。 In some aspects, an entity that provides a digital component may generate a universal identifier for the digital component.
本明細書に記載の主題の特定の実施形態は、次の利点のうちの1つまたは複数を実現するために実装され得る。特定のタイプのデータへのアクセスは、セキュアマルチパーティ計算(multi-party computation、「MPC」)方法を使用することによって、制限され、保護され、またはセキュリティ保護され得、MPC方法は、異なるパーティにより動作する2つ以上のMPCサーバによって行われて、デジタルコンポーネントをいつクライアントデバイスに配布すべきであるか、および/またはどのデジタルコンポーネントを配布すべきであるかを決定することができる。MPCサーバは、たとえば、データの異なる秘密シェア(たとえば、異種またはばらばらなデータセットサブセット)を別個に処理することによって決定を行うことができ、これらの秘密シェアは、MPCサーバのうちの異なるMPCサーバに提供されて、秘密シェアのうちの1つによって表されるデータにアクセスすることができるいずれかのMPCサーバまたは任意の他のパーティが、クリアテキストのフルデータセットに確実にアクセスできなくする。 Particular embodiments of the subject matter described herein may be implemented to achieve one or more of the following advantages. Access to certain types of data may be restricted, protected, or secured by using secure multi-party computation (“MPC”) methods, which are accessed by different parties. It can be done by two or more MPC servers running to determine when and/or which digital components should be distributed to client devices. MPC servers may make decisions by, for example, separately processing different secret shares of data (e.g., heterogeneous or disjoint dataset subsets), and these secret shares may be distributed to different ones of the MPC servers. to ensure that any MPC server or any other party that has access to the data represented by one of the secret shares cannot access the full data set in cleartext.
決定を行うのに必要なデータおよび処理リソースの量は、たとえば、確率的データ構造、たとえば、カッコウフィルタを使用することによって抑えることができ、それにより、提示をブロッキングされているデジタルコンポーネントと、デジタルコンポーネントなどのデータの提示を要求するクライアントデバイスのユーザが属するグループ(たとえば、興味グループ)とを、ユーザに関する極秘データを明らかにすることなく同時に提示することが可能になる。このようなやり方で確率的データ構造を使用すると、ユーザプライバシーが保護され、MPCクラスタに提供される情報のサイズが縮小される。データサイズのこの縮小により、情報を送信するのに消費される帯域幅の量が抑えられ、情報を送信する際のレイテンシが抑えられ、情報を送信するのに必要なバッテリで動作するデバイス(たとえば、モバイルデバイス)の処理電力および関連のバッテリ電力の量が抑えられる。 The amount of data and processing resources required to make a decision can be constrained, for example, by using probabilistic data structures, e.g. Groups (eg, interest groups) to which the user of the client device requesting presentation of data, such as components, belongs to can be simultaneously presented without revealing sensitive data about the user. Using probabilistic data structures in this manner preserves user privacy and reduces the size of the information provided to the MPC cluster. This reduction in data size reduces the amount of bandwidth consumed to transmit the information, reduces the latency in transmitting the information, and reduces the battery-operated devices required to transmit the information (e.g. , mobile devices) processing power and associated battery power is reduced.
また、上述した確率的データ構造を使用すると、クライアントデバイスのユーザが、5つ未満のルックアップ動作(たとえば、いくつかの例においては、2つ以下のルックアップ動作)により分析を行うことによって特定のタイプのデータを受信する資格があるかどうかを決定するのに必要な処理リソース(たとえば、メモリ、CPUサイクル、またはクラウドコンピューティングリソース)の量を低減させることもできるが、既存の技法では、同じ結果に到達するのに数百ものルックアップが必要な場合がある。より具体的には、確率的データ構造を使用すると、特定のクライアントデバイスに特定のデータセット(たとえば、デジタルコンポーネント)を提供するために特定する必要がある情報が、確率的データ構造の指定された数(たとえば、2つまたは3つ)の場所でしか確実に見つけられなくなり、それにより、その2つの場所しか、コンピューティングデバイスによる検証の必要がなくなる。これにより、コンピューティングシステム自体の効率性が明らかに改善され、バッテリ寿命、エネルギー消費、所要の機器冷却など、リソースの保存につながる可能性がある。また、その結果、5つ未満のルックアップ動作を行うことと比較して数百ものルックアップ動作を行うのに必要とされるシステムよりも速く結果を得ることができることにもつながる可能性がある。 Also, using the probabilistic data structures described above, a user of a client device can be identified by performing analysis with less than five lookup operations (e.g., two or fewer lookup operations in some examples). Although it can also reduce the amount of processing resources (e.g., memory, CPU cycles, or cloud computing resources) required to determine whether it is eligible to receive the type of data, existing techniques Hundreds of lookups may be required to reach the same result. More specifically, with a probabilistic data structure, the information that needs to be identified in order to provide a particular set of data (e.g., a digital component) to a particular client device is stored in the specified data structure of the probabilistic data structure. It can only be reliably found in a number (eg, two or three) of locations, so that only those two locations need verification by the computing device. This clearly improves the efficiency of the computing system itself and can lead to conservation of resources such as battery life, energy consumption and required equipment cooling. It can also result in faster results than systems that would be required to do hundreds of lookup operations compared to doing less than five lookup operations. .
MPCクラスタは、MPCクラスタがセキュアMPC方法を使用して選定した、選定されたデジタルコンポーネントを特定する結果の秘密シェアを送信することができる。同様に、デジタルコンポーネントのすべてまたは大きい組についての情報ではなく、選定されたデジタルコンポーネントのみについての結果の秘密シェアを送出することによって、結果を送受信する際の消費される帯域幅、レイテンシ、処理電力、およびバッテリ電力が抑えられる。また、これにより、クライアントデバイスに情報が提供されるデジタルコンポーネントの数を限定することによって、デジタルコンポーネントの選定値をMPCクラスタに提出するコンテンツプラットフォームについての機密情報の潜在的な漏出も抑えられる。したがって、本開示は、クライアントに関連付けられたブロッキングされたデジタルコンポーネントを考慮しながら、適切なデジタルコンポーネントを自動的に選定しクライアントデバイスに提供することを可能にする。このことは、ネットワークを介して送信されたユーザデータのセキュリティを高め、プロセッサおよび帯域幅リソースを効率的に使用するやり方で達成される。 The MPC cluster can transmit a resulting secret share that identifies the selected digital components that the MPC cluster has selected using secure MPC methods. Similarly, bandwidth, latency, and processing power consumed in sending and receiving results by sending secret shares of results for only selected digital components, rather than information about all or a large set of digital components. , and battery power is conserved. This also reduces the potential exposure of sensitive information about content platforms that submit digital component selections to the MPC cluster by limiting the number of digital components for which information is provided to the client device. Accordingly, the present disclosure enables automatic selection and provision of appropriate digital components to a client device while taking into account blocked digital components associated with the client. This is accomplished in a manner that increases the security of user data transmitted over the network and makes efficient use of processor and bandwidth resources.
本明細書に記載の主題の1つまたは複数の実施形態の詳細は、添付の図面および以下の説明に示される。主題の他の特徴、態様、および利点は、説明、図面、および特許請求の範囲から明らかになるであろう。 The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, drawings, and claims.
本明細書は、特定のタイプのデータへのアクセスを限定するための技法を実装するのに使用される方法、システム、装置、およびコンピュータ可読媒体について開示する。いくつかの状況においては、本明細書に論じる技法は、以前にデータを所定の回数、提供したことがあるクライアントデバイス(またはクライアントデバイスのユーザ)へのデータの配布を調整し、制限し、限定し、または防止するために使用され得る。たとえば、クライアントデバイスにおいて、またはクライアントデバイスのユーザに対して(たとえば、様々な異なるクライアントデバイスにおいて)、以前に所定の回数、表示されたことがあるデジタルコンポーネントをそのクライアントデバイスに表示することが防止され得る、または別の形で制限され得る。これらの技法により、クライアントデバイスのユーザは、特定のタイプのデータ(たとえば、特定のタイプのデジタルコンポーネント)のクライアントデバイスへの供給または提示をブロッキングすることがさらに可能になる。これにより、古く、または欲しくないデータをクライアントデバイスに供給することによって普通なら消費されることになるリソースの無駄が防止可能になる。本明細書において論じる技法について、クライアントデバイスへのデジタルコンポーネントの配布に関して説明するが、技法はまた、どんなデータの調整にも適用可能であり、それにより、これらの技法を使用してどんなデータへのアクセスも限定またはセキュリティ保護可能になる。 This specification discloses methods, systems, apparatus, and computer-readable media that can be used to implement techniques for restricting access to particular types of data. In some situations, the techniques discussed herein regulate, restrict, and limit the distribution of data to client devices (or users of client devices) that have previously provided the data a predetermined number of times. can be used to prevent or For example, digital components that have been previously displayed a predetermined number of times at a client device or to a user of a client device (e.g., at various different client devices) are prevented from being displayed on that client device. obtained or otherwise limited. These techniques further enable the user of the client device to block the delivery or presentation of certain types of data (eg, certain types of digital components) to the client device. This can prevent wasting resources that would otherwise be consumed by supplying outdated or unwanted data to the client device. Although the techniques discussed herein are described in terms of distributing digital components to client devices, the techniques are also applicable to the manipulation of any data such that these techniques can be used to manipulate any data. Access can also be restricted or secured.
一般に、クライアントデバイスを介してインターネットに接続されているユーザには、デジタルコンポーネントが提供され得る。そのようなシナリオにおいては、デジタルコンポーネントサーバは、サードパーティクッキー(たとえば、ユーザが現在視聴しているウェブページのドメインとは異なるドメインからのクッキー)、ユーザのオンラインアクティビティなどのアクティビティデータ、ユーザ閲覧履歴に基づいて、デジタルコンポーネントへのアクセスを制御することができる。たとえば、デジタルコンポーネントサーバは、クッキー(たとえば、複数のドメイン/ウェブサイトにわたってデータを収集するサードパーティクッキー)に含まれている情報を使用して、クライアントデバイスのユーザが訪問した以前のウェブサイトに基づいて、デジタルコンポーネントを提供することができる。しかしながら、サードパーティの使用をブロッキングするブラウザにおいては、複数のウェブサイトにわたって、通常、収集される閲覧情報はもはや利用できない。したがって、クライアントデバイスへのデータの配布調整など、サードパーティクッキー(たとえば、ユーザが現在視聴しているウェブページのドメインとは異なる、エフェクティブトップレベルドメイン(eTLD+1)などのドメインからのクッキー)によって収集される情報に依存しているいずれの機能も、もはや利用できない。 In general, digital components may be provided to users connected to the Internet via client devices. In such scenarios, Digital Component Servers may store third-party cookies (e.g. cookies from a different domain than the domain of the web page the user is currently viewing), activity data such as the user's online activity, user browsing history, etc. Access to the digital component can be controlled based on. For example, Digital Component Servers may use information contained in cookies (e.g., third-party cookies that collect data across multiple domains/websites) to make cookies based on previous websites visited by the user of the client device. can provide a digital component. However, in browsers that block third-party usage, browsing information that is typically collected across multiple websites is no longer available. Therefore, by third-party cookies (for example, cookies from a different domain than the domain of the webpage the user is currently viewing, such as the effective top-level domain (eTLD+1)), such as coordinating the distribution of data to the client device. Any functionality that relies on the information collected is no longer available.
本明細書に説明する技法は、データアクセスの調整をサードパーティクッキーまたは他のデバイス/ブラウザの識別子から独立して可能にし、それにより、これらの技法を使用して、サードパーティクッキーの使用が(たとえば、クライアントデバイスにインストールされているブラウザによって)ブロッキングされている場合であっても、クライアントデバイスへのデジタルコンポーネントなどのデータへのアクセス(たとえば、その配布)を制御することが可能になる。これらの技法はまた、サーバによって提供されるデータへのアクセスを制御するのに使用される完全なデータセットが、クライアントデバイスに全体的に(またはかなりの部分に)常駐し、フルデータセットのほんの一部分(たとえば、異種またはばらばらなサブセット)のみがリモートサーバに提供されるような形で実装され得る。これにより、アクセス制御決定が行われる完全なデータセットに、本明細書において論じる技法に寄与するリモートサーバのいずれもがアクセスできなくなる。 The techniques described herein enable coordination of data access independent of third-party cookies or other device/browser identifiers, thereby using these techniques to ensure that the use of third-party cookies ( It makes it possible to control access to (e.g. distribution of) data such as digital components to a client device even when blocked (for example by a browser installed on the client device). These techniques also ensure that the full data set used to control access to data provided by the server resides entirely (or to a large extent) on the client device, and that only a fraction of the full data set resides on the client device. It may be implemented in such a way that only a portion (eg, a heterogeneous or disjoint subset) is provided to the remote server. This prevents any of the remote servers contributing to the techniques discussed herein from having access to the complete data set on which access control decisions are made.
本明細書においてさらに説明するように、クライアントデバイスにおいて実行するアプリケーションは、クライアントデバイスに以前に提供されたことがあるデータのソースを特定するユニバーサル識別子を生成する。たとえば、デジタルコンポーネントの文脈においては、ユニバーサル識別子は、クライアントデバイスにデジタルコンポーネントを提供したエンティティ、および/またはクライアントデバイスへのデジタルコンポーネントの送信をトリガした特定のデジタルコンポーネントグループ(たとえば、キャンペーン)を一意に表すことができる。各デジタルコンポーネントグループに対応するユニバーサル識別子は、各デジタルコンポーネントとともにクライアントデバイスに供給され得、それにより、デジタルコンポーネントは、特定のエンティティおよび/またはデジタルコンポーネントグループからのデジタルコンポーネントがクライアントデバイスに供給される頻度の経過を追うことができる。より概括的な調整されたデータアクセス実装形態においては、同様の技法を使用して、クライアントデバイスは、特定のエンティティによって提供されるデータ、および/または特定のデータベース、インデックス、またはフォルダに含まれているデータが、クライアントデバイスに送信された(またはクライアントデバイスによってダウンロードされた)頻度の経過を追うことが可能になる。 As described further herein, an application executing on a client device generates a universal identifier that identifies the source of data that has previously been provided to the client device. For example, in the context of digital components, the universal identifier uniquely identifies the entity that provided the digital component to the client device and/or the particular group of digital components (e.g., campaign) that triggered the delivery of the digital component to the client device. can be represented. A universal identifier corresponding to each digital component group may be provided to the client device with each digital component, whereby the digital component is identified by the frequency with which digital components from a particular entity and/or digital component group are provided to the client device. can be tracked. In a more general coordinated data access implementation, similar techniques are used to allow a client device to access data provided by a particular entity and/or contained in a particular database, index, or folder. data is sent to (or downloaded by) client devices.
より詳細に後述するように、特定のユニバーサル識別子に対応するデジタルコンポーネントがクライアントデバイスに供給されたことがある、および/またはクライアントデバイスによって提示されたことがある頻度に基づいて、デジタルコンポーネント(または他のタイプのデータ)の提示(もしくはアクセス)が許可される、またはブロッキングされるべき経過を追うために、クライアントサイドのアプリケーションによってユニバーサル識別子が使用され得る。加えて、ユニバーサル識別子を使用することにより、クライアントデバイスは、クライアントデバイスのユーザによって要求されるように、指定されたソースからの特定のタイプのデジタルコンポーネント(または他のデータ)の供給ブロッキングを調整することが可能になる。いくつかの状況においては、クライアントデバイスは、ブロッキングされたユニバーサル識別子の組(たとえば、リスト)を維持することができ、それにより、ブロッキングされたユニバーサル識別子のうちの1つと一致するユニバーサル識別子を有するデジタルコンポーネントのクライアントデバイスへの供給またはクライアントデバイスによる提示を防止することが指定される。たとえ本明細書において技法および方法がデジタルコンポーネントおよびキャンペーンを特定する方法としてユニバーサル識別子を使用しているとしても、その方法および技法を他の形態の識別情報まで拡大することができることに留意すべきである。たとえば、デジタルコンポーネントまたはキャンペーンは、それらに関連付けられるタグまたはラベルを使用して特定され得る。たとえば、クライアントデバイスのユーザが、ソーダ飲料に関係するすべてのデジタルコンポーネントをブロッキングしたがっている場合、ソーダ飲料に関係するすべてのデジタルコンポーネントは、「ソーダ飲料」という用語を使用して特定され得る。そのようなシナリオにおいては、「ソーダ飲料」という用語は、ソーダ飲料に関係するデジタルコンポーネントと関連して使用される分類法用語か、またはそのようなデジタルコンポーネントを特定するのにインターネットにおいて使用される用語かのいずれかであってよい。 As described in more detail below, digital components (or other A universal identifier can be used by a client-side application to keep track of which presentation (or access) of (types of data) should be allowed or blocked. Additionally, by using the universal identifier, the client device coordinates the blocking of delivery of certain types of digital components (or other data) from specified sources as requested by the user of the client device. becomes possible. In some circumstances, a client device may maintain a set (e.g., a list) of blocked universal identifiers such that a digital It is specified to prevent the component from being served to or presented by the client device. It should be noted that even though the techniques and methods herein use universal identifiers as a method of identifying digital components and campaigns, the methods and techniques can be extended to other forms of identifying information. be. For example, digital components or campaigns may be identified using tags or labels associated with them. For example, if a user of a client device wishes to block all digital components related to soda beverages, all digital components related to soda beverages may be identified using the term "soda beverages." In such scenarios, the term "soda drink" is either a taxonomy term used in connection with digital components related to soda drinks, or used in the Internet to identify such digital components. can be either term
技法により、クライアントサイドのアプリケーションは、異なるデジタルコンポーネントがクライアントデバイスにおいて提示される回数の経過を追うこと、および指定された時間期間にわたって少なくとも所定の回数、アプリケーションによって特定されたことがあるユニバーサル識別子を有する特定のデジタルコンポーネントの提示を制限することがさらに可能になる。言い換えれば、一旦、なんらかのタイムフレームにおいて、所定の回数、特定のユニバーサル識別子が見られると、クライアントサイドアプリケーションは、ブロッキングされたユニバーサル識別子の組にユニバーサル識別子を追加することによって、その特定のユニバーサル識別子を有するデータ(たとえば、デジタルコンポーネント)がさらに、クライアントデバイスに送信されること、またはクライアントデバイスにおいて提示されることを少なくとも一時的に防止することができる。デジタルコンポーネントなどのデータのクライアントデバイスへのその後の供給に対する制限をかけるために、クライアントデバイスは、ブロッキングされたユニバーサル識別子の組を使用して確率的データ構造を生成し、その確率的データ構造を1つまたは複数のリモートサーバ(たとえば、2つ以上のMPCサーバ)と共有し、リモートサーバは、クライアントデバイスに供給するためのデータ(たとえば、デジタルコンポーネント)を選定する処理中に確率的データ構造を使用することができる。 According to the technique, the client-side application keeps track of the number of times different digital components are presented at the client device and has a universal identifier that has been identified by the application at least a predetermined number of times over a specified time period. It is further possible to restrict the presentation of certain digital components. In other words, once a particular universal identifier has been seen a predetermined number of times in some timeframe, the client-side application may view that particular universal identifier by adding it to the set of blocked universal identifiers. Data (eg, digital components) having data can also be prevented from being transmitted to or presented at the client device, at least temporarily. To impose restrictions on subsequent provision of data, such as digital components, to a client device, the client device generates a probabilistic data structure using the set of blocked universal identifiers and converts the probabilistic data structure to one shared with one or more remote servers (e.g., two or more MPC servers), which use probabilistic data structures during the process of selecting data (e.g., digital components) to deliver to client devices can do.
いくつかの態様においては、デジタルコンポーネントサーバは、2つ以上の計算サーバを含むセキュアマルチパーティ計算(MPC)システムを展開して、いずれのMPCサーバもクリアテキストの情報にアクセスすることができない確率的データ構造に基づいて、デジタルコンポーネントを選定するためのセキュアMPC方法を行うことができる。技法により、クライアントデバイスは、秘密シェアにおける確率的データ構造を生成し、MPCシステムにおけるサーバのそれぞれに送信することが可能になり、それによって、ユーザのプライバシーおよび匿名性が維持される。技法および方法については、図1～図4を参照してさらに説明する。 In some aspects, the digital component server deploys a secure multi-party computing (MPC) system that includes two or more computational servers such that none of the MPC servers can access information in cleartext. Based on the data structure, a secure MPC method for choosing digital components can be performed. Techniques allow client devices to generate and transmit probabilistic data structures in secret shares to each of the servers in the MPC system, thereby maintaining user privacy and anonymity. The techniques and methods are further described with reference to FIGS. 1-4.
図1は、デジタルコンポーネントが配布されて、電子ドキュメントとともに提示される例示的な環境100のブロック図である。例示的な環境100は、ローカルエリアネットワーク(LAN)、広域ネットワーク(WAN)、Internet、またはそれらの組合せなどのネットワーク102を含む。ネットワーク102は、コンテンツサーバ104、クライアントデバイス106、デジタルコンポーネントサーバ108、およびデジタルコンポーネント配布システム110(コンポーネント配布システム(component disutribution system、CDS)とも称す)を接続する。
FIG. 1 is a block diagram of an
クライアントデバイス106は、ネットワーク102を経由してリソースを要求し受信することができる電子デバイスである。例示的なクライアントデバイス106には、パーソナルコンピュータ、モバイル通信デバイス、ウェアラブルデバイス、パーソナルデジタルアシスタント、ゲーミングシステム、仮想現実システム、ストリーミング媒体デバイス、およびネットワーク102を経由してデータを送受信することができる他のデバイスが含まれる。クライアントデバイス106は、典型的には、ネットワーク102を経由してデータの送受信を容易にするためのウェブブラウザなどのユーザプリケーション112を含むが、クライアントデバイス106によって実行されるネイティブアプリケーションも、ネットワーク102を経由してデータの送受信を容易にすることができる。クライアントデバイス106、具体的には、パーソナルデジタルアシスタントは、クライアントデバイス106との音声対話を可能にするハードウェアおよび/またはソフトウェアを含むことができる。たとえば、クライアントデバイス106は、マイクロフォンを含むことができ、それを通じて、ユーザは、コマンド、検索クエリ、閲覧命令、スマートホーム命令、および/または他の情報などのオーディオ(たとえば、音声)入力を提出することができる。加えて、クライアントデバイス106は、スピーカを含むことができ、それを通じて、オーディオ(たとえば、音声)出力がユーザに提供され得る。パーソナルデジタルアシストは、ウェアラブル、スマートスピーカ、家庭電化製品、自動車、タブレットデバイス、または他のクライアントデバイス106を例として含む任意のクライアントデバイス106において実装され得る。
電子ドキュメントは、クライアントデバイス106においてコンテンツセットを提示するデータである。電子ドキュメントの例として、ウェブページ、ワープロドキュメント、ポータブルドキュメントフォーマット(portable document format、PDF)ドキュメント、画像、動画、検索結果ページ、ビデオゲーム、仮想(または拡張)現実環境、およびフィードソースが挙げられる。モバイル、タブレット、またはデスクトップコンピューティングデバイスにおいてインストールされているアプリケーションなどのネイティブアプリケーション(たとえば、「アプリ(app)」)もまた、電子ドキュメントの例である。電子ドキュメントは、コンテンツサーバ104によってクライアントデバイス106に提供され得る。たとえば、コンテンツサーバ104は、パブリッシャウェブサイトをホストするサーバを含めることができる。この例においては、クライアントデバイス106は、所与のパブリッシャウェブページに対する要求を開始することができ、所与のパブリッシャウェブページをホストするコンテンツサーバ104は、クライアントデバイス106における所与のウェブページの提示を開始するマシン実行可能命令を送出することによってその要求に応答することができる。
An electronic document is data that presents a content set on
別の例においては、コンテンツサーバ104は、アプリサーバを含むことができ、クライアントデバイス106は、そのアプリサーバからアプリをダウンロードすることができる。この例においては、クライアントデバイス106は、クライアントデバイス106においてアプリをインストールするのに必要なファイルをダウンロードし、次いで、ダウンロードされたアプリをローカルで実行することができる。ダウンロードされたアプリは、アプリケーション自体の一部であるネイティブコンテンツと、デジタルコンポーネントサーバ108から得られ、アプリがクライアントデバイス106において実行されている間にアプリに挿入される1つまたは複数のデジタルコンポーネント(たとえば、サードパーティによって作成/配布されたコンテンツ)との組合せを提示するように構成され得る。
In another example, the
電子ドキュメントは、多様なコンテンツを含むことができる。たとえば、電子ドキュメントは、電子ドキュメント自体の範囲内にあり、および/または経時的に変化しない静的コンテンツ(たとえば、テキストもしくは他の指定コンテンツ)を含むことができる。電子ドキュメントはまた、経時的にまたは要求ごとに変化し得る動的コンテンツを含むこともできる。たとえば、所与の電子ドキュメントのパブリッシャは、電子ドキュメントの一部分を投入するのに使用されるデータソースを維持することができる。この例においては、所与の電子ドキュメントは、タグまたはスクリプトを含むことができ、所与の電子ドキュメントがクライアントデバイス106によって処理される(たとえば、レンダリングされる、または実行される)と、タグまたはスクリプトにより、クライアントデバイス106は、データソースにコンテンツを要求することになる。クライアントデバイス106は、データソースから得られたコンテンツを所与の電子ドキュメントに統合して、データソースから得られたコンテンツを含んだ複合電信ドキュメントを作成する。
Electronic documents can contain a wide variety of content. For example, an electronic document may contain static content (eg, text or other specified content) that is within the electronic document itself and/or that does not change over time. Electronic documents can also contain dynamic content that can change over time or from request to request. For example, the publisher of a given electronic document may maintain the data sources used to populate portions of the electronic document. In this example, a given electronic document may include tags or scripts, and when the given electronic document is processed (eg, rendered or executed) by
いくつかの状況においては、所与の電子ドキュメントは、デジタルコンポーネント配布システム110にリファレンスするデジタルコンポーネントタグまたはデジタルコンポーネントスクリプトを含むことができる。これらの状況においては、デジタルコンポーネントタグまたはデジタルコンポーネントスクリプトは、所与の電子ドキュメントがクライアントデバイス106によって処理されると、クライアントデバイス106によって実行される。デジタルコンポーネントタグまたはデジタルコンポーネントスクリプトの実行は、デジタルコンポーネントを求める要求(「コンポーネント要求」とも称す)112を生成するようにクライアントデバイス106を構成設定し、その要求は、ネットワーク102を経由してデジタルコンポーネント配布システム110に送信される。たとえば、デジタルコンポーネントタグまたはデジタルコンポーネントスクリプトは、クライアントデバイス106が、ヘッダおよびペイロードデータを含むパケット化されたデータ要求を生成することを可能にする。デジタルコンポーネント要求112は、媒体要求を受けているサーバの名称(またはネットワーク場所)、要求側デバイス(たとえば、クライアントデバイス106)の名称(またはネットワーク場所)、および/またはデジタルコンポーネント配布システム110が、要求に応答して提供される1つまたは複数のデジタルコンポーネントを選定するのに使用することができる情報などの機能を指定するイベントデータを含むことができる。コンポーネント要求112は、クライアントデバイス106によって、ネットワーク102(たとえば、電気通信ネットワーク)を経由して、デジタルコンポーネント配布システム110のサーバに送信される。
In some situations, a given electronic document may contain a digital component tag or a digital component script that references the digital component distribution system 110 . In these situations, the digital component tags or digital component scripts are executed by
デジタルコンポーネント要求112は、電子ドキュメントが要求されていること、およびデジタルコンポーネントが提示され得る電子ドキュメントの場所の特徴など、他のイベント機能を指定するイベントデータを含むことができる。たとえば、デジタルコンポーネントが提示されることになる電子ドキュメント(たとえばウェブページまたはアプリケーション)に対するリファレンス(たとえば、ユニフォームリソースロケータ(Uniform Resource Locator、URL))、デジタルコンポーネントを提示するのに利用可能な電子ドキュメントの利用可能な場所、利用可能な場所のサイズ、および/または場所に提示される資格がある媒体タイプを指定するイベントデータは、デジタルコンポーネント配布システム110に提供され得る。同様に、電子ドキュメントに関連付けられるキーワード(「ドキュメントキーワード」)、または電子ドキュメントによってリファレンスされるエンティティ(たとえば、人々、位置、もしくは物)を指定するイベントデータもまた、コンポーネント要求112内に(たとえば、ペイロードデータとして)含められ、デジタルコンポーネント配布システム110に提供されて、電子ドキュメントとともに提示される資格があるデジタルコンポーネントの特定を容易にすることができる。イベントデータはまた、検索結果ページ、および/または検索結果を指定するデータ、および/または検索結果に含まれているテキスト、可聴、もしくは他の可視コンテンツを得るためにクライアントデバイス106から提出された検索クエリを含むこともできる。
コンポーネント要求112はまた、クライアントデバイス106のユーザが提供したことがある情報、コンポーネント要求の提出元の州もしくは地域を示す地理情報、またはデジタルコンポーネントが表示されることになる環境の文脈を提供する他の情報(たとえば、コンポーネント要求の時刻、コンポーネント要求の曜日、モバイルデバイスもしくはタブレットデバイスなど、デジタルコンポーネントが表示されることになるデバイスのタイプ)など、他の情報に関係するイベントデータを含むこともできる。コンポーネント要求112は、たとえば、パケット化されたネットワークを経由して送信され得、コンポーネント要求112自体が、ヘッダおよびペイロードデータを有するパケット化されたデータとしてフォーマットされ得る。ヘッダは、パケットの宛先を指定することができ、ペイロードデータは、上述した情報のうちのいずれをも含むことができる。
The
1つまたは複数のデジタルコンポーネント配布サーバを含むデジタルコンポーネント配布システム110は、コンポーネント要求112の受信および/またはコンポーネント要求112に含まれる情報の使用に応答して、所与の電子ドキュメントとともに提示されることになるデジタルコンポーネントを選択する。いくつかの実装形態においては、デジタルコンポーネントは、デジタルコンポーネントの選定遅延によって生じることもあり得るエラーを回避するために、1秒未満で選定される。たとえば、コンポーネント要求112に応答してデジタルコンポーネントを提供する際の遅延は、結果的に、クライアントデバイス106におけるページロードエラーをもたらし、または電子ドキュメントの一部分が、電子ドキュメントの他の部分がクライアントデバイス106において提示された後でも、投入されないままの状態になる可能性がある。また、デジタルコンポーネントをクライアントデバイス106に提供する際の遅延が増加するにつれて、デジタルコンポーネントがクライアントデバイス106に供給されるとき、電子ドキュメントはクライアントデバイス106にもはや提示されなくなる可能性がより高くなり、それによって、電子ドキュメントのユーザのエクスペリエンスに負の影響が及ぶだけでなく、システム帯域幅および他のリソースの浪費がもたらされることになる。さらには、たとえば、デジタルコンポーネントが提供されるときに電子ドキュメントがクライアントデバイス106にもはや提示されない場合、デジタルコンポーネントを提供する際の遅延は、結果的に、デジタルコンポーネントの供給の失敗につながる可能性もある。
A digital component distribution system 110, including one or more digital component distribution servers, is presented with a given electronic document in response to receiving
電子ドキュメントの検索を容易にするために、環境100は、電子ドキュメントをクロールしインデックスすることによって(たとえば、電子ドキュメントのクロールされたコンテンツに基づいてインデックスされた)電子ドキュメントを特定する検索システム150を含むことができる。電子ドキュメントに関するデータは、データが関連付けられる電子ドキュメントに基づいてインデックスされ得る。電子ドキュメントのインデックスされた、オプションでキャッシュされたコピーは、検索インデックス152(たとえば、ハードメモリデバイス)に記憶される。電子ドキュメントに関連付けられるデータは、電子ドキュメントに含まれるコンテンツを表すデータおよび/または電子ドキュメントについてのメタデータである。
To facilitate searching of electronic documents, the
クライアントデバイス106は、ネットワーク102を経由して検索システム150に検索クエリを提出することができる。それに応答して、検索システム150は、検索インデックス152にアクセスして、検索クエリに関係する電子ドキュメントを特定する。検索システム150は、検索結果の形態で電子ドキュメントを特定し、検索結果をクライアントデバイス106に戻して検索結果ページに入れる。検索結果は、特定の検索クエリに応答する(たとえば、関係する)電子ドキュメントを特定する検索システム150によって生成されるデータであり、アクティブリンク(たとえば、ハイパーテキストリンク)を含み、それにより、クライアントデバイスは、検索結果とのユーザ対話に応答して、指定された場所にデータを要求することになる。例示的な検索結果は、ウェブページタイトル、ウェブページから抽出されるテキスト片(snippet of text)または画像の一部分、およびウェブページのURLを含むことができる。別の例示的な検索結果は、ダウンロード可能なアプリケーションのタイトル、ダウンロード可能なアプリケーションを説明するテキスト片、ダウンロード可能なアプリケーションのユーザインターフェースを描写する画像、および/またはクライアントデバイス106にダウンロードされ得るアプリケーションの元の場所に対するURLを含むことができる。別の例示的な検索結果は、ストリーミング媒体のタイトル、ストリーミング媒体を説明するテキスト片、ストリーミング媒体のコンテンツを描写する画像、および/またはクライアントデバイス106にダウンロードされ得るストリーミング媒体の元の場所に対するURLを含むことができる。他の電子ドキュメントと同様に、検索結果ページは、デジタルコンポーネント(たとえば、広告、ビデオクリップ、オーディオクリップ、画像、または他のデジタルコンポーネント)が提示され得る1つまたは複数のスロットを含むことができる。
いくつかの実装形態においては、デジタルコンポーネント配布システム110は、分散型コンピューティングシステムにおいて実装され、この分散型コンピューティングシステムは、たとえば、サーバと、相互接続され、コンポーネント要求112に応答して、デジタルコンポーネントを特定し配布する複数のコンピューティングデバイス114との組を含む。複数のコンピューティングデバイス114の組は一緒に動作して、何百万もの利用可能なデジタルコンポーネントのコーパスの中から電子ドキュメントにおいて提示されることになる資格があるデジタルコンポーネントの組を特定する。
In some implementations, the digital component distribution system 110 is implemented in a distributed computing system interconnected, for example, with servers that respond to
いくつかの実装形態においては、デジタルコンポーネント配布システム110は、デジタルコンポーネントを選定し配布するのに異なる技法を実装する。たとえば、デジタルコンポーネントは、対応するデジタルコンポーネントの選定/配布/送信に寄与する(たとえば、調節する、または限定する)、対応する配布パラメータを含むことができる。たとえば、配布パラメータは、コンポーネント要求が、デジタルコンポーネントの配布パラメータのうちの1つと(たとえば、正確にか、または何らかのあらかじめ指定されたレベルの類似性を伴うかのいずれかで)一致する少なくとも1つの基準を含むことを要求することによって、デジタルコンポーネントの送信に寄与することができる。 In some implementations, digital component distribution system 110 implements different techniques for selecting and distributing digital components. For example, a digital component can include corresponding distribution parameters that contribute to (eg, adjust or limit) the selection/distribution/transmission of the corresponding digital component. For example, the distribution parameters include at least one component request that matches (e.g., either exactly or with some pre-specified level of similarity) one of the distribution parameters of the digital component. You can contribute to the transmission of the digital component by claiming to include the reference.
別の例においては、特定のデジタルコンポーネントについての配布パラメータは、デジタルコンポーネントが提示の資格があるようにするために、(たとえば、電子ドキュメント、ドキュメントキーワード、またはコンポーネント要求112において指定される用語によって)一致していなくてはならない配布キーワードを含むことができる。配布パラメータはまた、コンポーネント要求112が、コンポーネント項目が提示の資格があるようにするために、特定の地理的な地域(たとえば、国、または州)を指定する情報、および/またはコンポーネント要求112が、特定のタイプのクライアントデバイス106(たとえば、モバイルデバイスまたはタブレットデバイス)において生じたことを指定する情報を含むことを要求することもできる。配布パラメータはまた、より詳細に後述するように、(たとえば、他の利用可能なデジタルコンポーネントの中でも特に)選定/配布/送信に対するコンポーネント項目の資格を評価するのに使用される資格値(たとえば、ランク、スコア、または何らかの他の指定値)を指定することもできる。いくつかの状況においては、資格値は、特定のイベントがデジタルコンポーネント項目(たとえば、デジタルコンポーネントの提示)に起因するときに提出されることになる量に基づくことができる。
In another example, distribution parameters for a particular digital component may be specified (e.g., by electronic document, document keyword, or term specified in component request 112) to make the digital component eligible for presentation. Can contain distribution keywords that must match. The distribution parameters may also include information specifying a particular geographic region (e.g., country or state) for
資格のあるデジタルコンポーネントの識別情報は、複数のタスク117a～117cにセグメント化され得、次いで、これらのタスク117a～117cは、複数のコンピューティングデバイスの組114の中のコンピューティングデバイス間で割り当てられる。たとえば、組114の中の異なるコンピューティングデバイスはそれぞれ、異なるデジタルコンポーネントを分析して、コンポーネント要求112に含まれている情報と一致する配布パラメータを有する様々なデジタルコンポーネントを特定することができる。いくつかの実施態様においては、組114の中の各所与のコンピューティングデバイスは、異なるデータ次元(または次元の組)を分析し、分析の結果(Res1～Res3)118a～118cをデジタルコンポーネント配布システム110へと元に返す(たとえば、送信する)。たとえば、組114の中のコンピューティングデバイスのそれぞれによって提供される結果118a～118cは、コンポーネント要求に応答して配布の資格があるデジタルコンポーネント項目の副組および/または特定の配布パラメータを有するデジタルコンポーネントの副組を特定することができる。デジタルコンポーネントの副組の特定は、たとえば、イベントデータの配布パラメータとの比較、およびイベントデータの少なくともいくつかの機能と一致する配布パラメータを有するデジタルコンポーネントの副組の特定を含むことができる。
The identities of the entitled digital components may be segmented into
デジタルコンポーネント配布システム110は、複数のコンピューティングデバイスの組114から受け取った結果118a～118cを集約し、集約した結果に関連付けられる情報を使用して、コンポーネント要求112に応答して提供されることになる1つまたは複数のデジタルコンポーネントを選定する。たとえば、デジタルコンポーネント配布システム110は、1つまたは複数のデジタルコンポーネント評価方法の成果に基づいて、ウィニングデジタルコンポーネントの組(1つまたは複数のデジタルコンポーネント)を選定することができる。ひいては、デジタルコンポーネント配布システム110は、クライアントデバイス106が、ウィニングデジタルコンポーネントの組を所与の電子ドキュメントに統合することを可能にする返信データ120(たとえば、返信を表すデジタルデータ)を生成し、それをネットワーク102を経由して送信することができ、それにより、ウィニングデジタルコンポーネントの組と電子ドキュメントのコンテンツとは、クライアントデバイス106のディスプレイに一緒に提示されることになる。
Digital component distribution system 110 aggregates
いくつかの実装形態においては、クライアントデバイス106は、クライアントデバイス106が1つまたは複数のデジタルコンポーネントサーバ108からウィニングデジタルコンポーネントの組を得るように構成設定し可能にする、返信データ120に含まれている命令を実行する。たとえば、返信データ120内の命令は、ネットワーク場所(たとえば、URL)、およびスクリプトを含むことができ、それにより、クライアントデバイス106は、デジタルコンポーネントサーバ108から所与のウィニングデジタルコンポーネントを得るためのサーバ要求(SR)121をデジタルコンポーネントサーバ108に送信することになる。サーバ要求121に応答して、デジタルコンポーネントサーバ108は、サーバ要求121において指定される所与のウィニングデジタルコンポーネントを特定し、クライアントデバイス106において電子ドキュメントに所与のウィニングデジタルコンポーネントを提示するデジタルコンポーネントデータ122(DI Data)をクライアントデバイス106に送信することになる。
In some implementations, the
いくつかの場合においては、以前にユーザが訪問したおよび/またはユーザと対話したウェブページ、アプリケーションページ、または他の電子リソースに関係するデジタルコンポーネント(または他のデータ)を受け取ることは、ユーザにとって有益である。そのようなデジタルコンポーネントをユーザに配布するために、ユーザは、ユーザがアクセスするデジタルコンテンツに基づいて、ユーザグループ、たとえば、ユーザ興味グループ、同様のユーザ群、または同様のユーザデータを含む他のグループタイプに割り当てられ得る。たとえば、ユーザが特定のウェブサイトを訪問し、ウェブサイトにおいて提示される特定の項目と対話し、または項目を仮想カートに追加したとき、ユーザは、同じウェブサイト、または文脈的に類似している、もしくは同じ項目に興味がある他のウェブサイトを訪問したことがあるユーザのグループに割り当てられ得る。例示するために、クライアントデバイス106のユーザがシューズについて検索し、異なるシューズメーカーの複数のウェブページを訪問する場合、ユーザは、シューズに関係するウェブサイトを訪問したことがあるすべてのユーザについての識別子を含むことができるユーザグループ「シューズ」に割り当てられ得る。
In some cases, it is useful for users to receive digital components (or other data) related to web pages, application pages, or other electronic resources that they have previously visited and/or interacted with. is. In order to distribute such digital components to users, a user may, based on the digital content that the user accesses, user groups, e.g., user interest groups, similar user groups, or other groups containing similar user data. can be assigned to a type. For example, when a user visits a particular website, interacts with a particular item presented at the website, or adds an item to a virtual cart, the user may access the same website or a contextually similar , or to a group of users who have visited other websites interested in the same item. To illustrate, if a user of the
いくつかの実装形態においては、ユーザのグループメンバーシップは、デジタルコンポーネントサーバ108でも、コンテンツプラットフォーム104でも、または別のパーティでもなく、たとえばブラウザベースのアプリケーションによって、ユーザのクライアントデバイス106において維持され得る。ユーザグループは、ユーザグループのそれぞれのラベルによって指定され得る。ユーザグループのラベルは、グループ(たとえば、園芸グループ)、またはグループを表すコード(たとえば、記述していない英数字シーケンス)を記述したものとすることができる。ユーザグループのラベルは、クライアントデバイス106におけるセキュアストレージ内に記憶され、および/または記憶されるときに暗号化されて、他者がリストにアクセスするのを防止することができる。
In some implementations, a user's group membership may be maintained at the user's
いくつかの実装形態においては、ユーザグループの識別子は、HMAC(user_group_label, eTLD+1)と表されるユーザグループとコンテンツプラットフォーム104のドメインとのラベルによってパラメータ化されるハッシュベースのメッセージ認証コード(hash-based message authentication code、HMAC)を使用して生成され得る。いくつかの実装形態においては、HMACは、ハッシュ化された256ビット(32バイト)出力を生成するために、ダイジェスト長が256ビットの暗号化ハッシュ関数であるセキュアハッシュアルゴリズム(SHA-256)を使用して実装され得る。そのような例においては、HMAC(user_group_label, eTLD+1)は、ユーザグループ識別子として、ユーザグループの256ビット一意識別子を生成する。 In some implementations, the user group identifier is a hash-based message authentication code (hash -based message authentication code, HMAC). In some implementations, HMAC uses the Secure Hash Algorithm (SHA-256), a cryptographic hash function with a digest length of 256 bits, to produce a hashed 256-bit (32-byte) output. can be implemented as In such an example, HMAC(user_group_label, eTLD+1) generates the user group's 256-bit unique identifier as the user group identifier.
コンテンツプラットフォーム104は、ユーザのユーザグループメンバーシップを使用して、デジタルコンポーネント、またはユーザにとって興味がある可能性がある、もしくは別のやり方(たとえば、タスクを完了する際にユーザを支援する)でユーザ/ユーザデバイスに有益である可能性がある他のコンテンツを選定することができる。たとえば、そのようなデジタルコンポーネントまたは他のコンテンツは、ユーザエクスペリエンスを向上させ、ユーザデバイスの動作を向上させ、または何らかの他のやり方でユーザもしくはユーザデバイスに利益をもたらすデータを含むことができる。
The
ブラウザなどのアプリケーション107が1つまたは複数のデジタルコンポーネントスロットを含むパブリッシャ140のウェブサイト142をロードすると、アプリケーション107は、スロットごとにデジタルコンポーネントを要求することができる。いくつかの実装形態においては、デジタルコンポーネントスロットは、コード(たとえば、スクリプト)を含むことができ、それにより、アプリケーション107は、クライアントデバイス106のユーザに提示するためのデジタルコンポーネントを要求することになる。デジタルコンポーネントサーバからの応答としてデジタルコンポーネントを受け取った後、デジタルコンポーネントは、ウェブサイト142のそれぞれのデジタルコンポーネントスロットにおいて提示される。しかしながら、そのような状況においては、同じデジタルコンポーネントを繰り返し提示することを回避するために、アプリケーション107は、ユニバーサル識別子の組を維持することができ、それにより、組内の各識別子は、クライアントデバイス106において以前に提示されたデジタルコンポーネントを一意に特定することが可能になる。たとえば、信頼済みプログラム、たとえば、ウェブブラウザまたはオペレーティングシステムは、識別子の組またはクライアントデバイス106を維持することができる。
When an
いくつかの実装形態においては、各デジタルコンポーネントは、(たとえば、デジタルコンポーネントサーバ108のための)コンテンツソースのドメイン内で各デジタルコンポーネントを一意に特定する識別子を含むことができる。他の実装形態においては、デジタルコンポーネントは、デジタルコンポーネントサーバ108についてのキャンペーンの一部とすることができる。たとえば、デジタルコンポーネントサーバ108は、特定のブランドのシューズを宣伝するためのキャンペーンを開始することができる。キャンペーンを宣伝するために、デジタルコンポーネントサーバ108は、特定のブランドのシューズに文脈的に関係する複数のデジタルコンポーネントを提供することができる。そのようなシナリオにおいては、シューズのブランドに文脈的に関係する複数のデジタルコンポーネントはそれぞれ、キャンペーンの一部である。そのようなシナリオにおいては、キャンペーンにおける複数のデジタルコンポーネントはそれぞれ、そのキャンペーンをデジタルコンポーネントサーバ108の他のキャンペーンと区別する一意の識別子(キャンペーン識別子とも称す)により特定され得る。
In some implementations, each digital component can include an identifier that uniquely identifies each digital component within the domain of the content source (eg, for digital component server 108). In other implementations, the digital component can be part of a campaign for the
デジタルコンポーネントがアプリケーション107を介してクライアントデバイス106において提示されると、アプリケーション107は、デジタルコンポーネントサーバ108によってデジタルコンポーネントに割り当てられたキャンペーン識別子を読み出す。いくつかの実装形態においては、アプリケーション107はまた、デジタルコンテンツプロバイダのドメインのeTLD+1も読み出すことができる。eTLD+1は、パブリックサフィックスに1レベル加えたエフェクティブトップレベルドメイン(eTLD)である。eTLD+1の一例が「example.com」であり、ここで、「.com」は、トップレベルドメインである。
When a digital component is presented at
特定のデジタルコンポーネントについて、キャンペーン識別子と、コンテンツソースとも称すデジタルコンテンツプロバイダのドメインのeTLD+1とを読み出した後、アプリケーション107は、特定のデジタルコンポーネントについてのユニバーサル識別子を生成することができる。いくつかの実施形態においては、デジタルコンポーネントサーバ108は、ユニバーサル識別子を生成し、それをデジタルコンポーネントに割り当てることができる。そのような実施形態においては、アプリケーション107は、クライアントデバイス106において提示されるデジタルコンポーネントのユニバーサル識別子を読み出すことができる。ユニバーサル識別子は、(i)特定のコンテンツソース(たとえば、デジタルコンテンツプロバイダ)によって提供され、(ii)同じキャンペーンまたは配布ルールの組によって、クライアントデバイスに供給されるようにトリガされる、デジタルコンポーネントを一意に表すデータである。言い換えれば、同じユニバーサル識別子を有する2つの異なるデジタルコンポーネント(または他のデータファイル)は、同じコンテンツソースから生じていること、および同じキャンペーンによって供給されるようにトリガされていることと考えられる。簡単に読みやすくするために、次の説明はまた、特定のデジタルコンポーネントを一意に特定するとしてユニバーサル識別子を示すことになる。いくつかの実装形態においては、デジタルコンポーネントについてのユニバーサル識別子は、HMAC(campaign_identifier, eTLD+1)と表されるキャンペーン識別子とデジタルコンポーネントサーバ108のドメインとによってパラメータ化されるハッシュベースのメッセージ認証コード(HMAC)を使用して算出され得る。いくつかの実装形態においては、HMACは、ハッシュ化された256ビット(32バイト)出力を生成するために、ダイジェスト長が256ビットの暗号化ハッシュ関数であるセキュアハッシュアルゴリズム(SHA-256)を使用して実装され得る。そのような例においては、HMAC(campaign_identifier, eTLD+1)は、ユニバーサル識別子として、デジタルコンポーネントの256ビット一意識別子を生成する。
After retrieving the campaign identifier and the eTLD+1 of the digital content provider's domain, also referred to as the content source, for a particular digital component, the
追加の情報なしに、ハッシュ関数を使用してユニバーサル識別子を生成することによって、クライアントデバイス106およびデジタルコンポーネントのそれぞれのデジタルコンポーネントサーバ108において実行するアプリケーション107以外の任意のエンティティが、デジタルコンポーネントを提供したコンテンツソースの属性情報、またはコンテンツソースによって使用されるキャンペーン識別子を見つけ出すことは、計算上実用的ではない。したがって、ハッシュ関数手法は、別のエンティティが、ユニバーサル識別子の組を受け取った、またはユニバーサル識別子に対する未承認アクセスを何らかの形で得た場合、コンテンツソースの機密情報を保護する。
Without additional information, any entity other than the
アプリケーション107は、すべてのデジタルコンポーネントサーバ108において、キャンペーンのスペース全体にわたって、デジタルコンポーネントを一意に特定するユニバーサル識別子の組を維持する。いくつかの実装形態においては、ユニバーサル識別子の組は、組内のユニバーサル識別子のそれぞれについての提示カウンタを含み、提示カウンタにインデックスされ、または別の形で提示カウンタに関連付けられる。各特定のユニバーサル識別子の提示カウンタは、その特定のユニバーサル識別子を有するデジタルコンポーネントの供給および/または提示の頻度を示す。たとえば、特定のユニバーサル識別子についての提示カウンタは、その特定のユニバーサル識別子を有するデジタルコンポーネントが、所与のタイムフレームにおいて、以前にクライアントデバイス106に供給された、および/またはクライアントデバイス106において提示された回数を示すことができる。
クライアントデバイス106に供給され、クライアントデバイス106において提示された特定のデジタルコンポーネントについてのユニバーサル識別子を計算し/生成した後、アプリケーション107は、特定のデジタルコンポーネントのユニバーサル識別子によりユニバーサル識別子の組を更新する。特定のデジタルコンポーネントについてのユニバーサル識別子が組の中にすでに存在しない状況においては、アプリケーション107は、特定のデジタルコンポーネントのユニバーサル識別子を組に追加し、対応する提示カウンタを1だけ増分する。特定のデジタルコンポーネントについてのユニバーサル識別子が組の中にすでに存在する状況においては、アプリケーション107は、ユニバーサル識別子の対応する提示カウンタを、たとえば、1だけカウンタを増分することによって更新する。
After computing/generating the universal identifier for a particular digital component provided to and presented at the
いくつかの実装形態においては、クライアントデバイス106において実行するアプリケーション107は、ユーザによって明確にブロッキングされたことがあるデジタルコンポーネントのユニバーサル識別子を含む、ブロッキングされたユニバーサル識別子の組を維持することができる。たとえば、ユーザが、所与のデジタルコンポーネント(またはクライアントデバイス106に供給されたデータの一部分)に対応するミュート要素と対話することを仮定する。この例においては、ミュート要素とのユーザの対話は、今後(たとえば、少なくとも一定の時間量の間)、そのデジタルコンポーネント、または可能性として類似している(たとえば、同じコンテンツソースもしくはキャンペーンからの)デジタルコンポーネントを見ることをユーザが望んでいないことを示している。対話に応答して、アプリケーション107は、所与のデジタルコンポーネントについてのユニバーサル識別子をブロッキングされたユニバーサル識別子の組に追加することができ、次いで、それを使用して、所与のデジタルコンポーネントと同じユニバーサル識別子を有する他のデジタルコンポーネントの供給(または提示)を防止することができる。
In some implementations, an
アプリケーション107は、少なくとも所定の回数、供給/提示されたことがある(たとえば、1日、1週間、1カ月などの指定された時間期間にわたってX回を超えて提示されたことがある)デジタルコンポーネントのそれらのユニバーサル識別子を、ブロッキングされたユニバーサル識別子の組に追加することができる。たとえば、ユニバーサル識別子1A2B3Cを有するデジタルコンポーネントが、ここY日にわたって、X回を上回って特定のユーザに供給され提示されている場合、アプリケーション107は、ユニバーサル識別子1A2B3Cをブロッキングされたユニバーサル識別子の組に追加することができ、それは、クライアントデバイス106において記憶される。
ユニバーサル識別子を、ブロッキングされたユニバーサル識別子の組に追加するための、閾値提示数および/または指定時間期間は、コンテンツソースごとに、および/またはキャンペーンごとに指定され得る。たとえば、デジタルコンポーネントサーバは、キャンペーンのデジタルコンポーネントの提示が、クライアントデバイス106において、設定された持続時間(max_timeと称す)内に設定された回数(max_pptと称す)を上回ることを許可しないキャンペーンのルールの組を記憶することができる。そのようなシナリオにおいては、アプリケーション107は、デジタルコンポーネントを含む応答からデジタルコンポーネント識別子とeTLD+1ドメインとを読み出しながら、キャンペーンのルールを定義する情報も読み出すことができる。アプリケーション107は、ある時間期間にわたって特定のキャンペーンのデジタルコンポーネントを提示し、デジタルコンポーネントに関連するユニバーサル識別子の組を更新する一方、提示カウンタがmax_pptを上回った場合、ユニバーサル識別子をブロッキングされたユニバーサル識別子の組に追加することによって、ブロッキングされたユニバーサル識別子の組を更新する。たとえば、max_pptを2、max_timeを60秒と設定するデジタルコンポーネントサーバ108によって設定される特定のキャンペーンのルールをアプリケーション107が読み出すことを仮定する。さらには、特定のキャンペーンについてデジタルコンポーネントサーバ108によって提供された第1のデジタルコンポーネントをアプリケーション107が提示したことがあることをさらに仮定する。この時点において、アプリケーション107は、第1のデジタルコンポーネントについてのユニバーサル識別子を生成し、第1のデジタルコンポーネントについてのユニバーサル識別子を含むことによってユニバーサル識別子の組を更新し、対応する提示カウンタを0から1に増分する。max_ppt=2およびmax_time=60秒は、第1のデジタルコンポーネントの提示後60秒以内に、もう1つのデジタルコンポーネントしか、デジタルコンポーネントサーバ108の特定のキャンペーンに属するクライアントデバイス106において提示することができないことを意味することに留意されたい。
A threshold number of submissions and/or a specified time period for adding universal identifiers to the set of blocked universal identifiers may be specified per content source and/or per campaign. For example, the digital component server does not allow the presentation of the digital component of the campaign to exceed a set number of times (referred to as max_ppt) within a set duration (referred to as max_time) on the
上記の例を続けると、第1のデジタルコンポーネントの提示から20秒後に、アプリケーション107は、特定のキャンペーンについて、同じデジタルコンポーネントサーバ108から第2のデジタルコンポーネントを受け取ることを仮定する。アプリケーション107は、第2のデジタルコンポーネントについてのユニバーサル識別子を生成し、ユニバーサル識別子の組を、対応する提示カウンタを1から2に増分することによって更新する。この時点において、デジタルコンポーネントがデジタルサーバ108によって提供され、クライアントデバイス106において提示されたことがある特定のキャンペーンに関係付けられる回数は2である(すなわち、max_pptに等しい)ことに留意されたい。そのような状況においては、アプリケーション107は、ユニバーサル識別子をブロッキングされたユニバーサル識別子の組に追加し、それによって、その同じユニバーサル識別子(またはある範囲の値以内など、正確には同じでないこともある、別の形で一致するユニバーサル識別子)を有するデジタルコンポーネント(または他のデータ)の、クライアントデバイス106における提示が防止される。
Continuing the above example, assume that 20 seconds after presentation of the first digital component,
いくつかの実装形態においては、同じmax_timeを含むユニバーサル識別子の組は、先入れ先出し(first-in, first-out、FIFO)法を使用して実装され得る。FIFOにおける各エントリは、ペア{time_stamp, universal_identifier}である。また、デジタルコンポーネントサーバ108が、デジタルコンポーネントサーバの特定のキャンペーンに属しているデジタルコンポーネントについてmax_pptを2、およびmax_timeを60秒と設定すること、すなわち、デジタルコンポーネントサーバの特定のキャンペーンについて、最大で2つのデジタルコンポーネントが、60秒の持続時間でアプリケーション107において提示されることになることを仮定する。そのようなシナリオにおいては、アプリケーション107によって実装されるFIFOは2エントリを保持することになり、特定のキャンペーンからのデジタルコンポーネントがアプリケーション107において提示されるたびに、デジタルコンポーネントのキャンペーンのユニバーサル識別子と、デジタルコンポーネントがアプリケーション107において提示されたときのタイムスタンプとを含むエントリがFIFOにプッシュされる。そのような実装形態はまた、第1のエントリのタイムスタンプがmax_timeよりも古いとき、FIFOの第1のエントリを自動的に削除することができるエントリ削除法を含むことができる。いつの時点でも、FIFOがuniversal_identifierのmax_ppt出現よりも多く含んでいる場合、対応するエントリは、ブロッキングされたユニバーサル識別子の組に含められる。
In some implementations, sets of universal identifiers containing the same max_time may be implemented using a first-in, first-out (FIFO) method. Each entry in the FIFO is a pair {time_stamp, universal_identifier}. Also, the
いくつかの実装形態においては、アプリケーション107は、ブロッキングされたユニバーサル識別子の組からユニバーサル識別子を取り除くことができ、それによって、max_timeによって示される直近の時間期間に、キャンペーンおよび/またはユニバーサル識別子に関連するデジタルコンポーネントをユーザがブロッキングしなかった場合、削除されたユニバーサル識別子に関連付けられたデジタルコンポーネントは、クライアントデバイス106上のアプリケーション107において提示されることが許される。上記の例を続けると、アプリケーションは、ブロッキングされたユニバーサル識別子と、ユーザが対応するキャンペーンおよび/またはデジタルコンポーネントをブロッキングしたときのタイムスタンプとのペアによりFIFOを維持することができる。アプリケーションは、第1のエントリのタイムスタンプがmax_timeよりも古い場合、FIFIの第1のエントリを自動的に削除する。いつの時点でも、アプリケーション107は、FIFOにおけるブロッキングされたユニバーサル識別子の組を収集することができ、結果は、ブロッキングされたユニバーサル識別子の組である。
In some implementations, the
いくつかの実装形態においては、アプリケーション107は、クライアントデバイスにおけるデジタルコンポーネントの提示をユーザがブロッキングすることおよび/または許可することを可能にするユーザインターフェースを設けることができる。たとえば、ユーザインターフェースは、ユーザが今後見ないことを希望するデジタルコンポーネントをユーザが選定することを可能にすることができる。そのようなシナリオにおいては、アプリケーション107は、ユニバーサル識別子を生成し、ブロッキングされたユニバーサル識別子の組にそれを追加することができる。これにより、より良い透明性および制御がユーザにもたらされる。別のシナリオにおいては、ユーザインターフェースは、ブロッキングされたユニバーサル識別子の組をユーザがリセットすることを可能にすることができ、それにより、ブロッキングされたユニバーサル識別子の組からすべてのエントリが取り除かれて、クライアントデバイス106におけるすべてのデジタルコンポーネントの提示が可能になる。
In some implementations,
いくつかの実装形態においては、デジタルコンポーネントサーバ108によって提供されるデジタルコンポーネントは、ミュート要素を含むことができる。ミュート要素は、ユーザインターフェース制御部であり、ユーザインターフェース制御部は、デジタルコンポーネントに含められ、ミュート要素とのユーザ対話に応答して、ユーザが今後(たとえば、少なくとも一定の時間期間の間)、そのデジタルコンポーネント(または可能性として類似のデジタルコンポーネント)を見ることを望んでいないという指示を生成するスクリプトをトリガする。使用に際して、ユーザは、ユーザが今後、類似のデジタルコンポーネントを見ないことを希望している場合、ミュート要素と対話することができる。
In some implementations, the digital components provided by the
そのような実装形態においては、アプリケーション107は、信号の組を分析することによって、クライアントデバイス106において提示されるデジタルコンポーネントのミュート要素とのユーザ対話を決定するための技法および方法を含むことができる。たとえば、アプリケーション107は、デジタルコンポーネントのミュート要素とのユーザ対話を決定するためのヒューリスティックベースの手法を実装することができる。そのような実装形態においては、アプリケーション107は、デジタルコンポーネントサーバ108によって提供されるデジタルコンポーネントとのユーザ対話によって生成される信号を分析する。
In such implementations,
別の例においては、アプリケーション107は、マシン学習モデルを実装することができ、マシン学習モデルは、複数の訓練可能なパラメータを含み、信号を分析することによってクライアントデバイス106において提示されるデジタルコンポーネントのミュート要素とのユーザのユーザ対話を決定するように訓練される。マシン学習モデルは、決定木、人工ニューラルネットワーク、遺伝的プログラミング、論理プログラミング、サポートベクトルマシン、クラスタリング、強化学習、ベイズ推定など、特定の実施形態に適していると考えられる任意のモデルとすることができる。
In another example, the
別の例においては、デジタルコンポーネントが提示されるデジタルコンポーネントスロットを含むウェブサイト142は、デジタルコンポーネントのミュート要素とのユーザ対話を決定するための(たとえばウェブサイト142に埋め込まれているスクリプトについての)マシン実行可能命令を含むことができる。ミュート要素とのユーザ対話を検出した後、マシン実行可能命令は、1つまたは複数のアプリケーションユーザインタフェース(API)を使用してアプリケーション107に伝えることができる。
In another example, the website 142 that contains the digital component slot in which the digital component is presented has a set of instructions (eg, for scripts embedded in the website 142) for determining user interaction with the muted elements of the digital component. It may contain machine-executable instructions. After detecting user interaction with a mute element, machine-executable instructions can be communicated to
ブラウザなどのアプリケーション107が1つまたは複数のデジタルコンポーネントスロットを含むウェブサイト142をロードすると、アプリケーション107は、スロットごとにデジタルコンポーネントを要求することができる。いくつかの実装形態においては、アプリケーション107は、ブロッキングされたユニバーサル識別子の組、およびクライアントデバイス106(またはユーザ)が属しているユーザグループを表す確率的データ構造を生成することができる。いくつかの状況においては、アプリケーション107は、より大きい帯域幅消費およびより大きい消費コストを代償に、ブロッキングされたユニバーサル識別子の組およびユーザグループについて2つのカッコウフィルタを生成することができる。アプリケーション107は、クライアントデバイス106に、デジタルコンポーネントなどのデータの供給の調整をしやすくするために、デジタルコンポーネントを求める要求と一緒に確率的データ構造を送信することができる。
When an
いくつかの実装形態においては、確率的データ構造は、カッコウフィルタである。概して、カッコウフィルタはバケットのアレイを含み、各バケットは、b個のフィンガプリントを保持することができる。項目のフィンガプリントは、その項目のハッシュから導出されたビット文字列である。カッコウフィルタは、n個のハッシュ関数を使用し、それにより、b個の位置のうちのいずれかにおけるn個の異なるバケット内に項目を置くことが可能になる。典型的には、カッコウフィルタは、そのフィンガプリントおよびバケットサイズによって特定される。たとえば、(2, 4)カッコウフィルタは、2ビット長フィンガプリントを記憶し、カッコウアレイにおける各バケットは、最大で4つのフィンガプリントを記憶することができる。 In some implementations, the probabilistic data structure is a cuckoo filter. In general, a Cuckoo filter contains an array of buckets, each of which can hold b fingerprints. An item's fingerprint is a bit string derived from the item's hash. A cuckoo filter uses n hash functions, which allows an item to be placed in n different buckets at any of b positions. A Cuckoo filter is typically identified by its fingerprint and bucket size. For example, a (2, 4) Cuckoo filter stores 2-bit long fingerprints, and each bucket in the Cuckoo array can store up to 4 fingerprints.
いくつかの実装形態においては、アプリケーション107は、ユーザグループ識別子か、またはブロッキングされたユニバーサル識別子の組からのユニバーサル識別子かのいずれかと、アプリケーション107によって生成されたランダム変数とによってパラメータ化される疑似ランダム関数(pseudo random function、PRF)を使用する。たとえば、アプリケーション107によって生成されたランダム変数が、rand_var1a、rand_var1b、およびrand_var2であることを仮定する。また、バケット内の各項目がkビット整数であることを仮定する。アプリケーションは、PRF(ug_id, rand_var1a)、およびPRF(blocked_uid, rand_var1b)を使用してカッコウフィルタテーブルを生成することができ、ここで、ug_idは、コンテンツプロバイダのドメインに基づいてユーザグループのラベルにHMACを加えることによって生成されるユーザグループの識別子であり、blocked_uidは、ブロッキングされたユニバーサル識別子の組からの識別子である。この方法がすべてのユーザグループ識別子に関して、およびブロッキングされたユニバーサル識別子の組内のすべてのユニバーサル識別子に関して繰り返されることに留意されたい。
In some implementations,
先に述べたように、デジタルコンポーネントサーバ108は、セキュアマルチパーティ計算(MPC)システムを展開することができ、このMPCシステムは、いずれのMPCサーバもクリアテキストの情報にアクセスすることができない確率的データ構造に基づいて、デジタルコンポーネントを選定するようにセキュアMPC方法を行うための2つ以上の計算サーバを含む。たとえば、MPCシステムが2つの計算サーバMPC1およびMPC2を含むことを仮定する。ユーザプライバシーを保護するために、アプリケーション107は、確率的データ構造の秘密シェアを生成し、その秘密シェアのそれぞれをMPCシステムのそれぞれの計算サーバに送信する。
As previously mentioned, the
アプリケーション107は、ユーザグループ識別子、およびブロッキングされたユニバーサル識別子の組内のユニバーサル識別子について生成されるカッコウフィルタテーブルに基づいてベクトルBを生成することができる。ベクトルBは、Bi=PRF(rand_var2, i)-Aiと表すことができ、ここで、Aiは、カッコウフィルタテーブルであり、iは、ベクトルBiおよびカッコウフィルタテーブルAiの指数である。アプリケーション107がスロットのためのデジタルコンポーネントを求める要求を開始すると、アプリケーションは、rand_var1a、rand_var1b、およびrand_var2をMPC1に送信する。また、アプリケーション107は、ベクトルB、ならびにrand_var1aおよびrand_var1bをMPC2に送信する。計算サーバMPC1およびMPC2のいずれも、3つの秘密シェアおよびベクトルBのすべてにアクセスできるわけではないので、計算サーバはいずれも、カッコウフィルタテーブルを再作成することができず、それによってユーザプライバシーが維持されることに留意されたい。
いくつかの実装形態においては、アプリケーション107は、ブロッキングされたユニバーサル識別子の組のシェアを生成するために、分散型点関数(distributed point functions)を使用することができる。分散型点関数は、点関数の秘密シェアを表す。概して、点関数は、関数fi:[N]→[N]、ただし、x!=iおよびf(i)=1のとき、f(x)=0である。点関数fiの秘密シェアリングは、2つの関数gi:[N]→[N]、およびhi:[N]→[N]であり、それにより、セット[N]におけるすべてのxについて、fi(x)=gi(x)+hi(x)になる。さらには、関数hiまたはgi(ただし、両方ではない)の仕様を所与として、元の関数fiを回復することはできない。
In some implementations,
そのような実装形態は、カッコウフィルタを、2つのハッシュ関数F1およびF2を使用するテーブルとともに使用することができる。クライアントデバイスは、ユーザグループ識別子の組内の各ユーザグループ識別子について、ハッシュ関数F1およびF2をともに使用してユーザグループ識別子についての両方の可能な場所を計算することによって、カッコウフィルタを生成することができる。2つの可能な場所のうちの少なくとも一方が空である場合、クライアントデバイス110は、いずれかのテーブル内にある可能性もあり得る空の場所に要素を挿入して、そのユーザグループ識別子についての挿入方法を完了することができる。両方の場所が占有されている場合、クライアントデバイス110はランダムに1つの場所を抜き取り、その場所の中に現在ある項目を、挿入されることになる項目と入れ替える。次いで、クライアントデバイス110は、2つのハッシュ関数F1およびF2を再算出し、再度、挿入を試すことができる。この方法は、挿入が成功するまで、またはあまりにも多くの試みがユーザグループ識別子の組内の各ユーザグループ識別子について失敗するまで繰り返される。カッコウフィルタが構築された後、各ユーザグループ識別子ug_idは、テーブルの特定のインデックスに記憶される。 Such implementations can use a cuckoo filter with a table that uses two hash functions F1 and F2. The client device may generate a cuckoo filter for each user group identifier in the set of user group identifiers by calculating both possible locations for the user group identifier using hash functions F1 and F2 together. can. If at least one of the two possible locations is empty, the client device 110 inserts an element into the potentially empty location in either table to generate an insert for that user group identifier. You can complete the method. If both locations are occupied, client device 110 randomly picks one location and replaces the item currently in that location with the item to be inserted. Client device 110 can then recalculate the two hash functions F1 and F2 and try the insertion again. This method is repeated until the insertion succeeds or too many attempts fail for each user group identifier in the set of user group identifiers. After the Cuckoo filter is built, each user group identifier ug_id is stored in a specific index of the table.
ブロッキングされたユニバーサル識別子の組内の各ユニバーサル識別子(blocked_uid)の場合、分散型点関数gblocked_uid, 1およびgblocked_uid, 2に分割され得る点関数Gblocked_uidが必要であり、それにより、∀j∈[1,C]の場合、次の関係が満たされる。
i=F1(blocked_uid)の場合、
Gblocked_uid)(i)=gblocked_uid,1(i)+gblocked_uid,2(i)=blocked_uid
そうでない場合、
Gblocked_uid(i)=gblocked_uid,1(i)+gblocked_uid,2(i)=0
For each universal identifier (blocked_uid) in the set of blocked universal identifiers, we need a distributed point function G blocked_uid, which can be divided into g blocked_uid, 1 and g blocked_uid , 2 , so that ∀j∈ For [1,C], the following relations are satisfied:
If i=F 1 (blocked_uid), then
G blocked_uid) (i)=g blocked_uid,1 (i)+g blocked_uid,2 (i)=blocked_uid
if not,
G blocked_uid (i)=g blocked_uid,1 (i)+g blocked_uid,2 (i)=0
同様に、分散型点関数hblock_uid, 1およびhblock_uid, 2に分割され得る点関数Hblock_uidが必要であり、それにより、∀j∈[1,C]の場合、次の関係が満たされる。
i=F2(blocked_uid)の場合、
Hblocked_uid(i)=hblocked_uid,1(i)+hblocked_uid,2(i)=blocked_uid
そうでない場合、
Hblocked_uid(i)=hblocked_uid,1(i)+hblocked_uid,2(i)=0
Similarly, we need a point function H block_uid that can be split into distributed point functions h block_uid,1 and h block_uid,2 so that for ∀jε[1,C] the following relationship is satisfied:
For i=F 2 (blocked_uid),
H blocked_uid (i)=h blocked_uid,1 (i)+h blocked_uid,2 (i)=blocked_uid
if not,
H blocked_uid (i)=h blocked_uid,1 (i)+h blocked_uid,2 (i)=0
特定の点関数の分散型点関数は、複数の可能な点、たとえば、複数の可能なブロッキングされた識別子に関して評価され得るが、結果は常に、blocked_uidを除いてゼロである。分散型点関数は、データサイズが非常に小さく、それは、ユーザグループ識別子の他の暗号化された形態を送出することと比較して、帯域幅をそれほど使用せず、低いレイテンシによりネットワークを経由して送信され得る。 The distributed point function of a particular point function can be evaluated for multiple possible points, eg multiple possible blocked identifiers, but the result is always zero, except for blocked_uid. The distributed point function has a very small data size, it uses less bandwidth and travels over the network with lower latency compared to sending out other encrypted forms of user group identifiers. can be sent as
所与のblocked_uid、点関数F1、およびカッコウフィルタの対応する第1のテーブルについて(blocked_uidが第1のテーブルに挿入された場合)、アプリケーション107は、コンピューティングシステムMPC1について分散型点関数gblocked_uid, 1を生成し、コンピューティングシステムMPC2について分散型点関数gblocked_uid, 2を生成する。同様に、所与のblocked_uid、点関数F2、およびカッコウフィルタの対応する第2のテーブルについて(blocked_uidが第2のテーブルに挿入された場合)、アプリケーション107は、コンピューティングシステムMPC1について分散型点関数hblocked_uid, 1を生成し、コンピューティングシステムMPC2について分散型点関数hblocked_uid, 2を生成する。
For a given blocked_uid, point function F1, and corresponding first table of the cuckoo filter (if blocked_uid is inserted into the first table),
同様に、アプリケーション107は、分散型点関数を使用して、アプリケーション107が関連付けられるユーザグループのすべてのユーザグループ識別子の秘密シェアを生成することができる。所与のug_id、点関数F1、およびカッコウフィルタの対応する第1のテーブルについて(blocked_uidが第1のテーブルに挿入された場合)、アプリケーション107は、コンピューティングシステムMPC1について分散型点関数gug_id, 1を生成し、コンピューティングシステムMPC2について分散型点関数gug_id, 2を生成する。同様に、所与のug_id、点関数F2、およびカッコウフィルタの対応する第2のテーブルについて(blocked_uidが第2のテーブルに挿入された場合)、アプリケーション107は、コンピューティングシステムMPC1について分散型点関数hug_id, 1を生成し、コンピューティングシステムMPC2について分散型点関数hug_id, 2を生成する。
Similarly,
クライアントデバイス106において実行するアプリケーション107は、MPCシステムの対応する計算サーバに、対応する秘密シェアを含むデジタルコンポーネント要求を送信することができる。たとえば、アプリケーション107は、確率的データ構造(すなわち、カッコウフィルタ)の第1の秘密シェアを含むデジタルコンポーネントを求める要求を生成し、MPC1に送信する。要求パラメータは、rand_var1a、rand_var1b、およびrand_var2を含む。同様に、アプリケーション107はまた、確率的データ構造の第2の秘密シェアを含むデジタルコンポーネントを求める要求をMPC2に送信する。要求パラメータは、ベクトルB、rand_var1a、およびrand_var1bを含む。
An
いくつかの実装形態においては、秘密シェアを受け取った後、MPCシステム内の各計算サーバはそれぞれ、デジタルコンポーネントを選定するために、確率的データ構造の秘密シェアを使用するセキュアMPC方法を行う。たとえば、MPC1は、アレイTを算出することができ、ここでアレイのi番目の要素は、Ti=PRF(rand_var2, i)である。TおよびBがカッコウベクトルテーブルAの2つの追加の秘密シェアであることに留意されたい。本明細書に説明する目的で、2つの追加の秘密シェアは、[Ai, 1]および[Ai, 2]と表される。また、MPC1は[Ai, 1]を算出することができ、MPC2はアプリケーション107から[Ai, 2]を受け取ることにも留意されたい。
In some implementations, after receiving the secret share, each computational server in the MPC system performs a secure MPC method that uses the secret share of the probabilistic data structure to select the digital component. For example, MPC1 can compute an array T, where the i-th element of the array is T i =PRF(rand_var2, i). Note that T and B are two additional secret shares of cuckoo vector table A. For purposes of this description, the two additional secret shares are denoted as [A i,1 ] and [A i,2 ]. Also note that
上記の例を続けると、各デジタルコンポーネントの資格を決定する場合、デジタルコンポーネントがそれぞれ、ブロッキングされたユニバーサル識別子の組によってブロッキングされているかどうか、およびユーザについてのユーザグループ識別子(たとえば、興味グループ識別子)が各デジタルコンポーネントについての選定値に対応するユーザグループ識別子と一致しているかどうかの決定が行われ得る。この評価の一部として、MPC1は、次を算出することができる。
[loc1, 1]=[AH1(ug_id(sv)), 1]==PRF(ug_id(sv), rand_var2)
[loc2, 1]=[AH2(ug_id(sv)), 1]==PRF(ug_id(sv), rand_var2)
[block1, 1]=[AH1(blocked_uid(sv)), 1]==RF(blocked_uid(sv), rand_var2)
[block2, 1]=[AH2(blocked_uid(sv)), 1]==RF(blocked_uid(sv), rand_var2)
Continuing the above example, when determining the entitlement of each digital component, each digital component is blocked by a set of blocked universal identifiers and a user group identifier (e.g., interest group identifier) for the user. matches the user group identifier corresponding to the selected value for each digital component. As part of this evaluation, MPC1 can calculate:
[loc 1, 1 ]=[A H1 (ug_id(sv)), 1]==PRF(ug_id(sv), rand_var2)
[loc 2, 1 ]=[A H2 (ug_id(sv)), 1]==PRF(ug_id(sv), rand_var2)
[block 1, 1 ]=[A H1 (blocked_uid(sv)), 1]==RF(blocked_uid(sv), rand_var2)
[block 2, 1 ]=[A H2 (blocked_uid(sv)), 1]==RF(blocked_uid(sv), rand_var2)
同様に、MPC2は、次を算出することができる。
[loc1, 2]=[AH1(ug_id(sv)), 2]==PRF(ug_id(sv), rand_var2)
[loc2, 2]=[AH2(ug_id(sv)), 2]==PRF(ug_id(sv), rand_var2)
[block1, 2]=[AH1(blocked_uid(sv)), 2]==PRF(blocked_uid(sv), rand_var2)
[block2, 2]=[AH2(blocked_uid(sv)), 2]==PRF(blocked_uid(sv), rand_var2
ここで、svは、Table 2(表2)を参照して説明する選定値である。
Similarly, MPC2 can compute:
[loc 1, 2 ]=[A H1 (ug_id(sv)), 2]==PRF(ug_id(sv), rand_var2)
[loc 2, 2 ]=[A H2 (ug_id(sv)), 2]==PRF(ug_id(sv), rand_var2)
[block 1, 2 ]=[A H1 (blocked_uid(sv)), 2]==PRF(blocked_uid(sv), rand_var2)
[block 2, 2 ]=[A H2 (blocked_uid(sv)), 2]==PRF(blocked_uid(sv), rand_var2
where sv is a selected value described with reference to Table 2.
MPCシステムの各計算サーバは、たとえ計算サーバがMPCシステムの他の計算サーバの秘密シェアにアクセスすることができなくても、上記に決定された値を使用して、秘密シェア情報に基づいて異なるデジタルコンポーネントの資格を決定することができる。概して言えば、MPCの各計算サーバは、MPCシステムのその計算サーバが受け取った確率的データ構造の秘密シェア内で2つの場所を調べることによって、各選定値(たとえば、各デジタルコンポーネントについてのスコア、ランキング、ビッド(bid)、または他の選定値)に対応する特定のユーザグループ識別子(たとえば、興味グループ識別子)がクライアントデバイス106によって提供される確率的データ構造に含まれているかどうかを決定する。MPCシステムの各計算サーバはまた、各選定値に対応するユニバーサル識別子が、そのMPCが受け取った確率的データ構造の秘密シェアにおいてクライアントデバイスによって提供される確率的データ構造に含まれていたブロッキングされたユニバーサル識別子の組に含まれているかどうかも決定している。デジタルコンポーネントに配布の資格があるようにするために、そのデジタルコンポーネントについての選定値に関連するユーザグループ識別子は、確率的データ構造内に見つけられなくてはならないが、デジタルコンポーネントについてのユニバーサル識別子は、確率的データ構造内に見つけることができない。
Each computation server in the MPC system differs based on the secret share information, using the value determined above, even if the computation server cannot access the secret shares of other computation servers in the MPC system. Entitlement of a digital component can be determined. Generally speaking, each computational server in the MPC determines each selection value (e.g., score for each digital component, determining whether a particular user group identifier (eg, interest group identifier) corresponding to a ranking, bid, or other selection value) is included in the probabilistic data structure provided by the
上記に挙げた算出により結果的に、確率的データ構造のそれらのそれぞれの秘密シェアにおける2つの指定された場所のうちのいずれかの中に、デジタルコンポーネントについての選定値に関連するユーザグループ識別子(たとえば、興味グループ識別子)をMPC計算サーバのいずれかが探し出したかどうかということを示すことになる。たとえば、MPC計算サーバは、loc1またはloc2の秘密シェアにおいて値1を算出するためのセキュアMPC方法を実行することになり、すなわち、loc1についての値は、[loc1, 1]および[loc1, 2]から再構成されることもあり得る。同様に、loc2についての値は、MPC計算サーバが利用可能な確率的データ構造の2つの場所のうちのいずれかが選定値に関連するユーザグループ識別子との一致を示す場合、[loc2, 1]および[loc2, 2]から再構成されることもあり得る。そうでない場合、MPCサーバは、選定値に関連するユーザグループ識別子とユーザについてのユーザグループ識別子との間で特定された一致がなかったことを示す、loc1とloc2との両方についての秘密シェアにおいて値0を算出することになる。選定値に資格があるようにするために、および対応するデジタルコンポーネントにクライアントデバイス106に供給される資格があるようにするために、選定値に関連するユーザグループ識別子は、MPCシステムによって場所のうちの1つにおいて特定されなくてはならない。ただし、デジタルコンポーネントが(たとえば、ブロッキングされたユニバーサル識別子の組内にそのユニバーサル識別子を含めることによって)ブロッキングされる場合には、たとえMPCのうちの1つがデジタルコンポーネントについての選定値のユーザグループ識別子とユーザのユーザグループ識別子との間の一致を特定していても、依然デジタルコンポーネントは供給される資格がないことになる。
The above-listed calculations result in user group identifiers ( For example, it will indicate whether the Interest Group Identifier) has been located by any of the MPC calculation servers. For example, an MPC computation server would run a secure MPC method to compute the
上記に示す関係により、選定値に対応するデジタルコンポーネントがブロッキングされているかどうかに関して、デジタルコンポーネントのユニバーサル識別子がブロッキングされたユニバーサル識別子の組内に含められていることを確率的データ構造の2つの場所のうちのいずれかが示す場合、MPC1は、block1またはblock2のうちのいずれかについて1を算出することになる。そうでない場合、MPCサーバは、block1とblock2の両方について0を算出することになる。MPCサーバによってユニバーサル識別子が確率的データ構造内に含められていると決定される場合、デジタルコンポーネントは、クライアントデバイスに供給される資格がなくなる。 With respect to whether the digital component corresponding to the selection value is blocked, the relationship shown above ensures that the universal identifier of the digital component is contained within the set of blocked universal identifiers in two places in the probabilistic data structure. indicates, MPC1 will compute 1 for either block 1 or block 2 . Otherwise, the MPC server will compute 0 for both block 1 and block 2 . If the MPC server determines that the universal identifier is included within the probabilistic data structure, the digital component is ineligible to be served to the client device.
各選定値および対応するデジタルコンポーネントの資格を決定するために、MPC1およびMPC2の結果は、デジタルコンポーネントがブロッキングされているかどうか、および選定値に関連するユーザグループ識別子が確率的データ構造内に見つかったかどうかを決定するために評価されなくてはならない。上記の例を続けると、資格決定の一部として、MPC1は、たとえば、次のように秘密ブール型パラメータ[is_candidatesv, 1]を算出することによって、各候補選定値(および候補デジタルコンポーネント)の資格を決定することができる。
[is_candidatesv, 1]=(1-[loc1, 1==0]x[loc2, 1==0])x[block1, 1==0]x[block2, 1==0]
同様に、MPC2は、次のように秘密ブール型パラメータ[is_candidatesv, 2]を算出することができる。
[is_candidatesv, 2]=(1-[loc1, 2==0]x[loc2, 2==0])x[block1, 2==0]x[block2, 2==0]
To determine the eligibility of each selection value and corresponding digital component, the results of MPC1 and MPC2 are determined whether the digital component is blocked and whether the user group identifier associated with the selection value was found within the probabilistic data structure. must be evaluated to determine whether Continuing with the above example, as part of the eligibility determination, MPC1 determines each candidate candidate value (and candidate digital component) by computing a secret boolean parameter [is_candidate sv, 1 ], for example: eligibility can be determined.
[is_candidate sv, 1 ]=(1-[loc 1, 1 ==0]x[loc 2, 1 ==0])x[block 1, 1 ==0]x[block 2, 1 ==0]
Similarly, MPC2 can compute a secret boolean parameter [is_candidate sv, 2 ] as follows.
[is_candidate sv, 2 ]=(1-[loc 1, 2 ==0]x[loc 2, 2 ==0])x[block 1, 2 ==0]x[block 2, 2 ==0]
MPCが利用できる確率的データ構造の秘密シェアの2つの指定場所のうちのいずれかの中にユーザのユーザグループ識別子(たとえば、興味グループ識別子)が見つかり、またMPCが利用できる確率的データ構造の秘密シェアの2つの指定場所のうちのいずれかの中にデジタルコンポーネントのユニバーサル識別子が見つからないとき、これらの動作により、クライアントデバイス106に供給するためのデジタルコンポーネントを選定するための資格を示す値1がもたらされる。MPCによって調べられる2つの指定場所のうちのいずれかの中にユニバーサル識別子が見つかった場合、値は0になり、デジタルコンポーネントに供給の資格がなくなる。これらの結果は、図2を参照してより詳細に説明するように、クライアントデバイスに供給するためのデジタルコンポーネントを選定するデジタルコンポーネント選定方法の一部として使用することができる。たとえば、2つの秘密シェアが[is_candidatesv, 1]および[is_candidatesv, 2]である秘密メッセージが値0である場合、その選定値は、資格がないと考えられることになり、それにより、その選定値を使用して、対応するデジタルコンポーネントのクライアントデバイス106への供給をトリガすることはできなくなる。
The user's user group identifier (e.g., interest group identifier) is found in one of two designated locations in the secret share of the probabilistic data structure available to the MPC, and the secret of the probabilistic data structure available to the MPC. When the universal identifier for the digital component is not found in either of the two designated locations of the share, these operations result in a value of 1 indicating eligibility for selecting the digital component for serving to the
いくつかの実装形態においては、デジタルコンポーネントのソースは、デジタルコンポーネントについての選定基準を、選定値を含んで、MPCシステムに提供することができる。選定値は、デジタルコンポーネントサーバ108(またはコンテンツソース)が、デジタルコンポーネントの提示またはデジタルコンポーネントとのユーザ対話を行いたがっている量を示すことができる。MPCシステムは、クライアントデバイス106から受け取った今後のデジタルコンポーネント要求についての選定基準を記憶することができる。各デジタルコンポーネントについて、コンテンツソースはまた、デジタルコンポーネントについての追加のデータ、たとえば、メタデータをアップロードすることができる。デジタルコンポーネントについての追加のデータは、デジタルコンポーネントに対応するユーザグループについてのユーザグループ識別子(たとえば、興味グループ識別子)を含むことができる。たとえば、コンテンツソースは、(デジタルコンポーネントの組を含む)キャンペーンを管理することができ、ここで、デジタルコンポーネントは、ユーザグループのメンバーであるユーザのクライアントデバイス106に配布される。
In some implementations, the source of the digital component can provide selection criteria for the digital component, including selection values, to the MPC system. The preference value can indicate how much the digital component server 108 (or content source) is willing to present the digital component or user interaction with the digital component. The MPC system can store selection criteria for future digital component requests received from
デジタルコンポーネントについての追加のデータは、デジタルコンポーネントに資格がある文脈、たとえば、クライアントデバイス106の場所、アプリケーション107に対して選定される話されている言語、デジタルコンポーネントとともに提示可能なリソースのUniversal Resource Locators (URL)、および/またはデジタルコンポーネントとともに提示不可能なリソースのURLの除外を示す文脈的選定信号を含むことができる。デジタルコンポーネントについてのこのデータは、たとえば一意の識別子、デジタルコンポーネントの取得可能元のドメイン、および/またはデジタルコンポーネントについての他の適切なデータを使用して、デジタルコンポーネントを特定することもできる。
Additional data about the digital component may include the context in which the digital component is entitled, e.g., the location of the
いくつかの実装形態においては、MPCシステムは、デジタルコンポーネント要求について、MPCシステムに提供されるデジタルコンポーネントについての選定値をキャッシュする、または別の形で記憶する。この例においては、デジタルコンポーネントおよび選定値についての文脈的信号は、そのデジタルコンポーネント要求に含まれている文脈的信号を含むことができる。 In some implementations, the MPC system caches or otherwise stores preference values for digital components provided to the MPC system for digital component requests. In this example, the contextual signal for the digital component and selection value can include the contextual signal included in the digital component request.
いくつかの実装形態においては、MPCシステムの各計算サーバは、2段階のルックアップテーブル(lookup table、LUT)を使用して、デジタルコンポーネントについての選定値を記憶する。第1の段階は、ユーザグループ要求キー(UG_Request_Key)によってキー付けされ得る。UG_Request_Keyは、文脈的信号の組、たとえば、デジタルコンポーネント要求の文脈的信号の組(たとえば、URL、場所、言語など)、またはデジタルコンポーネントに配布される資格がある文脈的信号の組に基づく複合メッセージとすることができる。つまり、第1の段階のLUTは、文脈的信号の組に基づいてキー付けされ得る。第1の段階のキーは、たとえばSHA256などのハッシュ関数を使用するUG_Request_Keyのハッシュとすることができる。このキーは、指定された数のビット、たとえば、16ビット、32ビット、または別の適切な数のビットに切り詰めることができる。第1の段階のLUTにおける各キーUG_Request_Keyについての値は、UG_Request_Keyの文脈的信号を含むデジタルコンポーネント要求について資格があるデジタルコンポーネントについてのデータを含む第2の段階のLUTの行を示すことができる。第1の段階のLUTの一例が、Table 1(表1)として下記に示されている。 In some implementations, each computational server in the MPC system uses a two-level lookup table (LUT) to store selected values for digital components. The first stage may be keyed by a User Group Request Key (UG_Request_Key). UG_Request_Key is a set of contextual signals, e.g., a digital component request contextual signal set (e.g., URL, location, language, etc.), or a composite message based on a set of contextual signals eligible to be delivered to the digital component. can be That is, the first stage LUT can be keyed based on the set of contextual signals. The first stage key can be a hash of UG_Request_Key using a hash function such as SHA256, for example. This key can be truncated to a specified number of bits, eg, 16 bits, 32 bits, or another suitable number of bits. A value for each key UG_Request_Key in the first stage LUT may indicate a row in the second stage LUT that contains data about the digital component that is eligible for the digital component request that contains the UG_Request_Key's contextual signal. An example of the first stage LUT is shown below as Table 1.
第2の段階のLUTは、第1の段階のLUTにおけるユーザグループ要求キーUG_Request_Keyとユーザグループ識別子との組合せに基づいてキー付けされ得る。第2の段階のLUTにおける各行は、特定のデジタルコンポーネントについての特定の選定値向けとすることができる。たとえば、コンテンツソースは、同じデジタルコンポーネントについて異なる選定値を提出することができ、各選定値は、文脈的信号の異なる組、および/または異なるユーザグループ識別子向けである。したがって、デジタルコンポーネントについての選定値は、文脈に基づいて変わる場合がある。 The second stage LUT may be keyed based on the combination of the user group request key UG_Request_Key and the user group identifier in the first stage LUT. Each row in the second stage LUT may be for a particular selected value for a particular digital component. For example, a content source may submit different preferences for the same digital component, each preference for a different set of contextual signals and/or a different user group identifier. Therefore, the chosen value for the digital component may change based on the context.
コンテンツソース(たとえば、デジタルコンポーネントサーバ108)は、デジタルコンポーネントを、コンテンツソースがデジタルコンポーネントの提示を望んでいるユーザグループに関連付ける、たとえば、リンクする、またはマッピングすることができる。たとえば、デジタルコンポーネントサーバ108は、男性のバスケットボールシューズに関係するデジタルコンポーネントが、バスケットボールおよび/またはシューズに興味を示したことがある男性に提示すべきであることを指定することができる。この例においては、デジタルコンポーネントサーバ108は、バスケットボールおよび/またはシューズに興味を示したことがある男性を含むユーザグループについてのユーザグループ識別子にデジタルコンポーネントが対応することを示すデータをMPCシステムに提供することができる。
A content source (eg, digital component server 108) can associate, eg, link or map, a digital component to a user group to which the content source desires presentation of the digital component. For example, the
いくつかの実装形態においては、第2の段階のLUTにおける行のキーは、その行のデジタルコンポーネントについてユーザグループ要求キーUG_Request_Keyとユーザグループ識別子との組合せに基づいて生成されるハッシュまたはコードとすることができる。たとえば、キーは、この組合せのハッシュベースのメッセージ認証コード(HMAC)とすることができ、それは、HMACSHA256(UG_Request_Key, ug_id)と表すことができる。 In some implementations, the row key in the second stage LUT is a hash or code generated based on the combination of the user group request key UG_Request_Key and the user group identifier for the digital component of the row. can be done. For example, the key can be the hash-based message authentication code (HMAC) of this combination, which can be represented as HMAC SHA256 (UG_Request_Key, ug_id).
先の男性のバスケットボールシューズの例を続けると、男性のバスケットボールシューズグループにおけるユーザに提示されることになるデジタルコンポーネントについての情報を含む行についての第2の段階のルックアップキーは、男性のバスケットボールシューズグループについてのユーザグループ要求キーUG_Request_Keyとユーザグループ識別子ug_idとの組合せとすることができる。デジタルコンポーネントは異なる文脈で提示され得るので、第2の段階のルックアップテーブルは、男性のバスケットボールシューズグループについてのデジタルコンポーネントおよびユーザグループ識別子について、複数の行を含むことができ、それぞれの行は、異なるユーザグループ要求キーUG_Request_Keyおよび異なる値を含む。 Continuing with the men's basketball shoes example above, the second stage lookup key for the row containing information about the digital component to be presented to the user in the men's basketball shoes group is men's basketball shoes It can be a combination of the user group request key UG_Request_Key and the user group identifier ug_id for the group. Because the digital components can be presented in different contexts, the second stage lookup table can contain multiple rows for the digital component and the user group identifier for the men's basketball shoe group, each row: Contains different user group request keys UG_Request_Key and different values.
第2の段階のLUTの各行の値は、デジタルコンポーネントについての選定値およびデジタルコンポーネントについての他のデータ、たとえば、デジタルコンポーネント、またはデジタルコンポーネントのダウンロード可能元のネットワーク場所などを特定するメタデータとすることができる。値は、デジタルコンポーネント情報要素dc_information_elementとすることができ、それは、選定値およびメタデータを有するバイトアレイとすることができる。バイトアレイは、クライアントデバイス106のアプリケーション107または信頼済みプログラム、およびコンピューティングシステムMPC1およびMPC2が選定値およびメタデータを得るように構文解析することができる特定の形式を有することができる。第2の段階のLUTの一例が、Table 2(表2)として下記に示されている。
Each row value in the second-stage LUT is a selection value for the digital component and other data about the digital component, such as metadata that identifies the digital component or the network location from which the digital component can be downloaded. be able to. The value can be a digital component information element dc_information_element, which can be a byte array with selected values and metadata. The byte array may have a particular format that can be parsed by
第2の段階のLUTは、特定のデジタルコンポーネントに、特定のユーザグループ識別子ug_idに、および第1の段階のルックアップキーUG_Request_Keyによって定義される文脈的信号の特定の組に、選定値をマッピングする。そうすることによって、第2の段階のLUTは、デジタルコンポーネントについての選定値が意図されるデジタルコンポーネントスロットの特定の文脈を示す。これにより、デジタルコンポーネントサーバ108は、文脈的信号およびユーザのグループメンバーシップによって定義される異なる文脈について同じデジタルコンポーネントについての異なる選定値を指定することが可能になる。デジタルコンポーネント要求が提示されることになるユーザが特定のユーザグループ識別子ug_idによって特定される特定のユーザグループのメンバーであること、およびデジタルコンポーネントが第1の段階のルックアップキーの文脈的信号によって定義される特定の文脈で提示されることになることを示すデジタルコンポーネント要求を受け取った場合、一致するユーザグループ識別子および一致する第1の段階のルックアップキーを有する第2の段階のLUTにおける選択値はいずれも、要求に応答して配布されるように選定される候補である。
The second stage LUT maps the selection value to a specific digital component, to a specific user group identifier ug_id, and to a specific set of contextual signals defined by the first stage lookup key UG_Request_Key. . By doing so, the second stage LUT indicates the specific context of the digital component slot for which the selection value for the digital component is intended. This allows the
図2は、クライアントデバイスに配布するためのデジタルコンポーネントを選定するための例示的な方法200のスイムレーン図である。方法200の動作は、たとえば、MPCシステムのコンピューティングシステムMPC1およびMPC2によって実装され得る。方法200の動作はまた、非一時的とすることができる1つまたは複数のコンピュータ可読媒体において記憶されている命令として実装され得、1つまたは複数の処理装置による命令の実行により、1つまたは複数のデータ処理装置は、方法200の動作を行うことが可能になる。
FIG. 2 is a swimlane diagram of an
コンピューティングシステムMPC1は、資格のある選定値を特定する(202)。コンピューティングシステムMPC1は、図1を参照して詳細に上述したように、アプリケーション107から受け取ったデジタルコンポーネント要求について資格のある選定値を特定することができる。たとえば、アプリケーション107がスロットのためのデジタルコンポーネントを求める要求を開始すると、アプリケーションは、デジタルコンポーネント要求におけるパラメータとしてrand_var1a、rand_var1b、およびrand_var2をMPC1に送信することができる。デジタルコンポーネント要求はまた、デジタルコンポーネント要求についての文脈的信号に基づいて生成された第1の段階のルックアップキー、たとえば、SHA256(UG_Request_Key)を含むことができる。
Computing system MPC1 identifies qualified preferences (202). Computing system MPC1 may identify qualified preferences for digital component requests received from
コンピューティングシステムMPC1は、デジタルコンポーネント要求の第1の段階のルックアップキーを使用して資格がある選定値を特定することができる。コンピューティングシステムMPC1は、第1の段階のLUTにアクセスし、第1の段階のルックアップキーを使用して、第2の段階のLUTの行を特定することができ、この第2の段階のLUTの行は、第1の段階のルックアップキーによって表される文脈的信号の組について、提示される資格がある、たとえば、選定値が受け取られたことがある、デジタルコンポーネントについての選定値の情報を含む。たとえば、上述したように、第2の段階のLUTの各行は、デジタルコンポーネントと、文脈的信号の組に基づいている第2の段階のルックアップキーとについての情報を含む。したがって、コンピューティングシステムMPC1は、第1の段階のルックアップキーを使用して、デジタルコンポーネント要求において受け取った第1の段階のルックアップキーによって定義される文脈的信号の組と一致する文脈的信号の組を有する第2の段階のLUTの行を特定することができる。これらの行は、提示される資格がある、またはデジタルコンポーネント要求において受け取った第1の段階のルックアップキーによって定義される文脈について資格のある選定値を有する、デジタルコンポーネントについての情報を含む。 Computing system MPC1 may identify eligible selection values using the first stage lookup key of the digital component request. Computing system MPC1 can access the first-stage LUT and use the first-stage lookup key to identify rows in the second-stage LUT; Rows of the LUT are eligible to be presented for the set of contextual signals represented by the first stage lookup keys, e.g. Contains information. For example, as described above, each row of the second stage LUT contains information about a digital component and a second stage lookup key that is based on a set of contextual signals. Accordingly, computing system MPC1 uses the first stage lookup key to generate a contextual signal matching the set of contextual signals defined by the first stage lookup key received in the digital component request. A row of the second stage LUT can be identified that has a set of . These rows contain information about digital components that are eligible to be presented or have eligible preferences for the context defined by the first stage lookup key received in the digital component request.
コンピューティングシステムMPC2は、資格のある選定値を特定する(204)。コンピューティングシステムMPC2は、クライアントデバイス106から受け取ったデジタルコンポーネント要求についての資格のある選定値を特定することができる。たとえば、アプリケーション107がスロットのためのデジタルコンポーネントを求める要求を開始すると、アプリケーションは、ベクトルB、rand_var1a、およびrand_var1bをMPC1に送信する。デジタルコンポーネント要求はまた、デジタルコンポーネント要求についての文脈的信号に基づいて生成された第1の段階のルックアップキー、たとえば、SHA256(UG_Request_Key)を含むことができる。コンピューティングシステムMPC2が受け取ったデジタルコンポーネント要求の第1の段階のルックアップキーは、コンピューティングシステムMPC1が受け取った第1の段階のルックアップキーと同じであってよい。
Computing system MPC2 identifies qualifying selections (204). Computing system MPC2 may identify qualified preferences for digital component requests received from
簡単にするために、方法200の残りのステップについては、確率的データ構造に関して、デジタルコンポーネント要求に応答して、クライアントデバイス106においてアプリケーション107に配布するためのデジタルコンポーネントを選定するという観点で説明する。MPCシステムは、アプリケーション107において提示するためのデジタルコンポーネントを選定することができる。たとえば、MPC1とMPC2はともに、後述するように、デジタルコンポーネントを選定するようにセキュアMPC方法を実行する。
For simplicity, the remaining steps of
コンピューティングシステムMPC2は、デジタルコンポーネント要求の第1の段階のルックアップキーを使用して資格がある選定値を特定することができる。コンピューティングシステムMPC2は、第1の段階のLUTにアクセスし、第1の段階のルックアップキーを使用して、第2の段階のLUTの行を特定することができ、この第2の段階のLUTの行は、第1の段階のルックアップキーによって表される文脈的信号の組について、提示される資格がある、たとえば、選定値が受け取られたことがある、デジタルコンポーネントについての情報を含む。上述したように、コンピューティングシステムMPC1およびMPC2はそれぞれ、同じ情報を含むそれぞれの2段階のLUTを維持することができる。MPC2と同様にMPC1もまた、デジタルコンポーネント要求の第1の段階のルックアップキーを使用して資格のある選定値を特定することができる。 Computing system MPC2 may identify eligible selection values using the first stage lookup key of the digital component request. Computing system MPC2 can access the first-stage LUT and use the first-stage lookup key to identify rows in the second-stage LUT; The rows of the LUT contain information about the digital components that are eligible to be presented, e.g., have received selected values, for the set of contextual signals represented by the first stage lookup keys. . As described above, computing systems MPC1 and MPC2 can each maintain respective two-level LUTs containing the same information. MPC1, like MPC2, can also use the first stage lookup key of the digital component request to identify qualified selection values.
資格のある選定値ごとに、コンピューティングシステムMPC1およびMPC2は、選定値およびそのデジタルコンポーネントが、デジタルコンポーネント要求に応答してアプリケーション107に配布されるために選定される候補であるかどうかを決定する(206)。候補選定値は、ユーザについてのユーザグループ識別子、たとえば、メンバーとしてユーザを含むユーザグループについてのユーザグループ識別子と一致するユーザグループ識別子を有し、かつブロッキングされたユニバーサル識別子の組内に含まれていないユニバーサル識別子を有するデジタルコンポーネントについての資格のある選定値である。上述したように、各デジタルコンポーネントは、デジタルコンポーネントサーバ108が、デジタルコンポーネントが提示されるべきであることを示したメンバーを含む1つまたは複数のユーザグループにマッピングされ得る。この情報は、上述したように、第2の段階のLUTについての第2の段階のルックアップキーの一部である。
For each eligible selection value, computing systems MPC1 and MPC2 determine whether the selection value and its digital component are candidates to be selected for distribution to
第2の段階のLUTにおける行のデジタルコンポーネントは、(各デジタルコンポーネントについての)各選定値に対応する行についての第2の段階のルックアップキーの一部であるそのユーザグループ識別子ug_idが、MPCシステムのその計算サーバが受け取った確率的データ構造内で2つの場所を調べることによって、クライアントデバイス106によって提供された確率的データ構造内に含まれる場合、選定の候補である。しかしながら、(たとえば、ブロッキングされたユニバーサル識別子の組内にそのユニバーサル識別子を含めることによって)デジタルコンポーネントがブロッキングされる場合には、たとえMPCシステムがデジタルコンポーネントについての選定値のユーザグループ識別子とユーザのユーザグループ識別子との間の一致を特定していても、依然、デジタルコンポーネントは供給される資格がないことになる。
The digital components of the rows in the second stage LUT are part of the second stage lookup key for the row corresponding to each selected value (for each digital component) whose user group identifier ug_id is the MPC If it is contained within the probabilistic data structure provided by the
コンピューティングシステムMPC1およびMPC2は、どのデジタルコンポーネントが候補であるかについて、またはメンバーとしてユーザを含むユーザグループについてMPC1もMPC2もわからないように、秘密シェアを使用するセキュアMPC技法を使用して候補選定値を特定することができる。これを行うために、コンピューティングシステムMPC1は、ユーザグループ識別子ug_idに関連付けられ、選定の候補であるデジタルコンポーネントに関連付けられる各選定値について候補パラメータ[is_candidatesv, 1]の第1のシェアを算出する。同様に、コンピューティングシステムMPC2は、同じデジタルコンポーネントに関連付けられるユーザグループ識別子ug_idに関連付けられる各選定値について候補パラメータ[is_candidatesv, 2]の第2のシェアを算出する。候補パラメータ[is_candidatesv, 1]は、第1の秘密シェアであり、候補パラメータ[is_candidatesv, 2]は、第2の秘密シェアである。 Computing systems MPC1 and MPC2 are candidates using a secure MPC technique that uses secret shares so that neither MPC 1 nor MPC 2 know which digital components are candidates, or about user groups that include users as members. Choice values can be specified. To do this, the computing system MPC1 calculates a first share of the candidate parameter [is_candidate sv, 1 ] for each selection value associated with the user group identifier ug_id and associated with the digital component that is a candidate for selection. . Similarly, the computing system MPC2 calculates a second share of the candidate parameter [is_candidate sv, 2 ] for each candidate value associated with the user group identifier ug_id associated with the same digital component. The candidate parameter [is_candidate sv, 1 ] is the first secret share and the candidate parameter [is_candidate sv, 2 ] is the second secret share.
コンピューティングシステムMPC1およびMPC2は、下記のTable 3(表3)に示されている動作を支持する秘密シェアリング技法または秘密シェアリングライブラリを使用することができる。これらの動作を支持する1つの例示的な秘密シェアリング技法が、Security through Private Information Aggregation(SEPIA)である。 Computing systems MPC 1 and MPC 2 may use secret sharing techniques or secret sharing libraries that support the operations shown in Table 3 below. One exemplary secret sharing technique that supports these operations is Security through Private Information Aggregation (SEPIA).
計算サーバMPC1は、選定値の順序を決定する(208)。同様に、計算サーバMPC2は、選定値の順序を決定する(210)。これらの2つの順序は、順序付け方法に対する入力が2つのコンピューティングシステムMPC1およびMPC2において同じであるので、まったく同じとすべきである。各計算サーバMPC1およびMPC2は、その第2の段階のLUTにおける選定値の順序を決定することができる。この順序は、候補選定値、および候補ではない選定値を含む、UG_Request_keyに関連する第2の段階のLUTにおける選定値をすべて含むことができる。順序は、最も高い選定値から最も低い選定値までとすることができる。いくつかの実装形態においては、順序に使用される選定値は、選定されたデジタルコンポーネントとともに提示されることになるウェブサイトのパブリッシャに提供されることになる値とすることができる。選定値がクリアテキストであるとき、計算サーバMPC1およびMPC2は、選定値を順序付けするためにラウンドトリップ計算を何ら行う必要はない。そうではなく、各コンピューティングシステムMPC1およびMPC2は、独立して、UG_Request_keyに関連するその第2の段階のLUTの選定値を順序付けることができる。選定値が各計算サーバMPC1およびMPC2において秘密シェアとして記憶され、各計算サーバMPC1およびMPC2が各選定値のそれぞれの秘密シェアを有する場合、計算サーバMPC1およびMPC2は、選定値を順序付けるのにラウンドトリップ計算を使用するセキュアMPC方法を行うことができる。2つ以上の選定値間に同点が存在する場合、コンピューティングシステムMPC1およびMPC2は、これらの選定値に対応するデジタルコンポーネントについての他のメタデータを使用して決定的に同点を破ることができる。 The calculation server MPC1 determines the order of the selected values (208). Similarly, computation server MPC2 determines the order of the selected values (210). These two orders should be exactly the same because the inputs to the ordering method are the same in the two computing systems MPC1 and MPC2. Each computation server MPC1 and MPC2 can determine the order of the selection values in its second stage LUT. This order may include all selected values in the second stage LUT associated with the UG_Request_key, including candidate selected values and non-candidate selected values. The order can be from highest selected value to lowest selected value. In some implementations, the selected value used in the order may be the value that will be provided to the publisher of the website that will be presented with the selected digital component. When the preference values are in clear text, the calculation servers MPC1 and MPC2 do not need to do any round-trip calculations to order the preference values. Rather, each computing system MPC1 and MPC2 can independently order its second stage LUT selection values associated with UG_Request_key. If the preference values are stored as secret shares on each computation server MPC1 and MPC2, and each computation server MPC1 and MPC2 has a respective secret share of each preference value, then the computation servers MPC1 and MPC2 take rounds to order the preference values. A secure MPC method using trip calculations can be performed. If a tie exists between two or more selection values, computing systems MPC1 and MPC2 can definitively break the tie using other metadata about the digital components corresponding to these selection values. .
計算サーバMPC1およびMPC2は、各候補選定値について累積値の秘密シェアを決定する(212)。概念上、デジタルコンポーネントについての所与の選定値についての累積値は、順序の最上位から所与の選定値までの候補選定値の総数を表し、所与の選定値が候補である場合、所与の選定値を含める。この概念は、下記のTable 4(表4)に示されている。 Computation servers MPC 1 and MPC 2 determine (212) the secret share of the cumulative value for each candidate pick value. Conceptually, the cumulative value for a given selection value for a digital component represents the total number of candidate selection values from the top of the order to the given selection value; Include the given preference value. This concept is illustrated in Table 4 below.
この表においては、累積値(acc)は、順序の最上位から順序の最下位に進むにつれて、1に等しい候補パラメータis_candidateを有する各選定値について増分される。たとえば、最も高い選定値についての候補パラメータis_candidateがゼロに等しいとき、最も高い選定値についての累積値accはゼロである。第2の選定値についての候補パラメータis_candidateが1に等しく、2番目に高い選定値よりも上の選定値に、1に等しい候補パラメータis_candidateを有するものがないとき、第2の選定値についての累積値accは1である。順序を下方に移動すると、3番目に高い候補値についての候補パラメータis_candidateはゼロであり、したがって、3番目に高い選定値についての累積値accは、第2の選定値についての累積値accから増分されない。4番目に高い選定値についての候補パラメータis_candidateが1であるとき、4番目に高い選定値についての累積値accは、3番目に高い選定値についての累積値から1だけ増分される。したがって、最も高い選定値から4番目に高い選定値まで(最も高い選定値と4番目に高い選定値は含まれる)の候補パラメータis_candidateを有する2つの選定値が存在するとき、4番目に高い選定値についての累積値accは2に等しい。 In this table, the cumulative value (acc) is incremented for each selected value with the candidate parameter is_candidate equal to 1, proceeding from the highest order to the lowest order. For example, when the candidate parameter is_candidate for the highest selection value is equal to zero, the cumulative value acc for the highest selection value is zero. Cumulative for the second selection value when the candidate parameter is_candidate for the second selection value is equal to 1 and no selection values above the second highest selection value have the candidate parameter is_candidate equal to 1 The value acc is 1. Moving down the order, the candidate parameter is_candidate for the third highest candidate value is zero, so the cumulative value acc for the third highest selection value is incremented from the cumulative value acc for the second selection value. not. When the candidate parameter is_candidate for the 4th highest selection value is 1, the cumulative value acc for the 4th highest selection value is incremented by 1 from the cumulative value for the 3rd highest selection value. Thus, if there are two selections with the candidate parameter is_candidate from the highest selection to the 4th highest selection (the highest and the 4th highest selection are inclusive), the 4th highest selection The cumulative value acc for the value is equal to two.
この表を使用すると、コンピューティングシステムMPC1およびMPC2は、Table 4(表4)の第4の列に示されているように、アプリケーション107に配布するために、候補パラメータis_candidateが値1を有し、累積値accが値1を有する選定パラメータに対応するデジタルコンポーネントを選定することになる。これは、候補パラメータis_candidateが値1を有する最も高い順序の選定値を表す。候補パラメータis_candidateが、ユーザプライバシーを維持し、ユーザデータが漏洩されないことを確実にするために、コンピューティングシステムMPC1およびMPC2についての秘密シェアにあるとき、コンピューティングシステムMPC1およびMPC2は、各選定値についての累積値accの秘密シェアを決定し、ラウンドトリップ計算を使用して、どの選定値が1に等しい累積値accと、1に等しい候補パラメータis_ candidateとを有するかを決定する。
Using this table, computing systems MPC 1 and MPC 2 determine that the candidate parameter is_candidate has the
計算サーバMPC1およびMPC2は、ラウンドトリップ計算を用いずに、独立して、各選定値についての累積値accのそれらの秘密シェアを決定することができる。たとえば、計算サーバMPC1は、Table 4(表4)を参照して上述したように、各選定値について、最高から最低への順序で選定値のすべてをジグザグに進み、その進行中に選定値についての候補パラメータis_candidateを加算することによって、選定値svについての累積値accの第1のシェア[accsv, 1]を決定することができる。同様に、計算サーバMPC2は、各選定値について、最高から最低への順序で選定値のすべてをジグザグに進み、その進行中に選定値についての候補パラメータis_candidateを加算することによって、累積値accの第2のシェア[accsv, 2]を決定することができる。 Computation servers MPC1 and MPC2 can independently determine their secret share of the cumulative value acc for each selected value without round-trip computation. For example, computation server MPC1 may, for each preference value, zig-zag through all of the preference values in order from highest to lowest, as described above with reference to Table 4. The first share [acc sv, 1 ] of the accumulated value acc for the selected value sv can be determined by adding the candidate parameter is_candidate of . Similarly, the calculation server MPC 2 , for each selection value, zig-zags through all of the selection values in order from highest to lowest, adding the candidate parameter is_candidate for the selection value along the way, thereby obtaining the cumulative value acc A second share of [acc sv, 2 ] can be determined.
計算サーバMPC1およびMPC2は、選定値ごとに、累積値が指定値を有するかどうかを示す結果の秘密シェアを決定する(214)。指定値は、Table 4(表4)の列3および列4に示されているように、値1とすることができる。上述したように、累積値が1であり、候補パラメータis_candidateが1である選定値は、候補選定値の中で最も高い選定値である。
Computation servers MPC1 and MPC2 determine, for each selected value, a secret share of results indicating whether the accumulated value has the specified value (214). The specified value can be the
計算サーバMPC1およびMPC2は、各選定値についての秘密シェアの観点で、等式演算accsv==1を算出するためのセキュアMPC方法の一部として、複数の計算ラウンド、たとえば、複数のリモートプロシージャコール(remote procedure call、RPC)に関わることができる。この方法の終わりに、計算サーバMPC1は、各選定値について、結果accsv, 1==1の一方の秘密シェアを有し、計算サーバMPC2は、各選定値について、結果accsv, 2==1の他方の秘密シェアを有する。 Computation servers MPC1 and MPC2 perform multiple computation rounds, e.g. It can be involved in remote procedure calls (RPCs). At the end of this method, computation server MPC1 has one secret share of the result acc sv,1 ==1 for each choice value, and computation server MPC2 has for each choice value the result acc sv,2 == have the other's secret share of 1.
計算サーバMPC1およびMPC2は、選定結果を決定する(216)。計算サーバMPC1およびMPC2は、各選定値について、accsv==1の秘密シェアおよび候補パラメータis_candidatesvの秘密シェアに基づいて選定結果を決定することができる。そうするためには、計算サーバMPC1およびMPC2は、秘密シェアの観点でウィナー(winner)パラメータ[is_winnersv, 1]および[is_winnersv, 2]を算出することができる。ウィナーパラメータは、選定値が選定方法のウィナーであるかどうか、たとえば、選定値に対応するデジタルコンポーネントが、デジタルコンポーネント要求に応答してアプリケーション107に配布されるために選定されるかどうかを示すブール値とすることができる。
Computation servers MPC1 and MPC2 determine the election result (216). Computation servers MPC1 and MPC2 may determine the election result based on the secret share of acc sv ==1 and the secret share of the candidate parameter is_candidate sv for each election value. To do so, the computation servers MPC1 and MPC2 can compute the winner parameters [is_winner sv, 1 ] and [is_winner sv, 2 ] in terms of the secret share. The winner parameter is a boolean indicating whether the selection value is the winner of the selection method, e.g., whether the digital component corresponding to the selection value is selected for distribution to the
各計算サーバMPC1およびMPC2は協調して、各選定値について、秘密シェアの観点でウィナーパラメータを算出するように暗号プロトコルを実行することができる。これには、2つの秘密シェアを乗ずるために、計算サーバMPC1とMPC2との間に1つのRPCが必要である。このMPC方法の終わりに、計算サーバMPC1は、[is_winnersv, 1]=[is_candidatesv, 1]x([accsv, 1]==1)と表される結果is_winnersvの一方の秘密シェアを有する。同様に、計算サーバMPC2は、[is_winnersv, 2]=[is_candidatesv, 2]x([accsv, 2]==1)と表される結果is_winnersvの他方の秘密シェアを有する。すべての選定値について、最大でも1つの選定値が、アプリケーション107に配布されるために選定されるデジタルコンポーネントに対応する、1に等しいウィナーパラメータis_ winnersvを有することに留意されたい。他はすべて、ゼロに等しくなる。
Each computation server MPC1 and MPC2 can cooperate to run a cryptographic protocol to compute the winner parameter in terms of the secret share for each selected value. This requires one RPC between computation servers MPC1 and MPC2 to multiply the two secret shares. At the end of this MPC method, the computation server MPC1 has one secret share of the result is_winner sv denoted as [is_winner sv, 1 ]=[is_candidate sv, 1 ]x([acc sv, 1 ]==1) have. Similarly, computation server MPC2 has the other secret share of the result is_winner sv denoted as [is_winner sv, 2 ]=[is_candidate sv, 2 ]x([acc sv, 2 ]==1). Note that for all winning values, at most one winning value has a winner parameter is_winner sv equal to 1, corresponding to the digital component chosen to be distributed to the
計算サーバMPC1およびMPC2は、選定値についてのウィナーパラメータ、および選定値についてのデジタルコンポーネント情報要素information_elementまたは選定値自体に基づいて、選定結果を算出することができる。上述したように、デジタルコンポーネントについてのデジタルコンポーネント情報要素information_elementは、デジタルコンポーネントについての選定値、およびデジタルコンポーネントについての他のデータを含むことができる。 The calculation servers MPC1 and MPC2 can calculate the selection result based on the Wiener parameter for the selection value and the digital component information element information_element for the selection value or the selection value itself. As described above, the digital component information element information_element for the digital component can contain selected values for the digital component and other data about the digital component.
計算サーバMPC1およびMPC2は、下記の関係1を用いて選定結果resultF1を算出することができる。
The calculation servers MPC1 and MPC2 can calculate the selection result result F1 using the
この例においては、選定結果resultF1は、ユーザのユーザグループ識別子と一致するユーザグループ識別子を有するキャッシュされた選定値が存在しない場合に値ゼロを有することになるか、または1に等しいis_winnersvを有する選定されたデジタルコンポーネントのデジタルコンポーネント情報要素information_elementに等しい値を有することになるかのいずれかである。別の例においては、デジタルコンポーネント情報要素information_elementは、デジタルコンポーネントについての選定値と関係1において置き換えることができる。この例においては、選定結果resultF1は、ユーザのユーザグループ識別子と一致するユーザグループ識別子を有するキャッシュされた選定値が存在しない場合に値ゼロを有することになるか、または1に等しいis_winnersvを有する選定されたデジタルコンポーネントの選定値に等しい値を有することになるかのいずれかである。
In this example, the election result result F1 will have the value zero if there is no cached election value with a user group identifier that matches the user's user group identifier, or is_winner sv equal to 1. or will have a value equal to the digital component information element information_element of the selected digital component. In another example, the digital component information element information_element can be replaced in
秘密シェアにおいて算出を行うために、コンピューティングシステムMPC1は、選定値のすべてを取り、クリアテキストとすることができる選定値についてのデジタルコンポーネント情報要素information_elementsvに、ウィナーパラメータ[is_winnersv, 1]の第1の秘密シェアを乗ずる。次いで、コンピューティングシステムMPC1は、これらの積の和を決定し、デジタルコンポーネント要求を提出したクライアントデバイス106にその和を戻すことができる。つまり、MPC1は、結果の第1のシェアとして、下記の関係2を用いて、和を決定することができる。
To perform the computation in the secret share, the computing system MPC1 takes all of the preference values and stores them in a digital component information element information_element sv about the preference value, which can be in clear text, the winner parameter [is_winner sv, 1 ]. Multiply by the first secret share. Computing system MPC1 can then determine the sum of these products and return the sum to the
コンピューティングシステムMPC2は、下記の関係3を用いて結果の第2のシェアを決定するために同様の算出を行うことができる。
Computing system MPC2 may perform a similar calculation to determine the second share of
コンピューティングシステムMPC1は、アプリケーション107に選定結果の第1のシェアを戻すことができる。同様に、コンピューティングシステムMPC2は、アプリケーション107に選定結果の第2のシェアを戻すことができる。次いで、アプリケーション107は、2つの秘密シェア
Computing system MPC1 may return a first share of the selection results to
および and
を用いて、たとえば、追加の秘密シェアアルゴリズムが採用されることを仮定して秘密シェアの和を決定することによって、クリアテキストの選定結果resultF1を再構成することができる。選定結果resultF1が値ゼロである場合には、MPCクラスタ130は、メンバーとしてユーザを含むユーザグループについてのデジタルコンポーネントを特定しなかった。そうでない場合、選定結果resultF1は、デジタルコンポーネント情報要素information_elementに等しい値であり、アプリケーション107は、デジタルコンポーネント情報要素information_elementを構文解析して、デジタルコンポーネントについての選定値およびメタデータを得ることができる。次いで、アプリケーション107は、デジタルコンポーネントを表示すること、または上述したように、デジタルコンポーネント、およびデジタルコンポーネントサーバ108から受け取った他のデジタルコンポーネントを使用して選定方法を行うことのいずれかが可能である。
can be used to reconstruct the cleartext selection result result F1 , for example, by determining the secret share sum assuming an additional secret share algorithm is employed. If the selection result result F1 has a value of zero, the MPC cluster 130 did not identify a digital component for the user group that includes the user as a member. Otherwise, the selection result result F1 is a value equal to the digital component information element information_element, and the
いくつかの実装形態においては、アプリケーション107は、MPCシステムによって選定されたデジタルコンポーネントについてのユーザグループが、メンバーとしてユーザを含むユーザグループと一致することの最終検証を行うことができる。たとえば、各デジタルコンポーネントについてのデジタルコンポーネント情報要素information_elementは、デジタルコンポーネントについてのユーザグループ識別子を含むことができる。アプリケーション107は、デジタルコンポーネント情報要素information_elementのユーザグループ識別子を、ユーザについてのユーザグループリストと比較することができる。一致が存在しない場合、アプリケーション107は、選定方法からデジタルコンポーネントを除外することができる。一致が存在する場合、アプリケーション107は、選定方法にデジタルコンポーネントを含めることができる。
In some implementations, the
図3は、クライアントデバイスにデジタルコンポーネントを配布する例示的な方法のフロー図である。方法300の動作については、図1に説明し示したシステムの構成要素によって行われると後述する。方法300の動作については、例示目的としてのみ後述する。方法300の動作は、任意の適切なデバイスまたはシステム、たとえば、任意の適切なデータ処理装置によって行われ得る。方法300の動作はまた、非一時的コンピュータ可読媒体において記憶されている命令として実装され得る。命令の実行により、1つまたは複数の処理装置は、方法300の動作を行うことになる。
FIG. 3 is a flow diagram of an exemplary method for distributing digital components to client devices. The operations of
ブラウザにおいて提示されるデジタルコンポーネントについてのユニバーサル識別子を生成する(310)。特定のデジタルコンポーネントについてのキャンペーン識別子とコンテンツソースとも称すデジタルコンテンツプロバイダのドメインのeTLD+1とを読み出した後、アプリケーション107は、その特定のデジタルコンポーネントについてのユニバーサル識別子を生成することができる。いくつかの実装形態においては、コンテンツソースは、ユニバーサル識別子を算出することができる。デジタルコンポーネントについてのユニバーサル識別子は、HMAC(campaign_identifier, eTLD+1)と表されるキャンペーン識別子とデジタルコンポーネントサーバ108のドメインとによってパラメータ化されるハッシュベースのメッセージ認証コード(HMAC)を使用して算出され得る。いくつかの実装形態においては、HMACは、ハッシュ化された256ビット(32バイト)出力を生成するために、ダイジェスト長が256ビットの暗号化ハッシュ関数であるセキュアハッシュアルゴリズム(SHA-256)を使用して実装され得る。そのような例においては、HMAC(campaign_identifier, eTLD+1)は、ユニバーサル識別子として、デジタルコンポーネントについての256ビット一意識別子を生成する。
A universal identifier is generated 310 for the digital component to be presented in the browser. After retrieving the campaign identifier for a particular digital component and the eTLD+1 of the digital content provider's domain, also referred to as the content source, the
デジタルコンポーネントについて作成されたことがあるユニバーサル識別子の組を更新する(320)。アプリケーション107は、すべてのデジタルコンポーネントサーバ108において、キャンペーンの空間全体にわたって、デジタルコンポーネントを一意に特定するユニバーサル識別子の組を維持する。クライアントデバイス106に供給され提示された特定のデジタルコンポーネントについてのユニバーサル識別子を計算し/生成した後、アプリケーション107は、その特定のデジタルコンポーネントのユニバーサル識別子により、ユニバーサル識別子の組を更新する。たとえば、特定のデジタルコンポーネントについてのユニバーサル識別子が組の中にはもう存在しないとき、アプリケーション107は、特定のデジタルコンポーネントのユニバーサル識別子を組に追加し、対応する提示カウンタを1だけ増分する。特定のデジタルコンポーネントについてのユニバーサル識別子が組の中にすでに存在する状況においては、アプリケーション107は、ユニバーサル識別子の対応する提示カウンタを、たとえば、カウンタを1だけ増分することによって更新する。
ユニバーサル識別子に対応するブロッキングされたユニバーサル識別子の組を特定する(330)。クライアントデバイス106において実行するアプリケーション107は、最近ユーザによって明確にブロッキングされたことがあるデジタルコンポーネントのユニバーサル識別子を含む、ブロッキングされたユニバーサル識別子の組を維持することができる。たとえば、ユーザが、所与のデジタルコンポーネント(またはクライアントデバイス106に供給されたデータの一部分)に対応するミュート要素と対話することを仮定する。この例においては、ミュート要素とのユーザの対話は、今後(たとえば、少なくとも一定の時間量の間)、そのデジタルコンポーネント、または可能性として類似している(たとえば、同じソースコンテンツもしくはキャンペーンからの、または視覚的に類似している)デジタルコンポーネントを見ることをユーザが望んでいないことを示している。対話に応答して、アプリケーション107は、所与のデジタルコンポーネントについてのユニバーサル識別子をブロッキングされたユニバーサル識別子の組に追加することができ、次いで、それを使用して、所与のデジタルコンポーネントと同じユニバーサル識別子を有する他のデジタルコンポーネントの供給(または提示)を防止することができる。
A set of blocked universal identifiers corresponding to the universal identifier is identified (330). An
アプリケーション107は、少なくとも所定の回数、供給/提示されたことがある(たとえば、1日、1週間、1カ月などの指定された時間期間にわたってX回を超えて提示されたことがある)デジタルコンポーネントのそれらのユニバーサル識別子を、ブロッキングされたユニバーサル識別子の組に追加することができる。たとえば、ユニバーサル識別子1A2B3Cを有するデジタルコンポーネントが、ここY日にわたってX回を上回って特定のユーザに供給/提示されている場合、アプリケーション107は、ユニバーサル識別子1A2B3Cを、ブロッキングされたユニバーサル識別子の組に追加することができ、それは、クライアントデバイス106において記憶される。
The
ブロッキングされたユニバーサル識別子の組およびユーザグループ識別子を表す確率的データ構造を生成する(340)。アプリケーション107は、ブロッキングされたユニバーサル識別子の組と、クライアントデバイス106(またはユーザ)が属するユーザグループとを表す確率的データ構造を生成することができる。いくつかの実装形態においては、確率的データ構造は、カッコウフィルタである。カッコウフィルタを生成するために、アプリケーション107は、ユーザグループ識別子か、またはブロッキングされたユニバーサル識別子の組からのユニバーサル識別子かのいずれかと、アプリケーション107によって生成された2つのランダム変数のうちのいずれか一方とによってパラメータ化される擬似ランダム関数(PRF)を使用する。たとえば、アプリケーション107によって生成された3つのランダム変数がrand_var1a、rand_var1b、およびrand_var2であることを仮定する。また、バケット内の各項目がkビットの整数であることを仮定する。アプリケーションは、PRF(ug_id, rand_var1a)、およびPRF(blocked_uid, rand_var1b)を含んでいるカッコウフィルタテーブルを生成することができ、ここで、ug_idは、コンテンツプロバイダのドメインに基づいてユーザグループのラベルにHMACを加えることによって生成されるユーザグループの識別子であり、blocked_uidは、ブロッキングされたユニバーサル識別子の組からの識別子である。
A probabilistic data structure representing the set of blocked universal identifiers and the user group identifier is generated (340).
確率的データ構造の複数のシェアを生成する(350)。アプリケーション107は、ユーザグループ識別子と、ブロッキングされたユニバーサル識別子の組内のユニバーサル識別子とについて生成されるカッコウフィルタテーブルに基づいてベクトルBiを生成することができる。ベクトルBは、Bi=PRF(rand_var2, i)-Aiと表すことができ、ここで、Aiは、カッコウフィルタテーブルにおけるi番目のエントリのコンテンツであり、iは、ベクトルBiおよびカッコウフィルタテーブルAiの指数である。アプリケーション107は、MPC1に送られるデジタルコンポーネント要求におけるパラメータとしてrand_var1a、rand_var1b、およびrand_var2を生成する。アプリケーション107はまた、MPC2に送られるデジタルコンポーネント要求におけるパラメータとしてベクトルB、rand_var1a、およびrand_var1bを生成する。
Generate 350 multiple shares of the probabilistic data structure.
異なるサーバに複数のシェアのうちの異なるシェアを送信する(360)。たとえば、アプリケーション107がスロットのためのデジタルコンポーネントを求める要求を開始すると、アプリケーションは、MPC1に、要求パラメータとしてrand_var1a、rand_var1b、およびrand_var2を送信する。アプリケーション107はまた、MPC2に、要求パラメータとしてベクトルB、rand_var1a、およびrand_var1bを送信する。
Sending 360 different shares of the plurality of shares to different servers. For example, when
異なるサーバに送信される異なるシェアのうちの異なるシェアに基づいて異なるサーバのそれぞれによって生成される別個の応答を受け取る(370)。秘密シェアを受け取った後、MPCシステム内の各計算サーバはそれぞれ、確率的データ構造の秘密シェアを使用するセキュアMPC方法を行って、デジタルコンポーネントを選定する。たとえば、MPC1は、アレイTを算出することができ、ここで、アレイのi番目の要素は、Ti=PRF(rand_var2, i)である。選定するための各デジタルコンポーネントの資格を決定するとき、デジタルコンポーネントのそれぞれが、ブロッキングされたユニバーサル識別子の組によってブロッキングされているかどうか、およびユーザについてのユーザグループ識別子(たとえば、興味グループ識別子)が各デジタルコンポーネントについての選定値に対応するユーザグループ識別子と一致しているかどうかの決定を行うことができる。 A separate response is received (370) generated by each of the different servers based on different ones of the different shares sent to the different servers. After receiving the secret share, each computational server in the MPC system performs a secure MPC method using the secret share of the probabilistic data structure to select the digital component. For example, MPC1 can compute an array T, where the i-th element of the array is T i =PRF(rand_var2, i). When determining the eligibility of each digital component for selection, whether each digital component is blocked by the set of blocked universal identifiers and the user group identifier (e.g., interest group identifier) for the user is determined by each A determination can be made whether there is a match with the user group identifier corresponding to the selected value for the digital component.
MPCシステムの各計算サーバは、秘密シェア情報に基づいて異なるデジタルコンポーネントの資格を決定するように決定される値を使用することができる。MPCシステムの各計算サーバはまた、各選定値に対応するユニバーサル識別子が、そのMPCが受け取った確率的データ構造の秘密シェアにおいてクライアントデバイスによって提供される確率的データ構造に含まれていたブロッキングされたユニバーサル識別子の組に含まれているかどうかも決定している。デジタルコンポーネントに配布の資格があるようにするために、そのデジタルコンポーネントについての選定値に関連するユーザグループ識別子は、確率的データ構造内に見つけられなくてはならないが、デジタルコンポーネントについてのユニバーサル識別子は、確率的データ構造内に見つけることができない。 Each computational server of the MPC system can use the determined values to determine entitlements of different digital components based on the secret share information. Each computational server in the MPC system also has a blocked universal identifier corresponding to each selected value included in the probabilistic data structure provided by the client device in the secret share of the probabilistic data structure received by that MPC. It also determines whether it is included in the set of universal identifiers. In order for a digital component to be eligible for distribution, the user group identifier associated with the preference value for that digital component must be found within the probabilistic data structure, whereas the universal identifier for the digital component is , cannot be found in the probabilistic data structure.
選定方法の詳細について、図2を参照して説明する。その後、MPCシステムの計算サーバは、選定結果resultF1を計算し、resultF1の秘密シェアを生成し、それぞれの秘密シェアをアプリケーション107に送信する。たとえば、MPC1は、選定結果の第1のシェアをアプリケーション107に戻すことができる。同様に、コンピューティングシステムMPC2は、選定結果の第2のシェアをアプリケーション107に戻すことができる。
Details of the selection method will be described with reference to FIG. After that, the calculation server of the MPC system calculates the selection result result F1 , generates secret shares of the result F1 , and sends each secret share to the
ブラウザに提示するデジタルコンポーネントを特定する(380)。アプリケーション107は、MPCシステムの計算サーバから受け取った秘密シェアを使用して、クリアテキストの選定結果resultF1を再構成することができる。次いで、たとえば、アプリケーション107は、2つの秘密シェアを使用して、およびたとえば、秘密シェアの和を決定することによって、クリアテキストの選定結果resultF1を再構成することができる。
Identify 380 the digital components to present to the browser.
図4は、上記の動作を行うために使用され得る例示的なコンピュータシステム400のブロック図である。システム400は、プロセッサ410、メモリ420、ストレージデバイス430、および入力/出力デバイス440を含む。構成要素410、420、430、および440はそれぞれ、たとえば、システムバス450を使用して相互接続され得る。プロセッサ410は、システム400内で実行するための命令を処理することができる。1つの実装形態においては、プロセッサ410は、シングルスレッドのプロセッサである。別の実装形態においては、プロセッサ410は、マルチスレッドのプロセッサである。プロセッサ410は、メモリ420内に、またはストレージデバイス430上に記憶される命令を処理することができる。
FIG. 4 is a block diagram of an
メモリ420は、システム400内に情報を記憶する。1つの実装形態においては、メモリ420は、コンピュータ可読媒体である。1つの実装形態においては、メモリ420は、揮発性メモリユニットである。別の実装形態においては、メモリ420は、不揮発性メモリユニットである。
ストレージデバイス430は、システム400にマスストレージを提供することができる。1つの実装形態においては、ストレージデバイス430は、コンピュータ可読媒体である。様々な異なる実装形態においては、ストレージデバイス430には、たとえば、ハードディスクデバイス、光ディスクデバイス、複数のコンピューティングデバイスによってネットワークを経由して共有されるストレージデバイス(たとえば、クラウドストレージデバイス)、またはいくつかの他の大容量ストレージデバイスを含めることができる。
入力/出力デバイス440は、システム400に入力/出力動作を提供する。1つの実装形態においては、入力/出力デバイス440は、ネットワークインターフェースデバイス、たとえば、Ethernetカード、シリアル通信デバイス、たとえば、RS-232ポート、および/またはワイヤレスインターフェースデバイス、たとえば802.11カードのうちの1つまたは複数を含むことができる。別の実装形態においては、入力/出力デバイスは、入力データを受け取り、出力データを他の入力/出力デバイス、たとえば、キーボード、プリンタ、およびディスプレイデバイスに送るように構成されたドライバデバイスを含むことができる。しかしながら、モバイルコンピューティングデバイス、モバイル通信デバイス、セットトップボックステレビジョンクライアントデバイスなど、他の実装形態が使用されてもよい。
Input/
例示的な処理システムについて図4では説明しているが、本明細書に記載の主題および機能動作の実装形態は、他のタイプのデジタル電子回路機構で、または本明細書に開示される構造を含むコンピュータソフトウェア、ファームウェア、もしくはハードウェア、およびそれらの構造的均等物で、またはそれらのうちの1つまたは複数の組合せで実装され得る。 Although an exemplary processing system is illustrated in FIG. 4, implementations of the subject matter and functional operations described herein may be implemented with other types of digital electronic circuitry or with the structures disclosed herein. implemented in computer software, firmware, or hardware, including structural equivalents thereof, or a combination of one or more thereof.
(簡単にするために、単純にドキュメントと称す)電子ドキュメントは、必ずしもファイルに対応するとは限らない。ドキュメントは、問題のドキュメントに専用の単一のファイルで、または複数のコーディネートファイルで、他のドキュメントを保持するファイルの一部分に記憶されてもよい。 An electronic document (referred to simply as a document for simplicity) does not necessarily correspond to a file. Documents may be stored in a single file dedicated to the document in question, or in multiple coordinating files, part of a file that holds other documents.
本明細書に記載の主題および機能動作の実施形態は、デジタル電子回路機構で、または本明細書に開示される構造を含むコンピュータソフトウェア、ファームウェア、もしくはハードウェア、およびそれらの構造的均等物で、またはそれらのうちの1つまたは複数の組合せで実装され得る。本明細書に記載の主題の実施形態は、1つまたは複数のコンピュータプログラム、すなわち、データ処理装置の動作を制御することによって、または制御するために実行される複数のコンピュータストレージ媒体(もしくは1つのコンピュータストレージ媒体)において符号化されるコンピュータプログラム命令の1つまたは複数のモジュールとして実装され得る。代替として、または追加として、プログラム命令は、データ処理装置によって実行されるのに適している受信機装置に送信するための情報を符号化するために生成される、人工的に生成された伝搬信号、たとえば、マシン生成の電気、光、または電磁信号において符号化され得る。コンピュータストレージ媒体は、コンピュータ可読ストレージデバイス、コンピュータ可読ストレージ基板、ランダムまたはシリアルアクセスメモリアレイもしくはデバイス、またはそれらのうちの1つもしくは複数の組合せとすることも、あるいはそれらに含められてもよい。その上、コンピュータストレージ媒体は、伝搬信号ではないが、コンピュータストレージ媒体は、人工的に生成された伝搬信号において符号化されたコンピュータプログラム命令のソースまたは送り先であってもよい。また、コンピュータストレージ媒体は、1つまたは複数の別個の物理的構成要素もしくは媒体(たとえば、複数のCD、ディスク、または他のストレージデバイス)であっても、それらに含められてもよい。 Embodiments of the subject matter and functional operations described herein may be in digital electronic circuitry or in computer software, firmware, or hardware containing the structures disclosed herein and their structural equivalents. or a combination of one or more of them. Embodiments of the subject matter described herein comprise one or more computer programs, i.e., computer storage media (or computer storage media) executed by or to control the operation of a data processing apparatus. implemented as one or more modules of computer program instructions encoded on a computer storage medium). Alternatively or additionally, the program instructions are suitable for being executed by a data processing device in an artificially generated propagated signal generated to encode information for transmission to a receiver device. , for example, may be encoded in a machine-generated electrical, optical, or electromagnetic signal. A computer storage medium may be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more thereof. Moreover, although a computer storage medium is not a propagated signal, a computer storage medium may be a source or destination of computer program instructions encoded in an artificially generated propagated signal. Also, a computer storage medium may be or be included in one or more separate physical components or media (eg, multiple CDs, disks, or other storage devices).
本明細書に記載の動作は、1つまたは複数のコンピュータ可読ストレージデバイスにおいて記憶された、または他のソースから受け取ったデータに関して、データ処理装置によって行われる動作として実装され得る。 The operations described herein may be implemented as operations performed by a data processing apparatus with respect to data stored in one or more computer-readable storage devices or received from other sources.
「データ処理装置(data processing apparatus)」という用語は、例として、プログラマブルプロセッサ、コンピュータ、システムオンチップ、または前述の複数、もしく前述の組合せを含む、データを処理するためのすべての種類の装置、デバイス、およびマシンを包含する。装置は、専用の論理回路機構、たとえば、FPGA(フィールドプログラマブルゲートアレイ)、またはASIC(特定用途向け集積回路)を含むことができる。装置はまた、ハードウェアに加えて、問題のコンピュータプログラムの実行環境を作成するコード、たとえば、プロセッサファームウェア、プロトコルスタック、データベース管理システム、オペレーティングシステム、クロスプラットフォームランタイム環境、仮想マシン、またはそれらのうちの1つまたは複数の組合せを構成するコードを含むことができる。装置および実行環境は、ウェブサービス、分散型コンピューティングインフラストラクチャおよびグリッドコンピューティングインフラストラクチャなど、様々な異なるコンピューティングモデルインフラストラクチャを実現することができる。 The term "data processing apparatus" means any kind of apparatus for processing data, including, by way of example, programmable processors, computers, systems-on-chips, or any plurality or combination of the foregoing. , devices, and machines. The device may include dedicated logic circuitry, such as FPGAs (Field Programmable Gate Arrays), or ASICs (Application Specific Integrated Circuits). The apparatus also includes, in addition to hardware, code that creates an execution environment for the computer program in question, such as processor firmware, protocol stacks, database management systems, operating systems, cross-platform runtime environments, virtual machines, or any of the above. It can contain code that makes up one or more combinations. Devices and execution environments can implement a variety of different computing model infrastructures, such as web services, distributed computing infrastructures and grid computing infrastructures.
コンピュータプログラム(プログラム、ソフトウェア、ソフトウェアアプリケーション、スクリプト、またはコードとしても知られている)は、コンパイラ型またはインタープリタ型の言語、宣言型または手続き型の言語を含む任意の形態のプログラミング言語で書くことができ、スタンドアロンプログラムとして、またはモジュールとして、コンポーネント、サブルーチン、オブジェクト、もしくはコンピューティング環境での使用に適している他のユニットを含む、任意の形態で展開することができる。コンピュータプログラムは、ファイルシステム内のファイルに対応している場合があるが、対応している必要はない。プログラムは、他のプログラムまたはデータを保持するファイルの一部分(たとえば、マークアップ言語ドキュメントに記憶された1つまたは複数のスクリプト)の中に、問題のプログラムに専用の単一ファイルの中に、または複数のコーディネートファイル(たとえば、1つまたは複数のモジュール、サブプログラム、またはコードの部分を記憶するファイル)の中に記憶され得る。コンピュータプログラムは、1つのコンピュータ、または1つのサイトに配置され、もしくは複数のサイトにわたって分散され、通信ネットワークによって相互接続されている複数のコンピュータにおいて実行されるように展開され得る。 Computer programs (also known as programs, software, software applications, scripts, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages. It can be deployed in any form, as a standalone program, or as modules, including components, subroutines, objects, or other units suitable for use in a computing environment. A computer program may, but need not, correspond to files in a file system. A program may reside within a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), within a single file dedicated to the program in question, or It may be stored in multiple coordination files (eg, files storing one or more modules, subprograms, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers located at one site or distributed across multiple sites and interconnected by a communication network.
本明細書に記載の方法および論理フローは、1つまたは複数のプログラマブルプロセッサが、入力データに関して操作し出力を生成することによってアクションを行うように1つまたは複数のコンピュータプログラムを実行することによって行うことができる。また、方法および論理フローは、専用の論理回路機構、たとえば、FPGA(フィールドプログラマブルゲートアレイ)またはASIC(特定用途向け集積回路)によって実行することもでき、また装置も、専用の論理回路機構、たとえば、FPGAまたはASICとして実装することができる。 The methods and logic flows described herein are performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. be able to. The methods and logic flows can also be performed by dedicated logic circuitry, such as FPGAs (Field Programmable Gate Arrays) or ASICs (Application Specific Integrated Circuits), and the apparatus can also be performed by dedicated logic circuitry, such as , can be implemented as FPGA or ASIC.
コンピュータプログラムの実行に適しているプロセッサには、例として、汎用マイクロプロセッサと専用のマイクロプロセッサとをともに含む。概して、プロセッサは読取り専用メモリもしくはランダムアクセスメモリ、またはその両方から命令およびデータを受け取ることになる。コンピュータの必須要素は、命令に従ってアクションを行うためのプロセッサ、ならびに命令およびデータを記憶するための1つまたは複数のメモリデバイスである。概して、コンピュータはまた、データを記憶するための1つまたは複数のマスストレージデバイス、たとえば、磁気、磁気光学ディスク、もしくは光ディスクを含む、あるいはそれらの同士の間でデータを受信もしくは転送する、またはその両方を行うように、動作可能なように結合されることになる。しかしながら、コンピュータは、そのようなデバイスを有する必要があるわけではない。その上、コンピュータは、別のデバイス、たとえば、ほんの数例を挙げると、携帯電話、パーソナルデジタルアシスト(PDA)、モバイルオーディオもしくはビデオプレイヤ、ゲームコンソール、全地球測位システム(Global Positioning System、GPS)受信機、またはポータブルストレージデバイス(たとえば、ユニバーサルシリアルバス(USB)フラッシュドライブ)に埋め込まれていてもよい。コンピュータプログラム命令およびデータを記憶するのに適しているデバイスとしては、例として、半導体メモリデバイス、たとえばEPROM、EEPROM、およびフラッシュメモリデバイス;磁気ディスク、たとえば、内部ハードディスクまたはリムーバブルディスク; 磁気光学ディスク;ならびにCD-ROMおよびDVD-ROMディスクを含むすべての形態の不揮発性メモリ、媒体、およびメモリデバイスが挙げられる。プロセッサおよびメモリは、専用の論理回路機構によって補足されても、またはその中に組み込まれていてもよい。 Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from read-only memory, random-access memory, or both. The essential elements of a computer are a processor, for performing actions according to instructions, and one or more memory devices for storing instructions and data. Generally, a computer also includes, receives or transfers data between, or uses one or more mass storage devices for storing data, such as magnetic, magneto-optical or optical disks. It would be operably coupled to do both. However, a computer need not have such a device. Additionally, the computer may be used by other devices such as cell phones, personal digital assistants (PDAs), mobile audio or video players, game consoles, Global Positioning System (GPS) reception, to name but a few. computer, or a portable storage device (eg, Universal Serial Bus (USB) flash drive). Devices suitable for storing computer program instructions and data include, by way of example, semiconductor memory devices such as EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; All forms of non-volatile memory, media, and memory devices are included, including CD-ROM and DVD-ROM discs. The processor and memory may be supplemented by or embedded within dedicated logic circuitry.
ユーザとの対話を可能にするために、本明細書に記載の主題の実施形態は、ユーザに情報を表示するためのディスプレイデバイス、たとえば、CRT(陰極線管)またはLCD(液晶ディスプレイ)モニタ、ならびにユーザがコンピュータに入力を提供することができるキーボードおよびポインティングデバイス、たとえば、マウスまたはトラックボールを有するコンピュータにおいて実装することができる。他の種類のデバイスを使用して、ユーザとの対話を可能にすることができるだけでなく、たとえば、ユーザに提供されるフィードバックは、任意の形態の感覚フィードバック、たとえば、視覚フィードバック、聴覚フィードバック、または触覚フィードバックとすることができ、ユーザからの入力は、音響入力、音声入力、または触覚入力を含む任意の形態で受け取ることができる。加えて、コンピュータは、ユーザが使用するデバイスとの間でドキュメントを送受信することによって、たとえば、ウェブブラウザから受け取った要求に応答して、ユーザのクライアントデバイス上のウェブブラウザにウェブページを送ることによってユーザと対話することができる。 To enable interaction with a user, embodiments of the subject matter described herein include a display device, such as a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user, as well as It can be implemented in a computer having a keyboard and pointing device, such as a mouse or trackball, that allows a user to provide input to the computer. Not only can other types of devices be used to enable interaction with the user, but for example the feedback provided to the user can be any form of sensory feedback, e.g. visual feedback, auditory feedback, or It may be haptic feedback, and input from the user may be received in any form including acoustic, speech, or tactile input. In addition, the computer sends and receives documents to and from the device used by the user, for example by sending web pages to the web browser on the user's client device in response to requests received from the web browser. Can interact with the user.
本明細書に記載の主題の実施形態は、たとえばデータサーバとして、バックエンドコンポーネントを含む、もしくはミドルウェアコンポーネント、たとえばアプリケーションサーバを含む、またはフロントエンドコンポーネント、たとえば、ユーザが本明細書に記載の主題の実装形態と対話することができるグラフィカルユーザインターフェースもしくはウェブブラウザを有するクライアントコンピュータ、あるいは1つまたは複数のそのようなバックエンドコンポーネント、ミドルウェアコンポーネント、もしくはフロントエンドコンポーネントの任意の組合せを含むコンピューティングシステムにおいて実装され得る。システムのコンポーネントは、デジタルデータ通信の任意の形態または媒体、たとえば、通信ネットワークによって相互接続され得る。通信ネットワークの例としては、ローカルエリアネットワーク(local area network、「LAN」)、および広域ネットワーク(wide area network、「WAN」)、インターネットワーク(たとえば、Internet)、ならびにピアツーピアネットワーク(たとえば、アドホックピアツーピアネットワーク)が挙げられる。 Embodiments of the subject matter described herein may include back-end components, such as data servers, or middleware components, such as application servers, or front-end components, such as user implemented on a client computer having a graphical user interface or web browser capable of interacting with the implementation, or on a computing system including any combination of one or more such back-end, middleware, or front-end components; can be The components of the system can be interconnected by any form or medium of digital data communication, eg, a communication network. Examples of communication networks include local area networks ("LAN") and wide area networks ("WAN"), internetworks (e.g., the Internet), and peer-to-peer networks (e.g., ad-hoc peer-to-peer networks). ).
コンピューティングシステムは、クライアントおよびサーバを含むことができる。クライアントおよびサーバは、概して、互いにリモートであり、典型的には、通信ネットワークを通じて対話する。クライアントとサーバとの関係は、コンピュータプログラムがそれぞれのコンピュータにおいて動作し、互いにクライアント/サーバ関係を有することにより生じる。いくつかの実施形態においては、サーバは、データ(たとえば、HTMLページ)をクライアントデバイスに送信する(たとえば、クライアントデバイスと対話するユーザにデータを表示し、ユーザからユーザ入力を受け取る目的で)。クライアントデバイスにおいて生成されるデータ(たとえば、ユーザ対話の結果)は、サーバにおいてクライアントデバイスから受け取ることができる。 The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client/server relationship to each other. In some embodiments, the server sends data (eg, HTML pages) to the client device (eg, for the purpose of displaying the data to a user interacting with the client device and receiving user input from the user). Data generated at the client device (eg, results of user interactions) can be received from the client device at the server.
本明細書は、多くの特定の実装形態の詳細を含んでいるが、これらは、いかなる発明の範囲に対する、または特許請求され得ることの限定として解釈すべきではなく、むしろ、特定の発明の特定の実施形態に固有の特徴の説明と解釈すべきである。別個の実施形態の文脈で本明細書に説明する特定の特徴はまた、単一の実施形態における組合せで実装され得る。逆に、単一の実施形態の文脈で説明する様々な特徴もまた、複数の実施形態で別個に、または任意の適切な副組合せで実装され得る。その上、特徴は、特定の組合せで機能すると上述している場合があり、最初はそのようものとして特許請求される場合があるが、特許請求される組合せからの1つまたは複数の特徴は、いくつかの場合においては、組合せから削除されることもあり、特許請求される組合せは、副組合せまたは副組合せの変形形態を対象とすることもある。 Although this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or what may be claimed, but rather specific inventions. should be construed as describing features that are unique to the embodiment. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, while features may be described above as functioning in particular combinations, and may initially be claimed as such, one or more features from the claimed combinations may In some cases, a combination may be omitted and a claimed combination may cover a subcombination or variations of a subcombination.
同様に、動作は、特定の順序で図面に示されているが、このことは、所望の結果を達成するために、そのような動作が、示されている特定の順序でもしくは連続した順序で行われるものとすること、またはすべての例示の動作が行われるものとすることを要求していると理解すべきではない。特定の状況においては、マルチタスクおよび並行処理が有利であることもある。その上、上述の実施形態における様々なシステムコンポーネントの分離は、すべての実施形態においてそのような分離を要求していると理解すべきでなく、説明したプログラムコンポーネントおよびシステムが、概して、単一のソフトウェア製品に一緒に統合されても、または複数のソフトウェア製品にパッケージ化されてもよいことを理解すべきである。 Similarly, although acts may be presented in the figures in a particular order, it is understood that such acts may be performed in the specific order presented or in a sequential order to achieve a desired result. It should not be understood as a requirement that it be performed or that all illustrated acts shall be performed. Multitasking and parallel processing can be advantageous in certain situations. Moreover, the separation of various system components in the above-described embodiments should not be understood to require such separation in all embodiments, as the described program components and system are generally It should be understood that they may be integrated together in a software product or packaged in multiple software products.
このように、主題の特定の実施形態について説明してきた。他の実施形態は、添付の特許請求の範囲内にある。いくつかの場合においては、特許請求の範囲に列挙したアクションは、異なる順序で行うことができ、それでもなお、所望の結果を達成することができる。加えて、添付の図に示した方法には、所望の結果を達成するために、必ずしも示されている特定の順序または連続した順序が必要であるわけでもない。特定の実装形態においては、マルチタスクおよび並行処理が有利であることもある。 Thus, specific embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the methods illustrated in the accompanying figures do not necessarily require the particular order or sequential order shown to achieve desired results. Multitasking and parallel processing may be advantageous in certain implementations.
100 環境
102 ネットワーク
104 コンテンツサーバ、コンテンツプラットフォーム
106 クライアントデバイス
107 アプリケーション
108 デジタルコンポーネントサーバ
110 デジタルコンポーネント配布システム
112 デジタルコンポーネント要求
114 コンピューティングデバイス
117a～117c タスク
118a～118c 分析の結果(Res1～Res3)
120 返信データ
121 サーバ要求
122 デジタルコンポーネントデータ
140 ブリッシャ
142 ウェブサイト
150 検索システム
152 検索インデックス
200 方法
300 方法
400 コンピュータシステム
410 プロセッサ
420 メモリ
430 ストレージデバイス
440 入力/出力デバイス
450 システムバス
MPC1、MPC2 計算サーバ
100 environment
102 network
104 Content Server, Content Platform
106 client devices
107 applications
108 Digital Component Server
110 Digital Component Distribution System
112 Digital Component Request
114 Computing Devices
117a-117c tasks
118a-118c Analysis results (Res1-Res3)
120 reply data
121 Server Request
122 digital component data
140 Brisha
142 websites
150 search system
152 search index
200 ways
300 ways
400 computer system
410 processor
420 memory
430 storage devices
440 input/output devices
450 system bus
MPC1, MPC2 calculation server
Claims (20)
前記アプリケーションによって、前記生成されたユニバーサル識別子に基づいて、指定された時間期間にわたって前記アプリケーションによって提示されるデジタルコンポーネントについて作成されたことがあるユニバーサル識別子の組を更新するステップと、
前記アプリケーションによって、(i)前記アプリケーションによって生成されたことがあり、(ii)前記アプリケーションに今後のデジタルコンポーネントを提示するための使用をブロッキングされたことがあるユニバーサル識別子に対応するブロッキングされたユニバーサル識別子の組を特定するステップと、
前記アプリケーションによって、ブロッキングされたユニバーサル識別子の前記組を表す確率的データ構造を生成するステップと、
前記アプリケーションによって、前記確率的データ構造の複数のシェアを作成するステップと、
前記アプリケーションによって、前記複数のシェアのうちの異なるシェアを異なるサーバに送信するステップと、
前記アプリケーションによって、前記異なるサーバに送信された前記複数のシェアのうちの前記異なるシェアに基づいて、前記異なるサーバのそれぞれによって生成される別個の応答を受信するステップと、
前記アプリケーションによって、前記別個の応答の組合せに基づいて、前記アプリケーションに提示するためのデジタルコンポーネントを特定するステップと
を含むコンピュータ実装方法。 An application generates, for a digital component presented to said application, a universal identifier that is an encrypted version of a combination of (i) a campaign identifier for the content source providing said digital component and (ii) the domain of said content source. and
updating a set of universal identifiers that have been created by the application for digital components presented by the application over a specified period of time based on the generated universal identifier;
A blocked universal identifier corresponding to a universal identifier that has been (i) generated by the application and (ii) blocked from use for presenting future digital components to the application by the application. identifying a set of
generating, by the application, a probabilistic data structure representing the set of blocked universal identifiers;
creating, by the application, multiple shares of the probabilistic data structure;
sending, by the application, different shares of the plurality of shares to different servers;
receiving a separate response generated by each of the different servers based on the different ones of the plurality of shares sent by the application to the different servers;
identifying, by the application, a digital component for presentation to the application based on the combination of the distinct responses.
直近のタイムフレームでの前記ミュート要素との前記対話の検出に応答して、前記所与のデジタルコンポーネントの前記ユニバーサル識別子を含むように、ブロッキングされたユニバーサル識別子の前記組を更新するステップと
をさらに含む、請求項1に記載の方法。 detecting interaction by the application with a mute element corresponding to a given digital component presented to the application;
and updating the set of blocked universal identifiers to include the universal identifier of the given digital component in response to detecting the interaction with the muted element in the most recent timeframe. 2. The method of claim 1, comprising:
前記アプリケーションによって、前記生成されたユニバーサル識別子に基づいて、指定された時間期間にわたって前記アプリケーションによって提示されるデジタルコンポーネントについて作成されたことがあるユニバーサル識別子の組を更新することと、
前記アプリケーションによって、(i)前記アプリケーションによって生成されたことがあり、(ii)前記アプリケーションに今後のデジタルコンポーネントを提示するための使用をブロッキングされたことがあるユニバーサル識別子に対応するブロッキングされたユニバーサル識別子の組を特定することと、
前記アプリケーションによって、ブロッキングされたユニバーサル識別子の前記組を表す確率的データ構造を生成することと、
前記アプリケーションによって、前記確率的データ構造の複数のシェアを作成することと、
前記アプリケーションによって、前記複数のシェアのうちの異なるシェアを異なるサーバに送信することと、
前記アプリケーションによって、前記異なるサーバに送信された前記複数のシェアのうちの前記異なるシェアに基づいて、前記異なるサーバのそれぞれによって生成される別個の応答を受信することと、
前記アプリケーションによって、前記別個の応答の組合せに基づいて、前記アプリケーションに提示するためのデジタルコンポーネントを特定することと
を含むシステム。 An application generates, for a digital component presented to said application, a universal identifier that is an encrypted version of a combination of (i) a campaign identifier for the content source providing said digital component and (ii) the domain of said content source. and
updating a set of universal identifiers that have been created by the application for digital components presented by the application over a specified period of time based on the generated universal identifier;
A blocked universal identifier corresponding to a universal identifier that has been (i) generated by the application and (ii) blocked from use for presenting future digital components to the application by the application. identifying a set of
generating, by the application, a probabilistic data structure representing the set of blocked universal identifiers;
creating, by the application, multiple shares of the probabilistic data structure;
sending, by the application, different ones of the plurality of shares to different servers;
receiving separate responses generated by each of the different servers based on the different ones of the plurality of shares sent by the application to the different servers;
identifying, by the application, a digital component for presentation to the application based on the combination of the distinct responses.
直近のタイムフレームでの前記ミュート要素との前記対話の検出に応答して、前記所与のデジタルコンポーネントの前記ユニバーサル識別子を含むように、ブロッキングされたユニバーサル識別子の前記組を更新することと
をさらに含む、請求項9に記載のシステム。 detecting interaction by the application with a mute element corresponding to a given digital component presented to the application;
Updating the set of blocked universal identifiers to include the universal identifier for the given digital component in response to detecting the interaction with the muted element in the most recent timeframe. 10. The system of claim 9, comprising:
アプリケーションによって、前記アプリケーションに提示されるデジタルコンポーネントについて、(i)前記デジタルコンポーネントを提供するコンテンツソースについてのキャンペーン識別子と(ii)前記コンテンツソースのドメインとの組合せの暗号化バージョンであるユニバーサル識別子を生成することと、
前記アプリケーションによって、前記生成されたユニバーサル識別子に基づいて、指定された時間期間にわたって前記アプリケーションによって提示されるデジタルコンポーネントについて作成されたことがあるユニバーサル識別子の組を更新することと、
前記アプリケーションによって、(i)前記アプリケーションによって生成されたことがあり、(ii)前記アプリケーションに今後のデジタルコンポーネントを提示するための使用をブロッキングされたことがあるユニバーサル識別子に対応するブロッキングされたユニバーサル識別子の組を特定することと、
前記アプリケーションによって、ブロッキングされたユニバーサル識別子の前記組を表す確率的データ構造を生成することと、
前記アプリケーションによって、前記確率的データ構造の複数のシェアを作成することと、
前記アプリケーションによって、前記複数のシェアのうちの異なるシェアを異なるサーバに送信することと、
前記アプリケーションによって、前記異なるサーバに送信された前記複数のシェアのうちの前記異なるシェアに基づいて、前記異なるサーバのそれぞれによって生成される別個の応答を受信することと、
前記アプリケーションによって、前記別個の応答の組合せに基づいて、前記アプリケーションに提示するためのデジタルコンポーネントを特定することと
を含む動作を行わせる、非一時的コンピュータ可読記録媒体。 A non-transitory computer-readable recording medium storing instructions which, when executed by one or more data processing devices, causes the one or more data processing devices to:
An application generates, for a digital component presented to said application, a universal identifier that is an encrypted version of a combination of (i) a campaign identifier for the content source providing said digital component and (ii) the domain of said content source. and
updating a set of universal identifiers that have been created by the application for digital components presented by the application over a specified period of time based on the generated universal identifier;
A blocked universal identifier corresponding to a universal identifier that has been (i) generated by the application and (ii) blocked from use for presenting future digital components to the application by the application. identifying a set of
generating, by the application, a probabilistic data structure representing the set of blocked universal identifiers;
creating, by the application, multiple shares of the probabilistic data structure;
sending, by the application, different ones of the plurality of shares to different servers;
receiving separate responses generated by each of the different servers based on the different ones of the plurality of shares sent by the application to the different servers;
identifying a digital component for presentation to the application based on the combination of the distinct responses.
直近のタイムフレームでの前記ミュート要素との前記対話の検出に応答して、前記所与のデジタルコンポーネントの前記ユニバーサル識別子を含むように、ブロッキングされたユニバーサル識別子の前記組を更新することと
をさらに含む、請求項17に記載の非一時的コンピュータ可読記録媒体。 detecting interaction by the application with a mute element corresponding to a given digital component presented to the application;
Updating the set of blocked universal identifiers to include the universal identifier for the given digital component in response to detecting the interaction with the muted element in the most recent timeframe. 18. The non-transitory computer-readable medium of claim 17, comprising:
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2023067940A JP2023089216A (en) | 2020-12-04 | 2023-04-18 | Secured management of data distribution restriction |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2021576384A JP7267471B2 (en) | 2020-12-04 | 2020-12-04 | Secure management of data distribution restrictions |
PCT/US2020/063409 WO2022119578A1 (en) | 2020-12-04 | 2020-12-04 | Secured management of data distribution restrictions |
JP2023067940A JP2023089216A (en) | 2020-12-04 | 2023-04-18 | Secured management of data distribution restriction |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2021576384A Division JP7267471B2 (en) | 2020-12-04 | 2020-12-04 | Secure management of data distribution restrictions |
Publications (1)
Publication Number | Publication Date |
---|---|
JP2023089216A true JP2023089216A (en) | 2023-06-27 |
Family
ID=74004160
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2021576384A Active JP7267471B2 (en) | 2020-12-04 | 2020-12-04 | Secure management of data distribution restrictions |
JP2023067940A Pending JP2023089216A (en) | 2020-12-04 | 2023-04-18 | Secured management of data distribution restriction |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2021576384A Active JP7267471B2 (en) | 2020-12-04 | 2020-12-04 | Secure management of data distribution restrictions |
Country Status (6)
Country | Link |
---|---|
US (1) | US20220414247A1 (en) |
EP (2) | EP4220467A1 (en) |
JP (2) | JP7267471B2 (en) |
KR (1) | KR20220079797A (en) |
CN (1) | CN114938668A (en) |
WO (1) | WO2022119578A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20220391372A1 (en) * | 2021-06-08 | 2022-12-08 | Amadeus S.A.S. | Database offloading utilizing a locater index |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9363238B2 (en) * | 2012-06-04 | 2016-06-07 | Apple Inc. | Repackaging demographic data with anonymous identifier |
US20140324575A1 (en) * | 2013-04-30 | 2014-10-30 | AppNexus Inc. | Methods and systems for tracking consumers without server-side profiling |
US9881320B2 (en) * | 2014-05-28 | 2018-01-30 | Apple Inc. | Targeting customer segments |
US11115479B2 (en) | 2019-01-10 | 2021-09-07 | Google Llc | Enhanced online privacy |
US11245536B2 (en) * | 2019-04-16 | 2022-02-08 | Meta Platforms, Inc. | Secure multi-party computation attribution |
-
2020
- 2020-12-04 EP EP23176573.6A patent/EP4220467A1/en active Pending
- 2020-12-04 JP JP2021576384A patent/JP7267471B2/en active Active
- 2020-12-04 CN CN202080045742.XA patent/CN114938668A/en active Pending
- 2020-12-04 US US17/760,881 patent/US20220414247A1/en active Pending
- 2020-12-04 EP EP20829257.3A patent/EP4038532B1/en active Active
- 2020-12-04 WO PCT/US2020/063409 patent/WO2022119578A1/en unknown
- 2020-12-04 KR KR1020217041373A patent/KR20220079797A/en not_active Application Discontinuation
-
2023
- 2023-04-18 JP JP2023067940A patent/JP2023089216A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
CN114938668A (en) | 2022-08-23 |
WO2022119578A1 (en) | 2022-06-09 |
US20220414247A1 (en) | 2022-12-29 |
JP2023508251A (en) | 2023-03-02 |
JP7267471B2 (en) | 2023-05-01 |
EP4038532B1 (en) | 2023-07-26 |
EP4220467A1 (en) | 2023-08-02 |
KR20220079797A (en) | 2022-06-14 |
EP4038532A1 (en) | 2022-08-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20230188329A1 (en) | Using secure multi-party computation and probabilistic data structures to protect access to information | |
EP4070223B1 (en) | Using secure multi-party computation to improve content selection process integrity | |
US20230077152A1 (en) | Feedback controller using secret sharing | |
JP2023089216A (en) | Secured management of data distribution restriction | |
EP4066141A1 (en) | Privacy preserving machine learning labelling | |
EP4081971B1 (en) | Using secure mpc and vector computations to protect access to information in content distribution | |
WO2023027982A1 (en) | Cryptographically secure control using secure multi-party computation | |
US20220405407A1 (en) | Privacy preserving cross-domain machine learning | |
JP7471450B2 (en) | Improving the performance of secure multiparty computation | |
US20240022392A1 (en) | Privacy preserving measurements using secure multi-party computation | |
US20230171091A1 (en) | Flexible content selection processes using secure multi-party computation | |
US20230259815A1 (en) | Machine learning techniques for user group based content distribution | |
US20230072957A1 (en) | Privacy-preserving techniques for content selection and distribution | |
CN114930334A (en) | Additive and subtractive noise for privacy protection |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20230424 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20230424 |
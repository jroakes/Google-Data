CN112912931A - Auto-calibration of multiple cameras using near infrared illuminators - Google Patents
Auto-calibration of multiple cameras using near infrared illuminators Download PDFInfo
- Publication number
- CN112912931A CN112912931A CN201980008571.0A CN201980008571A CN112912931A CN 112912931 A CN112912931 A CN 112912931A CN 201980008571 A CN201980008571 A CN 201980008571A CN 112912931 A CN112912931 A CN 112912931A
- Authority
- CN
- China
- Prior art keywords
- point
- flood
- image
- feature
- normalized
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/80—Analysis of captured images to determine intrinsic or extrinsic camera parameters, i.e. camera calibration
- G06T7/85—Stereo camera calibration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/70—Determining position or orientation of objects or cameras
- G06T7/73—Determining position or orientation of objects or cameras using feature-based methods
- G06T7/74—Determining position or orientation of objects or cameras using feature-based methods involving reference images or patches
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N13/00—Stereoscopic video systems; Multi-view video systems; Details thereof
- H04N13/20—Image signal generators
- H04N13/204—Image signal generators using stereoscopic image cameras
- H04N13/239—Image signal generators using stereoscopic image cameras using two 2D image sensors having a relative position equal to or related to the interocular distance
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N13/00—Stereoscopic video systems; Multi-view video systems; Details thereof
- H04N13/20—Image signal generators
- H04N13/204—Image signal generators using stereoscopic image cameras
- H04N13/254—Image signal generators using stereoscopic image cameras in combination with electromagnetic radiation sources for illuminating objects
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/10—Image acquisition modality
- G06T2207/10004—Still image; Photographic image
- G06T2207/10012—Stereo images
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/10—Image acquisition modality
- G06T2207/10048—Infrared image
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/10—Image acquisition modality
- G06T2207/10141—Special mode during image acquisition
- G06T2207/10152—Varying illumination
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/30—Subject of image; Context of image processing
- G06T2207/30204—Marker
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/30—Subject of image; Context of image processing
- G06T2207/30244—Camera pose
Abstract
This document describes techniques and systems that enable automatic calibration of multiple cameras using Near Infrared (NIR) illuminators. The techniques and systems include a user device that uses NIR images captured by multiple cameras, including point images and flood images. The user device implements an auto-calibration module that normalizes the contrast of each image. Subsequently, an auto-calibration module detects point features in the point image and detects flood features in the flood image. The auto-calibration module uses the flood feature to disambiguate the point feature in the point image. The auto-calibration module then uses the disambiguated point features to determine new calibration parameters for recalibration of the plurality of cameras. In some aspects, the auto-calibration module detects a flood feature using a point image instead of a flood image to disambiguate the point feature.
Description
Background
Computer security using facial authentication solutions provides a convenient and simple way for users to securely access accounts or sign transactions, which enhances the user experience. The user device may capture images for face authentication using a stereo camera, which typically requires accurate calibration to enable depth measurements. However, the camera may have an event that invalidates its factory calibration. For example, the user device may be dropped on a hard surface, which may cause one or both cameras to be out of alignment. Another example includes thermal expansion, which can change camera calibration at different temperatures. Typical auto-calibration solutions without external lighting may fail due to insufficient texture in the scene for the camera to identify key points for calibration.
Disclosure of Invention
This document describes techniques and systems that enable automatic calibration of multiple cameras using Near Infrared (NIR) illuminators. The techniques and systems include a user device that uses NIR images captured by multiple cameras, including point images and flood images. The user device implements an auto-calibration module that normalizes the contrast of each image. Subsequently, an auto-calibration module detects point features in the point image and detects flood features in the flood image. The auto-calibration module uses the flood feature to disambiguate (disambiguate) the point feature in the point image. The auto-calibration module then uses the disambiguated point features to determine new calibration parameters for recalibration of the plurality of cameras. In some aspects, an auto-calibration module detects a flood feature in a spot image using a spot image instead of a flood image in a flood pipeline to disambiguate the spot feature.
This summary is provided to introduce simplified concepts related to automatic calibration of multiple cameras using near infrared illuminators, which are further described below in the detailed description and accompanying drawings. This summary is not intended to identify key features of the claimed subject matter, nor is it intended to be used to determine the scope of the claimed subject matter.
Drawings
Details of one or more aspects of automatic calibration of multiple cameras using near infrared illuminators are described in this document with reference to the following figures. The same reference numbers are used throughout the drawings to reference like features and components.
FIG. 1 illustrates an example environment in which techniques for auto-calibration of multiple cameras using near-infrared illuminators may be implemented.
Fig. 2 illustrates an example implementation of the user device of fig. 1 including an auto-calibration module for calibrating a plurality of cameras.
Fig. 3 illustrates an example stereo near-infrared camera system.
FIG. 4 illustrates an example schematic diagram of an auto-calibration module operable to calibrate a plurality of cameras using near-infrared illuminators.
FIG. 5 illustrates an example schematic diagram of the auto-calibration module of FIG. 4 in further detail in terms of point projector and floodlight usage.
FIG. 6 illustrates an example schematic diagram of the auto-calibration module of FIG. 4 in further detail in accordance with the use of a point projector.
FIG. 7 depicts a method for automatic calibration of multiple cameras using a near infrared illuminator comprising a point projector and a flood illuminator.
FIG. 8 depicts a method for automatic calibration of multiple cameras using near infrared illuminators including point projectors.
Fig. 9 illustrates an example computing system that may be implemented as, or within any type of client, server, and/or electronic device to implement, the techniques for auto-calibration of multiple cameras using near-infrared luminaires as described with reference to fig. 1-8.
Detailed Description
SUMMARY
This document describes techniques and systems that enable automatic calibration of multiple cameras using Near Infrared (NIR) illuminators. Calibration of a multi-camera system, such as a stereo camera, may be disabled based on various events including impact forces or thermal expansion. The general auto-calibration solution may fail for multi-camera systems that do not use external illumination, since the texture on the scene is not sufficient for the cameras to identify the key points for calibration. To provide reliable auto-calibration techniques for multi-camera systems that do not use external illumination in the visible spectrum, such as stereoscopic near-infrared (NIR) cameras that use near-infrared illuminators, techniques and systems are described to find correspondences between pairs of images captured by a stereoscopic near-infrared camera and then to feed these correspondences to an optimization solver that provides a new calibration for the camera. More specifically, the camera captures a dot image pair based on NIR light output by the dot projector, and a flood image pair based on NIR light output by the flood projector. The point image pairs are fed into a point pipeline to determine point features. The flood image pairs are fed into a flood pipeline to detect flood feature matches between the flood image pairs. Subsequently, ambiguity (ambiguity) between point features in the point image pairs is resolved using floodlight feature matching, which enables point features to be matched between point images. Using the matching point features, the solver produces a camera calibration pattern that minimizes the error between the matching point features from each of the point image pairs (e.g., left and right point images) and estimates new calibration parameters with which to update the camera.
In various aspects, a method of automatic calibration of a plurality of cameras using a near-infrared illuminator performed by a user device is described. The method comprises the following steps: a plurality of images is received from a stereo near-infrared camera system, the plurality of images including a point image and a flood image. The method further comprises the following steps: the contrast of the image is normalized to provide a normalized point image and a normalized flood image. In addition, the method comprises: point features in each normalized point image are detected. Further, the method comprises: detecting a flood feature in each normalized flood image by identifying the location of the feature points in the normalized flood image and determining the surrounding context of the feature points; a flood feature match is determined based on a comparison of flood features between the normalized flood images. Further, the method comprises: detected point features are disambiguated using flood feature matching to determine point feature correspondences between normalized point images. In addition, the method comprises: updated calibration parameters for the stereoscopic near-infrared camera system are determined based on the point feature correspondences. The calibration parameters are updated for image capture using the stereoscopic near-infrared camera system.
In various aspects, a method of automatic calibration of multiple cameras in a user device using a near infrared illuminator is described. The method comprises the following steps: receiving a pair of point images from a stereo near-infrared camera system; and normalizing the contrast of each point image to provide a normalized point image pair. The method further comprises the following steps: in the point pipeline, point features in each of the normalized point images are detected. Further, the method includes, in a floodlighting pipeline: detecting a flood feature in a local region of each of the normalized point images, the flood feature corresponding to a descriptor of a location of the feature point and a surrounding context of the location of the feature point; and determining a flood feature match based on a comparison of flood features between the normalized spot image pairs. Further, the method comprises: floodlight feature matching is used to disambiguate detected point features and determine point feature correspondences between normalized point image pairs. Further, the method comprises: updated calibration parameters for the stereoscopic near-infrared camera system are determined based on the point feature correspondences.
These are just a few examples of how the described techniques and devices may be used to implement auto-calibration of multiple cameras using near-infrared illuminators. Other examples and embodiments are described throughout this document. This document now turns to an example operating environment, with example apparatus, methods, and systems described hereafter.
Operating environment
FIG. 1 illustrates an example environment 100 in which techniques to implement auto-calibration of multiple cameras using near-infrared illuminators may be implemented. The example environment 100 includes a user device 102 (e.g., an electronic device) that includes or is associated with a Near Infrared (NIR) camera system 104, an auto-calibration module 106. As described further below, the NIR camera system 104 is a stereoscopic camera system that includes an NIR illuminator 108, a first NIR camera 110, and a second NIR camera 112. The NIR camera system 104 is implemented to capture an image of the user 114 for facial authentication to unlock the user device 102. Images are captured using Near Infrared (NIR) light, which generally refers to light in a wavelength range between about 750nm and 2,500 nm. The NIR light is invisible to the human eye and therefore may be used to capture an image of user 114 without external illumination (e.g., in the dark). As described further below, NIR illuminator 108 projects a dot pattern of NIR light and also a flood of NIR light. A first NIR camera 110 positioned to the right of the device (left of the user when the device is facing the user) captures a right flood image 116 and a right spot image 118. Similarly, a second NIR camera 112 positioned to the left of the device (to the right of the user when the device is facing the user) captures a left flood image 120 and a left spot image 122.
If the user device 102 experiences an impact force, such as by falling on a hard surface 124, the first and second NIR cameras 110, 112 may physically move within the user device 102, which may invalidate the calibration of the cameras relative to each other. The user device 102 may experience thermal expansion (not shown) that may also negatively affect the calibration of the stereo camera by physically altering its position. The next time the user 114 attempts to unlock the user device 102 using facial authentication, the unlocking attempt may fail due to miscalibration of the first and second NIR cameras 110, 112. For example, facial features of the user 114 in each of the left and right images are unlikely to match, resulting in data that cannot be verified compared to known profile data used to unlock the user device 102.
To address these calibration invalidators (invalidators), these techniques automatically calibrate the user device 102 using images captured by the NIR camera system 104. By doing so, these techniques automatically update the calibration of the first NIR camera 110 and the second NIR camera 112. The auto-calibration module 106 may perform auto-calibration during a facial authentication attempt using the NIR camera system 104 to unlock the user device 102. If authentication is denied, then the user device 102 remains in the locked state 126-1, as represented by the locked icon 128. If the user 114 is authenticated, the user device 102 transitions to the unlocked state 126-2, as represented in FIG. 1 by the unlock icon 130.
Throughout this disclosure, examples are described in which a computing system (e.g., user device 102, client device, server device, computer, or other type of computing system) may analyze information associated with a user (e.g., radar, inertial, and facial recognition sensor data), such as the facial features just mentioned. However, the computing system may be configured to use the information only after the computing system receives explicit permission to use the data from a user of the computing system. For example, where the user device 102 analyzes sensor data of facial features to authenticate the user 114, the sensor data is contained in and cannot be removed from the secure pipeline. The individual user may have constant control over which programs may or may not process the sensor data. Additionally, the collected information may be pre-processed in one or more ways before being delivered, stored, or otherwise used, such that personally identifiable information may be removed. For example, before the user device 102 shares sensor data with another device (e.g., to train a model executed at the other device), the user device 102 may pre-process the sensor data to ensure that any user identification information or device identification information embedded in the data is removed. Thus, the user may control whether information is collected about the user and the user device and, if so, how the computing device and/or remote computing system may use such information.
In more detail, considering fig. 2, which illustrates an example implementation 200 of the user device 102, the user device may implement automatic calibration of multiple cameras using near infrared illuminators. The user device 102 of fig. 2 is illustrated with various example devices including a smartphone 102-1, a tablet 102-2, a laptop computer 102-3, a desktop computer 102-4, a computing watch 102-5, computing glasses 102-6, a gaming system 102-7, a home automation and control system 102-8, and a microwave oven 102-9. User devices 102 may also include other devices such as televisions, entertainment systems, audio systems, automobiles, drones, track pads, graphics tablets, netbooks, e-readers, home security systems, and other household appliances. Note that the user device 102 may be wearable, non-wearable but mobile or relatively stationary (e.g., desktop and appliance).
The facial recognition module 206 may invoke a machine learning model to generate authentication data usable for verification against stored security data using NIR images (e.g., images 116, 118, 120, 122) captured by the NIR camera system 104 in order to authenticate the user 114 and unlock the user device 102. The computer-readable medium 204 includes a stored profile that is not accessible by processes or applications in the user space.
The user device 102 may also include a network interface 208. The user equipment 102 may use the network interface 208 to communicate data over a wired, wireless, or optical network. By way of example, and not limitation, network interface 208 may communicate data over a Local Area Network (LAN), a Wireless Local Area Network (WLAN), a Personal Area Network (PAN), a Wide Area Network (WAN), an intranet, the internet, a peer-to-peer network, or a mesh network.
The user device 102 may also include an authentication system 210. Various embodiments of authentication system 210 may include a system on a chip (SoC), one or more Integrated Circuits (ICs), a processor with embedded processor instructions or configured to access processor instructions stored in memory, hardware with embedded firmware, a printed circuit board with various hardware components, or any combination thereof. As described in further detail below, the authentication system 210 may implement the facial recognition module 206 in a secure mode to compare authentication data received from the user 114 with security data stored in a secure store for authenticating the user 114 to unlock the user device 102. In some aspects, authentication system 210 uses image data obtained from NIR camera system 104 to generate authentication data and provides the authentication data to secure storage to enable the secure storage to compare the authentication data to stored security data and determine if there is a match.
The NIR camera system 104 is implemented to capture NIR image data that may be used to generate a three-dimensional depth map of an object, such as a user's face. The NIR camera system 104 is described in more detail in fig. 3. As illustrated in fig. 3, NIR camera system 104 includes NIR illuminator 108, which includes point projector 302 and flood illuminator 304. The NIR camera system 104 also includes a left camera sensor 308, a right camera sensor 306, an image processor unit 310, and a camera driver system 312.
NIR illuminator 108 projects light in the near infrared spectrum and includes a point projector 302 and a flood illuminator 304. Floodlight 304 illuminates the object with a dedicated flash of NIR light. Right camera sensor 306 and left camera sensor 308 (e.g., first NIR camera 110 and second NIR camera 112, respectively) each capture an image of the subject (referred to herein as a flood image) by capturing photons from NIR light reflected by the subject based on NIR light output by flood illuminator 304. The dot projector 302 projects a plurality (e.g., hundreds, thousands) of NIR dots onto the subject, and the right camera sensor 306 and the left camera sensor 308 each capture an image of the resulting dot pattern (referred to herein as a dot image). The image processor unit 310 reads the image and the dot pattern, and generates a three-dimensional face image. Because multiple (e.g., two) cameras are used, the image processor unit 310 computes the difference between matching points on different captured images, which provides a depth measurement for the corresponding pixels that can be used to generate a three-dimensional face map.
The camera driver system 312 enables communication between the NIR camera system 104 and other components of the user device 102, such as the computer processor 202, the auto-calibration module 106, and the authentication system 210. The camera driver system 312 may be initiated by any suitable trigger, such as a user input received via an actuation control or a push button or a signal received from one or more sensors 212. In an example, the proximity sensor may transmit a signal indicating that the user 114 is proximate to the user device 102 and is likely to attempt to unlock the user device 102 using facial authentication due to the proximity. The camera driver system 312 also controls the settings of the right camera sensor 306 and the left camera sensor 308, including calibration parameters.
Referring back to fig. 2, as mentioned above and as further described below, auto-calibration module 106 may use the captured images from NIR camera system 104 to determine calibration updates for right camera sensor 306 and left camera sensor 308. When the dot image pairs and/or flood image pairs captured by the right camera sensor 306 and the left camera sensor 308 fail to produce a sufficient number of correspondences (e.g., matching features between the left dot image and the right dot image and/or between the left flood image and the right flood image) to enable the depth measurement, the auto-calibration module 106 may perform a calibration update at any suitable time, such as during a facial authentication attempt. In one aspect, the auto-calibration module 106 sends a spot image pair through a spot pipeline and separately sends a flood image pair through a flood pipeline. The output of the floodlight pipeline is combined with the output of the point pipeline to disambiguate point features in the point image. Subsequently, auto-calibration module 106 uses an iterative solver, such as a linear solver, to determine calibration updates for right camera sensor 306 and left camera sensor 308.
Alternatively, the auto-calibration module 106 may use the dot image pairs as separate inputs to the point pipeline and the flood pipeline. By processing local regions of a point image in the floodlighting pipeline, rather than processing the point image globally, the floodlighting pipeline can produce point features and descriptors that can be used to disambiguate the output of the point pipeline. The auto-calibration module 106 may then use an iterative solver, such as a non-linear solver, to determine calibration updates for the right camera sensor 306 and the left camera sensor 308.
The sensors 212 of the user device 102 may include any of a variety of sensors, such as an audio sensor (e.g., a microphone), a touch input sensor (e.g., a touch screen), an image capture device (e.g., a camera or a video camera), a proximity sensor (e.g., a capacitive sensor), or an ambient light sensor (e.g., a photodetector). In at least some implementations, the user device 102 can include a radar system (not shown) to detect proximity of the user 114 to the user device 102 and, based on the proximity, initiate one or more components and/or functions, such as initiating the NIR camera system 104 and the authentication system 210 to initiate a facial authentication attempt.
These and other capabilities and configurations, as well as the manner in which the entities of fig. 1-3 act and interact, are set forth in more detail below. These entities may be further divided, combined, etc. The environment 100 of fig. 1 and the detailed descriptions of fig. 2-9 illustrate some of the many possible environments and devices that can employ the described techniques.
FIG. 4 illustrates an example schematic diagram 400 of the auto-calibration module from FIG. 1 operable to calibrate a plurality of cameras using near-infrared illuminators. The auto-calibration module 406 receives the NIR image 402 from the NIR camera system 104 described with respect to fig. 1-3. The NIR image 402 as described above includes a dot image pair and a flood image pair. The dot image pair may include a left dot image 122 and a right dot image 118. The flood image pair can include a left flood image 120 and a right flood image 116. As described further below, in some aspects, the NIR image 402 may include a dot image pair without a flood image. Each pair of images 402 may include a left image and a right image captured by left camera sensor 308 and right camera sensor 306, respectively.
The auto-calibration module 106 includes a local contrast normalizer 404 that normalizes the contrast of the NIR image 402 in a limited region. For example, the local contrast normalizer 404 may perform histogram equalization in each of a plurality of limited regions of the image. These regions may be of any suitable size, including NxM pixels. In one example, N and M are equal. When the local contrast normalizer 404 sweeps the NxM filter over the image, it makes an equalization change. This variation normalizes the bright and dark portions of the image to similar intensities, essentially graying out those portions and leaving edges in the image. The local contrast normalizer 404 normalizes the contrast of each spot image and each flood image.
The normalized point images are passed to a point pipeline 406 that includes a point feature detector 408. The normalized flood image is passed to a flood pipeline 410 that includes a corner detector 412, a feature descriptor 414, and a flood feature matcher 416. The point feature detector 408 is a matched filter that identifies the location of points projected by the point projector 302 and captured by the right camera sensor 306 and the left camera sensor 308 in each of the left point image 118 and the right point image 122.
Feature descriptors 414 encode the locations of feature points detected by corner detector 412. The feature points may be encoded using any suitable feature descriptors, which provide the surrounding context of the feature points. One example feature descriptor is a binary robust independent basic feature (BRIEF) algorithm. BRIEF provides a bit vector that encodes information about the local region around the XY location detected by the corner detector 412 in both the left and right normalized flood images.
A flood feature matcher 416 matches feature positions between the left and right flood images and provides a flood feature match. A floodlight feature refers to a combination of a detected corner point and a corresponding descriptor at the location of the detected corner point. In one example, the flood feature is a combination of corners detected by FAST and BRIEF descriptors at the corner locations. The flood light feature matcher 416 compares the flood light features identified in the two flood light images and generates a matching correspondence. Several distance metrics may be used to determine the quality of the correspondence of the match. In one example, feature locations are matched between the left and right flood images based on a hamming distance, which is a calculation of the correlation between features. Other correspondence quality checks may also be implemented, including a class expectation maximization algorithm or other algorithm for filtering outlier correspondences to improve quality.
The combined feature matcher 418 uses the output from the floodlighting pipeline to disambiguate or filter the output from the point pipeline. More specifically, the combined feature matcher 418 solves for ambiguity between points in the left point image 122 and points in the right point image 118 by determining a correspondence between the two point images using flood feature matching and the output by the flood feature matcher 416. Floodlight feature matching from the floodlight image is used as an anchor point in the point image to match additional points around the anchor point.
Solver 420 uses the matching correspondence between the right and left point images to generate updated calibration parameters 422 for right camera sensor 306 and left camera sensor 308. Solver 420 can be a linear solver, a non-linear solver, or a solver having a combination of linear and non-linear aspects. These and other capabilities and configurations are described in more detail below with respect to fig. 5 and 6. These components and aspects of the auto-calibration module 106 may be further divided, combined, and the like.
Fig. 5 illustrates an example schematic diagram 500 of the auto-calibration module of fig. 4 in further detail in accordance with the use of a point projector and a flood light. In the example schematic diagram 500, a point image 502 and a flood image 504 captured by the NIR camera system 104 are received in an image space 506 by the auto-calibration module 106. The dot image 502 includes a pair of dot images (e.g., left and right dot images captured by the left and right camera sensors 308 and 306, respectively). The auto-calibration module 106 includes a rotator 508 that rotates each of the point image 502 and the flood image 504. Subsequently, the auto-calibration module 106 passes the rotated point image to a first local contrast normalizer (LCN 1510) and the rotated flood image to a second local contrast normalizer (LCN 2512), both LCN 1510 and LCN 2512 being included in the rotated image space 514. LCN 1510 and LCN 2512 are both examples of local contrast normalizer 404 in fig. 4.
As described above, the LCN 1510 normalizes the rotated dot images and provides the normalized dot images to the dot detector 516. The point detector 516 detects the position of a point in each of the normalized point images. The point detector 516 is a matched filter (e.g., a linear filter) that compares the segments of the input image to a known template of the dot pattern from the dot projector 302. In an example, the dot pattern is a five-dot quincunx grid including four dots forming a square and one dot at the center of the square. The point detector 516 sweeps the pattern over the image and marks the positions corresponding to the matches (e.g., five points aligned with five points of the filter). The point detector 516 outputs the numerical position of a point in the image.
Normalization of the contrast of the point image normalizes the response of the point detector 516 to effectively enable a single threshold (e.g., an intensity threshold) to be used in determining what is considered a detected point (e.g., a set of matching responses) when analyzing the output of the linear filter in the point detector 516. If the strength of the matching response is above the threshold, the matching response is determined to be the detected point. Without normalization of contrast, there is a degree of response of the point detector 516 that is different over the image field of view based on various depths in the scene and various reflectance. These differences may result in some dots not being detected due to their overexposure or underexposure. For example, if the image includes a user with fair skin and wearing a dark coat, point detector 516 may detect a bright point on the user's face (e.g., strong response) and a dark point on the coat (e.g., weak response) and determine that the dark point may not be considered a detected point. Normalizing the contrast first causes the bright and dark spots to have the same intensity and the response of the spot detector 516 to be relatively the same across the image, which makes the spots more easily recognizable by the filter.
Using the normalized image as an input to the point detector 516 enables a single threshold to identify the location of the dot pattern in the image. Without normalization, the darker areas may not trigger the filter threshold.
The point detector 516 provides an output to a point connector 518 and a rectifier 520. The point connector 518 calculates the neighboring points given a starting point. The starting points are output by the point detector 516, and the point connector 518 identifies the closest proximity of each starting point on each point image. The results of the point connector 518 are passed to a point matcher 522 in rectified image space 524.
The rectifier 520 is a feature point rectifier that distorts and transforms feature points into canonical space (canonical space) before they are run through a matching algorithm to find correspondences between images (e.g., representing correspondences between cameras). The corrector 520 corrects the feature points using the raw calibration of the camera sensor. For example, if the two camera sensors 306, 308 are slightly out of position relative to each other, the rectifier 520 may transform the coordinate system of the XY positions of the points in the left and right point images to canonical space, which enables the points to be more accurately matched. The rectifier 520 provides the output of the rectified point to a point matcher 522.
LCN 2512 normalizes the rotated flood image and provides the normalized flood image to flood detector 526. Flood detector 526 includes corner detector 412 and feature descriptor 414 from fig. 4. The flood detector 526 provides the landmark positions and the characterizers from each of the flood images 504 to the rectifier 520. The rectifier 520 transforms the feature point locations from the flood image 504 to the canonical space described above. The rectifier 520 then outputs the rectified flood feature points to a point matcher 522, a flood matcher 528, a flood interior pointer 530, and a match splicer 532.
A flood matcher 528 (e.g., flood matcher 416) attempts to find a match between the XY location and the descriptors of the rectified flood feature points in the left and right flood images. In various aspects, the flood matcher 528 uses a cost function, such as hamming distance. The flood matcher 528 passes the set of detected matches to a flood insider 530 for filtering the detected matched outstors (outliers). In various aspects, the flood matcher 528 and flood interior pointer (inlier)530 are implemented together as part of the flood feature matcher 416 of fig. 4. Alternatively, the flood matcher 528 and flood interior pointer 530 may be implemented separately.
The floodlight interior pointer 530 takes as input an initial set of matches between the left floodlight image and the right floodlight image and filters them to produce a subset of matches having fewer false matches than the initial set of matches. In an example, the flood inside spotter 530 implements a method similar to that of the expectation-maximization algorithm that determines which of the matches are correct matches and which are false (e.g., outside spotters). In some instances, flood images 504 can include noise that produces false feature matches between flood images 504. For example, if the flood image 504 includes a wall that does not have a feature point of interest, then several random matches that do not correspond to the same point may be identified due to noise in the flood image 504. Accordingly, floodlight interior spotter 530 removes false matches from the initial set of matches and outputs correct matches.
In addition, floodlight interior spotter 530 may include first to second matched correspondence filters to further filter exterior spotter matches. When matching features from left to right in an image, there may be many candidates to match a particular feature in another image. The filter determines the cost of the best candidate and the cost of the next best candidate. If the cost ratio between two candidates is above a threshold (e.g., a similarity threshold), both candidates are considered to be low confidence matches and therefore do not match a particular feature in the other image. If the cost ratio is below a threshold, the best candidate may be considered a match with a particular feature in another image and the next best candidate may be considered a mismatch.
The point matcher 522 uses the rectified points, the rectified flood feature points, the output of the flood interior spotter 530, and the output of the point connector 518 as inputs to determine a match between points in the left-point image 502 and the right-point image 502. It can be assumed that substantially all points in the point image 502 look the same. Thus, information from the flood image is used to match points between the left-point image 502 and the right-point image 502. In an example, point matcher 522 uses the matched location from floodlight image 504 as an anchor point in the point image to find a correspondence between left point image 502 and right point image 502. In particular, the point matcher 522 uses the XY location and the anchor point location to identify additional matches in the point image, such as points surrounding the anchor point. In a simple example, imagine a flood feature match anchoring two points together, one in the left point image 122 and one in the right point image 118. Using this information, the point matcher 522 may also match points near the anchor point. The point matcher 522 uses a combination of the anchor point and the point proximity information to provide an output that includes an index pair (I, J) that indicates which feature (e.g., point) in the left point image 122 matches which feature in the right point image 118.
The point matcher 522 provides an output of the point correspondences to a matching splicer 532. In various aspects, both the point matcher 522 and the matching splicer 532 are part of the combined feature matcher 418 in fig. 4. Alternatively, the point matcher 522 and the matching splicer 532 may be implemented separately.
The matching splicer 532 uses the rectified points (output by the rectifier 520), the point correspondences (output by the point matcher 522), and the correct flood feature matches (output by the flood interior spot splicer 530) as inputs to combine matches found as part of the flood pipeline with those found in the point pipeline. The result is output to a linear solver 534.
Linear solver 534 includes an iterative solver, such as an L1 solver or an L2 solver, which produces a camera calibration pattern that minimizes the correction error between the matched correspondences from the left and right point images. In essence, linear solver 534 performs a linear approximation of the non-linear problem. For example, points from the left image are warped into the right image to measure misalignment (e.g., y-axis phase difference) between the points. This enables the stereo algorithm for depth calculation to run on the same scanline in the image pair. The linear solver 534 attempts to fit the locations of the correspondences matched by the matching splicer 532 into the new calibration parameters. In various aspects, linear solver 534 optimizes focal length, roll (relative to between the two camera sensors 306, 308), and vertical shift (relative to between the two camera sensors 306, 308). To improve robustness, particularly in the presence of mismatches, linear solver 534 may use the L1 error rather than the squared error. The L1 error refers to the minimum absolute deviation. The linear solver 534 outputs updates to be made to the calibration parameters that minimize the correction error between the left-point image and the right-point image.
Based on the output of linear solver 534, the raw calibration parameters for camera sensors 306, 308 are calibration updated 536 to provide new calibrations for camera sensors 306, 308. The auto-calibration module 106 passes the new calibration parameters to the camera driver system 312 to recalibrate the right camera sensor 306 and the left camera sensor 308 to capture the append point image and the flood image.
Fig. 6 illustrates an example schematic 600 of automatic calibration of multiple cameras using a point projector (without a flood light). Many of the components illustrated in the schematic diagram 600 are similar to those described in fig. 5, and are therefore described in further detail above. Due to hardware limitations, point images are typically captured at a time separate from the flood image, which in some cases can lead to aliasing when matching features between images. Thus, the example schematic diagram 600 provides an alternative to using only the point images 502 (and the original camera calibration parameters) as input to automatically calibrate multiple cameras. Flood image 504 is not used in this schematic 600 to automatically calibrate multiple cameras.
In the illustrated example, pairs of point images 502 are used as input to the automatic calibration module 106 in order to calibrate the camera sensors 306, 308. In image space 506, the point image 502 is rotated and passed to the LCN 1510 in the rotated image space. As described above, the LCN 1510 normalizes the contrast in each of the point images. The LCN 1510 then outputs the same normalized point image as a separate instance to both the flood pipeline and the point pipeline, as described with reference to fig. 4. For example, the LCN 1510 passes the normalized point images to the point detector 516, which detects the location of points in each of the normalized point images. LCN 1510 also provides the normalized point image as output to flood detector 526.
The point detector 516 passes the output to a point connector 518, an appliance 520, and also to a matching splicer 532. The rectifier 520 rectifies the detected points output by the point detector 516 into a canonical space based on the raw calibration parameters of the camera sensors 306, 308 and outputs rectified point positions to a point matcher 522 in a rectified image space 524. The point connector 518 takes the point location from the point detector 516 and calculates the neighborhood of each point. The point connector 518 then passes the output to a point matcher 522.
Using the normalized point image, the flood detector 526 provides descriptors of XY position and flood characteristics to each of the aligner 520 and the matching splicer 532. Flood detector 526 determines the XY location of the points by searching for a limited area (e.g., a narrow segment on the y-axis and also a limited length on the x-axis) of each of the point images 502. Limiting the search area reduces ambiguity between points and provides enough information (e.g., texture) in the image to faithfully match points between the left point image 502 and the right point image 502. The rectifier 520 distorts and rectifies the XY position and descriptor to provide a rectified flood signature to each of a point matcher 522 and a flood matcher 528 in a rectified image space 524. A flood matcher 528 (e.g., flood matcher 416) attempts to find a match between the XY location and the descriptors of the rectified flood feature points in the left and right flood images 504 and 504. The flood matcher 528 passes the detected match to a flood interior spotter 530 to filter the detected matched exterior spotter. The flood inlier 530 filters matches that are within the similarity threshold of another match to effectively remove false matches and maintain a correct match. The flood interior spotter 530 outputs the results to a point matcher 522 and a matching splicer 532.
As described above, the point matcher uses the rectified points, the rectified flood feature points, the output of the flood interior spotter 530, and the output of the point connector 518 as inputs to determine a match between points in the left and right point images 502, 502. The point matcher 522 outputs the point correspondences between the two point images 502 to the matching splicer 532 to be used as anchor points in the point images 502. The matching splicer 532 uses the outputs from the flood detector 526, the point detector 516, the point matcher 522, and the flood inside clicker 530 to determine additional matching points around the anchor point. The results of the matched splicer 532 are then passed to the non-linear solver 602.
The non-linear solver 602 is configured to optimize the six degree of freedom (6-DOF) pose of one camera relative to the other camera to effectively minimize the non-linear objective function. The objective function includes an extra perturbation (extra nuisance) and/or a latent variable (late variable) representing the positions of N three-dimensional (3D) points in space that can seemingly reasonably interpret a set of N match detections in two images. Thus, the objective function is a weighted combination of the two terms. The first term robustly measures the reprojection error, which is derived by projecting the current estimates of the N3D points in two views and comparing with the detection. The second term penalizes the 6-DOF pose estimates in low confidence regions in the prior distribution of the empirical dataset fitted to the possible 6-DOF poses.
In various aspects, the non-linear solver 602 attempts to find the 6-DOF pose of one camera relative to another by solving for the relative translation and rotation of the cameras. To do so, nonlinear solver 602 optimizes the reprojection error. The reprojection error is a geometric error corresponding to the image distance between the projected point and the measured point. The reprojection error is used to quantify how closely the estimate of the 3D point recreates the observed detection of the point in both views. Non-linear solver 602 is optimized on the hypothesized point cloud as compared to linear solver 534, which warps the points from left point image 122 to right point image 118. For example, the point cloud is generated based on a non-linear solver that optimizes the 3D points corresponding to each match found. Subsequently, using the current estimates of the calibration parameters, a point cloud is projected into each of the point images 502, and the non-linear solver 602 measures the phase differences in the x-and y-directions. The optimizer iteratively attempts to update both the calibration parameters and the positions of the points to minimize the measured phase difference. As a result, new calibration parameters for the camera sensors 306, 308 are obtained.
To improve robustness, non-linear solver 602 measures the L1 error, rather than the squared error. In an example, non-linear solver 602 uses a cauchy error metric or a truncated quadratic metric that is more robust than the squared error. For example, if the reprojection error of a match is greater than two or three pixels, then inlier matching is prioritized to attenuate the effect of the match.
In addition to measuring re-projection errors, the optimizer may also be penalized by moving too far from the possible pose distribution (determined empirically). Thus, even if a 6-DOF estimate that is far beyond the expected range (e.g., an attitude that is empirically determined to be unlikely) yields a low reprojection error, the non-linear solver 602 may not be encouraged to select the 6-DOF estimate, but rather a more likely attitude that preferentially yields a slightly higher reprojection error.
Example method
Fig. 7 and 8 depict example methods 700 and 800 for auto-calibration of multiple cameras using near-infrared illuminators. Methods 700 and 800 may be performed by user device 102 using auto-calibration module 106 to auto-calibrate multiple cameras using NIR illuminators. The method 700 uses the point image and the flood image as inputs for auto-calibration. The method 800 uses a point image (no flood image) as input for auto-calibration.
In 702, an auto-calibration module receives a plurality of images from a stereo near-infrared camera system for calibration. For example, auto-calibration module 106 receives a point image 502 (e.g., left point image 122 and right point image 118) along with a flood image 504 (e.g., left flood image 120 and right flood image 116).
In 704, the auto-calibration module normalizes the contrast of the image to provide a normalized point image and a normalized flood image. For example, local contrast normalizer 404 normalizes the contrast of each of images 502, 504 and passes the normalized point images to point pipeline 406 and the normalized flood images to flood pipeline 410.
At 706, the auto-calibration module detects point features in each normalized point image. For example, the point feature detector 408 in the point pipeline 406 identifies the location of points in the normalized point image 502.
At 708, the auto-calibration module detects the flood features in each normalized flood image by identifying locations of feature points in the normalized flood image and determining a surrounding context of the feature points. For example, corner detector 412 identifies a feature point location in the normalized flood image, and feature describer 414 encodes the feature point location along with the surrounding context of the feature point.
In 710, the auto-calibration module determines a flood light feature match based on a comparison of flood light features between the normalized flood light images. For example, the flood feature matcher 416 matches feature locations between the left flood image and the right flood image based on the feature location and the descriptors to provide a flood feature match.
At 712, the auto-calibration module uses flood feature matching to disambiguate the detected point features and determine point feature correspondences between the normalized point images. In an example, the combined feature matcher 418 filters the detected points from the point feature detector 408 using flood feature matching from a flood feature matcher 416. More specifically, flood feature matching is used as an anchor point in the point image to identify additional matches.
In 714, the auto-calibration module determines updated calibration parameters for the stereoscopic near-infrared camera system based on the point feature correspondence. In an example, a solver 420, such as a linear solver 534, uses the matching correspondence between the left point image and the right point image to generate updated calibration parameters for the NIR camera system 104.
FIG. 8 illustrates an example method 800 for automatic calibration of multiple cameras using near infrared illuminators, particularly point projectors. At 802, an auto-calibration module receives a pair of point images from a stereo near-infrared camera system. Here, the pair of dot images 502 (e.g., left dot image 122 and right dot image 118) is used for auto-calibration purposes without any flood images. The same pair of point images 502 is used as a separate input to the point pipeline 406 and the floodlight pipeline 410 after being normalized by the local contrast normalizer 404.
At 804, the auto-calibration module normalizes the contrast of each point image to provide a normalized point image pair. As described above, the local contrast normalizer 404 normalizes the contrast of the point image 502.
At 806, the auto-calibration module detects point features in each of the normalized point images in the point flow. As described above, the point feature detector 408 in the point pipeline 406 identifies the location of points in the normalized point image 502.
At 808, the auto-calibration module detects floodlight features (e.g., points) in a local region of each of the normalized point images in floodlight flow. Rather than using a flood image in the flood pipeline 410, the local contrast normalizer 404 passes the normalized point image to the flood pipeline 410 to determine a flood feature in the normalized point image. The flood pipeline may analyze the normalized point images in a limited area to determine a flood characteristic.
At 810, the auto-calibration module determines a flood feature match based on a comparison of flood features between the normalized point images. For example, the flood feature matcher 416 matches feature locations between the left and right point images based on the feature location of the flood feature and the descriptors.
At 812, the auto-calibration module uses flood feature matching to disambiguate the detected point features and determine point feature correspondences between the normalized point images. For example, the combined feature matcher 418 uses the point XY location from the point feature detector 408 and the anchor point location from the floodlight feature matcher 416 to provide additional matches in the point image 502.
In 814, the auto-calibration module determines updated calibration parameters for the stereo near-infrared camera system 104 based on the point feature correspondences. In an example, solver 420, such as non-linear solver 602, optimizes the 6-DOF pose of first NIR camera 110 (e.g., right camera sensor 306) relative to second NIR camera 112 (e.g., left camera sensor 308).
In general, any of the components, modules, methods, and operations described herein may be implemented using software, firmware, hardware (e.g., fixed logic circuitry), manual processing, or any combination thereof. Some operations of the example methods may be described in the general context of executable instructions stored on a computer-readable storage memory, local and/or remote to a computer processing system, and embodiments may include software applications, programs, functions, and so forth. Alternatively or additionally, any of the functionality described herein may be performed, at least in part, by one or more hardware logic components, such as, but not limited to, Field Programmable Gate Arrays (FPGAs), Application Specific Integrated Circuits (ASICs), Application Specific Standard Products (ASSPs), systems on a chip (socs), Complex Programmable Logic Devices (CPLDs), and the like.
Example computing System
Fig. 9 illustrates various components of an example computing system 900 that can be implemented as any type of client, server, and/or electronic device as described with reference to previous fig. 1-8 to implement techniques for auto-calibration of multiple cameras using near-infrared illuminators.
Computer-readable media 914 provides data storage mechanisms for storing device data 904, as well as various device applications 918 and any other types of information and/or data related to operational aspects of computing system 900. For example, an operating system 920 can be maintained as a computer application with the computer-readable media 914 and executed on processors 910. The device applications 918 may include a device manager, such as any form of a control application, software application, signal processing and control module, code that is native to a particular device, abstraction module, air gesture recognition module, and other modules. The device applications 918 may also include system components, engines, modules, or managers to implement auto-calibration of multiple cameras using near-infrared illuminators, such as the NIR camera system 104 and auto-calibration module 106. Computing system 900 may also include or have access to one or more machine learning systems.
In the following, some examples are given.
Example 1: a method for automatic calibration of a plurality of cameras in a user device, the method comprising: receiving a plurality of images from a stereoscopic near-infrared camera system, the plurality of images including a point image and a flood image; normalizing the contrast of the image to provide a normalized point image and a normalized flood image; detecting point features in each normalized point image; detecting a flood feature in each normalized flood image by identifying the location of feature points in the normalized flood image and determining the surrounding context of the feature points; determining a flood feature match based on a comparison of the flood features between the normalized flood images; disambiguating the detected point features using flood feature matching to determine point feature correspondences between the normalized point images; and determining updated calibration parameters for the stereoscopic near-infrared camera system based on the point feature correspondence.
Example 2: the method of claim 1, further comprising: prior to determining a flood feature match, feature points are rectified based on raw calibration parameters of the stereo near-infrared camera system.
Example 3: the method of any of examples 1 or 2, wherein determining updated calibration parameters of the stereoscopic near-infrared camera system comprises: an iterative solver is applied that minimizes the correction error between point feature correspondences in the normalized point images.
Example 4: the method of example 3, wherein the iterative solver optimizes a focal length, roll, and/or vertical shift of a first camera of the stereoscopic near-infrared camera system relative to a second camera of the stereoscopic near-infrared camera system.
Example 5: the method of any of the preceding examples, further comprising: filtering the flood feature matched outliers prior to disambiguating the detected point features using the flood feature matching.
Example 6: the method of any of the preceding examples, wherein disambiguating the detected point features using the flood feature matching comprises: using the floodlight feature matching as an anchor point in a normalized point image; and identifying additional point features around the anchor point to resolve ambiguities in the detected point features for each normalized point image.
Example 7: the method of any of the preceding examples, wherein normalizing contrast comprises: normalization of the contrast of the spot image and/or the flood image in a limited area.
Example 8: the method of any of the preceding examples, wherein detecting the point feature uses a matched filter.
Example 9: the method of any of the preceding examples, further comprising: rotating each of the point image and the flood image prior to normalizing the contrast of the image.
Example 10: the method of any of the preceding examples, further comprising: prior to determining a flood feature match, the feature points are undistorted and transformed to canonical space.
Example 11: a user equipment, comprising: a stereoscopic near-infrared camera system configured to capture a plurality of images including a point image and a flood image by using a plurality of near-infrared illuminators; and a processor and memory system operable to execute stored instructions to implement an auto-calibration module configured to perform the method according to any of the preceding examples.
Example 12: a method for automatic calibration of a plurality of cameras in a user device using near-infrared illuminators, the method comprising: receiving a pair of point images from a stereo near-infrared camera system; normalizing the contrast of each point image to provide a normalized point image pair; detecting, in a point pipeline, point features in each of the normalized point images; in a floodlight pipeline: detecting a flood feature in a local region of each of the normalized point images, the flood feature corresponding to a descriptor of a location of a feature point and a surrounding context of the location of the feature point; and determining a flood feature match based on the comparison of the flood features between the normalized spot image pairs; disambiguating the detected point features using flood feature matching and determining point feature correspondences between the normalized point image pairs; and determining updated calibration parameters for the stereoscopic near-infrared camera system based on the point feature correspondence.
Example 13: the method of example 12, further comprising: after detecting a flood feature and before determining a flood feature match, rectify the landmark positions to canonical space based on raw calibration parameters of the stereoscopic near-infrared camera system.
Example 14: the method of any one of example 12 or example 13, wherein: the stereoscopic near-infrared camera system includes: a first near-infrared camera and a second near-infrared camera; and determining the updated calibration parameters comprises: applying a non-linear solver to the point feature correspondence to optimize a six degree of freedom pose of the first near-infrared camera relative to the second near-infrared camera.
Example 15: the method of example 14, wherein the non-linear solver minimizes reprojection errors.
Example 16: the method of any of examples 12 to 15, further comprising: filtering the flood feature matched outliers prior to disambiguating the detected point features using the flood feature matching.
Example 17: the method of any of examples 12 to 16, wherein disambiguating the detected point features using flood feature matching comprises: filtering the detected point features using the flood feature matching to provide anchor points; and associating additional point features around the anchor point to resolve ambiguities in the detected point features between each normalized point image.
Example 18: the method of any of examples 12 to 17, wherein determining the flood feature match comprises: filtering flood feature matches based on a similarity threshold between a first best candidate and a second best candidate for flood feature matches between the normalized spot image pairs.
Example 19: the method of any of examples 12 to 18, wherein normalizing contrast comprises: the contrast of each point image in the finite area is normalized.
Example 20: the method of any of examples 12 to 19, wherein detecting the point feature uses a matched filter.
Example 21: the method of any of examples 12 to 20, further comprising: each dot image is rotated before normalizing its contrast.
Example 22: the method of any of examples 12 to 21, further comprising: prior to determining the flood feature match, the feature points are undistorted and transformed to canonical space.
Example 23: a user equipment, comprising: a stereo near-infrared camera system configured to use a point projector to capture a near-infrared point image pair; and a processor and memory system operable to execute stored instructions to implement an auto-calibration module configured to perform the method according to any one of examples 12 to 21.
Conclusion
Although embodiments of techniques and apparatus for enabling automatic calibration of multiple cameras using near-infrared illuminators have been described in language specific to features and/or methods, it is to be understood that the subject of the appended claims is not necessarily limited to the specific features or methods described. Rather, the specific features and methods are disclosed as example embodiments for automatically calibrating a plurality of cameras using near infrared illuminators.
Claims (20)
1. A method for automatic calibration of a plurality of cameras in a user device, the method comprising:
receiving a plurality of images from a stereoscopic near-infrared camera system, the plurality of images including a point image and a flood image;
normalizing the contrast of the image to provide a normalized point image and a normalized flood image;
detecting point features in each normalized point image;
detecting a flood feature in each normalized flood image by identifying the location of feature points in the normalized flood image and determining the surrounding context of the feature points;
determining a flood feature match based on a comparison of the flood features between the normalized flood images;
disambiguating the detected point features using the flood feature matching to determine point feature correspondences between the normalized point images; and
determining updated calibration parameters for the stereoscopic near-infrared camera system based on the point feature correspondence.
2. The method of claim 1, further comprising:
prior to determining a flood feature match, rectifying the feature points based on raw calibration parameters of the stereo near-infrared camera system.
3. The method of any one of claim 1 or claim 2, wherein determining updated calibration parameters for the stereoscopic near-infrared camera system comprises: applying an iterative solver that minimizes the correction error between the point feature correspondences in the normalized point images.
4. The method of claim 3, wherein determining the updated calibration parameters of the stereoscopic near-infrared camera system comprises: determining one or more of a focal length, roll, and vertical shift of a first camera of the stereoscopic near-infrared camera system relative to a second camera of the stereoscopic near-infrared camera system.
5. The method of any of the preceding claims, further comprising: filtering the flood feature matched outliers prior to disambiguating the detected point features using the flood feature matching.
6. The method of any preceding claim, wherein disambiguating the detected point features using the flood feature matching comprises:
using the floodlight feature matching as an anchor point in the normalized point image; and
additional point features around the anchor point are identified to resolve ambiguities in the detected point features for each normalized point image.
7. The method of any one of the preceding claims, wherein normalizing contrast comprises: normalizing the contrast of one or more of the spot image and the flood image for a limited image area.
8. The method of any preceding claim, wherein the detection of the point feature uses a matched filter.
9. The method of any of the preceding claims, further comprising: rotating each of the point image and the flood image prior to normalizing the contrast of the image.
10. The method of any of the preceding claims, further comprising: prior to determining the flood feature match, undistorting the feature points and transforming the feature points to canonical space.
11. A user equipment, comprising:
a stereoscopic near-infrared camera system configured to capture a plurality of images including a point image and a flood image by using a plurality of near-infrared illuminators; and
a processor and memory system that in operation execute stored instructions to implement an auto-calibration module configured to perform the method of any preceding claim.
12. A method for automatic calibration of a plurality of cameras in a user device using near-infrared illuminators, the method comprising:
receiving a pair of point images from a stereo near-infrared camera system;
normalizing the contrast of each point image to provide a normalized point image pair;
detecting, in a point pipeline, point features in each of the normalized point images;
in a floodlight pipeline:
detecting a flood feature in a local region of each of the normalized point images, the flood feature corresponding to a descriptor of a location of a feature point and a surrounding context of the location of the feature point; and
determining a flood feature match based on a comparison of the flood features between the normalized spot image pairs;
disambiguating the detected point features using the flood feature matching and determining point feature correspondences between the normalized point image pairs; and
determining updated calibration parameters for the stereoscopic near-infrared camera system based on the point feature correspondence.
13. The method of claim 12, further comprising:
after detecting a flood feature and before determining a flood feature match, rectify the landmark positions to canonical space based on raw calibration parameters of the stereoscopic near-infrared camera system.
14. The method of any one of claim 12 or claim 13, wherein:
the stereoscopic near-infrared camera system includes: a first near-infrared camera and a second near-infrared camera; and
determining the updated calibration parameters comprises: applying a non-linear solver to the point feature correspondence to optimize a six degree of freedom pose of the first near-infrared camera relative to the second near-infrared camera.
15. The method of claim 14, wherein the non-linear solver minimizes reprojection errors.
16. The method of any of claims 12 to 15, further comprising: filtering the flood feature matched outliers prior to disambiguating the detected point features using the flood feature matching.
17. The method of any of claims 12 to 16, wherein disambiguating the detected point features using the flood feature matching comprises:
filtering the detected point features using the flood feature matching to provide anchor points; and
additional point features around the anchor point are correlated to resolve ambiguities in the detected point features between each normalized point image.
18. The method of any of claims 12 to 17, wherein determining the flood feature match comprises: filtering the flood feature matches between the normalized spot image pairs based on a similarity threshold between a first best candidate and a second best candidate for the flood feature matches.
19. The method of any of claims 12 to 18, further comprising: prior to said determining said flood feature match, undistorting said feature points and transforming said feature points to canonical space.
20. A user equipment, comprising:
a stereo near-infrared camera system configured to use a point projector to capture a near-infrared point image pair; and
a processor and memory system that in operation execute stored instructions to implement an auto-calibration module configured to perform the method of any of claims 12 to 21.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2019/054712 WO2021066839A1 (en) | 2019-10-04 | 2019-10-04 | Autocalibration for multiple cameras using near-infrared illuminators |
Publications (1)
Publication Number | Publication Date |
---|---|
CN112912931A true CN112912931A (en) | 2021-06-04 |
Family
ID=68425254
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980008571.0A Pending CN112912931A (en) | 2019-10-04 | 2019-10-04 | Auto-calibration of multiple cameras using near infrared illuminators |
Country Status (4)
Country | Link |
---|---|
US (1) | US11164337B2 (en) |
EP (1) | EP3827409B1 (en) |
CN (1) | CN112912931A (en) |
WO (1) | WO2021066839A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113545028B (en) | 2019-09-25 | 2023-05-09 | 谷歌有限责任公司 | Gain control for facial authentication |
Family Cites Families (40)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7327891B2 (en) | 2001-07-17 | 2008-02-05 | Yesvideo, Inc. | Automatic selection of a visual image or images from a collection of visual images, based on an evaluation of the quality of the visual images |
US7038820B1 (en) | 2002-04-03 | 2006-05-02 | Eastman Kodak Company | Automatic exposure control for an image sensor |
US7746404B2 (en) | 2003-11-10 | 2010-06-29 | Hewlett-Packard Development Company, L.P. | Digital camera with panoramic image capture |
JP4572583B2 (en) | 2004-05-31 | 2010-11-04 | パナソニック電工株式会社 | Imaging device |
US7469060B2 (en) | 2004-11-12 | 2008-12-23 | Honeywell International Inc. | Infrared face detection and recognition system |
US7542628B2 (en) | 2005-04-11 | 2009-06-02 | Sarnoff Corporation | Method and apparatus for providing strobed image capture |
JP2007043248A (en) | 2005-07-29 | 2007-02-15 | Eastman Kodak Co | Imaging apparatus |
JP4539729B2 (en) | 2008-02-15 | 2010-09-08 | ソニー株式会社 | Image processing apparatus, camera apparatus, image processing method, and program |
US8483479B2 (en) | 2009-05-11 | 2013-07-09 | Dolby Laboratories Licensing Corporation | Light detection, color appearance models, and modifying dynamic range for image display |
US8599238B2 (en) | 2009-10-16 | 2013-12-03 | Apple Inc. | Facial pose improvement with perspective distortion correction |
US8238671B1 (en) | 2009-12-07 | 2012-08-07 | Google Inc. | Scene classification for place recognition |
JP5625371B2 (en) | 2010-01-29 | 2014-11-19 | ソニー株式会社 | Image processing apparatus, signal processing method, and program |
US8446484B2 (en) | 2010-04-21 | 2013-05-21 | Nokia Corporation | Image processing architecture with pre-scaler |
KR101937708B1 (en) | 2012-07-09 | 2019-04-11 | 삼성전자 주식회사 | Control System For Camera and Portable Device including the same, and control Method thereof |
US9286509B1 (en) | 2012-10-19 | 2016-03-15 | Google Inc. | Image optimization during facial recognition |
US8964062B1 (en) | 2012-12-18 | 2015-02-24 | Amazon Technologies, Inc. | Integrated light sensor for dynamic exposure adjustment |
CN108989647B (en) | 2013-06-13 | 2020-10-20 | 核心光电有限公司 | Double-aperture zooming digital camera |
US8982238B2 (en) | 2013-07-02 | 2015-03-17 | Omnivision Technologies, Inc. | Multi-target automatic exposure and gain control based on pixel intensity distribution |
EP3100135A4 (en) | 2014-01-31 | 2017-08-30 | Hewlett-Packard Development Company, L.P. | Camera included in display |
US9570019B2 (en) | 2014-03-20 | 2017-02-14 | Dell Products, Lp | System and method for coordinating image capture in a camera hidden behind a display device |
US9911454B2 (en) | 2014-05-29 | 2018-03-06 | Jaunt Inc. | Camera array including camera modules |
US9619633B1 (en) | 2014-06-18 | 2017-04-11 | United Services Automobile Association (Usaa) | Systems and methods for upgrading authentication systems |
US9491452B2 (en) | 2014-09-05 | 2016-11-08 | Intel Corporation | Camera calibration |
US9432193B1 (en) | 2015-02-05 | 2016-08-30 | Sensory, Incorporated | Face-based authentication with situational adaptivity |
US20160283789A1 (en) | 2015-03-25 | 2016-09-29 | Motorola Mobility Llc | Power-saving illumination for iris authentication |
WO2016168415A1 (en) | 2015-04-15 | 2016-10-20 | Lytro, Inc. | Light guided image plane tiled arrays with dense fiber optic bundles for light-field and high resolution image acquisition |
CN109076148B (en) | 2016-04-12 | 2021-02-05 | 奎蒂安特有限公司 | Daily scene reconstruction engine |
US9774798B1 (en) | 2016-06-29 | 2017-09-26 | Essential Products, Inc. | Apparatus and method for a wide field of view image sensor |
US11025887B2 (en) | 2017-02-27 | 2021-06-01 | Sony Corporation | Field calibration of stereo cameras with a projector |
CN108229278B (en) | 2017-04-14 | 2020-11-17 | 深圳市商汤科技有限公司 | Face image processing method and device and electronic equipment |
JP2018185749A (en) | 2017-04-27 | 2018-11-22 | ソニーセミコンダクタソリューションズ株式会社 | Solid-state imaging device and method for controlling solid-state imaging device |
US10762335B2 (en) | 2017-05-16 | 2020-09-01 | Apple Inc. | Attention detection |
US11082566B2 (en) | 2017-06-20 | 2021-08-03 | Omnivision Technologies, Inc. | Multiple camera calibration chart |
WO2019027503A1 (en) | 2017-08-01 | 2019-02-07 | Apple Inc. | Biometric authentication techniques |
US10210381B1 (en) | 2017-08-01 | 2019-02-19 | Apple Inc. | Multiple enrollments in facial recognition |
US10803347B2 (en) | 2017-12-01 | 2020-10-13 | The University Of Chicago | Image transformation with a hybrid autoencoder and generative adversarial network machine learning architecture |
CN109145653B (en) | 2018-08-01 | 2021-06-25 | Oppo广东移动通信有限公司 | Data processing method and device, electronic equipment and computer readable storage medium |
EP3909212A1 (en) | 2019-09-09 | 2021-11-17 | Google LLC | Face authentication embedding migration and drift-compensation |
CN113545028B (en) | 2019-09-25 | 2023-05-09 | 谷歌有限责任公司 | Gain control for facial authentication |
WO2021071497A1 (en) | 2019-10-10 | 2021-04-15 | Google Llc | Camera synchronization and image tagging for face authentication |
-
2019
- 2019-10-04 CN CN201980008571.0A patent/CN112912931A/en active Pending
- 2019-10-04 US US16/956,730 patent/US11164337B2/en active Active
- 2019-10-04 EP EP19797409.0A patent/EP3827409B1/en active Active
- 2019-10-04 WO PCT/US2019/054712 patent/WO2021066839A1/en unknown
Also Published As
Publication number | Publication date |
---|---|
EP3827409B1 (en) | 2023-01-04 |
US20210248782A1 (en) | 2021-08-12 |
US11164337B2 (en) | 2021-11-02 |
EP3827409A1 (en) | 2021-06-02 |
WO2021066839A1 (en) | 2021-04-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20220165087A1 (en) | Systems and methods for performing fingerprint based user authentication using imagery captured using mobile devices | |
CN107111750B (en) | Detection of deceptive faces | |
US9727774B2 (en) | System and method for detecting an organic body for authentication | |
US8866889B2 (en) | In-home depth camera calibration | |
US9690998B2 (en) | Facial spoofing detection in image based biometrics | |
US10169637B2 (en) | On-screen optical fingerprint capture for user authentication | |
US10726245B2 (en) | Secure facial authentication system using active infrared light source and RGB-IR sensor | |
US20150193649A1 (en) | Enhanced face detection using depth information | |
US20150339471A1 (en) | Device unlock with three dimensional (3d) captures | |
CN111194449A (en) | System and method for human face living body detection | |
US11869272B2 (en) | Liveness test method and apparatus and biometric authentication method and apparatus | |
US11256938B2 (en) | Method and apparatus with liveness testing | |
KR20190094352A (en) | System and method for performing fingerprint based user authentication using a captured image using a mobile device | |
US11023762B2 (en) | Independently processing plurality of regions of interest | |
WO2016086341A1 (en) | System and method for acquiring multimodal biometric information | |
CN113545028B (en) | Gain control for facial authentication | |
US11164337B2 (en) | Autocalibration for multiple cameras using near-infrared illuminators | |
US11450140B2 (en) | Independently processing plurality of regions of interest | |
JP7228509B2 (en) | Identification device and electronic equipment | |
CN108647636A (en) | Identification authentication method, identification authentication device and electronic equipment | |
Spinsante et al. | Access Control in Smart Homes by Android-Based Liveness Detection | |
Spinsante et al. | Android-Based Liveness Detection for Access Control in Smart Homes | |
Li | Photometric stereo for micro-scale shape reconstruction |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
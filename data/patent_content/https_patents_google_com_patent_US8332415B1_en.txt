US8332415B1 - Determining spam in information collected by a source - Google Patents
Determining spam in information collected by a source Download PDFInfo
- Publication number
- US8332415B1 US8332415B1 US13/049,113 US201113049113A US8332415B1 US 8332415 B1 US8332415 B1 US 8332415B1 US 201113049113 A US201113049113 A US 201113049113A US 8332415 B1 US8332415 B1 US 8332415B1
- Authority
- US
- United States
- Prior art keywords
- text
- spam
- determining
- phrase
- text items
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
- G06F16/353—Clustering; Classification into predefined classes
Definitions
- This specification relates to evaluating sources that collect information, for example, to determine if the information includes spam.
- Search engines can be configured to receive search queries provided by users and to provide search results that satisfy the search queries.
- a search engine can communicate with multiple client devices, for example, computers, through one or more networks, such as the Internet.
- the search engine can search from an index of resources when it receives a search query.
- the index can be created by crawling multiple resources, each of which is stored, for example, in one or more computer systems.
- the search engine can additionally rank the resources included in the search results according a relevance of each search result to the search query.
- the resources can include information describing business entities that offer services, products, or both.
- a business entity can have a dedicated resource, for example, a website addressed by a unique uniform resource locator (URL), which the search engine can crawl and index.
- a business entity can provide its business information to one or more of several sources that collect information about such entities, for example, the Yellow Pages.
- a source can store the information (including information describing business entities) in a computer system.
- a search engine can crawl and index the stored information. Alternatively, or in addition, the source can provide the stored information to the search engine. When the search engine receives a search query that references a product, service (or both), the search engine can identify, from the index, relevant business information collected and stored by the source.
- This specification describes technologies relating to determining spam in information collected by a source.
- a first frequency of occurrence of a phrase included in one or more of multiple first text items received from a first source is determined.
- the multiple first text items are associated with multiple first business entities.
- the multiple first text items do not include any spam text items.
- a second frequency of occurrence of the phrase included in one or more of multiple second text items received from a second source is determined.
- the multiple second text items are associated with multiple second business entities.
- a likelihood that the phrase is spam based at least partially on the first frequency, the second frequency, a count of the multiple first text items and a count of the multiple second text items.
- a likelihood that a different text item received from the second source and that includes the phrase is spam is determined based at least in part on the likelihood that the phrase is spam.
- Determining a first ratio of the first frequency to the count of the multiple first text items can include dividing the first frequency by the count of the plurality of first text items.
- Determining a second ratio of the second frequency to the count of the multiple second text items can include dividing the second frequency by the count of the plurality of second text items.
- Determining the likelihood that the text items received from the second source includes spam can include identifying a subset of the multiple second text items received from the second source, and determining the likelihood that the different text item received from the second source includes spam as a ratio of a count of second text items in the subset to which the signal is associated to a count of second text items in the subset.
- Each second text item in the subset can be associated with a signal that indicates whether or not the second text item in the subset is spam.
- a second text item that includes the phrase can include multiple words.
- the method can further include determining multiple phrases from the multiple words included in the received second text item, and for each of the multiple phrases, determining a respective confidence measure that represents a confidence that a phrase is logically coherent.
- the multiple phrases can include the phrase.
- the method can further include identifying two of more phrases of the plurality of phrases that have an equal count of words, identifying a phrase of the two or more phrases that has the largest confidence measure among the two or more phrases, and designating the identified phrase as the phrase.
- the multiple first text items and the multiple second text items represent a title of the corresponding multiple first business entities and the corresponding multiple second business entities, respectively.
- the multiple first text items and the multiple second text items can represent an attribute describing a category of the corresponding multiple first business entities and the corresponding multiple second business entities, respectively.
- Each of multiple second text items is associated with a first format.
- the method can further include determining that a particular second text item is of a second format that is different from the first format and is incompatible with the second format, and in response to the determining, designating the particular second text item as spam.
- the first format is text and the second format is numeric.
- Each first and second text item can include one or more words.
- the phrase includes at least one word that is included in the text item.
- the method can further include designating one or more sources as sources that provide text items that do not include any spam text items, determining that the first source is included in the designated one or more sources, and in response to the determining, determining that the first text items do not include any spam text items.
- Another innovative aspect of the subject matter described here can be implemented as a computer-readable medium storing computer program instructions, which when executed by data processing apparatus causes the apparatus to perform the methods described here.
- Yet another innovative aspect of the subject matter described here can be implemented as a system that includes data processing apparatus and a computer-readable medium storing computer program instructions executable by the data processing apparatus to perform the operations described here.
- a likelihood that a text item received from the untrusted source includes spam can be determined.
- search results that include the text item or that include text items received from the untrusted source or both can be adjusted.
- Sources can be encouraged to not include spam in the information that the sources collect.
- sources can indirectly be discouraged from including spam in the information that the sources collect, for example, by demoting/culling the search results that include information from such sources because the information likely includes spam.
- search results provided to users which include information about business entities, can include little or no spam. Unfair advantages gained by businesses that include spam in their information over businesses that do not can be decreased or eliminated. Further, the techniques described can be implemented as a moderation system to determine whether information includes spam.
- FIG. 1 is an example of an environment including a system to determine likelihoods that information about business entities includes spam.
- FIG. 2 is an example of an environment including a scoring system to assign spam likelihoods to information about new business entities received from untrusted sources.
- FIG. 3 is a flowchart of an example process to identify phrases included in business information received from a source.
- FIG. 4 is a flowchart of an example process for assigning a confidence measure to a phrase indicating whether the phrase is a logically coherent phrase.
- FIG. 5 is a flowchart of a process of determining a likelihood that a phrase received from a source is spam.
- FIG. 6 is flowchart of a process for determining that business information received from a source is spam.
- This specification describes a system configured to determine a likelihood that information describing business entities, which is received from a source that collects such information, is spam.
- the system receives information (for example, text items that include words, phrases, numbers, characters, and the like) describing business entities from multiple sources. Some of the sources are designated as trusted sources. Information received from a trusted source is considered to not include spam. A source that is not a trusted source is an untrusted source, and information received from an untrusted source may or may not include spam.
- the system determines multiple phrases that are included in the text item. For each phrase, the system determines a likelihood that the phrase is spam based on frequencies of occurrence of the phrase included in all text items received from a trusted source and the untrusted source. The system then determines a likelihood that the text item itself is spam based at least in part on the likelihoods associated with the multiple phrases. Techniques to identify phrases included in text items and to determine likelihoods for the phrases are described later.
- the system can determine and associate measures of spam in the information about business entities received from the untrusted sources. If a search engine determines that a resource that includes information received from the untrusted source satisfies a search query received from a user, then the search engine can adjust a rank of the resource based on the measure of spam that the system has determined for the text item included in the resource or the untrusted source from which the text item was received or both. Details of some implementations of the system are described with reference to the following figures.
- FIG. 1 is an example of an environment 100 including a system 101 to determine likelihoods that information about business entities includes spam.
- information that skews the identity of or does not accurately represent the business entity or both is considered spam.
- the business entity is a manufacturer of widgets, and information describing the manufacturer contains the text item “best manufacturer of widgets,” then the word “best” may convey more than merely the business category of the entity, and consequently may skew the entity's identity.
- a manufacturer of widgets would objectively describe the business entity, the addition of the word “best” subjectively describes the business entity and possibly inaccurately represents the business entity. Such information is described as spam.
- the frequency of occurrence of the words can affect a search result and skew the entity's identity. If the information contained text in a category that has a numeric format (for example, telephone number category), then the information may be an inaccurate representation of the business entity and, for that reason, may be spam.
- certain semantics and norms are associated with the business information. Any information which conceptually disagrees with the designated semantics and norms can be spam. Examples of spam in information describing business entities, particularly titles of business entities, include “cheap hotels,” “discounts,” Dr. ABC—555 777 8888.” Spam in categories of business entities include “City X,” “sale,” “City A B C D,” “Hotel X in City Y, luxury Hotel in City Y
- the system 101 includes a pre-computation system 102 and a scoring system 202 (described with reference to FIG. 2 ).
- the environment 100 of FIG. 1 additionally includes multiple business entities (collectively 104 ) including, for example, first business entity 106 , second business entity 108 , third business entity 110 , n th business entity 112 .
- Each of the multiple business entities 104 provides respective information to one or more sources.
- a source can be, for example, a company or a service provider that collects information (including business information), stores collected information (for example, in electronic form), and provides the information to interested parties including consumers, other businesses, and search engines.
- the environment 100 includes a trusted source 114 and an untrusted source 116 . If the system 101 trusts that information received from a source does not include spam, then the system 101 designates that source as a trusted source. The system 101 can designate a source as a trusted source based on, for example, a reputation of the source or previous dealings with the source or combinations of them. Sources that the pre-computation system 102 does not designate as trusted sources are untrusted sources. A trusted source and an untrusted source can be associated with respective identifiers. Whether the source is trusted or untrusted can be identified based on the identifiers. In addition, each source can be identified by a corresponding identifier.
- designations of a source as trusted or untrusted can be manually configured in the system 101 .
- the system 101 can be configured to determine if a source is trusted or untrusted based on a reputation of the source, i.e., through previous interactions between the system 101 and the source.
- a business entity can have several attributes, for example, title, business category, telephone number, address, URL pointing to a website, and the like.
- the information that the source collects can include a value for most or all of the attributes.
- different sources can have different attributes, but all sources have the same subset of attributes, such as a title (i.e., a name of the business), a business category, and an address.
- Each business entity can provide values that correspond to the subset attributes.
- sources can collect information from business entities in electronic forms, for example, in XML format.
- An electronic form can include fields that correspond to the attributes into which values, for example, text items can be provided.
- the text item that corresponds to a business entity can be “Company X”
- the text item that corresponds to the entity's business category can be “Website Designers in Y,” where “Y” is a name of a city.
- both the trusted source 114 and the untrusted source 116 can collect business information from the multiple business entities 104 , and transmit the collected information to the system 101 .
- the system 101 can extract the information, for example, by parsing the electronic forms in which the information is received.
- the pre-computation system 102 can identify words or phrases (or both) included in a text item that describes a business entity. In some implementations, for each word or phrase included in text items received from the untrusted source 116 , the pre-computation system 102 can determine a corresponding spam likelihood. In other words, if the pre-computation system 102 determines that a text item received from the untrusted source 116 includes multiple words, then the pre-computation system 102 can divide the text item into one or more words or phrases or both ( FIG. 3 ), assign a confidence measure to each phrase that indicates whether the phrase is an important phrase ( FIG. 4 ), and determine a likelihood that each phrase is spam ( FIG. 5 ). In some implementations, rather than determining a confidence measure for all words into which a text item is divided, the pre-computation system 102 can determine confidence measures only for phrases that contain at least a minimum count of words.
- the system 101 can include a storage unit 118 to store the spam likelihood for each such phrase.
- a storage unit 118 can include one or more computer-readable databases that store data representing each phrase and a corresponding numerical value representing a spam likelihood, for example, in one or more computer-readable tables.
- the storage unit 118 can reside in and be a component of the system 101 , while in other implementations, the unit 118 can be external to and be operatively coupled to the system 101 .
- the system 202 can be configured to assign spam likelihoods to information about new business entities received from untrusted sources.
- FIG. 2 is an example of an environment 200 including a scoring system 202 to assign spam likelihoods to business information about new business entities received from untrusted sources.
- the scoring system 202 which is included in system 101 ), receives business information describing multiple business entities 204 from multiple sources including a trusted source 206 and an untrusted source 208 .
- the scoring system 202 includes a storage unit 210 (similar to the storage unit 118 of FIG. 1 ) that is configured to store spam likelihoods for words or phrases or both that are included in text items that are received from the untrusted source 208 .
- the scoring system 202 receives business information about a new business entity 212 from the untrusted source 208 . If the untrusted source 208 collects new or updated information about an existing business entity, which is included in the multiple business entities 204 , then the existing business entity can be considered a new business entity.
- the scoring system 202 can determine a likelihood that the information is spam, based at least in part on the spam likelihood of the one or more words or phrases (or both) included in the text items received from the new business entity 212 ( FIG. 6 ).
- the storage unit 210 can additionally store the likelihood that the information provided by a new business entity is spam by associating a numerical value, which represents the likelihood, with an identifier, which represents the new business entity.
- FIG. 3 is a flowchart of an example process 300 to identify phrases included in business information received from a source.
- the process 300 can be implemented as computer software instructions stored on a computer-readable medium and executable by data processing apparatus.
- the process 300 receives multiple text items associated with corresponding multiple business entities from a source (step 302 ).
- the system 101 receives multiple text items associated with corresponding multiple business entities from a source.
- a source can associate multiple attributes to a business entity (for example, title, business category, address, and the like), and provide a value for most or all of the attributes.
- the system 101 can receive values of such attributes from the multiple sources.
- the process 300 identifies a text item that corresponds to a business entity (step 304 ). For example, the system 101 identifies a value of an attribute (for example, corresponding to title category) received from a trusted source. Further, the system 101 is configured to separately analyze values of attributes that are of the same type. For example, the system 101 analyzes values of all title categories separately, values of all address categories separately, and so on. The values of attributes described with reference to process 300 are of the same type.
- the process 300 divides the text item into multiple phrases (step 306 ).
- an n-gram analysis is performed on each text item to divide the text item into 1-grams, 2-grams, 3-grams, and so on.
- a phrase includes multiple consecutive words in the text item.
- the system 101 can divide the text item “website designers in Y” into the following words or phrases: “website,” “designers,” “in,” “Y,” “website designers,” “designers in,” “in Y,” “website designers in,” “designers in Y,” “website designers in Y.”
- the system 101 can limit a number of words into which the system 101 will divide a text item (for example, a changeable threshold of five words).
- the process 300 After dividing a text item into multiple phrases, the process 300 checks to determine if the trusted source provided additional text items (step 308 ). If yes (decision branch “YES”), then the process 300 identifies the next text item (step 310 ) and repeats steps 304 and 306 to identify the next item and to divide the next text item into multiple phrases, respectively. The system 101 then stores all the phrases (step 312 ), for example, in a computer-readable and computer-searchable storage medium. Similarly, the system 101 identifies all text items received from the untrusted source, divides each text item into multiple phrases, and stores the phrases in the storage medium.
- the process 300 subsequently identifies a phrase included in a text item (step 314 ), and determines a frequency of the phrase included in the multiple text items received from the trusted source (step 316 ). For example, the system 101 determines that, when all the text items received from the trusted source were divided into phrases, the phrase “website designers” occurred 40 times.
- the process 300 can check for additional phrases obtained by dividing a text item (step 318 ). If found (decision branch “YES”), then the process 300 can identify the next phrase (step 320 ), and repeat steps 314 and 316 to determine a frequency of the phrase included in the received multiple text items. For example, the system 101 determines that the phrase “designers in” occurred 15 times, the phrase “in Y” occurred 10 times, and the phrase “Y” occurred 140 times. The process 300 can store the multiple frequencies corresponding to the multiple phrases in the storage medium (step 322 ).
- the stored frequencies correspond to frequencies of phrases included in text items received from the trusted source.
- the system 101 can implement steps similar to steps 314 , 316 , 318 , 320 , and 322 on the phrases included text items received from the untrusted source to determine the multiple frequencies of occurrences of the multiple phrases in the text items received from the untrusted source.
- the system 101 determines frequencies of only those phrases that are determined to be important. For example, the system 101 identifies words or phrases that are at the beginning, in the middle, end (or at all three positions) of the text item, and identifies frequencies of only those words or phrases or both that are above a threshold frequency. Also, for example, for phrases included in text items received from the untrusted source, the system 101 determines frequencies of contiguous words where each word had a frequency above a threshold in the untrusted source. An example implementation is described with reference to FIG. 4 .
- FIG. 4 is a flowchart of an example process 400 for assigning a confidence measure to a phrase indicating whether the phrase is a logically coherent phrase.
- a logically coherent phrase is one that enables deciding if the text item in which the phrase is included is spam. In some implementations, if a frequency of occurrence of a phrase exceeds a threshold frequency, then that phrase is designated as a logically coherent phrase. All such phrases will be considered in likelihood computations. For example, in the text item “website designers in Y,” the word “in” likely does not contribute to the spam determination of the phrase, and consequently may not be as logically coherent as “website designers.”
- the process 400 can be implemented as computer software instructions stored on a computer-readable medium and executable by data processing apparatus.
- the process 400 receives the multiple text items associated with corresponding multiple business entities from an untrusted source (step 402 ).
- the process 400 identifies a phrase (step 404 ) and a frequency of occurrence of the phrase in the untrusted source (step 406 ).
- the process 400 checks if a threshold is satisfied (step 408 ), i.e., whether the frequency of occurrence of the phrase in the untrusted source satisfies a threshold frequency. For example, if the system 101 determines that the frequency of occurrence of the phrase in the untrusted source is less than 100, then the threshold is not satisfied.
- the threshold of 100 is an example only, and is variable. If the threshold is not satisfied (decision branch “NO”), the process 400 disregards the phrase as not being important.
- the process 400 proceeds to identify a frequency of occurrence of the phrase in the trusted source (step 412 ).
- the process 400 associates a confidence measure to the phrase based upon the frequency of occurrence of the phrase in the trusted source (step 414 ). For example, for the text item “website designers in Y” that is received from the untrusted source, the system 101 determines that a frequency of occurrence of the phrase “website designers” satisfies the threshold.
- the system 101 associates a confidence measure of 40 to the phrase “website designers.”
- the confidence measure associated with the phrase is a function of the occurrence of the phrase included in the text items received from the trusted source.
- the confidence measure is a frequency of the occurrence of the phrase.
- the system 101 is configured to implement processes 300 and 400 to identify phrases in text items, determine their frequencies of occurrence, and assign confidence measures based on the frequencies, as described above. For each phrase received from an untrusted source, the system 101 is additionally configured to determine a likelihood that the phrase is spam. The system 101 is configured based on the assumption that text items that contain spam will not follow the distribution of frequencies of attributes followed by text items that do not contain spam. Based on this assumption, the system 101 is configured to determine a distribution of frequencies of attributes followed by text items that are received from a trusted source and a distribution of frequencies of attributes followed by text items that are received from an untrusted source.
- the system 101 is configured to determine a probability of spam in a source given a phrase being spam as a function of a probability of spam in a phrase given spam in a source, a probability of spam in a source, and a probability of spam in a phrase. Having determined the probability of spam in the source given a phrase being spam, the system 101 is configured to determine a probability that a phrase is spam given a source based on Bayesian probability.
- source) P (phrase
- NS) P(phrase
- source) P (phrase
- P′(S) is probability of no spam in source (i.e., 1 ⁇ P(S)).
- NS) can both be determined by frequency of phrases from the two sources ( FIG. 5 ). Then, there remain two variables in the equation P(phrase
- phrase) P (phrase
- the system 101 determines a probability that a phrase is spam based on a first ratio between a count of occurrences of the phrase given a untrusted source and a total count of phrases from that untrusted source (P(phrase
- the system 101 determines a probability of spam in the source (P(S)). To do so, a sample of text items received from the untrusted source is identified, and each of those items is empirically rated as either spam or not spam.
- the sample of text items can include 1000 text items, and the empirical rating can be performed manually, i.e., by designating each of the 1000 text items as spam or not spam. Pursuant to the designating, if, for example, 200 items of the 1000 items were classified as spam, then the probability of spam in the source is 0.2 (200/1000).
- the text item “website designers in Y” was a value of an attribute that represented the title category
- the text item will manually be rated as spam because the text item does not represent a title, but rather represents a category.
- the text item can be manually rated as spam because a business category should not have specified the location of the business, i.e., “Y.”
- the system 101 further determines P(phrase) as a ratio of a total count of occurrences of the phrase in all sources to a total count of occurrences of all phrases in all sources. Based on the frequencies and the likelihoods described above, the system 101 determines P(phrase
- FIG. 5 is a flowchart of a process 500 of determining a likelihood that a phrase received from a source is spam.
- the process 500 can be implemented as computer software instructions stored on a computer-readable medium and executable by data processing apparatus.
- the process 500 receives multiple phrases included in text items from a trusted source and an untrusted source (step 502 ).
- the process 500 determines a first frequency of occurrence of a phrase included in multiple first text items received from a trusted source (step 504 ).
- the process 500 determines a second frequency of occurrence of the phrase included in multiple second text items received from an untrusted source (step 506 ).
- the process 500 determines a first ratio of the first frequency to a count of the multiple first text items (step 508 ).
- the process 500 determines a second ratio of the second frequency to a count of the multiple second text items (step 510 ).
- the process 500 empirically determines a likelihood that text items received from the untrusted source include spam (step 512 ).
- the process 500 determines a likelihood that the phrase is spam based on the first frequency, the second frequency, the count of the multiple first text items and the count of the second text items (step 514 ). For example, the process 500 determines P(phrase
- the process 500 checks if there are any more phrases (step 516 ). If there is an additional phrase identified as being included in a text item received from an untrusted source (decision branch “YES), then the process 500 obtains the next phrase (step 518 ), and repeats steps 504 , 506 , 508 , 510 , 512 , and 514 . If there are no more such phrases (decision branch “NO”), then the process 500 stores the multiple likelihoods corresponding to the multiple phrases, for example, in a computer-readable and searchable storage medium.
- TABLE 1 below shows an example text item, the important phrases included in the text item, likelihoods for each the important phrases, and confidence measures for the important phrases determined by implementing the processes described above.
- the likelihoods associated with the phrases can be used to determine a likelihood that a text item received from a source (for example, a new untrusted source) is spam.
- a source for example, a new untrusted source
- the system 101 divides the text item into phrases. The system 101 then identifies a probability associated with each phrase. If the phrase was previously received from the untrusted source, then the system 101 can retrieve a previously determined likelihood.
- the system 101 can then combine the likelihood for each phrase included in the new text item to arrive at a likelihood for the new text item.
- the system 101 identifies all phrases for which a likelihood has previously been determined. If the system 101 identifies multiple phrases of different length (i.e., including different count of words), then the system selects the longer phrases. If multiple phrases are of equal length, then the system 101 selects those with the highest confidence measures ( FIG. 4 ). Thus, whereas a new text item can be divided into a set of phrases, in some implementations, a subset of the phrases can be used to determine the likelihood for the new text item.
- the system 101 identifies the longest phrases—“website designers,” “designers in,” and “in Y.” Of the three, the system 101 identifies the phrase with the highest confidence measure—“website designers,” thereby eliminating “designers in.” Of the two remaining phrases, i.e., “in Y” and “Y,” the system 101 identifies “in Y” which is the longer of the two.
- the system 101 identifies frequencies of occurrence and likelihoods that were previously computed for the two phrases. Assuming independence, the likelihoods of the two phrases can be combined based on the following equation: P (spam
- XY ) P ( XY
- spam) ⁇ P (spam)/ P ( XY ) P ( X
- the likelihood thus obtained represents a likelihood that the new text item is spam.
- the likelihood can be compared against a threshold (for example, a threshold spam likelihood). If the determined likelihood satisfies the threshold likelihood, then the system 101 can designate the new text item as spam.
- the phrases need not be independent, as assumed, and the likelihoods, which should theoretically lie between 0 and 1, can be greater than 1. In such situations, the likelihood can be capped. In sum, conditional independence of the phrases is assumed and a likelihood for each phrase is independently determined.
- the likelihoods are multiplied by a multiplication factor—P(spam
- the likelihoods, multiplied by the multiplication factors, are then multiplied to come up with one score for the new text item.
- FIG. 6 is flowchart of a process 600 for determining that business information received from a source is spam.
- the process 600 can be implemented as computer software instructions stored on a computer-readable medium and executable by data processing apparatus.
- the process 600 receives multiple phrases included in text items received from untrusted sources, and, for each phrase, a likelihood that the phrase is spam (step 602 ).
- the process 604 receives a new text item from an untrusted source (step 604 ).
- the process 600 identifies one or more phrases from the new text item (step 606 ). For each identified phrase, the process 600 identifies a likelihood that the phrase is spam from the received likelihoods (step 608 ).
- the process 600 determines that the received new text item is spam from the likelihoods identified for each identified phrase (step 610 ).
- the process 600 provides the likelihood that the received new text item is spam (step 612 ).
- the system 101 can determine the likelihood that the new text item is spam based on the phrases identified in the new text item. For example, if the new text item includes two phrases and if the likelihoods that the two phrases are spam are X and Y, respectively, then the system 101 can determine the likelihood that the new text is spam as X+Y ⁇ (X ⁇ Y).
- the system 101 can be configured to use other signals to boost or flatten the likelihoods determined for the new text item. For example, certain phrases are more likely to occur in suffix than in prefix (or vice versa).
- the system 101 can determine the signals by comparing counts of phrases within the trusted source at different positions. If the system 101 finds that the ratios of the counts of phrases appearing at a particular position in the text item satisfy a threshold, then the system 101 can further boost the likelihood that the new text item is spam. Having determined that the new text item is (or is not) spam, the system 101 can demote/cull a ranking of search results that include information from untrusted sources because the information from such sources likely includes spam. By doing so, the quality of search results provided to users can be improved as such search results likely little or no spam.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
- the system 101 can be operatively coupled to additional sources, and can designate more than one source as a trusted source. Further, over time, if the system determines that the likelihood that text items received from an untrusted source are spam is below a threshold, then the system can subsequently designate the untrusted source as a trusted source. Then, the system can use the frequencies determined from text items received from the newly designated trusted source to determine spam likelihoods for other untrusted sources.
- the system can solicit business information from the sources.
- the system can provide electronic forms that list attributes of business entities and that are configured to receive values.
- users can also provide information describing business entities.
- the system may not designate a cluster of users as a trusted source, resulting in the cluster of users being an untrusted source.
- the system can assign confidence measures to clusters of users using techniques similar to those described above. Based on the likelihoods determined for phrases included in text items received from a user, the system can classify business information obtained from a cluster of users as containing or not containing spam.
- the users in the cluster can have some degree of similarity based on, for example, demographics, category of edits, language, and the like.
- likelihoods can be combined using a max-likelihood approach.
Abstract
Description
P(phrase|source)=P(phrase|S)×P(S)+P(phrase|NS)×P(NS); and
P(phrase|NS) is independent of the source, i.e.,
P(phrase|NS)=P(phrase|no spam), for some sources (i.e., trusted sources),
P(spam-in-source)˜0
P(phrase|source)=P(phrase|S)×P(S)+P(phrase|NS)×P′(S), where
P(phrase|source) is probability of a phrase given a source that contains spam, P(phrase|S) is probability of phrase given spam in source, P(phrase|NS) is probability of phrase given a source that does not contain spam, and P(S) is probability of spam in source. In addition, P′(S) is probability of no spam in source (i.e., 1−P(S)).
P(S|phrase)=P(phrase|S)×P(S)/P(phrase). (Eqn. 1)
If P(S) is known, then P(S|phrase) can be determined.
TABLE 1 | ||||
Likelihood of | Confidence | |||
Phrase | spam in phrase | Measure | ||
Website designers | 0.7 | 40 | ||
Designers in | 0.5 | 15 | ||
In Y | 0.8 | 10 | ||
Y | 0.6 | 140 | ||
P(spam|XY)=P(XY|spam)×P(spam)/P(XY)=P(X|spam)×P(Y|spam)×P(spam)/[P(X)×P(Y)],
where X and Y are frequencies of occurrence of “website designers” and “in Y,” respectively.
Claims (27)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/049,113 US8332415B1 (en) | 2011-03-16 | 2011-03-16 | Determining spam in information collected by a source |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/049,113 US8332415B1 (en) | 2011-03-16 | 2011-03-16 | Determining spam in information collected by a source |
Publications (1)
Publication Number | Publication Date |
---|---|
US8332415B1 true US8332415B1 (en) | 2012-12-11 |
Family
ID=47289230
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/049,113 Expired - Fee Related US8332415B1 (en) | 2011-03-16 | 2011-03-16 | Determining spam in information collected by a source |
Country Status (1)
Country | Link |
---|---|
US (1) | US8332415B1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8738557B1 (en) * | 2011-07-26 | 2014-05-27 | Google Inc. | Detection of spam using contextual analysis of data sources |
WO2015099756A1 (en) * | 2013-12-27 | 2015-07-02 | Mcafee, Inc. | Frequency-based reputation |
US20180039635A1 (en) * | 2013-04-30 | 2018-02-08 | Google Inc. | Identifying local experts for local search |
CN107992501A (en) * | 2016-10-27 | 2018-05-04 | 腾讯科技（深圳）有限公司 | Social network information recognition methods, processing method and processing device |
US10795946B2 (en) * | 2014-05-30 | 2020-10-06 | Beestripe Llc | Method of redirecting search queries from an untrusted search engine to a trusted search engine |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020199095A1 (en) * | 1997-07-24 | 2002-12-26 | Jean-Christophe Bandini | Method and system for filtering communication |
US20060004748A1 (en) * | 2004-05-21 | 2006-01-05 | Microsoft Corporation | Search engine spam detection using external data |
US20060149820A1 (en) * | 2005-01-04 | 2006-07-06 | International Business Machines Corporation | Detecting spam e-mail using similarity calculations |
US20060195701A1 (en) * | 2005-02-11 | 2006-08-31 | Critical Path, Inc., A California Corporation | In-process protection for digital content communication systems |
US20060294155A1 (en) * | 2004-07-26 | 2006-12-28 | Patterson Anna L | Detecting spam documents in a phrase based information retrieval system |
US20080086555A1 (en) * | 2006-10-09 | 2008-04-10 | David Alexander Feinleib | System and Method for Search and Web Spam Filtering |
US20090089279A1 (en) * | 2007-09-27 | 2009-04-02 | Yahoo! Inc., A Delaware Corporation | Method and Apparatus for Detecting Spam User Created Content |
US7890441B2 (en) * | 2003-11-03 | 2011-02-15 | Cloudmark, Inc. | Methods and apparatuses for classifying electronic documents |
US8001195B1 (en) * | 2008-08-26 | 2011-08-16 | Kaspersky Lab, Zao | Spam identification using an algorithm based on histograms and lexical vectors (one-pass algorithm) |
US8136034B2 (en) * | 2007-12-18 | 2012-03-13 | Aaron Stanton | System and method for analyzing and categorizing text |
-
2011
- 2011-03-16 US US13/049,113 patent/US8332415B1/en not_active Expired - Fee Related
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020199095A1 (en) * | 1997-07-24 | 2002-12-26 | Jean-Christophe Bandini | Method and system for filtering communication |
US7890441B2 (en) * | 2003-11-03 | 2011-02-15 | Cloudmark, Inc. | Methods and apparatuses for classifying electronic documents |
US20060004748A1 (en) * | 2004-05-21 | 2006-01-05 | Microsoft Corporation | Search engine spam detection using external data |
US20060294155A1 (en) * | 2004-07-26 | 2006-12-28 | Patterson Anna L | Detecting spam documents in a phrase based information retrieval system |
US20110131223A1 (en) * | 2004-07-26 | 2011-06-02 | Google Inc. | Detecting spam documents in a phrase based information retrieval system |
US20060149820A1 (en) * | 2005-01-04 | 2006-07-06 | International Business Machines Corporation | Detecting spam e-mail using similarity calculations |
US20060195701A1 (en) * | 2005-02-11 | 2006-08-31 | Critical Path, Inc., A California Corporation | In-process protection for digital content communication systems |
US20080086555A1 (en) * | 2006-10-09 | 2008-04-10 | David Alexander Feinleib | System and Method for Search and Web Spam Filtering |
US20090089279A1 (en) * | 2007-09-27 | 2009-04-02 | Yahoo! Inc., A Delaware Corporation | Method and Apparatus for Detecting Spam User Created Content |
US8136034B2 (en) * | 2007-12-18 | 2012-03-13 | Aaron Stanton | System and method for analyzing and categorizing text |
US8001195B1 (en) * | 2008-08-26 | 2011-08-16 | Kaspersky Lab, Zao | Spam identification using an algorithm based on histograms and lexical vectors (one-pass algorithm) |
Non-Patent Citations (2)
Title |
---|
Alexandros Ntoulas, "Detecting Spam Web Pages through Content Analysis", 2006. * |
Ioannis Kanaris, "Words vs. Character N-Grams for Anti-Spam Filtering", 2006. * |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8738557B1 (en) * | 2011-07-26 | 2014-05-27 | Google Inc. | Detection of spam using contextual analysis of data sources |
US8909591B1 (en) | 2011-07-26 | 2014-12-09 | Google Inc. | Detection of spam using contextual analysis of data sources |
US20180039635A1 (en) * | 2013-04-30 | 2018-02-08 | Google Inc. | Identifying local experts for local search |
US10929409B2 (en) * | 2013-04-30 | 2021-02-23 | Google Llc | Identifying local experts for local search |
WO2015099756A1 (en) * | 2013-12-27 | 2015-07-02 | Mcafee, Inc. | Frequency-based reputation |
US10044739B2 (en) | 2013-12-27 | 2018-08-07 | McAFEE, LLC. | Frequency-based reputation |
US10795946B2 (en) * | 2014-05-30 | 2020-10-06 | Beestripe Llc | Method of redirecting search queries from an untrusted search engine to a trusted search engine |
CN107992501A (en) * | 2016-10-27 | 2018-05-04 | 腾讯科技（深圳）有限公司 | Social network information recognition methods, processing method and processing device |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11880398B2 (en) | Method of presenting excluded keyword categories in keyword suggestions | |
US9792550B2 (en) | Methods and apparatus for providing information of interest to one or more users | |
US9898554B2 (en) | Implicit question query identification | |
US10298528B2 (en) | Topic thread creation | |
KR101640186B1 (en) | Static rankings for search queries on online social networks | |
KR102049271B1 (en) | Blending search results on online social networks | |
US9418128B2 (en) | Linking documents with entities, actions and applications | |
KR102099208B1 (en) | Rewriting search queries on online social networks | |
US20120143880A1 (en) | Methods and apparatus for providing information of interest to one or more users | |
US20140280234A1 (en) | Ranking of native application content | |
US9183312B2 (en) | Image display within web search results | |
US9521189B2 (en) | Providing contextual data for selected link units | |
WO2012088591A9 (en) | System and method for performing a semantic operation on a digital social network | |
US8977625B2 (en) | Inference indexing | |
US11249993B2 (en) | Answer facts from structured content | |
US9251202B1 (en) | Corpus specific queries for corpora from search query | |
US8332415B1 (en) | Determining spam in information collected by a source | |
US10353976B2 (en) | Generating search results using a set of alternate search queries | |
US9152698B1 (en) | Substitute term identification based on over-represented terms identification | |
US10146849B2 (en) | Triggering answer boxes | |
US9400789B2 (en) | Associating resources with entities | |
US9990425B1 (en) | Presenting secondary music search result links | |
US9984684B1 (en) | Inducing command inputs from high precision and high recall data | |
US10303684B1 (en) | Resource scoring adjustment based on entity selections | |
US9405849B1 (en) | Inducing command inputs from property sequences |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ADARSH, ANURAG;JANAWADKAR, PIYUSH;REEL/FRAME:028549/0715Effective date: 20110316 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20201211 |
US7853606B1 - Alternate methods of displaying search results - Google Patents
Alternate methods of displaying search results Download PDFInfo
- Publication number
- US7853606B1 US7853606B1 US10/940,209 US94020904A US7853606B1 US 7853606 B1 US7853606 B1 US 7853606B1 US 94020904 A US94020904 A US 94020904A US 7853606 B1 US7853606 B1 US 7853606B1
- Authority
- US
- United States
- Prior art keywords
- article
- search
- open dialog
- file
- search query
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
Definitions
- the invention generally relates to search engines. More particularly, the invention relates to alternate methods of displaying search results.
- Conventional search engines can locate a wide range of articles on networks and individual client devices.
- conventional search engines display results in an HTML page within a web browser or within a custom search application program.
- Conventional systems do not provide adequate methods for displaying search results within existing user interfaces native to applications on a client or server device.
- Embodiments of the present invention comprise alternate methods of displaying search results.
- One exemplary embodiment comprises identifying a user interface native to a client application, identifying a search query, receiving a search result set responsive to the search query from a search application, wherein the search result set comprises a first article identifier associated with a first article and a second article identifier associated with a second article, the first article native to the client application and the second article not native to the client application, and displaying the search result set in the user interface.
- FIG. 1 is a diagram illustrating an exemplary environment in which one embodiment of the present invention may operate
- FIG. 2 is a flow diagram illustrating an exemplary method according to one embodiment of the present invention
- FIG. 3 is an illustration of an exemplary user interface according to one embodiment of the present invention.
- FIG. 4 is an illustration of another exemplary user interface according to one embodiment of the present invention.
- FIG. 5 is an illustration of another exemplary user interface according to one embodiment of the present invention.
- FIG. 6 is an illustration of another exemplary user interface according to one embodiment of the present invention.
- Embodiments of the present invention provide alternate methods for displaying search results.
- one exemplary embodiment of the present invention provides a method for integrating search results within an existing user interface native to an application on a client device.
- one embodiment of the present invention allows internet and local search results to be displayed within the file open dialog box of a common client application, such as a graphics editing application, for example.
- FIG. 1 is a diagram illustrating an exemplary system in which exemplary embodiments of the present invention may operate.
- the present invention may operate, and be embodied in, other systems as well.
- FIG. 1 is a diagram illustrating an exemplary environment for implementation of an embodiment of the present invention. While the environment shown in FIG. 1 reflects a client-side search engine architecture embodiment, other embodiments are possible.
- the system 100 shown in FIG. 1 includes multiple client devices 102 a - n that can communicate with a server device 150 over a network 106 .
- the network 106 shown in FIG. 1 comprises the Internet. In other embodiments, other networks, such as an intranet, may be used instead.
- methods according to the present invention may operate within a single client device that does not communicate with a server device or a network.
- the client devices 102 a - n shown in FIG. 1 each include a computer-readable medium 108 .
- the embodiment shown in FIG. 1 includes a random access memory (RAM) 108 coupled to a processor 110 .
- the processor 110 executes computer-executable program instructions stored in memory 108 .
- Such processors may include a microprocessor, an ASIC, state machines, or other processor, and can be any of a number of suitable computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.
- Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a , with computer-readable instructions.
- suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.
- Client devices 102 a - n can be coupled to a network 106 , or alternatively, can be stand alone machines. Client devices 102 a - n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display device, or other input or output devices. Examples of client devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, the client devices 102 a - n may be any type of processor-based platform that operates on any suitable operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs.
- any suitable operating system such as Microsoft® Windows® or Linux
- the client device 102 a can comprise a personal computer executing client application programs, also known as client applications 120 .
- the client applications 120 can be contained in memory 108 and can include, for example, a word processing application, a spreadsheet application, an email application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, a video playing application, an audio playing application, an image display application, a file management program, an operating system shell, and other applications capable of being executed by a client device.
- Client applications may also include client-side applications that interact with or accesses other applications (such as, for example, a web-browser executing on the client device 102 a that interacts with a remote e-mail server to access e-mail).
- the user 112 a can interact with the various client applications 120 and articles associated with the client applications 120 via various input and output devices of the client device 102 a .
- Articles include, for example, word processor documents, spreadsheet documents, presentation documents, emails, instant messenger messages, database entries, calendar entries, appointment entries, task manager entries, source code files, and other client application program content, files, messages, items, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and media files, such as image files, audio files, and video files, or any other documents or items or groups of documents or items or information of any suitable type whatsoever.
- PDF Portable Document Format
- the user's 112 a interaction with articles, the client applications 120 , and the client device 102 a creates event data that may be observed, recorded, analyzed or otherwise used.
- An event can be any occurrence possible associated with an article, client application 120 , or client device 102 a , such as inputting text in an article, displaying an article on a display device, sending an article, receiving an article, manipulating an input device, opening an article, saving an article, printing an article, closing an article, opening a client application program, closing a client application program, idle time, processor load, disk access, memory usage, bringing a client application program to the foreground, changing visual display details of the application (such as resizing or minimizing) and any other suitable occurrence associated with an article, a client application program, or the client device whatsoever.
- event data can be generated when the client device 102 a interacts with an article independent of the user 112 a , such as when receiving an email or performing a scheduled task.
- the memory 108 of the client device 102 a can also contain a capture processor 124 , a queue 126 , and a search engine 122 .
- the client device 102 a can also contain or be in communication with a data store 140 .
- the capture processor 124 can capture events and pass them to the queue 126 .
- the queue 126 can pass the captured events to the search engine 122 or the search engine 122 can retrieve new events from the queue 126 .
- the queue 126 notifies the search engine 122 when a new event arrives in the queue 126 and the search engine 122 retrieves the event (or events) from the queue 126 when the search engine 122 is ready to process the event (or events).
- the search engine When the search engine receives an event it can be processed and can be stored in the data store 140 .
- the search engine 122 can receive an explicit query from the user 112 a or generate an implicit query and it can retrieve information from the data store 140 in response to the query.
- the queue is located in the search engine 122 .
- the client device 102 a does not have a queue and the events are passed from the capture processor 124 directly to the search engine 122 .
- the event data is transferred using an information exchange protocol.
- the information exchange protocol can comprise, for example, any suitable rule or convention facilitating data exchange, and can include, for example, any one of the following communication mechanisms: Extensible Markup Language—Remote Procedure Calling protocol (XML/RPC), Hypertext Transfer Protocol (HTTP), Simple Object Access Protocol (SOAP), shared memory, sockets, local or remote procedure calling, or any other suitable information exchange mechanism.
- XML/RPC Extensible Markup Language—Remote Procedure Calling protocol
- HTTP Hypertext Transfer Protocol
- SOAP Simple Object Access Protocol
- shared memory sockets, local or remote procedure calling, or any other suitable information exchange mechanism.
- the capture processor 124 can capture an event by identifying and compiling event data associated with an event. Examples of events include accessing a user interface, opening a file open dialog box, viewing a web page, accessing bookmarks within a browser application, saving a word processing document, printing a spreadsheet document, inputting text to compose or edit an email, opening a presentation application, closing an instant messenger application, entering a keystroke, moving the mouse, and hovering the mouse over a hyperlink.
- An example of event data captured by the capture processor 124 for an event involving the opening of a user interface by the user 112 a can comprise, for example, a window handle for the user interface, a pair of window location coordinates, and a list of field types displayed in the interface.
- the capture processor 124 comprises multiple capture components.
- the capture processor 124 shown in FIG. 1 comprises a separate capture component for each client application in order to capture events associated with each application.
- the capture processor 124 can also comprise a separate capture component that monitors overall network activity in order to capture event data associated with network activity, such as the receipt or sending of an instant messenger message.
- the capture processor 124 shown in FIG. 1 also can comprise a separate client device capture component that monitors overall client device performance data, such as processor load, idle time, disk access, the client applications in use, and the amount of memory available.
- 1 also comprises a separate capture component to monitor and capture keystrokes input by the user and a separate capture component to monitor and capture items, such as text, displayed on a display device associated with the client device 102 a .
- An individual capture component can monitor multiple client applications and multiple capture components can monitor different aspects of a single client application.
- the capture processor 124 can monitor activity on the client device and can capture events by a generalized event definition and registration mechanism, such as an event schema.
- Each capture component can define its own event schema or can use a predefined one.
- Event schemas can differ depending on the client application or activity the capture component is monitoring.
- the event schema can describe the format for an event, for example, by providing fields for event data associated with the event (such as the time of the event) and fields related to any associated article (such as the title) as well as the content of any associated article (such as the document body).
- An event schema can describe the format for any suitable event data that relates to an event.
- an event schema for accessing a user interface can include a type of the interface, a type of associated parent application, a pair of display location coordinates for the interface, types of fields within the interface, types of controls within the interface, a window handle for the interface, and other suitable properties identifying information about the interface.
- An event schema for a web page currently being viewed by a user can include the Uniform Resource Locator (URL) of the web page, the time being viewed, and the content of the web page.
- An event schema for a word processing document being saved by a user can include the title of the document, the time saved, the format of the document, the text of the document, and the location of the document. More generally, an event schema can describe the state of the system around the time of the event.
- an event schema can contain a URL for a web page event associated with a previous web page that the user navigated from.
- event schema can describe fields with more complicated structure like lists.
- an event schema can contain fields that list multiple recipients.
- An event schema can also contain optional fields so that an application can include additional event data if desired.
- the capture processor 124 can identify a user interface being presented to the user 112 a using an event schema for the interface. For example, the user 112 a can be editing a text document within a word processing application on the client device 102 a and desire to open a related document. The user 112 a can then select a file open icon, for example, and the word processing application can display a file open dialog box to the user 112 a .
- the capture processor 124 can identify that the file open dialog box is being presented to the user 112 a and can identify information associated with the file open dialog box such as the types of fields it contains, whether it is currently active, display location coordinates, window handle information, parent application information, control information, and other suitable information describing the user interface.
- the search engine 122 can also contain an indexer 130 and a query system 132 .
- the query system 132 can retrieve events and performance data from the queue 126 .
- the query system 132 can use performance data and events to update the current user state and generate an implicit query.
- An implicit query can be an automatically generated query based on the current user state.
- the query system 132 can also receive and process explicit queries from the user 112 a .
- Performance data can also be retrieved by the search engine 122 from the queue 126 for use in determining the amount of activity possible by the search engine 122 .
- events are retrieved from the queue 126 by the indexer 130 .
- the queue 126 may send the events to the indexer 130 .
- the indexer 130 can index the events and can send them to the data store 140 where they are stored.
- the data store 140 can be any type of computer-readable media and can be integrated with the client device 102 a , such as a hard drive, or external to the client device 102 a , such as an external hard drive or on another data storage device accessed through the network 106 .
- the data store 140 can be in memory 108 .
- the data store 140 may facilitate one or a combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs, and may include compression and encryption.
- the data store can be one or more logical or physical storage areas. Other suitable methods and configurations of storing the events can also be used.
- a user 112 a can input an explicit query into an application interface displayed on the client device 102 a , which is received by the search engine 122 .
- the application interface can be any suitable interface displayed on the client device 102 a .
- Embodiments of the present invention allow for user interfaces traditionally not used for entering search queries to receive search queries.
- the capture processor 124 can receive an explicit query entered into the file open dialog box and pass the query to the search engine 122 .
- the search engine 122 can also generate an implicit query based on a current user state, which can be determined by the query system 132 from real-time events. Based on the query, the query system 132 can locate relevant information in the data store 140 and provide a result set.
- the result set comprises article identifiers for articles associated with the client applications 120 or client articles which can be displayed within a user interface.
- Client articles include articles associated with the user 112 a or client device 102 a , such as the user's emails, word processing documents, instant messenger messages, previously viewed web pages and any other article or portion of an article associated with the client device 102 a or user 112 a .
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or other suitable information that may identify an article.
- the result set also comprises article identifiers for articles located on the network 106 or network articles located by a search engine on a server device.
- Network articles include articles located on the network 106 not previously viewed or otherwise referenced by the user 112 a , such as web pages not previously viewed by the user 112 a.
- a display processor 128 can be contained in memory 108 and can control the display of the result set on a display device associated with the client device 102 a .
- the display processor 128 can be associated with a set of APIs to allow various applications to receive the results and display them in various formats, such as with user interfaces belonging to a parent application.
- the display processor 128 can cause a result set to be displayed within a file open dialog box associated with a word processing application.
- other user interfaces can be used by the display processor to display search result sets.
- Embodiments of the present invention allow search result sets to be displayed in user interfaces not traditionally used for displaying search results.
- the display APIs can be implemented in various ways, including as, for example, DLL exports, COM interface, VB, JAVA, or .NET libraries, or a web service.
- a server device 150 can be coupled to the network 106 .
- the search engine 122 can transmit a search query comprised of an explicit or implicit query or both to the server device 150 .
- the user 112 a can also enter a search query in a search engine interface, which can be transmitted to the server device 150 by the client device 102 a via the network 106 .
- the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device 150 .
- Other configurations are also possible.
- the server device 150 can include a server executing a search engine application program, such as the GoogleTM search engine. In other embodiments, the server device 150 can comprise a related information server or an advertising server. Similar to the client devices 102 a - n , the server device 150 can include a processor 160 coupled to a computer-readable memory 162 . Server device 150 , depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 150 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices. The server processor 160 can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill. In another embodiment, the server device 150 may exist on a client-device. In still another embodiment, there can be multiple server devices 150 .
- the server device 150 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems coupled to the network 106 , and indexed the articles in memory 162 or on another data storage device.
- the client device 102 a is a stand-alone device that is not permanently coupled to a network.
- the system 100 shown in FIG. 1 is merely exemplary, and is used to explain the exemplary methods shown in FIG. 2-6 .
- a method comprises identifying a user interface native to a client application, identifying a search query, receiving a search result set responsive to the search query from a search application, wherein the search result set comprises a first article identifier associated with a first article and a second article identifier associated with a second article, the first article native to the client application and the second article not native to the client application, and displaying the search result set in the user interface.
- the search query can comprise an implicit or explicit query.
- the user interface can be a folder view interface and the search result set can be displayed in a search results folder.
- articles can be configured to be manipulated with a client application. Configuring articles to be manipulated by a client application can comprise converting the articles to a file type compatible with the client application or copying the articles.
- the user interface can be an open dialog or a save dialog interface.
- search results can be limited to files compatible with a client application.
- a file can be converted to a file type compatible with a client application.
- the user interface can be a link view interface or a bookmark view interface.
- the search application can comprise a network search engine or a client search engine.
- a method can comprise identifying a user interface native to a client application, identifying a search query, receiving a search result set responsive to the search query from a search application, wherein the search result set can comprise a first article identifier associated with a first article and a second article identifier associated with a second article, the first article comprising a client article and the second article comprising a network article, and displaying the search result set in the user interface.
- the search result set can be limited to article identifiers associated with articles compatible with the client application.
- the article can be configured to be compatible with a client application, which can include converting at least one of the first article and the second article to a file format compatible with the client application and copying at least one of the first article and the second article.
- a method can comprise identifying a user interface native to a client application comprising native output items, identifying a library controlling output of the user interface, identifying a search query, identifying a search result set responsive to the search query, and accessing the library to cause the display of article identifiers associated with the search result set within the user interface, wherein the article identifiers are formatted to resemble the native output items.
- an amount of space available for displaying search results in the user interface can be identified and the result set can be formatted to fit the available space by one or more of causing the display of a scroll bar, causing the display of a droplist, and automatically scrolling the article identifiers in the result set.
- a method can comprise identifying a user interface native to a client application, identifying a search query, receiving a search result set responsive to the search query from a search application, wherein the search result set comprises at least one article identifier associated with an article responsive to the search query, and wherein the search application searches at least one article native to the client application and at least one article not native to the client application, and displaying the search result set in the user interface.
- a method can comprise identifying an open dialog interface native to a client application, identifying a search query, receiving a search result set responsive to the search query from a search application, and displaying the search result set in the user interface.
- FIG. 2 illustrates an exemplary method 200 that provides a method for displaying search results in a user interface native to a client application.
- This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention.
- the method 200 shown in FIG. 2 can be executed or otherwise performed by any of various systems.
- the method 200 is described below as carried out by the system 100 shown in FIG. 1 by way of example, and various elements of the system 100 are referenced in explaining the example method of FIG. 2 .
- the method 200 begins in block 202 , wherein the capture processor 124 identifies a user interface. Identifying a user interface can comprise, for example, receiving information sent to the capture processor 124 about the user interface, or requesting information, such as by issuing an API call with a window handle corresponding to a window receiving input from the user 112 a .
- the user 112 a can be working in a word processing document and desire to open a second document.
- the user 112 a can select a file open option within the program and be presented with a file open dialog box.
- the capture processor 124 can identify that the user interface being presented to the user 112 a is a file open dialog box by identifying, for example, the window handle of the active window, in this case the file open dialog box, and issuing an API call with the window handle to determine information about the type of window being displayed. For example, the capture processor 124 can determine what fields the dialog box contains, what regions within the box are available for displaying text, how much screen area is available for the dialog box, and other suitable parameters impacting the display of the dialog box.
- the capture processor 124 can identify any suitable type of user interface, including, for example, a user interface native to a client application such as a folder view interface, open or save dialog interface, link view interface, or bookmark view interface.
- a folder view interface can comprise an interface similar to the exemplary folder view interface 300 illustrated in FIG. 3 .
- the exemplary folder view interface 300 illustrated in FIG. 3 comprises a title bar 302 , an address bar 304 , a content display area 306 , column headings 308 - 314 , search results 316 - 326 , folder icon 328 , and a detail listing 330 .
- the exemplary link view interface 500 illustrated in FIG. 5 comprises a search term 502 , an address bar 504 , and links 506 - 510 .
- the exemplary bookmark interface 600 illustrated in FIG. 6 comprises a favorites list 602 , an address bar 604 , links 606 , and search results 608 - 614 .
- the user interfaces 300 - 600 are exemplary interfaces offered for purposes of illustration. The method 200 may identify and use other suitable user interfaces besides those illustrated in FIGS. 3-6 .
- the method 200 proceeds to block 204 , wherein the capture processor determines a search query.
- Determining a search query can comprise, for example, formulating an implicit query based on activity of the user 112 a , or receiving an explicit query from the user 112 a .
- Formulating an implicit query can comprise, for example monitoring events on the client device 102 a and generating queries based on the events.
- the capture processor 124 can identify that the user 112 a is typing text and can, for example, extract search queries based on portions of the text being typed.
- the capture processor 124 can extract a string comprising the phrase “budget meeting” from the text typed by the user 112 a and can parse out the terms “budget” and “meeting” by identifying words within the string and can thus formulate a search query.
- the capture processor 124 can also identify implicit search queries based on passed text typed by the user 112 a , text surrounding a cursor or other input device, text currently being typed by the user, or other suitable events or signals indicating a possible search query. According to one embodiment, certain events can trigger an implicit search query.
- the ranking processor 124 can monitor events generated by the user 112 a and can generate search queries based on the monitored events upon the occurrence of triggering events.
- the triggering events can comprise, for example, pressing the enter key, moving or clicking a mouse, set time intervals, selecting a control element, or other suitable event.
- the ranking processor 124 can generate an implicit query based on previous text entered by the user 112 , for example, every time the user 112 presses the enter key. Similarly, the ranking processor 124 can generate an implicit query whenever the user 112 click a mouse button or selects a control element. Selecting a control element can comprise, for example, clicking on a button, field, link, or other user interface element designed to initiate some action. Generating implicit queries at set time intervals can comprise creating an implicit query based on events spanning a certain period of time. For example, the ranking processor 124 can generate an implicit query every three seconds based on events occurring during the last minute. The time frames given here are only exemplary, other time frames can be used by the present invention.
- the capture processor 124 can receive an explicit search query from the user 112 a , for example, by identifying input into a user interface. For example, the capture processor 124 can monitor input into a particular field or portion of a user interface in order to formulate an explicit query. For example, the user 112 a can access the file open dialog 400 and type a term or search string, such as a name “marmaros” for example, into the file name box 418 . The capture processor 124 can identify this term as an explicit query. According to other embodiments, the capture processor 124 can identify explicit queries entered into other types of user interfaces.
- the capture processor 124 can identify user input entered into the address bar 502 of the link view interface 500 , the address bar 604 of bookmark view interface 600 , the address bar 304 of the folder view interface 304 , a search dialog box within a user interface, or other suitable input location within a user interface.
- the search query can be received letter-by-letter or word-by-word.
- a new search query can be identified with each update to the text field.
- a search application configured to receive prefix or substring searches may be employed.
- a query can be identified upon a suitable delineator such as a space, suitable pause, or identification of a complete word or other string existing in a lexicon associated with the search application.
- the method 200 proceeds to block 206 wherein the search engine 122 identifies search results responsive to the search query. Identifying search results responsive to the search query can comprise, for example, identifying articles on the client device 102 or within the data store 140 containing terms associated with the query, submitting the search query to the search engine 170 on the server device 150 , searching a combination of articles within the data store 140 and submitting the search query to the search engine 170 , or other suitable method of obtaining search results responsive to the search query.
- the method 200 proceeds to block 208 , wherein the display processor 128 populates the user interface identified in block 202 with a result corresponding to the search results identified in block 206 .
- Populating the user interface identified in block 202 can comprise, for example, integrating search result identifiers into display locations traditional used to display other information within the user interface.
- populating the folder view interface 300 can comprise, for example, causing search result identifiers to be displayed within the content display area 306 .
- the content display area 306 for a typical folder view interface displays output items such as contents of folders or directories within the client device 102 a or data store 140 .
- the content display area 306 within the folder view interface 300 can display files located on the client device or network drive.
- the display processor 128 can cause search result identifiers to be displayed within the display area 306 and cause the identifiers to appear as if they are within a search folder located on the client device, for example.
- the display processor 128 can cause the search result identifiers to appear within the display area 306 as if they are files on the client device by accessing a library controlling the output of the folder view interface 300 , such as a dynamic link library for example, to instruct the operating system or application causing the display of the folder view interface 300 to display the search result identifiers obtained in block 206 as if they were files residing on the client device.
- Accessing a library can comprise accessing any suitable set of subprograms, program calls, or processes, controlling some feature of the application or of the interface within the application.
- the display processor 128 can display the results within the content display area 404 of the file open dialog interface 400 .
- a file open dialog interface displays files within a folder or section of a storage device that can be opened by a parent application causing the display of the open dialog interface.
- a word processing application will typically display only text files that can be opened and edited by the word processing application.
- a file type box 420 which can allow the user 112 a to view additional file types.
- the display processor 128 can populate the content display area 404 of the open dialog interface 400 with search results and can limit the results displayed to types that can be used by the parent application causing the display of the open dialog interface 400 or to file types indicated in the file type box 420 .
- file type information can be extracted from the file type box 420 and search results can be limited to results associated with the extracted file type information.
- image file types such as .jpg, .bmp, and .gif, for example, can be extracted from the file type box 420 and the search query can include a limitation for only files matching these file type extensions.
- file type information can be identified during block 202 when the capture processor 124 identifies information associated with the user interface or based on other suitable information from the capture processor 124 indicating the type of application with which a user is working on the client device 102 a .
- the capture processor 124 can identify a name of a process and determine, for example, that the process is associated with a text editing application and can display a list of files compatible with the text editing application. Determining file types compatible with an application can comprise accessing a database of file types stored on the client device 102 a or available on the network 106 .
- the display processor 128 can populate the link view interface 500 with search results.
- Populating the link view interface 500 with search results can comprise displaying search results in a menu, such as links 506 - 510 for example.
- the text of the links 506 - 510 can comprise a portion of text from the search results selected to best represent the search result.
- Three links 506 - 510 are illustrated in FIG. 5 for purposes of example, but any number of links may be displayed.
- the dimensions of a toolbar portion of the link view interface 500 can be changed to accommodate more search results. For example, the user 112 a can expand an area within the link view interface 500 for displaying links, or the display processor 128 can automatically scale the link view interface to accommodate more links.
- the display processor 128 can display search results in a bookmark view interface 600 .
- Display results in the bookmark view interface 600 can comprise, for example, populating a favorites list 602 with bookmarks 608 - 614 , for example.
- the text of the bookmarks can comprise, for example, text extracted from a corresponding search result that is selected to best reflect the content of the search result.
- the search query, or other terms associated with the search result or search terms can be displayed in the title bar of the user interface.
- the title bar 302 of the folder view interface 302 can display the term “histserv” which comprises the search query generating the results displayed in the folder view interface 302 .
- the display processor 128 can cause the title bar to output the search query associated with the result set being displayed.
- the display processor 128 can populate a user interface with articles determined to be of likely interest to the user 112 a . Determining articles of likely interest to the user 112 a can comprise, for example identifying recently edited documents, frequently accessed documents, or other suitable criteria for identifying document of likely interest to the user 112 a .
- the display processor 128 can determine a number or results that can be displayed in an interface based on available space and can format the result set accordingly. Formatting the result set based on available space can comprise, for example, causing the display of a scroll bar or droplist, automatically scrolling the article identifiers in the result set, or other suitable method for displaying the result set in the available space.
- Identifying a selected or activated article identifier can comprise, for example, determining on which article identifier the user 112 a has clicked with a mouse or otherwise selected with an input device or over which article identifier a mouse pointer is hovering, for example.
- the method 200 proceeds to block 212 , wherein the display processor 128 performs an action based on the selected article identifier.
- Performing an action based on the selected article identifier can comprise, for example, causing the display of the search results corresponding to the article identifier, converting the search result to a format compatible with the parent application causing the display of the user interface, copying or mirroring the search result to the client device 102 a for manipulation by the user 112 a , or other suitable action.
- the user 112 a can be working in a word processing application and open a file open dialog box.
- the capture processor 124 can identify that the user 112 a has accessed the file open dialog and can identify an explicit search query based, for example, on previous text typed by the user 112 a .
- the search engine 122 can identify a result set responsive to the search query containing, for example, article identifiers for articles on the client device and on the network 106 .
- the display processor 128 can then present the search result set in the open file dialog and the user 112 a can select, for example, an article identifier for an article located on the network 106 .
- the display processor 128 can then mirror the article to the client device 102 a , for example, and convert it to a file type usable by the word processing application and thus enable the user 112 a to work with the article as if it originated on the client device 102 a .
- the display processor 128 can further upload an article, for example an article edited by the user 112 a can be uploaded back to an original location on the network 106 once the user 112 a is finished editing the document.
Abstract
Description
Claims (24)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/940,209 US7853606B1 (en) | 2004-09-14 | 2004-09-14 | Alternate methods of displaying search results |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/940,209 US7853606B1 (en) | 2004-09-14 | 2004-09-14 | Alternate methods of displaying search results |
Publications (1)
Publication Number | Publication Date |
---|---|
US7853606B1 true US7853606B1 (en) | 2010-12-14 |
Family
ID=43303188
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/940,209 Expired - Fee Related US7853606B1 (en) | 2004-09-14 | 2004-09-14 | Alternate methods of displaying search results |
Country Status (1)
Country | Link |
---|---|
US (1) | US7853606B1 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070011169A1 (en) * | 2005-07-05 | 2007-01-11 | Xerox Corporation | Method and system for collecting data from diverse sources and transforming the collected data into a user-friendly format |
US20070226208A1 (en) * | 2006-03-23 | 2007-09-27 | Fujitsu Limited | Information retrieval device |
US20120005583A1 (en) * | 2010-06-30 | 2012-01-05 | Yahoo! Inc. | Method and system for performing a web search |
US20120005626A1 (en) * | 2010-06-30 | 2012-01-05 | Yahoo! Inc. | Method and system for performing a web search via a client-side module |
US20120023102A1 (en) * | 2006-09-14 | 2012-01-26 | Veveo, Inc. | Methods and systems for dynamically rearranging search results into hierarchically organized concept clusters |
US20120047247A1 (en) * | 2010-08-18 | 2012-02-23 | Openwave Systems Inc. | System and method for allowing data traffic search |
US20160170954A1 (en) * | 2012-10-15 | 2016-06-16 | International Business Machines Corporation | Data filtering based on a cell entry |
CN107589888A (en) * | 2013-02-04 | 2018-01-16 | 联想(北京)有限公司 | Information processing method and information processor |
US10055762B2 (en) | 2012-06-06 | 2018-08-21 | Microsoft Technology Licensing, Llc | Deep application crawling |
US10210263B1 (en) * | 2014-06-24 | 2019-02-19 | Google Llc | Native application search results |
US10262067B2 (en) * | 2004-10-26 | 2019-04-16 | Oath Inc. | System and method for presenting search results |
WO2021214588A1 (en) | 2020-04-21 | 2021-10-28 | Janssen Biotech, Inc. | Anti-tnf alpha agent for treating coronavirus infections |
US20210397660A1 (en) * | 2006-04-13 | 2021-12-23 | Wgrs Licensing Company, Llc | Systems and methods for enhancing search results with input from brands, cities and geographic locations |
Citations (72)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5388257A (en) | 1991-07-24 | 1995-02-07 | At&T Corp. | Method and apparatus for operating a computer based file system |
US5701474A (en) | 1996-03-29 | 1997-12-23 | Sun Microsystems, Inc. | Converting handle-based find first/find next/find closed to non-handle based find first/find next |
US5701469A (en) * | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5758331A (en) | 1994-08-15 | 1998-05-26 | Clear With Computers, Inc. | Computer-assisted sales system for utilities |
US5813007A (en) * | 1996-06-20 | 1998-09-22 | Sun Microsystems, Inc. | Automatic updates of bookmarks in a client computer |
US5859639A (en) | 1996-07-17 | 1999-01-12 | International Business Machines Corporation | Mechanism to control visible presence of desktop objects in a graphical user interface |
US5867729A (en) | 1995-08-23 | 1999-02-02 | Toshiba America Information Systems, Inc. | System for reconfiguring a keyboard configuration in response to an event status information related to a computer's location determined by using triangulation technique |
US5886694A (en) | 1997-07-14 | 1999-03-23 | Microsoft Corporation | Method for automatically laying out controls in a dialog window |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6009459A (en) | 1997-01-10 | 1999-12-28 | Microsoft Corporation | Intelligent automatic searching for resources in a distributed environment |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
WO2001055909A1 (en) * | 2000-01-27 | 2001-08-02 | Bookmark Online Corp. | System and method for bookmark management and analysis |
US6272489B1 (en) * | 1998-05-12 | 2001-08-07 | International Business Machines Corp. | Visually oriented, easily navigable search facility |
US20020019763A1 (en) | 1998-09-18 | 2002-02-14 | Linden Gregory D. | Use of product viewing histories of users to identify related products |
US20020038299A1 (en) | 2000-03-20 | 2002-03-28 | Uri Zernik | Interface for presenting information |
US6380983B1 (en) | 1997-03-14 | 2002-04-30 | Kabushiki Kaisha Toshiba | TV receiver with selectable signal processing systems |
US6384840B1 (en) | 1992-12-15 | 2002-05-07 | Sun Microsystems, Inc. | Method and apparatus for presenting information in a display system using transparent windows |
US20020055919A1 (en) | 2000-03-31 | 2002-05-09 | Harlequin Limited | Method and system for gathering, organizing, and displaying information from data searches |
US6393456B1 (en) * | 1998-11-30 | 2002-05-21 | Microsoft Corporation | System, method, and computer program product for workflow processing using internet interoperable electronic messaging with mime multiple content type |
US20020065841A1 (en) | 2000-10-16 | 2002-05-30 | Takahiro Matsuda | Device for retaining important data on a preferential basis |
US6401097B1 (en) * | 1998-01-23 | 2002-06-04 | Mccotter Thomas M. | System and method for integrated document management and related transmission and access |
US20020107847A1 (en) | 2000-10-10 | 2002-08-08 | Johnson Carl E. | Method and system for visual internet search engine |
US6456307B1 (en) | 1998-09-09 | 2002-09-24 | International Business Machines Corporation | Automatic icon generation |
US20020147704A1 (en) * | 2001-01-24 | 2002-10-10 | International Business Machines Corporation | System and method for searching disparate file systems |
US6466238B1 (en) * | 1998-06-30 | 2002-10-15 | Microsoft Corporation | Computer operating system that defines default document folder for application programs |
US6484162B1 (en) * | 1999-06-29 | 2002-11-19 | International Business Machines Corporation | Labeling and describing search queries for reuse |
US6484156B1 (en) * | 1998-09-15 | 2002-11-19 | Microsoft Corporation | Accessing annotations across multiple target media streams |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US20030112278A1 (en) | 2001-12-18 | 2003-06-19 | Driskell Stanley W. | Method to display and manage computer pop-up controls |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030135430A1 (en) | 2002-01-15 | 2003-07-17 | International Business Machines Corporation | Method and apparatus for classification |
US20030144996A1 (en) * | 2002-01-28 | 2003-07-31 | Moore Larry Richard | Method and system for transporting and displaying search results and information hierarchies |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US20030217108A1 (en) | 2002-05-17 | 2003-11-20 | Mariam Karim | Method and apparatus for providing an interactive messaging session for electronic mail users |
US6654036B1 (en) | 2000-06-05 | 2003-11-25 | International Business Machines Corporation | Method, article of manufacture and apparatus for controlling relative positioning of objects in a windows environment |
US20040003351A1 (en) | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Navigating a resource browser session |
US20040030741A1 (en) * | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US6711565B1 (en) | 2001-06-18 | 2004-03-23 | Siebel Systems, Inc. | Method, apparatus, and system for previewing search results |
US6718334B1 (en) | 1999-05-28 | 2004-04-06 | Inter American Data, L.L.C. | Computer implemented document and image management system |
US6725244B1 (en) | 2000-02-25 | 2004-04-20 | Sun Microsystems, Inc. | Method and system for allocation of file descriptors |
US6735774B1 (en) | 2000-10-23 | 2004-05-11 | Hewlett-Packard Development Company, L.P. | Method and apparatus for system call management |
US20040098394A1 (en) | 2002-02-12 | 2004-05-20 | Merritt Perry Wayde | Localized intelligent data management for a storage system |
US6745178B1 (en) | 2000-04-28 | 2004-06-01 | International Business Machines Corporation | Internet based method for facilitating networking among persons with similar interests and for facilitating collaborative searching for information |
US20040143564A1 (en) * | 2002-09-03 | 2004-07-22 | William Gross | Methods and systems for Web-based incremental searches |
US6801906B1 (en) | 2000-01-11 | 2004-10-05 | International Business Machines Corporation | Method and apparatus for finding information on the internet |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US6816847B1 (en) | 1999-09-23 | 2004-11-09 | Microsoft Corporation | computerized aesthetic judgment of images |
US20040267730A1 (en) | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US20050028108A1 (en) | 2003-07-28 | 2005-02-03 | Microsoft Corporation | System and method for dynamically processing display information to combine display focus and context information in screen displays |
US20050050454A1 (en) * | 2003-08-29 | 2005-03-03 | International Business Machines Corporation | Controlling the look and feel of a web |
US20050065958A1 (en) * | 2003-09-19 | 2005-03-24 | International Business Machines Corporation | Expanding the scope of an annotation to an entity level |
US20050076019A1 (en) | 2003-10-06 | 2005-04-07 | Lincoln Jackson | Smart browser panes |
US20050086254A1 (en) | 2003-09-29 | 2005-04-21 | Shenglong Zou | Content oriented index and search method and system |
US20050108394A1 (en) * | 2003-11-05 | 2005-05-19 | Capital One Financial Corporation | Grid-based computing to search a network |
US20050108655A1 (en) | 2003-11-18 | 2005-05-19 | Peter Andrea | User interface for displaying multiple applications |
US20050131888A1 (en) | 2000-04-24 | 2005-06-16 | Tafoya John E. | System and method for automatically populating a dynamic resolution list |
US20050149498A1 (en) | 2003-12-31 | 2005-07-07 | Stephen Lawrence | Methods and systems for improving a search ranking using article information |
US20050149496A1 (en) | 2003-12-22 | 2005-07-07 | Verity, Inc. | System and method for dynamic context-sensitive federated search of multiple information repositories |
US6971068B2 (en) | 2001-07-26 | 2005-11-29 | International Business Machines Corporation | Dialog box positioning |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6995805B1 (en) | 2000-09-29 | 2006-02-07 | Sonic Solutions | Method and system for scene change detection |
US20060036966A1 (en) * | 2004-08-10 | 2006-02-16 | Slava Yevdayev | Method and system for presenting links associated with a requested website |
US7031961B2 (en) | 1999-05-05 | 2006-04-18 | Google, Inc. | System and method for searching and recommending objects from a categorically organized information repository |
US7047502B2 (en) | 2001-09-24 | 2006-05-16 | Ask Jeeves, Inc. | Methods and apparatus for mouse-over preview of contextually relevant information |
US7082428B1 (en) | 2002-09-16 | 2006-07-25 | Bellsouth Intellectual Property Corporation | Systems and methods for collaborative searching |
US7146573B2 (en) | 2002-01-28 | 2006-12-05 | International Business Machines Corporation | Automatic window representation adjustment |
US7149974B2 (en) | 2002-04-03 | 2006-12-12 | Fuji Xerox Co., Ltd. | Reduced representations of video sequences |
US7162473B2 (en) * | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US7194460B2 (en) * | 2003-03-31 | 2007-03-20 | Kabushiki Kaisha Toshiba | Search device, search system, and search method |
US7409646B2 (en) * | 2003-06-17 | 2008-08-05 | Microsoft Corporation | System and method for manipulating toolbar component dimensions |
-
2004
- 2004-09-14 US US10/940,209 patent/US7853606B1/en not_active Expired - Fee Related
Patent Citations (75)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5388257A (en) | 1991-07-24 | 1995-02-07 | At&T Corp. | Method and apparatus for operating a computer based file system |
US6384840B1 (en) | 1992-12-15 | 2002-05-07 | Sun Microsystems, Inc. | Method and apparatus for presenting information in a display system using transparent windows |
US5758331A (en) | 1994-08-15 | 1998-05-26 | Clear With Computers, Inc. | Computer-assisted sales system for utilities |
US6169979B1 (en) | 1994-08-15 | 2001-01-02 | Clear With Computers, Inc. | Computer-assisted sales system for utilities |
US5701469A (en) * | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5867729A (en) | 1995-08-23 | 1999-02-02 | Toshiba America Information Systems, Inc. | System for reconfiguring a keyboard configuration in response to an event status information related to a computer's location determined by using triangulation technique |
US5701474A (en) | 1996-03-29 | 1997-12-23 | Sun Microsystems, Inc. | Converting handle-based find first/find next/find closed to non-handle based find first/find next |
US5813007A (en) * | 1996-06-20 | 1998-09-22 | Sun Microsystems, Inc. | Automatic updates of bookmarks in a client computer |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US5859639A (en) | 1996-07-17 | 1999-01-12 | International Business Machines Corporation | Mechanism to control visible presence of desktop objects in a graphical user interface |
US6009459A (en) | 1997-01-10 | 1999-12-28 | Microsoft Corporation | Intelligent automatic searching for resources in a distributed environment |
US6380983B1 (en) | 1997-03-14 | 2002-04-30 | Kabushiki Kaisha Toshiba | TV receiver with selectable signal processing systems |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US5886694A (en) | 1997-07-14 | 1999-03-23 | Microsoft Corporation | Method for automatically laying out controls in a dialog window |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6401097B1 (en) * | 1998-01-23 | 2002-06-04 | Mccotter Thomas M. | System and method for integrated document management and related transmission and access |
US6272489B1 (en) * | 1998-05-12 | 2001-08-07 | International Business Machines Corp. | Visually oriented, easily navigable search facility |
US6466238B1 (en) * | 1998-06-30 | 2002-10-15 | Microsoft Corporation | Computer operating system that defines default document folder for application programs |
US6456307B1 (en) | 1998-09-09 | 2002-09-24 | International Business Machines Corporation | Automatic icon generation |
US6484156B1 (en) * | 1998-09-15 | 2002-11-19 | Microsoft Corporation | Accessing annotations across multiple target media streams |
US20020019763A1 (en) | 1998-09-18 | 2002-02-14 | Linden Gregory D. | Use of product viewing histories of users to identify related products |
US6393456B1 (en) * | 1998-11-30 | 2002-05-21 | Microsoft Corporation | System, method, and computer program product for workflow processing using internet interoperable electronic messaging with mime multiple content type |
US7031961B2 (en) | 1999-05-05 | 2006-04-18 | Google, Inc. | System and method for searching and recommending objects from a categorically organized information repository |
US6718334B1 (en) | 1999-05-28 | 2004-04-06 | Inter American Data, L.L.C. | Computer implemented document and image management system |
US6484162B1 (en) * | 1999-06-29 | 2002-11-19 | International Business Machines Corporation | Labeling and describing search queries for reuse |
US6816847B1 (en) | 1999-09-23 | 2004-11-09 | Microsoft Corporation | computerized aesthetic judgment of images |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6801906B1 (en) | 2000-01-11 | 2004-10-05 | International Business Machines Corporation | Method and apparatus for finding information on the internet |
WO2001055909A1 (en) * | 2000-01-27 | 2001-08-02 | Bookmark Online Corp. | System and method for bookmark management and analysis |
US6725244B1 (en) | 2000-02-25 | 2004-04-20 | Sun Microsystems, Inc. | Method and system for allocation of file descriptors |
US20020038299A1 (en) | 2000-03-20 | 2002-03-28 | Uri Zernik | Interface for presenting information |
US20020055919A1 (en) | 2000-03-31 | 2002-05-09 | Harlequin Limited | Method and system for gathering, organizing, and displaying information from data searches |
US20050131888A1 (en) | 2000-04-24 | 2005-06-16 | Tafoya John E. | System and method for automatically populating a dynamic resolution list |
US6745178B1 (en) | 2000-04-28 | 2004-06-01 | International Business Machines Corporation | Internet based method for facilitating networking among persons with similar interests and for facilitating collaborative searching for information |
US6654036B1 (en) | 2000-06-05 | 2003-11-25 | International Business Machines Corporation | Method, article of manufacture and apparatus for controlling relative positioning of objects in a windows environment |
US6995805B1 (en) | 2000-09-29 | 2006-02-07 | Sonic Solutions | Method and system for scene change detection |
US20020107847A1 (en) | 2000-10-10 | 2002-08-08 | Johnson Carl E. | Method and system for visual internet search engine |
US20020065841A1 (en) | 2000-10-16 | 2002-05-30 | Takahiro Matsuda | Device for retaining important data on a preferential basis |
US6735774B1 (en) | 2000-10-23 | 2004-05-11 | Hewlett-Packard Development Company, L.P. | Method and apparatus for system call management |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US20020147704A1 (en) * | 2001-01-24 | 2002-10-10 | International Business Machines Corporation | System and method for searching disparate file systems |
US20040030741A1 (en) * | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US6711565B1 (en) | 2001-06-18 | 2004-03-23 | Siebel Systems, Inc. | Method, apparatus, and system for previewing search results |
US6971068B2 (en) | 2001-07-26 | 2005-11-29 | International Business Machines Corporation | Dialog box positioning |
US7047502B2 (en) | 2001-09-24 | 2006-05-16 | Ask Jeeves, Inc. | Methods and apparatus for mouse-over preview of contextually relevant information |
US20030112278A1 (en) | 2001-12-18 | 2003-06-19 | Driskell Stanley W. | Method to display and manage computer pop-up controls |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030135430A1 (en) | 2002-01-15 | 2003-07-17 | International Business Machines Corporation | Method and apparatus for classification |
US20030144996A1 (en) * | 2002-01-28 | 2003-07-31 | Moore Larry Richard | Method and system for transporting and displaying search results and information hierarchies |
US7146573B2 (en) | 2002-01-28 | 2006-12-05 | International Business Machines Corporation | Automatic window representation adjustment |
US20040098394A1 (en) | 2002-02-12 | 2004-05-20 | Merritt Perry Wayde | Localized intelligent data management for a storage system |
US7149974B2 (en) | 2002-04-03 | 2006-12-12 | Fuji Xerox Co., Ltd. | Reduced representations of video sequences |
US20030217108A1 (en) | 2002-05-17 | 2003-11-20 | Mariam Karim | Method and apparatus for providing an interactive messaging session for electronic mail users |
US20040003351A1 (en) | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Navigating a resource browser session |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US20040143564A1 (en) * | 2002-09-03 | 2004-07-22 | William Gross | Methods and systems for Web-based incremental searches |
US7082428B1 (en) | 2002-09-16 | 2006-07-25 | Bellsouth Intellectual Property Corporation | Systems and methods for collaborative searching |
US7194460B2 (en) * | 2003-03-31 | 2007-03-20 | Kabushiki Kaisha Toshiba | Search device, search system, and search method |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US7409646B2 (en) * | 2003-06-17 | 2008-08-05 | Microsoft Corporation | System and method for manipulating toolbar component dimensions |
US20040267730A1 (en) | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US7225187B2 (en) | 2003-06-26 | 2007-05-29 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US7162473B2 (en) * | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US20050028108A1 (en) | 2003-07-28 | 2005-02-03 | Microsoft Corporation | System and method for dynamically processing display information to combine display focus and context information in screen displays |
US20050050454A1 (en) * | 2003-08-29 | 2005-03-03 | International Business Machines Corporation | Controlling the look and feel of a web |
US20050065958A1 (en) * | 2003-09-19 | 2005-03-24 | International Business Machines Corporation | Expanding the scope of an annotation to an entity level |
US20050086254A1 (en) | 2003-09-29 | 2005-04-21 | Shenglong Zou | Content oriented index and search method and system |
US20050076019A1 (en) | 2003-10-06 | 2005-04-07 | Lincoln Jackson | Smart browser panes |
US20050108394A1 (en) * | 2003-11-05 | 2005-05-19 | Capital One Financial Corporation | Grid-based computing to search a network |
US20050108655A1 (en) | 2003-11-18 | 2005-05-19 | Peter Andrea | User interface for displaying multiple applications |
US20050149496A1 (en) | 2003-12-22 | 2005-07-07 | Verity, Inc. | System and method for dynamic context-sensitive federated search of multiple information repositories |
US20050149498A1 (en) | 2003-12-31 | 2005-07-07 | Stephen Lawrence | Methods and systems for improving a search ranking using article information |
US20060036966A1 (en) * | 2004-08-10 | 2006-02-16 | Slava Yevdayev | Method and system for presenting links associated with a requested website |
Non-Patent Citations (47)
Title |
---|
"askSam(TM) Making Information Useful"; askSam,-Organize your information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"askSam™ Making Information Useful"; askSam,—Organize your information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"Overview," Stuff I've Seen-Home Page, http://research.Microsoft.com/adapt/sis/index.htm, pp. 1-2, printed May 26, 2004. |
"Searching for the next Google-New trends are helping nimble startups elbow in to the plundered market," Red Herring-The Business of Technology, Mar. 9, 2004. http://redherring.com/PrintArticle aspx?a=4782§or=Capital, p. 1-5, printed Mar. 30, 2004. |
"Selecting Task-Relevant Sources for Just-In-Time Retrieval," pp. 1-3, no date. |
"Standardization Priorities for the Directory-Directory Interoperability Forum White Paper," The Open Group, Dec. 2001, pp. 1-21. |
"WhenU Just-In-Time Marketing," http://www.whenu.com, printed Mar. 19, 2004. |
80-20 Software-Products-80-20 One Search, http://www.80-20.com/product/tone-search/retriever.asp, printed Mar. 16, 2004. |
Alexa® Web Search-Toolbar Quick.Tour, http://pages.alexa.com/prod-serv/quicktour.html pp. 1-5, printed Mar. 16, 2004. |
Archive of "Froogle," www.froogle.google.com, 1 page, [online] [Archived by http://archive.com on Mar. 30, 2004; Retrieved on Oct. 20, 2006] Retrieved from the Internet. |
Archive of "Froogle," www.froogle.google.com, 1 page, [online] [Archived by http://archive.com on Mar. 30, 2004; Retrieved on Oct. 20, 2006] Retrieved from the Internet<URL:http://web.archive.org/web/20040330045133/froogle.google.com>. |
Archive of "Google News," www.news.google.com, 5 pages, [online] [Archived by http://archive.com on Mar. 25, 2004; Retrieved on Oct. 20, 2006] Retrieved from the Internet. |
Archive of "Google News," www.news.google.com, 5 pages, [online] [Archived by http://archive.com on Mar. 25, 2004; Retrieved on Oct. 20, 2006] Retrieved from the Internet<URL:http://web.archive.org/web/20040325173400/http://www.news.google.com>. |
Barrett. R. et al., "How to Personalize the Web," IBM Research, http://www.almaden.ibm.com/cs/wbi/papers/chi97/wbipaper.html, pp. 1-13, printed Mar. 16, 2004. |
Battelle. J., CNN.com "When geeks go camping,ideas hatch," http://www.cnn.com/2004/TECH/ptech/01/09/bus2.feat.geek.camp/index.html, pp. 1-3, printed Jan. 13, 2004. |
Blake V. Miller, Associate File Extension with Shell Open command and Application, Google Search, http://www.codeproject.com/shell/cgfiletype.asp, Jun. 23, 2000. * |
Boyan, J., et al., 'A Machine Learning Architecture for Optimizing Web Search Engines; School of Computer Science. Carnegie Mellon University, May 10, 1996, pp. 1-8. |
Bradenbaugh. F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly™ Online Catalog, http://www.oreilly.com/catalog/jscook/chapter/ch01.html, pp. 1-30 printed Dec. 29, 2003. |
Bradenbaugh. F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly(TM) Online Catalog, http://www.oreilly.com/catalog/jscook/chapter/ch01.html, pp. 1-30 printed Dec. 29, 2003. |
Brin, S., et al, "The Anatomy of a Large-Scale Hypertextual Web Search Engine," http://www7,scu.edu.au/programme/fullpapers/1921/com1921.htm, pp. 1-18, 1998. |
Budzik, J., et al., User Interactions with Everyday Applications as Context for Just-in-time Information Access, Intelligent Information Laboratory, Northwestern University, pp. 1-8, no date. |
DEVONthink, http://www.devon-technologies,com/products/devonthink.php, printed Mar. 16, 2004. |
dtSearch®-http://www.dtsearch.com/ printed Mar. 15, 2004. |
Dumais. S., et al, "Stuff I've Seen: A System for Personal Information Retrieval and Re-Use," Microsoft Research, SIGIR'03, Jul. 28-Aug. 1, 2003, pp. 1-8. |
Enfish, http://www.enfish.com printed Mar. 16, 2004. |
Fast Search & Transfer-Home-Enterprise Search, http://solutions.altavista.com/en/news/pr-020402-desktop.shtmu, printed Mar. 16, 2004. |
Fertig, S., et al., "Lifestreams: An Alternative to the Desktop Metaphor," http://www,acm.org/sigchi/chi96/proceedings/videos/Fertig/etf.htm, pp. 1-3, printed Mar. 16, 2004. |
Geisler. G., "Enriched Links: A Framework for Improving Web Navigation Using Pop-Up Views," pp. 1-14, 2000. |
ISYS Search Software-ISYS: desktop, http://www.isysusa.com/products/desktop/index.html, printed Mar. 16, 2004. |
Joachims, T., et al., "WebWatcher: A Tour Guide for the World Wide Web," 1996. |
Markoff, J., "Google Moves Toward Clash with Microsoft," The New York Times, May 19, 2004, http://www.nytimes.com/2004/5/19/technology/19google.html?ex=1085964389&ei=1&e.., pp. 1-4, printed May 19, 2004. |
Naraine, R., "Future of Search Will Make You Dizzy," Enterprise, May 20, 2004. http://www.internetnews.com/ent-news/article.php/3356831, pp. 1-4, printed May 21, 2004. |
Rhodes, B., "Margin Notes Building a Contextually Aware Associative Memory," The Proceedings of the International Conference on Intelligent User Interfaces (IUI'00). Jan. 9-12, 2000. |
Rhodes, B., et al., "Just-in-time information retrieval agents," Systems Journal. vol. 39, Nos. 3&4, 2000, pp. 685-704. |
Rhodes, B., et al., "Remembrance Agent -A continuously running automated Information retrieval system," The Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi Agent Technology (PAAM '98), pp. 487-495. |
Rizzo, T., "WinFS 101: Introducing the New Windows File System," Longhorn Developer Center Home: Headline Archive: WinFS 101: Introducing the New . . . , http://msdn.Microsoft.com/Longhorn/archive/default.aspx?pull+/library/en-us/dnwinfs/htm..., pp. 1-5, printed Apr. 21, 2004. |
Salahour, A., et al., "Desktop Rearrangement Based on Incoming Calls", IBM Technical Disclosure Bulletin, Jan. 1994, pp. 657-658, vol. 37, No. 01. |
Sherman, C., "HotBot's New Desktop Search Toolbar," www.searchenginewatch.com, http://searchenginewatch.com/searchday/print.php/34711-339921, pp. 1-3, printed Apr. 14, 2004. |
Sullivan, D., "Alta Vista Releases Search Software," The Search Engine Report, Aug. 4, 1998. pp. 1-2. |
Susan Dumais, Edward Cutrell, JJ Cadiz, Gavin Jancke, Ramen Sarin, Daniel C. Robbins "Stuff I've Seen: A System for Personal Information Retrieval and Re-Use", Microsoft Research, SIGIR '03 Jul. 28-Aug. 1, 2003, Toronto, Canada, ACM 1-58113-646-3/03/0007. * |
Susan Dumais, Edward Cutrell, Ramen Sarin, Eric Horvitz, "Implicit Queries (IQ) for Contexualization", Microsoft Research, SIGIR '04 Jul. 25-29, 2004, Sheffield, South Yorkshire, UK, ACM 1-58113-881-4/04/ 0007. * |
U.S. Appl. No. 10/749,440, filed Dec. 31, 2003, Badros et al. |
WebWatcher Home Page, "Welcome to the WebWatcher Project." http//www-2.c.s.cmu.edu/~webwatcher/, printed Oct. 15, 2003. |
WebWatcher Home Page, "Welcome to the WebWatcher Project." http//www-2.c.s.cmu.edu/˜webwatcher/, printed Oct. 15, 2003. |
Wynblatt, M., et al., "Web Page Caricatures: Multimedia Summaries for WWW Documents," Proc. IEEE Int'l Conf. Multimedia Computing and Systems, Jun. 22-Jul. 1, 1998, pp. 194-199. |
X1 instantly searches files & email. For outlook, Outlook, http://www,.x1.com/, printed Mar. 15, 2004. |
Zellweger, P. et al., "Fluid Links for Informed and Incremental Link Transitions," Proceedings of Hypertext'98, Pittsburgh. PA. Jun. 20-24, 1998, pp. 50-57. |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10262067B2 (en) * | 2004-10-26 | 2019-04-16 | Oath Inc. | System and method for presenting search results |
US20070011169A1 (en) * | 2005-07-05 | 2007-01-11 | Xerox Corporation | Method and system for collecting data from diverse sources and transforming the collected data into a user-friendly format |
US20070226208A1 (en) * | 2006-03-23 | 2007-09-27 | Fujitsu Limited | Information retrieval device |
US20210397660A1 (en) * | 2006-04-13 | 2021-12-23 | Wgrs Licensing Company, Llc | Systems and methods for enhancing search results with input from brands, cities and geographic locations |
US20120023102A1 (en) * | 2006-09-14 | 2012-01-26 | Veveo, Inc. | Methods and systems for dynamically rearranging search results into hierarchically organized concept clusters |
US10025869B2 (en) * | 2006-09-14 | 2018-07-17 | Veveo, Inc. | Methods and systems for dynamically rearranging search results into hierarchically organized concept clusters |
US9619562B2 (en) * | 2010-06-30 | 2017-04-11 | Excalibur Ip, Llc | Method and system for performing a web search |
US9152712B2 (en) * | 2010-06-30 | 2015-10-06 | Yahoo! Inc. | Method and system for performing a web search via a client-side module |
US20120005626A1 (en) * | 2010-06-30 | 2012-01-05 | Yahoo! Inc. | Method and system for performing a web search via a client-side module |
US20120005583A1 (en) * | 2010-06-30 | 2012-01-05 | Yahoo! Inc. | Method and system for performing a web search |
US20120047247A1 (en) * | 2010-08-18 | 2012-02-23 | Openwave Systems Inc. | System and method for allowing data traffic search |
US10055762B2 (en) | 2012-06-06 | 2018-08-21 | Microsoft Technology Licensing, Llc | Deep application crawling |
US20160170954A1 (en) * | 2012-10-15 | 2016-06-16 | International Business Machines Corporation | Data filtering based on a cell entry |
US10354003B2 (en) | 2012-10-15 | 2019-07-16 | International Business Machines Corporation | Data filtering based on a cell entry |
US10460027B2 (en) * | 2012-10-15 | 2019-10-29 | International Business Machines Corporation | Data filtering based on a cell entry |
CN107589888A (en) * | 2013-02-04 | 2018-01-16 | 联想(北京)有限公司 | Information processing method and information processor |
US10210263B1 (en) * | 2014-06-24 | 2019-02-19 | Google Llc | Native application search results |
US11003728B1 (en) * | 2014-06-24 | 2021-05-11 | Google Llc | Native application search results |
WO2021214588A1 (en) | 2020-04-21 | 2021-10-28 | Janssen Biotech, Inc. | Anti-tnf alpha agent for treating coronavirus infections |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7941439B1 (en) | Methods and systems for information capture | |
AU2005231112B2 (en) | Methods and systems for structuring event data in a database for location and retrieval | |
EP1745360B1 (en) | Methods and systems for information capture and retrieval | |
US9836544B2 (en) | Methods and systems for prioritizing a crawl | |
US10180980B2 (en) | Methods and systems for eliminating duplicate events | |
US7580568B1 (en) | Methods and systems for identifying an image as a representative image for an article | |
US7680856B2 (en) | Storing searches in an e-mail folder | |
US9672232B1 (en) | Systems and methods for selectively storing event data | |
US8812515B1 (en) | Processing contact information | |
US20080059419A1 (en) | Systems and methods for providing search results | |
US7707142B1 (en) | Methods and systems for performing an offline search | |
US20080040315A1 (en) | Systems and methods for generating a user interface | |
US7873632B2 (en) | Systems and methods for associating a keyword with a user interface area | |
US20050234929A1 (en) | Methods and systems for interfacing applications with a search engine | |
US7412708B1 (en) | Methods and systems for capturing information | |
US7853606B1 (en) | Alternate methods of displaying search results | |
US7680888B1 (en) | Methods and systems for processing instant messenger messages | |
US7499958B1 (en) | Systems and methods of replicating all or part of a data store | |
US7581227B1 (en) | Systems and methods of synchronizing indexes | |
US9959300B1 (en) | Systems and methods for article location and retrieval |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MARMAROS, DAVID;REEL/FRAME:016121/0041Effective date: 20040914 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20221214 |
EP2904489A2 - Techniques for providing a user interface having bi-directional writing tools - Google Patents
Techniques for providing a user interface having bi-directional writing toolsInfo
- Publication number
- EP2904489A2 EP2904489A2 EP13844663.8A EP13844663A EP2904489A2 EP 2904489 A2 EP2904489 A2 EP 2904489A2 EP 13844663 A EP13844663 A EP 13844663A EP 2904489 A2 EP2904489 A2 EP 2904489A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- user
- computing device
- language
- user interface
- writing directionality
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/30—Creation or generation of source code
- G06F8/33—Intelligent editors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/126—Character encoding
- G06F40/129—Handling non-Latin characters, e.g. kana-to-kanji conversion
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
- G06F9/454—Multi-language systems; Localisation; Internationalisation
Definitions
- the present disclosure relates to user interfaces for computing devices and, more particularly, to techniques for automatically detecting a user's capability of inputting text in a script having a right-to-left (RTL) writing directionality and selectively providing a user interface having bi-directional writing tools.
- RTL right-to-left
- Modern computer applications may be designed to be accessible to users who speak a wide variety of languages. It may be desirable to offer localization options to users, such as the language in which an application or service presents information. Typically, such localization options require applications to present a long list of languages, to make sure that as many users and languages as possible are supported. Users then must navigate through an extensive list, such as via a drop-down or other unwieldy interface, to locate their desired languages. [0005] To address this issue, some applications attempt to make an educated guess as to the language a particular user may desire. This may be done either by separating an application into region-specific subdomains or interfaces.
- a hosted service may be provided in the US and/or other English- speaking countries at a domain such as example.com.
- the same service may be provided at other language-specific domains with country-specific top-level domains (TLDs), such as example.cn for Chinese, example.es for Spanish, and so on.
- TLDs country-specific top-level domains
- other portions of an address or domain may provide an indication of a user's desired language, such as example.com/content/cn for Chinese, example.com/content/es for Spanish, and so on.
- the user's desired language may then be determined based upon which domain or location the user chooses to visit.
- Another technique may include attempting to determine or approximate a user's location based on his IP address. For example, if it is determined that a user appears to be accessing an application from an IP address provided by an ISP in Germany, German may be selected as a likely preferred language of the user.
- a computer-implemented technique can include displaying, at a computing device including one or more processors, a first user interface using a script having a left-to-right (LTR) writing directionality.
- the technique can include receiving, at the computing device, a first input from a user via the first user interface, the first input including at least one of (i) content of e-mails sent by the user, (ii) social network commentary generated by the user, and (iii) search queries generated by the user.
- the technique can include determining, at the computing device, one or more scripts in which the user is capable of inputting text based on the first input.
- the technique can include automatically determining, at the computing device, whether at least one of the one or more scripts is a script having a right-to-left (RTL) writing directionality.
- the technique can include automatically displaying, at the computing device: (i) a second user interface when at least one of the one or more scripts is a script having an RTL writing directionality, the second user interface being different than the first user interface and being configured to allow the user to adjust a writing directionality of a selected portion of text, or (ii) the first user interface when none of the one or more scripts is a script having an RTL writing directionality.
- the technique can also include receiving, at the computing device, a second input from the user via the second user interface displayed at the computing device, wherein the second input via the second user interface causes the computing device to adjust the writing directionality of the selected portion of text.
- the technique can include determining, at a computing device including one or more processors, one or more scripts in which a user is capable of inputting text.
- the technique can include determining, at the computing device, whether at least one of the one or more scripts is a script having an RTL writing directionality.
- the technique can also include automatically outputting, at the computing device: (i) a first user interface when at least one of the one or more scripts is a script having an RTL writing directionality, wherein the first user interface is configured to allow the user to adjust the writing directionality at the computing device, or (ii) a second user interface when none of the one or more scripts is a script having an RTL writing directionality, wherein the second user interface is different than the first user interface and is not configured to allow the user to adjust the writing directionality at the computing device.
- the first user interface is configured to allow the user to allow the user to control a writing directionality of text to be input to the computing device.
- the first user interface is configured to allow the user to control the writing directionality of some portion of text displayed at the computing device.
- the first user interface is configured to allow the user to control an order of columns presenting text in a table displayed at the computing device.
- the first user interface includes one or more commands that can be selected by the user to adjust the writing directionality at the computing device.
- the one or more scripts are determined based on universal language settings for the user.
- the one or more scripts are determined based on past computing activity by the user.
- the past computing activity includes at least one of (i) content of e-mails sent by the user, (ii) social network commentary generated by the user, and (iii) search queries generated by the user.
- the technique further includes receiving, at the computing device, a command from a server, wherein the command causes the computing device to adjust a user interface of an application executing at the computing device to allow the user to adjust the writing directionality at the computing device.
- the application is a web-based application executing in a web browser at the computing device, wherein the command causes the web-based application to adjust its user interface to allow the user to adjust the writing directionality at the computing device.
- a computing device is also presented.
- the computing device can include one or more processors and a display.
- the one or more processors can be configured to: determine one or more scripts in which a user is capable of inputting text, and determine whether at least one of the one or more scripts is a script having an RTL writing directionality.
- the display can be configured to automatically output: (i) a first user interface when at least one of the one or more scripts is a script having an RTL writing directionality, wherein the first user interface is configured to allow the user to adjust writing directionality at the computing device, or (ii) a second user interface when none of the one or more scripts is a script having an RTL writing directionality, wherein the second user interface is different than the first user interface and is not configured to allow the user to adjust writing directionality at the computing device.
- the first user interface is configured to allow the user to control a writing directionality of text to be input to the computing device.
- the first user interface is configured to allow the user to control the writing directionality of some portion of text displayed at the computing device. [0021] In some embodiments, the first user interface is configured to allow the user to control an order of columns presenting text in a table displayed at the computing device.
- the first user interface includes one or more commands that can be selected by the user to adjust the writing directionality.
- the one or more scripts are determined based on at least one of universal language settings for the user and past computing activity by the user.
- the past computing activity includes at least one of (i) content of e-mails sent by the user, (ii) social network commentary generated by the user, and (iii) search queries generated by the user.
- the computing device further includes a communication device configured to receive a command from a server, wherein the command causes the computing device to adjust a user interface of an application executing at the computing device to allow the user to adjust the writing directionality at the computing device.
- the application is a web-based application executing in a web browser of the computing device, and wherein the command causes the web-based application to adjust its user interface to allow the user to adjust the writing directionality at the computing device.
- FIG. 1 shows a computer according to an embodiment of the disclosed subject matter
- FIG. 2 shows a network configuration according to an embodiment of the disclosed subject matter
- FIG. 3 shows a technique for determining one or more preferred languages for a user according to an embodiment of the disclosed subject matter
- FIG. 4 shows an example technique for applying rules according to an embodiment of the presently disclosed subject matter
- FIG. 5 shows example user interfaces that may be provided according to embodiments of the disclosed subject matter
- FIG. 6 shows a process for determining a user's preferred language according to an embodiment of the disclosed subject matter
- FIG. 7 shows a clustering technique for determining a preferred language according to an embodiment of the disclosed subject matter
- FIG. 8 shows an example technique for determining a preferred language based upon a user's social graph according to an embodiment of the presently disclosed subject matter
- FIG. 9 is a functional block diagram of an example server of FIG. 2 according to some implementations of the present disclosure.
- FIG. 10 is a flow diagram of an example technique for automatically detecting a user's capability of inputting text in a script having a right-to-left (RTL) writing directionality and selectively providing a user interface having bi- directional writing tools according to some implementations of the present disclosure
- FIG. 1 1 is a flow diagram of another example technique for automatically detecting a user's capability of inputting text in a script having an RTL writing directionality and selectively providing a user interface having bi- directional writing tools according to some implementations of the present disclosure.
- Embodiments of the presently disclosed subject matter allow for more accurate prediction of a language or languages in which a user may desire to access an application.
- the determined languages may be presented as the earliest or otherwise most prominent options in a localization option for the application, or one or more languages may be selected as the default for the application. Additional techniques also allow for determining and using localization preferences for multiple users or groups of users.
- Embodiments of the presently disclosed subject matter may provide techniques and computing arrangements for determining one or more languages that a user may prefer to use, such as when accessing a software application or service.
- a variety of language indicators may be obtained for the user, and used to generate a set of languages that may be preferred by the user.
- Confidence measures also may be generated for each potential language, and the set of languages may be ordered according to the confidence measures or other values that indicate the relative preference or likelihood that each language is preferred by the user.
- a "language indicator includes any data item that provides information regarding a language that a user may wish to use, for example when accessing a software application or service.
- any information that can be used to determine, estimate, or assign a likelihood that a language is usable by and/or preferred by a user may provide a language indicator.
- a language indicator may provide a binary indication or decision with respect to a particular language, such as to indicate that the language may be or is not acceptable to the user. For example, a language indicator that indicates the user is located in Canada may suggest that English and/or French are acceptable, but may not provide any indication about the acceptability of other languages. Specific examples of language indicators are provided below.
- the user's location and/or IP address may provide a language indicator.
- the user's geographical location may be determined based upon the user's IP address via conventional geo-location techniques, or based upon other information about or obtained from the user. Different geographical locations may suggest different languages. For example, an IP address in the US may suggest that a user's preferred language is English, whereas an IP address in Canada may suggest a preferred language of English or French.
- a language may have several versions, dialects, or other alternate forms. In some cases, the alternate forms may be associated with one or more geographical regions. For example, a user within southern China may prefer a different dialect than a user in northern China.
- a user in Shanghai or other large city may prefer a different dialect than a user in a remote or less-populated region.
- Such geographical data may be collected, for example, based upon users' explicit language preferences, and correlated with those users' geographic regions as determined from the users' IP addresses or other data. As disclosed herein, smaller geographic areas also may be used, such as where distinct sub-populations may be identified within a region.
- the user's originating domain and/or an entry domain may provide a language indicator. For example, if a user accesses a service via a domain in the .es (Spain) top-level domain, this language indicator may suggest a preferred language of Spanish. Similarly, a user may access a site or service via a country- or region-specific domain, such as example. com. ca within Canada, example.co.uk within the UK, and the like. Such a language indicator may suggest that the user's preferred language is an official or predominant language within the region or country associated with the entry domain.
- a language indicator may suggest that the user's preferred language is an official or predominant language within the region or country associated with the entry domain.
- a language associated with another user that is connected to the user by way of, for example, a social network may provide a language indicator.
- a user may be connected to several other users that have selected a particular language, that have posted information in a particular language, or that are otherwise associated with a particular language.
- Such indications by socially-connected users may suggest that the user has a preference for the same language as one or more of the socially-connected users.
- the user also may be connected to multiple users via a social network or similar connection, where each other user has indicated a preference for different languages.
- these language indicators may be weighted, averaged, or otherwise analyzed to determine one or more languages that will likely be preferred by the user.
- one or more languages used by a user in another application, and/or used by the user to send or receive messages may provide a language indicator.
- the application may be a social network or related application.
- the language used by a user and/or entities to which the user is connected in a social network may provide a language indicator.
- a user may communicate with other entities in a social network to which the user belongs in a specific language. This may suggest that the language is a preferred language of the user.
- a language setting in a user's web browser or other software application may provide a language indicator. For example, if a user has set his browser to operate in a particular language, this may indicate that the language to which the browser or other application is set is a preferred language of the user. In some cases, such an explicit preference may be determinative of the user's primary preferred language. However, in some cases a language setting in a browser or other application may be set by an entity other than the user, such as by way of an enterprise-level policy, an administrator configuration option, or other setting that is not chosen directly by a user. Thus, such a setting may be considered with other language indicators as disclosed herein to determine the user's preferred language or languages.
- a setting in an input method editor or other input setting or constraint may provide a language indicator.
- a user may configure a device to accept input in a character set and/or display input or other data in a font typically associated with a particular language (such as Spanish, French, Russian, and the like). Such a configuration may suggest that the associated language is preferred by the user.
- the input method editor or other input setting may be determined from a device used by the user to access an application that attempts to determine the user's preferred language or languages.
- a setting or data stored in a cookie associated with the user may provide a language indicator. For example, a user may have previously accessed an application or otherwise visited a website that stored a cookie at the user's access device, such as to store a user's preference regarding language use at that application. Such an indication in a cookie or equivalent preference storage mechanism may suggest that the indicated language is a preferred language of the user.
- a preference or other setting in another application accessed by the user may provide a language indicator. For example, if a user first accesses a search application, the user may specify a preferred language for search results, or may submit search queries in a preferred language. As another example, a user may access a translation application or other service, and request translations to a particular language. If the user subsequently accesses, for example, an email, calendar, social networking, or other application that shares preferences with the initial search or translation application, or if the user otherwise provides his search or translation application preferences to a second application, the language preference in the first application may suggest a preferred language for the second application.
- the language to which a user requests translations in a translation application or service may provide an indication that the target language is a preferred language of the user.
- an indication of a language in which data is accessed by the user in one application may provide a language indicator for another application accessed by the same user.
- a user's history such as a browsing history or search query history, may provide a language indicator. For example, if a user's browsing history includes sites in a particular language, the history may suggest that the language is preferred by the user. As another example, locations, regions, addresses, and the like that the user has searched in a map or other search application may suggest that a language associated with the locations is a preferred language of the user. As a specific example, if a user has accessed map data for locations in Quebec, this search history may suggest that French and/or English are a preferred language for the user.
- the language in which content accessed or created by the user is written may provide a language indicator. For example, if a user receives, sends, or otherwise accesses emails or other messages in a particular language, such activity may suggest that the language is a preferred language of the user. The language may be detected automatically based upon an analysis of messages associated with the user.
- Settings on a mobile or other device of the user may provide a language indicator. For example, if a user's mobile device is configured to use a particular language when accessing an application, the language may be a preferred language of the user.
- the language setting may be provided explicitly by the device during access of the application, or it may be extrapolated from other information provided by the device.
- the user may select a language in which the device is configured to operate, which selection may be communicated to other applications.
- localized versions of a single device or type of device may be available. Information provided by such a device, such as a version number, localization identifier, or the like, may provide a language indicator that suggests the associated language is a preferred language of the user.
- FIG. 3 shows a technique for determining one or more preferred languages for a user according to an embodiment of the disclosed subject matter.
- a set of language indicators may be obtained, where each indicator is related to a language that may be preferred by the user.
- the set of language indicators may include one or more of the types of data disclosed herein as providing language indicators, or any other indicator of a potentially- preferred language for a user. It may include multiple language indicators or combinations of language indicators as disclosed herein.
- a set of rules 315 may be applied to the language indicators to obtain a set of preferred languages 325for the user.
- the rules may be a set of weightings, decisions, and/or other selection criteria that identify each of one or more languages as being preferred or not preferred by the user.
- the rules may specify that if a particular language indicator or indicators indicate that a language is used by the user, that language should be considered a preferred language of the user.
- the rules also may specify a priority order for the language indicators. For example, the rules may assign an order to the language indicators. In such a configuration, if the highest-ordered language indicator provides a suggestion of a preferred language of the user, that language may be accepted as a preferred language. If it does not provide a suggestion, the second-highest- ordered language indicator may be used to determine a preferred language of the user.
- the rules may indicate a preference order of the preferred languages. For example, the highest-ordered language indicator may be used to select the primary preferred language, the second language indicator used to select the second preferred language, and so on.
- a rule set may specify that language indicators should be considered in the following order of preference: explicit user preference, email language, browser history, and social network language. That is, an explicit user preference language indicator may be the highest-ordered, the email language indicator the second-highest, and so on. In this example, if an explicit user preference indicator exists, the language suggested by the user preference indicator is selected as the primary preferred language for the user. Languages suggested by the email language, browser history, and social network language indicators, if any, may be selected as preferred languages in decreasing order of preference as specified by the rule.
- a language suggested by an email language indicator may be selected as the user's primary preferred language, and any languages suggested by the browser history and social networking language indicators, if any, may be selected as preferred languages in decreasing order of preference.
- the browser history and social network language indicators may be used to determine the user's primary preferred language in turn.
- Other language indicators, rule sets, and ordering may be used.
- a rule set may specify that a primary preferred language should be determined based on a several language indicators, such as counting the number of indicators that suggest each language. The language with the most number of indicators suggesting the language may be selected as the primary preferred language, and the remaining suggested languages selected as additional preferred languages in order of preference based upon the number of indicators that suggest each language.
- a user profile may include ten language indicators that have data that suggests a preferred language. If five language indicators suggest English (US), three suggest English (UK), and one suggests each of French and Spanish, an ordered list of preferred languages may be created as English (US), English (UK), French, Spanish in decreasing order of preference.
- an HTTP request received from a user may indicate that the user's IP indicates the user's location is Belgium.
- the top suggested languages may then be Dutch/Flemish, German, or French.
- the list may be narrowed based upon one or more other language indicators. For example, if the user has used a translate service with the target language set to French, French may be selected as a preferred language of the user.
- German may be selected as a preferred language.
- the set of preferred languages may be ordered according to a determined likelihood that each language is the user's primary preferred language.
- a "primary preferred language" for an application or other context refers to the language that the user would most prefer the application to be presented in.
- a user may have several preferred languages and/or primary preferred languages, such as where a user is multilingual and does not have a preference among those languages in which he is fluent.
- the ordered list of preferred languages may be used to provide a localization of an application to the user.
- a user interface element associated with the application being accessed by the user may be provided in the language identified as the user's primary preferred language.
- the user interface element may be a portion of the application, such as a user control or a portion of text generated by the application, a set of such elements, or the entire application interface.
- the user interface element also may include output of the application intended for use by the user.
- a user interface element may refer to any portion of an application that is accessible by, visible to, or otherwise exposed to a user.
- localization of an application also may refer to, for example, setting a language for one or more user interface elements in the application, setting the user's default input language, or localizing another aspect of the application such as date and time format, sort order, writing directionality, and the like.
- a language selection or other localization interface may be provided that more prominently identifies the preferred languages relative to other languages available in the application.
- an application may include many languages in which the application can be presented to a user. If the user is only interested in a few of the many available languages, it may be difficult for the user to identify the languages of interest using a conventional interface.
- embodiments of the presently disclosed subject matter may present the preferred languages more prominently, such as at the top of a selection interface, thereby simplifying the process of the user identifying and selecting a preferred language.
- Other interfaces may be provided.
- FIG. 4 shows an example technique for applying rules according to an embodiment of the presently disclosed subject matter.
- a rule set specifies an order in which language indicators are examined to determine whether each of a set of languages is the user's primary preferred language.
- the specific order in which language indicators are considered in FIG. 4 is illustrative only, and it will be understood that any order may be used. More generally, a predefined order of language indicators may be used, in which each indicator is considered sequentially to determine if it identifies a language usable or preferred by the user. Other language indicators may be used to identify additional preferred languages, such as to provide as initial options in a localization interface.
- a first language indicator may be considered. For example, communications from a user's web browser or other application or device may be examined to determine if the browser provides an explicit indication of a preferred language, for example via a setting, request, header language, or the like. If so, at 415 the indicated language may be adopted as a preferred language for the user, such as the user's primary preferred language. If not, at 420 another language indicator may be considered, such as any explicit preferences set in another application accessed by the user.
- the language indicator identifies a language, e.g., if another application accessed by the user identifies a language preferred or used by the user, at 425 the language may be identified as a preferred language of the user. Otherwise, at 430, another language indicator may be considered, such as whether a cookie stored at a user device indicates a language preference. If so, the indicated language may be accepted as a preferred or primary preferred language at 435. It will be understood that any number of language indicators may be considered sequentially in a similar process. Once the indicators of interest have been considered, a default preferred language may be accepted at 440. Also, additional preferred languages may be obtained based upon other language indicators. For example, if a primary preferred language is identified at 425, languages identified by language indicators considered at and subsequent to 430 may be selected as additional preferred languages.
- the number of language indicators that signal each language may be determined.
- Each language indicator for which data is available may be considered to determine which language is suggested by the indicator.
- a primary preferred language may be identified.
- the language having the highest number of language indicators that suggest the language may be selected as the primary preferred language.
- data may be available for a user related to 10 language indicators as disclosed herein.
- it may be determined that five suggest "English (US)", three suggest "English (UK)", and two suggest English without displaying a particular preference for either variant.
- English (US) may be selected as the primary preferred language
- English (UK) may be selected as a preferred language.
- Other techniques may be used. For example, language indicators may be weighted based upon the amount of data available for each, the historical reliability of each in predicting a primary preferred language, or other factors.
- confidence levels may be assigned to one or more preferred languages identified based on the language indicators or other data.
- the confidence levels may indicate the calculated likelihood that each language is a preferred language of the user, or that the language is the primary preferred language of the user.
- confidence levels may be calculated based upon the language indicators used to identify a user's preferred languages.
- a preferred language may be determined based upon the connections in a user's social graph as described in further detail herein.
- the confidence level for a language X may be a numeric value that is directly proportional to the number of entities in the user's social graph that are determined to speak the language X, divided by the total number of entities in the user's social graph.
- confidence levels may be provided by the associated classification algorithm.
- confidence levels may be derived from numeric values of a target function being optimized by the classification algorithm. For example, clustering techniques provide a confidence level based upon each cluster's purity, i.e., the number of user profiles in a cluster that represent the majority language of the cluster, divided by the number of profiles in the cluster.
- confidence levels may be calculated based upon a number of rules positively triggered when analyzing the language indicators for a user, divided by the total number of rules processed or available in the system.
- Each rule also may have an associated weight to reflect a determination that some rules are more accurate predictors of preferred languages than others. In other cases, all rules may have an equal weight.
- the confidence levels may be used to order the preferred languages at 330.
- the confidence levels may be used for other purposes, such as to determine languages that should be offered as potentially preferred languages in a user interface as disclosed herein.
- the rules 315 may be updated based upon the observed accuracy of the preferred language identification techniques disclosed herein. For example, at 360 the preferred languages identified by the technique illustrated at 310-330 may be compared to one or more languages selected by the user. Based upon the comparison, the rules 315 may be modified at 370. Example modifications may include assigning different weights to language indicators, modifying the order in which language indicators are considered to identify a primary preferred language, adding and removing rules from the rule set, and the like. The modified rules may be used to determine subsequent preferred languages.
- FIG. 5 shows example user interfaces that may be provided at 340 according to embodiments of the disclosed subject matter.
- the user interface may be, for example, a drop-down or other selection element that allows a user to select a desired language for the application.
- the application may be provided to the user in a primary preferred language identified through the procedure described with respect to FIG. 3 or other techniques disclosed herein.
- the example user interfaces 510, 520 may then provide a way for the user to change the language in which the application is presented.
- languages identified as preferred languages may be presented first, out of order, or otherwise highlighted to the user for easier or more rapid selection.
- the interfaces 510, 520 may correspond to applications in which "French (FR)” was identified as the primary preferred language, and each of "French (CA)", “English (US)", and “English (UK)” was identified as preferred languages.
- Other languages in which the application is available may be listed in the interface 510, or may be accessible via another interface element ("Others --) 520.
- Other interfaces and arrangements may be used.
- the interfaces shown in FIG. 5 may be used to change a language in which the application is presented to the user.
- embodiments of the disclosed subject matter also may allow any other user interface elements to be presented in a preferred language.
- Other user interface elements may change the language in which they are presented based upon a user preference, such as a language selected from an interface such as shown in FIG. 5.
- FIG. 6 shows a process for determining a user's preferred language according to an embodiment of the disclosed subject matter.
- a set of language indicators may be obtained, where each indicator is related to a language that may be preferred by the user.
- the set of language indicators may include one or more of the types of data disclosed herein as providing language indicators, or any other indicator of a potentially-preferred language for a user. It may include multiple language indicators or combinations of language indicators as disclosed herein.
- a set of language classifiers 615 may then be applied to the obtained language indicators at 620 to obtain confidence scores 625 for languages associated with the language classifiers 615.
- a language classifier may be a component that analyzes a set of language indicators and returns a confidence score indicating the determined likelihood that a language associated with the language classifier is the user's primary preferred language.
- each language classifier is designed to generate a confidence score for a single language. Examples of language classifier arrangements may include decision tree based systems, support vector machines, regression systems, or other similar machine learning classification techniques as will be readily understood by one of skill in the art.
- a language classifier may construct and/or apply a decision tree constructed based upon one or more sets of user language indicators. The decision tree may have been previously constructed or modified based upon known user preferences. The decision tree may include several nodes, each of which is associated with a language indicator.
- the classifier may arrive at a language that is determined to have the highest probability of being the user's primary preferred language.
- the tree also may provide a confidence level for the language.
- the confidence scores may be used to determine a set of preferred languages for the user.
- the preferred languages may be ordered according to the confidence scores, i.e., in order indicating the likelihood that each language is the user's primary preferred language.
- a set of preferred languages may be used to provide localization for an application accessed by the user, such as by providing a user interface or other item to the user.
- FIG. 5 shows illustrative examples of user interfaces constructed from an ordered set of preferred languages for a user. For example, an interface to the application being accessed by the user may be provided in the language identified as the user's primary preferred language. As another example, a language selection or other localization interface may be provided that more prominently identifies the preferred languages relative to other languages available in the application. Other interfaces may be provided.
- weights may be assigned to the language indicators obtained at 610 as previously disclosed.
- each language indicator may have a weight assigned to it that indicates the relative importance of the indicator relative to other indicators.
- the confidence scores 625 may be calculated based upon the weighted language indicators.
- the language classifiers may be calibrated based upon a common set of training data.
- training may be performed by providing each language classifier with a set of training data, then evaluating the predictive power of each language classifier in identifying preferred languages based upon the training data.
- the language classifiers 615 may be updated based upon the observed accuracy of the preferred language identification techniques disclosed herein. For example, at 660 the preferred languages identified by the technique illustrated at 610-630 may be compared to one or more languages selected by the user. Based upon the comparison, the classifiers 615 may be modified at 670. Example modifications may include assigning different weights to language indicators to identify a primary preferred language, suppressing known "false hits" or other identifiable errors in the classification, and the like. The modified language classifiers may be used to determine subsequent preferred languages.
- FIG. 7 shows a clustering technique for determining a preferred language according to an embodiment of the disclosed subject matter.
- a set of attribute clusters may be obtained, each of which is associated with at least one language.
- An attribute cluster refers to a definition of a set of language indicators or other attributes that are shared among users who have a common preferred language. The number of clusters may be chosen, for example, based on the number of languages supported by the application. Further information regarding specific clustering techniques suitable for use with embodiments of the presently disclosed subject matter is provided elsewhere herein.
- a set of language indicators may be obtained for a user as previously described and, at 730, an attribute cluster 725 that has a highest correlation or otherwise a best fit to the language indicators may be identified. The highest correlation cluster may be identified, for example, as the cluster having the most language indicators in common with those received for a user. It may be possible for multiple clusters to have the highest correlation to a set of language indicators, or for no cluster to have a highest correlation.
- a language associated with the identified cluster may be determined to be a preferred language for the user and, for example, a localization may be provided for an application accessed by the user. For example, an application or a user interface element of an application may be presented to the user in the language associated with the cluster.
- languages associated with clusters that share some attributes with the language indicators for the user, but that do not have the highest correlation may be used to construct a set of preferred languages for the user. These languages may be used as alternates to the primary preferred language identified based upon the highest-correlation cluster.
- FIG. 5 shows illustrative examples of user interfaces constructed from an ordered set of preferred languages for a user.
- an interface to the application being accessed by the user may be provided in the language identified as the user's primary preferred language.
- a language selection or other localization interface may be provided that more prominently identifies the preferred languages relative to other languages available in the application.
- Other interfaces may be provided.
- the clusters 725 may be updated based upon the observed accuracy of the preferred language identification techniques disclosed herein. For example, at 750 the preferred languages identified by the technique illustrated at 710-740 may be compared to one or more languages selected by the user. Based upon the comparison, the clusters 725 may be modified at 760. Example modifications may include moving a language indicator from one cluster to another, removing an indicator from a cluster, suppressing known "false hits" or other identifiable errors in the classification, and the like. The modified clusters may be used to determine subsequent preferred languages.
- An embodiment of the disclosed subject matter may include defining the set of user clusters 725. For example, language indicators and primary preferred languages for a group of users may be determined.
- the user profiles (sets of language indicators) may be grouped, with users having common language indicators being grouped together. Once the profiles are grouped, attribute clusters may be defined based upon the groupings. A language common to the user profiles may then be assigned to the cluster, where the language has been determined based upon language indicators, other preferred language identification techniques as disclosed herein, or explicit user preference.
- a clustering algorithm may consider a number of language indicators for a user (the user's "profile").
- the number of language indicators considered for each user may vary, for example from a few, to tens or hundreds of indicators for each profile.
- Clustering algorithms may determine a clustering arrangement that achieves a threshold probability, or achieves a maximum probability, that users in the same cluster have a maximum number of language indicators in common.
- the specific target function used by a clustering algorithm may vary.
- a Distributed Exchange Algorithm uses a probabilistic target function to maximum information between user profiles within each cluster, which results in a maximum probability of the most possible overlap of user language indicators within each cluster.
- the process of clustering user profiles that include language indicators may be performed using one or more appropriate clustering algorithms, such as a Hierarchical Agglomerative Clustering algorithm, k-means clustering, or Expectation Maximizations [EM] clustering, using the set of language indicators for each user.
- clusters users may be clustered based on their language preference, i.e., English-speaking users are clustered together, French-speaking users are clustered together, and so on.
- Clustering techniques may be suitable for situations in which users with similar language preferences also display similarities in terms of the language indicators available for the users. For example, users that share a language also may be likely to share the same geographic location, to have social graphs with the same or a similar dominant language, and the like.
- Clustering algorithms may process user language indicators and other data to create a clustering arrangement in which the users' profiles in the same cluster share the maximum number of common attributes.
- Clustering approaches according to embodiments of the presently disclosed subject matter also may be referred to as "unsupervised machine learning" techniques. Such techniques may be characterized by the fact that the system may not be trained on a predefined set of data. Rather, the desired data partitioning by preferred language may emerge naturally by selecting the right set of language indicators for a set of users, which have the most correlation to the target variable.
- the effectiveness of a clustering technique may be measured by injecting target data set with a test data set of user profiles with preferred language known in advance.
- the known preferred languages may have been set by the user.
- the distribution of user profiles with a known preferred language may be analyzed.
- a clustering technique that produces a clustering having a relatively high number of users with a known preferred language being clustered together may be deemed as having the highest quality of clustering.
- FIG. 8 shows an example technique for determining a preferred language based upon a user's social graph according to an embodiment of the presently disclosed subject matter.
- a preferred language may be obtained for each of a plurality of entities in a user's social graph.
- a "social graph” refers to a set of entities that are connected to the user by way of a social networking site or similar application that allows the user to make social connections to other entities.
- the social graph may be represented as a graphical chart of connections between entities and/or social networking applications, a list of entities and/or relationships relevant to the user, or the like.
- the social graph of a user may be determined, for example, by crawling one or more social networks in which the user is a participant, such as with an automated indexing process.
- the social graph also may be provided by the user, for example as a list of connections or contacts.
- Each entity in a social graph may be another user, an account, a website, a corporation, or any other entity that may use the social networking applications. It may be possible to determine whether a language is a preferred language for an entity in the social graph based upon the entity's actions within a social networking application. For example, if an entity posts news or status items in a particular language, that language may be identified as a preferred language of the entity.
- a preferred language for a particular entity in a user's social graph may be determined in a variety of ways.
- one or more language indicators may be obtained for the entity, such as a language the entity has used to participate in a social network, a geographical location of the entity, and so on, using any of the language indicators described herein or any other language indicators.
- One or more preferred language filters may then be applied to the language indicators for the entity.
- a preferred language filter refers to a rule, algorithm, selection metric, or other technique for determining whether a language is preferred by an entity.
- a preferred language filter may include a rules-based filter, such as the rules-based techniques disclosed herein.
- preferred language filters may include language classifiers and/or language clustering techniques as disclosed herein. Such filters may be used alone or in any combination, for example by weighting the preferred languages as identified by multiple filters.
- a set of preferred languages for the user may be obtained based upon the preferred languages obtained for the plurality of entities. For example, each language that is a preferred language for one or more entities in the user's social graph, or each language having a minimum number of entities for which it is a preferred language, may be selected.
- the set of preferred languages may be ordered according to a determined probability that each language is the user's primary preferred language at 830. For example, the set may be ordered based upon the number of entities in the user's social graph for which each language is a preferred language.
- one or more of the languages may be selected as a preferred or primary preferred language for the user, and used to localize an application accessed by the user.
- a preferred language may be used to generate a user interface element for the user in the language.
- a user interface element for an application may be presented to the user in the highest-ordered preferred language.
- Other languages that are used by entities in the user's social graph also may be used as preferred languages of the user.
- languages used by less than the highest number entities in the social graph may be used to provide suggested alternatives to the primary preferred language, and may be presented in a user interface element such as a localization or language selection element.
- FIG. 5 shows illustrative examples of user interfaces constructed from an ordered set of preferred languages for a user.
- an interface to the application being accessed by the user may be provided in the language identified as the user's primary preferred language.
- a language selection or other localization interface may be provided that more prominently identifies the preferred languages relative to other languages available in the application.
- Other interfaces may be provided.
- a confidence measure may be calculated for each language in the preferred language list developed at 820, and the languages may be ordered according to the confidence measure.
- the highest confidence measure language may be selected as the primary preferred language of the user.
- the confidence measure may be, for example, based upon the use of the language by entities in the social graph of the user. As a specific example, the confidence measure may be determined based upon the number of entities in the social graph of the user that use each language in the set of preferred languages. As another example, the confidence measure may be determined based upon the number of messages associated with the user in the language.
- the messages may be messages, posts, updates, or other items in a single social networking application or across multiple applications.
- a first user, User A may be friends with or otherwise socially connected to Users B, C, and D.
- User A's language preferences are unknown, but Users B, C, and D all list German as their preferred language.
- German may be identified as a likely preferred language or primary preferred language, and it therefore may be suggested to User A that German may be a top language preference.
- a confidence measure for a preferred language may be calculated as proportional to the majority preferred language on the user's social graph. For example, a user may have 3 types of connections on his social graph, each with preferred language A, B, and C respectively.
- the level confidence of a preferred language prediction may be calculated according to
- Confidence max( A, B, C) / (A + B + C) Where A, B, and C are the number of entities on the user's social graph with preferred language A, B, and C, respectively.
- Embodiments of the presently disclosed subject matter may include various feedback mechanisms to improve the prediction capabilities of a user's preferred language or languages. For example, predictions of users' preferred languages may be compared to actual preferred languages identified by the same users within the application for which the languages were predicted. Based upon the difference, the rules, correlations, clusters, or other components used to predict the users' preferred languages may be adjusted. As a specific example, if it is found that a rule that prioritizes languages in a user's cookies over languages used in messages sent by a user generally provides incorrect results, the rule may be modified to prioritize a languages identified in sent messages over those identified in the user's cookies. Feedback and other analysis modification techniques for the various techniques disclosed herein will be readily understood by one of skill in the art based upon the present disclosure.
- embodiments of the presently disclosed subject matter may be used to derive otherwise unavailable or difficult to obtain information about user language preferences. For example, as geographic language preference data is collected, more precise information about those preferences may become available. For example, embodiments of the presently disclosed subject matter may determine that users within a relatively focused, small geographic region, such as a particular neighborhood or other region of a city are more likely to have a particular language preference relative to other users within the same city. As a specific example, it may be determined that users within a "Chinatown" or other cultural or ethnic region of a city are likely to prefer to access application in an associated language, such as Chinese. Similarly, embodiments of the presently disclosed subject matter may allow for identification of such neighborhoods or regions based upon the distribution of user language preferences.
- Embodiments of the presently disclosed subject matter may include privacy protection components and/or controls to safeguard individual user information. For example, information on explicit user preferences and/or language indicators associated with a user may be anonymized so that they cannot be linked to a specific user by name or identity. Some configurations may operate only on aggregate data. For example, when a rule, classifier, or other component is updated based upon explicit user preferences compared to determined language preferences, the update mechanism may use only aggregate data for multiple users to prevent identification of a particular user's preferences in relation to that user's identity. Other privacy protections may be used.
- Embodiments of the presently disclosed subject matter may localize an application based upon a preferred language identified for a user. For example, one or more user interface elements of an application may be presented to a user in a preferred language. Less than all of the user interface elements in the application may be presented in the preferred language or the entire application may be presented in a preferred language. For example, where the application is embodied in a web site, the entirety of the web site presented to the user may be presented in a preferred language of the user. Alternatively, some portion of the application may be presented in one or more other languages. As a specific example, if it is determined that the user's primary preferred language is English, all the user interface elements of the application may be presented in English.
- a portion of the web page may display the other languages available, with each language displayed in that language.
- the language selection interface may display "Frangais”, “Deutsch”, and “Italiano” (i.e., “French”, “German”, “Italian” in French, German, and Italian, respectively).
- Each language may be, for example, a link that causes the rest of the page to be rendered in the selected language.
- FIG. 1 is an example computer 20 suitable for implementing embodiments of the presently disclosed subject matter.
- the computer 20 includes a bus 21 which interconnects major components of the computer 20, such as a central processor 24, a memory 27 (typically RAM, but which may also include ROM, flash RAM, or the like), an input/output controller 28, a user display 22, such as a display screen via a display adapter, a user input interface 26, which may include one or more controllers and associated user input devices such as a keyboard, mouse, and the like, and may be closely coupled to the I/O controller 28, fixed storage 23, such as a hard drive, flash storage, Fibre Channel network, SAN device, SCSI device, and the like, and a removable media component 25 operative to control and receive an optical disk, flash drive, and the like.
- a bus 21 which interconnects major components of the computer 20, such as a central processor 24, a memory 27 (typically RAM, but which may also include ROM, flash RAM, or the like), an input/output controller 28, a user display 22,
- the bus 21 allows data communication between the central processor 24 and the memory 27, which may include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted.
- the RAM is generally the main memory into which the operating system and application programs are loaded.
- the ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components.
- BIOS Basic Input-Output system
- Applications resident with the computer 20 are generally stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed storage 23), an optical drive, floppy disk, or other storage medium 25.
- the fixed storage 23 may be integral with the computer 20 or may be separate and accessed through other interfaces.
- a network interface 29 may provide a direct connection to a remote server via a telephone link, to the Internet via an internet service provider (ISP), or a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence) or other technique.
- the network interface 29 may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.
- CDPD Cellular Digital Packet Data
- the network interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other networks, as shown in FIG. 2.
- FIG. 1 Many other devices or components (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras and so on). Conversely, all of the components shown in FIG. 1 need not be present to practice the present disclosure. The components can be interconnected in different ways from that shown. The operation of a computer such as that shown in FIG. 1 is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of the memory 27, fixed storage 23, removable media 25, or on a remote storage location.
- FIG. 2 shows an example network arrangement according to an embodiment of the disclosed subject matter.
- One or more clients 10, 1 1 such as local computers, smart phones, tablet computing devices, and the like may connect to other devices via one or more networks 7.
- the network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks.
- the clients may communicate with one or more servers 13 and/or databases 15.
- the devices may be directly accessible by the clients 10, 1 1 , or one or more other devices may provide intermediary access such as where a server 13 provides access to resources stored in a database 15.
- the clients 10, 1 1 also may access remote platforms 17 or services provided by remote platforms 17 such as cloud computing arrangements and services.
- the remote platform 17 may include one or more servers 13 and/or databases 15.
- ⁇ refers to a direction in which writing is read.
- a majority of languages have scripts that have a left-to-right (LTR) writing directionality.
- LTR left-to-right
- a script refers to written characters, and more than one language may have a same script.
- Some scripts, however, have an RTL writing directionality. For example, Hebrew and Arabic scripts each have an RTL writing directionality.
- a document can indicate the directionality of the text it contains on many levels (a table, a paragraph, a phrase within a paragraph, etc.)- If the document does not correctly indicate the direction of the text it contains, the text may not be displayed as intended.
- applications that allow the entry of text can provide controls for indicating the direction of the text being entered, and by default can interpret text entered by a user as having the same overall direction as the user interface.
- such controls may be provided in RTL script user interfaces because their users may enter both RTL and LTR text.
- such controls are often omitted from LTR-script user interfaces, since a majority of their users do not read or write RTL script languages.
- LTR-script user interface For example, having directionality controls in these user interfaces may confuse the users, since they only ever enter LTR text. Nevertheless, some users who prefer to use a user interface in an LTR script, e.g., English, do, in fact, read and write a language in an RTL script, and therefore need the controls in order to be able to enter RTL text and have it displayed correctly. Users who write in a script having an RTL writing directionality but using an LTR-script user interface, therefore, may be forced to provide input in a different script and/or their input may be received incorrectly when such controls are not provided.
- Computing devices and/or applications executing on the computing devices can have settings that indicate whether the user is capable of inputting RTL text (despite preferring to use an LTR user interface).
- the application or device may include directionality controls in its LTR script interfaces.
- These bi-directional writing settings are typically buried in menus and therefore are difficult for the user to find and/or may be unknown to the user.
- the techniques can determine one or more scripts in which the user is capable of inputting text based on a variety of different signals, such as universal language settings (ULS) and one or more signals related to past computing activity of the user (sent e-mail content, search queries, social network posts, etc.)-
- ULS universal language settings
- the techniques can provide a user interface configured to allow the user to adjust writing directionality, e.g., switch between an LTR writing directionality and an RTL writing directionality.
- FIG. 9 a functional block diagram of the example server 13 is illustrated.
- server as used herein can refer to any suitable computing device having one or more processors, and can also refer to two or more servers operating in a parallel or distributed architecture.
- the server 13 can include a communication device 900, a processor 904, a memory 908, a capability determination module 912, and a user interface generation module 916.
- the client device 10 may also include the same or similar components for partially or entirely executing the techniques according to some implementations of the present disclosure.
- the term "processor” as used herein can also refer to two or more processors operating in a parallel or distributed architecture. Additionally, the processor 904 can wholly or partially execute the capability determination module 912 and/or the user interface generation module 916.
- the communication device 900 can be configured for communication between the server 13 and other computing devices, e.g., client 10 (hereinafter computing device 10), via the network 7.
- the communication device 900 can include one or more suitable communication components, such as a transceiver, as well as the appropriate software for performing its functions.
- the communication device 900 can receive input from a user 12 at the computing device 10 via the network 7.
- the communication device 900 can also receive or retrieve other information to be used in determining the user's capability of inputting text in a script having an RTL writing directionality.
- the communication device 900 can transmit a user interface (or a command) generated according to the techniques of the present disclosure to the computing device 10 via the network 7 (described in detail below).
- the processor 904 can control operation of the server 13.
- the processor 904 can perform functions including, but not limited to, loading and executing an operating system, controlling communication via the communication device 900, and/or controlling storage/retrieval operations at the memory 908.
- the processor 904 can also wholly or partially execute the techniques of the present disclosure.
- the memory 908 can include any suitable type of storage medium (flash, hard disk, etc.) configured to store data. Specifically, the memory 908 can store information indicative of the user's capability of inputting text in scripts having an RTL writing directionality (ULS, past activity/history, etc.).
- the capability determination module 912 can determine the user's preference for writing directionality. More specifically, the capability determination module 912 can determine whether at least one script in which the user 12 is capable of inputting text is a script having an RTL writing directionality, e.g., Hebrew. When at least one of these scripts is a script having an RTL writing directionality, the capability determination module 912 can communicate a notification of the user's capability to the user interface generation module 916.
- a script having an RTL writing directionality e.g., Hebrew.
- the capability determination module 912 can determine the one or more scripts in which the user 12 is capable of inputting text based on a plurality of signals.
- the plurality of signals can include the user's ULS and/or one or more signals related to the user's past computing activity.
- the signal(s) related to the user's past computing activity can include content of e-mails sent by the user 12, social network commentary generated by the user 12, and/or search queries generated by the user 12.
- Other suitable past computing activity can also be used, e.g., text documents generated by the user 12. For example, this information can be stored entirely or partially at the memory 908. It should be appreciated that other suitable signals can be used to determine these one or more scripts, e.g., direct input from the user 12.
- the capability determination module 912 can use the signal(s) related to the user's past computing activity to determine whether the user 12 has input text in a script having an RTL writing directionality within a period of time, e.g., 30 days. In some implementations, the capability determination module 912 can determine whether the user 12 has ever input text in a script having an RTL writing directionality. Further, in some implementations, the capability determination module 912 can determine the degree or the amount of the user's usage of the script having an RTL writing directionality. For example, the capability determination module 912 may determine that the user 12 is capable of inputting text in a script having an RTL writing directionality when the user 12 has input text in that particular script a threshold number of distinct times and/or a threshold number of words or characters.
- the user interface generation module 916 can generate a user interface having bidirectional writing tools.
- Bi-directional writing tools can refer to tools that enable the user 12 to input text in both an LTR writing directionality and an RTL writing directionality. Further, bi-directional writing tools can refer to tools that enable the user 12 to adjust the writing directionality of a portion of text (a sentence, a paragraph, a table, etc.).
- the user interface can be configured to allow the user 12 to adjust the writing directionality at the computing device 10.
- the second user interface can be configured to allow the user 12 to control the writing directionality of text to be input. Additionally or alternatively, the second user interface can be configured to allow the user 12 to switch a selected portion of text from an LTR writing directionality format to an RTL writing directionality format or from an RTL writing directionality format to an LTR writing directionality format. The selected portion can be a sentence, a paragraph, the entire text, or some other suitable portion. Further, the second user interface can be configured to allow the user 12 to switch an order of columns presenting text, e.g., in a table. For example, the second user interface can include one or more commands (toolbars, buttons, etc.) that can be selected by the user 12 to adjust the writing directionality.
- the user interface generation module 916 may generate a command for transmission to the computing device 10 that is configured to cause the computing device 10 to adjust its user interface to allow the user to adjust the writing directionality at the computing device 10.
- the command may cause a web-based application executing in a web browser that is executing at the computing device 10 to adjust its user interface to allow the user to adjust the writing directionality at the computing device 10.
- the server 13 can determine one or more scripts in which the user 12 is capable of inputting text, for example, based on the ULS or the one or more signals indicative of the user's past computing activity as described above.
- the server 13 can determine whether at least one of these one or more scripts is a script having an RTL writing directionality. If at least one of these scripts is a script having an RTL writing directionality, the technique 1000 can proceed to 1012. If none of these one or more scripts is a script having an RTL writing directionality, the technique 1000 can proceed to 1016.
- the server 13 can automatically provide to the computing device 10 associated with the user 12 a user interface being configured to allow the user 12 to adjust the writing directionality at the computing device 10. The technique 1000 can then end or return to 1004 for one or more additional cycles.
- the server 13 can provide to the computing device 10 associated with the user 12 a default user interface, e.g., being configured for LTR writing directionality. Alternatively, the server 13 could do nothing because the default user interface at the computing device 10 is adequate for the user's capabilities, and the technique 1000 could end or return to 1004 for one or more additional cycles.
- the computing device 10 can display a first user interface associated with a script having an LTR writing directionality.
- the computing device 10 can receive a first input from the user 12 via the first user interface.
- the first input can include at least one of (i) content of e- mails sent by the user 12, (ii) social network commentary generated by the user 12, and (iii) search queries generated by the user 12.
- the computing device 10 can determine one or more scripts in which the user 12 is capable of inputting text based on the first input.
- the computing device 10 can automatically determine whether at least one of these one or more scripts is a script having an RTL writing directionality. If at least one of these one or more scripts is a script having an RTL writing directionality, the technique 1 100 can proceed to 1 120. If none of these one or more scripts is a script having an RTL writing directionality, the technique 1 100 can proceed to 1 128.
- the computing device 10 can automatically display a second user interface that is different than the first user interface and is configured to allow the user 12 to adjust a writing directionality of a selected portion of text.
- the computing device 10 can receive a second input from the user 12 via the second user interface. The second input can cause the computing device to adjust the writing directionality of the selected portion of text.
- the technique 1 100 can then end.
- the computing device 10 can continue displaying the first user interface, e.g., a default user interface, to the user 12.
- the technique 1 100 can then end or return to 1 104 for one or more additional cycles.
- Example embodiments are provided so that this disclosure will be thorough, and will fully convey the scope to those who are skilled in the art. Numerous specific details are set forth such as examples of specific components, devices, and methods, to provide a thorough understanding of embodiments of the present disclosure. It will be apparent to those skilled in the art that specific details need not be employed, that example embodiments may be embodied in many different forms and that neither should be construed to limit the scope of the disclosure. In some example embodiments, well-known procedures, well-known device structures, and well-known technologies are not described in detail.
- first, second, third, etc. may be used herein to describe various elements, components, regions, layers and/or sections, these elements, components, regions, layers and/or sections should not be limited by these terms. These terms may be only used to distinguish one element, component, region, layer or section from another region, layer or section. Terms such as “first,” “second,” and other numerical terms when used herein do not imply a sequence or order unless clearly indicated by the context. Thus, a first element, component, region, layer or section discussed below could be termed a second element, component, region, layer or section without departing from the teachings of the example embodiments.
- module may refer to, be part of, or include: an Application Specific Integrated Circuit (ASIC); an electronic circuit; a combinational logic circuit; a field programmable gate array (FPGA); a processor or a distributed network of processors (shared, dedicated, or grouped) and storage in networked clusters or datacenters that executes code or a process; other suitable components that provide the described functionality; or a combination of some or all of the above, such as in a system-on-chip.
- the term module may also include memory (shared, dedicated, or grouped) that stores code executed by the one or more processors.
- code may include software, firmware, byte- code and/or microcode, and may refer to programs, routines, functions, classes, and/or objects.
- shared means that some or all code from multiple modules may be executed using a single (shared) processor. In addition, some or all code from multiple modules may be stored by a single (shared) memory.
- group means that some or all code from a single module may be executed using a group of processors. In addition, some or all code from a single module may be stored using a group of memories.
- the techniques described herein may be implemented by one or more computer programs executed by one or more processors.
- the computer programs include processor-executable instructions that are stored on a non- transitory tangible computer readable medium.
- the computer programs may also include stored data.
- Non-limiting examples of the non-transitory tangible computer readable medium are nonvolatile memory, magnetic storage, and optical storage.
- Certain aspects of the described techniques include process steps and instructions described herein in the form of an algorithm. It should be noted that the described process steps and instructions could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present disclosure also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a tangible computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present disclosure is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
- a network such as the Internet.
- the foregoing description of the embodiments has been provided for purposes of illustration and description. It is not intended to be exhaustive or to limit the disclosure. Individual elements or features of a particular embodiment are generally not limited to that particular embodiment, but, where applicable, are interchangeable and can be used in a selected embodiment, even if not specifically shown or described. The same may also be varied in many ways. Such variations are not to be regarded as a departure from the disclosure, and all such modifications are intended to be included within the scope of the disclosure.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/646,850 US8928591B2 (en) | 2011-06-30 | 2012-10-08 | Techniques for providing a user interface having bi-directional writing tools |
PCT/IB2013/059022 WO2014057389A2 (en) | 2012-10-08 | 2013-09-30 | Techniques for providing a user interface having bi-directional writing tools |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2904489A2 true EP2904489A2 (en) | 2015-08-12 |
EP2904489A4 EP2904489A4 (en) | 2016-06-01 |
Family
ID=50478006
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP13844663.8A Withdrawn EP2904489A4 (en) | 2012-10-08 | 2013-09-30 | Techniques for providing a user interface having bi-directional writing tools |
Country Status (3)
Country | Link |
---|---|
EP (1) | EP2904489A4 (en) |
IL (1) | IL238213B (en) |
WO (1) | WO2014057389A2 (en) |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6469713B2 (en) * | 1998-12-15 | 2002-10-22 | International Business Machines Corporation | Method, system and computer program product for dynamic language switching via messaging |
IL130688A0 (en) * | 1999-02-26 | 2000-06-01 | Ibm | Bidirectional network language support |
IL148271A0 (en) * | 1999-11-29 | 2002-09-12 | Nokia Corp | Display cursor having direction indicator for use with bi-directional symbol input |
US7506255B1 (en) * | 2004-02-17 | 2009-03-17 | Microsoft Corporation | Display of text in a multi-lingual environment |
US8073680B2 (en) * | 2008-06-26 | 2011-12-06 | Microsoft Corporation | Language detection service |
US8386941B2 (en) * | 2008-06-27 | 2013-02-26 | Microsoft Corporation | User interface localization conflict indication |
-
2013
- 2013-09-30 WO PCT/IB2013/059022 patent/WO2014057389A2/en active Application Filing
- 2013-09-30 EP EP13844663.8A patent/EP2904489A4/en not_active Withdrawn
-
2015
- 2015-04-12 IL IL238213A patent/IL238213B/en not_active IP Right Cessation
Also Published As
Publication number | Publication date |
---|---|
IL238213B (en) | 2019-12-31 |
WO2014057389A2 (en) | 2014-04-17 |
EP2904489A4 (en) | 2016-06-01 |
IL238213A0 (en) | 2015-06-30 |
WO2014057389A3 (en) | 2014-05-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8928591B2 (en) | Techniques for providing a user interface having bi-directional writing tools | |
US9104744B2 (en) | Cluster-based language detection | |
US9298698B2 (en) | Language detection based upon a social graph | |
US8838437B1 (en) | Language classifiers for language detection | |
US8788259B1 (en) | Rules-based language detection | |
US20150161114A1 (en) | Rules-based language detection | |
US9971769B2 (en) | Method and system for providing translated result | |
US9477659B2 (en) | Techniques for performing language detection and translation for multi-language content feeds | |
US11061980B2 (en) | System and method for integrating content into webpages | |
KR20170140226A (en) | Information retrieval navigation method and apparatus | |
US10140293B2 (en) | Coordinated user word selection for translation and obtaining of contextual information for the selected word | |
US20160019310A1 (en) | Method and apparatus for rendering statistics on web page visits by a browser | |
US9727654B2 (en) | Suggested keywords | |
EP3022691B1 (en) | Mobile application optimization platform | |
US20170161238A1 (en) | Emojis for redirecting user to desired websites | |
CN111680287B (en) | Application program detection method and device based on user privacy protection | |
JP2018077821A (en) | Method, program, server device, and processor for generating predictive model of category of venue visited by user | |
CN109753275B (en) | Recommendation method and device for application programming interface, storage medium and electronic equipment | |
CN106575418B (en) | Suggested keywords | |
AU2017208356A1 (en) | Continuous learning based semantic matching for textual samples | |
JP2014532942A (en) | Social page trigger | |
US10977333B2 (en) | Link corrections by cognitive analysis of web resources | |
KR101958555B1 (en) | Apparatus and method for providing search result | |
Kirkman et al. | DarkDialogs: Automated detection of 10 dark patterns on cookie dialogs | |
CN110751227A (en) | Data processing method, device, equipment and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150416 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20160504 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 9/44 20060101AFI20160428BHEPIpc: G06F 17/22 20060101ALI20160428BHEP |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: LANIN, VLADIMIROwner name: GOOGLE LLC |
|
17Q | First examination report despatched |
Effective date: 20181024 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN WITHDRAWN |
|
18W | Application withdrawn |
Effective date: 20200925 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
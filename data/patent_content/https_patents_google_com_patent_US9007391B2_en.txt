US9007391B2 - Image color correction for an image by a graphical processing unit looking up color corrections in a lookup table - Google Patents
Image color correction for an image by a graphical processing unit looking up color corrections in a lookup table Download PDFInfo
- Publication number
- US9007391B2 US9007391B2 US13/646,769 US201213646769A US9007391B2 US 9007391 B2 US9007391 B2 US 9007391B2 US 201213646769 A US201213646769 A US 201213646769A US 9007391 B2 US9007391 B2 US 9007391B2
- Authority
- US
- United States
- Prior art keywords
- slices
- slice
- dimensional
- upsampled
- integer number
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H04N9/735—
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G5/00—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators
- G09G5/02—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators characterised by the way in which colour is displayed
- G09G5/026—Control of mixing and/or overlay of colours in general
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N23/00—Cameras or camera modules comprising electronic image sensors; Control thereof
- H04N23/80—Camera processing pipelines; Components thereof
- H04N23/84—Camera processing pipelines; Components thereof for processing colour signals
- H04N23/88—Camera processing pipelines; Components thereof for processing colour signals for colour balance, e.g. white-balance circuits or colour temperature control
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G5/00—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators
- G09G5/02—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators characterised by the way in which colour is displayed
- G09G5/06—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators characterised by the way in which colour is displayed using colour palettes, e.g. look-up tables
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G5/00—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators
- G09G5/36—Control arrangements or circuits for visual indicators common to cathode-ray tube indicators and other visual indicators characterised by the display of a graphic pattern, e.g. using an all-points-addressable [APA] memory
- G09G5/363—Graphics controllers
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G2340/00—Aspects of display data processing
- G09G2340/06—Colour space transformation
Definitions
- a characteristic color is color that is not included in a scene and is an artifact generated by an imaging device.
- Cameras often impart characteristic colors onto the images they produce. For example, a video camera may impart blue tones in the captured video images. Displays that display images may likewise impart characteristic colors onto the displayed images. Further, film (e.g., 35 mm film) often imparts a characteristic color onto images on the film. If characteristic colors are not removed from images before the images are displayed, the colors in the images may be unacceptable to viewers. For example, the blue tones that a video camera may impart onto video images can result in unnatural colors if not corrected.
- Characteristic colors imparted onto images are often corrected by computing devices before the images are displayed, stored, recorded on film, etc.
- a graphical processing unit (GPU) included in the computing device may perform the correction.
- a GPU may include a three-dimensional lookup table (3D LUT) that is used to provide color correction on images.
- a 3D LUT stores “color components” for colors in an image; e.g., a pixel in the image may be characterized by a red color component, a green color component, and a blue color component.
- Each dimension of the 3D LUT corresponds to a color component (e.g., red, green, blue).
- Color components may be represented by “color coordinates”, which are numeric values of the color components. For example, the red color component of a pixel in an image may have a value (i.e., coordinate) of 55, the green color component of the pixel may have a value of 135, and the blue color component may have a value of 39.
- the 3D LUT may be used to provide a mapping of the input colors in an input image to output colors of an output image.
- the (input) color coordinates of the (input) color component of each pixel in the input image are used to index respective dimensions of the 3D LUT to access corresponding (output) color coordinates of the (output) color component of a corresponding pixel in the output image. If the 3D LUT is properly configured, then a characteristic color that is imparted in the input image can be eliminated from the resulting output image.
- Imaging devices such as cameras, video displays, and so on, exhibit different color characteristics. Imaging devices that capture images may impart their specific color characteristics on the captured images, so that the colors of the imaged subject are not accurately captured. Imaging devices that display images may impart their specific color characteristics on the displayed image, so that the colors in the image being displayed are not accurately presented.
- the color characteristics imparted by a given imaging device can be characterized and well understood. Accordingly, a 3D LUT can be configured specifically for the given imaging device to provide a mapping that removes the color characteristic from an input image, whether the input image is a captured image or a displayed image.
- a GPU using a 3D LUT may add color effects to images.
- specific 3D LUTs are designed so that a given color (e.g., red) in an image can be switched with another color (e.g., yellow), or so that colors in the image can be inverted to provide a negative of the image, etc.
- GPUs for desktop computers, laptop computers, etc. are typically capable of storing 3D LUTs and performing color correction using the 3D LUTs.
- GPUs for mobile devices are often not capable of storing 3D LUTs and are often not specifically designed for performing color correction. Consequently, color rendering of images in video games, videos, and the like performed on mobile devices may not produce acceptable colors.
- FIG. 1 depicts a computing system according to one embodiment.
- FIG. 2 depicts a three-dimensional color lookup table (3D LUT) according to one embodiment.
- FIG. 3 depicts a mip map according to one embodiment.
- FIG. 4 depicts a lookup table generator according to one embodiment.
- FIG. 5 illustrates color correction according to one embodiment.
- FIG. 6 depicts a high-level flow diagram for generating the mip map from the 3D LUT according to one embodiment.
- FIG. 7 depicts a high-level flow diagram for changing colors of pixels of an input image according to one embodiment.
- Described herein are techniques for generating a lookup table (LUT) for use by a graphics processing unit for performing color correction to pixels of an image.
- LUT lookup table
- a method for providing a lookup table (LUT) for changing color components of pixels of an image includes generating N two-dimensional slices from a three-dimensional LUT.
- the N two-dimensional slices are arranged in order from a first two-dimensional slice to an N th two-dimensional slice.
- the method includes generating N upsampled slices corresponding to the N two-dimensional slices.
- the N upsampled slices are arranged in order from a first upsampled slice to an N th upsampled slice.
- the method includes forming a first group of slices that includes the N upsampled slices, and forming a second group of slices that includes a second two-dimensional slice of the N two-dimensional slices through the N th two-dimensional slice and a copy of the N th two-dimensional slice.
- the method includes storing the first group of slices and the second group of slices, respectively, in a zero level of a mip map and a first level of the mip map.
- a method for changing color components of pixels of an image includes receiving input color coordinates for input color components of the pixels, wherein the input color coordinates are for a first color component, a second color component, and a third color component, and performing color coordinate lookups for the input color coordinates in a lookup table that is included in a GPU.
- the lookup table includes a first group of slices, which includes upsampled slices arranged in order from a first upsampled slice to an N th upsampled slice.
- the N upsampled slices correspond to N two-dimensional slices generated from a three-dimensional LUT.
- the N two-dimensional slices are arranged in order from a first two-dimensional slice to an N th two-dimensional slice.
- a second group of slices includes a second two-dimensional slice of the N two-dimensional slices through the N th two-dimensional slice, and a copy of the N th two-dimensional slice.
- the method further includes outputting, from the GPU changed color components for the pixels based on the input color coordinate lookups in the lookup table.
- a non-transitory computer-readable storage medium includes instructions for providing a lookup table (LUT) for changing color components of pixels of an image.
- the instructions when executed, are for controlling a computing device to be configured for: generating N two-dimensional slices from a three-dimensional LUT, wherein the N two-dimensional slices are arranged in order from a first two-dimensional slice to an N th two-dimensional slice; generating N upsampled slices corresponding to the N two-dimensional slices, wherein the N upsampled slices are arranged in order from a first upsampled slice to an N th upsampled slice; forming a first group of slices comprising the N upsampled slices; forming a second group of slices comprising a second two-dimensional slice of the N two-dimensional slices through the N th two-dimensional slice and a copy of the N th two-dimensional slice; and storing the first group of slices and the second group of slices, respectively, in a zero level of a mip map and a first level
- a non-transitory computer-readable storage medium includes instructions for changing color components of pixels of an image.
- the instructions are for controlling a computing device to be configured for: receiving, via a computing device, input color coordinates for input color components of the pixels, wherein the input color coordinates are for a first color component, a second color component, and a third color component; performing, via a graphical processing unit (GPU) of the computing device, color coordinate lookups for the input color coordinates in a lookup table that is included in the GPU, wherein the lookup table includes: i) a first group of slices comprising upsampled slices arranged in order from a first upsampled slice to an N th upsampled slice, wherein the N upsampled slices correspond to N two-dimensional slices generated from a three-dimensional LUT, and the N two-dimensional slices are arranged in order from a first two-dimensional slice to an N th two-dimensional slice, and ii) a second group of slices comprising a second two--
- FIG. 1 depicts a computing system 100 according to one embodiment.
- Computing system 100 includes a server 105 , a computing device 110 , a storage device 115 , and a network 120 .
- Server 105 may be a computing device configured to operate a server operating system.
- Server 105 includes a processor 125 and a storage device 130 .
- Storage device 130 may store software 135 , which may be supplied from storage device 130 to processor 125 for execution.
- Computing device 110 includes a processor 140 , a graphical processing unit (GPU) 145 , a storage device 150 , and a display 155 .
- Storage device 150 may store software 160 , which may be supplied from storage device 150 to processor 140 and GPU 145 for execution.
- GPU graphical processing unit
- Storage 115 may similarly store software 165 , which may be supplied from storage device 115 to one or both of server 105 and computing device 110 for execution.
- Storage devices 115 , 130 , and 150 may be non-transitory computer readable storage mediums.
- Computing device 110 may include a variety of devices, such as mobile devices (e.g., a personal digital assistant (PDA), a smartphone, etc.), a desktop computer, a laptop computer, a tablet computer, etc.
- Network 120 may include one or more communication networks, such as one or more intranets, the Internet, etc.
- storage device 115 stores one or more input images 170 , such as video images, that are supplied to computing device 110 for display.
- computing device 110 is configured to generate input images 170 .
- the input images 170 may be images for a video game while the video game is being executed on computing device 110 .
- Input images 170 may also be stored in storage device 150 .
- GPU 145 includes a mip map 180 that includes color correction information for changing the colors in input images 170 to generate output images 175 having colors that are different from those of input images 170 .
- Mip map 180 may be used by GPU 145 to perform color correction on input images 170 , to add color effects to input images 170 , or to otherwise manipulate the colors in input images 170 .
- characteristic colors may be imparted onto input images 170 by various devices and/or software that generate and/or process input images 170 .
- GPU 145 may use mip map 180 to remove the characteristic colors imparted onto input images 170 before the input images are displayed or stored for later display.
- Display 155 itself may impart characteristic colors which manifest themselves in the output images 175 rather than being imparted on input images 170 .
- GPU 145 may use mip map 180 to compensate for the characteristic color artifacts of display 155 itself so that input images 170 can be faithfully displayed. Techniques for generating mip map 180 are described in further detail below.
- GPU 145 may use mip map 180 to deliberately change the colors of input images 170 to achieve a desired effect, rather than to correct for characteristic colors imparted onto input images 170 .
- the colors for images produced in the video game may be changed from full spectrum color to dichromatic or monochromatic color to indicate a change in a game parameter.
- 3D LUT 200 includes color correction information used for changing the colors of input images 170 . More specifically, 3D LUT 200 is a 3D lattice of output color coordinates that represent output color components. The input color coordinates for input color components of input image 170 are mapped by 3D LUT 200 to the output color coordinates for the output color components of an output image 175 . This mapping may be performed on a per pixel basis or on groups of pixels. The input color coordinates (say, for a pixel of input image 170 ) define a point inside the lattice of 3D LUT 200 .
- Each point is represented by a triple (3-tuple) that comprises the output color coordinates that correspond to the input color coordinates.
- 3D LUT 200 serves as a lookup table that a GPU may use to change the input color components of input image 170 to produce output image 175 having different output color components.
- Each axis of 3D LUT 200 represents one of three input color coordinates for first, second and third colors (e.g., red, green, and blue).
- the three axes of 3D LUT 200 are labeled 200 a , 200 b , and 200 c , where axis 200 a is the red axis, axis 200 b is the green axis, and axis 200 c is the blue axis.
- axes 200 a , 200 b , and 200 c in FIG. 2 are associated with the colors red, green, and blue, respectively, it will be appreciated that the axes may be associated with other colors. In some embodiments, two axes may represent the same color. In some embodiments, one or more axes may not be assigned to any color.
- 3D LUT 200 is depicted in FIG. 2 as a 4 ⁇ 4 ⁇ 4 lattice, and may be characterized as having a LUT size of 4.
- LUT size refers to the number of color increments along each dimension of the 3D LUT. In other embodiments, the 3D LUT 200 may have different LUT sizes.
- computing device 110 includes a lookup table generator 185 that generates mip map 180 from 3D LUT 200 .
- Lookup table generator 185 may be a hardware module, a software module, or a combination thereof.
- Lookup table generator 185 forms slices 310 from 3D LUT 200 along one plane of 3D LUT 200 .
- FIG. 2 shows four slices 310 a , 310 b , 310 c , and 310 d formed along the red-greed plane according to an example embodiment.
- the slices 310 a , 310 b , 310 c , and 310 d are sometimes referred to herein as the first, the second, the third, and the last slices, respectively. While slices 310 are shown in FIG.
- the slices 310 may be formed along the red-blue plane or green-blue plane.
- Slices 310 have an order, from the first slice 310 a to the last slice 310 d based on the position of each slice among the slices 310 in 3D LUT 200 .
- Last slice may be referred to as the N th slice among N ordered slices 310 .
- lookup table generator 185 forms four slices 310 a - 310 d from 3D LUT 200 .
- lookup table generator 185 may form more slices 310 from 3D LUTs having LUT sizes greater than 4, such as a LUT size of 8 to form 8 slices from an 8 ⁇ 8 ⁇ 8 lattice, a LUT size of 16 to form 16 slices from a 16 ⁇ 16 ⁇ 16 lattice, and so on.
- FIG. 3 depicts mip map 180 according to one embodiment.
- Mip map 180 includes a zero level 300 and a first level 305 .
- First level 305 is composed of slices 310 ′ which comprise some of the slices 310 from 3D LUT 200 .
- slices 310 ′ in first level 305 includes second slice 310 b , third slice 310 c , the last slice 310 d (the Nth slice), and a copy of last slice 310 d .
- the slices 310 ′ in first level 305 may be arranged from second slice 310 b at a first end (e.g., right end) of first level 305 through last slice 310 d at a second end (e.g., left end) of first level 305 , where the copy of last slice 310 d is repeated at the second end.
- lookup table generator 185 generates upsampled slices 315 respectively from slices 310 . That is, upsampled slices 315 respectively correspond to slices 310 in a one-to-one manner. Thus, for example, upsampled slice 315 a is generated from slice 310 a , upsampled slice 315 b is generated from slice 310 b , upsampled slice 315 c is generated from slice 310 c , and upsampled slice 315 d is generated from slice 310 d . Upsampled slices 310 a - 310 d are sometimes referred to herein as the first, the second, the third, and the last upsampled slices, respectively.
- Upsampled slices 315 are ordered in zero level 300 from first upsampled slice 315 a through last upsampled slice 315 d (N th slice 315 d ).
- the second upsampled slice 315 b through the last upsampled slice 315 d are in the same order in zero level 300 as second slice 310 b through last slice 310 d in first level 305 .
- Each slice 310 a through 310 d has an output color coordinate (e.g., blue output color coordinate) for the output color component (e.g., blue) represented by the axis of 3D LUT 200 (e.g., blue axis) along which slices 310 a through 310 d are formed.
- the values of the output color coordinates may increase from first slice 310 a to last slice 310 d .
- first slice 310 a may have a zero output color coordinate of 0.0 for blue
- second slice 310 b may have an output color coordinate of 0.33 for blue
- third slice 310 c may have an output color coordinate of 0.66 for blue
- last slice 310 d may have an output color coordinate of 1.0 for blue.
- output color coordinates from 0.0 to 1.0 are referred to as a “full” scale of output color coordinates, which represents a full scale of output color components for an output color.
- each upsampled slice 315 a through 315 d has an output color coordinate (e.g., blue output color coordinate) for the output color component (e.g., blue) represented by the axis (e.g., blue axis) along which slices 310 a through 310 d are formed. That is, the output color coordinate (e.g., blue output color coordinate) may increase from upsampled slice 315 a to upsampled slice 315 d .
- the output color coordinate e.g., blue output color coordinate
- upsampled slice 315 a may have an output color coordinate of 0.0 for blue
- upsampled slice 315 b may have an output color coordinate of 0.33 for blue
- upsampled slice 315 c may have an output color coordinate of 0.66 for blue
- upsampled slice 310 d may have an output color coordinate of 1.0 for blue.
- the relative increase in output color coordinates between slices 310 is the same as it is for slices 315 .
- slices 310 ′ comprising first level 305 may be viewed as being shifted (e.g., shifted right or shifted left) by one slice relative to corresponding upsampled slices 315 in zero level 300 .
- slices 310 ′ of first level 305 that correspond to upsampled slices 315 , 315 b , 315 c , and 315 d of zero level 300 ) would be slices 310 a , 310 b , 310 c , and 310 d .
- right shifting as illustrated in FIG.
- slices 310 ′ of first level 305 are slices 310 b , 310 c , 310 d , and 310 d (slice 310 d is duplicated).
- the shifted position of slices 310 ′ relative to upsampled slices 315 , and the repeating of last slice 310 d in first level 305 allows GPU 145 to use first level 305 and zero level 300 to perform color correction of input images 170 with a single lookup operation in first level 305 and zero level 300 .
- a single lookup operation performed by GPU 145 can reduce the total number of processing steps performed by GPU 145 when performing color correction on input image 170 .
- Lookup table generator 185 includes a 3D LUT slicer 400 that receives 3D LUT 200 and forms slices 310 from 3D LUT 200 .
- 3D LUT slicer 400 transfers slices 310 to a level generator 405 , which forms first level 305 from slices 310 ; e.g., performing shifting and duplicating to produce slices 310 ′.
- 3D LUT slicer 400 also transfers slices 310 to a resampling module 410 which upsamples slices 310 to form upsampled slices 315 .
- Resampling module 410 transfers upsampled slices 315 to level generator 405 , which forms zero level 300 from upsampled slices 315 .
- each slice 310 ′ includes pixels 325 and each upsampled slice 315 includes pixels 345 .
- Pixels 325 are arranged in rows 330 and columns 340 in each slice 310 ′.
- Each pixel 325 represents an output color coordinate for the first output color component (e.g., for red) and an output color coordinate for the second output color component (e.g., for green); blue is determined by the slice (e.g., 310 b ) that the pixel 325 is in.
- output color coordinates for the first output color component increase from left to right along each row 330 ; for example, in the direction from pixel 325 a to 325 d .
- Output color coordinates for the first output color component are constant along columns 340 .
- Output color coordinates for the second output color component increase along columns 340 , in the direction from row 330 a to row 330 d , and are constant along rows 330 .
- Pixels 345 are arranged in rows 350 and columns 365 in each slice 310 .
- Each pixel 345 represents an output color coordinate for the first output color component (e.g., for red) and represents an output color coordinate for the second output color component (e.g., for green).
- the output color coordinate for the first output color component increase from left to right along each row 350 ; for example, in the direction from pixel 345 a to 345 h .
- Output color coordinates for the first output color component are constant along columns 365 .
- Output color coordinates for the second output color component increase along columns 365 , in the direction from row 350 a to row 350 d , and are constant along the rows 350 .
- level generator 405 adjusts (e.g., raises or lowers) the output color coordinates of pixels 345 so that color aliasing generated by GPU 145 during color correction or color changing of input images 170 is reduced in output images 175 .
- Embodiments for adjusting the output color coordinates of pixels 345 are presently described with respect to FIG. 5 .
- FIG. 5 is a high-level diagram of a method for adjusting the output color coordinates of pixels 345 to reduce color aliasing according to an embodiment.
- FIG. 5 depicts four pixels 325 a - 325 d (collectively 325 ) from first level 305 and eight pixels 345 a - 345 h (collectively 345 ) from zero level 300 .
- FIG. 5 also depicts a graph 550 that represents the output color coordinates from the four pixels 325 and the eight pixels 345 .
- FIG. 5 shows the four pixels 325 superimposed on the eight pixels 345 .
- the four pixels 325 are outlined in solid lines and the eight pixels 345 are outlined by dashed lines.
- the four pixels 325 and the eight pixels 345 are from corresponding rows of pixels in respective slices 310 ′ and upsampled slices 315 .
- the four pixels 325 may be from the top row 330 a in slice 310 b
- the eight pixels 345 may be from corresponding row 350 a in upsampled slice 315 a (see FIG. 3 ).
- Each of the four pixels 325 represents an output color coordinate (e.g., R, sometimes referred to as Rout for clarity) for the first output color component
- each of the eight pixels 345 includes an output color coordinate (e.g., Rout) for the first output color component.
- the dots in the centers of the four pixels 325 represent the output color coordinates for the four pixels 325 .
- the x's in the centers of the eight pixels 345 represent the output color coordinates for the eight pixels 345 .
- graph 550 represents a mapping between the input color coordinates (e.g., R, sometimes referred to as Rin for clarity) for the first input color component, and the output color coordinates for the first output color coordinate, where the mapping is represented by the four pixels 325 and the eight pixels 345 .
- the input color coordinates represented by graph 550 are described below.
- the output color coordinates are represented by the vertical axis of graph 550 .
- the dots in graph 550 represent the output color coordinates from the four pixels 325 .
- the dots (i.e., the output color coordinates) in graph 550 respectively correspond to the dots (i.e., the output color coordinates) in the four pixels 325 in a one-to-one correspondence.
- each dot in graph 550 lies directly below (or is vertically aligned with) a corresponding dot in the four pixels 325 .
- each pair of vertically aligned dots in graph 550 and the four pixels 325 represents the same output color coordinates.
- the dot in pixel 325 a and the dot in graph 550 that is directly below the dot in pixel 325 a may represent the output color coordinate for Rout of 0.0.
- the dot in pixel 325 b and the dot in graph 550 that is directly below the dot in pixel 325 b may represent the output color coordinate for Rout of 0.33. Further, the dot in pixel 325 c and the dot in graph 550 that is directly below the dot in pixel 325 c may represent the output color coordinate for Rout of 0.66. Further, the dot in pixel 325 d and the dot in graph 550 that is directly below the dot in pixel 325 d may represent the output color coordinate for Rout of 1.0.
- the x's in graph 550 represents the output color coordinates from the eight pixels 345 .
- the x's (i.e., the output color coordinates) in graph 550 respectively correspond to the x's (i.e., the output color coordinates) in the eight pixels 345 in a one-to-one correspondence.
- each x in graph 550 lies directly below (or is vertically aligned with) a corresponding x in the eight pixels 345 .
- each pair of vertically aligned x's in graph 550 and the eight pixels 345 represents the same output color coordinate.
- the horizontal axis of graph 550 is briefly described here, and in more detail below.
- the horizontal axis of graph 550 represents the input color coordinate Rin for the first input color components for pixels of input image 170 .
- the input color coordinate Rin is represented by a scaled input color coordinate Sin in FIG. 5 . That is, Sin is a scaled from the input color coordinate Rin for the pixels of input image 170 .
- Embodiments for scaling the input color coordinate Rin are described below.
- the scaled input color coordinate Sin is referred to in the following description which further describes the embodiments for adjusting the output color coordinates of pixels 345 .
- two output color coordinates of first two pixels 345 a and 345 b are set so that the two output color coordinates interpolate to the output color coordinate of first pixel 325 a (left most pixel in each row 330 ) for an Sin for the center of pixel 325 a .
- two output color coordinates for last two pixels 345 g and 345 h are set so that the two output color coordinates interpolate to an output color coordinate of last pixel 325 d (left most pixel in each row 330 ) for an Sin for the center of pixel 325 d .
- lookup table generator 185 sets the output color coordinates of first two pixels 345 a and 345 b in each row 350 and last two pixels 345 g and 345 h is each row 350 as described above. Setting the output color coordinates of first two pixels 345 a and 345 b in each row 350 to interpolate to the output color coordinate of first pixel 325 a in each row 330 for an Sin for the center of pixel 325 a , reduces the color aliasing generated by GPU 145 for input color coordinate lookups at the first two pixels 345 a and 345 b in each row 350 and at first pixel 325 a in each row 330 .
- the x's for pixels 345 a and 345 b are shown with a straight line that connects the x's.
- the straight line represents the interpolation of the output color coordinates for the x's for pixels 345 a and 345 b for an Sin for the center of pixel 325 a .
- the dot for pixel 325 a as shown in graph 550 lies on the straight line.
- the dot for pixel 325 a as shown in graph 550 lying on the straight line represents that the two output color coordinates of the first two pixels 345 a and 345 b are set to interpolate to the output color coordinates of pixel 325 a for an Sin for the center of pixel 325 a .
- the displacement would represent a difference between the output color coordinates from input color coordinate lookups in: i) the interpolated output color coordinate from pixels 345 a and 345 b and ii) the output color coordinate for pixel 325 a .
- Such a displacement may result in color aliasing generated by GPU 145 .
- the x's for pixels 345 g and 345 h are shown with a straight line that connects the x's.
- the straight line represents the interpolation of the output color coordinates for the x's for an Sin for the center of pixel 325 d .
- the dot for pixel 325 d as shown in graph 550 lies on the straight line.
- the dot for pixel 325 d lying on the straight line represents that two output color coordinates of the last two pixels 345 g and 345 g are set so that the two output color coordinates interpolate to the output color coordinate of last pixel 325 d for an Sin for the center of pixel 325 d.
- the above description describes adjustments to the output color coordinates of pixels 345 a , 345 b , 345 g , and 345 h in row 350 a for each upsampled slice 315 a - 315 d .
- the adjustment described above is copied to each of the remaining rows 350 b - 350 d for each upsampled slice 315 a - 315 d .
- lookup table generator 185 applies a smoothing filter 190 (see FIG. 4 ) to adjust the output color coordinates of pixels 345 a , 345 b , 345 g , and 345 h as described above. Smoothing filer 190 is sometimes referred to as a smoothing function.
- lookup table generator 185 applies smoothing filter 190 to the output color coordinates of pixels 345 c through 345 f in each row 350 of each upsampled slice 315 to adjust the output color coordinates of pixels 345 c through 345 f . More specifically, lookup table generator 185 applies smoothing filter 190 to the output color coordinates of pixels 345 c through 345 f in each row 350 to reduce differences between: i) output color coordinates from input color coordinate lookups from pixels 345 c through 345 f and ii) output color coordinates from input color coordinate lookups from pixels 340 b and 340 c . Adjusting the output color coordinates of pixels 345 c to 345 f may further reduce color aliasing generated by GPU 145 .
- Graph 550 shows an example output color coordinate difference 555 for output color coordinate 560 for Rout from zero level 300 and output color coordinate 565 for Rout from first level 305 .
- Output color coordinate difference 555 is represented in graph 550 by the vertical separation between: i) the line between the x's that represent output color coordinates 570 and 575 and ii) the dot that represents output color coordinate 565 .
- Output color coordinate 560 is interpolated from output color coordinates 570 and 575 for Rout from pixels 345 c and 345 d , respectively.
- Output color coordinate difference 580 depicts another example output color coordinate difference 580 between output color coordinates 582 for Rout from zero level 300 and output color coordinates 585 for Rout from first level 305 .
- Output color coordinate difference 580 is represented in graph 550 by the vertical separation between: i) the line between the x's that represent output color coordinates 590 and 595 and ii) the dot that represents output color coordinate 585 .
- Output color coordinate 582 is interpolated from output colors coordinates 590 and 595 for Rout from pixels 345 e and 345 f , respectively.
- Output color coordinate differences 555 and 580 are specific examples of output color coordinate differences between zero level 300 and first level 305 . Output color coordinate differences between zero level 300 and first level 305 are generally more extensive.
- Regions 597 a , 597 b , and 597 c indicate more extensively where differences may exist between output color coordinates from zero level 300 and first level 305 .
- the example output color coordinate differences 555 and 580 are substantially in the middle of regions 597 a and 597 c , respectively.
- lookup table generator 185 lowers the output color coordinates for pixels 345 c and 345 d and raises the output color coordinates for pixels 345 e and 345 f to decrease output color coordinate differences in regions 597 a , 597 b , and 597 c .
- An amount that the output color coordinates for pixels 345 c and 345 d are lowered, and an amount that the output color coordinates for pixels 345 e and 345 f are raised, may be interdependent based on smoothing filter 190 .
- the above description describes adjustments to the output color coordinates of pixels 345 c , 345 d , 345 e , and 345 f in row 350 a for each upsampled slice 315 a - 315 d .
- the adjustment described above is copied to each of the remaining rows 350 b - 350 d for each upsampled slice 315 a - 315 d .
- the example embodiment is described as lowering the output color coordinates for pixels 345 c and 345 d and raising the output color coordinates for pixels 345 e and 345 f
- the output color coordinates for 345 c through 345 f may be raised and/or lowered in other combination to reduce color aliasing generated by GPU 145 .
- the above description describes raising and lowering (i.e., adjusting) the output color coordinates for Rout for pixels 345 c , 345 d , 345 e , and 345 g .
- the adjustment described above is applied to raising and/or lowering (i.e., adjusting) the output color coordinates for Gout for pixels 345 c , 345 d , 345 e , and 345 g.
- FIG. 4 depicts zero level 300 and first level 305 being transferred to GPU 145 , where GPU 145 uses mip map 180 to perform input color coordinate lookups in mip map 180 for pixels of input images 170 . Based on the input color coordinate lookups in mip map 180 , GPU 145 is configured to provide output color coordinates for output color components for output images 175 .
- the input color coordinates of the pixels of input images 170 are scaled.
- the input color coordinates from Rin which may have a range from 0 to 255
- Sin which may have a range smaller than 0 to 255.
- the input color coordinates from Gin which may have a range from 0 to 255
- Tin represents the scaled input color coordinate for the input color coordinate for Gin.
- Scaling for the input color coordinate for Bin (blue in) is described separately below. It is briefly noted that the scaled input color coordinate for Bin is referred to herein as LOD.
- computing device 110 includes a scaling module 390 that scales the input color coordinates Rin and Gin to generate the scaled input color coordinates Sin and Tin, respectively. While the input color coordinates are described above as being for input color components for R,G,B, according to other embodiments, the input color coordinates may be for input color components for C,M,Y (cyan, magenta, yellow), H,S,L (hue, saturation, lightness), H,S,V (hue, saturation, and value), or the like. The following description describes a method for scaling the input color coordinates for input color components for R,G,B according to one embodiment. However, according to other embodiments, the described scaling may be applied to other input color coordinates for other input color components, such as C,M,Y; H,S,L; H,S,V; etc.
- the size of a LUT (or LUT size) is described above in detail.
- Sin, Tin, LOD are generated for each input color coordinate for each pixel of input images 170 by scaling module 390 .
- scaling module 390 transfers (see FIG. 4 ) the scaled input color coordinates Sin, Tin, LOD to GPU 145 for color correction by GPU 145 using mip map 180 .
- graph 550 represents the output color coordinates for Rout generated by GPU 145 for level zero 300 and first level 305 .
- GPU 145 may clamp (i.e., hold constant) the output color coordinates for Rout for two ranges of scaled input color coordinates Sin.
- GPU 145 may clamp the output color coordinates for Rout for Sin that is in a range 610 .
- GPU 145 may also clamp the output color coordinates for Rout for Sin that is in a range 620 .
- Graph 550 shows the output color coordinates for Rout clamped to 0.05, for example, for Sin that is in range 610 , and shows the output color coordinates for Rout clamped to 0.95, for example, for Sin that is in range 620 . It will be understood that graph 550 represents an example embodiment, and that the specific output color coordinates for Rout that are clamped to 0.05 and 0.95 and are not limiting on the claims.
- range 610 corresponds to Sin extending from 0.0 to up a value at the middle of pixel 325 a and range 620 corresponds to Sin extending from a value at the middle of the last half of pixel 325 h to 1.0.
- the range of Sin does not include the ranges 610 and 620 , but includes a range 630 that is between rages 610 and 620 . That is, the range of Sin extends from the middle of pixel 325 a to the middle of pixel 325 h .
- the scaling: Sin scale factor in Sin*Rin+half pixel width+slice offset, described above, scales Sin to the range 630 .
- Tin is scaled from the input color coordinate Gin for the second input color component (e.g., green), so that the output color coordinate for Gout is not clamped by GPU 145 for various ranges of Tin.
- the scaling: Tin scale factor in Tin*Gin+half pixel height, described above, scales Tin so that the output color coordinate for Gout is not clamped by GPU 145 for various ranges of Tin.
- FIG. 6 depicts a high-level flow diagram of a method 650 for generating mip map 180 from 3D LUT 200 according to one embodiment.
- the high-level flow diagram represents an example embodiment and those of skill in the art will understand that various steps of the high-level flow diagram may be combined and/or added without deviating from the scope and the purview of the embodiment.
- N slices 310 are formed from 3D LUT 200 .
- N is the LUT size of 3D LUT 200 .
- 3D LUT slicer 400 forms slices 310 .
- N slices 310 are arranged in order from first slice 310 a to last slice 310 d (Nth slice).
- N upsampled slices 315 are generated by upsampling slices 310 .
- Resampling module 410 upsamples N slices 310 to generate upsampled slices 315 .
- N upsampled slices 315 are arranged in order from first upsampled slice 315 a to last upsampled slice 315 d (Nth upsampled slice).
- zero level 300 (sometimes referred to as a first group of slices) is formed from N upsampled slices 315 .
- Zero level 300 is formed by level generator 405 .
- first level 305 (sometimes referred to as a second group of slices) is formed from N slices 310 .
- First level 305 is formed by level generator 405 .
- First level includes second slice 310 b through last slice 310 d , with last slice 310 d copied.
- Zero level 300 and first level 305 form the levels of mip map 180 .
- mip map 180 is stored in a storage, such as storage devices 115 , 130 , or 150 . Thereafter, mip map 180 is provided to GPU 145 .
- FIG. 7 depicts a high-level flow diagram of a method 700 for changing colors of pixels of input image 170 according to one embodiment.
- the high-level flow diagram represents an example embodiment and those of skill in the art will understand that various steps of the high-level flow diagram may be combined and/or added without deviating from the scope and the purview of the embodiment.
- GPU 145 receives input color coordinates for input colors of pixels included in input image 170 .
- the input color coordinates may be Rin, Gin, Bin color coordinates, Sin, Tin, LOD color coordinates, or the like.
- GPU 145 performs color coordinate lookups in mip map 180 for the input color coordinates received at 705 .
- GPU 145 outputs output color coordinates for changed colors for the pixels of input image 170 based on the color coordinate lookups at 710 .
Abstract
Description
Sin=scale factor in Sin*Rin+half pixel width+slice offset, and
Tin=scale factor in Tin*Gin+half pixel height,
where
scale factor in Sin=(LUT size−1)*pixel width;
scale facto in Tin=(LUT size−1)*pixel height;
pixel width=1.0/(LUT size*LUT size);
pixel height=1.0/LUT size;
half pixel width=pixel width/2.0; and
half pixel height=pixel height/2.0.
The size of a LUT (or LUT size) is described above in detail.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/646,769 US9007391B2 (en) | 2012-10-08 | 2012-10-08 | Image color correction for an image by a graphical processing unit looking up color corrections in a lookup table |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/646,769 US9007391B2 (en) | 2012-10-08 | 2012-10-08 | Image color correction for an image by a graphical processing unit looking up color corrections in a lookup table |
Publications (2)
Publication Number | Publication Date |
---|---|
US20140098120A1 US20140098120A1 (en) | 2014-04-10 |
US9007391B2 true US9007391B2 (en) | 2015-04-14 |
Family
ID=50432343
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/646,769 Active 2033-04-28 US9007391B2 (en) | 2012-10-08 | 2012-10-08 | Image color correction for an image by a graphical processing unit looking up color corrections in a lookup table |
Country Status (1)
Country | Link |
---|---|
US (1) | US9007391B2 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10591969B2 (en) | 2013-10-25 | 2020-03-17 | Google Technology Holdings LLC | Sensor-based near-field communication authentication |
US20220301518A1 (en) * | 2021-03-19 | 2022-09-22 | Google Llc | Three sub-color correction based on two-dimensional graphs |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
TWI490834B (en) * | 2013-01-28 | 2015-07-01 | E Ink Holdings Inc | Display device and display method |
AU2015346507A1 (en) * | 2014-11-10 | 2017-06-29 | Irisvision, Inc. | Methods and apparatus for vision enhancement |
US11372479B2 (en) | 2014-11-10 | 2022-06-28 | Irisvision, Inc. | Multi-modal vision enhancement system |
US11144119B2 (en) * | 2015-05-01 | 2021-10-12 | Irisvision, Inc. | Methods and systems for generating a magnification region in output video images |
US11546527B2 (en) | 2018-07-05 | 2023-01-03 | Irisvision, Inc. | Methods and apparatuses for compensating for retinitis pigmentosa |
CN106325786A (en) * | 2015-06-17 | 2017-01-11 | 阿里巴巴集团控股有限公司 | A color selection method and apparatus |
WO2019160962A1 (en) | 2018-02-13 | 2019-08-22 | Frank Werblin | Methods and apparatus for contrast sensitivity compensation |
CN115063551B (en) * | 2022-08-18 | 2022-11-22 | 北京山维科技股份有限公司 | Method and device for generating slice orthoimage based on oblique photography three-dimensional model |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080101467A1 (en) * | 2006-10-27 | 2008-05-01 | Radiospire Networks, Inc. | Method and system for secure and efficient wireless transmission of HDCP-encrypted HDMI/DVI signals |
US20100188415A1 (en) * | 2006-04-21 | 2010-07-29 | Apple Inc. | Workflows for Color Correcting Images |
US20110316851A1 (en) * | 2006-04-21 | 2011-12-29 | Apple Inc., a Delaware corporation | 3d histogram for color images |
US20120070082A1 (en) * | 2010-09-20 | 2012-03-22 | Canon Kabushiki Kaisha | Color correction for digital images |
US20120309302A1 (en) | 2009-02-23 | 2012-12-06 | Motorola Mobility, Inc. | Wireless Communication Device for Providing at Least One Near Field Communication Service |
US20130322753A1 (en) * | 2012-05-31 | 2013-12-05 | Apple Inc. | Systems and methods for local tone mapping |
-
2012
- 2012-10-08 US US13/646,769 patent/US9007391B2/en active Active
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100188415A1 (en) * | 2006-04-21 | 2010-07-29 | Apple Inc. | Workflows for Color Correcting Images |
US20110316851A1 (en) * | 2006-04-21 | 2011-12-29 | Apple Inc., a Delaware corporation | 3d histogram for color images |
US20080101467A1 (en) * | 2006-10-27 | 2008-05-01 | Radiospire Networks, Inc. | Method and system for secure and efficient wireless transmission of HDCP-encrypted HDMI/DVI signals |
US20120309302A1 (en) | 2009-02-23 | 2012-12-06 | Motorola Mobility, Inc. | Wireless Communication Device for Providing at Least One Near Field Communication Service |
US20120070082A1 (en) * | 2010-09-20 | 2012-03-22 | Canon Kabushiki Kaisha | Color correction for digital images |
US20130322753A1 (en) * | 2012-05-31 | 2013-12-05 | Apple Inc. | Systems and methods for local tone mapping |
Non-Patent Citations (2)
Title |
---|
Google, "Sessions, WebGL Techniques and Performance", Sep. 13, 2012, 2 pages, http://www.google.com/events/io/2011/sessions/webgl-techniques-and-performance.html. |
Gregg Tavares, "WebGL Techniques and Performance", Google,May 10-11, 2011, 7 pages, Mountain View, California, USA. |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10591969B2 (en) | 2013-10-25 | 2020-03-17 | Google Technology Holdings LLC | Sensor-based near-field communication authentication |
US11429174B2 (en) | 2013-10-25 | 2022-08-30 | Google Llc | Sensor-based near-field communication authentication |
US20220301518A1 (en) * | 2021-03-19 | 2022-09-22 | Google Llc | Three sub-color correction based on two-dimensional graphs |
US11640811B2 (en) * | 2021-03-19 | 2023-05-02 | Google Llc | Three sub-color correction based on two-dimensional graphs |
Also Published As
Publication number | Publication date |
---|---|
US20140098120A1 (en) | 2014-04-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9007391B2 (en) | Image color correction for an image by a graphical processing unit looking up color corrections in a lookup table | |
Saravanan | Color image to grayscale image conversion | |
JP5909405B2 (en) | Semiconductor device | |
JP5806269B2 (en) | Method and apparatus for generating a scale-changed image by changing the scale of the image | |
KR101097922B1 (en) | Improved subpixel rendering filters for high brightness subpixel layouts | |
US8619132B2 (en) | Wide color gamut anaglyphs | |
US20140092221A1 (en) | Image processing apparatus and method, and related computer program | |
US9767742B2 (en) | Image display device | |
TWI519151B (en) | Image processing method and image processing apparatus | |
EP3297279B1 (en) | Device, system and method for content-adaptive resolution-enhancement | |
CN108364623A (en) | Information processing equipment, information processing method and computer-readable medium | |
US20100165139A1 (en) | Image gamut mapping | |
US10368048B2 (en) | Method for the representation of a three-dimensional scene on an auto-stereoscopic monitor | |
EP2847998B1 (en) | Systems, methods, and computer program products for compound image demosaicing and warping | |
KR101548236B1 (en) | Color compansation method for 3D Image | |
CN104933671B (en) | Color of image fusion method | |
KR20090097796A (en) | Method for correcting chromatic aberration | |
CN103037236A (en) | Image processing method and apparatus | |
JP2017173666A (en) | Image display device and image display method | |
JP2007324665A (en) | Image correction apparatus and video display apparatus | |
US9754162B2 (en) | Image processing method and device for adaptive image enhancement | |
KR101706554B1 (en) | Apparatus and method for processing image for clear edge reproduction | |
JP5808197B2 (en) | Video processing apparatus and video processing method | |
TWI528812B (en) | System and method of reducing noise | |
JP5141871B2 (en) | Image processing method and image display apparatus |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:RITTS, JAMES PAUL;REEL/FRAME:029088/0717Effective date: 20120926 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034462/0001Effective date: 20141028 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
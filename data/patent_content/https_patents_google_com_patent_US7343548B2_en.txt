US7343548B2 - Method and apparatus for encoding and decoding data - Google Patents
Method and apparatus for encoding and decoding data Download PDFInfo
- Publication number
- US7343548B2 US7343548B2 US11/108,949 US10894905A US7343548B2 US 7343548 B2 US7343548 B2 US 7343548B2 US 10894905 A US10894905 A US 10894905A US 7343548 B2 US7343548 B2 US 7343548B2
- Authority
- US
- United States
- Prior art keywords
- matrix
- rows
- parity
- column
- check
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
- H03M13/11—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits using multiple parity bits
- H03M13/1102—Codes on graphs and decoding on graphs, e.g. low-density parity check [LDPC] codes
- H03M13/1148—Structural properties of the code parity-check or generator matrix
- H03M13/116—Quasi-cyclic LDPC [QC-LDPC] codes, i.e. the parity-check matrix being composed of permutation or circulant sub-matrices
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
- H03M13/11—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits using multiple parity bits
- H03M13/1102—Codes on graphs and decoding on graphs, e.g. low-density parity check [LDPC] codes
- H03M13/1105—Decoding
- H03M13/1131—Scheduling of bit node or check node processing
- H03M13/1137—Partly parallel processing, i.e. sub-blocks or sub-groups of nodes being processed in parallel
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
- H03M13/11—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits using multiple parity bits
- H03M13/1102—Codes on graphs and decoding on graphs, e.g. low-density parity check [LDPC] codes
- H03M13/1148—Structural properties of the code parity-check or generator matrix
- H03M13/118—Parity check matrix structured for simplifying encoding, e.g. by having a triangular or an approximate triangular structure
- H03M13/1185—Parity check matrix structured for simplifying encoding, e.g. by having a triangular or an approximate triangular structure wherein the parity-check matrix comprises a part with a double-diagonal
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
- H03M13/11—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits using multiple parity bits
- H03M13/1102—Codes on graphs and decoding on graphs, e.g. low-density parity check [LDPC] codes
- H03M13/1148—Structural properties of the code parity-check or generator matrix
- H03M13/118—Parity check matrix structured for simplifying encoding, e.g. by having a triangular or an approximate triangular structure
- H03M13/1185—Parity check matrix structured for simplifying encoding, e.g. by having a triangular or an approximate triangular structure wherein the parity-check matrix comprises a part with a double-diagonal
- H03M13/1188—Parity check matrix structured for simplifying encoding, e.g. by having a triangular or an approximate triangular structure wherein the parity-check matrix comprises a part with a double-diagonal wherein in the part with the double-diagonal at least one column has an odd column weight equal or greater than three
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/05—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits
- H03M13/11—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using block codes, i.e. a predetermined number of check bits joined to a predetermined number of information bits using multiple parity bits
- H03M13/1102—Codes on graphs and decoding on graphs, e.g. low-density parity check [LDPC] codes
- H03M13/1148—Structural properties of the code parity-check or generator matrix
- H03M13/118—Parity check matrix structured for simplifying encoding, e.g. by having a triangular or an approximate triangular structure
Definitions
- the present invention relates generally to encoding and decoding data and in particular, to a method and apparatus for encoding and decoding data utilizing low-density parity-check (LDPC) codes.
- LDPC low-density parity-check
- a low-density parity-check (LDPC) code is a linear block code specified by a parity-check matrix H.
- the codeword x is transmitted through a noisy channel, and the received signal vector y is passed to the decoder to estimate the information vector s 1 ⁇ k .
- s k-1 p 0 , p 1 , . . . , p m-1 ]
- p 0 , . . . , p m-1 are the parity-check bits
- s 0 , . . . , s k-1 are the systematic bits, equal to the information bits within the information vector.
- a parity-check matrix can be also described by a bipartite graph.
- the bipartite graph is not only a graphic description of the code but also a model for the decoder.
- a codeword bit (therefore each column of H) is represented by a variable node on the left
- each parity-check equation (therefore each row of H) is represented by a check node on the right.
- variable node i is connected to check node j if entry h ji of the parity-check matrix H is 1.
- the variable nodes represent a valid codeword if all check nodes have even parity.
- H also has the corresponding bipartite graph shown in FIG. 1 .
- H b binary base matrix
- H b binary base matrix
- n n b ⁇ z
- H bm The representation of the expansion of H b is called the model matrix and is denoted by H bm .
- H bm is simply a shorthand notation for H when z is known.
- This procedure essentially maps each edge of H b to a vector edge of length z in H, each variable node of H b to a vector variable node of length z in H, and each check node of H b to a vector check node of length z in H.
- the z ⁇ z submatrix may be a permutation matrix, a sum of permutation matrices, or any type of binary matrix.
- the weight distribution of the expanded matrix H is the same as the base matrix H b . Therefore, the weight distribution of H b is chosen as close to the desired final weight distribution as possible.
- the permutation submatrices comprising H can be very simple without compromising performance, such as simple cyclic shifts and/or bit-reversals. In the case of cyclic shifts, H bm can be written by replacing the 1's in H b by non-negative integers that represent the shift sizes and replacing the 0's in H b by ⁇ 1.
- Vector x is sent through a noisy channel and a vector y of n contaminated signals are received.
- the LDPC decoder attempts to estimate s based on received vector y and the parity-check matrix H.
- an iterative decoding algorithm such as belief propagation, is usually applied based on the bipartite graph.
- LLRs log-likelihood ratios
- Structured LDPC codes may also be decoded with a layered decoder.
- a layered decoder typically has hardware to processes an entire vector row at one time.
- the layered decoder can potentially reduce the number of iterations required to achieve a given level of performance, thereby improving throughput.
- the base matrix and assignment of permutation matrices for a given target parity check matrix H can be designed to provide an LDPC code that has good error-correcting performance and can be efficiently encoded and decoded.
- the expansion of the base matrix H b uses identical submatrices for 1's in each column of the second part H′ b2 , and the expansion uses paired submatrices for an even number of 1's in h b .
- layered decoding can be used to potentially reduce the amount of processing and potentially increase throughput
- a technique does not exist for designing H b and assigning the permutation matrices for a given target H size which allows efficient encoding and layered decoding. Therefore, a need exists for building features into structured LDPC codes which can be encoded efficiently and high-speed layered decoded.
- FIG. 1 illustrates the bipartite graph of an (12, 6) H matrix.
- FIG. 2 is a block diagram illustrating a parity-check processing flow.
- FIG. 3 is a block diagram of an encoder.
- FIG. 4 is a flow chart showing the operation of the encoder of FIG. 3 .
- FIG. 5 is a block diagram of a decoder.
- FIG. 6 is a flow chart showing the operation of the decoder of FIG. 4 .
- H is an expansion of a base matrix H b having m b rows.
- H b comprises a section H b1 and a section H b2
- the 1's of h b and H b1 are arranged such that one or more groups of the rows of H b can be formed so that rows within each group do not intersect. In other words, the rows of H b within each group do not have positive values in the same column.
- a pipelined hardware decoder can be constructed. Such a decoder can process multiple vector rows of H at a time, since the updated messages of a group are not required to update the messages of a subsequent group. By pipelining, the decoder can achieve significantly higher throughput without increasing hardware complexity.
- H is an expansion of a base matrix H b having m b rows with H b comprising a section H b1 and a section H b2
- H is an expansion of a base matrix H b with H b comprising a section H b1 and a section H b2
- H is an expansion of a base matrix H b with H b comprising a section H b1 and a section H b2
- H is an expansion of a base matrix H b with H b comprising a section H b1 and a section H b2
- FIG. 2 is a block diagram illustrating a parity-check processing flow.
- the digital logic in the processing blocks of FIG. 2 can be entirely pipelined when the intermediate results stored by any register (processing an earlier vector row) are not needed to generate results for any previous register (processing a later vector row) in the circuit.
- This can be achieved through layer grouping, where the base matrix H b is constrained such that groups of base rows do not intersect, which means that the base rows within a group have at most a single 1 within a base column (or equivalently, within each group the rows of H bm have at most a single non-negative entry within a column).
- Layer grouping may further increases LDPC decoder speed through pipelining.
- the z parity checks within a vector check node can be computed in parallel. This is because the code structure guarantees that the message from any given variable node within a vector variable node (corresponding to a column of the base matrix) is needed by at most one of the z parity check nodes within a vector check node.
- An exemplary block diagram of the parity check processing flow is provided in FIG. 2 .
- the grouped messages ⁇ j from vector variable nodes to vector check node i, 1 ⁇ j ⁇ d r (i), corresponding to the d r (i) non-zero entries of the i-th row of the base matrix are permuted according to the existing permutation submatrix Q ij , 1 ⁇ j ⁇ d r (i), and presented to the z parallel parity check circuits C l within vector check node i, 1 ⁇ l ⁇ z.
- the parity check circuitry produces messages which are then inverse permuted to obtain the updated messages ⁇ j (new), which can be utilized in subsequent decoding steps. As described in the figure, once current messages are passed into the circuit, updated messages are generated D cycles later.
- the vector parity check nodes corresponding to these two rows use (and update) entirely different sets of messages, which are related to two different sets of vector variable nodes.
- the vector parity checks for both of row r and row s can be computed in D+1 cycles. This is done by feeding the messages for row s one cycle later than for row r into a processing unit depicted in FIG. 2 . If the messages for row r were fed in at time t, they will be updated at time t+D, followed by the update of row s messages at time t+D+1.
- the base matrix is designed so that the rows of H b can be divided into m b /2 groups, where for the two rows within each group, the sets of columns with non-trivial entries do not intersect. Note that the grouped rows do not have to be consecutive because the decoder could be controlled to process the parity check matrix rows out of order.
- H bm derived from a fully pipelined type of base matrix H b is as follows:
- one way to form six groups of the rows of H bm is: ⁇ 0, 2 ⁇ , ⁇ 4, 11 ⁇ , ⁇ 6, 8 ⁇ , ⁇ 10, 1 ⁇ , ⁇ 3, 5 ⁇ ; ⁇ 7, 9 ⁇ , where the rows are labeled sequentially from 0 to 11 starting from the top.
- all rows belong to a group, and no two groups contain the same row.
- the throughput can be nearly doubled relative to the case where there are no grouped rows (which requires 2D clock cycles to process 2 rows). This is because processing of any subsequent row must be delayed until all messages on the current row being processed have been updated when row grouping cannot be formed. Therefore the fully pipelined decoding allows significant throughput increase without extra hardware cost. It can be also viewed that the fully pipelined design achieves almost the same throughput as a design that uses twice the hardware where the two vector rows within a group are decoded simultaneously on two processing units.
- the vector rows of the parity-check matrix H can be permuted such that every two consecutive vector rows do not intersect since row permutation has no effect on decoding performance.
- the rows of base matrix H b can be permuted such that every two consecutive rows do not intersect. This not only requires the base matrix be designed so that the rows of H b can be divided into m b /2 groups, where for the two rows within a group, the sets of columns with non-trivial entries do not intersect; but also that the last row of a previous group does not intersect with the first row of a current group. This may further increase the decoder throughput since the processing of the current group can start 1 cycle after the previous group without waiting for the previous group to finish.
- H bm is derived from H b
- a non-intersecting H b will naturally produce a non-intersecting H bm .
- H bm presented above when the rows are permuted according to [0, 2, 4, 11, 6, 8, 10, 1, 3, 5, 7, 9] it can be seen that every two consecutive rows of the permuted H bm do not intersect.
- Another approach involves a modification of the decoding paradigm.
- the processing of a subsequent vector row is not delayed until all messages on the current row are updated even if the current vector row and the subsequent vector row intersect.
- the messages for a first vector row are fed into the parity check circuits the messages for a second vector row are introduced at a one cycle delay.
- the performance of this scheme will suffer because the second vector row does not reap the benefit of any updated messages in the first vector row. It may be possible to mitigate the performance impact by reducing the intersection between pairs of vector rows (rather than to absolutely minimize it to no intersection) while achieving the desired error-correcting capability. Thus, a compromise between the error-correcting performance and the decoding speed can be reached.
- a further approach involves following the standard decoding paradigm (processing all rows fully before subsequent rows are begun) on early iterations and switching to the modified decoding paradigm discussed above on later iterations.
- q-grouping When fully pipelined, q vector rows can be started in the pipeline consecutively, with one cycle separation between consecutive vector rows. Thus the q rows can be finished in D+q ⁇ 1 cycles.
- the throughput of q-grouping design is nearly q times as much as the design where no grouping exists since without grouping q vector rows takes D ⁇ q cycles to compute.
- the parity-check matrix with grouping size q has a maximum allowed column weight of m b /q. Thus q should be selected properly so that good error-correcting performance can be achieved with the maximum allowed column weight.
- floor(m b /q) groups contain q vector rows in each group, while one group contains rem(m b , q) vector rows.
- parity-check matrix with q-grouping (group size q) design can be decoded using any other decoding architecture.
- group size q group size
- belief propagation decoding with flooding scheduling is still applicable, where all check nodes are processed simultaneously, and all variable nodes are processed simultaneously.
- Each of the LDPC codes is a systematic linear block code.
- the matrix H is defined as an expansion of a base matrix and can be represented by
- the base matrix is expanded by replacing each 1 in the base matrix with a z-by-z right-shifted identity matrix, and each 0 with a z-by-z zero matrix. Therefore the design accommodates various packet sizes by varying the submatrix size z.
- each permutation matrix is specified by a single circular right shift
- the binary base matrix information and permutation replacement information can be combined into a single compact model matrix H bm .
- the model matrix H bm is the same size as the binary base matrix H b , with each binary entry (i,j) of the base matrix H b replaced to create the model matrix H bm .
- Each 0 in H b is replaced by a negative value (e.g., by ⁇ 1) to denote a z ⁇ z all-zero matrix, and each 1 in H b is replaced by a circular shift size p(i,j) ⁇ 0.
- the model matrix H bm can then be directly expanded to H.
- the expansion of the base matrix H b uses identical submatrices for each of the 1's in each column of the second section H′ b2 , and the expansion uses paired submatrices for an even number of 1's in h b .
- the non-zero submatrices are circularly right shifted identity matrices with a particular circular shift value.
- One way to assign the shift sizes is as follows:
- FIG. 3 is a block diagram of encoder 300 .
- encoder 300 comprises microprocessor 301 and lookup table 303 .
- microprocessor 301 comprises a digital signal processor (DSP), such as, but not limited to MSC8300 and DSP56300 DSPs.
- DSP digital signal processor
- lookup table 303 serves as storage means to store a matrix, and comprises read-only memory; however, one of ordinary skill in the art will recognize that other forms of memory (e.g., random-access memory, magnetic storage memory, etc.) may be utilized as well.
- the functionality of the microprocessor 301 and the lookup table 303 can be incorporated into an application specific integrated circuit (ASIC) or field programmable gate array (FPGA).
- ASIC application specific integrated circuit
- FPGA field programmable gate array
- the lookup table 303 can be implemented in a form of memory corresponding to the existence or non-existence of signal paths in a circuit.
- encoded data is generally output as a plurality of parity-check bits in addition to the systematic bits, where together the parity-check and systematic bits form a codeword x.
- a parity-check matrix H is stored in lookup table 303 , and is accessed by microprocessor 301 to solve Equation (1).
- the parity-check bits and the symbol set are then passed to a transmitter and transmitted to a receiver.
- H can be compactly-represented by a model matrix H bm , which in turn is derived from a base matrix H b .
- the parity portion H b2 has the format
- the 1's of h b and H b1 are arranged such that m b /q groups of the rows of H b can be formed, where the q rows of H b within each group do not intersect.
- w h 3
- different base matrices may be needed.
- FIG. 4 is a flow chart showing the operation of encoder 300 , and in particular, microprocessor 301 .
- the logic flow begins at step 401 where a current symbol set (s 0 , . . . , s k-1 ) is received by microprocessor 301 .
- values of parity-check bits are determined based on the current symbol set and H.
- FIG. 5 is a block diagram of decoder 500 .
- decoder 500 comprises microprocessor 501 and lookup table 503 .
- microprocessor 501 comprises a digital signal processor (DSP), such as, but not limited to MSC8300 and DSP56300 DSPs.
- DSP digital signal processor
- lookup table 503 acts as storage means for storing matrix H, and comprises read-only memory.
- other forms of memory e.g., random-access memory, magnetic storage memory, etc.
- the functionality of the microprocessor 501 and the lookup table 503 can be incorporated into an application specific integrated circuit (ASIC) or field programmable gate array (FPGA).
- ASIC application specific integrated circuit
- FPGA field programmable gate array
- the lookup table 503 can be implemented in a form of memory corresponding to the existence or non-existence of signal paths in a circuit.
- a parity-check matrix H is stored in lookup table 503 , and is accessed by microprocessor 501 to decode y and estimate the current symbol set s (i.e., the current symbol set (s 0 , . . . , s k-1 )).
- the decoder 500 can use the parity-check matrix H in the microprocessor 501 for decoding.
- One such way is to perform a vector-matrix multiplication with H to determine a likely error pattern.
- Another such way is to use H to construct a bipartite graph where the edges in the graph correspond to 1's in H, and to iteratively process y on the bipartite graph.
- FIG. 6 is a flow chart showing the operation of decoder 500 , and in particular, microprocessor 501 .
- estimates of the current symbol set s i.e., the current symbol set (s 0 , . . . , s k-1 ) are determined based on H.
- the 1's of H b are arranged such that m b /q groups of rows of H b can be formed.
- the q rows of H b within each group do not intersect. In other words, the q rows of H b within each group do not have positive values in the same column.
- the rows of H may be permuted without affecting the value of the parity-check bits.
- the modified dual-diagonal structure shown for the entire section H b2 may be used for a subset of the parity-check bits.
- additional steps may be performed when expanding the base matrix to the expanded matrix.
- the matrix H may also be used in any type of decoder that relies upon a parity-check matrix. It is intended that such changes come within the scope of the following claims.
Abstract
Description
HxT=0T, (1)
where 0 is a row vector of all zeros, and the codeword x=[s p]=[s0, s1, . . . , sk-1, p0, p1, . . . , pm-1], where p0, . . . , pm-1 are the parity-check bits; and s0, . . . , sk-1 are the systematic bits, equal to the information bits within the information vector.
with the left side portion corresponding to k (=6) information bits s, the right side portion corresponding to m (=6) parity bits p. Applying (1), the H in (2) defines 6 parity-check equations as follows:
H also has the corresponding bipartite graph shown in
In this example, one way to form six groups of the rows of Hbm is: {0, 2}, {4, 11}, {6, 8}, {10, 1}, {3, 5}; {7, 9}, where the rows are labeled sequentially from 0 to 11 starting from the top. In this example, all rows belong to a group, and no two groups contain the same row. In general, there are one or more groups of rows, and some rows may not be included within a group.
where Pi,j is one of a set of z-by-z circularly column right-shifted identity matrices or a z-by-z zero matrix. The matrix H is expanded from a binary base matrix Hb of size mb-by-nb, where n=z·nb and m=z·mb, and z is a positive integer. The base matrix is expanded by replacing each 1 in the base matrix with a z-by-z right-shifted identity matrix, and each 0 with a z-by-z zero matrix. Therefore the design accommodates various packet sizes by varying the submatrix size z.
-
- Each 1 in H′b2 is assigned a shift size of 0, and is replaced by a z×z identity matrix when expanding to H.
- The two 1's located at the top and the bottom of hb are assigned equal shift sizes, and the third 1 in the middle of hb is given an unpaired shift size.
- The unpaired shift size in hb is equal to 0.
Encoder and Decoder Structure
where the column hb has weight wh>=3. The 1's of hb and Hb1 are arranged such that mb/q groups of the rows of Hb can be formed, where the q rows of Hb within each group do not intersect. In one example, group j contains rows with index g(j)={j, j+mb/q, j+2×mb/q, . . . , j+(q−1)×mb/q}, j=0, 1, . . . , (mb/q−1),mb/q>1. In this case, if wh=3, one example of column hb contains three non-zero entries hb(0)=1, hb(mb−1)=1, and hb(a)=1, where a∉g(0), a∉g(mb/q−1).
Claims (20)
Priority Applications (11)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/108,949 US7343548B2 (en) | 2004-12-15 | 2005-04-19 | Method and apparatus for encoding and decoding data |
ES05778539.6T ES2529182T3 (en) | 2004-12-15 | 2005-07-18 | Structured LDPC design with grouping vector rows |
KR1020077013617A KR100901216B1 (en) | 2004-12-15 | 2005-07-18 | Structured ldpc design with vector row grouping |
EP11164133A EP2365636A1 (en) | 2004-12-15 | 2005-07-18 | Structured LDPC design with vector row grouping |
PCT/US2005/025277 WO2006065286A1 (en) | 2004-12-15 | 2005-07-18 | Structured ldpc design with vector row grouping |
EP11164141A EP2365637A1 (en) | 2004-12-15 | 2005-07-18 | Structured LDPC design with vector row grouping |
CN201210075946.5A CN102638274B (en) | 2004-12-15 | 2005-07-18 | Operate the Apparatus and method for of transmitter using the structured LDPC design of vector line packet |
CN200580042887XA CN101080872B (en) | 2004-12-15 | 2005-07-18 | Method and device for operating transmitter by structured LDPC design with vector row grouping |
EP05778539.6A EP1829222B1 (en) | 2004-12-15 | 2005-07-18 | Structured ldpc design with vector row grouping |
EP11164143A EP2365638A1 (en) | 2004-12-15 | 2005-07-18 | Structured LDPC design with vector row grouping |
CN2012100753596A CN102629876A (en) | 2004-12-15 | 2005-07-18 | Structured LDPC design with vector row grouping |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US63670004P | 2004-12-15 | 2004-12-15 | |
US11/108,949 US7343548B2 (en) | 2004-12-15 | 2005-04-19 | Method and apparatus for encoding and decoding data |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060129904A1 US20060129904A1 (en) | 2006-06-15 |
US7343548B2 true US7343548B2 (en) | 2008-03-11 |
Family
ID=36585487
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/108,949 Active 2026-08-12 US7343548B2 (en) | 2004-12-15 | 2005-04-19 | Method and apparatus for encoding and decoding data |
Country Status (6)
Country | Link |
---|---|
US (1) | US7343548B2 (en) |
EP (4) | EP2365638A1 (en) |
KR (1) | KR100901216B1 (en) |
CN (3) | CN102638274B (en) |
ES (1) | ES2529182T3 (en) |
WO (1) | WO2006065286A1 (en) |
Cited By (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070180344A1 (en) * | 2006-01-31 | 2007-08-02 | Jacobsen Eric A | Techniques for low density parity check for forward error correction in high-data rate transmission |
US20080077843A1 (en) * | 2004-12-22 | 2008-03-27 | Lg Electronics Inc. | Apparatus and Method for Decoding Using Channel Code |
US20080168334A1 (en) * | 2006-12-20 | 2008-07-10 | Lsi Logic Corporation | Low Complexity LDPC Encoding Algorithm |
US20080189589A1 (en) * | 2007-02-02 | 2008-08-07 | Samsung Electronics Co., Ltd. | Apparatus and method for receiving signal in a communication system |
US20090199068A1 (en) * | 2004-06-24 | 2009-08-06 | Min Seok Oh | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US20090319861A1 (en) * | 2008-06-23 | 2009-12-24 | Ramot At Tel Aviv University Ltd. | Using damping factors to overcome ldpc trapping sets |
US7707479B2 (en) | 2005-12-13 | 2010-04-27 | Samsung Electronics Co., Ltd. | Method of generating structured irregular low density parity checkcodes for wireless systems |
US20100115380A1 (en) * | 2007-01-10 | 2010-05-06 | Lg Electronics Inc. | Method of generating codeword in wireless communication system |
US20100125769A1 (en) * | 2008-11-14 | 2010-05-20 | Realtek Semiconductor Corp. | Parity-check-code decoder and recording controller |
US20100138719A1 (en) * | 2007-03-27 | 2010-06-03 | Young Seob Lee | Method of encoding data using a low density parity check code |
WO2010089444A1 (en) | 2009-02-06 | 2010-08-12 | Diseño De Sistemas En Silicio, S.A. | Coding and decoding using ldpc quasi-cyclic codes |
CN101599302B (en) * | 2009-07-23 | 2012-05-09 | 西安空间无线电技术研究所 | High efficiency storing method for coding digit of LDPC coder based on FPGA |
US8190962B1 (en) * | 2008-12-30 | 2012-05-29 | Qualcomm Atheros, Inc. | System and method for dynamic maximal iteration |
US8286048B1 (en) | 2008-12-30 | 2012-10-09 | Qualcomm Atheros, Inc. | Dynamically scaled LLR for an LDPC decoder |
TWI381652B (en) * | 2009-01-06 | 2013-01-01 | Mediatek Inc | Method for generating parity-check matrix |
TWI566532B (en) * | 2015-09-30 | 2017-01-11 | 衡宇科技股份有限公司 | Decoding algorithm with enhanced parity check matrix and re-encoding scheme for ldpc code |
US10623139B2 (en) * | 2017-06-23 | 2020-04-14 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US10644724B2 (en) * | 2017-06-27 | 2020-05-05 | Telefonaktiebolaget Lm Ericsson (Publ) | Shift values for quasi-cyclic LDPC codes |
US20220085912A1 (en) * | 2015-12-23 | 2022-03-17 | Samsung Electronics Co., Ltd. | Apparatus and method for encoding and decoding channel in communication or broadcasting system |
US11502781B2 (en) * | 2017-06-23 | 2022-11-15 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101911503A (en) * | 2007-12-29 | 2010-12-08 | 上海贝尔股份有限公司 | Encoding method and encoding device of LDPC codes |
KR101405962B1 (en) * | 2008-02-28 | 2014-06-12 | 엘지전자 주식회사 | Method of performing decoding using LDPC code |
KR20100058260A (en) | 2008-11-24 | 2010-06-03 | 삼성전자주식회사 | Apparatus and method for channel encoding and decoding in communication system using low-density parity-check codes |
EP2226945A1 (en) * | 2009-03-03 | 2010-09-08 | Nokia Siemens Networks Oy | Generation of optimized exponent matrices for multi-rate LDPC codes |
CN102790622B (en) * | 2011-05-19 | 2017-03-15 | 中兴通讯股份有限公司 | The building method and device of low-density parity check code check matrix |
KR102068030B1 (en) * | 2012-12-11 | 2020-01-20 | 삼성전자 주식회사 | Memory controller and operating method of the same |
CN104143991B (en) * | 2013-05-06 | 2018-02-06 | 华为技术有限公司 | The interpretation method and device of polarity Polar codes |
CN116827357A (en) * | 2016-05-13 | 2023-09-29 | 中兴通讯股份有限公司 | Method and device for encoding and decoding structured low-density parity check code LDPC |
RU2667772C1 (en) * | 2017-05-05 | 2018-09-24 | Хуавэй Текнолоджиз Ко., Лтд. | Method and device for information processing and communication device |
WO2018201554A1 (en) * | 2017-05-05 | 2018-11-08 | 华为技术有限公司 | Information processing method and communication apparatus |
CN110535474B (en) | 2017-05-05 | 2023-06-06 | 华为技术有限公司 | Information processing method and communication device |
CN111492586B (en) * | 2017-12-15 | 2022-09-09 | 华为技术有限公司 | Method and device for designing basic matrix of LDPC code with orthogonal rows |
CN108494411B (en) * | 2018-03-30 | 2021-09-17 | 山东大学 | Construction method of multi-system LDPC code check matrix |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6718508B2 (en) | 2000-05-26 | 2004-04-06 | Her Majesty The Queen In Right Of Canada, As Represented By The Minister Of Industry Through The Communication Research Centre | High-performance error-correcting codes with skew mapping |
WO2004102810A1 (en) | 2003-05-13 | 2004-11-25 | Sony Corporation | Decoding method, decoding device, and program |
US7188297B2 (en) * | 2004-08-12 | 2007-03-06 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
US7260763B2 (en) * | 2004-03-11 | 2007-08-21 | Nortel Networks Limited | Algebraic low-density parity check code design for variable block sizes and code rates |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20100046063A (en) * | 2000-06-16 | 2010-05-04 | 어웨어, 인크. | System and methods for ldpc coded modulation |
KR20040036460A (en) * | 2002-10-26 | 2004-04-30 | 삼성전자주식회사 | LDPC decoding apparatus and method |
US7702986B2 (en) * | 2002-11-18 | 2010-04-20 | Qualcomm Incorporated | Rate-compatible LDPC codes |
-
2005
- 2005-04-19 US US11/108,949 patent/US7343548B2/en active Active
- 2005-07-18 CN CN201210075946.5A patent/CN102638274B/en active Active
- 2005-07-18 WO PCT/US2005/025277 patent/WO2006065286A1/en active Application Filing
- 2005-07-18 KR KR1020077013617A patent/KR100901216B1/en active IP Right Grant
- 2005-07-18 EP EP11164143A patent/EP2365638A1/en not_active Ceased
- 2005-07-18 CN CN200580042887XA patent/CN101080872B/en active Active
- 2005-07-18 EP EP11164133A patent/EP2365636A1/en not_active Ceased
- 2005-07-18 ES ES05778539.6T patent/ES2529182T3/en active Active
- 2005-07-18 EP EP05778539.6A patent/EP1829222B1/en active Active
- 2005-07-18 CN CN2012100753596A patent/CN102629876A/en active Pending
- 2005-07-18 EP EP11164141A patent/EP2365637A1/en not_active Ceased
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6718508B2 (en) | 2000-05-26 | 2004-04-06 | Her Majesty The Queen In Right Of Canada, As Represented By The Minister Of Industry Through The Communication Research Centre | High-performance error-correcting codes with skew mapping |
WO2004102810A1 (en) | 2003-05-13 | 2004-11-25 | Sony Corporation | Decoding method, decoding device, and program |
US7260763B2 (en) * | 2004-03-11 | 2007-08-21 | Nortel Networks Limited | Algebraic low-density parity check code design for variable block sizes and code rates |
US7188297B2 (en) * | 2004-08-12 | 2007-03-06 | Motorola, Inc. | Method and apparatus for encoding and decoding data |
Cited By (45)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8276050B2 (en) | 2004-06-24 | 2012-09-25 | Lg Electronics Inc. | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US8286062B2 (en) | 2004-06-24 | 2012-10-09 | Lg Electronics Inc. | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US20090199068A1 (en) * | 2004-06-24 | 2009-08-06 | Min Seok Oh | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US20090199067A1 (en) * | 2004-06-24 | 2009-08-06 | Min Seok Oh | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US20090228767A1 (en) * | 2004-06-24 | 2009-09-10 | Min Seok Oh | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US8185807B2 (en) | 2004-06-24 | 2012-05-22 | Lg Electronics Inc. | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US8201059B2 (en) | 2004-06-24 | 2012-06-12 | Lg Electronics Inc. | Method and apparatus of encoding and decoding data using low density parity check code in a wireless communication system |
US8438459B2 (en) * | 2004-12-22 | 2013-05-07 | Lg Electronics Inc. | Apparatus and method for decoding using channel code |
US20080077843A1 (en) * | 2004-12-22 | 2008-03-27 | Lg Electronics Inc. | Apparatus and Method for Decoding Using Channel Code |
US7707479B2 (en) | 2005-12-13 | 2010-04-27 | Samsung Electronics Co., Ltd. | Method of generating structured irregular low density parity checkcodes for wireless systems |
US20070180344A1 (en) * | 2006-01-31 | 2007-08-02 | Jacobsen Eric A | Techniques for low density parity check for forward error correction in high-data rate transmission |
US20080168334A1 (en) * | 2006-12-20 | 2008-07-10 | Lsi Logic Corporation | Low Complexity LDPC Encoding Algorithm |
US7913149B2 (en) * | 2006-12-20 | 2011-03-22 | Lsi Corporation | Low complexity LDPC encoding algorithm |
US20110099454A1 (en) * | 2006-12-20 | 2011-04-28 | Lsi Corporation | Low Complexity LDPC Encoding Algorithm |
US8516329B2 (en) * | 2007-01-10 | 2013-08-20 | Lg Electronics Inc. | Method of generating codeword for a control signal and for transmitting a control signal in a wireless communication system using an extended RM matrix |
US20100115380A1 (en) * | 2007-01-10 | 2010-05-06 | Lg Electronics Inc. | Method of generating codeword in wireless communication system |
US20080189589A1 (en) * | 2007-02-02 | 2008-08-07 | Samsung Electronics Co., Ltd. | Apparatus and method for receiving signal in a communication system |
US8051356B2 (en) * | 2007-02-02 | 2011-11-01 | Samsung Electronics Co., Ltd | Apparatus and method for receiving signal in a communication system |
US8689088B2 (en) * | 2007-03-27 | 2014-04-01 | Lg Electronics Inc. | Method of encoding data using a low density parity check code |
US20100138719A1 (en) * | 2007-03-27 | 2010-06-03 | Young Seob Lee | Method of encoding data using a low density parity check code |
US8504895B2 (en) * | 2008-06-23 | 2013-08-06 | Ramot At Tel Aviv University Ltd. | Using damping factors to overcome LDPC trapping sets |
US20090319861A1 (en) * | 2008-06-23 | 2009-12-24 | Ramot At Tel Aviv University Ltd. | Using damping factors to overcome ldpc trapping sets |
US8402340B2 (en) * | 2008-11-14 | 2013-03-19 | Realtek Semiconductor Corp. | Parity-check-code decoder and recording controller |
US20100125769A1 (en) * | 2008-11-14 | 2010-05-20 | Realtek Semiconductor Corp. | Parity-check-code decoder and recording controller |
US8286048B1 (en) | 2008-12-30 | 2012-10-09 | Qualcomm Atheros, Inc. | Dynamically scaled LLR for an LDPC decoder |
US8190962B1 (en) * | 2008-12-30 | 2012-05-29 | Qualcomm Atheros, Inc. | System and method for dynamic maximal iteration |
US8543883B2 (en) | 2008-12-30 | 2013-09-24 | Qualcomm Incorporated | Decoding low-density parity check (LDPC) codewords |
TWI381652B (en) * | 2009-01-06 | 2013-01-01 | Mediatek Inc | Method for generating parity-check matrix |
WO2010089444A1 (en) | 2009-02-06 | 2010-08-12 | Diseño De Sistemas En Silicio, S.A. | Coding and decoding using ldpc quasi-cyclic codes |
US8719655B2 (en) | 2009-02-06 | 2014-05-06 | Marvell Hispania S.L. | Method and device for communicating data across noisy media |
US20140304569A1 (en) * | 2009-02-06 | 2014-10-09 | Marvell Hispania, S. L. U. | Method of codifying data or generating a block of data based on matrix with a triple diagonal structure |
US9240806B2 (en) * | 2009-02-06 | 2016-01-19 | Marvell Hispania, S. L. U. | Method of codifying data or generating a block of data based on matrix with a triple diagonal structure |
US9543985B2 (en) | 2009-02-06 | 2017-01-10 | Marvell Hispania, S.L. | Method of codifying data including generation of a quasi-cyclic code |
CN101599302B (en) * | 2009-07-23 | 2012-05-09 | 西安空间无线电技术研究所 | High efficiency storing method for coding digit of LDPC coder based on FPGA |
TWI566532B (en) * | 2015-09-30 | 2017-01-11 | 衡宇科技股份有限公司 | Decoding algorithm with enhanced parity check matrix and re-encoding scheme for ldpc code |
US11575464B2 (en) * | 2015-12-23 | 2023-02-07 | Samsung Electronics Co., Ltd. | Apparatus and method for encoding and decoding channel in communication or broadcasting system |
US20220085912A1 (en) * | 2015-12-23 | 2022-03-17 | Samsung Electronics Co., Ltd. | Apparatus and method for encoding and decoding channel in communication or broadcasting system |
US11956076B2 (en) | 2015-12-23 | 2024-04-09 | Samsung Electronics Co., Ltd. | Apparatus and method for encoding and decoding channel in communication or broadcasting system |
US11101926B2 (en) * | 2017-06-23 | 2021-08-24 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US11502781B2 (en) * | 2017-06-23 | 2022-11-15 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US10623139B2 (en) * | 2017-06-23 | 2020-04-14 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US20230063850A1 (en) * | 2017-06-23 | 2023-03-02 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US11722247B2 (en) * | 2017-06-23 | 2023-08-08 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US20230388048A1 (en) * | 2017-06-23 | 2023-11-30 | Samsung Electronics Co., Ltd. | Method and apparatus for channel encoding and decoding in communication or broadcasting system |
US10644724B2 (en) * | 2017-06-27 | 2020-05-05 | Telefonaktiebolaget Lm Ericsson (Publ) | Shift values for quasi-cyclic LDPC codes |
Also Published As
Publication number | Publication date |
---|---|
WO2006065286A1 (en) | 2006-06-22 |
EP1829222A1 (en) | 2007-09-05 |
KR100901216B1 (en) | 2009-06-05 |
ES2529182T3 (en) | 2015-02-17 |
EP2365637A1 (en) | 2011-09-14 |
KR20070086301A (en) | 2007-08-27 |
CN102638274B (en) | 2017-03-01 |
CN101080872B (en) | 2012-05-02 |
EP2365636A1 (en) | 2011-09-14 |
CN101080872A (en) | 2007-11-28 |
EP2365638A1 (en) | 2011-09-14 |
CN102638274A (en) | 2012-08-15 |
EP1829222A4 (en) | 2009-02-25 |
US20060129904A1 (en) | 2006-06-15 |
CN102629876A (en) | 2012-08-08 |
EP1829222B1 (en) | 2014-12-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7343548B2 (en) | Method and apparatus for encoding and decoding data | |
US11368168B2 (en) | Low density parity check decoder | |
US7395494B2 (en) | Apparatus for encoding and decoding of low-density parity-check codes, and method thereof | |
US7181676B2 (en) | Layered decoding approach for low density parity check (LDPC) codes | |
US7730377B2 (en) | Layered decoding of low density parity check (LDPC) codes | |
CN101032082B (en) | Method and apparatus for encoding and decoding data | |
US7203897B2 (en) | Method and apparatus for encoding and decoding data | |
US7962828B2 (en) | Apparatus and method for coding/decoding block low density parity check code in a mobile communication system | |
US8266493B1 (en) | Low-density parity check decoding using combined check node and variable node | |
US7607075B2 (en) | Method and apparatus for encoding and decoding data | |
US7188297B2 (en) | Method and apparatus for encoding and decoding data | |
US7493548B2 (en) | Method and apparatus for encoding and decoding data | |
WO2007034870A1 (en) | Decoding device, and receiving device | |
Lee et al. | Multi-Mode QC-LDPC Decoding Architecture With Novel Memory Access Scheduling for 5G New-Radio Standard |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BLANKENSHIP, YUFEI W.;BLANKENSHIP, T. KEITH;CLASSON, BRIAN K.;REEL/FRAME:016494/0174Effective date: 20050419 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034500/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
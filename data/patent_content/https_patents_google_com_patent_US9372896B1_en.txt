US9372896B1 - Reverse engineering circumvention of spam detection algorithms - Google Patents
Reverse engineering circumvention of spam detection algorithms Download PDFInfo
- Publication number
- US9372896B1 US9372896B1 US14/090,098 US201314090098A US9372896B1 US 9372896 B1 US9372896 B1 US 9372896B1 US 201314090098 A US201314090098 A US 201314090098A US 9372896 B1 US9372896 B1 US 9372896B1
- Authority
- US
- United States
- Prior art keywords
- listing
- spam score
- spam
- boundary point
- listings
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000004422 calculation algorithm Methods 0.000 title abstract description 19
- 230000002441 reversible effect Effects 0.000 title abstract description 12
- 238000001514 detection method Methods 0.000 title description 8
- 238000000034 method Methods 0.000 claims description 26
- 230000000694 effects Effects 0.000 claims description 19
- 230000004044 response Effects 0.000 claims description 9
- 238000007493 shaping process Methods 0.000 claims description 2
- 238000007689 inspection Methods 0.000 abstract description 5
- 230000006870 function Effects 0.000 description 30
- 230000015654 memory Effects 0.000 description 15
- 238000012545 processing Methods 0.000 description 11
- 230000008569 process Effects 0.000 description 7
- 230000008859 change Effects 0.000 description 5
- 238000010586 diagram Methods 0.000 description 3
- 238000004519 manufacturing process Methods 0.000 description 3
- 230000007423 decrease Effects 0.000 description 2
- 238000002474 experimental method Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- RWSOTUBLDIXVET-UHFFFAOYSA-N Dihydrogen sulfide Chemical compound S RWSOTUBLDIXVET-UHFFFAOYSA-N 0.000 description 1
- 230000000903 blocking effect Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000004891 communication Methods 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 230000007774 longterm Effects 0.000 description 1
- 229940101532 meted Drugs 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 238000010606 normalization Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000001228 spectrum Methods 0.000 description 1
- 230000001629 suppression Effects 0.000 description 1
- 230000008685 targeting Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G06F17/3053—
Definitions
- Various network-based search applications allow a user to enter search terms and receive a list of search results. Such applications commonly use ranking algorithms to ensure that the search results are relevant to the user's query. For example, some systems rank such results based on reliability and safety of the search result, location of the user and search result, etc. These services may also provide business listings in response to a particular search query.
- the business listing search results may be displayed to a user such that the most relevant businesses may be easily identified.
- some businesses may employ methods to include multiple different listings to identify the same business. For example, a business may contribute a large number of listings for nonexistent business locations to a search engine, and each listing is provided with a contact telephone number that is associated with the actual business location. The customer may be defrauded by contacting or visiting an entity believed to be at a particular location only to learn that the business is actually operating from a completely different location. Such fraudulent marketing tactics are commonly referred to as “fake business spam”.
- search engine companies In order to provide users with correct information, search engine companies occasionally modify their ranking algorithms to attempt to identify and exclude fake business spam listings from results presented to end users. Many spammers continually monitor changes in search engine rankings for their fake listings to determine when ranking algorithm changes occur and what those changes are. By reverse engineering spam identification aspects of the ranking algorithm, spammers can determine how to modify their fake listings to avoid spam-catching ranking penalties. Given the large number of spammers doing this, it is difficult for search engines to prevail.
- a spam score value is assigned to a business listing when the listing is received at a search entity.
- the spam score may be between values of zero and one, where zero indicates that the listing is legitimate and one indicates that the listing is fraudulent.
- the spam score is then varied slightly by adding noise to the spam score. The amount of noise that is added is sufficient to affect spammer's attempts to reverse engineer spam-identification algorithms, but small enough so that the search experience of end users is minimally affected because the ranking of legitimate listings is unaffected.
- the listing In the event that the spam score is greater than a first threshold, the listing is identified as fraudulent and the listing is removed from or not included in the group of searchable business listings.
- the listing In the event that the spam score is greater than a second threshold that is less than the first threshold, the listing may be demoted such that the listing does not appear in response to a search as frequently or as highly rated as listings having spam scores that are less than the second threshold. The amount of demotion may be affected by the spam score such that listings that appear to be more likely spam are demoted more than other listings. Alternatively, the listing may be flagged for inspection such that the listing may be further analyzed to determine whether the listing is fraudulent. In the event that the spam score is less than the first and second thresholds, the corresponding listing is identified as legitimate. The listing is then included in the group of searchable listings such that the listing may be provided in response to a search with no change to its ranking.
- the amount by which the spam score is varied may change over time and may depend on an initial value of the spam score. Accordingly, spammers may not be able to easily reverse engineer the spam detection algorithms that are in place especially with regard to values corresponding to the first and second thresholds. The difficulty of deducing the effects of listing changes may increase greatly if those effects appear to be nondeterministic to spammers.
- a computer-implemented method includes receiving a listing to be included in a group of searchable listings. Using a processor, a spam score is assigned to the listing and the spam score is varied. In the event that the spam score is larger than a first threshold, the listing is removed from or not including the listing in the group of searchable listings.
- a computer-implemented method includes receiving a listing to be included in a group of searchable listings. Using a processor, a spam score value is assigned to the listing. Noise is added to the spam score value using the processor. In the event that the spam score value is larger than a first threshold, the listing is identified as potential spam.
- a computer-implemented method for circumventing the reverse engineering of a spam detection algorithm includes receiving a listing to be included in a group of searchable listings.
- a spam score is assigned to the listing using a processor.
- the spam score indicates a likelihood that the listing is legitimate.
- the spam score is varied by adding noise to the spam score using the processor.
- the spam score value is larger than a second threshold, the listing is identified as potential spam. The second threshold is less than the first threshold.
- FIG. 1 is a functional diagram of a system in accordance with an example embodiment.
- FIG. 2 is a pictorial diagram of the system of FIG. 1 .
- FIG. 3 is an exemplary flow diagram in accordance with an example embodiment.
- FIG. 4 illustrates a spam score variation function in accordance with an example embodiment.
- FIG. 5 illustrates a spam score variation function in accordance with an example embodiment.
- the present disclosure is directed to the addition of noise to spam scores to circumvent the reverse engineering of algorithms that seek to identify fraudulent business listings.
- a search entity receives new business listings to be added to a searchable group of listings on a regular basis.
- Each listing is processed to associate the listing with a spam score value that identifies a likelihood that the listing is fraudulent.
- the spam score is between zero and one, where a score close to one indicates that the listing is likely spam and a score close to zero indicates that the listing is likely legitimate.
- the listing In cases where the listing is identified as likely being a fake business listing, different penalties are assigned to the listing based on the spam score value. For example, in the event that the spam score is greater than 0.95, the listing may be removed from the searchable group of listings because there is a strong likelihood that the listing is spam. In the event that the spam score is between 0.5 and 0.95, the listing may or may not actually be a fake business listing. In this case, the listing may not be removed from the group of searchable listings; but since the spam score indicates a likelihood that the listing is not legitimate, the listing may be demoted such that, for example, it does not appear as frequently or as highly rated in search results as other similarly situated business listings. If the spam score is less than 0.5, the listing may not be subject to any penalty.
- Spammers frequently perform experiments by submitting fake data to a search entity and determining the result of a search targeting the fake data.
- a spammer may provide the search entity with different “spammy” listings that are each slightly different from each other. The listings are then targeted in a search by the spammer to determine which listings went essentially undetected by the spam identifying algorithms and are treated as legitimate, and which listings were determined by the search entity to be spam.
- Spammers also examine the order of results for searches for their own listings to determine which listings have been demoted, and to measure the relative demotion that occurs as a function of various features of those listings. This allows spammers to determine which listing features cause demotion (and how much) and which features are ignored by the spam scoring system. Accordingly, spammers can attempt to circumvent spam filters in order to have fake business listings appear as un-demoted search results.
- spam scores are varied slightly using a noise function.
- the spam score may not be varied too much because some “spammy” listings may avoid being penalized.
- the spam score variation may occur discretely such as whenever a search index is copied to production search machines. Spammers submit listings, wait for the search entity to copy an index and, based on the search results, attempt to decipher the result of the spam filter.
- the addition of noise to spam scores may cause spammers to be continually frustrated by the outcome of their experiments.
- An index is a set of data files underlying a search engine.
- the index may include listings from businesses that have submitted a listing to be added to the group of searchable listings.
- the index is organized so that the listings can be produced in response to a search based on the terms in each listing.
- a new index may be built every few weeks and then copied to production search machines, replacing the previous index data. Building the index includes (a) collecting data associated with the group of searchable listings, (b) merging duplicate and near-duplicate information, and removing any identifiable incorrect information, and (c) building the index structure such that listings can be located in response to the submission of search terms.
- Spam filtering may occur at any one of three different times: 1) at the beginning of the indexing process, where listings that are obviously spam are removed; 2) near the end of the indexing process, where the listings are analyzed more thoroughly to judge whether or not the listing is spam; or 3) in an update stream, which is a separate process that receives updates in real time from users and applies the updates to an output index that is used in place of a former index.
- the index data may be processed to identify spam near the end of the index generation process before the index is copied to the production machines. Any spam listings are demoted, are flagged for inspection, or are removed so that they not included in the group of searchable listings.
- the noise may be added to the spam score of a listing before a decision is made whether to drop or demote the listing because: (a) if the listing is going to be demoted, the noise should be allowed to affect the amount of demotion or to push the listing over the drop threshold causing the listing to be dropped, or (b) if the listing is going to be dropped, the spam score is pushed over the demote threshold with small probability, causing the listing to be demoted.
- the noise function is shaped to identify an amount for the small probability. In some embodiments, the noise addition is performed as late in the process as possible to make coding easier.
- a system 100 in accordance with example embodiments includes a computer 110 containing a processor 120 , memory 130 and other components typically present in general purpose computers.
- the memory 130 stores information accessible by the processor 120 , including instructions 132 and data 134 that may be executed or otherwise used by the processor 120 .
- the memory 130 may be of any type capable of storing information accessible by the processor 120 , including a computer-readable medium, or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, flash drive, ROM, RAM, DVD or other optical disks, as well as other write-capable and read-only memories.
- memory may include short term or temporary storage as well as long term or persistent storage.
- Systems and methods may include different combinations of the foregoing, whereby different portions of the instructions and data are stored on different types of media.
- the instructions 132 may be any set of instructions to be executed directly (such as machine code) or indirectly (such as scripts) by the processor.
- the instructions may be stored as computer code on the computer-readable medium.
- the terms “instructions” and “programs” may be used interchangeably herein.
- the instructions may be stored in object code format for direct processing by the processor, or in any other computer language including scripts or collections of independent source code modules that are interpreted on demand or compiled in advance. Functions, methods and routines of the instructions are explained in more detail below.
- the data 134 may be retrieved, stored or modified by the processor 120 in accordance with the instructions 132 .
- the data may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, etc.
- the data may also be formatted in any computer-readable format.
- image data may be stored as bitmaps comprised of grids of pixels that are stored in accordance with formats that are compressed or uncompressed, lossless or lossy, and bitmap or vector-based, as well as computer instructions for drawing graphics.
- the data may comprise any information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, references to data stored in other areas of the same memory or different memories (including other network locations) or information that is used by a function to calculate the relevant data.
- Data 134 of server 110 may include data 136 corresponding to spam score algorithms, spam score thresholds and noise functions to be added to spam scores, which are described in detail below.
- the processor 120 may be any conventional processor, such as a CPU for a personal computer. Alternatively, the processor 120 may be a dedicated controller such as an ASIC.
- FIG. 1 functionally illustrates the processor 120 and memory 130 as being within the same block, it will be understood by those of ordinary skill in the art that the processor and memory may actually comprise multiple processors and memories that may or may not be stored within the same physical housing.
- memory may be a hard drive or other storage media located in a server farm of a data center. Accordingly, references to a processor, a computer or a memory will be understood to include references to a collection of processors or computers or memories that may or may not operate in parallel.
- the computer 110 may be at one node of a network 150 and capable of directly and indirectly receiving data from other nodes of the network.
- computer 110 may comprise a web server that is capable of receiving data from client devices 160 , 170 via network 150 such that server 110 uses network 150 to transmit and display information to a user on display 165 of client device 160 .
- Server 110 may also comprise a plurality of computers that exchange information with different nodes of a network for the purpose of receiving, processing and transmitting data to the client devices 160 , 170 . In this instance, the client devices 160 , 170 will typically still be at different nodes of the network than any of the computers comprising server 110 .
- Network 150 may comprise various configurations and use various protocols including the Internet, World Wide Web, intranets, virtual private networks, local Ethernet networks, private networks using communication protocols proprietary to one or more companies, cellular and wireless networks (e.g., Wi-Fi), instant messaging, HTTP and SMTP, and various combinations of the foregoing.
- cellular and wireless networks e.g., Wi-Fi
- instant messaging HTTP and SMTP, and various combinations of the foregoing.
- Each client device 160 may be configured similarly to the server 110 , with a processor, memory and instructions as described above.
- Each client device 160 may be a personal computer intended for use by a person, and have all of the components normally used in connection with a personal computer such as a central processing unit (CPU) 162 , memory (e.g., RAM and internal hard drives) storing data 163 and instructions 164 , an electronic display 165 (e.g., a monitor having a screen, a touch-screen, a projector, a television, a computer printer or any other electrical device that is operable to display information), and user input 166 (e.g., a mouse, keyboard, touch-screen or microphone).
- the client device 160 may also include a camera 167 , geographical position component 168 , accelerometer, speakers, a network interface device, a battery power supply 169 or other power source, and all of the components used for connecting these elements to one another.
- FIG. 3 demonstrates a process 300 of adding noise to spam scores to circumvent the reverse engineering of spam detection algorithms.
- the process begins when a business listing is received at a search entity from a business that wants to have their listing included in a group of searchable business listings (block 310 ).
- the business may desire to increase traffic to a website or otherwise attract potential customers.
- Some of the listings that are received may be fraudulent such as those listings that may be identified as “fake business spam” that are submitted in an unscrupulous attempt to increase customer traffic.
- a spam score is assigned to each listing (block 320 ).
- the spam score may be between values of zero and one, where zero indicates that the listing is legitimate and one indicates that the listing is fraudulent.
- the spam score may be based on any number of factors or combinations of factors. Example factors include the geographic density of businesses in the same category, repeated identifying information in different listings, and ratios of common terms in the business listing title to total words in the title. It is understood that the spam score may be based on any number of known methods for determining whether a listing is fraudulent.
- the spam score is varied (block 330 ).
- the spam score may be varied by adding a noise function to the spam score.
- the variations in the spam score especially at specific boundaries on the spam score spectrum, lead to the difficulty in spammers being able to reverse engineer spam detection algorithms.
- the noise function and its application to the spam score are described in detail below with reference to FIGS. 4 and 5 .
- the first threshold is desirably set at a value that is closer to 1 than 0.5 such that spam scores that are higher than the first threshold are determined to be likely fraudulent. In some embodiments, the first threshold is set at about 0.8.
- processing proceeds to block 350 .
- the listing is identified as fraudulent, and the listing is not included in (or removed from) the group of searchable business listings. Processing then terminates.
- processing proceeds to block 360 .
- a determination is made whether the spam score is higher than a second threshold.
- the second threshold is set at a value that is less than the first threshold such that a spam score that is higher than the second threshold but less than the first threshold is identified as corresponding to a listing that may or may not be fraudulent. In some embodiments, the second threshold is set at about 0.6.
- processing continues to block 370 .
- the corresponding listing may be demoted such that the listing does not appear in response to a search as frequently or as highly rated as listings having spam scores that are less than the second threshold.
- the listing may be flagged for inspection such that the search entity may analyze the listing to determine a likelihood that the listing is fraudulent. Processing then terminates.
- processing continues to block 380 .
- the corresponding listing is identified as legitimate.
- the listing is then included in the group of searchable listings such that the listing may be provided in response to a search. Processing then terminates.
- an algorithm or combination of algorithms are used to provide each listing with a spam score value between 0.0 and 1.0, where 0.0 identifies the listing as likely legitimate and 1.0 identifies the listing as fraudulent.
- Function B(x) is a function that defines a maximum amount of noise added to any given spam score. For example, if a listing has a spam score of 0.7, the value of the bound function B(0.7) may be 0.08. Accordingly, the maximum amount of noise that is applied to the listing is 0.08 such that the final spam score for this listing is between 0.62 and 0.78.
- Function B(x) maps [0, 1] to [0, 1] such that the input to the function B(x) is a value between 0 and 1 inclusive, and the output of the function B(x) is a value between 0 and 1 inclusive.
- Function B(x) receives a spam score as input in the range of 0.0-1.0 inclusive, and outputs a spam score value in the range of 0.0-1.0 inclusive, where: B ( x ) ⁇ x Eq. 1 B ( x ) ⁇ 1 ⁇ x Eq. 2
- a limit value (L) is defined to be a maximum amount of noise applied to a listing's spam score.
- K L/0.0625.
- R may be a simple random number generator, or “R” may be a normalization of a hash of contents of “z” along with, for example, the date or the name of the index being built. This definition ensures that: ⁇ B ( S ( z )) ⁇ N ( z ) ⁇ B ( S ( z )) Eq. 5
- S′ also produces spam scores that can be used in place of S with no change to any other software component in the system.
- the ultimate goal of any spam detection system is to penalize “spammy” content.
- Content is penalized by implementing various penalties according to the spam score a listing has garnered. Since there are only a finite number of different penalties than can be meted out (e.g., suppression of the listing, lowering the listing's prominence in search results, or doing nothing to the listing), there is a small number of key points on the continuum of spam scores, namely, the points that separate regions that incur different penalties.
- the two interesting points would be at 0.6 (the boundary between doing nothing and demotion) and 0.8 (the boundary between demotion and blocking).
- the addition of noise to a spam score proximate to a boundary point may cause a corresponding listing having a spam to receive a score that is on the opposite side of the boundary, thereby receiving an inaccurate penalty.
- the first effect is that a listing on one side of a boundary point may receive enough noise to change the spam score value such that the value changes to the other side of the boundary point, giving the listing a different penalty.
- the second effect is that some penalties are parameterized by the spam score, so the noise changes the amount of the penalty. For example, listings with bigger spam scores may be demoted more than listings with lesser spam scores. Both of these outcomes will confuse spammers. Independent control may be gained over the two outcomes to make sure that legitimate listings are not penalized in an attempt to confound spammers.
- S′(z) is close to the value of S(z) for any listing z.
- the values of S(z) and S′(z) differ by at most B(z), which is smaller than L. For most listings, if S causes z to be dropped, S′ will also cause z to be dropped; and if S causes z to be demoted, S′ will also cause z to be demoted. Because of the “noise” added, some listings are treated differently than they otherwise would be treated (e.g., demoted instead of dropped, or vice-versa). Demotion amounts may change slightly.
- B′(x) as defined in Eq. 12 instead of the original B(x) increases the effect (e.g., allows more noise) proximate to 0.6, and decreases the effect (e.g., suppresses more noise) proximate to 0.8, as shown in FIG. 5 .
- Eq. 12 The values of “2000” and “5000” in Eq. 12 affect the steepness of the modification “bumps”, and depend on where along the curve the corresponding “bump” occurs.
- the values of “0.6” and “0.8” indicate the boundary points. Each instance of 0.9 either removes 90% from or adds 90% to the noise at the corresponding boundary point. All of the values in Eq. 12 are configurable to achieve the effect desired. In general, to increase the amount of noise by a factor of X at spam score Y with steepness Z, an additional multiplicative term is added to the denominator of Eq. 12 of the form: 1+ e ⁇ XZ(X-Y) 2
- a spam score value is assigned to a business listing when the listing is received at a search entity.
- a noise function is added to the spam score such that the spam score is varied.
- the spam score is greater than a first threshold
- the listing is identified as fraudulent and the listing is not included in (or is removed from) the group of searchable business listings.
- the spam score is greater than a second threshold that is less than the first threshold
- the listing may be flagged for inspection.
- the spam score is less than the first and second thresholds, the corresponding listing is identified as legitimate.
- the addition of the noise to the spam scores prevents potential spammers from reverse engineering the spam detecting algorithm such that more “spammy” listings that are submitted to the search entity may be identified as fraudulent and not included in the group of searchable listings.
Abstract
Description
B(x)≦x Eq. 1
B(x)≦1−x Eq. 2
B(x)=K*(x−x 2)2 Eq. 3
for some choice of K that ensures that the properties of Eqs. 1 and 2 are fulfilled.
N(z)=B(S(z))*R(z) Eq. 4
−B(S(z))≦N(z)≦B(S(z)) Eq. 5
−S(z)≦−B(S(z))≦N(z)≦B(S(z))≦S(z) Eq. 6
S′(z)=S(z)+N(z), Eq. 7
where function S′(z) has the following properties:
0≦S′(z)≦1 Eq. 8
S(z)−L≦S′(z)≦S(z)+L Eq. 9
When S(z)=0, S′(z)=0 Eq. 10
When S(z)=1, S′(z)=1 Eq. 11
1+e −XZ(X-Y)
1−e −XZ(X-Y)
Claims (20)
B(x)=K*(x−x 2)2,
B(x)=K*(x−x 2)2,
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/090,098 US9372896B1 (en) | 2011-09-27 | 2013-11-26 | Reverse engineering circumvention of spam detection algorithms |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/246,363 US8612436B1 (en) | 2011-09-27 | 2011-09-27 | Reverse engineering circumvention of spam detection algorithms |
US14/090,098 US9372896B1 (en) | 2011-09-27 | 2013-11-26 | Reverse engineering circumvention of spam detection algorithms |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/246,363 Continuation US8612436B1 (en) | 2011-09-27 | 2011-09-27 | Reverse engineering circumvention of spam detection algorithms |
Publications (1)
Publication Number | Publication Date |
---|---|
US9372896B1 true US9372896B1 (en) | 2016-06-21 |
Family
ID=49725873
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/246,363 Active 2032-01-11 US8612436B1 (en) | 2011-09-27 | 2011-09-27 | Reverse engineering circumvention of spam detection algorithms |
US14/090,098 Active 2032-10-02 US9372896B1 (en) | 2011-09-27 | 2013-11-26 | Reverse engineering circumvention of spam detection algorithms |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/246,363 Active 2032-01-11 US8612436B1 (en) | 2011-09-27 | 2011-09-27 | Reverse engineering circumvention of spam detection algorithms |
Country Status (1)
Country | Link |
---|---|
US (2) | US8612436B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2022066264A1 (en) * | 2020-09-22 | 2022-03-31 | Ebay Inc. | Counterfeit item detection system |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10229219B2 (en) | 2015-05-01 | 2019-03-12 | Facebook, Inc. | Systems and methods for demotion of content items in a feed |
EP3185555B1 (en) * | 2015-12-23 | 2023-07-05 | Université de Genève | Image compression method with negligible and quantifiable information loss and high compression ratio |
EP3270549B1 (en) * | 2016-07-15 | 2020-06-24 | Bics Sa/Nv | A method and device for spam sms detection |
CN109460508B (en) * | 2018-10-10 | 2021-10-15 | 浙江大学 | Efficient spam comment user group detection method |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050015454A1 (en) | 2003-06-20 | 2005-01-20 | Goodman Joshua T. | Obfuscation of spam filter |
US20050251496A1 (en) | 2002-05-24 | 2005-11-10 | Decoste Dennis M | Method and apparatus for categorizing and presenting documents of a distributed database |
US20080222725A1 (en) | 2007-03-05 | 2008-09-11 | Microsoft Corporation | Graph structures and web spam detection |
US20100094868A1 (en) | 2008-10-09 | 2010-04-15 | Yahoo! Inc. | Detection of undesirable web pages |
US20100223250A1 (en) | 2005-08-10 | 2010-09-02 | Google Inc. | Detecting spam related and biased contexts for programmable search engines |
US7831667B2 (en) | 2003-05-15 | 2010-11-09 | Symantec Corporation | Method and apparatus for filtering email spam using email noise reduction |
US20120041846A1 (en) | 2010-08-13 | 2012-02-16 | Ebay Inc. | Seller conversion factor to ranking score for presented item listings |
US20120268269A1 (en) | 2011-04-19 | 2012-10-25 | Qualcomm Incorporated | Threat score generation |
-
2011
- 2011-09-27 US US13/246,363 patent/US8612436B1/en active Active
-
2013
- 2013-11-26 US US14/090,098 patent/US9372896B1/en active Active
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050251496A1 (en) | 2002-05-24 | 2005-11-10 | Decoste Dennis M | Method and apparatus for categorizing and presenting documents of a distributed database |
US7831667B2 (en) | 2003-05-15 | 2010-11-09 | Symantec Corporation | Method and apparatus for filtering email spam using email noise reduction |
US20050015454A1 (en) | 2003-06-20 | 2005-01-20 | Goodman Joshua T. | Obfuscation of spam filter |
US7519668B2 (en) * | 2003-06-20 | 2009-04-14 | Microsoft Corporation | Obfuscation of spam filter |
US20100223250A1 (en) | 2005-08-10 | 2010-09-02 | Google Inc. | Detecting spam related and biased contexts for programmable search engines |
US20080222725A1 (en) | 2007-03-05 | 2008-09-11 | Microsoft Corporation | Graph structures and web spam detection |
US20100094868A1 (en) | 2008-10-09 | 2010-04-15 | Yahoo! Inc. | Detection of undesirable web pages |
US20120041846A1 (en) | 2010-08-13 | 2012-02-16 | Ebay Inc. | Seller conversion factor to ranking score for presented item listings |
US20120268269A1 (en) | 2011-04-19 | 2012-10-25 | Qualcomm Incorporated | Threat score generation |
Non-Patent Citations (4)
Title |
---|
B. Wu, V. Goel, and B. Davison. Propagating trust and distrust to demote web spam. In MTW'06: Proceeding of Models of Trust for the Web Workshop, International World Wide Web Conference, 2006. Retrieved on Feb. 22, 2013 from http://www.cse.lehigh.edu/~brian/pubs/2006/MTW/propagating-trust.pdf. |
B. Wu, V. Goel, and B. Davison. Propagating trust and distrust to demote web spam. In MTW'06: Proceeding of Models of Trust for the Web Workshop, International World Wide Web Conference, 2006. Retrieved on Feb. 22, 2013 from http://www.cse.lehigh.edu/˜brian/pubs/2006/MTW/propagating-trust.pdf. |
Index of /~brian/pubs/2006. Verification of 2006 publication date of Wu Non-Patent Literature. Retrieved on Feb. 22, 2013 from http://www.cse.lehigh.edu/~brian/pubs/2006/. |
Index of /˜brian/pubs/2006. Verification of 2006 publication date of Wu Non-Patent Literature. Retrieved on Feb. 22, 2013 from http://www.cse.lehigh.edu/˜brian/pubs/2006/. |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2022066264A1 (en) * | 2020-09-22 | 2022-03-31 | Ebay Inc. | Counterfeit item detection system |
US11507962B2 (en) | 2020-09-22 | 2022-11-22 | Ebay Inc. | Counterfeit item detection system |
Also Published As
Publication number | Publication date |
---|---|
US8612436B1 (en) | 2013-12-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10887177B2 (en) | Calculating trust scores based on social graph statistics | |
EP3616096B1 (en) | Anomaly and causation detection in computing environments | |
US10735285B2 (en) | Systems and methods for identifying and mitigating outlier network activity | |
US9372896B1 (en) | Reverse engineering circumvention of spam detection algorithms | |
TWI727202B (en) | Method and system for identifying fraudulent publisher networks | |
US10846600B1 (en) | Methods, systems, and media for identifying errors in predictive models using annotators | |
US8413250B1 (en) | Systems and methods of classifying sessions | |
US20140297403A1 (en) | Social Analytics System and Method for Analyzing Conversations in Social Media | |
US8838512B2 (en) | Random walk on query pattern graph for query task classification | |
KR20160113685A (en) | Method, apparatus and system for content recommendation | |
Feng et al. | Vulnerabilities and countermeasures in context-aware social rating services | |
CN103530416A (en) | Project data forecasting grading library generating and project data pushing method and project data forecasting grading library generating and project data pushing system | |
US20160239888A1 (en) | Systems and methods for verifying compliance in an electronic marketplace | |
EP4174748A1 (en) | Systems and methods for recommendation of items and controlling an associated bias thereof | |
Liu et al. | Mitigating popularity bias for users and items with fairness-centric adaptive recommendation | |
Krokos et al. | A look into twitter hashtag discovery and generation | |
US8688417B2 (en) | Detecting impact of extrinsic events on a time series | |
US10530889B2 (en) | Identifying member profiles containing disallowed content in an online social network | |
Liu et al. | Trending topic prediction on social network | |
CN114490833B (en) | Method and system for visualizing graph calculation result | |
CN115048483A (en) | Information management system | |
JP5118707B2 (en) | Search log misuse prevention method and apparatus | |
CN112541669A (en) | Risk identification method, system and device | |
Zulfikar et al. | Comparison performance of decision tree classification model for spam filtering with or without the recursive feature elimination (rfe) approach | |
Alben | When artificial intelligence and big data collide—How data aggregation and predictive machines threaten our privacy and autonomy |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GRUNDMAN, DOUGLAS RICHARD;REEL/FRAME:031684/0052Effective date: 20110926 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
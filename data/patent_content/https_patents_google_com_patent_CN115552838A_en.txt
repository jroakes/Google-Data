CN115552838A - Protecting confidential information using multiparty computing and K-anonymization techniques - Google Patents
Protecting confidential information using multiparty computing and K-anonymization techniques Download PDFInfo
- Publication number
- CN115552838A CN115552838A CN202180034297.1A CN202180034297A CN115552838A CN 115552838 A CN115552838 A CN 115552838A CN 202180034297 A CN202180034297 A CN 202180034297A CN 115552838 A CN115552838 A CN 115552838A
- Authority
- CN
- China
- Prior art keywords
- identifier
- computing system
- user group
- request
- selection parameter
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0407—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the identity of one or more communicating identities is hidden
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0407—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the identity of one or more communicating identities is hidden
- H04L63/0421—Anonymous communication, i.e. the party's identifiers are hidden from the other party or parties, e.g. using an anonymizer
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/0819—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s)
- H04L9/0825—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s) using asymmetric-key encryption or public key infrastructure [PKI], e.g. key signature or public key certificates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
- G06F21/6254—Protecting personal data, e.g. for financial or medical purposes by anonymising data, e.g. decorrelating personal data from the owner's identification
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/42—Anonymization, e.g. involving pseudonyms
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/46—Secure multiparty computation, e.g. millionaire problem
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2463/00—Additional details relating to network architectures or network communication protocols for network security covered by H04L63/00
- H04L2463/121—Timestamp
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
- H04L63/0442—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload wherein the sending and receiving network entities apply asymmetric encryption, i.e. different keys for encryption and decryption
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
- H04L63/0478—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload applying multiple layers of encryption, e.g. nested tunnels or encrypting the content with a first key and then with at least a second key
Abstract
The present disclosure relates to protecting confidential information of multiple entities using secure multi-party computing (MPC) and k-anonymization techniques. In some aspects, a method comprises: a content request including an encrypted user group identifier is received by a first MPC computing system from a client device. Each encrypted user group identifier is encrypted using a first encryption key of the second MPC computing system. For each encrypted user group identifier, transmitting a request to the second MPC computing system. The request includes an encrypted user group identifier. For each user group identifier that satisfies k-anonymity, the first MPC computing system receives a plaintext value for the user group identifier from the second MPC computing system. The first MPC computing system transmits a selection parameter request to one or more platforms. The selection parameter request includes a clear text value of the user group identifier.
Description
Cross Reference to Related Applications
The present application claims priority from israeli application No. 276440, filed on 8/2/2020. The disclosures of the aforementioned applications are hereby incorporated by reference herein in their entirety.
Background
Multi-party computing is an encryption technique that distributes computing across multiple parties so that the parties cannot access the data of the other parties. k-anonymization techniques may be used to ensure that the data for each member of the group is anonymous. For data with k-anonymous attributes, the data for a member cannot be distinguished from the data of k-1 other members in the group.
Disclosure of Invention
This specification describes technologies relating to protecting confidential information for multiple entities using multi-party computing (MPC) and k-anonymization techniques.
In general, one innovative aspect of the subject matter described in this specification can be embodied in methods that include receiving, by a first multi-party computing (MPC) computing system, a content request from a client device that includes a set of encrypted user group identifiers, where each encrypted user group identifier is encrypted using a first encryption key of a second MPC computing system; for each encrypted user group identifier, transmitting a request to the second MPC computing system, the request including the encrypted user group identifier; for each user group identifier that satisfies the k-anonymization procedure performed by the second MPC computing system: receiving, by the first MPC computing system, a clear text value for the user group identifier from the second MPC computing system; and transmitting, by the first MPC computing system, a selection parameter request to the one or more platforms, the selection parameter request including a plaintext value for the user group identifier; receiving, by the first MPC computing system, a set of selection parameter elements from the second MPC computing system, the set of selection parameter elements each including a creative element of a corresponding digital part and a selection parameter identifier of the digital part; selecting, by the first MPC computing system, the given digital component based on the selection parameter identifier; and transmitting, by the first MPC computing system to the client device, the creative element for the digital part. Other embodiments of this aspect include corresponding apparatus, systems, and computer programs configured to perform aspects of the described methods encoded on computer storage devices.
These and other embodiments may each optionally include one or more of the following features. In some aspects, the content request includes a resource locator of a resource that is requesting the digital part. Some aspects may include: the method also includes generating, by the first MPC computing system, a request identifier based on the resource locator and a random number corresponding to the content request, and encrypting, by the first MPC computing system, the request identifier. The request may include an encrypted request identifier.
In some aspects, receiving a plaintext value for each user group identifier that satisfies the k-anonymization process may include receiving a return request for each user group identifier that satisfies the k-anonymization process. Each return request may include a user group identifier and a twice encrypted request identifier generated by the second MPC computing system by encrypting the encrypted request identifier using the second encryption key of the second MPC computing system. Each selection parameter request may include a twice encrypted request identifier. Each selection parameter element may include an encrypted request identifier generated by the second MPC computing system by decrypting the twice-encrypted request identifier after receiving the twice-encrypted request from the platform and the selection parameter identifiers of the creative element and the selection parameter element.
In some aspects, the second MPC computing system receives a selection parameter response from each of the one or more platforms, the selection parameter response including the secondary encryption request identifier, the respective creative element for the respective digital part, the selection parameter for the respective digital part, and a digital part provider identifier that published the respective digital part. The second MPC computing system identifies, for each selection parameter response, a corresponding selection parameter identifier based on a range of selection parameter values for the selection parameter including the selection parameter. The second MPC computing system generates a selection parameter element based on the selection parameter response and the selection parameter identifier.
In some aspects, the content request includes an encrypted composite message for each user group identifier. The encrypted composite message may include: an encrypted version of the composite message, the encrypted version of the composite message including a user group identifier; an application public key for an application of the client device initiating the content request; and a signed redemption record issued by the trust token issuer in response to determining that the client device is trusted.
In some aspects, the content request includes a context signal. Some aspects may include determining that the context signal satisfies k-anonymity. In response to determining that the context signals satisfy k-anonymity, the first MPC computing system encrypts the context signals. The first MPC computing system includes each context signal in the request that satisfies k-anonymity.
Some aspects may include identifying a first set of attributes for a corresponding digital part in each creative element, and identifying a second set of excluded attributes in a lookup table that are excluded by a publisher of the resource. Selecting, by the first MPC computing system, the given digital component based on the selection parameters may comprise: for each creative element, it is determined whether one or more attributes in the first set of attributes of the creative element match the excluded attributes, and each creative element having at least one attribute matching the excluded attributes is excluded.
In some aspects, selecting, by the first MPC computing system, the given digital component based on the selection parameter identifier may comprise: for each selection parameter element, identifying a shared code of the creative element of the selection parameter element in a first lookup table based on the resource locator of the resource and the digital part identifier of the digital part provider that published the corresponding digital part of the creative element; identifying in a second lookup table an issuer return identifier based on the shared code and a selection parameter identifier of the selection parameter element; and selecting as the given digital part the digital part of the given selection parameter element having the highest publisher return identifier.
In some aspects, transmitting, by the first MPC computing system to the client device, the creative element for the digital part may comprise transmitting a content request result comprising the creative element, a publisher return identifier for the given selection parameter element, a digital part provider identifier for the given digital part, a timestamp indicating a time at which the given digital part was selected, and a digital signature.
In some aspects, the client device transmits a second content request to the second platform. The second content request result may include a content result request and additional context signals. The second platform selects a second digital component from among a set of digital components for presentation at the client device, the set of digital components including the given digital component and one or more digital components selected based on the additional contextual signals.
The subject matter described in this specification can be implemented in particular embodiments to realize one or more of the advantages. Performing the content selection process using MPC and k-anonymization techniques prevents confidential information (e.g., personal information) of entities participating in the process from being revealed to other entities and prevents confidential information necessary for performing the process from being shared between the entities. The techniques described in this document partition the operation of confidential information and processes into different computing systems to ensure that if one entity's computer is compromised, the amount of confidential information that can be accessed is minimized or at least reduced relative to other techniques.
The MPC technique described in this document uses multiple look-up tables maintained by multiple computing systems participating in the MPC process to protect the confidentiality of the information in the tables. The tables may include code in place of the actual data so that the computing systems participating in the MPC process do not have access to the underlying data, but may still use the code to perform the operations of the process. Using code instead of actual data can protect data even if the data is compromised, e.g., stolen or leaked to another entity. Using the lookup table and code in this manner reduces the computational burden on the computing system used to implement the MPC process relative to the encryption techniques required to protect the data (e.g., homomorphic encryption techniques). This reduces the necessary Central Processing Unit (CPU) cycles necessary to perform the process (e.g., by not having to encrypt and decrypt large amounts of data), reduces the latency of performing processes that are critical to the implementation for selecting content to provide to and present on the user device, and makes the overall process more efficient.
Reducing the latency of content delivery may also reduce the number of errors that occur when a user device waits for such content to arrive. Because content typically needs to be provided to a mobile device connected through a wireless network in a few milliseconds, reducing the latency of selecting and providing content is critical to preventing errors and reducing user frustration. Batch processing techniques may also be used to reduce computational requirements (e.g., to handle a larger number of individual requests) and reduce bandwidth consumption of a network of computing systems connecting various entities.
Using the combination of MPC, k-anonymity, probabilistic encryption, and lookup tables described in this document provides a synergistic effect of protecting the data privacy of each of the entities involved in requesting content, providing candidate content and selection parameters for candidate content for potential selection, selecting content, and providing content for presentation. This includes protecting the confidentiality of user data of the user to whom the content is provided, the confidentiality of selection parameters submitted by the platform (e.g., DSP) for candidate content, and the manner in which the platform (e.g., SSP) selects the content.
Various features and advantages of the foregoing subject matter are described below with reference to the drawings. Additional features and advantages will be apparent from the subject matter described herein and in the claims.
Drawings
FIG. 1 is a block diagram of an environment for distributing content to client devices.
FIG. 2 is a swim lane diagram (swim lane diagram) illustrating an example process for selecting and providing content to a client device.
FIG. 3 is a swim lane diagram illustrating an example process for selecting content.
FIG. 4 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
In general, this document describes systems that employ MPC, k-anonymization techniques, and other types of encryption to prevent the sharing or leakage of confidential information for each entity involved in the selection and distribution of electronic content to client devices. Digital signature techniques may also be used to detect and prevent fraud in data transmissions.
FIG. 1 is a block diagram of an environment 100 for distributing content to client devices 110. The example environment 100 includes a data communication network 105, such as a Local Area Network (LAN), a Wide Area Network (WAN), the internet, a mobile network, or a combination thereof. Network 105 connects client devices 110, MPC cluster 130, demand Side Platform (DSP) 150, supply Side Platform (SSP) 170, publisher 140, and website 142. Example environment 100 may include many different client devices 110, MPC clusters 130, DSPs 150, SSPs 170, publishers 140, and websites 142.
The client device 110 is an electronic device capable of communicating over the network 105. Example client devices 110 include personal computers, mobile communication devices, such as smart phones, and other devices that can send and receive data over the network 105. Client devices may also include digital assistant devices that accept audio input through a microphone and output audio output through a speaker. When the digital assistant detects a "hot word" or "hot phrase" that activates the microphone to accept audio input, the digital assistant may be placed in a listening mode (e.g., ready to accept audio input). The digital assistant device may also include a camera and/or a display to capture images and visually present information. The digital assistant may be implemented in different forms of hardware devices, including a wearable device (e.g., a watch or glasses), a smartphone, a speaker device, a tablet device, or another hardware device. The client device may also include a digital media device, such as a streaming device that plugs into a television or other display to stream video to the television.
The client device 110 typically includes an application 112, such as a web browser and/or a native application, to facilitate sending and receiving data over the network 105. A native application is an application developed for a particular platform or a particular device (e.g., a mobile device with a particular operating system). The publisher 140 may develop and provide (e.g., make available for download) the local application to the client device 110. For example, in response to a user of the client device 110 entering a resource address of the resource 145 in an address bar of a web browser or selecting a link referencing the resource address, the web browser can request the resource 145 from a web server hosting the publisher's 140 website 142. Similarly, the local application may request application content from a remote server of the publisher.
Some resources, application pages, or other application content may include a digital part slot for rendering a digital part having a resource 145 or application page. As used throughout this document, the phrase "digital component" refers to a discrete unit of digital content or digital information (e.g., a video clip, an audio clip, a multimedia clip, an image, text, or another unit of content). The digital parts may be electronically stored in the physical memory device as a single file or collection of files, and the digital parts may take the form of video files, audio files, multimedia files, image files, or text files, and include advertising information such that the advertisement is one type of digital part. For example, the digital component may be content intended to supplement the content of a web page or other resource presented by the application 112. More specifically, the digital part may include digital content related to the resource content (e.g., the digital part may relate to the same subject matter as the web page content, or a related subject matter). Thus, the provision of digital components may supplement and generally enhance the web page or application content.
When application 112 loads a resource (or application content) that includes one or more digital part slots, application 112 may request a digital part for each slot. In some implementations, the digital part slots can include code (e.g., scripts) that cause the application 112 to request digital parts from a digital parts distribution system that selects and provides the digital parts to the application 112 for presentation to a user of the client device 110.
Some publishers 140 use SSP170 to manage the process of obtaining digital parts for their digital part slots of resources and/or applications. SSP170 is a hardware and/or software implemented technology platform that automates the process of obtaining digital components of resources and/or applications. SSP170 can interact with one or more DSPs 150 to obtain information that can be used to select digital parts for a digital parts slot. As described in more detail below, this information may include a selection parameter indicating a number of digital parts that digital part provider 160 is willing to provide to publisher 140 for presentation of digital part provider 160. Each publisher 140 may have a corresponding SSP170 or SSPs 170. Some publishers 140 may use the same SSP170.
The manner in which the SSP170 selects digital parts and the manner in which the DSP150 allocates digital parts (e.g., generates selection parameters and/or the selection parameters themselves) typically includes secret information that should not be shared with other parties. The techniques described in this document protect this information from being shared or leaked to other parties.
In some cases, it may be beneficial for a user to receive digital components related to a web page, application page, or other electronic resource that the user previously accessed and/or interacted with. To assign such digital parts to users, users may be assigned to groups of users when they access a particular resource or perform a particular action on a resource (e.g., interact with a particular item presented on a web page or add the item to a virtual shopping cart). The user group may be generated by digital parts provider 160. That is, each digital parts provider 160 may assign users to their user groups when the users access electronic resources of digital parts provider 160.
To protect user privacy, the user's group membership may be maintained on the user's client device 110, e.g., by one of the applications 112, rather than by the digital parts provider or other party. In a particular example, a web browser can maintain a list of user group identifiers ("user group list") for users using the web browser. The user group list may include a group identifier for each user group to which a user has been added. The digital parts provider 160 that creates the user group may specify a user group identifier for their user group. The user group identifier of a user group may describe the group (e.g., a group of horticultural groups) or a code (e.g., a non-descriptive alphanumeric sequence) that represents the group. The user group list of the user may be stored in a secure storage of the client device 110 and/or may be encrypted at the time of storage.
When application 112 presents resources or application content related to a web page on digital parts provider 160 or web site 142, the resources may request that application 112 add one or more user group identifiers to the user group list. In response, the application 112 may add one or more user group identifiers to the user group list and securely store the user group list. As described in more detail below, the application 112 may send the user group identifier in the user group list to the MPC cluster 130 along with a request for content, e.g., a request for one or more digital components. Instead of sending the plaintext value of the user group identifier, the application 112 may encrypt the user group identifier and send the encrypted user group identifier to the MPC cluster 130 such that the unintended recipient of the user group identifier cannot access the plaintext value of the user group identifier.
The MPC cluster 130 includes a plurality of computing systems that perform a multi-party computing process to select a digital component based on one or more user group identifiers and additional information. In this example, the MPC cluster 130 includes a first computing system S 1 And a second computing system S 2 . Computing system S 1 And S 2 Can be owned and operated by the same party (e.g., a browser developer, an application developer, or an industry group) or by different parties (e.g., one party operated by a browser developer and another party operated by an industry group). Other numbers of computing systems may be used as long as the number is greater than 1.
Using MPC to select digital components based on user group identifiers protects the privacy of the user by preventing any party (including the party operating the computing system of MPC cluster 130) from determining to which group the user belongs, thereby protecting the user's personal information. The MPC process, along with k-anonymization techniques, also prevents other parties from accessing the secret information of SSP170 and DSP 150. The k-anonymization techniques may also prevent the DSP150 and/or digital component provider 160 from micro-targeting a particular client device 110, for example, by using the user's specific user information to select a digital component for the user. Example processes for selecting and distributing content using MPC, k-anonymization, and other encryption techniques are shown in fig. 2 and 3.
In some implementations, the application 112 can provide a user interface that enables a user to manage the user group to which the user is assigned. For example, the user interface may enable the user to remove the user group identifier, prevent all or certain resources, publishers, digital part providers, digital part switches, and/or DSP150 from adding the user to the user group (e.g., prevent the entity from adding the user group identifier to a list of user group identifiers maintained by the application 112). This provides better transparency and control for the user.
FIG. 2 is a swim lane diagram illustrating an example process 200 for selecting and providing content to the client device 110. The operations of process 200 may be implemented, for example, by client device 110, MPC cluster 130, one or more DSPs 150, and SSP170. The operations of process 200 may also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and execution of the instructions by one or more data processing apparatus may cause the one or more data processing apparatus to perform the operations of process 200.
In this example, the SSP170 is an SSP used by a particular publisher to manage the process of obtaining digital parts for digital part slots of its resources and/or applications, and the client device 110 requests content in response to an application of the client device 110 loading an electronic resource (e.g., a web page or local application) of the publisher. The SSP170 can review the digital parts before enabling the digital parts to be provided for presentation with the electronic resource of the issuer for which the SSP170 obtained the digital parts. For example, the SSP170 may review the content and format of the digital part to ensure that it complies with various standards, e.g., does not include a particular type of content, complies with data and/or display size requirements, and so forth.
If the SSP170 approves the digital part, the SSP170 may generate a signed creative element for the digital part. The signed creative element may include a collection of content and a digital signature generated based on the collection of content. For example, the collection of content can include a creative fragment, a digital part provider identifier that uniquely identifies the digital part provider that created and/or published the digital part (which allows the SSP170 to determine the digital part's corresponding DSP 150), creative metadata, a resource locator of the SSP170, and/or an expiration date of the digital signature (e.g., requiring the DSP to periodically resubmit the digital part for re-verification).
The creative fragment may include the digital part itself (or a resource locator or a link to a server from which the digital part may be downloaded). The creative fragment may also include computer executable code for rendering the digital part, such as a script that downloads the digital part from a server and renders the digital part in a digital part slot. The creative fragment may also include computer executable code for transmitting information regarding the rendering of the digital part to the aggregation server, such as a script that causes the client device to transmit the information to the aggregation server.
The resource locator of SSP170 may be the tld +1 of the domain of SSP170. eTLD +1 is the valid top level domain name (eTLD) plus one more label than the common suffix. Example eTLD +1 is "example.com", where ". Com" is the top-level domain name.
The metadata may include a collection of attributes that enable SSP170 to enforce publisher-defined exclusions on digital parts. For example, a publisher may not allow digital parts with particular attributes (e.g., having content related to a particular category) to be presented with their resources. The metadata may include a list of prohibited categories, topics, or other attributes of digital parts that are prohibited by the publisher. In some implementations, the SSP170 can encrypt each attribute and include each encrypted attribute in the signed creative element. For example, the SSP170 can encrypt each attribute using an asymmetric public key of the SSP170. In this manner, only the SSP170 can access the plaintext values for each attribute using the asymmetric private key corresponding to the public key. As described below, the MPC cluster 130 may use attributes (e.g., in encrypted form) to exclude the publisher's digital components. If the attributes are encrypted, the MPC cluster 130 may still perform the exclusion, but cannot determine which attributes are excluded by the publisher, thereby protecting the publisher's secret information.
The SSP170 can create a digital signature by signing the collection of content using the asymmetric private key of the SSP170. The recipient of the signed creative element may verify the digital signature using an asymmetric public key corresponding to the private key used to generate the signature. If any of the data blocks in the collection of content change after the digital signature is generated, the verification of the digital signature will fail. The SSP170 can send the signed creative element for each digital part to the DSP150 of the digital part provider 160 that created/published the digital part.
The client device 110 transmits a user group based content request to the MPC cluster 130 (202). For example, a web browser running on client device 110 may load a publisher's resource with one or more digital part slots. In another example, a user may launch a publisher's native application, and the content of the application may include one or more digital part slots. The application 112 including the digital component slot may transmit a user group-based content request.
In this example process 200, the application 112 may transmit two separate content requests. Application 112 may first transmit a user group-based content request to request a digital part based on one or more user groups to which the user of client device 110 is assigned. Application 112 may then send a contextual content request requesting digital components based on additional contextual information and, if one digital component is obtained using a user group-based content request, one or more digital components selected based on one or more user groups. This enables the contextual content selection process to include digital parts selected based on one or more user groups while maintaining the confidentiality of the user group to which the user is assigned and the confidentiality of information for the DSP used to select the digital parts.
The user group based content request may include some contextual signals, but fewer than those included in the contextual content request described below. For example, the user group content request may include a resource locator of a resource, such as a Uniform Resource Locator (URL) of a web page or a Uniform Resource Identifier (URI) of application content. The user group content request may also include a language (e.g., of content presented by an application rendering the content) and/or coarse geographic location information indicating a coarse location of the client device 110.
The user-group based content request may also include a user-group identifier for the user group to which the user of client device 110 is assigned. As described in more detail below, the user group based content request may include an encrypted user group identifier and a Signed Redemption Record (SRR) to protect user privacy and prevent fraud. The SRR indicates that the client device has been evaluated by the trust token issuer and determined to be trusted.
The MPC cluster 130 transmits a user group content response of the selected content to the application 112 (210). The MPC cluster 130 may select a digital part and transmit a user group content response to the application 112 that includes at least a signed creative element of the selected digital part. The digital part may also be referred to as a user group-based digital part because the digital part is selected based on the user group membership of the user.
In some implementations, the user group content response includes a collection of content including a signed creative element based on the digital parts of the user group, a publisher return identifier, a selection parameter identifier (as described below), a digital part provider identifier that uniquely identifies the digital part provider that created/published the digital parts based on the user group, and/or a timestamp (which may be a high resolution timestamp of milliseconds or finer granularity) indicating the time at which the content selection process was performed to select the digital parts based on the user group. The user group content response may also include the computing system S clustered by the MPC 130 1 A digital signature generated over a cryptographic hash of the signed creative element (e.g., SHA 256), a resource locator of a resource that will render the digital component, a publisher return identifier, a selection parameter identifier, a digital component identifier, and a timestamp. Computing system S 1 Can use calculationSystem S 1 To generate a digital signature.
Generating a cryptographically hashed digital signature of the signed creative element, rather than the signed creative element itself, reduces the data size required to verify the signature and the processing power (e.g., number of CPU cycles) required to verify the digital signature. The reduced data size may increase data transmission speed, reduce bandwidth consumption, and reduce data storage requirements. If the digital signature is over the entire creative element, then the recipient who wants to verify the signature must receive the creative element in its entirety in some way, much larger than the cryptographic hash of the creative element.
The timestamp is used as a unique identifier for the selection process and the digital signature can be used to prevent fraud. The combination of the unique identifier and the digital signature of the selection process prevents a compromised/malicious application (e.g., browser) or script from conducting fraud by forging the selection parameters or launching a replay attack (e.g., denial of service) using the same set of content. For example, the client device 110 (or SSP, or audit process) may use the computing system S 1 To verify the digital signature, the public key corresponding to the computing system S 1 A private key for signing the content. If the verification of the signature fails, the content of the signature has been modified. In addition, the client device 110 (of the SSP or audit process) may detect a replay attack if multiple user content responses with the same timestamp are received. In addition, including the resource locator of the resource in the collection of digitally signed content binds the user group content response with this particular presentation of the resource.
A publisher return identifier is an identifier that represents an amount that the publisher will receive from a digital parts provider for presentation by the publisher's resource (e.g., but not the amount itself). However, the publisher returns an identifier that is meaningless to entities other than the publisher and its SSP170.
Application 112 transmits a context content request to SSP170 (212). The contextual content request may include the user group content response and at least a portion of the information in the contextual data. For example, the contextual content request may include a publisher return identifier and/or a digital component provider identifier from the user group content response. The publisher return identifier enables the SSP170 to include the digital component selected by the MPC cluster 130 in a context content selection process that selects the digital component for presentation with the publisher's resource based on the complete set of context data.
The context data of the contextual content request may include the same context data as the user group-based content request as well as additional context data, such as the number of digital component slots included in the resource, the location of the digital component slots within the resource, the size of the digital component slots, the type of digital component slots, and so forth.
SSP170 sends a context request to one or more DSPs 150 (214). These contextual content requests may include contextual data of the contextual content request received from the application 112, but not information from the user group content response included in the contextual content request.
Each DSP150 may transmit the selection parameters to SSP170 (216). For example, each DSP150 may select one or more digital components based on context data on behalf of a digital component provider represented by DSP 150. For each digital component, DSP150 may also generate or select selection parameters for the digital component. The DSP150 may then transmit the digital part's selection parameters and data (e.g., signed creative element, the digital part itself, or a resource locator of the digital part) to the SSP170.
SSP170 selects content based at least in part on the selection parameters received from DSP150 and the issuer return identifier of the digital part selected by MPC cluster 130. SSP170 may determine the size of the selection parameter for the user group-based content request. For example, SSP170 may include a lookup table or other suitable data structure that maps (e.g., links, indexes, or otherwise associates) the publisher's selection parameter identifier to the selection parameter. The lookup table may include an array (e.g., column) of selection parameter identifiers and, for each selection parameter identifier, a corresponding selection parameter. The selection parameters may be quantized. For example, each selection parameter identifier may correspond to a range of selection parameter values.
The SSP170 may select a digital part having a highest selection parameter identifier from among the selection parameter identifiers of the digital parts based on the user group and the selection parameter identifiers received from the DSP 150. In some embodiments, as described in more detail below, the selection parameter identifier represents a post-share number that the publisher will receive after assigning the shares to the SSP170 and/or the DSP 150. In this example, SSP170 may also determine the shared number of selection parameters received from DSP150 and select the digital component with the highest shared number.
The SSP170 may then transmit the selected digital part and/or the creative fragment of the selected digital part to the client device 110 (220). In turn, the application 112 may present the selected digital part with the publisher's resources (222).
As described above, the contextual content request may include a publisher return identifier and/or a digital component provider identifier from the user group content response. This may simplify adoption of such methods, increase the speed of adoption of such methods, and simplify adoption of such methods by existing SSPs that select digital components for presentation based on conventional contextual content requests, without requiring the user group-based techniques described in this document. If the contextual content request includes the publisher return identifier but does not include the digital part provider identifier, the SSP170 can be modified to include a placeholder (e.g., fictitious) DSP as the DSP for the user group-based digital part when the user group-based digital part is selected. In this example, SSP170 may replace the number to be requested for the virtual DSP with the number reported by the aggregation system upon receiving an aggregation value (e.g., a rendering of a DSP-based digital component) to be requested from the DSP from the aggregation system (e.g., from an Application Programming Interface (API) of the aggregation system). If the context content request includes a digital part provider identifier, the SSP170 may not need to be modified at all.
In some implementations, the creative fragment can cause the application 112 to transmit a report to an aggregation server that reportsRendering of digital parts based on digital parts of the user group. The report may include at least a portion of the user group content response of the digital part received from the MPC cluster 130. For example, the report may include a publisher return identifier, a selection parameter identifier, a digital part provider identifier that uniquely identifies a digital part provider that created/published the user group-based digital part, a timestamp indicating a time at which the content selection process was performed to select the user group-based digital part, and a user identifier of the computing system S 1 The generated digital signature.
FIG. 3 is a swim lane diagram illustrating an example process 300 for selecting content. The operation of process 300 may be performed, for example, by client device 110, a computing system S of MPC cluster 130 1 And S 2 One or more DSPs 150 and one or more DSPs 150. The operations of process 300 may also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and execution of the instructions by one or more data processing apparatus may cause the one or more data processing apparatus to perform the operations of process 300.
The user group-based content request may include some contextual signals, for example, a resource locator of a resource, such as a URL or URI, a language (e.g., the language in which the content is presented by an application rendering the content), and/or coarse geographic location information indicating a coarse location of the client device 110.
The user-group-based content request may also include a user group identifier for a user group to which the user of client device 110 is assigned. The user group identifiers may all be sent in one request, e.g., rather than sending a separate request for each user group identifier. The application 112 may encrypt each user group identifier and include the encrypted user group identifier in the user group-based content request.
In some embodiments, client device 110 uses computing system S of MPC cluster 130 2 To encrypt each user group identifier. A probabilistic public key encryption scheme may be used to encrypt each user group identifier. The probabilistic nature of such encryption schemes provides semantic security in that the encryption scheme encrypts the same plaintext (e.g., user group identifier) into different ciphertext when repeatedly invoked with the same public key. Examples of probabilistic encryption schemes that can be used for encrypted user group identifiers are elliptic curves P-256 and elliptic curves P25519.
For each user group identifier, application 112 may generate a composite message and use a probabilistic public key based encryption algorithm and computing system S 2 Encrypts the composite message. The composite message of the user group identifier may include the user group identifier, an application public key (e.g., the public key of the application 112 that sent the content request based on the user group, corresponding to an application private key maintained securely by the application 112), an SRR of the user group identifier, and a digital signature. The application 112 may generate a digital signature based on other content of the composite message, for example by using the application private key to sign on the user group identifier, the application public key, and the SRR.
Application 112 may then use computing system S 2 The encryption key of (a) encrypts the composite message for each user group identifier. The encryption process may include using a computing system S 2 Applies a probabilistic asymmetric key algorithm to the composite message. Using a computing system S 2 Preventing a computing system S receiving a user group based content request from encrypting each user group identifier 1 The user group identifier is combined with the context signal included in the user group based content request.
Digital signature enabling computing system S 2 Fraud can be detected. For example, if the verification of the digital signature fails, the content of the composite message has been modified after the digital signature was generated.
SRR also enables computing system S 2 Fraud, such as user group membership fraud, can be detected. Each composite message may include a different SRR obtained for its user group identifier. That is, the user group-based content request may include a respective SRR for each user group identifier to which the user is assigned. Each composite message may also include a different application public key that is used to obtain the SRR of the user group identifier. This prevents the computing system S from 2 Inferring that the set of user group identifiers are from the same application 112 protects user privacy by not enabling the computing system S2 to associate all user groups to which the user belongs.
Each SRR may include: publisher origin (e.g., computing System S) 2 The tld +1 domain); binding; eTLD +1 of a trust token issuer issuing a trust token, the trust token being redeemed to obtain an SRR; a redemption timestamp indicating a time at which the trust token was redeemed; and a digital signature signed by the trust token issuer. This signature enables the recipient to verify that the trust token issuer evaluated the client device and deemed the device to be trusted and that the contents of the SRR have not been modified. The trust token issuer may use the private key and other contents of the SRR to generate the digital signature.
The binding may bind the SRR to the user group identifier and an application public key of the user group identifier. This prevents the SRR from being used by other applications (e.g., on other devices) or for other group identifiers. In some embodiments, the binding is a user group identifier and a cryptographic hash of the user group identifier applying a public key. In some embodiments, the binding is a user group identifier and a hash-based message authentication code (HMAC) of the user group identifier that applies a public key.
The application 112 may request the SRR for each user group identifier from the trust token issuer. A trust token issuer may issue trust tokens based on the trustworthiness of client device 110 and/or application 112. For each user group identifier, the request may include a corresponding trust token and a cryptographic hash (or HMAC) of the public key and the user group identifier. In some implementations, the application 112 generates a cryptographic hash for each user group identifier using a cryptographic function. For example, the application 112 may generate a user group identifier and its corresponding HMAC to which the public key applies for the user group identifier.
By sending a cryptographic hash (e.g. HMAC in some embodiments) to the trust token issuer instead of the user group identifier, the user group to which the user is assigned is not compromised to the trust token issuer. The trust token issuer may generate an SRR for each user group identifier, including generating a digital signature using a private key of the trust token issuer. This enables the recipient of the SRR to detect whether the contents of the SRR have changed by attempting to verify the digital signature using a public key corresponding to the private key of the trusted token issuer.
To prevent the computing system S 1 Knowing the number of user groups to which the user of client device 110 is assigned, application 112 transmitting the request may encrypt the pseudo user group identifier and insert the encrypted pseudo user group identifier into the user group-based content request. For example, the application 112 may insert an arbitrary or periodically changing number of encrypted pseudo user group identifiers in the user group based content request. Computing system S that may use MPC cluster 130 2 Each pseudo user group identifier is encrypted with a public key. The pseudo user group identifiers may have a common value, such as a zero value or some other constant.
Generating user group content requests in this manner prevents computing system S from being used 1 Associating a user group identifier for each user (by means of an encrypted user group identifier) and knowing the number of user groups to which each user is assigned (using a pseudo identifier). Because the MPC cluster 130 may receive many requests from many different client devices, these techniques may prevent the computing system S from 1 And S 2 Learning user group composition for each of the usersA membership.
The user group content request may also include the SRR of the request itself, e.g., an encrypted SRR to supplement each user group identifier. This enables the computing system S 1 It can be verified that the user group content request was sent by a trusted client device. After receiving the user group content request from application 112, computing system S 1 The SRR may be verified. For example, computing system S 1 The signature of the SRR can be verified using the public key of the trust token issuer and thus ensuring that the contents of the SRR have not been modified since the signature was generated. Computing system S 1 It may also be ensured that the redemption timestamp is recent, e.g., within a threshold amount of time of the time of receiving the content request based on the group of users.
Computing system S 1 K-anonymization is applied to context signals included in a user-group-based content request (304). K-anonymization techniques may be used to ensure that the context signal group of each user for which an application sends a user group-based content request is shared among at least K users, and thus cannot uniquely identify a single user or a small group of users. When k-anonymization is applied to context signals, the computing system S 1 Context signals received from multiple groups of client devices, e.g., of many different users from whom user group content requests were received, over a period of time, e.g., the day, week, month, etc., may be used.
Computing system S 1 The number of unique applications that transmitted a particular set of context signals can be determined using cryptographic hashes included in each SRR (e.g., a user group identifier and a cryptographic hash of an application public key). Computing system S 1 The number of unique applications can be compared to an anonymity threshold, and if the number meets or exceeds the anonymity threshold, the set of contextual signals is determined to satisfy k-anonymity. If the set of context signals does not satisfy k-anonymity, e.g., because the number of unique applications is less than an anonymity threshold, then computing system S 1 A user group based content request may be responded to without the digital component. The anonymity threshold may be based on the target k-anonymity parameter k.
In another example, computing system S 1 K-anonymization may be applied to each context signal included in a user group-based content request. For example, computing system S 1 The number of unique applications from which individual context signals are received can be compared to an anonymity threshold. An individual context signal satisfies k-anonymity if the number of unique applications meets or exceeds an anonymity threshold. Computing system S 1 Context signals that do not satisfy k-anonymity may be ignored (e.g., deleted), but continue to be processed.
Computing system S 1 A unique request identifier is created for a user group based content request received from the application 112. The request identifier may be a composite message that includes a random number (nonce, e.g., an arbitrary, pseudo-random, or random number) and a resource locator of a resource that will render the selected content. Com, a URL, or URI, for example, may be included with the request identifier, including the nonce and the domain of the resource (e.g., example. This enables the computing system S 1 Being able to associate slave computing systems S 2 The received selection parameter identifier and uses the selection parameter identifier to select a numeric component to return to the application 112, as described below.
Computing system S 1 A composite message may be encrypted for each user group identifier received from application 112 (e.g., each encrypted composite message received from application 112, since computing system S 1 No access to clear text user group identifier), to the computing system S 2 A corresponding request is sent (308). Before generating the request, computing system S 1 Can use a computing system S 1 The owned secret key encrypts the request identifier and context signals received in the user group-based content request received from the application 112. Encryption of the request identifier may employ a probabilistic symmetric encryption algorithm on the plaintext of the request identifier using a key. Similarly, encryption of the context signal may employ a probabilistic symmetric encryption algorithm on the plaintext of the context signal using a key. Each request may include an encrypted request identifier for the user group identifier, an encrypted context signal, and an encrypted composite message.
By sending a request for each user group identifier, the computing system S 2 There is no way to infer which user group identifiers are from the same application 112 or the same client device 110. For example, computing system S 1 The computing system S may be accessed simultaneously or within a short period of time (e.g., within seconds, milliseconds, or minutes) 2 Requests are sent for a number of different client devices. Since many different requests are sent for many different client devices and each request is for a user group identifier, the computing system S 2 The user group identifier of a particular client device will not be associated.
Computing system S 2 K-anonymization is performed on the user group identifier (310). Computing system S 2 The user group identifiers received from the application 112 may be k-anonymized in the user group-based content request such that uncommon user group identifiers cannot be correlated with users of the client device 110.
To enforce k-anonymity on user group identifiers, a system S is calculated 2 Each requested composite message is decrypted using its private key corresponding to the public key used to encrypt the composite message. As described above, the composite message for the user group identifier may include the user group identifier, an application public key (e.g., the public key of the application 112 that sent the user group-based content request, corresponding to an application private key maintained securely by the application 112), an SRR for the user group identifier, and a digital signature.
Computing system S 2 The composite message may then be verified. This may include multiple verifications. Computing system S 2 An attempt may be made to verify the digital signature using the application public key to ensure that the other content of the composite message has not been modified. Computing system S 2 An attempt may be made to verify the freshness of the SRR, such as by ensuring that the time represented by the time stamp of the SRR is within a threshold amount of time of the current time at which verification was performed. Computing system S 2 An attempt may be made to verify the digital signature of the SRR using the public key of the trusted token issuer to ensure that the contents of the SRR have not been modified. Computing system S 2 May attempt to verify SPublisher sources of RRs to ensure that the publisher sources of SRRs match computing system S 2 eTLD +1. Computing system S 2 An attempt may be made to verify the binding value, for example by ensuring that the binding value of the SRR is a cryptographic hash of the user group identifier and the application public key. For example, computing system S 2 The cryptographic hash may be recomputed using the same cryptographic function and key and compared to the binding value.
These verifications may be used to detect a potentially untrusted application, such as application 112 or untrusted computing system S1. If all verifications are successful, computing system S 2 K-anonymization may be enforced on user group identifiers. To determine whether an individual user group identifier satisfies k-anonymity, a computing system S 1 The number of requests that include the user group identifier, e.g., the number of applications that have sent requests that include the user group identifier, may be compared to an anonymity threshold. If the number of requests meets or exceeds the anonymity threshold, the computing system S 1 It may be determined that the user group identifier satisfies k-anonymity. If the user group identifier is fake (e.g., a pseudo identifier sent by the application 112) or does not satisfy k-anonymity, the computing system S 2 The request may be ignored and not sent to the computing system S 1 A return request for the user group identifier is sent.
For non-fake and k-anonymous user group identifiers, the computing system S 2 To a computing system S 1 A return request (312) is transmitted. The return request for the user group identifier may include the encrypted context signal received for the user group identifier (e.g., for use in transmitting to computing system S) 2 In a request received by the computing system S 1 Encrypted context signal) a twice encrypted request identifier and a decrypted user group identifier. That is, while in the slave computing system S 1 Computing system S when the user group identifier of the encrypted composite message received in the received request is anonymous by k-and not forged 2 Can use a computing system S 2 Is secret key (also probabilistic symmetric key plus)Secret) encryption of an encrypted request identifier (using computing system S) 1 Encrypted with the secret key). Computing system S 2 A return request can then be generated and transmitted that includes the twice-encrypted request identifier, the encrypted context signal received in the request, and the plaintext value for the user group identifier (which is in encrypted form with the information from computing system S) 1 Received together with the request).
Computing system S 1 DSP/digital component provider exclusion is applied to each return request (314). Computing system S 1 The encrypted context signal can be decrypted using its secret key to recover the context signal in clear text. These context signals may include a domain, URL, or URI of a publisher resource that is to present the selected content. Computing system S 1 This information may be compared to a lookup table that maps domains, URLs, or URIs to DSP and/or digital part providers that are eligible to provide digital parts for presentation with the publisher's resources. The publisher' S SSP170 may upload the lookup table to the computing system S 1 . This enables the computing system S 1 Enabling the implementation of a DSP filter can significantly reduce the number of requests, e.g., queries per second, sent to the DSP's computer and, therefore, will reduce the burden on network usage and computer service requests by the DSP.
In some implementations, the user group identifier may encode sufficient information to specify the set of DSPs and/or digital part providers that the user group identifier intends. Computing system S 1 A union of the set of DSP and/or digital component providers specified by the user group identifier and the set of DSP and/or digital components that survived the lookup table filtering may be determined.
Computing system S 1 A user group based content selection parameter request is generated and transmitted to one or more DSPs 150 (316). For the slave computing system S 2 Each return request received, computing system S 1 A user group based content request may be sent to each DSP in a two-set union, including each digital part in the two-set unionA DSP of the part provider. Each of these selection parameter requests may include a twice-encrypted user group identifier of the return request, a user group identifier of the return request, and a context signal in clear text form corresponding to the return request. Thus, for user group-based content requests received from client device 110, computing system S 1 A respective selection parameter request for each user group identifier that satisfies the k-anonymous user group-based content request may be sent to each of the one or more DSPs 150.
Each DSP150 may transmit the selection parameters to the computing system S 2 (318). For example, each DSP150 may select one or more digital components based on a user group identifier and/or context data on behalf of a digital component provider represented by the DSP 150. For each digital component, DSP150 may also generate or select selection parameters for the digital component based on the user group identifier and/or the context data.
DSP150 may then generate a selection parameter response that includes the twice encrypted request identifier received in the selection parameter request, the signed creative element of the selected digital part, the determined selection parameter, and a digital part provider identifier that uniquely identifies the digital part provider that created/published the selected digital part. The DSP150 may then transmit the selection parameter response to the computing system S 2 。
Computing system S 2 K-anonymity is applied 320 to the selection parameters received from DSP 150. In some embodiments, MPC cluster 130 uses multiple lookup tables to enforce k-anonymity and maintain confidentiality of pre-share and post-share selection parameters and share quantities assigned to SSP170. The selection parameter received from DSP150 may be a pre-shared selection parameter. For example, the publisher's SSP170 can upload a first lookup table (table 1) that includes selection parameter boundaries and corresponding selection parameter identifiers.
TABLE 1
In the table, boundaries define the boundaries of each range. If the selection parameter is within a specified range, computing system S 2 The selection parameter identifier for the range is assigned to the selection parameter.
The selection parameter identifier does not have any semantics except for any unique identifier for the particular selection parameter range that is only used by the SSP170 and the computing system S 2 It is known. Computing system S 2 The lookup table may be accessed and a selection parameter identifier corresponding to the selection parameter received from DSP150 may be identified. Computing system S 2 The selection parameter identifier for each selection parameter received from DSP150 may be identified in the selection parameter response.
Computing system S 2 K-anonymization may then be effectuated on one or more of the signed creative elements in the selection parameter response, the selection parameter identifier, and the digital part provider identifier. Such k-anonymization techniques may involve selection parameter responses received by the MPC cluster 130 from many different client devices for user group-based content requests, including selection parameter responses generated based on user group-based content requests received from the client devices 110. To determine whether individual selection parameters satisfy k-anonymity, a computing system S is calculated 2 The number of selection parameter responses, including individual selection parameters, may be compared to an anonymity threshold. If the number meets or exceeds an anonymity threshold, the computing system S 2 It may be determined that the selection parameter satisfies k anonymity. Computing system S 2 Any selection parameter that does not satisfy k-anonymity may be ignored.
For each selection parameter that satisfies k-anonymity, the computing system S 2 Generating and transmitting selection parameter elements to a computing system S 1 (322). The selection parameter element for the selection parameter may include an encryption request identifier corresponding to the selection parameter, a creative element corresponding to a signature of the selection parameter, a selection parameter identifier corresponding to the selection parameter, and/or a digital part provider that created/published the digital part corresponding to the selection parameter. For example, computing system S 2 The twice-encrypted request identifier may be decrypted using its secret key to recoverUsing a computing system S 1 The secret key of (a) performs the encrypted request identifier of (b).
Computing system S 1 The creative exclusion is applied to the selection parameter element (324). Computing system S 1 The request identifier for each selected parameter element may be decrypted using its secret key to recover each request identifier in clear text. As described above, each request identifier is a composite message that includes a random number and a resource locator of a resource that will render the selected content. The resource locator may be used for application creative exclusion.
As described above, a publisher may not allow digital parts having a particular attribute (e.g., having content associated with a particular category) to be presented with their resources. The publisher's SSP170 may define a collection of digital part attributes to support creative exclusion. Such attributes may be represented as a finite discrete set: p = { P1, P2, \8230;, pn }. The SSP170 may optionally encrypt these attributes using a deterministic symmetric encryption algorithm using the SSP's secret encryption key, similar to how the attributes may be encrypted for inclusion in the signed creative element.
Computing system S 1 The attribute set for each publisher may be obtained periodically from the publisher's SSP170. The SSP170 may store the attribute sets for each publisher locally (e.g., in a cache). For example, computing system S 1 A data structure similar to table 2 below may be maintained.
Resource locator | Intention to exclude |
example.com/mainpage | P 1 、P 41 、P 90 |
example.com/secondpage | P 7 |
TABLE 2
In the table, each attribute (e.g., P) 1 、P 41 Etc.) may be a content category of the digital part, an object depicted by the digital part, or other attribute of the digital part. For each resource locator, the set of attributes in the creative exclusion column indicates the following attributes: if assigned to a digital part, indicates that the digital part should not be provided for presentation with the resource corresponding to the resource locator.
To apply creative exclusion to select parameter elements, computing system S 1 The set of attributes included in the metadata of the signed creative element may be obtained from the signed creative element. Computing system S 1 An intersection of the attribute set of the signed creative element and the creative-excluded attribute set of the resource locator defined as the request identifier included in the selection parameter element may then be computed. If the intersection is empty, the digital part of the creative element of the signature is eligible for rendering with the resource corresponding to the resource locator. Otherwise, computing system S 1 The creative element and its selection parameter elements may be omitted.
Computing system S 1 Content to be provided to the application 112 is selected in response to the user group based content request (326). The user group-based content request received from the application 112 has a corresponding request identifier based on its random number and the resource locator of the resource for which the content was selected. After applying the creative exclusion to the selection parameter element with the request identifier, computing system S 1 The set of all selection parameter elements received with the request identifier may be collected. Computing system S 1 The numeric component may then be selected based on the selection parameter identifier included in the set of selection parameter elements.
In some embodiments, the publisher is assigned a portion of the selection parameters of the selected digital part,where it is shared to SSP170 and/or DSP 150. The selection parameter may represent a monetary amount, and each share may be a portion of the monetary amount. The selection parameter identifier in the selection parameter element corresponds to a pre-shared selection parameter. The way in which sharing is determined is the secret information that should be protected. To this end, the system S is calculated 1 Two look-up tables may be used, which prevents the computing system S from being used 1 Information is obtained regarding the manner in which sharing is determined. In other embodiments, an encryption technique, such as homomorphic encryption, may be used for the selection parameters. However, this would result in significantly longer latencies, computational resources (e.g., CPU cycle cycles) required to encrypt and decrypt information, greater complexity of troubleshooting, and significantly reduced efficiency relative to using look-up tables.
A first look-up table (table 3 below) may map the resource locator to a numeric component identifier and a shared code. The SSP170 may upload the lookup table to the computing system S 1 . The shared code may not make sense to entities other than SSP170.
Resource locator | Digital parts provider identifier | Shared code |
example.com/mainpage | 76 | A739 |
example.com/secondpage | 91 | 320od |
TABLE 3
For user group based content requests, computing system S 1 The shared code for each signed creative element may be looked up in the set of selection parameter elements. Computing system S 1 The resource locator of the request identifier and the digital component identifier of the signed creative element may be used to find the shared code of the signed creative element.
Then, the system S is calculated 1 A second lookup table (table 4 below) may be used to look up the selection parameter identifier for each signed creative element in the set of selection parameter elements. The SSP170 may also upload the lookup table to the computing system S 1 。
Publisher return identifier | Shared code | Selecting a parameter identifier |
1 | 1683b | Parameter_ID 6 |
2 | 38r4j | Parameter_ID 1 |
… | … | |
m | D2dv | Parameter_ID 93 |
TABLE 4
The publisher return identifier corresponds to a sharing of the selection parameters that the publisher will receive. The value of the publisher return identifier may be monotonic, i.e., the greater the publisher return identifier, the greater the number that the publisher will receive.
Computing system S 1 The publisher return identifier for each signed creative element in the set of selection parameter elements may be looked up using the sharing code of the creative element (identified using table 3) and the selection parameter identifier of the creative element.
In all eligible creative elements with the same request identifier, e.g., each creative element in the set of selection parameter elements, the computing system S 1 The creative element of the signature corresponding to the largest publisher return identifier is selected.
Computing system S 1 The user group content response is transmitted 328 to the application 112. As described above with reference to operation 210 of figure 2, the user group content response may include a collection of content including the selected signed creative element, a publisher return identifier of the selected signed creative element, a digital part provider identifier of a digital part of the signed creative element, and a timestamp indicating a time at which the content selection process was performed to select the signed creative element. The user group content response may also include the user group content response being sent by the computing system S 1 The generated digital signature. After receiving the user group content request, application 112 may transmit the contextual content request to SSP170 and continue with process 200 of fig. 2 to select a final digital component for presentation with the resource.
FIG. 4 is a block diagram of an example computer system 400 that may be used to perform the operations described above. The system 400 includes a processor 410, a memory 420, a storage device 430, and an input/output device 440. Each of the components 410, 420, 430, and 440 may be interconnected, for example, using a system bus 450. The processor 410 is capable of processing instructions for execution within the system 400. In some implementations, the processor 410 is a single-threaded processor. In another implementation, the processor 410 is a multi-threaded processor. The processor 410 is capable of processing instructions stored in the memory 420 or the storage device 430.
The storage device 430 is capable of providing mass storage for the system 400. In some implementations, the storage device 430 is a computer-readable medium. In various different implementations, the storage device 430 may include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or some other mass storage device.
The input/output device 440 provides input/output operations for the system 400. In some implementations, the input/output devices 440 may include one or more of a network interface device, such as an ethernet card, a serial communication device (e.g., an RS-232 port), and/or a wireless interface device such as an 802.11 card. In another embodiment, the input/output devices may include driver devices configured to receive input data and transmit output data to external devices 460, e.g., a keyboard, a printer, and a display device. However, other implementations may also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 4, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage medium (or single medium) for execution by, or to control the operation of, data processing apparatus. Alternatively or in addition, the program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage media may be or be embodied in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification may be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple or combinations of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Further, a computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and DVD-ROM discs. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other classes of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. In addition, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an internetwork (e.g., the internet), and a peer-to-peer network (e.g., an ad hoc peer-to-peer network).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server transmits data (e.g., HTML pages) to the client device (e.g., for displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (12)
1. A method, comprising:
receiving, by the first multi-party computing MPC computing system, a content request from the client device that includes a set of encrypted user group identifiers, wherein each encrypted user group identifier is encrypted using the first encryption key of the second MPC computing system;
for each encrypted user group identifier, transmitting a request to the second MPC computing system, the request including the encrypted user group identifier;
for each user group identifier that satisfies the k-anonymization procedure performed by the second MPC computing system:
receiving, by the first MPC computing system, a clear text value of the user group identifier from the second MPC computing system; and
transmitting, by the first MPC computing system, a selection parameter request to one or more platforms, the selection parameter request including the plain text value of the user group identifier;
receiving, by the first MPC computing system, a set of selection parameter elements from the second MPC computing system, the set of selection parameter elements each including a creative element of a corresponding digital part and a selection parameter identifier of the digital part;
selecting, by the first MPC computing system, a given digital component based on the selection parameter identifier; and
transmitting, by the first MPC computing system, the creative element of the digital part to the client device.
2. The method of claim 1, wherein the content request includes a resource locator of a resource that is requesting a digital part, the method further comprising:
generating, by the first MPC computing system, a request identifier based on the resource locator and a random number corresponding to the content request; and
encrypting, by the first MPC computing system, the request identifier,
wherein the request includes the encrypted request identifier.
3. The method of claim 2, wherein:
receiving the clear text value for each user group identifier that satisfies the k-anonymization procedure comprises: receiving a return request for each user group identifier that satisfies the k-anonymization process, each return request including the user group identifier and a twice-encrypted request identifier generated by the second MPC computing system by encrypting the encrypted request identifier using a second encryption key of the second MPC computing system;
each selection parameter request includes a request identifier of the secondary encryption; and is provided with
Each selection parameter element includes the encrypted request identifier generated by the second MPC computing system by decrypting the twice-encrypted request identifier after receiving the twice-encrypted request and the creative element and the selection parameter identifier of the selection parameter element from a platform.
4. The method of claim 3, wherein the second MPC computing system:
receiving a selection parameter response from each of the one or more platforms, the selection parameter response including the twice-encrypted request identifier, a respective creative element of a respective digital part, a selection parameter of the respective digital part, and a digital part provider identifier that published the respective digital part;
identifying, for each selection parameter response, a corresponding selection parameter identifier based on a range of selection parameter values for the selection parameter including the selection parameter; and
generating the selection parameter element based on the selection parameter response and the selection parameter identifier.
5. The method of any preceding claim, wherein for each user group identifier, the content request comprises an encrypted composite message comprising: an encrypted version of a composite message, the encrypted version of the composite message including the user group identifier; an application public key for an application of the client device that initiated the content request; and a signed redemption record issued by a trust token issuer in response to determining that the client device is trusted.
6. The method of any preceding claim, wherein the content request comprises a contextual signal, the method further comprising:
determining that the context signals satisfy k-anonymity;
in response to determining that the contextual signal satisfies k-anonymity:
encrypting, by the first MPC computing system, the context signals; and
including in the request each context signal that satisfies k-anonymity.
7. The method of any preceding claim, further comprising:
identifying a first set of attributes of the corresponding digital part in each creative element; and
identifying a second set of exclusion attributes in a lookup table that are excluded by a publisher of the resource;
wherein selecting, by the first MPC computing system, a given digital component based on the selection parameters comprises:
for each creative element, determining whether one or more attributes of the first set of attributes of the creative element match an exclusion attribute; and
each creative element having at least one attribute matching the excluded attribute is excluded.
8. The method of any preceding claim, wherein selecting, by the first MPC computing system, a given digital component based on the selection parameter identifier comprises:
for each selection parameter element:
identifying a shared code of the creative element of the selection parameter element in a first lookup table based on a resource locator of a resource and a digital part identifier of a digital part provider of the corresponding digital part that published the creative element; and
identifying a publisher return identifier in a second lookup table based on the shared code and the selection parameter identifier of the selection parameter element; and
selecting as the given digital part the digital part of the given selection parameter element having the highest publisher return identifier.
9. The method of claim 8, wherein transmitting, by the first MPC computing system to the client device, the creative element of the digital part comprises transmitting a content request result that includes the creative element, the publisher return identifier of the given selection parameter element, the digital part provider identifier of the given digital part, a timestamp indicating a time at which the given digital part was selected, and a digital signature.
10. The method of claim 9, wherein:
the client device transmitting a second content request to a second platform;
the second content request result comprises the content result request and additional context signals; and is provided with
The second platform selects a second digital component from among a set of digital components for presentation at the client device, the set of digital components including the given digital component and one or more digital components selected based on the additional contextual signals.
11. A system, comprising:
one or more processors; and
one or more storage devices storing instructions that, when executed by the one or more processors, cause the one or more processors to carry out the method of any preceding claim.
12. A computer-readable medium carrying instructions which, when executed by one or more processors, cause the one or more processors to carry out the method of any one of claims 1 to 10.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
IL276440A IL276440A (en) | 2020-08-02 | 2020-08-02 | Using multi-party computation and k-anonymity techniques to protect confidential information |
IL276440 | 2020-08-02 | ||
PCT/US2021/028354 WO2022031329A1 (en) | 2020-08-02 | 2021-04-21 | Using multi-party computation and k-anonymity techniques to protect confidential information |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115552838A true CN115552838A (en) | 2022-12-30 |
Family
ID=80117619
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180034297.1A Pending CN115552838A (en) | 2020-08-02 | 2021-04-21 | Protecting confidential information using multiparty computing and K-anonymization techniques |
Country Status (7)
Country | Link |
---|---|
US (1) | US20230144140A1 (en) |
EP (1) | EP4128645A1 (en) |
JP (1) | JP7475492B2 (en) |
KR (1) | KR20220163483A (en) |
CN (1) | CN115552838A (en) |
IL (1) | IL276440A (en) |
WO (1) | WO2022031329A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2023234940A1 (en) * | 2022-06-02 | 2023-12-07 | Google Llc | Privacy preserving group-based content distribution |
CN117614612A (en) * | 2024-01-24 | 2024-02-27 | 蓝象智联(杭州)科技有限公司 | Multiparty data statistics method for protecting privacy |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2012165518A1 (en) | 2011-06-02 | 2012-12-06 | 日本電気株式会社 | Distributed anonymization system, distributed anonymization device, and distributed anonymization method |
JP5957197B2 (en) | 2011-10-06 | 2016-07-27 | 株式会社電通 | Terminal device, server device, network system, communication method, and communication program |
JP2014170369A (en) | 2013-03-04 | 2014-09-18 | Nec Corp | Information processor, information processing system, and information anonymization method |
US10614242B2 (en) | 2016-09-30 | 2020-04-07 | Northwestern University | System and method for secure query processing for private data networks |
EP3477527A1 (en) * | 2017-10-31 | 2019-05-01 | Twinpeek | Privacy management |
EP3759638B1 (en) * | 2018-04-05 | 2024-03-27 | Google LLC | Domain specific browser identifiers as replacement of browser cookies |
US11403420B2 (en) | 2018-08-31 | 2022-08-02 | Visa International Service Association | System, method, and computer program product for maintaining user privacy in advertisement networks |
-
2020
- 2020-08-02 IL IL276440A patent/IL276440A/en unknown
-
2021
- 2021-04-21 KR KR1020227039403A patent/KR20220163483A/en unknown
- 2021-04-21 US US17/918,598 patent/US20230144140A1/en active Pending
- 2021-04-21 CN CN202180034297.1A patent/CN115552838A/en active Pending
- 2021-04-21 WO PCT/US2021/028354 patent/WO2022031329A1/en unknown
- 2021-04-21 JP JP2022568895A patent/JP7475492B2/en active Active
- 2021-04-21 EP EP21724154.6A patent/EP4128645A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US20230144140A1 (en) | 2023-05-11 |
IL276440A (en) | 2022-03-01 |
WO2022031329A1 (en) | 2022-02-10 |
KR20220163483A (en) | 2022-12-09 |
JP7475492B2 (en) | 2024-04-26 |
JP2023527709A (en) | 2023-06-30 |
EP4128645A1 (en) | 2023-02-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11790111B2 (en) | Verifiable consent for privacy protection | |
JP7319380B2 (en) | Protect browser cookies | |
JP7475492B2 (en) | USING MULTI-PARTY COMPUTATION AND K-ANONNYMY TECHNIQUES TO PROTECT SENSITIVE INFORMATION | |
JP2023096089A (en) | Pseudonym event certification by group signature | |
JP2023067928A (en) | Using secure multi-party computation to improve content selection process integrity | |
KR102608325B1 (en) | Protect the integrity of communications on client devices | |
US20230421544A1 (en) | Preventing fraud in aggregated network measurements | |
US20220417034A1 (en) | Anonymous event attestation | |
US11841978B2 (en) | Protecting access to information in online interactions | |
KR20220161428A (en) | Secure network communications to restrict access to information | |
KR20220052352A (en) | Online privacy protection technology |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
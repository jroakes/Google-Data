US7925956B2 - Method and apparatus for encoding and decoding data - Google Patents
Method and apparatus for encoding and decoding data Download PDFInfo
- Publication number
- US7925956B2 US7925956B2 US11/538,347 US53834706A US7925956B2 US 7925956 B2 US7925956 B2 US 7925956B2 US 53834706 A US53834706 A US 53834706A US 7925956 B2 US7925956 B2 US 7925956B2
- Authority
- US
- United States
- Prior art keywords
- size
- max
- interleaver
- block
- input block
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/23—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using convolutional codes, e.g. unit memory codes
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/27—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes using interleaving techniques
- H03M13/2789—Interleaver providing variable interleaving, e.g. variable block sizes
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/27—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes using interleaving techniques
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/27—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes using interleaving techniques
- H03M13/275—Interleaver wherein the permutation pattern is obtained using a congruential operation of the type y=ax+b modulo c
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/29—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes combining two or more codes or code structures, e.g. product codes, generalised product codes, concatenated codes, inner and outer codes
- H03M13/2903—Methods and arrangements specifically for encoding, e.g. parallel encoding of a plurality of constituent codes
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/29—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes combining two or more codes or code structures, e.g. product codes, generalised product codes, concatenated codes, inner and outer codes
- H03M13/2957—Turbo codes and decoding
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/29—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes combining two or more codes or code structures, e.g. product codes, generalised product codes, concatenated codes, inner and outer codes
- H03M13/2957—Turbo codes and decoding
- H03M13/2996—Tail biting
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/65—Purpose and implementation aspects
- H03M13/6566—Implementations concerning memory access contentions
Definitions
- the present invention relates generally to encoding and decoding data and in particular, to a method and apparatus for turbo encoding and decoding.
- turbo coding of an information block before it is transmitted over the channel.
- an encoder within the transmitter of a communication system will encode an input block u of length K′ bits into a codeword block x of N bits.
- the codeword block is then transmitted over the channel, possibly after further processing such as channel interleaving as defined in the IEEE 802.16e specifications.
- the turbo decoder takes the received signal vector y of length N as input, and generates an estimate û of vector u.
- turbo encoder is composed of two constituent convolutional encoders.
- the first constituent encoder takes the input block u as input in its original order
- the second constituent encoder takes the input block u in its interleaved order after passing u through a turbo interleaver ⁇ .
- the turbo encoder output x is composed of the systematic bits (equal to the input block u), the parity bits from the first constituent encoder, and the parity bits from the second constituent encoder.
- turbo decoder within the receiver of the communication system is composed of two constituent convolutional decoders, one for each constituent code.
- the constituent decoders are separated by the interleaver ⁇ and the corresponding deinterleaver ⁇ ⁇ 1 .
- Messages in the format of log-likelihood ratios (LLRs) are passed between the constituent decoders iteratively.
- the decision û is made after several iterations.
- the turbo interleaver ⁇ is the key component in the turbo code design. It is responsible for scrambling the input block u in a pseudo-random fashion, thus providing the codewords x with good weight distribution, hence good error-correcting capabilities. In addition to decoding performance, the definition of the turbo interleaver ⁇ greatly impacts the implementation of the turbo decoder within the receiver. To allow high-level of parallel processing without memory access contentions, the turbo interleaver ⁇ needs to have contention-free properties.
- FIG. 1 is a block diagram of a transmitter.
- FIG. 3 is a block diagram of a receiver.
- FIG. 4 is a block diagram of the turbo decoder of FIG. 4 .
- FIG. 5 is a flow chart showing operation of the transmitter of FIG. 1 .
- an information block of size K is received.
- the information block of size K is padded into an input block of size K′.
- the input block is interleaved using an interleaver of size K′.
- the original input block and the interleaved input block are encoded to obtain a codeword block.
- the codeword block is transmitted trough the channel.
- FIG. 1 is a block diagram of transmitter 100 .
- transmitter 100 comprises filler insertion circuitry 109 , turbo encoder 101 , interleaver size determination circuitry 103 , interleaver parameter table 105 , and transmitter 107 .
- Encoder 101 is preferably a rate-1 ⁇ 3 3GPP turbo coder, however, the techniques described herein for operating encoder 101 may be applied to other encoders, including, but not limited to turbo coders performing turbo coding with tail bits or no tail bits, tail-biting, binary or duo-binary turbo coders, turbo coders using different rate-matching and puncturing techniques, . . . , etc.
- information block of size K needs to be encoded by the turbo encoder 101 .
- CF contention-free
- K′ a small set of well-designed CF interleavers
- a suitable interleaver size K′ may be chosen by circuitry 103 from the set of available sizes (e.g., interleaver sizes listed in table 105 ).
- the information block is then padded into an input block of size K′ by circuitry 109 and sent as input to the turbo encoder 101 .
- a typical arrangement is to pad the information block with K filler filler bits (via filler insertion circuitry 109 ).
- size and “length” are used interchangeably to indicate the number of elements in a block or vector.
- K′ is chosen by circuitry 103 , it is provided to turbo encoder 101 .
- a contention-free interleaver may be used (not shown in FIG. 1 ).
- a symbol may be composed of multiple bits and the step of interleaving may use an additional step of permuting the bits within a symbol.
- the output of turbo encoder 101 comprises a codeword block x, and x is sent to transmitter 107 where it is transmitted through the channel.
- the transmitter may perform additional processing such as rate matching, channel interleaving, modulation, etc., before transmitting the codeword block x through the channel.
- FIG. 2 is a block diagram of encoder 101 of FIG. 1 .
- encoder 101 comprises interleaver 201 , encoding circuitry 202 , and encoding circuitry 203 .
- An example of the encoder is the turbo coder defined in 3GPP specification.
- R native code rate
- the output of the turbo encoder may also include N TB tail bits, which are used to terminate the trellis of the constituent codes.
- N TB 12 bits at the output of the turbo encoder, 6 tail bits per constituent code.
- it is possible to use tail-biting constituent convolutional codes, thus making N TB 0.
- Interleaver 201 can be a contention-free interleaver.
- Interleaver 201 can be a contention-free interleaver of size K′.
- Interleaver 201 interleaves the input block and passes the input block in interleaved order to encoding circuitry 203 .
- Encoding circuitry 203 then encodes the interleaved input block.
- encoding circuitry 202 encodes the original input block.
- the codeword block x is composed of systematic block (equal to the input block), output of encoding circuitry 202 , and output of encoding circuitry 203 .
- the codeword block x is then sent to transmitter 107 which can also receive a copy of the input block directly.
- Both ⁇ (•) and ⁇ (•) are composed of multiples of C.
- the overall interleaver ⁇ (•) thus constructed has quasi-cyclic (i.e., periodic) properties with period C, and when Used in tail-biting turbo codes, the turbo code itself becomes quasi-cyclic leading to a simplified code design procedure.
- interleaver 201 can satisfy (1) for various values of M, then the decoder can be implemented using various degrees of parallelism (one for each M). Thus it is desirable to choose K′ that has various factors.
- K′ For an A interleaver of length K′, any window size W where W is a multiple of C and a factor of K′, can be used for high-speed decoding without memory access contentions. This provides flexibility and scalability in decoder design by allowing a wide range of parallelism factors M. Thus, a good compromise between decoding speed and complexity can be made based on system (or classes of user elements) requirements.
- interleaver size determination circuitry 103 needs to determine an interleaver size K′ for a given K.
- This section describes a way of selecting a limited number of sizes (i.e., K′) for which turbo code interleavers may be defined.
- filler insertion circuitry (along with puncturing or rate-matching methods) may be used to handle any information block size K.
- the interleaver size selection must take into consideration the decoding burden and performance degradation due to the filler bits.
- the number of filler bits K filler padded to an information block to form an input block is desirable to be limited to a small percent (e.g., around 10-13%) of the information block size K. This is achieved by limiting the difference between adjacent interleaver sizes, i.e., adjacent K′ values (assuming all available K′ values are sorted in ascending order).
- the number of filler bits are minimized by choosing the smallest K′ available such that K′ ⁇ K.
- K′′ a p ⁇ f, p min ⁇ p ⁇ p max ; f min ⁇ f ⁇ f max , (2) where a is an integer, f is a continuous integer between f min and f max , and p takes integer values between p min and p max , a>1, p max >p min , p min >1.
- K min a p min ⁇ f min
- K max a p max ⁇ f max
- This method of selecting a limited set of sizes to cover a rage of information block sizes is referred to as semi-log slicing. For a given information block of size K, a size K′ related to a K′′ based on the semilog-slicing table, and input block size K.
- the semilog slicing is similar to the companding operation employed in compressing signals of large dynamic range, for example, A-law and mu-Law companders used in speech codecs.
- the semilog slicing rule allows an efficient design to cover a wide-range of information block sizes.
- the separation between two adjacent block sizes K′′ is given by a p , which means that a maximum of a p ⁇ 1 filler bits are added if the information block size K is in group p and the interleaver size is equal to K′′.
- f max a ⁇ (f min ⁇ 1)
- the semi-log slicing method is very simple in that for any block size, the interleaver size K′ to be used may be easily determined based on a K′′ computed from (2). Once the semilog slice sizes are defined (K′′), the interleaver size K′ may be obtained from the semilog slice sizes (without deviating substantially) by, for example,
- K′ is not a multiple of 7
- K′ is a multiple of C and hence an ARP interleaver for size K′ can be designed.
- d can be chosen for all K′′ that need to be adjusted.
- One important consideration for choosing d is that it should be such that all sizes obtained by (3) or (4) have a substantial number of factors, which allows supporting a wide range of parallelism for the CF interleaver thus defined.
- a set of CF ARP interleavers suitable to cover information block sizes for 3GPP Long Term Evolution (LTE) is shown in Table 1.
- the circuitry 103 can determine the interleaver size K′ to be used for K by choosing the smallest value of K′ from 105 that is greater than or equal to K.
- the block size K′ can be calculated using (2) or (5), and moreover, when f is a multiple of 7 and tail-biting encoding is used, interleaver size calculated using (3) or (4) may be used in addition.
- the parameters associated with the interleaver of size K′ is then looked up from the storage means for interleaver parameter 105 , which is normally stored in memory for the communication device.
- Storage means for interleaver parameter 105 may store ARP interleaver parameters using the values of K′, C, P 0 , ⁇ (•) and ⁇ (•) that are taken from at least one row of Table 1.
- the interleaver 201 may use an ARP interleaver with the values of K′, C, P 0 , ⁇ (•) and ⁇ (•) that are taken from at least one row of the following table:
- interleaver table storage can be reduced by using a set of ARP parameters that apply to more than one interleaver size.
- the 1024-bit, 2048-bit, 4096-bit interleavers can all use the same ARP parameters.
- some of the rows of the table may be redesigned based on different C values, if needed.
- some of the entries of the parameters e.g., ⁇ (0) and ⁇ (0) may be fixed (e.g., always zero).
- FIG. 3 is a block diagram of the receiver 300 .
- the filler handling circuitry 302 receives a signal vector which may have been transmitted through the channel, e.g., over-the-air.
- Circuitry 306 determines the interleaver size K′ which can be done in a similar fashion as discussed above, for example by performing a table lookup from storage 308 , or via calculations such as (7), (8) and (2). Therefore, given the information block size K, the decoder 304 uses the same interleaver size K′ that was used by the encoder 101 .
- Filler handling circuitry 302 is used to appropriately process received signal vector and the filler bits positions (e.g., if filler bit positions are known, then the corresponding LLR magnitudes can be set to very high magnitudes during decoding). Then turbo decoder 304 performs decoding and obtains an estimate û of the input block of length K′. Finally the information block extraction circuitry 310 extracts an estimated information block from û. Though the filler handling circuitry 302 is shown outside the turbo decoder for ease of explanation, these two can be combined in implementation.
- FIG. 4 is a block diagram of the turbo decoder of FIG. 3 .
- interleaver 402 and de-interleaver 401 exist between decoding circuitry 403 and decoding circuitry 404 .
- Parameter K filler may or may not be needed by the turbo decoder 304 , thus labeled as dashed line in FIG. 4 .
- K′ K′′.
- the values of K′, C, P 0 , ⁇ (•) and ⁇ (•) are preferably taken from a row of Table 1.
- the deinterleaver 401 performs an inverse function of interleaver 402
- FIG. 5 is a flow chart showing operation of the transmitter 100 .
- K′ K′′.
- filler insertion circuitry 109 receives an information block of size K and pads the information block of size K into an input block u of size K′ and outputs the input block u.
- Interleaver 201 then interleaves the input block of size K′ (step 507 ) (preferably using a contention-free interleaver) and sends the interleaved block of size K′ to encoding circuitry 203 (step 509 ).
- step 511 the original input block and interleaved input block are encoded.
- the values of K′, C, P 0 , ⁇ (•) and ⁇ (•) are preferably taken from Table 1.
- FIG. 6 is a flow chart showing operation of the receiver of FIG. 3 .
- the logic flow begins at step 601 where circuitry 306 determines the interleaver size K′.
- Circuitry 302 adds the filler bit information to the received signal vector, for example, if the filler bits and filler bit positions are known circuitry 302 may set to high magnitudes the Log Likelihood Ratios (LLRs) of those positions in the turbo decoder input.
- LLCRs Log Likelihood Ratios
- turbo decoder decodes the decoder input block using interleaver and de-interleaver of size K′ and outputs an estimated û of the input block of length K′.
- information block extraction circuitry 310 removes filler bits to obtain an estimate of the information block of length K.
- the estimated information block is output.
- the interleaver table may be enhanced further to handle special cases, including: (a) Using an additional set of interleaver sizes defined to cover any special block sizes that must be handled, e.g., without filler bits or with fewer filler bits. (b) The interleaver sizes can be slightly adjusted by adding or subtracting a small value from the semilog slice sizes.
- the invention has been described above assuming binary-input turbo encoder, the same principle can be applied when the turbo encoder takes symbols as input.
- a duo-binary turbo code takes a symbol of two binary bits at a time, and the turbo interleaver permutes symbols (further scrambling such as alternating the bits within a symbol may be performed).
- the input block size is measured in symbols, and the interleaver size is equal to the number of symbols in the input block.
- the interleaver sizes and the interleaver parameters are stored in a look-up table, it is possible that they may be determined via other means such as algebraic calculation.
Abstract
Description
-
- K denotes the size of an information block.
- K′ denotes an interleaver size (i.e., input block size for which a turbo code interleaver is defined).
- K″ denotes an auxiliary variable that may be used in determining an interleaver size.
- Kfiller denotes the number of filler bits added to the information block.
- π denotes the turbo code internal interleaver.
- The flooring operation └x┘ denotes the largest integer smaller than or equal to x and the ceiling operation ┌x┐ denotes the smallest integer larger than or equal to x.
- u denotes an input block, which has a length of K′ and is sent to the turbo encoder at the transmitter. û denotes the estimated input block, which has a length of K′ and is produced by the turbo decoder at the receiver. Note that û=u when there is no decoding error. Otherwise û≠u.
where 0≦j<W, 0≦t; ν<M(=K′/W), and t≠ν. Though it is not always necessary, for efficient turbo decoder design, typically all the M windows are full, where K′=MW. The terms in (1) are the memory ban addresses that are concurrently accessed by the M processors when writing the extrinsic values to the output memory bans during iterative decoding. If these memory bank addresses are all unique during each read and write operations, there are no contentions in memory access and hence the (de)interleaving latency can be avoided, leading to a high speed decoder implementation.
π(i)=(iP 0 +A+d(i))mod K′
where 0≦i≦K′−1 is the sequential index of the bit positions after interleaving, π(i) is the bit index before interleaving corresponding to position i, K′ is the interleaver size, P0 is a number that is relatively prime to K′, A is a constant, C is a small number that divides K′, and d(i) is a dither vector of the form d(i)=α(i mod C)+P0×β(i mod C) where α(•) and β(•) are vectors each of length C, periodically applied for 0≦i≦K′−1. Both α(•) and β(•) are composed of multiples of C. The overall interleaver π(•) thus constructed has quasi-cyclic (i.e., periodic) properties with period C, and when Used in tail-biting turbo codes, the turbo code itself becomes quasi-cyclic leading to a simplified code design procedure.
K″=a p ×f, p min ≦p≦p max ; f min ≦f≦f max, (2)
where a is an integer, f is a continuous integer between fmin and fmax, and p takes integer values between pmin and pmax, a>1, pmax>pmin, pmin>1. Although not necessary, one can choose these parameters such that Kmin=ap
-
- fmin should be large to reduce the fraction of the filler bits;
- fmin should be small to limit the size of the interleaver table, since the number of block sizes defined for each p is fmax−fmin+1=(a−1)×fmin, assuming fmax=a×fmin−1.
-
- 1. Using K′=K″. In other words, the semilog slice sizes may be used as valid interleaver sizes directly.
- 2. Using K′=K″ when K″ is not a multiple of (2m−1), otherwise using K′=K″+δ(K″) when K″ is a multiple of (2m−1), wherein m is a memory length of a constituent convolutional encoder, and δ(K″) is a small positive or negative integer not equal to a multiple of (2m−1). This is helpful if the constituent convolutional codes are tail-biting, where multiples of (2m−1) are invalid. The sizes defined by the semi-log slicing method of (2) may sometimes include sizes that are unsuitable interleaver sizes for turbo coding. For example, the tail-biting version of the eight-state 3GPP turbo encoder (m=3) does not support input block sizes (i.e., interleaver sizes) that are multiples of 7 (i.e., 2m−1). In such cases, whenever equation (2) results in a size that is multiple of 2m−1, a small value is subtracted or added to it so that the resulting size is no longer a multiple of 2m−1.
K′=K″−dC (3)
or
K′=K″+dC (4)
when K″ is a multiple of 7. Since C is normally an even integer, such as, 4, 8, 12, or 16, this adjustment gives two advantages, namely, (a) K′ is not a multiple of 7, and (b) K′ is a multiple of C and hence an ARP interleaver for size K′ can be designed.
K″=2p ×f, p=4, 5, . . . , 9; f=8, 9, . . . , 15, (5)
and K′ is determined from K″. The interleaver sizes are determined as follows: using K′=K″ and for p=4, 5, 6, 7, 8, 9 and f=8, 9, 10, 11, 12, 13, 15, and using K′=K″−dC for p=4, 5, 6, 7, 8, 9 and f=14, covering K from 128 to 7680. The last three sizes (f=13, 14, 15) corresponding to p=9 may be removed such that Kmax=6144, with Kmin=128. Equation (3) is used along with d=2 when f=14 (i.e., to avoid interleaver sizes that are multiples of 7) in order to handle tail-biting TC. These sizes are highlighted in Table 1. Once the interleaver sizes in 105 are determined, a CF interleaver may be designed for each interleaver size.
In particular, for the parameters in (5), b=3, and
p=└log2(K)┘−3 (8)
TABLE 1 |
A table of interleaver parameters for ARP interleavers with A = 3. |
Interleaver | ||||
size K′ | C | P0 | α | β |
128 | 4 | 81 | 4 | 0 | 0 | 4 | 0 | 20 | 120 | 68 | ||||||||
144 | 4 | 91 | 4 | 0 | 4 | 0 | 0 | 76 | 20 | 52 | ||||||||
160 | 4 | 123 | 4 | 4 | 0 | 0 | 0 | 4 | 8 | 12 | ||||||||
176 | 4 | 127 | 4 | 4 | 0 | 0 | 0 | 12 | 112 | 44 | ||||||||
192 | 4 | 169 | 4 | 0 | 4 | 0 | 0 | 8 | 4 | 16 | ||||||||
208 | 4 | 37 | 4 | 0 | 4 | 0 | 0 | 68 | 20 | 164 | ||||||||
216 | 4 | 121 | 4 | 4 | 0 | 0 | 0 | 68 | 12 | 28 | ||||||||
240 | 4 | 161 | 0 | 0 | 4 | 4 | 0 | 16 | 196 | 212 | ||||||||
256 | 4 | 31 | 0 | 0 | 4 | 4 | 0 | 60 | 8 | 68 | ||||||||
288 | 4 | 131 | 0 | 4 | 0 | 4 | 0 | 80 | 144 | 36 | ||||||||
320 | 4 | 69 | 0 | 0 | 4 | 4 | 0 | 4 | 8 | 12 | ||||||||
352 | 4 | 35 | 4 | 0 | 0 | 4 | 0 | 48 | 96 | 152 | ||||||||
384 | 4 | 91 | 0 | 0 | 4 | 4 | 0 | 4 | 20 | 24 | ||||||||
416 | 4 | 31 | 4 | 4 | 0 | 0 | 0 | 24 | 28 | 60 | ||||||||
440 | 4 | 53 | 0 | 4 | 4 | 0 | 0 | 4 | 20 | 216 | ||||||||
480 | 4 | 53 | 0 | 4 | 4 | 0 | 0 | 72 | 192 | 12 | ||||||||
512 | 4 | 273 | 0 | 0 | 4 | 4 | 0 | 20 | 8 | 24 | ||||||||
576 | 4 | 29 | 0 | 0 | 4 | 4 | 0 | 64 | 120 | 68 | ||||||||
640 | 4 | 147 | 0 | 0 | 4 | 4 | 0 | 24 | 12 | 4 | ||||||||
704 | 4 | 309 | 0 | 0 | 4 | 4 | 0 | 4 | 12 | 8 | ||||||||
768 | 4 | 241 | 0 | 0 | 4 | 4 | 0 | 4 | 12 | 8 | ||||||||
832 | 4 | 53 | 0 | 0 | 4 | 4 | 0 | 4 | 12 | 8 | ||||||||
888 | 4 | 77 | 0 | 4 | 4 | 0 | 0 | 48 | 64 | 140 | ||||||||
960 | 4 | 143 | 0 | 0 | 4 | 4 | 0 | 4 | 12 | 8 | ||||||||
1024 | 8 | 245 | 8 | 0 | 8 | 8 | 0 | 0 | 8 | 0 | 0 | 8 | 40 | 16 | 96 | 80 | 56 | 88 |
1152 | 8 | 119 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 40 | 64 | 80 | 48 | 24 | 88 |
1280 | 8 | 897 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 96 | 88 | 32 | 16 | 48 | 40 |
1408 | 8 | 593 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 0 | 0 | 8 | 96 | 48 | 32 | 16 | 80 | 40 |
1536 | 8 | 1139 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 16 | 56 | 88 | 80 | 24 | 72 | 64 |
1664 | 8 | 1451 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 0 | 0 | 16 | 40 | 96 | 88 | 80 | 32 | 48 |
1776 | 8 | 115 | 8 | 0 | 0 | 0 | 0 | 8 | 8 | 8 | 0 | 88 | 56 | 40 | 152 | 120 | 128 | 200 |
1920 | 8 | 233 | 8 | 0 | 8 | 8 | 8 | 0 | 0 | 0 | 0 | 16 | 24 | 88 | 64 | 8 | 32 | 40 |
2048 | 8 | 77 | 0 | 0 | 8 | 8 | 0 | 8 | 8 | 0 | 0 | 64 | 136 | 160 | 48 | 192 | 24 | 120 |
2304 | 8 | 1631 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 24 | 80 | 40 | 16 | 96 | 64 | 32 |
2560 | 8 | 2249 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 72 | 40 | 88 | 48 | 32 | 96 |
2816 | 8 | 1235 | 8 | 8 | 0 | 0 | 0 | 8 | 0 | 8 | 0 | 16 | 88 | 96 | 56 | 24 | 48 | 64 |
3072 | 8 | 671 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 48 | 32 | 64 | 88 | 40 | 56 |
3328 | 8 | 1459 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 32 | 8 | 56 | 80 | 16 | 72 | 48 |
3568 | 8 | 147 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 72 | 64 | 48 | 88 | 8 | 184 | 248 |
3840 | 8 | 3721 | 8 | 0 | 8 | 8 | 8 | 0 | 0 | 0 | 0 | 16 | 48 | 24 | 8 | 32 | 40 | 88 |
4096 | 8 | 83 | 8 | 8 | 0 | 0 | 0 | 8 | 8 | 0 | 0 | 16 | 120 | 152 | 24 | 216 | 64 | 240 |
4608 | 8 | 181 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 0 | 32 | 176 | 216 | 136 | 64 | 224 | 248 |
5120 | 8 | 3629 | 0 | 8 | 0 | 8 | 8 | 0 | 8 | 0 | 0 | 16 | 40 | 96 | 88 | 80 | 32 | 48 |
5632 | 8 | 211 | 0 | 0 | 8 | 0 | 8 | 0 | 8 | 8 | 0 | 24 | 208 | 112 | 224 | 168 | 184 | 48 |
6144 | 8 | 4355 | 8 | 0 | 8 | 8 | 8 | 0 | 0 | 0 | 0 | 8 | 16 | 64 | 24 | 48 | 80 | 32 |
Note in the table, the dither vectors α (and similarly β) is written such that the leftmost value corresponds to α(0) (and similarly β(0)). |
Properties of the ARP Interleaver:
-
- 1. An Offset value A=3 is chosen for reducing storage.
- 2. Based on performance study and storage, a cycle length C=4 is used for K′<1024, C=8 for K′≧1024.
- 3. For each block size, simulations were performed to make sure the ARP interleaver performance (with tail-biting encoding) is near to or better than the performance with the interleaver defined in the specification for 3GPP Turbo code.
- 4. Table 1, based on (5) was defined to cover a particular set of interleaver sizes (e.g., 128˜6144 bits). If preferred, other interleaver sizes can be deleted or added.
- 5. All the interleavers defined in 105 can be used for either tailed or tail-biting turbo codes depending upon the permissible performance degradation.
Claims (18)
Priority Applications (10)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/538,347 US7925956B2 (en) | 2006-10-03 | 2006-10-03 | Method and apparatus for encoding and decoding data |
KR1020097006796A KR20090057415A (en) | 2006-10-03 | 2007-09-17 | Method and apparatus for encoding and decoding data |
MYPI20091221 MY150923A (en) | 2006-10-03 | 2007-09-17 | Method and apparatus for encoding and decoding data |
RU2009116644/08A RU2451392C2 (en) | 2006-10-03 | 2007-09-17 | Method and apparatus for encoding and decoding data |
PCT/US2007/078678 WO2008042587A2 (en) | 2006-10-03 | 2007-09-17 | Determination of interleaver sizes for turbo codes |
BRPI0719266-5A BRPI0719266B1 (en) | 2006-10-03 | 2007-09-17 | method and apparatus for operating a turbo encoder |
EP07842626A EP2074698A2 (en) | 2006-10-03 | 2007-09-17 | Determination of interleaver sizes for turbo codes |
CN200780037226.7A CN101553990B (en) | 2006-10-03 | 2007-09-17 | Determination of interleaver sizes for turbo codes |
JP2007252798A JP2008092571A (en) | 2006-10-03 | 2007-09-28 | Method and apparatus for encoding and decoding data |
ARP070104366A AR063104A1 (en) | 2006-10-03 | 2007-10-02 | METHOD AND APPARATUS FOR CODING AND DECODING DATA |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/538,347 US7925956B2 (en) | 2006-10-03 | 2006-10-03 | Method and apparatus for encoding and decoding data |
Publications (2)
Publication Number | Publication Date |
---|---|
US20080091986A1 US20080091986A1 (en) | 2008-04-17 |
US7925956B2 true US7925956B2 (en) | 2011-04-12 |
Family
ID=39247696
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/538,347 Active 2029-06-22 US7925956B2 (en) | 2006-10-03 | 2006-10-03 | Method and apparatus for encoding and decoding data |
Country Status (10)
Country | Link |
---|---|
US (1) | US7925956B2 (en) |
EP (1) | EP2074698A2 (en) |
JP (1) | JP2008092571A (en) |
KR (1) | KR20090057415A (en) |
CN (1) | CN101553990B (en) |
AR (1) | AR063104A1 (en) |
BR (1) | BRPI0719266B1 (en) |
MY (1) | MY150923A (en) |
RU (1) | RU2451392C2 (en) |
WO (1) | WO2008042587A2 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080316977A1 (en) * | 2007-06-25 | 2008-12-25 | Qualcomm Incorporated | Channel interleaving structure for a wireless communication system |
US20100077265A1 (en) * | 2006-11-01 | 2010-03-25 | Qualcomm Incorporated | Turbo interleaver for high data rates |
US20110197104A1 (en) * | 2006-11-30 | 2011-08-11 | Motorola Mobility, Inc. | Method and apparatus for encoding and decoding data |
US9337871B2 (en) | 2012-11-16 | 2016-05-10 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8356232B2 (en) | 2006-10-06 | 2013-01-15 | Motorola Mobility Llc | Method and apparatus for encoding and decoding data |
US7979772B2 (en) * | 2006-10-25 | 2011-07-12 | Samsung Electronics Co., Ltd. | Method and system for providing a contention-free interleaver for channel coding |
US8032811B2 (en) * | 2006-11-09 | 2011-10-04 | Samsung Electronics Co., Ltd. | Efficient almost regular permutation (ARP) interleaver and method |
US8185785B2 (en) * | 2006-11-28 | 2012-05-22 | At&T Intellectual Property I, L.P. | Broadcasting of digital video to mobile terminals |
US8289999B1 (en) * | 2009-11-05 | 2012-10-16 | L-3 Services, Inc. | Permutation mapping for ARQ-processed transmissions |
JP5510189B2 (en) * | 2010-08-25 | 2014-06-04 | 三菱電機株式会社 | Interleaving apparatus and interleaving method |
US8621160B2 (en) * | 2010-12-17 | 2013-12-31 | Futurewei Technologies, Inc. | System and method for contention-free memory access |
CN102136888B (en) * | 2011-04-20 | 2013-02-20 | 大唐移动通信设备有限公司 | Sub-block de-interleaving input data processing method and device |
KR101286021B1 (en) * | 2012-02-02 | 2013-07-19 | 주식회사 이노와이어리스 | Apparatus and method for generating interleaved index |
US10135467B2 (en) * | 2016-06-08 | 2018-11-20 | Echelon Corporation | Methods and systems for applying an improved interleaver for modems operating on power grid |
US10243638B2 (en) | 2016-10-04 | 2019-03-26 | At&T Intellectual Property I, L.P. | Forward error correction code selection in wireless systems |
US10270559B2 (en) | 2016-10-04 | 2019-04-23 | At&T Intellectual Property I, L.P. | Single encoder and decoder for forward error correction coding |
CN110071728B (en) * | 2018-01-24 | 2021-02-05 | 华为技术有限公司 | Interleaving method and interleaving equipment |
Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6289486B1 (en) * | 1997-07-30 | 2001-09-11 | Samsung Electronics Co., Ltd. | Adaptive channel encoding method and device |
US6304991B1 (en) * | 1998-12-04 | 2001-10-16 | Qualcomm Incorporated | Turbo code interleaver using linear congruential sequence |
US6314534B1 (en) * | 1999-03-31 | 2001-11-06 | Qualcomm Incorporated | Generalized address generation for bit reversed random interleaving |
US6339834B1 (en) * | 1998-05-28 | 2002-01-15 | Her Majesty The Queen In Right Of Canada, As Represented By The Minister Of Industry Through The Communication Research Centre | Interleaving with golden section increments |
US6347385B1 (en) * | 1998-08-03 | 2002-02-12 | Nortel Networks Limited | Interleavers for turbo code |
US6427214B1 (en) * | 1998-09-29 | 2002-07-30 | Nortel Networks Limited | Interleaver using co-set partitioning |
US20030023909A1 (en) | 2000-03-17 | 2003-01-30 | Tetsuya Ikeda | Interleave address generator |
US6591381B1 (en) | 1999-04-06 | 2003-07-08 | Samsung Electronics Co., Ltd. | 2-dimensional interleaving apparatus and method |
US6625762B1 (en) * | 1999-03-05 | 2003-09-23 | Canon Kabushiki Kaisha | Interleaving device and method for turbocoding and turbodecoding |
US6668343B1 (en) * | 1998-12-21 | 2003-12-23 | Samsung Electronics Co., Ltd. | Interleaving/deinterleaving device and method for communication system |
US6766489B1 (en) * | 1998-11-09 | 2004-07-20 | Canon Kabushiki Kaisha | Device and method of adapting turbocoders and the associated decoders to sequences of variable length |
US6775800B2 (en) * | 2000-01-03 | 2004-08-10 | Icoding Technology, Inc. | System and method for high speed processing of turbo codes |
US6785859B2 (en) * | 2000-08-04 | 2004-08-31 | Texas Instruments Incorporated | Interleaver for variable block size |
US6854077B2 (en) * | 2000-08-05 | 2005-02-08 | Motorola, Inc. | Apparatus and method for providing turbo code interleaving in a communications system |
US7170849B1 (en) * | 2001-03-19 | 2007-01-30 | Cisco Systems Wireless Networking (Australia) Pty Limited | Interleaver, deinterleaver, interleaving method, and deinterleaving method for OFDM data |
US7236480B2 (en) * | 2002-06-07 | 2007-06-26 | Sandbridge Technologies, Inc. | Method of first interleaving of a two interleaver transmitter |
EP1850486A1 (en) | 2005-02-03 | 2007-10-31 | Matsushita Electric Industrial Co., Ltd. | Parallel interleaver, parallel deinterleaver, and interleave method |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
ES2344299T3 (en) * | 1997-07-30 | 2010-08-24 | Samsung Electronics Co., Ltd. | METHOD AND DEVICE FOR ADAPTIVE CHANNEL CODING. |
JP2001060934A (en) * | 1999-08-20 | 2001-03-06 | Matsushita Electric Ind Co Ltd | Ofdm communication equipment |
RU2265960C2 (en) * | 2003-06-16 | 2005-12-10 | Федеральное государственное унитарное предприятие "Калужский научно-исследовательский институт телемеханических устройств" | Method for transferring information with use of adaptive alternation |
-
2006
- 2006-10-03 US US11/538,347 patent/US7925956B2/en active Active
-
2007
- 2007-09-17 MY MYPI20091221 patent/MY150923A/en unknown
- 2007-09-17 EP EP07842626A patent/EP2074698A2/en not_active Withdrawn
- 2007-09-17 BR BRPI0719266-5A patent/BRPI0719266B1/en active IP Right Grant
- 2007-09-17 WO PCT/US2007/078678 patent/WO2008042587A2/en active Application Filing
- 2007-09-17 RU RU2009116644/08A patent/RU2451392C2/en active
- 2007-09-17 KR KR1020097006796A patent/KR20090057415A/en not_active Application Discontinuation
- 2007-09-17 CN CN200780037226.7A patent/CN101553990B/en active Active
- 2007-09-28 JP JP2007252798A patent/JP2008092571A/en active Pending
- 2007-10-02 AR ARP070104366A patent/AR063104A1/en unknown
Patent Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6289486B1 (en) * | 1997-07-30 | 2001-09-11 | Samsung Electronics Co., Ltd. | Adaptive channel encoding method and device |
US6339834B1 (en) * | 1998-05-28 | 2002-01-15 | Her Majesty The Queen In Right Of Canada, As Represented By The Minister Of Industry Through The Communication Research Centre | Interleaving with golden section increments |
US6347385B1 (en) * | 1998-08-03 | 2002-02-12 | Nortel Networks Limited | Interleavers for turbo code |
US6427214B1 (en) * | 1998-09-29 | 2002-07-30 | Nortel Networks Limited | Interleaver using co-set partitioning |
US6766489B1 (en) * | 1998-11-09 | 2004-07-20 | Canon Kabushiki Kaisha | Device and method of adapting turbocoders and the associated decoders to sequences of variable length |
US6304991B1 (en) * | 1998-12-04 | 2001-10-16 | Qualcomm Incorporated | Turbo code interleaver using linear congruential sequence |
US6668343B1 (en) * | 1998-12-21 | 2003-12-23 | Samsung Electronics Co., Ltd. | Interleaving/deinterleaving device and method for communication system |
US6625762B1 (en) * | 1999-03-05 | 2003-09-23 | Canon Kabushiki Kaisha | Interleaving device and method for turbocoding and turbodecoding |
US6314534B1 (en) * | 1999-03-31 | 2001-11-06 | Qualcomm Incorporated | Generalized address generation for bit reversed random interleaving |
US6591381B1 (en) | 1999-04-06 | 2003-07-08 | Samsung Electronics Co., Ltd. | 2-dimensional interleaving apparatus and method |
US6775800B2 (en) * | 2000-01-03 | 2004-08-10 | Icoding Technology, Inc. | System and method for high speed processing of turbo codes |
US20030023909A1 (en) | 2000-03-17 | 2003-01-30 | Tetsuya Ikeda | Interleave address generator |
US6785859B2 (en) * | 2000-08-04 | 2004-08-31 | Texas Instruments Incorporated | Interleaver for variable block size |
US6854077B2 (en) * | 2000-08-05 | 2005-02-08 | Motorola, Inc. | Apparatus and method for providing turbo code interleaving in a communications system |
US7170849B1 (en) * | 2001-03-19 | 2007-01-30 | Cisco Systems Wireless Networking (Australia) Pty Limited | Interleaver, deinterleaver, interleaving method, and deinterleaving method for OFDM data |
US7236480B2 (en) * | 2002-06-07 | 2007-06-26 | Sandbridge Technologies, Inc. | Method of first interleaving of a two interleaver transmitter |
EP1850486A1 (en) | 2005-02-03 | 2007-10-31 | Matsushita Electric Industrial Co., Ltd. | Parallel interleaver, parallel deinterleaver, and interleave method |
Non-Patent Citations (11)
Title |
---|
3GPP TR 25.814 V1.2 2 (Mar. 2006): "Physical layer aspects for evolved UTRA (Release 7)". |
3GPP TS 25.212 v6.4.0 (Mar. 2005): "Multiplexing and Channel Coding (FDD) (Release 6)". |
Berrou C., Saouter Y., Douillard C., Kerouedan S., Jezequel M., "Designing good permutations for Turbo Codes: towards a single model", in Proceedings of ICC 2004, vol. 1, pp. 341-345, Jun. 2004. |
Blankenship T Keith et al.: "High-throughout turbo decodingtechniques for 4G", Proceedings, International Conference On Third Generation Wireless And Beyond, XX, XX, May 28, 2002, pp. 137-142. |
E. Rosnes and O. Ytrehus, "Improved algorithms for the determination of turbo-code weight distributions," IEEE Transactions on Communications, vol. 53, No. 1, pp. 20-26, Jan. 2005. |
Japan Office Action: "Summary of Office Action" issued on Aug. 17, 2010. |
Motorola, "Modified Code Block Segmentation rule for LTE Channel coding," to be submitted to TSG RAN WG#47, Nov. 2006. |
Patent Cooperation Treaty, International Search Report and Written Opinion of the International Searching Authority for International Application No. PCT/US2007/078678 May 20, 2007, 15 pages. |
R1-061050, Motorola, France Telecom, GET, Orange, "EUTRA FEC Enhancement," 3GPP TSG RAN WG1#44bis, Athens, Greece. Mar. 27-31, 2006. |
R1-062079, Motorola, "Eliminating tail bits in LTE channel coding," 3GPP TSG RAN WG1#46, Tallinn, Estonia, Aug. 28-Sep. 1. 2006. |
R1-062079, Motorola, ,"Eliminating memory contentions in LTE channel coding," 3GPP TSG RAN WG1#46, Tallinn, Estonia, Aug. 28-Sep. 1, 2006. |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100077265A1 (en) * | 2006-11-01 | 2010-03-25 | Qualcomm Incorporated | Turbo interleaver for high data rates |
US8583983B2 (en) * | 2006-11-01 | 2013-11-12 | Qualcomm Incorporated | Turbo interleaver for high data rates |
US20110197104A1 (en) * | 2006-11-30 | 2011-08-11 | Motorola Mobility, Inc. | Method and apparatus for encoding and decoding data |
US8850286B2 (en) | 2006-11-30 | 2014-09-30 | Motorola Mobility Llc | Method and apparatus for encoding and decoding data |
US20080316977A1 (en) * | 2007-06-25 | 2008-12-25 | Qualcomm Incorporated | Channel interleaving structure for a wireless communication system |
US8576807B2 (en) * | 2007-06-25 | 2013-11-05 | Qualcomm Incorporated | Channel interleaving structure for a wireless communication system |
US9337871B2 (en) | 2012-11-16 | 2016-05-10 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data |
US9966973B2 (en) | 2012-11-16 | 2018-05-08 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data |
US10554224B2 (en) | 2012-11-16 | 2020-02-04 | Huawei Technologies Co., Ltd. | Method and apparatus for processing data with polar encoding |
Also Published As
Publication number | Publication date |
---|---|
MY150923A (en) | 2014-03-14 |
RU2451392C2 (en) | 2012-05-20 |
JP2008092571A (en) | 2008-04-17 |
CN101553990B (en) | 2014-02-19 |
CN101553990A (en) | 2009-10-07 |
EP2074698A2 (en) | 2009-07-01 |
WO2008042587A2 (en) | 2008-04-10 |
US20080091986A1 (en) | 2008-04-17 |
AR063104A1 (en) | 2008-12-30 |
BRPI0719266B1 (en) | 2020-12-01 |
KR20090057415A (en) | 2009-06-05 |
WO2008042587A3 (en) | 2008-07-10 |
BRPI0719266A2 (en) | 2016-04-12 |
RU2009116644A (en) | 2010-11-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8850286B2 (en) | Method and apparatus for encoding and decoding data | |
US7925956B2 (en) | Method and apparatus for encoding and decoding data | |
US7873893B2 (en) | Method and apparatus for encoding and decoding data | |
JP3610329B2 (en) | Turbo coding method using large minimum distance and system for realizing the same | |
KR100876735B1 (en) | Iterative decoding stop device and method in mobile communication system | |
JP5231570B2 (en) | Efficient address generation for prune interleaver and prune deinterleaver | |
KR20080088030A (en) | Serial concatenated ldpc encoder, decoder and decoding method thereof | |
US9130728B2 (en) | Reduced contention storage for channel coding | |
Classon et al. | Channel coding and link adaptation | |
Hinduja et al. | Verilog implementation of the turbo encoder and decoder using log map based Iterative decoding | |
Asadi et al. | Compression of a Markov source with side information at the decoder using turbo codes | |
JP2001326577A (en) | Device and method for directly connected convolutional encoding |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:NIMBALKER, AJIT;BLANKENSHIP, YUFEI WU;CLASSON, BRIAN K.;REEL/FRAME:018342/0546Effective date: 20061003 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034500/0001Effective date: 20141028 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
US8555193B2 - System for intelligent automated layout and management of interactive windows - Google Patents
System for intelligent automated layout and management of interactive windows Download PDFInfo
- Publication number
- US8555193B2 US8555193B2 US12/321,595 US32159509A US8555193B2 US 8555193 B2 US8555193 B2 US 8555193B2 US 32159509 A US32159509 A US 32159509A US 8555193 B2 US8555193 B2 US 8555193B2
- Authority
- US
- United States
- Prior art keywords
- window
- windows
- representation
- new
- viewable area
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
- 230000002452 interceptive effect Effects 0.000 title description 2
- 238000000034 method Methods 0.000 claims description 29
- 230000004044 response Effects 0.000 claims description 11
- 230000001131 transforming effect Effects 0.000 claims description 7
- 238000012360 testing method Methods 0.000 description 20
- 230000006870 function Effects 0.000 description 8
- 230000000694 effects Effects 0.000 description 4
- 230000006399 behavior Effects 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 238000012935 Averaging Methods 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000004140 cleaning Methods 0.000 description 1
- 239000012634 fragment Substances 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 239000003550 marker Substances 0.000 description 1
- 230000008569 process Effects 0.000 description 1
- 230000003014 reinforcing effect Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 238000012549 training Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
Definitions
- the media viewing environment consists of a core piece of technology called the intelligent window layout manager.
- This media viewing layout manager according to the present invention (See FIG. 1 ) automatically positions and organizes the constrained and extendable media windows and achieves a different type of user experience than has previously been available in a web browser. The system does this by allowing users to explore multiple “windows” easily without needing to open an additional browser window, grant more viewing space when necessary, and remove the added viewing space to save users time cleaning up and managing their viewing space.
- window managers have operated by primarily manual interaction, such that users who open, close, move, minimize, maximize, etc windows must do so without any automated help from the computer.
- Some automatic systems have existed to help users with dragging files over windows that are partially off-screen (and bringing them onscreen for the purposes of the drag drop target, like the Mac OS X Finder), or helping users find windows more easily (Mac OS X's Exposé feature), but none have built a system for automatically managing windows within a constrained, but extendable viewing environment.
- Expose the premise is that windows accumulate into a clutter of overlapping windows over time and users have difficulty finding a specific window.
- Expose users press a button and the windows all minimize to a thumbnailed version of their size and are positioned so that all are visible in the fixed display resolution of the screen and are non-overlapping. Expose does not assume that the fixed resolution of the screen can be extended, in that it does not create new space outside the fixed resolution of the screen when not enough space is available. Instead, Expose must shrink the windows until they are small enough that all are visible in one constrained but non-extendable resolution of the screen.
- the present invention relates to the automated layout and scrolling of windows.
- a method of transforming an appearance of a display of a computer that includes at least one or a plurality of windows, the method of transforming based upon a user commanding the computer to add a new window or to remove an existing window and comprising the steps of:
- a layout manager program that is executed by a processor of the computer and contains a plurality of instructions to cause the computer to automatically arrange placement of the one or a plurality of windows within a representation of an extensible display area stored in a memory wherein a subset of the representation corresponds to a viewable area corresponding to a visually perceptible viewable area of the display associated with the computer, and an extension area corresponds to a non-viewable area of the representation, wherein the layout manager:
- the layout manager in response to the user commanding the computer to add the new window, automatically designating the new window as the active window, and automatically placing the new window within the representation and automatically scrolling the representation so that a portion of the new window is within the visually perceptible viewable area;
- the layout manager in response to the user commanding the computer to remove the existing window, automatically determining an immediately previous active window and designating the immediately previous active window as the active window, and automatically scrolling the representation so that a portion of the immediately previous active window is within the visually perceptible viewable area.
- a method of transforming an appearance of a display of a computer that includes a window comprising the steps of: providing a layout manager program that is executed by a processor of the computer and contains a plurality of instructions to cause the computer to automatically arrange placement of windows within a representation of an extensible display area stored in a memory, wherein a subset of the representation corresponds to a viewable area corresponding to a visually perceptible viewable area of the display associated with the computer, and an extension area corresponds to a non-viewable area of the representation, wherein the layout manager: and in response to the user commanding the computer to remove the window, the layout manager automatically returning the viewable area to a logged offset of an immediately previous view, thereby maintaining a scrolling position of the immediately previous view.
- FIG. 1 illustrates an overview of the functions of the layout manager automatically positioning and organizing constrained and extendable media windows.
- FIG. 2A-2C illustrates constrained and extendable windows.
- FIG. 3 illustrates placement of a new window.
- FIG. 4 illustrates a flowchart overview of operations of the layout manager.
- FIGS. 5 a - c illustrate placement of windows by the layout manager.
- FIGS. 6 and 7 illustrates examples of clean alignment.
- a scrollable viewport is any viewing area that has some boundary to the viewing area but that allows scrolling past those boundaries.
- the ‘viewport’ as described could be an operating system window, an application window, a computer screen, a browser window, or a windowing system invented inside of one of the systems mentioned (for example, an application that invents a window management system inside of its own application window).
- a traditional operating system window manager can only display and layout windows within a fixed rectangle display area, set by the current resolution of the screen.
- the media viewing layout manager can use the total space inside the viewport (in our case, the web browser window) in a different way than on a fixed size screen.
- the viewport is a web browser window
- it is the whole web page contained in the window, including the non-visible parts of the page content outside of the window's scrolled viewing region, that compose the possible “canvas” upon which windows can be displayed, manipulated and viewed. (See FIGS. 2A-2C ).
- the manager calls functions to scroll the viewport just enough to make the newly placed window visible. More specifically, assume a “top-left” coordinate system where for each rectangle we are describing, [0,0] references the top-left corner, and any positive numbers reference the down-rightwards direction. If a new window is to appear at a new location x,y with width, w and height, h, and the owning viewport is currently scrolled to position sx, sy, and the height of the owning viewport is viewW, viewH, then we must scroll the window in the following way. (See FIG. 3 ).
- the window manager will scroll the owning viewport from [sy, y].
- the window manager will scroll the owning viewport from [sx, x].
- the window manager will scroll the owning viewport from [sy, y+h ⁇ viewH]. This scrolls the window just enough for the window to appear.
- the manager may also grant additional space that may not be previously exist. For example, if the window manager scrolled a browser window downwards to accommodate for a new window placed just slightly beyond the bottom side of the viewport, it may be the case that the current viewport actually does not extend beyond the current view. More specifically, if scrollbars were associated with this viewport, the scroll marker would be at the bottom of the scrollable area indicating the end of the viewable area (See the third window state in FIG. 2C ). Alternatively, if no scrollbars were associated with the viewport, this would also indicate the end of the viewable area.
- the window manager intelligently “unscrolls” the viewport when windows are closed is another aspect of the present invention.
- the window manager will automatically “unscroll” the browser window back to where it was previously (before the closing window was first opened) because the space occupied by the closing window is no longer necessary. This is done because users of the invention's viewing environment tend to accumulate several windows on the screen over time, and since they are progressively layed out on the screen, unscrolling the viewport when a constrained and extendable windows window is closed will return the users' attention to windows to which they have previously opened, since that is what the user would generally do anyway.
- the previous scrolled region of the viewport is cached (e.g. the original sx, sy, and sWidth, sHeight). Then, when that window is later asked to close, the system examines every other window contained within the viewport and sees if “unscrolling” would scroll away from these other windows. If so, it prevents the unscroll from happening. If not, the unscroll is performed. For example, if the unscroll direction was upwards and there existed other windows whose “bottom” coordinate (theirY+theirHeight) was greater than the bottom coordinate of the closing window (y+height), the test passes and the unscroll is not performed.
- This test's purpose is to avoid scrolling the viewport away from other windows which the user might want to use. If this is not the case, the window manager will perform the “unscroll” back to the previous viewport location. If oldSx and oldSy were the cached top-left coordinates of the previous viewport (before the closing window was opened), and curSx and curSy are the top-left coordinates of the current viewport, then functions are called to start the animation timer as before, and scroll from [curSx, oldSx] and [curSy,oldSy] in parallel.
- the window opening and closing animations execute in parallel to the aforementioned “scrolls” and “unscrolls”, such that just one timer is simultaneously responsible for the scaling down animation of an opening or closing window and the viewport scrolling animation.
- the effect is that a window opens towards an offscreen area, and as it is opening, the window scrolls gradually as the window moves to its final position.
- Other variations include using multiple timers for scrolling the window, or staggering the animations one after another. Both scrolling animation and opening/closing window animation happen substantially simultaneously, and as such the usage of multiple timers can improve performance of the animation.
- the system finds the closest window by looping through the windows (in linear or binary traversal depending on if optional geometric sorting was implemented) and examining the distance between each window and the closing window. Once found, the system performs the same “unscroll target” computation, testing the x, y and w, h attributes of the window's rectangle against the current viewport's scrolled offset, and scroll just enough (in the manner described above) to make this window visible.
- this computation would be performed against multiple windows in a cluster, the computation would be performed against the window maximally distant from the closing window (so as to scroll just enough that the furthest window of the cluster of windows would be visible), the window minimally distant from the closing window (so as to scroll just enough that the closest window was visible), or somewhere in between (perhaps the mean or media distance of all the windows from the closing window).
- One other variation of the system is not to scroll automatically to the previous viewport if the difference between the current viewport and the destination “unscrolled” viewport is minimal (within some epsilon value).
- a new window appears in the process of scrolling the viewport (in the manner described above) to make the window visible, extends the viewport by 50 pixels which also increases the length of the scrollbar on the viewport.
- the “unscroll” is performed, the animations are performed, and at the end of the animations, the extra 50 pixels that are no longer necessary are reclaimed (because no underlying page content or windows would exist in that additional space).
- the viewport shrinks by 50 vertical pixels, and the scrollbar is shortened (usually automatically by the operating system).
- the desired behavior is to do automatically what the user would manually do next, and never to get in the way.
- closing a window in the present invention will work to prevent the user from scrolling away from windows they intended to view, and never leave orphan windows or spaces on the screen that are no longer necessary.
- the present invention is directed not only to the animated scrolling of the viewport to accommodate the new window, but the parallel animation that occurs to display the new window.
- windows are meant to be laid out as near to each other as possible, and non-occluding so that the user need spend time only to open, close, view and interact with content within the windows, but never manage the windows themselves.
- the window layout system according to the present invention is based on a center-oriented tile-based window layout manager like the one Xerox PARC invented in the 1980s, to the extent that the window manager attempts to find an unallocated, non-overlapping rectangle on the screen where it can place new windows.
- the present invention functions within constrained and extendable viewports, and that there are at least some, and preferably all, new windows that open from, and collapse back into, a “parent” or “anchor” element, which results in a “centering” of the placement of new windows around the “parent” element.
- a window opens from the center of the clicked link, and a scale animation is performed, interpolating between the “launch” element rectangle (the rectangle of the clicked link) and the destination rectangle of the opening window, determined by the layout manager.
- Windows open in such a way as to expandfrom the “parent” item, and the visual scaling animation effect (from small to large, on open of the window, and large to small on close of the window), along with the layout of the window location are crucial to reinforcing this metaphor. Because of this, it is very important that the layout of the windows do as best a job it can to place windows close to their parent item (to better associate them with their parents), while also satisfying other constraints.
- the layout manager runs the following algorithm. For a new window with rectangle r of width w and height h, the system loops through are at least some, and preferably all existing “anchor” (existing window) rectangles on the page. For each of these “test” anchor rectangles, we add the following possible “state” or “position” of the rectangle r to a list of results:
- every anchor rectangle (in other words, every window) with its 5 positions per side*4 sides yields 20 possible positions to test. More or fewer placements could be tested depending on the granularity desired.
- the system After accumulating a list of possible rectangles to ultimately place rectangle r, the system loops through these possible locations and tests to see if the rectangle intersects any “reserved” rectangles on the page (e.g. other windows, iframes, objects, or advertisements). If this is true, and it is wished to treat this intersection as a strict ruling out of the position, this placement for r is no longer considered.
- the list of placements are then ranked to find an “optimal” position, based on the following heuristics:
- An alternative to the method described above collects the list of possible placements of r is to use a geometric bisection algorithm as found in computer graphics textbooks, which, starting from the occupied rectangles on the page, bisects the space between each side of the rectangle and the remainder of space between it and the first element to collide in that direction. The spaces are subdivided over and over (until some limit of time or depth of subdivisions is announced) and then the found free region resulting in these computations is used to place the rectangles.
- the present invention may also use regression testing to re-adjust the weights based on relevance feedback or training data, to ultimately teach (using standard machine learning techniques) the window manager what features (of those heuristics described above) matter most, using weighting values that maximize the desired placement results. This works by feeding in a “state” of a viewport with no windows, repeatedly opening and closing new windows, one after another, and at each step, having a human being manually drag a window to its human-decided “optimal” location and mark this location as the “optimal” location.
- the same sequence of opening and closing steps can be replayed and the weights for the various features described above can be re-adjusted automatically by the computer to maximize the placement of the windows towards the human-chosen location.
- the penalties used to re-weight the system are based on distance metrics from where each window is placed using the current weights, and their distance from the respective “optimal” position.
Abstract
Description
-
- creates a log of the one or the plurality of windows and a scrolled offset of the viewable area, and
- monitors which one of the one or the plurality of windows is an active window, such that any portion of the one active window that is within the visually perceptible viewable area is displayed and other ones of the plurality of windows that are not the one active window are background windows that are spatially oriented around or behind the one active window, wherein some of the background windows have portions within the visually perceptible viewable area that are behind the active window and are occluded and also portions within the visually perceptible viewable area that are around the active window and are not occluded;
-
- the rectangle to the left side of the test “anchor” rectangle, aligned to the top
- the rectangle to the left side of the test “anchor” rectangle, aligned to the bottom
- the rectangle to the left side of the test “anchor” rectangle, bottom-aligned to the anchor's vertical center
- the rectangle to the left side of the test “anchor” rectangle, top-aligned to the anchor's vertical center
- the rectangle to the left side of the test “anchor” rectangle, center-aligned to the anchor's vertical center
- then, the same as the above five positions, but to the anchor's right hand side
- the rectangle above the test “anchor” rectangle, aligned to the anchor's left side
- the rectangle above the test “anchor” rectangle, aligned to the anchor's right side
- the rectangle above the test “anchor” rectangle, left-aligned to the anchor's horizontal center
- the rectangle above the test “anchor” rectangle, right-aligned to the anchor's horizontal center
- the rectangle above the test “anchor” rectangle, center-aligned to the anchor's horizontal center
- then, the same as the above five positions, but to the bottom of the anchor.
-
- if the proposed position yields a “clean alignment” with the edge of other windows or page elements. “clean” is defined as aligning horizontally or vertically with another window's edge. See
FIG. 6 andFIG. 7 . The test is such that the x, and y values of the top-left coordinates of each window align either on the horizontal axis or the vertical axis (+/− some epsilon for padding, such that the windows need not exactly line up). If so, we give this placement more points. - if the proposed position is next to the “parent” constrained and extendable window that was clicked. We compute being “next to” as having a bounding rectangle either to the side of or above/below the “parent” window (within some epsilon), which is computed using standard rectangle calculations. If so, we give this placement more points.
- if the proposed position yields a “dense arrangements” of windows such that the placement is as close as possible to at least some, and preferably all the existing windows on the constrained but extendable page. We implement “dense arrangement” as an approximation by averaging the distance between the center of the window at the proposed location and the centers of all the other windows on the page. This can be implemented as a loop through the centers of at least some, and preferably all the other windows on the page, computing their rectangles and the center points, and then computing the hypotenuse of the line connecting the two center points. We give more points to a window placed closer to the average distance to all the windows, than one placed further away.
- if the proposed position optimizes the amount of “free space” for subsequent windows to appear, such that placing this window at this location will not fragment the screen space such that it will be impossible to cleanly fit a subsequent active window that is opened on the screen. We implement this by approximating the size of future windows, and giving more points to window placements that would leave enough horizontal or vertical space for another window placed alongside it. Because the present invention standardizes the sizes of key types of media (e.g. a Wikipedia and YouTube media are always so-many pixels wide and tall), rough approximations of the size of windows that will be opened by the users in the future can be made. Variations on this include pre-computing and pre-fetching the width and height of other media windows that are available to open at any given time, and use the specific widths and heights of these media specifically to leave enough “free space” for, in the event that they are opened. Overall, this gives more points to placements that yield more “free space” for the layout of subsequent windows.
- if the proposed position optimizes human-focused constraints, e.g. layouts that make more sense to humans by choosing positions that are closest to the user's focal attention point, as close to the source “launch” rectangle location (e.g. the related thumbnail where the user clicked) as possible. This is implemented by giving more points to placements that are closer to the user's last center of attention, which could include the current center of the viewport, or the center of the window last viewed. More likely, this could include giving more points to placements which place the new window close to the “launch rectangle” of the clicked item which produces the window.
- if the proposed position requires scrolling the page to view the placement, add a penalty to considering that placement. This is implemented by seeing if the proposed placement goes beyond the current viewable bounds of the viewport, e.g. if the window's x, y position are smaller than the viewports viewX and viewY, or if x+w>viewX+viewWidth or y+h>viewY+viewHeight. If so, points are deducted for this placement.
- if the proposed location respects (does not occlude) certain “reserved” or “soft-reserved” rectangles on the screen such as advertisements, Flash embed boxes, iframes, or certain images designated by the publisher to not be occluded on the underlying page content (below the windowing layer of the present invention). The reason for avoiding advertisements particularly is that advertisers who pay for a designated rectangle on the web page may not wish other content (e.g. a constrained and extendable window) to appear above their paid space, occluding their content. Secondly, animated Flash multimedia on the page (which also may include advertising) may sometimes draw to the front of the screen irrespective of the z-ordering of the DOM elements, which results in a “flickering” of the underlying Flash content, drawn incorrectly above the constrained and extendable window and other content. Users find this behavior very confusing and the present invention alleviates the problem by positioning windows outside these reserved page rectangles. This is implemented by deducting points for placements of windows which intersect the rectangles on the page for <iframes>, <objects> and <embed> tags, using a standard rectangle intersection algorithm. In addition to simply deducing points for placements which intersect these “reserved” rectangles, additional placements are added to the list of possible placements to test (e.g. the state space, in AI terminology) based on other occupied window rectangles. For example, for every advertisement that's on the screen, we add to the list of possible placements using the same method as described above (for building a list of possible placements around any “anchor” rectangle), resulting in 20 additional positions per advertising rectangle. The effect is that placements are found for the new window that, without using the additional advertising placements would have resulted in not finding a “legal” placement. Using this method, positions are found non-overlapping with windows and advertising on the page, not necessarily next to any existing windows on the screen, yet a legal placement that is near the parent or “anchor” element.
- if the proposed position places the rectangle in the opposite direction as the direction from the first opened anchor to all the subsequently opened windows. For example, if from a starting anchor, one window is opened, and from that window, we open two more, and then a fourth is opened. For each window opened, if the windows are placed horizontally and downwards from the original “anchor”, at a later time if the overall direction of previously placed windows from the first opened “anchor” is violated, e.g. the downwards direction, points can be subtracted for the placement, or simply call it illegal.
- if the proposed position yields a “clean alignment” with the edge of other windows or page elements. “clean” is defined as aligning horizontally or vertically with another window's edge. See
Claims (18)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/321,595 US8555193B2 (en) | 2008-01-17 | 2009-01-21 | System for intelligent automated layout and management of interactive windows |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US1163508P | 2008-01-17 | 2008-01-17 | |
US12/321,595 US8555193B2 (en) | 2008-01-17 | 2009-01-21 | System for intelligent automated layout and management of interactive windows |
Publications (2)
Publication Number | Publication Date |
---|---|
US20100011316A1 US20100011316A1 (en) | 2010-01-14 |
US8555193B2 true US8555193B2 (en) | 2013-10-08 |
Family
ID=41506215
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/321,595 Expired - Fee Related US8555193B2 (en) | 2008-01-17 | 2009-01-21 | System for intelligent automated layout and management of interactive windows |
Country Status (1)
Country | Link |
---|---|
US (1) | US8555193B2 (en) |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130091457A1 (en) * | 2011-10-11 | 2013-04-11 | International Business Machines Corporation | Post selection mouse pointer location |
US20140019894A1 (en) * | 2011-03-31 | 2014-01-16 | April Slayden Mitchell | Augmenting user interface elements |
US10191890B2 (en) | 2014-12-17 | 2019-01-29 | Microsoft Technology Licensing, Llc | Persistent viewports |
US10248304B2 (en) * | 2016-11-30 | 2019-04-02 | Lsis Co., Ltd. | Method for displaying monitoring screen at a display location |
US20200183559A1 (en) * | 2015-10-26 | 2020-06-11 | Google Llc | Systems and methods for attributing a scroll event in an infinite scroll graphical user interface |
US10719220B2 (en) * | 2015-03-31 | 2020-07-21 | Autodesk, Inc. | Dynamic scrolling |
Families Citing this family (65)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8555193B2 (en) * | 2008-01-17 | 2013-10-08 | Google Inc. | System for intelligent automated layout and management of interactive windows |
US8713470B2 (en) * | 2008-05-02 | 2014-04-29 | International Business Machines Corporation | Automated user interface adjustment |
KR101488726B1 (en) * | 2008-05-27 | 2015-02-06 | 삼성전자주식회사 | Display apparatus for displaying a widget window and display system including the display apparatus and method for displaying thereof |
US8402381B2 (en) * | 2008-09-23 | 2013-03-19 | International Business Machines Corporation | Automatically arranging widgets of a model within a canvas using iterative region based widget relative adjustments |
US20110161892A1 (en) * | 2009-12-29 | 2011-06-30 | Motorola-Mobility, Inc. | Display Interface and Method for Presenting Visual Feedback of a User Interaction |
US9417787B2 (en) * | 2010-02-12 | 2016-08-16 | Microsoft Technology Licensing, Llc | Distortion effects to indicate location in a movable data collection |
US9164670B2 (en) | 2010-09-15 | 2015-10-20 | Microsoft Technology Licensing, Llc | Flexible touch-based scrolling |
JP2012118832A (en) * | 2010-12-02 | 2012-06-21 | Sony Corp | Information processor, information processing method and program |
KR101788049B1 (en) * | 2010-12-15 | 2017-10-19 | 엘지전자 주식회사 | Mobile terminal and method for controlling thereof |
US9134899B2 (en) | 2011-03-14 | 2015-09-15 | Microsoft Technology Licensing, Llc | Touch gesture indicating a scroll on a touch-sensitive display in a single direction |
US8863039B2 (en) | 2011-04-18 | 2014-10-14 | Microsoft Corporation | Multi-dimensional boundary effects |
US10956485B2 (en) | 2011-08-31 | 2021-03-23 | Google Llc | Retargeting in a search environment |
US10630751B2 (en) | 2016-12-30 | 2020-04-21 | Google Llc | Sequence dependent data message consolidation in a voice activated computer network environment |
US8650188B1 (en) | 2011-08-31 | 2014-02-11 | Google Inc. | Retargeting in a search environment |
US20130073945A1 (en) * | 2011-09-15 | 2013-03-21 | International Business Machines Corporation | Dynamic reorganization of page elements of a web application |
US20130167072A1 (en) * | 2011-12-22 | 2013-06-27 | Sap Portals Israel Ltd. | Smart and Flexible Layout Context Manager |
US9384711B2 (en) * | 2012-02-15 | 2016-07-05 | Microsoft Technology Licensing, Llc | Speculative render ahead and caching in multiple passes |
KR20130097267A (en) * | 2012-02-24 | 2013-09-03 | 삼성전자주식회사 | Method and apparatus for displaying contents view in mobile terminal |
US9286122B2 (en) | 2012-05-31 | 2016-03-15 | Microsoft Technology Licensing, Llc | Display techniques using virtual surface allocation |
US9230517B2 (en) | 2012-05-31 | 2016-01-05 | Microsoft Technology Licensing, Llc | Virtual surface gutters |
US9177533B2 (en) | 2012-05-31 | 2015-11-03 | Microsoft Technology Licensing, Llc | Virtual surface compaction |
US9235925B2 (en) | 2012-05-31 | 2016-01-12 | Microsoft Technology Licensing, Llc | Virtual surface rendering |
US9043722B1 (en) | 2012-06-19 | 2015-05-26 | Surfwax, Inc. | User interfaces for displaying relationships between cells in a grid |
KR102099646B1 (en) * | 2012-09-25 | 2020-04-13 | 삼성전자 주식회사 | Apparatus and method for switching an application displayed split view in portable terminal |
US11861561B2 (en) | 2013-02-04 | 2024-01-02 | Haworth, Inc. | Collaboration system including a spatial event map |
US10304037B2 (en) | 2013-02-04 | 2019-05-28 | Haworth, Inc. | Collaboration system including a spatial event map |
US10656818B1 (en) * | 2013-03-13 | 2020-05-19 | Domo, Inc. | Animation to indicate scrollable content |
US9063631B2 (en) * | 2013-03-15 | 2015-06-23 | Chad Dustin TILLMAN | System and method for cooperative sharing of resources of an environment |
US9307007B2 (en) | 2013-06-14 | 2016-04-05 | Microsoft Technology Licensing, Llc | Content pre-render and pre-fetch techniques |
KR102135947B1 (en) * | 2013-08-26 | 2020-07-21 | 삼성전자주식회사 | Method for resizing window area and electronic device for the same |
US9703757B2 (en) | 2013-09-30 | 2017-07-11 | Google Inc. | Automatically determining a size for a content item for a web page |
US10614153B2 (en) | 2013-09-30 | 2020-04-07 | Google Llc | Resource size-based content item selection |
US10431209B2 (en) | 2016-12-30 | 2019-10-01 | Google Llc | Feedback controller for data transmissions |
TWI509495B (en) * | 2013-11-15 | 2015-11-21 | Yongming Technology Consulting Corp | System and method for adjusting layout of windows |
JP6158949B2 (en) * | 2013-12-27 | 2017-07-05 | 株式会社マーズフラッグ | Information processing apparatus, web server, and computer program |
US9569076B2 (en) | 2014-01-15 | 2017-02-14 | Accenture Global Services Limited | Systems and methods for configuring tiles in a user interface |
US9537811B2 (en) | 2014-10-02 | 2017-01-03 | Snap Inc. | Ephemeral gallery of ephemeral messages |
US9396354B1 (en) | 2014-05-28 | 2016-07-19 | Snapchat, Inc. | Apparatus and method for automated privacy protection in distributed images |
US9113301B1 (en) | 2014-06-13 | 2015-08-18 | Snapchat, Inc. | Geo-location based event gallery |
US9870188B2 (en) * | 2014-08-18 | 2018-01-16 | Lenovo (Singapore) Pte. Ltd. | Content visibility management |
US10824654B2 (en) | 2014-09-18 | 2020-11-03 | Snap Inc. | Geolocation-based pictographs |
US10284508B1 (en) | 2014-10-02 | 2019-05-07 | Snap Inc. | Ephemeral gallery of ephemeral messages with opt-in permanence |
US9854219B2 (en) | 2014-12-19 | 2017-12-26 | Snap Inc. | Gallery of videos set to an audio time line |
US10311916B2 (en) | 2014-12-19 | 2019-06-04 | Snap Inc. | Gallery of videos set to an audio time line |
US9385983B1 (en) | 2014-12-19 | 2016-07-05 | Snapchat, Inc. | Gallery of messages from individuals with a shared interest |
US10133705B1 (en) | 2015-01-19 | 2018-11-20 | Snap Inc. | Multichannel system |
US20160260346A1 (en) * | 2015-03-02 | 2016-09-08 | Foundation For Exxcellence In Women's Healthcare, Inc. | System and computer method providing customizable and real-time input, tracking, and feedback of a trainee's competencies |
KR102217723B1 (en) | 2015-03-18 | 2021-02-19 | 스냅 인코포레이티드 | Geo-fence authorization provisioning |
US10135949B1 (en) | 2015-05-05 | 2018-11-20 | Snap Inc. | Systems and methods for story and sub-story navigation |
WO2016179401A1 (en) | 2015-05-06 | 2016-11-10 | Haworth, Inc. | Virtual workspace viewport follow mode and location markers in collaboration systems |
CN106293415B (en) * | 2015-05-22 | 2019-07-30 | 阿里巴巴集团控股有限公司 | The method of deploying and device of floating layer |
US10354425B2 (en) | 2015-12-18 | 2019-07-16 | Snap Inc. | Method and system for providing context relevant media augmentation |
US10255023B2 (en) | 2016-02-12 | 2019-04-09 | Haworth, Inc. | Collaborative electronic whiteboard publication process |
US10581782B2 (en) | 2017-03-27 | 2020-03-03 | Snap Inc. | Generating a stitched data stream |
US10582277B2 (en) | 2017-03-27 | 2020-03-03 | Snap Inc. | Generating a stitched data stream |
US20180284954A1 (en) * | 2017-03-30 | 2018-10-04 | Lenovo Enterprise Solutions (Singapore) Pte. Ltd. | Identifying a target area to display a popup graphical element |
CN108874257B (en) | 2017-05-08 | 2021-09-24 | 珠海金山办公软件有限公司 | Picture display method and device |
US11126325B2 (en) | 2017-10-23 | 2021-09-21 | Haworth, Inc. | Virtual workspace including shared viewport markers in a collaboration system |
US11934637B2 (en) | 2017-10-23 | 2024-03-19 | Haworth, Inc. | Collaboration system including markers identifying multiple canvases in multiple shared virtual workspaces |
US10642441B2 (en) | 2018-04-27 | 2020-05-05 | International Business Machines Corporation | Optimal window placement system |
US11573694B2 (en) | 2019-02-25 | 2023-02-07 | Haworth, Inc. | Gesture based workflows in a collaboration system |
CN112416480A (en) * | 2019-08-21 | 2021-02-26 | 北京嗨动视觉科技有限公司 | Window editing method, device and system |
US11750672B2 (en) | 2020-05-07 | 2023-09-05 | Haworth, Inc. | Digital workspace sharing over one or more display clients in proximity of a main client |
US11301109B1 (en) * | 2021-03-05 | 2022-04-12 | Citrix Systems, Inc. | Computing device with new window creation command and related systems and methods |
CN114546232A (en) * | 2022-04-24 | 2022-05-27 | 广州中望龙腾软件股份有限公司 | View translation method, terminal and computer-readable storage medium |
Citations (67)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5371847A (en) * | 1992-09-22 | 1994-12-06 | Microsoft Corporation | Method and system for specifying the arrangement of windows on a display |
US5390295A (en) * | 1991-12-20 | 1995-02-14 | International Business Machines Corporation | Method and apparatus for proportionally displaying windows on a computer display screen |
US5420605A (en) * | 1993-02-26 | 1995-05-30 | Binar Graphics, Inc. | Method of resetting a computer video display mode |
US5561757A (en) * | 1994-04-06 | 1996-10-01 | Altera Corporation | Computer user interface having tiled and overlapped window areas |
US5657463A (en) * | 1994-01-19 | 1997-08-12 | Apple Computer, Inc. | Method and apparatus for positioning a new window on a display screen based on an arrangement of previously-created windows |
US5712995A (en) * | 1995-09-20 | 1998-01-27 | Galileo Frames, Inc. | Non-overlapping tiling apparatus and method for multiple window displays |
US5838318A (en) * | 1995-11-10 | 1998-11-17 | Intel Corporation | Method and apparatus for automatically and intelligently arranging windows on a display device |
US5874962A (en) * | 1996-03-08 | 1999-02-23 | International Business Machines | System and method for arranging windows displayed by a graphical user interface |
US5889517A (en) * | 1995-10-26 | 1999-03-30 | Brother Kogyo Kabushiki Kaisha | Multi-window display control system |
US6008809A (en) * | 1997-09-22 | 1999-12-28 | International Business Machines Corporation | Apparatus and method for viewing multiple windows within a dynamic window |
US6230171B1 (en) | 1998-08-29 | 2001-05-08 | International Business Machines Corporation | Markup system for shared HTML documents |
US6253254B1 (en) | 1996-07-11 | 2001-06-26 | Ansgar Erlenkoetter | Hyper media object management |
US6356908B1 (en) * | 1999-07-30 | 2002-03-12 | International Business Machines Corporation | Automatic web page thumbnail generation |
US20020054141A1 (en) * | 2000-11-03 | 2002-05-09 | Yen Hsiang Tsun | Computer system for displaying multiple window displays |
US6434568B1 (en) | 1999-08-31 | 2002-08-13 | Accenture Llp | Information services patterns in a netcentric environment |
US20020175933A1 (en) * | 2001-05-08 | 2002-11-28 | Sami Ronkainen | Method and arrangement for providing an expanded desktop |
US6549217B1 (en) * | 2000-03-23 | 2003-04-15 | Koninklijke Philips Electronics N.V. | System and method for computer system management using bookmarks |
US20030081000A1 (en) | 2001-11-01 | 2003-05-01 | International Business Machines Corporation | Method, program and computer system for sharing annotation information added to digital contents |
US6654034B1 (en) * | 2000-05-04 | 2003-11-25 | International Business Machines Corporation | Information presentation system for a graphical user interface |
US20040056894A1 (en) * | 2002-09-19 | 2004-03-25 | Igor Zaika | System and method for describing and instantiating extensible user interfaces |
US20040261038A1 (en) * | 2003-06-20 | 2004-12-23 | Apple Computer, Inc. | Computer interface having a virtual single-layer mode for viewing overlapping objects |
US20050041025A1 (en) * | 2001-01-06 | 2005-02-24 | International Business Machines Corporation | Image display system for displaying an adjustable widened virtual image |
US20050073601A1 (en) * | 2003-10-02 | 2005-04-07 | Battles Amy E. | System and method for managing digital images |
US20050086597A1 (en) * | 1998-07-28 | 2005-04-21 | Microsoft Corporation | Web page display system |
US6927757B2 (en) * | 2001-09-18 | 2005-08-09 | Intel Corporation | Camera driven virtual workspace management |
US20050198202A1 (en) | 2004-01-07 | 2005-09-08 | Shinichirou Yamamoto | Method for causing server to provide client computers with annotation functions for enabling users of the client computers to view object-based documents with annotations |
US6957395B1 (en) * | 2000-01-04 | 2005-10-18 | Apple Computer, Inc. | Computer interface having a single window mode of operation |
US20050256866A1 (en) | 2004-03-15 | 2005-11-17 | Yahoo! Inc. | Search system and methods with integration of user annotations from a trust network |
US6970873B2 (en) | 2001-08-02 | 2005-11-29 | Sun Microsystems, Inc. | Configurable mechanism and abstract API model for directory operations |
US20060013462A1 (en) * | 2004-07-15 | 2006-01-19 | Navid Sadikali | Image display system and method |
US20060048047A1 (en) | 2004-08-27 | 2006-03-02 | Peng Tao | Online annotation management system and method |
US20060061550A1 (en) * | 1999-02-12 | 2006-03-23 | Sina Fateh | Display size emulation system |
US20060075205A1 (en) | 2004-09-24 | 2006-04-06 | International Business Machines Corporation | Creating annotations of transient computer objects |
US20060085760A1 (en) * | 2002-04-05 | 2006-04-20 | Microsoft Corporation | Virtual desktop manager |
US20060161861A1 (en) * | 2005-01-18 | 2006-07-20 | Microsoft Corporation | System and method for visually browsing of open windows |
US20060200779A1 (en) * | 2001-04-30 | 2006-09-07 | Taylor Steve D | Cell based end user interface having action cells |
US20060212509A1 (en) | 2005-03-21 | 2006-09-21 | International Business Machines Corporation | Profile driven method for enabling annotation of World Wide Web resources |
US20060242602A1 (en) * | 2005-04-22 | 2006-10-26 | Microsoft Corporation | Interface and system for manipulating thumbnails of live windows in a window manager |
US20060248404A1 (en) * | 2005-04-29 | 2006-11-02 | Microsoft Corporation | System and Method for Providing a Window Management Mode |
US20060294475A1 (en) * | 2005-01-18 | 2006-12-28 | Microsoft Corporation | System and method for controlling the opacity of multiple windows while browsing |
US20070022389A1 (en) * | 2003-06-20 | 2007-01-25 | Bas Ording | Computer Interface Having A Virtual Single-Layer Mode For Viewing Overlapping Objects |
US20070022135A1 (en) | 2005-07-25 | 2007-01-25 | Dale Malik | Systems and methods for organizing and annotating an information search |
US20070162414A1 (en) | 2005-12-30 | 2007-07-12 | Yoram Horowitz | System and method for using external references to validate a data object's classification / consolidation |
US20070174762A1 (en) | 2006-01-24 | 2007-07-26 | International Business Machines Corporation | Personal web page annotation system |
US7275063B2 (en) * | 2002-07-16 | 2007-09-25 | Horn Bruce L | Computer system for automatic organization, indexing and viewing of information from multiple sources |
US20070245400A1 (en) | 1998-11-06 | 2007-10-18 | Seungyup Paek | Video description system and method |
US20070250788A1 (en) * | 2006-04-20 | 2007-10-25 | Jean-Yves Rigolet | Optimal Display of Multiple Windows within a Computer Display |
US20080036743A1 (en) * | 1998-01-26 | 2008-02-14 | Apple Computer, Inc. | Gesturing with a multipoint sensing device |
US20080046845A1 (en) | 2006-06-23 | 2008-02-21 | Rohit Chandra | Method and Apparatus for Controlling the Functionality of a Highlighting Service |
US20080052945A1 (en) * | 2006-09-06 | 2008-03-06 | Michael Matas | Portable Electronic Device for Photo Management |
US20080147841A1 (en) | 2006-12-13 | 2008-06-19 | Fujitsu Limited | Annotation management program, device, and method |
US20080168382A1 (en) * | 2007-01-07 | 2008-07-10 | Louch John O | Dashboards, Widgets and Devices |
US7409633B2 (en) | 2000-03-07 | 2008-08-05 | Microsoft Corporation | System and method for annotating web-based document |
US7421448B2 (en) | 2004-12-20 | 2008-09-02 | Sap Ag | System and method for managing web content by using annotation tags |
US20090192849A1 (en) * | 2007-11-09 | 2009-07-30 | Hughes John M | System and method for software development |
US20090199083A1 (en) * | 2008-01-17 | 2009-08-06 | Can Sar | Method of enabling the modification and annotation of a webpage from a web browser |
US20090199077A1 (en) * | 2008-01-17 | 2009-08-06 | Can Sar | Creating first class objects from web resources |
US20090282359A1 (en) * | 2008-05-12 | 2009-11-12 | Microsoft Corporation | Virtual desktop view scrolling |
US20100011316A1 (en) * | 2008-01-17 | 2010-01-14 | Can Sar | System for intelligent automated layout and management of interactive windows |
US20100011313A1 (en) * | 2005-04-07 | 2010-01-14 | Microsoft Corporation | System and method for selecting a tab within a tabbed browser |
US20100017748A1 (en) * | 2001-04-30 | 2010-01-21 | Broadband Graphics, Llc | Display container cell modification in a cell based eui |
US7836148B2 (en) | 1995-08-14 | 2010-11-16 | Nicolas Popp | Method and apparatus for generating object-oriented world wide web pages |
US7844956B2 (en) | 2004-11-24 | 2010-11-30 | Rojer Alan S | Object-oriented processing of markup |
US7849437B2 (en) | 2005-09-01 | 2010-12-07 | Microsoft Corporation | Object oriented web application framework |
US20100313165A1 (en) * | 2009-06-08 | 2010-12-09 | John Louch | User interface for multiple display regions |
US20110023017A1 (en) | 2008-04-28 | 2011-01-27 | Salesforce.Com, Inc. | Object-oriented system for creating and managing websites and their content |
US7913183B2 (en) * | 2002-10-08 | 2011-03-22 | Microsoft Corporation | System and method for managing software applications in a graphical user interface |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
ITBO20030631A1 (en) * | 2003-10-23 | 2005-04-24 | Roberto Erminio Parravicini | VALVULAR PROSTHETIC EQUIPMENT, IN PARTICULAR FOR HEART APPLICATIONS. |
-
2009
- 2009-01-21 US US12/321,595 patent/US8555193B2/en not_active Expired - Fee Related
Patent Citations (74)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5390295A (en) * | 1991-12-20 | 1995-02-14 | International Business Machines Corporation | Method and apparatus for proportionally displaying windows on a computer display screen |
US5371847A (en) * | 1992-09-22 | 1994-12-06 | Microsoft Corporation | Method and system for specifying the arrangement of windows on a display |
US5420605A (en) * | 1993-02-26 | 1995-05-30 | Binar Graphics, Inc. | Method of resetting a computer video display mode |
US5657463A (en) * | 1994-01-19 | 1997-08-12 | Apple Computer, Inc. | Method and apparatus for positioning a new window on a display screen based on an arrangement of previously-created windows |
US5561757A (en) * | 1994-04-06 | 1996-10-01 | Altera Corporation | Computer user interface having tiled and overlapped window areas |
US7836148B2 (en) | 1995-08-14 | 2010-11-16 | Nicolas Popp | Method and apparatus for generating object-oriented world wide web pages |
US5712995A (en) * | 1995-09-20 | 1998-01-27 | Galileo Frames, Inc. | Non-overlapping tiling apparatus and method for multiple window displays |
US5889517A (en) * | 1995-10-26 | 1999-03-30 | Brother Kogyo Kabushiki Kaisha | Multi-window display control system |
US5838318A (en) * | 1995-11-10 | 1998-11-17 | Intel Corporation | Method and apparatus for automatically and intelligently arranging windows on a display device |
US5874962A (en) * | 1996-03-08 | 1999-02-23 | International Business Machines | System and method for arranging windows displayed by a graphical user interface |
US6253254B1 (en) | 1996-07-11 | 2001-06-26 | Ansgar Erlenkoetter | Hyper media object management |
US6008809A (en) * | 1997-09-22 | 1999-12-28 | International Business Machines Corporation | Apparatus and method for viewing multiple windows within a dynamic window |
US20080036743A1 (en) * | 1998-01-26 | 2008-02-14 | Apple Computer, Inc. | Gesturing with a multipoint sensing device |
US20050086597A1 (en) * | 1998-07-28 | 2005-04-21 | Microsoft Corporation | Web page display system |
US6230171B1 (en) | 1998-08-29 | 2001-05-08 | International Business Machines Corporation | Markup system for shared HTML documents |
US20070245400A1 (en) | 1998-11-06 | 2007-10-18 | Seungyup Paek | Video description system and method |
US20060061550A1 (en) * | 1999-02-12 | 2006-03-23 | Sina Fateh | Display size emulation system |
US6356908B1 (en) * | 1999-07-30 | 2002-03-12 | International Business Machines Corporation | Automatic web page thumbnail generation |
US6434568B1 (en) | 1999-08-31 | 2002-08-13 | Accenture Llp | Information services patterns in a netcentric environment |
US6957395B1 (en) * | 2000-01-04 | 2005-10-18 | Apple Computer, Inc. | Computer interface having a single window mode of operation |
US20060036962A1 (en) * | 2000-01-04 | 2006-02-16 | Jobs Steven P | Computer interface having a single window mode of operation |
US7409633B2 (en) | 2000-03-07 | 2008-08-05 | Microsoft Corporation | System and method for annotating web-based document |
US6549217B1 (en) * | 2000-03-23 | 2003-04-15 | Koninklijke Philips Electronics N.V. | System and method for computer system management using bookmarks |
US6654034B1 (en) * | 2000-05-04 | 2003-11-25 | International Business Machines Corporation | Information presentation system for a graphical user interface |
US20020054141A1 (en) * | 2000-11-03 | 2002-05-09 | Yen Hsiang Tsun | Computer system for displaying multiple window displays |
US20050041025A1 (en) * | 2001-01-06 | 2005-02-24 | International Business Machines Corporation | Image display system for displaying an adjustable widened virtual image |
US20060200779A1 (en) * | 2001-04-30 | 2006-09-07 | Taylor Steve D | Cell based end user interface having action cells |
US20100281420A1 (en) * | 2001-04-30 | 2010-11-04 | Broadband Graphics, Llc | Cell based end user interface having action cells |
US20100017748A1 (en) * | 2001-04-30 | 2010-01-21 | Broadband Graphics, Llc | Display container cell modification in a cell based eui |
US20020175933A1 (en) * | 2001-05-08 | 2002-11-28 | Sami Ronkainen | Method and arrangement for providing an expanded desktop |
US6970873B2 (en) | 2001-08-02 | 2005-11-29 | Sun Microsystems, Inc. | Configurable mechanism and abstract API model for directory operations |
US6927757B2 (en) * | 2001-09-18 | 2005-08-09 | Intel Corporation | Camera driven virtual workspace management |
US20030081000A1 (en) | 2001-11-01 | 2003-05-01 | International Business Machines Corporation | Method, program and computer system for sharing annotation information added to digital contents |
US20060085760A1 (en) * | 2002-04-05 | 2006-04-20 | Microsoft Corporation | Virtual desktop manager |
US7275063B2 (en) * | 2002-07-16 | 2007-09-25 | Horn Bruce L | Computer system for automatic organization, indexing and viewing of information from multiple sources |
US20040056894A1 (en) * | 2002-09-19 | 2004-03-25 | Igor Zaika | System and method for describing and instantiating extensible user interfaces |
US7913183B2 (en) * | 2002-10-08 | 2011-03-22 | Microsoft Corporation | System and method for managing software applications in a graphical user interface |
US20040261038A1 (en) * | 2003-06-20 | 2004-12-23 | Apple Computer, Inc. | Computer interface having a virtual single-layer mode for viewing overlapping objects |
US20070288863A1 (en) * | 2003-06-20 | 2007-12-13 | Apple Inc. | Computer interface having a virtual single-layer mode for viewing overlapping objects |
US7739617B2 (en) * | 2003-06-20 | 2010-06-15 | Apple Inc. | Computer interface having a virtual single-layer mode for viewing overlapping objects |
US20070022389A1 (en) * | 2003-06-20 | 2007-01-25 | Bas Ording | Computer Interface Having A Virtual Single-Layer Mode For Viewing Overlapping Objects |
US20050073601A1 (en) * | 2003-10-02 | 2005-04-07 | Battles Amy E. | System and method for managing digital images |
US20050198202A1 (en) | 2004-01-07 | 2005-09-08 | Shinichirou Yamamoto | Method for causing server to provide client computers with annotation functions for enabling users of the client computers to view object-based documents with annotations |
US20050256866A1 (en) | 2004-03-15 | 2005-11-17 | Yahoo! Inc. | Search system and methods with integration of user annotations from a trust network |
US20060013462A1 (en) * | 2004-07-15 | 2006-01-19 | Navid Sadikali | Image display system and method |
US20060048047A1 (en) | 2004-08-27 | 2006-03-02 | Peng Tao | Online annotation management system and method |
US20060075205A1 (en) | 2004-09-24 | 2006-04-06 | International Business Machines Corporation | Creating annotations of transient computer objects |
US7844956B2 (en) | 2004-11-24 | 2010-11-30 | Rojer Alan S | Object-oriented processing of markup |
US7421448B2 (en) | 2004-12-20 | 2008-09-02 | Sap Ag | System and method for managing web content by using annotation tags |
US20060161861A1 (en) * | 2005-01-18 | 2006-07-20 | Microsoft Corporation | System and method for visually browsing of open windows |
US7747965B2 (en) * | 2005-01-18 | 2010-06-29 | Microsoft Corporation | System and method for controlling the opacity of multiple windows while browsing |
US20060294475A1 (en) * | 2005-01-18 | 2006-12-28 | Microsoft Corporation | System and method for controlling the opacity of multiple windows while browsing |
US20060212509A1 (en) | 2005-03-21 | 2006-09-21 | International Business Machines Corporation | Profile driven method for enabling annotation of World Wide Web resources |
US20100011313A1 (en) * | 2005-04-07 | 2010-01-14 | Microsoft Corporation | System and method for selecting a tab within a tabbed browser |
US20060242602A1 (en) * | 2005-04-22 | 2006-10-26 | Microsoft Corporation | Interface and system for manipulating thumbnails of live windows in a window manager |
US20060248404A1 (en) * | 2005-04-29 | 2006-11-02 | Microsoft Corporation | System and Method for Providing a Window Management Mode |
US20060248471A1 (en) * | 2005-04-29 | 2006-11-02 | Microsoft Corporation | System and method for providing a window management mode |
US7681143B2 (en) * | 2005-04-29 | 2010-03-16 | Microsoft Corporation | System and method for providing a window management mode |
US20070022135A1 (en) | 2005-07-25 | 2007-01-25 | Dale Malik | Systems and methods for organizing and annotating an information search |
US7849437B2 (en) | 2005-09-01 | 2010-12-07 | Microsoft Corporation | Object oriented web application framework |
US20070162414A1 (en) | 2005-12-30 | 2007-07-12 | Yoram Horowitz | System and method for using external references to validate a data object's classification / consolidation |
US20070174762A1 (en) | 2006-01-24 | 2007-07-26 | International Business Machines Corporation | Personal web page annotation system |
US20070250788A1 (en) * | 2006-04-20 | 2007-10-25 | Jean-Yves Rigolet | Optimal Display of Multiple Windows within a Computer Display |
US20080046845A1 (en) | 2006-06-23 | 2008-02-21 | Rohit Chandra | Method and Apparatus for Controlling the Functionality of a Highlighting Service |
US20080052945A1 (en) * | 2006-09-06 | 2008-03-06 | Michael Matas | Portable Electronic Device for Photo Management |
US20080147841A1 (en) | 2006-12-13 | 2008-06-19 | Fujitsu Limited | Annotation management program, device, and method |
US20080168382A1 (en) * | 2007-01-07 | 2008-07-10 | Louch John O | Dashboards, Widgets and Devices |
US20090192849A1 (en) * | 2007-11-09 | 2009-07-30 | Hughes John M | System and method for software development |
US20100011316A1 (en) * | 2008-01-17 | 2010-01-14 | Can Sar | System for intelligent automated layout and management of interactive windows |
US20090199077A1 (en) * | 2008-01-17 | 2009-08-06 | Can Sar | Creating first class objects from web resources |
US20090199083A1 (en) * | 2008-01-17 | 2009-08-06 | Can Sar | Method of enabling the modification and annotation of a webpage from a web browser |
US20110023017A1 (en) | 2008-04-28 | 2011-01-27 | Salesforce.Com, Inc. | Object-oriented system for creating and managing websites and their content |
US20090282359A1 (en) * | 2008-05-12 | 2009-11-12 | Microsoft Corporation | Virtual desktop view scrolling |
US20100313165A1 (en) * | 2009-06-08 | 2010-12-09 | John Louch | User interface for multiple display regions |
Non-Patent Citations (5)
Title |
---|
Office Action mailed on Mar. 16, 2011, in U.S. Appl. No. 12/321,597, Sar et al., filed Jan. 21, 2009. |
Office Action mailed on Mar. 4, 2011, in U.S. Appl. No. 12/321,596, Sar et al., filed Jan. 21, 2009. |
U.S. Appl. No. 12/321,596, Sar et al., "Creating First Class Objects from Web Resources," filed Jan. 21, 2009. |
U.S. Appl. No. 12/321,597, Sar et al., "Method of enabling the modification and annotation of a webpage from a web browser," filed on Jan. 21, 2009. |
Working screenshot of windows explorer of Windows Vista by Microsoft, released on Jan 30, 2007, 19 pages. * |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140019894A1 (en) * | 2011-03-31 | 2014-01-16 | April Slayden Mitchell | Augmenting user interface elements |
US9710124B2 (en) * | 2011-03-31 | 2017-07-18 | Hewlett-Packard Development Company, L.P. | Augmenting user interface elements based on timing information |
US20130091457A1 (en) * | 2011-10-11 | 2013-04-11 | International Business Machines Corporation | Post selection mouse pointer location |
US9043720B2 (en) * | 2011-10-11 | 2015-05-26 | International Business Machines Corporation | Post selection mouse pointer location |
US10191890B2 (en) | 2014-12-17 | 2019-01-29 | Microsoft Technology Licensing, Llc | Persistent viewports |
US10719220B2 (en) * | 2015-03-31 | 2020-07-21 | Autodesk, Inc. | Dynamic scrolling |
US20200183559A1 (en) * | 2015-10-26 | 2020-06-11 | Google Llc | Systems and methods for attributing a scroll event in an infinite scroll graphical user interface |
US10248304B2 (en) * | 2016-11-30 | 2019-04-02 | Lsis Co., Ltd. | Method for displaying monitoring screen at a display location |
Also Published As
Publication number | Publication date |
---|---|
US20100011316A1 (en) | 2010-01-14 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8555193B2 (en) | System for intelligent automated layout and management of interactive windows | |
US7181699B2 (en) | Dynamic resizing of dialogs | |
US8839142B2 (en) | Desktop system object removal | |
EP0694829B1 (en) | A method and apparatus for visualization of database search results | |
US6339436B1 (en) | User defined dynamic help | |
US7068288B1 (en) | System and method for moving graphical objects on a computer controlled system | |
EP0439087B1 (en) | Method for resizing and moving computer display windows | |
US5621430A (en) | Method and apparatus for navigating multiple independent windowed images | |
US6828964B2 (en) | Information processing device and data object display method | |
US20080250314A1 (en) | Visual command history | |
US20090295826A1 (en) | System and method for interaction of graphical objects on a computer controlled system | |
US20060230356A1 (en) | System and method for selecting a tab within a tabbled browser | |
US20110249002A1 (en) | Manipulation and management of links and nodes in large graphs | |
EP1727029A1 (en) | Systems and methods for displaying linked information in a sorted context | |
US11347380B2 (en) | Adding new slides on a canvas in a zooming user interface | |
KR20130016408A (en) | Display control program, recording medium whereupon display program is recorded, display control device, and display control method | |
JP2505104B2 (en) | Method and computer system for pointer remapping | |
US20020054133A1 (en) | User interface enhancement for windows-based operating systems | |
US8707200B2 (en) | Object browser with proximity sorting | |
CN110221889A (en) | A kind of page display method, device, electronic equipment and storage medium | |
US7334194B2 (en) | Text editing apparatus | |
US20220083726A1 (en) | Method of computerized presentation of a legend of object symbols on a document | |
US20050206630A1 (en) | Just-in-time user interface layout | |
CN109800039B (en) | User interface display method and device, electronic equipment and storage medium | |
US8640055B1 (en) | Condensing hierarchies in user interfaces |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: APTURE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SAR, CAN;YOUNG, JESSE;HARRIS, TRISTAN;REEL/FRAME:022571/0854Effective date: 20090417 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:APTURE, INC.;REEL/FRAME:027550/0959Effective date: 20120106 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20211008 |
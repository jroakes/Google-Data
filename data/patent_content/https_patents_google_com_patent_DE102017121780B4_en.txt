DE102017121780B4 - Hierarchical annotation of dialog acts - Google Patents
Hierarchical annotation of dialog acts Download PDFInfo
- Publication number
- DE102017121780B4 DE102017121780B4 DE102017121780.0A DE102017121780A DE102017121780B4 DE 102017121780 B4 DE102017121780 B4 DE 102017121780B4 DE 102017121780 A DE102017121780 A DE 102017121780A DE 102017121780 B4 DE102017121780 B4 DE 102017121780B4
- Authority
- DE
- Germany
- Prior art keywords
- annotation
- dialog
- node
- identifier
- record
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 claims abstract description 45
- 238000012549 training Methods 0.000 claims abstract description 13
- 238000010801 machine learning Methods 0.000 claims abstract description 7
- 230000015654 memory Effects 0.000 claims description 47
- 230000004044 response Effects 0.000 claims description 22
- 230000009471 action Effects 0.000 claims description 7
- 230000008569 process Effects 0.000 description 15
- 230000001755 vocal effect Effects 0.000 description 15
- 238000004891 communication Methods 0.000 description 14
- 238000007726 management method Methods 0.000 description 13
- 238000010586 diagram Methods 0.000 description 9
- 238000004590 computer program Methods 0.000 description 7
- 230000003287 optical effect Effects 0.000 description 6
- 238000012545 processing Methods 0.000 description 5
- 230000006872 improvement Effects 0.000 description 4
- 230000006870 function Effects 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 230000002452 interceptive effect Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 238000012805 post-processing Methods 0.000 description 2
- 239000004065 semiconductor Substances 0.000 description 2
- 239000000758 substrate Substances 0.000 description 2
- 230000002730 additional effect Effects 0.000 description 1
- 230000010267 cellular communication Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 230000007547 defect Effects 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 230000002996 emotional effect Effects 0.000 description 1
- 238000011835 investigation Methods 0.000 description 1
- 239000000463 material Substances 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 230000000737 periodic effect Effects 0.000 description 1
- 238000003825 pressing Methods 0.000 description 1
- 238000004549 pulsed laser deposition Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000003442 weekly effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/169—Annotation, e.g. comment data or footnotes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/011—Arrangements for interaction with the human body, e.g. for user immersion in virtual reality
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
- G06F40/35—Discourse or dialogue representation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
- G06F16/316—Indexing structures
- G06F16/322—Trees
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/137—Hierarchical processing, e.g. outlines
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/01—Dynamic search techniques; Heuristics; Dynamic trees; Branch-and-bound
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L13/00—Speech synthesis; Text to speech systems
- G10L13/02—Methods for producing synthetic speech; Speech synthesisers
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1822—Parsing for meaning understanding
Abstract
Verfahren, umfassend:Erzeugen eines ersten Annotationsbaums für einen annotierten Dialogakt, wobei der erste Annotationsbaum einen Wurzelknoten für den Dialogakt und Blattknoten für jedes Annotationstag von nicht Null für den Dialogakt enthält, wobei der Dialogakt mit einem Gesprächsidentifizierer assoziiert ist und wobei die Blattknoten jeweils einen Knoten für einen vorherigen Diskurs entsprechend einem Tag für einen vorherigen Diskurs im annotierten Dialogakt enthalten;Erzeugen eines Annotationsidentifizierers für jeden Knoten im ersten Annotationsbaum, wobei die Annotationsidentifizierer innerhalb des Gesprächsidentifizierers eindeutig sind; undSchreiben einer Annotationsaufzeichnung für jeden Knoten, wobei:einer Aufzeichnung für den Wurzelknoten ein Elternidentifizierer fehlt,eine Aufzeichnung für Nichtwurzelknoten einen Elternidentifizierer enthält, wobei der Elternidentifizierer auf den Annotationsidentifizierer der Eltern Bezug nimmt, unddie Aufzeichnung für den Knoten entsprechend dem Knoten für einen vorherigen Diskurs einen Annotationsidentifizierer für eine entsprechende Aufzeichnung für einen nachfolgenden Diskurs enthält, wobei die Aufzeichnung für einen nachfolgenden Diskurs entsprechend einem Blattknoten in einem zweiten Annotationsbaum auch mit dem Gesprächsidentifizierer assoziiert ist,wobei das Verfahren ferner umfasst:Zugreifen auf die Annotationsaufzeichnung, um Trainingsbeispiele für eine Dialogmanagementmaschine (122) zu erzeugen; undTrainieren der Dialogmanagementmaschine (122) unter Verwendung der Trainingsbeispiele, wobei die Dialogmanagementmaschine (122) einen maschinellen Lernalgorithms enthält, der ausgelegt ist, mit einem Benutzer über eine Dialogeingabevorrichtung (110) und eine Dialogausgabevorrichtung (110) eine Konversation zu führen.A method comprising:Creating a first annotation tree for an annotated dialog act, the first annotation tree including a root node for the dialog act and leaf nodes for each non-zero annotation tag for the dialog act, the dialog act being associated with a conversation identifier, and the leaf nodes each including a node for a previous discourse corresponding to a tag for a previous discourse included in the annotated dialogue act;generating an annotation identifier for each node in the first annotation tree, the annotation identifiers being unique within the conversation identifier; andwriting an annotation record for each node, wherein:a record for the root node lacks a parent identifier,a record for non-root nodes includes a parent identifier, the parent identifier referencing the parent's annotation identifier,andthe record for the node corresponding to the previous discourse node contains annotation identifiers for a corresponding subsequent discourse record, the subsequent discourse record corresponding to a leaf node in a second annotation tree also being associated with the conversation identifier, the method further comprising:accessing the annotation record to provide training examples for a dialog management engine (122 ) to create; andtraining the dialog management engine (122) using the training examples, the dialog management engine (122) including a machine learning algorithm configured to have a conversation with a user via a dialog input device (110) and a dialog output device (110).
Description
ZUGEHÖRIGE ANMELDUNGRELATED APPLICATION
Diese Anmeldung beansprucht die Priorität der provisorischen US-Anmeldung Nr.
HINTERGRUNDBACKGROUND
Computervorrichtungen können einen elektronischen Assistenten enthalten, der auf verbale Kommunikationen eines Anwenders der Computervorrichtung auf eine dialogorientierte Weise reagiert. Bei einer solchen Vorrichtung kann der Anwender irgendetwas sprechen, auf das der elektronische Assistent antwortet, z. B. über eine synthetisierte Sprache unter Verwendung einer Audioausgabe. Die Antwort durch den elektronischen Assistenten kann eine Frage enthalten, damit der Anwender darauf antwortet. Somit können sich der Anwender und die Computervorrichtung auf ein Gespräch einlassen. Das Gespräch kann darin resultieren, dass der elektronische Assistent eine Aufgabe durchführt oder nur interaktional sein kann (z. B. einen Witz erzählen oder einen Einblick ermöglichen). Die
ZUSAMMENFASSUNGSUMMARY
Implementierungen stellen ein System zum Annotieren von Gesprächen bzw. Dialogen zwischen einem Anwender und einem elektronischen Assistenten auf hierarchische Weise zur Verfügung; das verwendet werden kann, um die Qualität des elektronischen Assistenten im Verlaufe der Zeit zu verbessern (z. B. durch Verbessern von Rangordnungssignalen, die bei einem maschinellen Lernen verwendet werden). Implementierungen stellen eine flexible hierarchische Struktur zum Beschreiben des Gesprächs und zugehöriger Dialogakte - von sowohl dem Anwender als auch dem elektronischen Assistenten - über den Verlauf des Gesprächs hinweg zur Verfügung. Jeder Dialogakt kann als ein separater Baum im Gespräch mit Annotationen dargestellt werden, die als Knoten im Baum und Bogen, die Knoten in unterschiedlichen Bäumen verbinden, die eine Wechselbeziehung haben, modelliert sind. Bei der hierarchischen Struktur zum Annotieren von Dialogakten identifizieren Kindknoten Elternknoten. Dies ermöglicht Implementierungen, um die individuellen Elemente als eine ungeordnete Liste zu speichern und um Annotationen und Bögen dynamisch, d. h. in Echtzeit, hinzuzufügen. Einige Implementierungen können ein Nachverarbeiten der Annotationsaufzeichnungen enthalten, d. h. einen Offline-Modus, um den Annotationsaufzeichnungen Information hinzuzufügen, die in einem Online-Modus nicht verfügbar ist, d. h. wenn die Aufzeichnungen in der hierarchischen Struktur erzeugt werden. Solche Information kann die Verbindungen zwischen Antworten und Anfragen enthalten, die nicht mit Information gemacht werden können, die in Echtzeit verfügbar ist.Implementations provide a system for annotating conversations between a user and an electronic assistant in a hierarchical manner; that can be used to improve the quality of the electronic assistant over time (e.g. by improving ranking signals used in machine learning). Implementations provide a flexible hierarchical structure for describing the conversation and associated dialog acts - from both the user and the electronic assistant - throughout the course of the conversation. Each dialogue act can be represented as a separate tree in conversation with annotations modeled as nodes in the tree and arcs connecting nodes in different trees that have an interrelationship. In the hierarchical structure for annotating dialog acts, child nodes identify parent nodes. This allows implementations to store the individual elements as an unordered list and to add annotations and arcs dynamically, i. H. in real time. Some implementations may include post-processing of the annotation records, i. H. an offline mode to add information to the annotation records that is not available in an online mode, d. H. when the records are generated in the hierarchical structure. Such information may include the connections between responses and requests that cannot be made with information that is available in real-time.
Gemäß bestimmten Aspekten der Offenbarung kann ein Verfahren ein Erzeugen eines ersten Annotationsbaums für einen annotierten Dialogakt enthalten. Der erste Annotationsbaum enthält einen Wurzelknoten für den Dialogakt und Blattknoten für jedes Annotationstag von Nicht-Null für den Dialogakt. Der Dialogakt ist mit einem Gesprächsidentifizierer assoziiert. Die Blattknoten des ersten Annotationsbaums enthalten einen Knoten für einen vorherigen Diskurs entsprechend einem Tag für einen vorherigen Diskurs im annotierten Dialogakt. Das Verfahren enthält auch ein Erzeugen eines Annotationsidentifizierers für jeden Knoten im ersten Annotationsbaum, wobei die Annotationsidentifizierer innerhalb des Gesprächsidentifizierers eindeutig sind. Das Verfahren kann auch ein Schreiben einer Annotationsaufzeichnung für jeden Knoten enthalten. Bei den Annotationsaufzeichnungen fehlt einer Aufzeichnung für den Wurzelknoten ein Elternidentifizierer; eine Aufzeichnung für Nichtwurzelknoten enthält einen Elternidentifizierer, wobei der Elternidentifizierer auf den Annotationsidentifizierer der Eltern Bezug nimmt; und die Aufzeichnung für den Knoten für einen vorherigen Diskurs enthält einen Annotationsidentifizierer für einen entsprechenden Knoten für einen nachfolgenden Diskurs, wobei der Knoten für einen nachfolgenden Diskurs ein Blattknoten in einem zweiten Annotationsbaum ist, der auch mit dem Gesprächsidentifizierer assoziiert ist.According to certain aspects of the disclosure, a method may include creating a first annotation tree for an annotated dialog act. The first annotation tree contains a root node for the dialogue act and leaf nodes for each non-zero annotation tag for the dialogue act. The dialog act is associated with a conversation identifier. The leaf nodes of the first annotation tree contain a previous discourse node corresponding to a previous discourse tag in the annotated dialogue act. The method also includes creating an annotation identifier for each node in the first annotation tree, the annotation identifiers being unique within the conversation identifier. The method may also include writing an annotation record for each node. In the annotation records, a record for the root node is missing a parent identifier; a record for non-root nodes includes a parent identifier, the parent identifier referencing the annotation identifier of the parent; and the record for the previous discourse node includes an annotation identifier for a corresponding subsequent discourse node, the subsequent discourse node being a leaf node in a second annotation tree that is also associated with the conversation identifier.
Ein Erzeugen des Annotationsbaums für den annotierten Dialogakt kann enthalten: Bestimmen, dass ein erster untergeordneter Dialogakt und ein zweiter untergeordneter Dialogakt ein gemeinsames Tag und gemeinsame Eltern gemeinsam nutzen; und Einfügen im Annotationsbaum eines Knotens, der ein Kind eines Knotens für die gemeinsamen Eltern ist und Eltern eines Knotens für den ersten untergeordneten Dialogakt ist, eines Knotens für den zweiten untergeordneten Dialogakt und eines Knotens für das gemeinsame Tag, wobei dem Knoten für den ersten untergeordneten Dialogakt und dem Knoten für den zweiten untergeordneten Dialogakt jeweils ein Kindknoten entsprechend dem gemeinsamen Tag fehlt. Das Verfahren kann weiterhin ein Zugreifen auf die Annotationsaufzeichnungen in Antwort auf eine Anfrage und ein Zurückbringen von Annotationsaufzeichnungen, für die bestimmt ist, dass sie auf die Anfrage reagieren, umfassen. Das Verfahren kann weiterhin ein Zugreifen auf die Annotationsaufzeichnungen umfassen, um Trainingsbeispiele für eine Dialogmanagementmaschine zu erzeugen; und ein Trainieren der Dialogmanagementmaschine unter Verwendung der Trainingsbeispiele. Das Verfahren kann weiterhin ein Zugreifen auf die Annotationsaufzeichnungen umfassen, um Fehlermuster zu identifizieren. Die Annotationsaufzeichnung für jeden Knoten kann Text entsprechend dem Knoten enthalten. Die Annotationsaufzeichnungen können in einer ungeordneten Liste gespeichert werden. Der erste Annotationsbaum kann eine erste Runde im Gespräch darstellen und der zweite Annotationsbaum kann eine zweite Runde im Gespräch darstellen, und die erste Runde und die zweite Runde können durch wenigstens eine intervenierende Runde getrennt sein. Die Aufzeichnung für den Wurzelknoten kann eine Indizierung eines Sprechers für den Dialogakt enthalten. Die Aufzeichnung für den Wurzelknoten und wenigstens einiges von der Vielzahl von Nichtwurzelaufzeichnungen können weiterhin eine Indizierung eines Sprechers für den Dialogakt enthalten. Das Annotationstag kann aus der Gruppe ausgewählt werden, die einen nachfolgenden Diskurstag, einen Dialogakt-Typ und ein vorheriges Diskurstag enthält. Das Annotationstag kann aus der Gruppe ausgewählt werden, die ein nachfolgendes Diskurstag, einen Dialogakt-Typ, einen Dialogfehler-Typ und ein vorheriges Diskurstag enthält. Nichtwurzelaufzeichnungen mit einem Annotationstag, das ein vorheriges Diskurstag kann weiterhin einen Annotationsidentifizierer von einer weiteren Annotationsaufzeichnung enthalten, wobei die andere Aufzeichnung ein Annotationstag hat, das ein nachfolgendes Diskurstag darstellt. Wenigstens einige der Nichtwurzelaufzeichnungen enthalten weiterhin ein Annotationstag. Wenigstens einige der Annotationstags können einen Textbereich darstellen. Wenigstens einer der Dialogakte kann eine Betriebsaktion darstellen, die durch einen Anwender durchgeführt ist. Das Verfahren kann weiterhin ein Empfangen von eingegebenen Dialogakten von einer Dialogeingabevorrichtung und ein Empfangen von ausgegebenen Dialogakten zur Ausgabe über eine Dialogausgabevorrichtung umfassen.Generating the annotation tree for the annotated dialog act may include: determining that a first sub-dialog act and a second sub-dialog act share a common tag and common parent; and inserting in the annotation tree a node that is a child of a node for the common parent and is a parent of a node for the first child dialog act, a node for the second child dialog act, and a node for the common tag, the node for the first child dialogue act and the node for the second subordinate assigned dialogue act is missing a child node corresponding to the common tag. The method may further comprise accessing the annotation records in response to a request and returning annotation records determined to be responsive to the request. The method may further include accessing the annotation records to generate training examples for a dialog management engine; and training the dialog management engine using the training examples. The method may further include accessing the annotation records to identify error patterns. The annotation record for each node may contain text corresponding to the node. The annotation records can be stored in an unordered list. The first annotation tree may represent a first round of conversation and the second annotation tree may represent a second round of conversation, and the first round and the second round may be separated by at least one intervening round. The record for the root node may contain an indexing of a speaker for the dialogue act. The record for the root node and at least some of the plurality of non-root records may further include an index of a speaker for the dialogue act. The annotation tag can be selected from the group containing a subsequent discourse tag, a dialogue act type and a previous discourse tag. The annotation tag can be selected from the group including a subsequent discourse tag, a dialog act type, a dialog error type, and a prior discourse tag. Non-root records with an annotation tag representing a previous discourse tag may further include an annotation identifier from another annotation record, the other record having an annotation tag representing a subsequent discourse tag. At least some of the non-root records also contain an annotation tag. At least some of the annotation tags can represent a text area. At least one of the dialog acts may represent an operational action performed by a user. The method may further include receiving input dialog acts from a dialog input device and receiving output dialog acts for output via a dialog output device.
Gemäß bestimmten Aspekten der Offenbarung umfasst ein System: wenigstens einen Prozessor; eine Dialogeingabevorrichtung; eine Dialogausgabevorrichtung; und einen Speicher, der Anweisungen speichert, die dann, wenn sie durch den wenigstens einen Prozessor ausgeführt werden, Operationen durchführen, die enthalten: Empfangen von eingegebenen Dialogakten von der Dialogeingabevorrichtung und Empfangen von ausgegebenen Dialogakten zur Ausgabe über die Dialogausgabevorrichtung und Erzeugen von hierarchischen Annotationsaufzeichnungen für Annotationen der eingegebenen Dialogakte und für Annotationen der ausgegebenen Dialogakte, wobei die hierarchischen Annotationsaufzeichnungen für einen Dialogakt enthalten: eine Wurzelaufzeichnung, die einen Gesprächsidentifizierer und einen Annotationsidentifizierer spezifiziert, wobei eine Vielzahl von Nichtwurzelaufzeichnungen enthält: einen Annotationsidentifizierer und einen Elternidentifizierer, wobei der Elternidentifizierer ein Annotationsidentifizierer einer anderen Aufzeichnung ist, wobei wenigstens einiges der Nichtwurzelaufzeichnungen weiterhin ein Annotationstag enthält.According to certain aspects of the disclosure, a system includes: at least one processor; a dialog input device; a dialog output device; and a memory storing instructions which, when executed by the at least one processor, perform operations including: receiving input dialog acts from the dialog input device and receiving output dialog acts for output via the dialog output device and generating hierarchical annotation records for Annotations of the input dialogue act and for annotations of the output dialogue act, the hierarchical annotation records for a dialogue act including: a root record specifying a conversation identifier and an annotation identifier, a plurality of non-root records including: an annotation identifier and a parent identifier, the parent identifier being an annotation identifier of a another record, at least some of the non-root records further containing an annotation tag.
Die Wurzelaufzeichnung kann weiterhin eine Indizierung bzw. Anzeige eines Sprechers für den Dialogakt enthalten. Die Wurzelaufzeichnung und wenigstens einiges der Vielzahl von Nichtwurzelaufzeichnungen können weiterhin eine Anzeige eines Sprechers für den Dialogakt enthalten. Das Annotationstag kann aus der Gruppe ausgewählt werden, die ein Tag für einen nachfolgenden Diskurs, einen Dialogakttyp und ein Tag für einen vorherigen Diskurs enthält. Das Annotationstag kann aus der Gruppe ausgewählt werden, die ein Tag für einen nachfolgenden Diskurs, einen Dialogakttyp, einen Dialogfehler und ein Tag für einen vorherigen Diskurs enthält. Die Nichtwurzelaufzeichnungen können ein Annotationstag haben, das ein Tag für einen vorherigen Diskurs darstellt, und enthalten weiterhin einen Annotationsidentifizierer einer anderen Annotationsaufzeichnung, wobei die andere Aufzeichnung ein Annotationstag hat, das ein Tag für einen nachfolgenden Diskurs darstellt. Wenigstens einige der Annotationstags können einen Textbereich darstellen. Wenigstens einer der Dialogakte kann eine durch einen Anwender des Systems durchgeführte Betriebsaktion darstellen. Die Operationen können auch ein Bestimmen umfassen, dass eine erste Nichtwurzelaufzeichnung, die mit einer Wurzelaufzeichnung für einen ersten Gesprächsidentifizierer assoziiert ist, mit einer zweiten Nichtwurzelaufzeichnung verbindet, die mit einer Wurzelaufzeichnung für einen zweiten Gesprächsidentifizierer assoziiert ist, ein Erzeugen einer ersten Nichtwurzelaufzeichnung, die die zweite Nichtwurzelaufzeichnung im Elternidentifizierer identifiziert und ein Annotationstag hat, das einen nachfolgenden Diskurs darstellt, und Erzeugen einer zweiten neuen Nichtwurzelaufzeichnung, die die erste Nichtwurzelaufzeichnung im Elternidentifizierer identifiziert, ein Annotationstag hat, das einen vorherigen Diskurs darstellt, und den Annotationsidentifizierer für die erste neue Nichtwurzelaufzeichnung identifiziert, wobei der erste Gesprächsidentifizierer und die zweiten Gesprächsidentifizierer nicht sequentiell sind.The root record may further include an index of a speaker for the dialogue act. The root record and at least some of the plurality of non-root records may further include an indication of a speaker for the dialogue act. The annotation tag can be selected from the group consisting of a subsequent discourse tag, a dialogue act type and a previous discourse tag. The annotation tag may be selected from the group consisting of a subsequent discourse tag, a dialogue act type, a dialogue error, and a previous discourse tag. The non-root records may have an annotation tag representing a tag for a previous discourse and further include an annotation identifier of another annotation record, the other record having an annotation tag representing a tag for a subsequent discourse. At least some of the annotation tags can represent a text area. At least one of the dialog acts may represent an operational action performed by a user of the system. The operations may also include determining that a first non-root record associated with a root record for a first conversation identifier connects to a second non-root record associated with a root record for a second conversation identifier, creating a first non-root record that associates the second identifies a non-root record in the parent identifier and has an annotation tag representing a subsequent discourse, and creating a second new non-root record that identifies the first non-root record in the parent identifier, has an annotation tag that represents a previous discourse, and identifies the annotation identifier for the first new non-root record, wherein the first conversation identifier and the second conversation identifiers are non-sequential.
Gemäß bestimmten Aspekten der Offenbarung enthält ein System wenigstens einen Prozessor, eine Dialogeingabevorrichtung, eine Dialogausgabevorrichtung und einen Datenspeicher von hierarchischen Annotationsaufzeichnungen. Die hierarchischen Annotationsaufzeichnungen enthalten Wurzelaufzeichnungen und Nichtwurzelaufzeichnungen. Jede Wurzelaufzeichnung spezifiziert einen Gesprächsidentifizierer und einen Annotationsidentifizierer. Jede Nichtwurzelaufzeichnung enthält einen Annotationsidentifizierer und einen Eltemidentifizierer, wobei der Elternidentifizierer ein Annotationsidentifizierer einer anderen Aufzeichnung ist. Wenigstens einige der Nichtwurzelaufzeichnungen enthalten weiterhin ein Annotationstag. Das System enthält auch einen Speicher, der Anweisungen speichert, die dann, wenn sie durch den wenigstens einen Prozessor ausgeführt werden, Operationen durchführen. Die Operationen können ein Empfangen eines eingegebenen Dialogakts von der Dialogeingabevorrichtung enthalten, ein Erzeugen einer ersten neuen Wurzelaufzeichnung und von ersten Nichtwurzelaufzeichnungen für den eingegebenen Dialogakt, ein Empfangen eines ausgegebenen Dialogakts zur Ausgabe über die Dialogausgabevorrichtung, die auf den eingegebenen Dialogakt antwortet, und ein Erzeugen einer zweiten neuen Wurzelaufzeichnung und von zweiten Nichtwurzelaufzeichnungen für den ausgegebenen Dialogakt, wobei wenigstens eine der zweiten Nichtwurzelaufzeichnungen ein Annotationstag enthält, das zurück zu einer Aufzeichnung der ersten Nichtwurzelaufzeichnungen verbindet. Ein Zurückverbinden zu einer Aufzeichnung der ersten Nichtwurzelaufzeichnungen kann ein Erzeugen der Aufzeichnung mit einem Tag für einen nachfolgenden Diskurs enthalten, wobei die Aufzeichnung einen Elternidentifizierer einer existierenden ersten Nichtwurzelaufzeichnung hat. Das Annotationstag kann aus der Gruppe ausgewählt werden, die ein Tag für einen nachfolgenden Diskurs, einen Dialogakttyp und ein Tag für einen vorherigen Diskurs enthält. Wenigstens einige der ersten Nichtwurzelknoten können ein Tag enthalten, das einen Textbereich des eingegebenen Dialogakts darstellt.In accordance with certain aspects of the disclosure, a system includes at least a processor, a dialog input device, a dialog output device, and a data store of hierarchical annotation records. The hierarchical annotation records include root records and non-root records. Each root record specifies a conversation identifier and an annotation identifier. Each non-root record contains an annotation identifier and a parent identifier, where the parent identifier is an annotation identifier of another record. At least some of the non-root records also contain an annotation tag. The system also includes a memory that stores instructions that, when executed by the at least one processor, perform operations. The operations may include receiving an input dialog act from the dialog input device, creating a first new root record and first non-root records for the input dialog act, receiving an output dialog act for output via the dialog output device responsive to the input dialog act, and creating a second new root record and second non-root records for the output dialog act, at least one of the second non-root records containing an annotation tag linking back to a record of the first non-root records. Linking back to a record of the first non-root records may include creating the record with a tag for a subsequent discourse, the record having a parent identifier of an existing first non-root record. The annotation tag can be selected from the group consisting of a subsequent discourse tag, a dialogue act type and a previous discourse tag. At least some of the first non-root nodes may contain a tag representing a text portion of the input dialog act.
Bei einem allgemeinen Aspekt enthält ein Computerprogrammprodukt, das auf einer computerlesbaren Speichervorrichtung enthalten ist, Anweisungen, die dann, wenn sie durch wenigstens einen in einem Substrat ausgebildeten Prozessor ausgeführt werden, veranlassen, dass eine Computervorrichtung irgendetwas der offenbarten Verfahren, Operationen oder Prozesse durchführt. Bei einem weiteren allgemeinen Aspekt umfasst ein System wenigstens einen Prozessor und einen Speicher, der Anweisungen speichert, die dann, wenn sie durch den wenigstens einen Prozessor ausgeführt werden, Operationen gemäß den Verfahren, Operationen oder Prozessen durchführen, wie sie oben offenbart sind. Ein weiterer allgemeiner Aspekt enthält ein System und/oder ein Verfahren zum Annotieren von Dialogakten, wie es im Wesentlichen gezeigt ist in, und/oder beschrieben ist in Verbindung mit, wenigstens einer der Figuren und wie es in den Ansprüchen vollständiger dargelegt ist.In one general aspect, a computer program product embodied on a computer-readable storage device includes instructions that, when executed by at least one processor formed in a substrate, cause a computing device to perform any of the disclosed methods, operations, or processes. In another general aspect, a system includes at least one processor and a memory storing instructions that, when executed by the at least one processor, perform operations according to the methods, operations, or processes disclosed above. Another general aspect includes a system and/or method for annotating dialog acts substantially as shown in and/or described in connection with at least one of the figures and as more fully set forth in the claims.
Eine oder mehrere der Implementierungen des hierin beschriebenen Gegenstands können implementiert werden, um einen oder mehrere der folgenden Vorteile zu realisieren. Beispielsweise können, weil die Annotationsstruktur eher Elternidentifizierer als Kinder enthält, zusätzliche Annotationen in Echtzeit hinzugefügt werden und können die Dialogakte in einer ungeordneten Liste gespeichert werden. Die zusätzlichen Annotationen können mit einem Gespräch verbinden, das über eine lange Periode, z.B. Tage, hinweg stattfindet. Weil die Liste ungeordnet ist, können Annotationen durch mehrere Aufrufe eines Dialogmanagers hinzugefügt werden, was die Struktur flexibel macht. Die Struktur unterstützt auch ein Anfragen über Annotationstags, weil das System Wechselbeziehungen zwischen dem System und einem Anwender auf eine äußerst strukturierte Weise erfasst. Somit können beispielsweise die Annotationsaufzeichnungen für alle Fragen angefragt werden, die mit einer Antwort von „ja/nein“ beantwortet sind, wobei der Anwender auch ein verbales Seufzen ausdrückte (was in einem Annotationstag erfasst werden kann), und können, unter Verwendung der Elternverbindungen, die Dialogakte in Bezug auf diese Antworten schnell identifiziert und zurückgebracht werden. Als ein weiteres Beispiel kann eine Anfrage die Aufzeichnungen verwenden, um alle aufgegebenen Gespräche zu identifizieren, z.B. ein Tag für einen nachfolgenden Diskurs, das kein Tag für einen vorherigen Diskurs hat. Diese Gespräche können zu einem Modell geliefert werden, das ein Muster für die Gespräche identifiziert. Das Muster kann zu Entwicklern geliefert werden, um Bereiche zu identifizieren, wo die Dialogakte des elektronischen Assistenten verbessert werden können.One or more implementations of the subject matter described herein may be implemented to realize one or more of the following advantages. For example, because the annotation structure includes parent identifiers rather than children, additional annotations can be added in real time and the dialogue acts can be stored in an unordered list. The additional annotations can connect to a conversation that takes place over a long period, e.g., days. Because the list is unordered, annotations can be added through multiple calls to a dialog manager, making the structure flexible. The structure also supports querying via annotation tags because the system captures interrelationships between the system and a user in a highly structured way. Thus, for example, the annotation records can be queried for any questions answered with a yes/no answer, where the user also expressed a verbal sigh (which can be captured in an annotation tag), and, using the parent connections, the dialogue acts related to these responses can be quickly identified and returned. As another example, a query may use the records to identify any abandoned conversations, e.g., a subsequent discourse tag that does not have a previous discourse tag. These conversations can be delivered to a model that identifies a pattern for the conversations. The template can be provided to developers to identify areas where the electronic assistant's dialog files can be improved.
Als ein weiteres Beispiel stellt die hierarchische Struktur durch Vermeiden einer Duplizierung von Annotationen einen geringeren Speicherbedarf zur Verfügung. Beispielsweise kann eine Annotation, die für mehrere Kinder im Baum gilt, eher einmal bei den gemeinsamen Eltern als bei jedem Knoten gespeichert werden. Als ein weiteres Beispiel sind die hierarchischen Annotationsaufzeichnungen theoretisch fehlerfrei und semantisch korrekt. Dies lässt zu, dass Implementierungen robust gegenüber irgendeiner Art von Dialog sind, was entgegengesetzt dazu ist, auf systembetriebene Dialoge beschränkt zu sein. Anders ausgedrückt ermöglichen die hierin offenbarten hierarchischen Annotationsaufzeichnungen, die maschinenlesbare Semantiken an Dialogakte anhängen, eine Verarbeitung von Gesprächen mit hoher Genauigkeit. Beispielsweise ermöglicht die hierarchische Struktur, dass das System Teile des Dialogakts genau bestimmt, die spezifischen Annotationen entsprechen. Somit können beispielsweise unterschiedliche Teile eines komplexen, zusammengesetzten Dialogakts präzis annotiert werden. Diese Präzision erstreckt sich auf die Fähigkeit, vorherige Annotationen zu identifizieren, auf welche sich ein Teil des Dialogakts bezieht. Darüber hinaus können die Annotationen frei definiert werden. Anders ausgedrückt kann, während das System Annotationen basierend auf theoretischen Definitionen unterstützt, es auch Annotationen unterstützen, die durch einen spezifischen Dialogmanager erzeugt sind, was sie flexibel und auf Kundenbedürfnisse anpassbar macht, was ein flexibles Anfragen und Trainieren unterstützt. Als ein weiteres Beispiel lässt das hierarchische Annotationsschema auch zu, dass verschiedene Annotationen rückwärtsverbunden werden, was eine einfachere Nachverarbeitung und Datensammlung ermöglicht. Dies kontrastiert mit einer Dialogmetrikverfolgung, die auf einer Runde-für-Runde-Basis unter der Annahme durchgeführt wird, dass Dialogakte sequentiell sind, z.B. ein Dialogakt bei der N+1-Runde ist direkt bezogen auf den Dialogakt der N-Runde. Die ungeordnete Listennatur von offenbarten Implementierungen lässt zu, dass ein Dialogakt bei der N+1-Runde mit irgendeiner Runde < N (z.B. nicht sequentiell) verbunden wird. Dies ermöglicht eine Erzeugung von quantitativen Metriken für Konzepte, wie beispielsweise „Auf welche vorherige Interaktion bezieht sich der aktuelle Dialogakt eines Anwenders?“ und „Wie lange ist diese Bezugnahme her?“ in Echtzeit, sowie um Vorwärtsreferenzen in einer Retrospektive zu analysieren, z.B. ein Identifizieren für irgendeinen historischen Dialogakt von nachfolgenden Dialogakten, die auf den historischen Akt insgesamt oder teilweise bezogen sind. Solche Vorwärtsreferenzen sind aufgrund der ungeordneten Listennatur von offenbarten Implementierungen möglich.As another example, the hierarchical structure provides a smaller memory footprint by avoiding duplication of annotations. For example, an annotation that applies to multiple children in the tree may be stored once at the common parent rather than at each node. As another example, the hierarchical annotation records are theoretically sound and semantically correct. This allows implementations to be robust to any type of dialog, as opposed to being limited to system driven dialogs. In other words, the hierarchical annotation records disclosed herein that attach machine-readable semantics to acts of dialogue enable conversations to be processed with high fidelity. For example, the hierarchical structure allows the system to pinpoint parts of the dialogue act that spe correspond to cific annotations. In this way, for example, different parts of a complex, composed dialogue act can be precisely annotated. This precision extends to the ability to identify previous annotations to which part of the dialogue act refers. In addition, the annotations can be freely defined. In other words, while the system supports annotations based on theoretical definitions, it can also support annotations generated by a specific dialog manager, making them flexible and customizable, supporting flexible querying and training. As another example, the hierarchical annotation scheme also allows different annotations to be linked backwards, allowing for easier post-processing and data collection. This contrasts with dialogue metric tracking performed on a round-by-round basis assuming that dialogue acts are sequential, eg, a dialogue act at the N+1 round is directly related to the dialogue act at the N round. The unordered list nature of disclosed implementations allows a dialog act in the N+1 round to be associated with any round < N (eg, non-sequential). This allows for real-time generation of quantitative metrics for concepts such as "What previous interaction does a user's current dialog act refer to?" and "How long ago was this reference?" Identifying, for any historical dialogue act, subsequent dialogue acts related in whole or in part to the historical act. Such forward references are possible due to the unordered list nature of disclosed implementations.
Als ein weiteres Beispiel bieten Implementierungen ein hohes Maß an Präzision, was zum richtigen Messen von Qualität wichtig ist. Es wird auch erkannt werden, dass eine verbesserte Vorrichtungsleistungsfähigkeit eine Facette der obigen Beschreibung ist. Beispielsweise macht die hierarchische Organisation von Annotationen für einen Dialog den Dialog durchsuchbar, z.B. über eine Suchanfrage über den Baum, und reduziert die Notwendigkeit, große Körper eines Dialogs für solche Annotationen zu durchsuchen. Eine hierarchische Annotation von Dialogakten stellt auch ein Kontextframework für diese Annotationen zur Verfügung, dessen Entwicklung sonst für den Vorrichtungsprozessor nicht möglich wäre. Dies reduziert Anforderungen an Rechenressourcen, eine Speichernutzung und eine Batterienutzung in einer Client-Vorrichtung oder einer lokalen Vorrichtung. In Fällen, in welchen eine Vorrichtung in einem Client-Servermodus betrieben wird, reduziert dies auch die Anforderung an eine Client-Server-Kommunikation und eine Datennutzung.As another example, implementations provide a high degree of precision, which is important for properly measuring quality. It will also be appreciated that improved device performance is a facet of the above description. For example, the hierarchical organization of annotations for a dialog makes the dialog searchable, e.g., via a tree query, and reduces the need to search large bodies of a dialog for such annotations. Hierarchical annotation of dialog acts also provides a context framework for these annotations that would otherwise not be possible for the device processor to develop. This reduces demands on computing resources, memory usage and battery usage in a client device or a local device. In cases where a device is operated in a client-server mode, this also reduces the requirement for client-server communication and data usage.
Die Details von einer oder mehreren Implementierungen sind in den beigefügten Zeichnungen und der nachstehenden Beschreibung dargelegt. Andere Merkmale werden aus der Beschreibung und den Zeichnungen und aus den Ansprüchen offensichtlich werden.The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
Figurenlistecharacter list
-
1 ist ein Blockdiagramm, das ein beispielhaftes System gemäß dem offenbarten Gegenstand darstellt.1 12 is a block diagram illustrating an example system in accordance with the disclosed subject matter. -
2 ist ein Blockdiagramm, das ein weiteres beispielhaftes System gemäß dem offenbarten Gegenstand darstellt.2 12 is a block diagram illustrating another example system in accordance with the disclosed subject matter. -
3 ist ein Blockdiagramm, das ein Beispiel von anfänglichen Annotationsbäumen für zwei Dialogakte bei einem Gespräch gemäß dem offenbarten Gegenstand darstellt.3 Figure 12 is a block diagram illustrating an example of initial annotation trees for two acts of dialogue in a conversation in accordance with the disclosed subject matter. -
4 ist ein Blockdiagramm, das ein Beispiel von schließlichen Annotationsbäumen für die Dialogakte der3 gemäß dem offenbarten Gegenstand darstellt.4 Fig. 12 is a block diagram showing an example of eventual annotation trees for the dialog act of the3 according to the disclosed subject matter. -
5 ist ein Blockdiagramm, das beispielhafte hierarchische Annotationsaufzeichnungen, die aus der schließlichen baumbasierten Annotation der4 erzeugt sind, gemäß dem offenbarten Gegenstand darstellt.5 Fig. 12 is a block diagram showing exemplary hierarchical annotation records resulting from the final tree-based annotation of the4 are generated according to the disclosed subject matter. -
6 stellt ein Ablaufdiagramm eines beispielhaften Prozesses zum Erzeugen von Aufzeichnungen in einer hierarchischen Annotationsstruktur von Gesprächs-Dialogakten gemäß offenbarten Implementierungen dar.6 12 depicts a flow chart of an example process for creating records in a hierarchical annotation structure of conversational dialog acts, according to disclosed implementations. -
7 zeigt ein Beispiel einer Computervorrichtung, die verwendet werden kann, um die beschriebenen Techniken zu implementieren.7 Figure 1 shows an example of a computing device that can be used to implement the described techniques. -
8 zeigt ein Beispiel einer verteilten Computervorrichtung, die verwendet werden kann, um die beschriebenen Techniken zu implementieren.8th Figure 1 shows an example of a distributed computing device that can be used to implement the described techniques.
Gleiche Bezugszeichen in den verschiedenen Zeichnungen zeigen gleiche Elemente an.Like reference numbers in the different drawings indicate like elements.
DETAILLIERTE BESCHREIBUNGDETAILED DESCRIPTION
Implementierungen enthalten Systeme und Verfahren, die hierarchische Annotationen für Dialogakte bei einem Gespräch zwischen einem Anwender und einem elektronischen Assistenten erzeugen, der ein Suchen und eine Verbesserung der Qualitätsaspekte des elektronischen Assistenten ermöglicht, wie beispielsweise eine Rangbildung, ein Bestimmen von Engpässen und ein Bestimmen davon, welche durch das System gelieferten Dialogakte veranlassen, dass der Anwender das Gespräch beendet, z.B. um aufgrund von Frustration auszusteigen.
Das hierarchische Annotationssystem 100 enthält eine Computervorrichtung 105. Die Computervorrichtung kann in einem Personalcomputer implementiert sein, wie beispielsweise einem Laptop-Computer, einem Smartphone, einem Tablet, einem Desktop-Computer, einer tragbaren Vorrichtung, einem Haushaltsgerät, etc. Die Computervorrichtung 105 kann ein Beispiel einer Computervorrichtung 700 sein, wie es in
Die Computervorrichtung 105 kann eine Dialog-Eingabe/AusgabeVorrichtung (Dialog-Eingabe/Ausgabe-Vorrichtungen) 110 enthalten. Die Dialog-Eingabe/Ausgabe-Vorrichtungen 110 können Hardware enthalten, die ermöglicht, dass der elektronische Assistent 120 eine Eingabe vom Anwender 180 empfängt oder eine Antwort zum Anwender 180 liefert. Eine Eingabe vom Anwender kann vokal sein, z.B. in der Form von Sprache. Eine Eingabe vom Anwender kann auch nicht vokal sein, z.B. Text, der durch den Anwender geliefert ist. Die Ausgabe kann gleichermaßen sprachbasiert oder textbasiert sein. Allgemeine Dialog-Eingabe/Ausgabe-Vorrichtungen enthalten ein Mikrofon und einen Lautsprecher, und/oder eine Tastatur (virtuell oder physikalisch) und eine Anzeige. Das hierarchische Annotationssystem 100 wird primär im Zusammenhang mit einer gesprochenen Konversation unter Verwendung eines Mikrofons und eines Lautsprechers diskutiert, aber Implementierungen enthalten andere dialogorientierte Moden, wie beispielsweise diejenigen, die in einer Nachrichtenübermittlungsanwendung gehalten sind.The
Die Module des hierarchischen Annotationssystems 100 können einen elektronischen Assistenten 120 enthalten. Der elektronische Assistent 120 kann konfiguriert sein, um eine Eingabe von den Dialog-Eingabe/Ausgabe-Vorrichtungen 110 zu erhalten, um die Eingabe zu verarbeiten, und um eine Antwort zu den Dialog-Eingabe/Ausgabe-Vorrichtungen 110 zu liefern. Der elektronische Assistent 120 kann eine Dialogmanagementmaschine 122, eine Sprachmaschine 124 und eine Dialogannotationsmaschine 126 enthalten. Die Sprachmaschine 124 kann einen geeigneten Sprache-zu-Text-Prozess verwenden, um empfangene vokale Eingaben in eine Textkette umzuwandeln. Eine nicht vokale Eingabe, die als Text empfangen ist, kann auch zur Sprachmaschine 124 weitergereicht werden (z.B. über ein Tippen einer anderen Textauswahl). Bei einigen Implementierungen kann die nicht vokale Eingabe Text sein, der in einem Bild erkannt wird. Beispielsweise kann ein Anwender 180 eine Fotografie unter Verwendung einer Kamera (nicht dargestellt) aufnehmen, die kommunikativ mit der Computervorrichtung 105 verbunden ist, und das Bild kann zur Sprachmaschine 124 geliefert werden. Beispielsweise kann die Sprachmaschine 124 eine Erkennung auf dem Bild durchführen, um Text zu entdecken, um als Eingabe verwendet zu werden. Bei einigen Implementierungen kann die nicht vokale Eingabe eine Entität sein, die im Bild erkannt wird. Beispielsweise kann die Sprachmaschine 124 eine Entitätserkennung auf dem Bild durchführen, um eine Entität aus einer Wissensbasis zu bestimmen, die im Bild enthalten ist, und eine Beschreibung der Entität als Texteingabe verwenden. Die Eingabe, gleichgültig ob vokal oder nicht vokal, wird Dialogakt genannt. Ein Dialogakt enthält eine vokale Eingabe, eine nicht vokale Eingabe oder eine Kombination aus vokaler und nicht vokaler Eingabe. Ein Dialogakt kann auch Betriebsaktionen enthalten, die durch einen Anwender durchgeführt sind. Beispielsweise kann eine Ausschalttaste ein Dialogakt sein. Eine durch den elektronischen Assistenten 120 gelieferte Ausgabe ist auch ein Dialogakt. Die Sprachmaschine 124 kann den ausgegebenen Dialogakt zu einer Klangdatei umwandeln, die durch die Eingabe/Ausgabe-Vorrichtungen 110 abgespielt werden kann, oder kann Text des Dialogakts zur Anzeige auf den Eingabe/Ausgabe-Vorrichtungen 110 liefern.The modules of the
Die Dialogmanagementmaschine 122 kann einen oder mehrere Dialoge managen. Dies enthält ein Beibehalten eines Zustands des Dialogs, z.B. welche Frage gerade beantwortet wird, so dass der elektronische Assistent 120 empfangenes Audio, das mit dem Dialog assoziiert ist, richtig interpretieren kann. Insbesondere kann die Genauigkeit des elektronischen Assistenten 120 beim richtigen Interpretieren von empfangenem Audio durch ein Wissen diesbezüglich verbessert werden, welcher Typ von Antwort durch den Anwender 180 angefordert ist. Beispielsweise kann die Dialogmanagementmaschine 122 bestimmen, dass der Anwender angefordert hat, dass eine Aufgabe durchgeführt wird. Die Dialogmanagementmaschine 122 kann auch einen Maschinenlernalgorithmus enthalten, der ein Gespräch mit dem Anwender führen kann, z.B. durch Erzeugen einer dialogorientierten Antwort, die nicht auf eine spezifische Aufgabe reagiert bzw. antwortet. Die Dialogmanagementmaschine 122 kann herkömmliche oder später entwickelte Techniken verwenden, um eine Antwort zum Anwender zu erzeugen. Wie es oben angezeigt ist, wird die Antwort auch als ein Dialogakt angesehen.The
Gleichgültig, ob ein Dialogakt vom Anwender 180 oder von der Dialogmanagementmaschine 122 ist, annotiert der elektronische Assistent 120 den Dialogakt, um wichtige Charakteristiken des Dialogakts zu markieren, wie beispielsweise, ob der Dialogakt eine Anfrage, eine Behauptung, eine Antwort auf eine Anfrage, nicht verständlich, etc. ist. Ein Beispiel eines Systems zum Annotieren von Dialogen ist DAMSL (Dialog Act Markup in Several Layers = Dialogaktmarkierung in mehreren Schichten). Das Folgende stellt zwei Dialogakte von einem Probedialog zwischen einem Anwender und einem elektronischen Assistenten dar:
- [Anwender] Wie geht es Dir heute?
- [ea] Ausgezeichnet. Es geht mir gut. Wie geht es Dir?
- [User] How are you today?
- [ea] Excellent. I'm doing well. How are you doing?
Der elektronische Assistent 120 kann die Dialogakte wie folgt annotieren:
U:[Wie geht es Dir heute?] DAE:<> DAT: AUFGABE SD: INFO_ANFRAGE PD: <> EA:[Ausgezeichnet. Es geht mir gut. Wie geht es Dir?] EA:[Ausgezeichnet] DAE:<> DAT:AUFGABE SD:AUSSAGE_AKTIVIEREN PD:ANTWORT EA:[Es geht mir gut.] DAE:<> DAT:AUFGBE SD: AUSSAGE_REAKTIVIEREN PD:ANTWORT EA:[Wie geht es Dir?] DAE:<> DAT:AUFGABE SD:INFO_ANFRAGE PD:<>The
U:[How are you today?] DAE:<> DATE: TASK SD: INFO_REQUEST PD: <> EA:[Excellent. I'm doing well. How are you doing?] EA:[Excellent] DAE:<> DATE:TASK SD: ACTIVATE STATEMENT PD: ANSWER EA: [I'm fine.] DAE:<> DATE:TASK SD: REACTIVATE STATEMENT PD: ANSWER EA:[How are you?] DAE:<> DATE:TASK SD: INFO_REQUEST PD:<>
Beim obigen Annotationsbeispiel stellt DAE ein Dialogaktfehler-Tag dar, das Fehlerinformation aufzeichnet, wie beispielsweise, ob der Dialogakt verständlich ist und ob der Dialogakt erfolgreich beendet wurde. DAT stellt ein Dialogakttyp-Tag dar, das den Semantikinhalt des Dialogakts charakterisiert. SD ist ein Tag für einen nachfolgenden Diskurs, das den Effekt erfasst, den der Dialogakt auf nachfolgende Interaktionen haben kann, und/oder die zukünftigen Vorstellungen und Aktionen der Teilnehmer beschränkt. PD ist ein Tag für einen vorherigen Diskurs, das eine Anzeige davon ist, wie der aktuelle Dialogakt auf einen vorherigen Diskurs bezogen ist. Bei der obigen Annotation kann jeder Dialogakt (auf den auch als Äußerung Bezug genommen wird, obwohl der Dialogakt nicht auf vokale Eingaben beschränkt ist und maschinengeschriebene oder Erkennungseingaben enthalten kann, wie es oben beschrieben ist) in einen oder mehrere untergeordnete Dialogakte (z.B. Unteräußerung) basierend auf den Charakteristiken von unterschiedlichen Teilbereichen des Dialogakts aufgeteilt sein. Somit ist beispielsweise die Antwort des elektronischen Assistenten in drei untergeordnete Dialogakte aufgeteilt. Der erste ist eine aktivierte bzw. nachdrückliche Aussage, der zweite ist eine reaktivierte bzw. wieder behauptete Aussage und der dritte ist eine Informationsanfrage.In the annotation example above, DAE represents a dialogue act error tag that records error information such as whether the dialogue act is understandable and whether the dialogue act ended successfully. DAT represents a dialog act type tag that characterizes the semantic content of the dialog act. SD is a tag for subsequent discourse that captures the effect that the dialogue act may have on subsequent interactions and/or constrains participants' future imaginations and actions. PD is a previous discourse tag, which is an indication of how the current dialogue act relates to a previous discourse. In the annotation above, each dialogue act (also referred to as an utterance, although the dialogue act is not limited to vocal input and may include typed or recognition inputs as described above) can be based into one or more subordinate dialogue acts (e.g., sub-utterance). be divided on the characteristics of different parts of the dialogue act. Thus, for example, the response of the electronic assistant is divided into three subordinate dialog acts. The first is an activated or emphatic statement, the second is a reactivated or reasserted statement, and the third is a request for information.
Implementierungen können irgendein Annotationsschema verwenden und sind nicht auf die Verwendung der Annotationstags oder des dargestellten Annotationsschemas beschränkt. Beispielsweise können Implementierungen interne Information darüber enthalten, wie das System eine Antwort für den elektronischen Assistenten erzeugte. Implementierungen können auch Annotationen enthalten, die Verbindungen zu externen Ressourcen darstellen, die verwendet wurden, wenn die Anwendereingabe interpretiert ist oder wenn die Systemantwort erzeugt ist. Annotationen können Attribute über die Umgebung enthalten, z.B. ob es laut oder ruhig war, ob die Eingabe vokal oder nicht vokal war, etc. Annotationen können irgendein Tag- und Wertepaar sein, das auf das gesamte oder einen Teilbereich des Dialogakts abgebildet ist. Annotationen (das Tag und seine möglichen Werte) können eindeutig für einen bestimmten Dialogmanager innerhalb des elektronischen Assistenten 120 und durch diesen definiert sein. Bei einigen Implementierungen können unterschiedliche Dialogmanager, die mit dem elektronischen Assistenten 120 arbeiten, unterschiedliche Annotationen definieren.Implementations may use any annotation scheme and are not limited to using the annotation tags or the annotation scheme shown. For example, implementations may contain internal information about how the system generated a response for the electronic assistant. Implementations may also contain annotations representing links to external resources used when interpreting user input or when generating the system response. Annotations can include attributes about the environment, e.g. whether it was loud or quiet, whether the input was vocal or non-vocal, etc. Annotations can be any tag and value pair that maps to all or part of the dialogue act. Annotations (the tag and its possible values) may be unique to and defined by a particular dialog manager within
Der elektronische Assistent 120 kann eine Dialogannotationsmaschine 126 enthalten, die die Annotationen verwenden kann, um eine hierarchische Darstellung zu erzeugen, die in einer maschinenlesbaren Form als hierarchische Annotationsaufzeichnungen 140 gespeichert werden kann. Diese hierarchische Darstellung kann verwendet werden, um Einblicke für den elektronischen Assistenten 120 abzuleiten, um die Qualität der Dialogakte, die durch den elektronischen Assistenten 120 geliefert sind, im Verlaufe der Zeit zu verbessern. Der Betrieb der Dialogannotationsmaschine 126 kann durch den Anwender 180 gesteuert werden. Beispielsweise kann die Dialogannotationsmaschine 126 nur mit einer Erlaubnis des Anwenders arbeiten. Die mit der Erlaubnis des Anwenders erzeugten hierarchischen Annotationsaufzeichnungen 140 können verwendet werden, um die Dialogmanagementmaschine 122 zu trainieren, was eine personalisierte Maschine erzeugt, die spezifisch für den Anwender ist und seine oder ihre Art eines Interagierens mit dem elektronischen Assistenten erkennt. Ein solches personalisiertes Trainieren der Dialogmanagementmaschine 122 liefert Antworten höherer Qualität vom elektronischen Assistenten 120. Beispielsweise können die hierarchischen Annotationsaufzeichnungen 140 verwendet werden, um Dialoge zu identifizieren, bei welchen Anwender häufig mehrere klärende Fragen vor einem Fortschreiten fragen. Ein Identifizieren von solchen „Gefahrenherden“ kann zu einem Verbessern der Benutzerführung des elektronischen Assistenten führen, so dass die klärenden Fragen nicht nötig sind. Bei einigen Implementierungen können annotierte Dialogaufzeichnungen zu einem Maschinenlernalgorithmus geliefert werden, der trainiert ist, um solche „Gefahrenherde“ zu identifizieren und eine geeignete Lösung für die Benutzerführung vorzuschlagen oder zu erzeugen. Bei einigen Implementierungen kann ein Maschinenlernalgorithmus verwendet werden, um Vorwärtsreferenzen zu identifizieren, z.B. für einen bestimmten Dialogakt, ein oder mehrere nachfolgende Dialogakte, die sich insgesamt oder teilweise auf den bestimmten Dialogakt zurückbeziehen. Das System 100 kann auch hierarchische Annotationsaufzeichnungen 140 quer über viele Anwender anhäufen bzw. vereinigen, um allgemeine Qualitätsverbesserungen voranzutreiben. Das System 100 kann auch die hierarchischen Annotationsaufzeichnungen 140 verwenden, um eine hilfreichere graphische Anwenderschnittstelle zu erzeugen, die dem Anwender anzeigt, dass es für einen Teil der Systemantwort beabsichtigt ist, dass sie sich auf einen vorherigen Dialogakt zurückbezieht, selbst wenn er nicht direkt der Antwort vorangegangen war.The
Um die hierarchischen Annotationsaufzeichnungen 140 zu erzeugen, kann die Dialogannotationsmaschine 126 mit der annotierten Äußerung starten und einen Knoten für jede Äußerung, jede Unteräußerung und jedes Annotations-Flag zu erzeugen. Dies erzeugt eine baumbasierte Struktur für die Äußerung.
Wie es in
Die Dialogannotationsmaschine 126 kann die Annotationsbäume verwenden, um eine angeordnete Liste von Annotationsaufzeichnungen zu erzeugen.
Jeder Wurzelknoten kann auch eine Anzeige des Sprechers enthalten. Jeder Baum stellt eine Runde oder einen Dialogakt dar, der durch einen der Sprecher beim Gespräch genommen ist. Um Speicher zu sparen, kann der Sprecheridentifizierer nur im Wurzelknoten enthalten sein, der den gesamten Dialogakt darstellt, obwohl der Sprecher bei einigen Implementierungen in untergeordneten Akten ebenso gut identifiziert werden kann. Ein Enthaltensein des Sprechers in jedem Knoten verwendet mehr Speicherressourcen, kann aber in einer verbesserten Anfrageverarbeitungsgeschwindigkeit resultieren. Ob der Sprecher oder andere Charakteristiken allgemein bzw. gemeinsam eher in jedem Knoten enthalten sein sollen als im Elternknoten, ist ein Kompromiss zwischen einer Speichemutzung und einer Anfragegeschwindigkeit. Jeder Knoten im Annotationsbaum (z.B. Äußerung, Unteräußerung oder Tag) empfängt auch einen eindeutigen Identifizierer, der nur innerhalb des Gesprächs eindeutig sein muss. Somit hat jede Annotationsaufzeichnung einen ID, der für die Aufzeichnung eindeutig ist. Dieser Identifizierer wird in Echtzeit erzeugt, z.B. wenn das Gespräch andauert, und auf ihn wird als der Annotationsidentifizierer Bezug genommen. Aufzeichnungen für Knoten, die nicht der Wurzelknoten sind, haben jeweils einen Elternidentifizierer, der den Annotationsidentifizierer des Elternknotens enthält. Schließlich enthält jede Aufzeichnung, die nicht ein Wurzelknoten ist, Attribute, die den Knoten identifizieren. Beispielsweise zeigt die Aufzeichnung mit einem Annotationsidentifizierer 1113 an, dass der Knoten für ein DAT-Tag ist, und enthält den Wert des DAT-Tags. Gleichermaßen zeigt die Aufzeichnung mit einem Annotationsidentifizierer 1116 an, dass der Knoten für ein Tag für einen vorherigen Diskurs (PD) ist, und enthält den Wert für dieses Tag. Zusätzlich enthält der Knoten den Annotationsidentifizierer des Knotens für einen nachfolgenden Diskurs, der dem Tag für einen vorherigen Diskurs entspricht. Anders ausgedrückt wird die Verbindung 405 der
Wendet man sich wieder der
Der Server 207 kann eine Computervorrichtung oder -vorrichtungen sein, die die Form einer Anzahl von unterschiedlichen Vorrichtungen annehmen können, wie beispielsweise ein Standardserver, eine Gruppe von solchen Servern oder ein Rackserversystem. Beispielsweise kann der Server 207 auf eine verteilte Weise über mehrere Computervorrichtungen implementiert sein. Zusätzlich kann der Server 207 in einem Personalcomputer implementiert sein, wie beispielsweise einem Laptop-Computer. Der Server 207 kann ein Beispiel einer Computervorrichtung 700 sein, wie sie in
Der Server 207 kann einen elektronischen Assistenten 220 enthalten, der wenigstens einiges der Funktionalität des elektronischen Assistenten 120 der
Das hierarchische Annotationssystem 100 stellt eine beispielhafte Konfiguration dar und Implementierungen können andere Konfigurationen enthalten. Beispielsweise können einigen Implementierungen eine oder mehrere der Komponenten der Dialogannotationsmaschine 126, der Dialogmanagementmaschine 122 und der Sprachmaschine 124 in einem einzigen Modul oder einer einzigen Maschinen kombinieren. Weiterhin können eine oder mehrere der Komponenten des elektronischen Assistenten 220 die Dialogannotationsmaschine 126, die Dialogmanagementmaschine 122, die Sprachmaschine 124 und/oder der Client für einen elektronischen Assistenten 220 in eine einzige Maschine kombiniert sein. Zusätzlich können die hierarchischen Annotationsaufzeichnungen über mehrere Computervorrichtungen verteilt sein oder können bei der Client-Vorrichtung 205 gespeichert sein. Somit sind Implementierungen nicht auf die dargestellten exakten Konfigurationen beschränkt.The
Insoweit das hierarchische Annotationssystem 100 anwenderspezifische Daten sammelt und speichert oder Verwendung von persönlicher Information machen kann, kann den Anwendern eine Gelegenheit zur Verfügung gestellt werden, zu kontrollieren, ob Programme oder Merkmale die Anwenderinformation sammeln, oder zu kontrollieren, ob und/oder wie Inhalt zu empfangen ist, der für den Anwender relevanter sein kann. Zusätzlich können bestimmte Daten auf eine oder mehrere Arten behandelt werden, bevor sie gespeichert oder verwendet werden, so dass persönlich identifizierbare Information entfernt wird. Beispielsweise können Suchaufzeichnungen so behandelt werden, dass keine persönlich identifizierbare Information bestimmt werden kann, und/oder kann ein geographischer Standort eines Anwenders verallgemeinert werden, wo Standortinformation erhalten wird (wie beispielsweise eine Stadt, eine Postleitzahl oder eine Staatenzugehörigkeit), so dass ein bestimmter Standort eines Anwenders nicht bestimmt werden kann. Somit kann der Anwender eine Kontrolle darüber haben, wie Information über den Anwender gesammelt und durch ein hierarchisches Annotationssystem 100 verwendet wird.To the extent that
Der Prozess 600 kann mit einem annotierten Dialogakt beginnen (605). Der Dialogakt stellt eine Runde dar, die durch einen Sprecher genommen ist, der eine Partei bei einem Gespräch ist. Der Dialogakt kann von einem Anwender oder von einem elektronischen Assistenten entstehen. Die Annotation enthält Tags, die das gesamte oder einen Teil des Dialogakts charakterisieren. Bei einer Implementierung ist die Annotation ähnlich dem DAMSL-Dialogannotationsprotokoll. Das System kann einen Knoten in einem Annotationsbaum für jeden Dialogakt und für jeden untergeordneten Dialogakt erzeugen, was den untergeordneten Dialogakt mit seinen Eltern verbindet (610). Jedem Wurzelknoten kann ein Gesprächsidentifizierer zugeteilt werden, der das Gespräch identifiziert, zu welchem der Dialogakt gehört. Das System kann auch einen Blattknoten für einiges oder alles der Annotationstags erzeugen. Die Annotationstag-Knoten zeigen zu dem Dialogakt oder dem untergeordneten Dialogakt, für welche sie gelten. Das System kann dann, wenn es Knoten für Tags von Null erzeugte, diese Tags vom Annotationsbaum ausschneiden (615). Tags von Null befördern typischerweise keine nützliche Information und müssen nicht verfolgt werden. Das System kann Blattknoten für Annotationstags identifizieren, die für mehr als einen Knoten für einen untergeordneten Dialogakt gelten, und kann den Blattknoten von den Kindern zu den Eltern bewegen (620), um dadurch die Anzahl von Blattknoten zu reduzieren. Wenn beispielsweise jeder untergeordnete Dialogakt einen Knoten hat, der dasselbe Tag und denselben Wert für das Tag darstellt, kann das System den Knoten für das Tag von jedem Kindknoten entfernen und einen jeweiligen Knoten erzeugen, der von dem Elternknoten abhängt. Somit wird beispielsweise der DAT-Knoten von jedem der Knoten für einen untergeordneten Dialogakt 330, 335 und 340 der
Das System kann einen Annotationsidentifizierer zu jedem Knoten zuordnen (625), der innerhalb des Gesprächs eindeutig ist. Das System kann auch einen Kindknoten auf seine Eltern abbilden (630), z.B. durch Aufzeichnen des Eltern-Annotationsidentifizierers in Attributen des Kindknotens. Das System kann auch irgendwelche Knoten für einen vorherigen Diskurs mit ihren entsprechenden Knoten für einen nachfolgenden Diskurs in einem anderen Annotationsbaum verbinden (635). Das System kann eine Annotationsaufzeichnung für jeden Knoten erzeugen (640), was die Annotationsaufzeichnungen in einem Datenspeicher speichert. Bei einigen Implementierungen kann das System einen Prozess enthalten, der periodisch läuft, um Information zu den Annotationsaufzeichnungen hinzuzufügen. Beispielsweise kann das System nicht alles der Information haben, das es in Echtzeit benötigt, um die Verbindungen von den Antworten (z.B. den Knoten für einen vorherigen Diskurs) auf ihre entsprechenden Anfragen (z.B. SD-Knoten) herzustellen. Dies kann beispielsweise dann auftreten, wenn ein Anwender einen Kontext in einem Gespräch umschaltet, aber dann zum ursprünglichen Kontext zurückkehrt. Ein Finden der richtigen Anfrage kann mehr Verarbeitungszeit erfordern, als es eine Echtzeit-Verbindung zulassen würde, oder kann in Echtzeit unmöglich sein. Beispielsweise kann sich ein Anwender bei einem aktuellen Dialog auf eine Aufgabe zurückbeziehen, die in einem Dialogakt von der vorherigen Woche enthalten ist. Zu der Zeit, zu welcher die Annotationsaufzeichnung für den Dialogakt der vorherigen Woche geschrieben wurde, kann das SD-Tag (nachfolgender Diskurs) Null gewesen sein oder unterschiedlich charakterisiert gewesen sein. Nur im Nachhinein kann das SD-Tag zum älteren Annotationsbaum hinzugefügt werden. Dieses Beispiel stellt auch die Vorteile der Annotationsaufzeichnungen dar, die eine ungeordnete Liste sind. Weil die Liste ungeordnet ist, kann der periodisch laufende Prozess zusätzliche Annotationen hinzufügen, die im Nachhinein entdeckt sind. Somit kann das System bei einigen Implementierungen eine zusätzliche Analyse auf einer periodischen Basis durchführen (z.B. nächtlich, stündlich, wöchentlich), und zwar in einem „Offline“- oder „Batch“-Modus, um die Verbindungen zu den Annotationsaufzeichnungen hinzuzufügen (Schritt 635). Solche zusätzliche Information kann Annotationen enthalten, die zusätzliche Aktionen anzeigen, die durch den Anwender vorgenommen sind, wie beispielsweise ein Drücken einer Ausschalttaste, um das Gespräch zu beenden. Solche zusätzliche Information kann ein Hinzufügen oder Ändern der Tags für einen Dialogakt enthalten, z.B. ein Hinzufügen eines SD-Tags im Nachhinein. Zusätzlich kann das System bei einigen Implementierungen Probe-Annotationsaufzeichnungen für ein Gespräch zu einem menschlichen Bewerter liefern, der verifiziert, dass die Verbindungen geeignet sind.The system can assign (625) to each node an annotation identifier that is unique within the conversation. The system can also map a child node to its parent (630), e.g., by recording the parent annotation identifier in attributes of the child node. The system may also connect any previous discourse nodes to their corresponding subsequent discourse nodes in another annotation tree (635). The system can create an annotation record for each node (640), which stores the annotation records in a data store. In some implementations, the system may include a process that runs periodically to add information to the annotation records. For example, the system may not have all of the information it needs in real time to make the connections from the responses (e.g., previous discourse nodes) to their corresponding requests (e.g., SD nodes). This can occur, for example, when a user switches context in a conversation, but then returns to the original context. Finding the right request may require more processing time than a real-time connection would allow, or may be impossible in real-time. For example, in a current conversation, a user can refer back to a task contained in a conversation act from the previous week. At the time the annotation record for the previous week's dialogue act was written, the SD tag (subsequent discourse) may have been null or differently characterized. The SD tag can only be added to the older annotation tree afterwards. This example also illustrates the benefits of the annotation records being an unordered list. Because the list is unordered, the periodically running process can add additional annotations discovered afterwards. Thus, in some implementations, the system can perform additional analysis on a periodic basis (e.g., nightly, hourly, weekly) in an "offline" or "batch" mode to add the connections to the annotation records (step 635). . Such additional information may include annotations indicating additional actions taken by the user, such as pressing a power button to end the call. Such additional information may include adding or changing the tags for a dialogue act, e.g., adding an SD tag after the fact. Additionally, in some implementations, the system can provide mock annotation recordings for a conversation to a human evaluator who verifies that the connections are appropriate.
Die Offline- oder Batch-Verarbeitung kann auch Teil eines Qualitätsanalyseprozesses sein, der Bereiche einer Verbesserung beim durch das System erzeugten Dialog identifiziert, wenn Anwender eine Erlaubnis für eine solche Analyse gegeben haben. Die Labels und die hierarchische Natur der Annotationsaufzeichnungen lassen gezielte, spezifische Anfragen der Aufzeichnungen zu. Beispielsweise können die hierarchischen, ungeordneten Annotationsaufzeichnungen angefragt werden, bestimmte Bereiche eines Fehlers zu identifizieren. Als ein spezifisches Beispiel können die Annotationsaufzeichnungen angefragt werden, die am häufigsten korrigierten Informationsfelder bei einer Aktion zu identifizieren, z.B. aus zehn Datenfeldern in einer Restaurantreservierung zu identifizieren, welches Informationsfeld am häufigsten als Teil der Reservierungsaktion korrigiert wird. Als ein weiteres Beispiel kann die Annotationsaufzeichnungen angefragt werden, Situationen zu identifizieren, wo der Anwender auf eine Frage eher mit einer Frage als einer Aussage antwortet oder mit einer Antwort antwortet, aber in einer Folgefrage fragt. Beispielsweise kann der elektronische Assistent nach einer Reservierungszeit für ein Restaurant fragen und antwortet der Anwender „6 h am Abend, aber haben Sie hohe Stühle?“. Dies zeigt an, dass der Anwender Information über hohe Stühle wünschen kann, die in zukünftigen Reservierungen enthalten ist, insbesondere dann, wenn diese für den Anwender mehr als einmal auftritt. Bei einigen Implementierungen kann eine solche Analyse auf der Anwendervorrichtung stattfinden. Bei einigen Implementierungen können, mit einer Anwendererlaubnis, Annotationsaufzeichnungen, nach einem Entfernen von irgendwelcher persönlich identifizierenden Information, mit einem Server geteilt bzw. gemeinsam genutzt werden, so dass Muster über Anwender hinweg identifiziert werden können. Bei einigen Implementierungen können die Annotationsaufzeichnungen zu maschinengelernten Modellen geliefert werden, um Muster eines Fehlers zu identifizieren, z.B. Assistentenantworten, die zu Fragen, einer Aufgabe bzw. einem Abbruch, oder verbalen Anzeichen eines Ärgers (z.B. ein Seufzen) führen. Ein Identifizieren von diesem Engpass und Fehlermustern kann Entwicklern des elektronischen Assistenten helfen, spezifische Funktionalität im elektronischen Assistenten zu identifizieren und zu verbessern, was Dialogantworten und Interaktionen mit dem Anwender verbessert. Die Verbindungen in den Annotationsaufzeichnungen machen eine solche Analyse möglich.Offline or batch processing can also be part of a quality analysis process that identifies areas of improvement in the dialog generated by the system, when users have given permission for such analysis. The labels and the hierarchical nature of the annotation records allow for targeted, specific requests to the records. For example, the hierarchical, unordered annotation records can be queried to identify specific areas of a defect. As a specific example, the annotation records may be queried to identify the most frequently corrected information fields in an action, eg, identifying out of ten data fields in a restaurant reservation which information field is most frequently corrected as part of the reservation action. As another example, the annotation records may be queried to identify situations where the user responds to a question with a question rather than a statement, or responds with an answer but asks in a follow-up question. For example, the electronic assistant can ask for a reservation time for a restaurant and the user replies "6 hrs in the evening, but do you have high chairs?”. This indicates that the user may want high chair information to be included in future reservations, particularly if it occurs more than once for the user. In some implementations, such analysis may take place on the user device. In some implementations, with user permission, annotation records can be shared with a server after removing any personally identifying information so that patterns can be identified across users. In some implementations, the annotation records may be provided to machine-learned models to identify patterns of error, eg, assistant responses leading to questions, task/abort, or verbal signs of annoyance (eg, a sigh). Identifying this bottleneck and error patterns can help electronic assistant developers to identify and improve specific functionality in the electronic assistant, which improves dialog responses and interactions with the user. The connections in the annotation records make such an analysis possible.
Die Computervorrichtung 700 enthält einen Prozessor 702, einen Speicher 704, eine Speichervorrichtung 706 und Erweiterungsports 710, die über eine Schnittstelle 708 verbunden sind. Bei einigen Implementierungen kann die Computervorrichtung 700 einen Transceiver 746, eine Kommunikationsschnittstelle 744 und ein GPS-(Globales Positioniersystem-)Empfängermodul 748 unter anderen Komponenten enthalten, die über die Schnittstelle 708 verbunden sind. Die Vorrichtung 700 kann drahtlos über eine Kommunikationsschnittstelle 744 kommunizieren, die eine digitale Signalverarbeitungsschaltung enthalten kann, wo es nötig ist. Jede der Komponenten 702, 704, 706, 708, 710, 740, 744, 746 und 748 kann auf einer gemeinsamen Hauptplatine oder auf andere Weisen, wie es geeignet ist, angebracht sein.The
Der Prozessor 702 kann Anweisungen zur Ausführung innerhalb der Computervorrichtung 700 verarbeiten, einschließlich Anweisungen, die im Speicher 704 oder auf der Speichervorrichtung 706 gespeichert sind, um graphische Information für eine GUI auf einer externen Eingabe/Ausgabe-Vorrichtung anzuzeigen, wie beispielsweise eine Anzeige 716. Die Anzeige 716 kann ein Monitor oder eine flache Berührungsbildschirmanzeige sein. Bei einigen Implementierungen können mehrere Prozessoren und/oder mehrere Busse verwendet werden, wie es geeignet ist, zusammen mit mehreren Speichern und Typen eines Speichers. Ebenso können mehrere Computervorrichtungen 700 verbunden werden, wobei jede Vorrichtung Teilbereiche der nötigen Operationen zur Verfügung stellt (z.B. als eine Serverbank, eine Gruppe von Bladeservern oder ein Mehrprozessorsystem).
Der Speicher 704 speichert Information innerhalb der Computervorrichtung 700. Bei einer Implementierung ist der Speicher 704 eine flüchtige Speichereinheit oder flüchtige Speichereinheiten. Bei einer anderen Implementierung ist der Speicher 704 eine nichtflüchtige Speichereinheit oder nichtflüchtige Speichereinheiten. Der Speicher 704 kann auch eine andere Form eines computerlesbaren Mediums sein, wie beispielsweise eine magnetische oder optische Platte. Bei einigen Implementierungen kann der Speicher 704 einen Erweiterungsspeicher enthalten, der durch eine Erweiterungsschnittstelle zur Verfügung gestellt ist.
Die Speichervorrichtung 706 kann einen Massenspeicher für die Computervorrichtung 700 zur Verfügung stellen. Bei einer Implementierung kann die Speichervorrichtung 706 ein computerlesbares Medium sein oder ein solches enthalten, wie beispielsweise eine Floppydisk-Vorrichtung, eine Festplattenvorrichtung, eine optische Plattenvorrichtung oder eine Bandvorrichtung, einen Flash-Speicher oder eine andere ähnliche Festkörperspeichervorrichtung, oder eine Gruppe von Vorrichtungen, einschließlich Vorrichtungen in einem Speicherbereichsnetzwerk oder anderen Konfigurationen. Ein Computerprogrammprodukt kann greifbar in einem solchen computerlesbaren Medium verkörpert sein. Das Computerprogrammprodukt kann auch Anweisungen enthalten, die dann, wenn sie ausgeführt werden, ein oder mehrere Verfahren durchführen, wie beispielsweise diejenigen, die oben beschrieben sind. Das computer- oder maschinenlesbare Medium ist eine Speichervorrichtung, wie beispielsweise der Speicher 704, die Speichervorrichtung 706 oder ein Speicher auf dem Prozessor 702.
Die Schnittstelle 708 kann eine Hochgeschwindigkeits-Steuerung sein, die bandbreitenintensive Operationen für die Computervorrichtung 700 managt, oder eine Niedergeschwindigkeits-Steuerung, die Operationen mit weniger Bandbreitenintensität managt, oder eine Kombination von solchen Steuerungen. Eine externe Schnittstelle 740 kann vorgesehen sein, um eine Nahbereichskommunikation der Vorrichtung 700 mit anderen Vorrichtungen zu ermöglichen. Bei einigen Implementierungen kann die Steuerung 708 mit der Speichervorrichtung 706 und dem Erweiterungsport 714 gekoppelt sein. Das Erweiterungsport, das verschiedene Kommunikationsports (z.B. USB, Bluetooth, Ethernet, drahtloses Ethernet) enthalten kann, kann mit einer oder mehreren Eingabe/Ausgabe-Vorrichtungen gekoppelt sein, wie beispielsweise einer Tastatur, einer Zeigevorrichtung, einem Scanner oder einer Netzwerkbildungsvorrichtung, wie beispielsweise einem Switch oder einem Router, z.B. über einen Netzwerkadapter.
Die Computervorrichtung 700 kann auf eine Anzahl von unterschiedlichen Formen implementiert sein, wie es in der Figur gezeigt ist. Sie kann beispielsweise als ein Standardserver 730 implementiert sein, oder mehrere Male in einer Gruppe von solchen Servern. Sie kann auch als Teil eines Rackserversystems implementiert sein. Zusätzlich kann sie in einer Computervorrichtung implemontiert sein, wie beispielsweise einem Laptop-Computer 732, einem Personalcomputer 734 oder einem Tablet/Smartphone 736. Ein gesamtes System kann aus mehreren Computervorrichtungen 700 aufgebaut sein, die miteinander kommunizieren. Andere Konfigurationen sind möglich.The
Ein verteiltes Computersystem 800 kann irgendeine Anzahl von Computervorrichtungen 880 enthalten. Die Computervorrichtungen 880 können einen Server oder Rackserver, Großrechner, etc. enthalten, die über ein lokales Netz oder ein Weitverkehrsnetz, bestimmte optische Verbindungen, Modems, Bridges, Router, Swiches, verdrahtete oder drahtlose Netzwerke, etc. kommunizieren.A distributed
Bei einigen Implementierungen kann jede Computervorrichtung mehrere Racks enthalten. Beispielsweise enthält die Computervorrichtung 880a mehrere Racks 858a-858n. Jedes Rack kann einen oder mehrere Prozessoren enthalten, wie beispielsweise Prozessoren 852a-852n und 862a-862n. Die Prozessoren können Datenprozessoren enthalten, an einem Netzwerk angebrachte Speichervorrichtungen und andere computergesteuerte Vorrichtungen. Bei einigen Implementierungen kann ein Prozessor als ein Master-Prozessor arbeiten und die Zeitplanungs- und Datenverteilungsaufgaben steuern. Prozessoren können durch einen oder mehrere Rack-Switches 858 miteinander verbunden sein, und ein oder mehrere Racks können durch den Switch 878 verbunden sein. Der Switch 878 kann Kommunikationen zwischen mehreren verbundenen Computervorrichtungen 880 handhaben.In some implementations, each computing device may include multiple racks. For example,
Jedes Rack kann einen Arbeitsspeicher enthalten, wie beispielsweise einen Arbeitsspeicher 854 und einen Arbeitsspeicher 864, und einen Speicher, wie beispielsweise 856 und 866. Der Speicher 856 und 866 kann einen Massenspeicher zur Verfügung stellen und kann einen flüchtigen oder nichtflüchtigen Speicher enthalten, wie beispielsweise am Netzwerk angebrachte Platten, eine Floppydisk, Festplatten, optische Platten, Bänder, einen Flash-Speicher oder andere ähnliche Festkörperspeichervorrichtungen oder eine Gruppe von Vorrichtungen, einschließlich von Vorrichtungen in einem Speicherbereichsnetzwerk oder anderen Konfigurationen. Der Speicher 856 oder 866 kann zwischen mehreren Prozessoren, mehreren Racks oder mehreren Computervorrichtungen gemeinsam genutzt werden und kann ein computerlesbares Medium enthalten, das Anweisungen speichert, die durch einen oder mehrere der Prozessoren ausführbar sind. Der Arbeitsspeicher 854 und 864 kann z.B. eine flüchtige Speichereinheit oder flüchtige Speichereinheiten, eine nichtflüchtige Speichereinheit oder nichtflüchtige Speichereinheiten und/oder andere Formen von computerlesbaren Medien enthalten, wie beispielsweise magnetische oder optische Platten, einen Flash-Speicher, einen Cache, einen Direktzugriffsspeicher (RAM), einen Nurlesespeicher (ROM) und Kombinationen davon. Ein Arbeitsspeicher, wie beispielsweise der Arbeitsspeicher 854, kann auch zwischen den Prozessoren 852a-852n gemeinsam genutzt werden. Datenstrukturen, wie beispielsweise ein Index, können beispielsweise quer über den Speicher 856 und den Arbeitsspeicher 854 gespeichert werden. Die Computervorrichtung 880 kann andere Komponenten enthalten, die nicht gezeigt sind, wie beispielsweise Steuerungen, Busse, Eingabe/Ausgabe-Vorrichtungen, Kommunikationsmodule, etc.Each rack may contain memory, such as
Ein gesamtes System, wie beispielsweise das System 100, kann aus mehreren Computervorrichtungen 880 aufgebaut sein, die miteinander kommunizieren. Beispielsweise kann die Vorrichtung 880a mit den Vorrichtungen 880b, 880c und 880d kommunizieren und diese können gemeinsam als System 100 bekannt sein. Als ein weiteres Beispiel kann das System 100 der
Verschiedene Implementierungen können eine Implementierung in einem oder mehreren Computerprogrammen enthalten, die auf einem programmierbaren System ausführbar und/oder interpretierbar sind, das wenigstens einen programmierbaren Prozessor, der speziell oder allgemein sein kann, gekoppelt, um Daten und Anweisungen von einem Speichersystem zu empfangen und diese dorthin zu senden, wenigstens eine Eingabevorrichtung und wenigstens eine Ausgabevorrichtung enthält.Various implementations may include implementation in one or more computer programs executable and/or interpretable on a programmable system having at least one programmable processor, which may be special or general, coupled to receive and receive data and instructions from a memory system thereto, includes at least one input device and at least one output device.
Diese Computerprogramme (die auch als Programme, Software, Softwareanwendungen oder Code bekannt sind) enthalten Maschinenanweisungen für einen programmierbaren Prozessor und können in einer höheren verfahrens- und/oder objektorientierten Programmiersprache und/oder in Assembler/Maschinen-Sprache implementiert sein. Wie sie hierin verwendet sind, beziehen sich die Ausdrücke „maschinenlesbares Medium“, „computerlesbares Medium“ auf irgendein nichtflüchtiges Computerprogrammprodukt, ein Gerät und/oder eine Vorrichtung (z.B. magnetische Platten, optische Platten, einen Speicher (einschließlich eines Direktzugriffsspeichers), programmierbare Logikvorrichtungen (PLDs)), die verwendet werden, um Maschinenanweisungen und/oder Daten zu einem programmierbaren Prozessor zu liefern.These computer programs (also known as programs, software, software applications, or code) contain machine instructions for a programmable processor and may be implemented in a high-level procedural and/or object-oriented programming language and/or in assembly/machine language. As used herein, the terms "machine-readable medium", "computer-readable medium" refer to any non-transitory computer program product, apparatus and/or device (e.g., magnetic disks, optical disks, memory (including random access memory), programmable logic devices ( PLDs) used to deliver machine instructions and/or data to a programmable processor.
Die hier beschriebenen Systeme und Techniken können in einem Computersystem implementiert sein, das eine Backend-Komponente (z.B. als Datenserver) enthält oder das eine Middleware-Komponente (z.B. einen Anwendungsserver) enthält oder das eine Frontend-Komponente (z.B. einen Client-Computer mit einer graphischen Anwenderschnittstelle oder einem Web-Browser, über welchem ein Anwender mit einer Implementierung der hier beschriebenen Systeme und Techniken interagieren kann) enthält, oder irgendeine Kombination von solchen Backend-, Middleware- oder Frontend-Komponenten. Die Komponenten des Systems können durch irgendeine Form oder ein Medium einer digitalen Datenkommunikation miteinander verbunden sein (z.B. ein Kommunikationsnetzwerk). Beispiele von Kommunikationsnetzwerken enthalten ein lokales Netz („LAN“), ein Weitverkehrsnetz („WAN“) und das Internet.The systems and techniques described herein may be implemented in a computer system that includes a back-end component (e.g., a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer with a graphical user interface or web browser through which a user may interact with an implementation of the systems and techniques described herein), or any combination of such backend, middleware, or frontend components. The components of the system may be interconnected by any form or medium of digital data communication (e.g., a communications network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the Internet.
Das Computersystem kann Clients und Server enthalten. Ein Client und ein Server sind allgemein entfernt voneinander und interagieren typischerweise über ein Kommunikationsnetzwerk. Die Beziehung von Client und Server entsteht mittels Computerprogrammen, die auf den jeweiligen Computern laufen und eine Client-Server-Beziehung zueinander haben.The computer system can include clients and servers. A client and server are generally remote from each other and typically interact over a communications network. The relationship of client and server arises by means of computer programs running on the respective computers and having a client-server relationship with each other.
Gemäß beispielhaften Ausführungsformen sind Systeme und Verfahren zum Annotieren von Gesprächen zwischen einem Anwender und einem elektronischen Assistenten auf hierarchische Weise offenbart. Ein beispielhaftes System enthält einen Datenspeicher von hierarchischen Annotationsaufzeichnungen. Die hierarchischen Annotationsaufzeichnungen enthalten Wurzelaufzeichnungen und Nichtwurzelaufzeichnungen. Jede Wurzelaufzeichnung hat einen Gesprächsidentifizierer und einen Annotationsidentifizierer. Jede Nichtwurzelaufzeichnung enthält einen Annotationsidentifizierer und einen Elternidentifizierer, wobei der Elternidentifizierer ein Annotationsidentifizierer einer anderen Aufzeichnung ist. Wenigstens einige der Nichtwurzelaufzeichnungen enthalten weiterhin ein Annotationstag. Das System erzeugt eine erste neue Wurzelaufzeichnung und erste Nichtwurzelaufzeichnungen für einen eingegebenen Dialogakt und erzeugt eine zweite neue Wurzelaufzeichnung und zweite Nichtwurzelaufzeichnungen für einen ausgegebenen Dialogakt, der auf den eingegebenen Dialogakt antwortet bzw. reagiert. Wenigstens eine der zweiten Nichtwurzelaufzeichnungen enthält ein Annotationstag, das zu einer Aufzeichnung der ersten Nichtwurzelaufzeichnungen zurückverbindet.According to example embodiments, systems and methods for annotating conversations between a user and an electronic assistant in a hierarchical manner are disclosed. An example system includes a data store of hierarchical annotation records. The hierarchical annotation records include root records and non-root records. Each root record has a conversation identifier and an annotation identifier. Each non-root record includes an annotation identifier and a parent identifier, where the parent identifier is an annotation identifier of another record. At least some of the non-root records also contain an annotation tag. The system creates a first new root record and first non-root records for an input dialog act and creates a second new root record and second non-root records for an output dialog act responsive to the input dialog act. At least one of the second non-root records includes an annotation tag that links back to a record of the first non-root records.
Eine Anzahl von Implementierungen ist beschrieben worden. Nichtsdestoweniger können verschiedene Modifikationen durchgeführt werden, ohne vom Sinngehalt und Schutzumfang der Erfindung abzuweichen. Zusätzlich erfordern die in den Figuren gezeigten logischen Abläufe nicht die gezeigte bestimmte Reihenfolge oder sequentielle Reihenfolge, um erwünschte Ergebnisse zu erreichen. Zusätzlich können andere Schritte zur Verfügung gestellt werden oder können Schritte eliminiert werden von den beschriebenen Abläufen und können andere Komponenten hinzugefügt werden zu oder entfernt werden von den beschriebenen Systemen. Demgemäß sind andere Implementierungen innerhalb des Schutzumfangs der folgenden Ansprüche.A number of implementations have been described. Nevertheless, various modifications can be made without departing from the spirit and scope of the invention. In addition, the logic flows shown in the figures do not require the particular order or sequential order shown to achieve desired results. Additionally, other steps may be provided or steps eliminated from the processes described, and other components added to or removed from the systems described. Accordingly, other implementations are within the scope of the following claims.
Claims (14)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201662403932P | 2016-10-04 | 2016-10-04 | |
US62/403,932 | 2016-10-04 |
Publications (2)
Publication Number | Publication Date |
---|---|
DE102017121780A1 DE102017121780A1 (en) | 2018-04-05 |
DE102017121780B4 true DE102017121780B4 (en) | 2023-06-15 |
Family
ID=60244389
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE202017105695.3U Active DE202017105695U1 (en) | 2016-10-04 | 2017-09-20 | Hierarchical annotation of dialog files |
DE102017121780.0A Active DE102017121780B4 (en) | 2016-10-04 | 2017-09-20 | Hierarchical annotation of dialog acts |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE202017105695.3U Active DE202017105695U1 (en) | 2016-10-04 | 2017-09-20 | Hierarchical annotation of dialog files |
Country Status (3)
Country | Link |
---|---|
CN (1) | CN107894829B (en) |
DE (2) | DE202017105695U1 (en) |
GB (1) | GB2555945A (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN117059102A (en) * | 2023-10-12 | 2023-11-14 | 广州市零脉信息科技有限公司 | Intelligent children toy dialogue system |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100131274A1 (en) | 2008-11-26 | 2010-05-27 | At&T Intellectual Property I, L.P. | System and method for dialog modeling |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2009501370A (en) * | 2005-07-15 | 2009-01-15 | シンク ソフトウェア ピーティーワイ リミテッド | Method and apparatus for providing structured data for free text messages |
CN104462024B (en) * | 2014-10-29 | 2018-07-13 | 百度在线网络技术（北京）有限公司 | The method and apparatus for generating dialogue action policy model |
-
2017
- 2017-09-20 DE DE202017105695.3U patent/DE202017105695U1/en active Active
- 2017-09-20 DE DE102017121780.0A patent/DE102017121780B4/en active Active
- 2017-09-27 GB GB1715647.2A patent/GB2555945A/en not_active Withdrawn
- 2017-09-30 CN CN201710914486.3A patent/CN107894829B/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100131274A1 (en) | 2008-11-26 | 2010-05-27 | At&T Intellectual Property I, L.P. | System and method for dialog modeling |
Also Published As
Publication number | Publication date |
---|---|
DE202017105695U1 (en) | 2018-01-10 |
CN107894829A (en) | 2018-04-10 |
CN107894829B (en) | 2021-09-10 |
GB2555945A (en) | 2018-05-16 |
DE102017121780A1 (en) | 2018-04-05 |
GB201715647D0 (en) | 2017-11-08 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11321535B2 (en) | Hierarchical annotation of dialog acts | |
DE102017125001A1 (en) | Real-time streaming dialog management | |
DE60037164T2 (en) | Method and apparatus for accessing a multi-client dialogue system | |
DE212017000329U1 (en) | Selective sensor polling | |
DE112017000122T5 (en) | Natural language processing for session setup with service providers | |
DE112016004863T5 (en) | Parameter collection and automatic dialog generation in dialog systems | |
DE102017121758A1 (en) | Intelligent assistant for repeated actions | |
DE102017122515A1 (en) | Task initiation using long voice commands | |
DE102013212215A1 (en) | System and method for determining expertise through speech analysis | |
DE112017000139T5 (en) | Modulation of packetized audio signals | |
DE112017000131T5 (en) | Feedback control for data transmissions | |
DE112014003653T5 (en) | Automatically activating intelligent responses based on remote device activity | |
DE202016008230U1 (en) | Voice recognition with external data sources | |
DE112020003306T5 (en) | DISTINGUISH FROM VOICE COMMANDS | |
DE102016013632A1 (en) | Visual analysis of clickstreams based on maximal sequence patterns | |
DE202012100189U1 (en) | Detection of creative works on broadcast media | |
DE102012220857A1 (en) | System and control method | |
DE202015009292U1 (en) | Generation of an activity flow | |
DE212017000068U1 (en) | Set up audio-based network sessions with unregistered resources | |
DE112017000177T5 (en) | Authentication of packetized audio signals | |
DE202014010885U1 (en) | Acceleration based on cached flows | |
CN106487805A (en) | A kind of remote procedure call tracking and device | |
DE102017121780B4 (en) | Hierarchical annotation of dialog acts | |
DE112021005731T5 (en) | MECHANISM FOR INTELLIGENT BUFFERING OF REQUESTS | |
WO2021104608A1 (en) | Method for producing an engineering proposal for a device or plant |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
R012 | Request for examination validly filed | ||
R082 | Change of representative |
Representative=s name: VENNER SHIPLEY GERMANY LLP, DERepresentative=s name: VENNER SHIPLEY LLP, DE |
|
R016 | Response to examination communication | ||
R079 | Amendment of ipc main class |
Free format text: PREVIOUS MAIN CLASS: G10L0015220000Ipc: G10L0015060000 |
|
R018 | Grant decision by examination section/examining division | ||
R020 | Patent grant now final |
US20160344831A1 - Proxy service for content requests - Google Patents
Proxy service for content requests Download PDFInfo
- Publication number
- US20160344831A1 US20160344831A1 US14/718,940 US201514718940A US2016344831A1 US 20160344831 A1 US20160344831 A1 US 20160344831A1 US 201514718940 A US201514718940 A US 201514718940A US 2016344831 A1 US2016344831 A1 US 2016344831A1
- Authority
- US
- United States
- Prior art keywords
- page
- proxy server
- content
- server
- resource
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
- H04L67/562—Brokering proxy services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
-
- H04L67/2809—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
-
- H04L67/2838—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
- H04L67/567—Integrating service provisioning from a plurality of service providers
Definitions
- This specification relates to information presentation.
- the Internet provides access to a wide variety of resources. For example, video and/or audio files, as well as webpages for particular subjects or particular news articles, are accessible over the Internet. Access to these resources presents opportunities for other content (e.g., advertisements) to be provided with the resources.
- a webpage can include slots in which content can be presented. These slots can be defined in the webpage or defined for presentation with a webpage, for example, along with search results.
- Content in these examples can be of various formats, while the devices that consume (e.g., present) the content can be equally varied in terms of their type and capabilities.
- Publisher pages can include multiple content slots that are configured for receiving content from third-party sources, e.g., partners of the publisher controlling the publisher page.
- third-party sources e.g., partners of the publisher controlling the publisher page.
- a resource e.g., publisher page
- an individual request can be sent to a corresponding third-party content serving system to obtain content that is to be merged into the publisher page and provided to the user.
- the method includes adding a proxy server in between user devices and a server that hosts a resource on the web.
- the method further includes receiving, at the proxy server and from a user device, a page request addressed to the resource.
- the method further includes forwarding the received request to the server.
- the method further includes receiving, responsive to the forwarding and from the server, a page associated with the resource.
- the method further includes processing, by the proxy server, the page. Processing the page includes parsing the received page and locating content blocks in the page. Processing the page further includes extracting slot information for each content block. Processing the page further includes forwarding content requests for each content block to respective third-party content serving systems.
- Processing the page further includes receiving responses to the content requests and merging the responses into the page at respective content blocks. Processing the page further includes removing tags from one or more items in the responses and including a single tag in the processed page that is associated with the proxy server. Processing the page further includes storing a linking between the removed tags and the single tag associated with the proxy server. The method further includes providing the processed page responsive to the received page request.
- Adding the proxy server can include assigning the proxy server a domain name service name and associated internet protocol address associated with the resource.
- the method can further include dropping a cookie associated with the proxy server on the user device responsive to the received page request.
- the method can further include receiving an indication that the single tag associated with proxy server has fired, identifying the removed tags using the linking, and providing a response to one or more sponsors of the removed tags responsive to the received indication.
- the tags can be tracking pixels or cookies.
- the method can further include linking cookies deposited directly by a content sponsor with cookies of the proxy server generated when content of the content sponsor is served in response to forwarded requests, and linking the cookies can include linking a cookie dropped on the user device by a content sponsor with the cookie associated with the proxy server based on the stored linking.
- the method can further include including, in a cookie dropped by a third-party content provider on the user device, a code that pings the proxy server to identify information associated with the third-party content sponsor known by the proxy server as a result of processing the page.
- the storing a linking can include storing an association between the proxy server tag and one or more of an identifier associated with content provided for a given response, an impression identifier, a page identifier for the page, a current time of impression or a uniform resource locator for a sponsor of the tag.
- the received page request can include a cookie associated with the publisher of the resource
- the forwarded request can include the cookie associated with the publisher resource
- processing the page can include inserting a cookie matching pixel in the processed page that fires a cookie matching event with a third-party content provider's server associated with a respective response.
- Providing the processed page can further include initially providing a redirect request to redirect a requesting user device's browser associated with the received page request to a third-party content provider server associated with a respective response so as to enable the third-party content provider to drop a cookie directly on the user device's browser as a first-party cookie, and the method can further include thereafter redirecting the user's browser back to the proxy server to enable processing of the page.
- the tags can include script to pass request-specific, user-specific or publisher specific parameters to an associated tag sponsor when content associated with a respective response is rendered on a requesting device.
- FIG. 1 A block diagram illustrating an exemplary computing environment in accordance with the present specification.
- FIG. 1 A block diagram illustrating an exemplary computing environment in accordance with the present specification.
- FIG. 1 A block diagram illustrating an exemplary computing environment in accordance with the present specification.
- FIG. 1 A block diagram illustrating an exemplary computing environment in accordance with the present specification.
- FIG. 1 A block diagram illustrating an exemplary computing environment in accordance with the present specification.
- Adding the proxy server can include assigning the proxy server a domain name service name and associated internet protocol address associated with the resource.
- the instructions can further include instructions to drop a cookie associated with the proxy server on the user device responsive to the received page request.
- the instructions can further include instructions to receive an indication that the single tag associated with proxy server has fired, identify the removed tags using the linking, and provide a response to one or more sponsors of the removed tags responsive to the received indication.
- the tags can be tracking pixels or cookies.
- a system comprising one or more processors and one or more memory elements including instructions.
- the instructions when executed, cause the one or more processors to: add a proxy server in between user devices and a server that hosts a resource on the web; receive, at the proxy server and from a user device, a page request addressed to the resource; forward the received request to the server; receive, responsive to the forwarding and from the server, a page associated with the resource; and process, by the proxy server, the page including: parsing the received page and locating content blocks in the page; extracting slot information for each content block; forwarding content requests for each content block to respective third-party content serving systems; receiving responses to the content requests and merging the responses into the page at respective content blocks; removing tags from one or more items in the responses and including a single tag in the processed page that is associated with the proxy server; and storing a linking between the removed tags and the single tag associated with the proxy server; and provide the processed page responsive to
- Adding the proxy server can include assigning the proxy server a domain name service name and associated internet protocol address associated with the resource.
- the instructions can further include instructions to drop a cookie associated with the proxy server on the user device responsive to the received page request.
- the instructions can further include instructions to receive an indication that the single tag associated with proxy server has fired, identify the removed tags using the linking, and provide a response to one or more sponsors of the removed tags responsive to the received indication.
- a user's mobile web experience can be improved by increasing content rendering speed, reducing bandwidth consumption, and extending battery life on mobile devices.
- a single trusted party e.g., embodied in a proxy service
- the need for ad blockers can be reduced, therefore protecting revenue and business value for legitimate publishers and third-party content providers (e.g., advertisers).
- Legitimate publishers' revenue sources can be protected, enabling the publishers to continue providing free (e.g., ad-supported) content to Internet users.
- the proxy service solutions proposed can result in reduced integration costs for publishers, third-party content providers, and fourth-party tracking providers. These and other advantages may be realized with minimum or no changes to existing servers of publishers, third-party content providers, and fourth-party tracking providers.
- FIG. 1 is a block diagram of an example environment for providing content.
- FIG. 2 shows an example system for inserting a proxy server between a client user device that generates page a request for a publisher page and a publisher resource server.
- FIG. 3 is a flowchart of an example process for processing content requests using a proxy server.
- FIG. 4 is a block diagram of an example computer system that can be used to implement the methods, systems and processes described in this disclosure.
- a proxy server can be added in between user devices and a server that hosts a resource on the web.
- a page request from a user device can be received at the proxy server, the page request being addressed to the resource.
- the received page request can be forwarded to the server.
- a page associated with the resource can be received from the server.
- the page can be processed by the proxy server prior to (or in parallel with) delivery to the user device. For example, processing can include parsing the received page and locating content blocks in the page. Slot information for each content block can also be extracted. Using the slot information, content requests for each content block can be forwarded to respective third-party content serving systems.
- Responses to the content requests can be received, and the responses can be merged into the page at the respective content blocks.
- Tags e.g., tracking pixels, cookies or other forms of interaction detection elements
- a single tag can be created.
- a new tag pointing to the proxy server can be merged into the page.
- the content requests to respective third-party content serving systems can be issued and the responses can be stored and later returned to the respective third-party content serving systems when the new tag is requested.
- a linking between the removed tags and the single tag can be stored.
- the processed page can then be provided responsive to the received page request.
- the proxy server can fetch the content in parallel with an initial page that is provided.
- the proxy server can improve efficiency in handling requests for content. For example, it is common practice that, when an Internet user browses a website, the publisher may have space reserved on its webpages (e.g., slots). To fill the slots, for example, third-party content providers may partner with the publisher to provide third-party content. To facilitate delivery of the third-party content, for example, the publisher may embed a tag (e.g., in a scripting language) in each slot. When a webpage is rendered within the Internet user's browser, for example, the tags can be used to send requests to third-party content providers' servers to retrieve content customized for the Internet user, page or both. This approach is commonly known as client-side ads for online advertising.
- tags can be used to send requests to third-party content providers' servers to retrieve content customized for the Internet user, page or both. This approach is commonly known as client-side ads for online advertising.
- tags e.g., tracking pixels
- the tags can report back to various servers to allow those servers to track a user's interaction, browsing history or other conduct.
- the embedded tags can have multiple drawbacks. For example, the tags can slow down content rendering by the browser, which can be detrimental to the user's experience. Further, the use of tags can result in the generation and processing of multiple requests over the Internet, e.g., consuming precious bandwidth and battery life for a mobile device, which can degrade a mobile user's experience. Finally, the use of tags can allow multiple parties on the Internet to track the user online, which can pose a threat to the user's online privacy.
- the use of a proxy server for example, can eliminate or mitigate these problems.
- Some implementations can use a proxy server, for example, within a hybrid between client-side ads (e.g., the current industry practice) and server-side ads. These and other implementations may require minimal changes to servers of publishers.
- client-side ads e.g., the current industry practice
- server-side ads e.g., the current industry practice
- the users may be provided with an opportunity to enable/disable or control programs or features that may collect and/or use personal information (e.g., information about a user's social network, social actions or activities, a user's preferences or a user's current location).
- personal information e.g., information about a user's social network, social actions or activities, a user's preferences or a user's current location.
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information associated with the user is removed.
- a user's identity may be anonymized so that the no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- FIG. 1 is a block diagram of an example environment 100 for providing content.
- the example environment 100 includes a content management system 110 for selecting and providing content in response to requests for content.
- the example environment 100 includes a network 102 , such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof.
- the network 102 connects websites 104 (e.g., addressable resources), user devices 106 , content sponsors 108 (e.g., advertisers), publishers 109 , and the content management system 110 .
- Plural third-party content serving systems 111 can provide third-party content, such as to fill slots on resources 105 .
- the example environment 100 may include many thousands of websites 104 , user devices 106 , content sponsors 108 , publishers 109 , and third-party content serving systems 111 .
- the environment 100 can include plural data stores, which can be stored locally by the content management system 110 , stored somewhere else and accessible using the network 102 , generated as needed from various data sources, or some combination of these. Further, some data stores described herein may include identifiers that can be used to match or access corresponding data records or other information that are stored elsewhere, e.g. locally and/or remotely.
- a data store of tag links 131 can include linking information that links tags (e.g., cookies, tracking pixels, or other tags).
- tags e.g., cookies, tracking pixels, or other tags.
- the data store of tag links 131 can link a tag created by the proxy server 122 and associated with a resource to plural tags associated with third-party content providers for content slots on the resource.
- a data store of known slot tags 133 can include information associated with patterns of supported slot tags, including information that can be used to pattern-match tags in the content blocks in order to extract parameters from slot definitions.
- the information can also include information that specifies how to invoke a particular third-party content provider with the extracted parameters to retrieve third-party content, how to merge the retrieved third-party content into the corresponding slot within the publisher's original content, and/or how to match the publisher's browser cookie to the third-party content provider's browser cookie.
- a data store of known tracking pixels 135 can include information used to identify patterns of known/supported tracking pixels.
- the information can include, for example, information specifying how to pattern-match those tracking pixels to extract parameters from those tracking pixels (including destination URLs), how to match the publisher's browser cookie with the destination servers' browser cookies, and/or how to invoke the destination servers to report permissible events.
- the content management system 110 can include plural engines, some or all of which may be combined or separate, and may be co-located or distributed (e.g., connected over the network 102 ).
- the proxy server 122 can be added in between user devices 106 and servers that host resources on the web. For example, the proxy server 122 can receive a page request from the user device 106 and forward the request to a server associated with the resource. In response to the forwarded request, a page associated with the resource (and) can be received from the server. The page can be processed by a page processing engine 124 before being provided to the user device 106 .
- a page processing engine 124 can parse the received page, locate content blocks in the page, and extract slot information for each content block. Using the slot information, the page processing engine 124 can forward content requests for each content block to respective third-party content serving systems 111 . When the responses to the content requests are received, the page processing engine 124 can merge the responses into the page at the respective content blocks. The page processing engine 124 can replace tags from one or more items in the responses and include/embed a single tag associated with the proxy server 122 into the page. A linking between the removed tags and the single tag associated with the proxy server 122 can be stored, e.g., in the data store of tag links 131 .
- a website 104 includes one or more resources 105 associated with a domain name and hosted by one or more servers.
- An example website is a collection of webpages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, such as scripts.
- HTML hypertext markup language
- Each website 104 can be maintained by a content publisher, which is an entity that controls, manages and/or owns the website 104 .
- a resource 105 can be any data that can be provided over the network 102 .
- a resource 105 can be identified by a resource address that is associated with the resource 105 .
- Resources include HTML pages, word processing documents, portable document format (PDF) documents, images, video, and news feed sources, to name only a few.
- the resources can include content, such as words, phrases, images, video and sounds, that may include embedded information (such as meta-information hyperlinks) and/or embedded instructions (such as JavaScriptTM scripts).
- a user device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources over the network 102 .
- Example user devices 106 include personal computers (PCs), televisions with one or more processors embedded therein or coupled thereto, set-top boxes, gaming consoles, mobile communication devices (e.g., smartphones), tablet computers and other devices that can send and receive data over the network 102 .
- a user device 106 typically includes one or more user applications, such as a web browser, to facilitate the sending and receiving of data over the network 102 .
- a user device 106 can request resources 105 from a website 104 .
- data representing the resource 105 can be provided to the user device 106 for presentation by the user device 106 .
- the data representing the resource 105 can also include data specifying a portion of the resource or a portion of a user display, such as a presentation location of a pop-up window or a slot of a third-party content site or webpage, in which content can be presented. These specified portions of the resource or user display are referred to as slots (e.g., ad slots).
- the environment 100 can include a search system 112 that identifies the resources by crawling and indexing the resources provided by the content publishers on the websites 104 .
- Data about the resources can be indexed based on the resource to which the data corresponds.
- the indexed and, optionally, cached copies of the resources can be stored in an indexed cache 114 .
- User devices 106 can submit search queries 116 to the search system 112 over the network 102 .
- the search system 112 can, for example, access the indexed cache 114 to identify resources that are relevant to the search query 116 .
- the search system 112 identifies the resources in the form of search results 118 and returns the search results 118 to the user devices 106 in search results pages.
- a search result 118 can be data generated by the search system 112 that identifies a resource that is provided in response to a particular search query, and includes a link to the resource.
- Search results pages can also include one or more slots in which other content items (e.g., advertisements) can be presented.
- the content management system 110 receives a request for content.
- the request for content can include characteristics of the slots that are defined for the requested resource or search results page, and can be provided to the content management system 110 .
- a reference e.g., URL
- a size of the slot e.g., a size of the slot, and/or media types that are available for presentation in the slot
- keywords associated with a requested resource e.g., source keywords”
- a search query 116 for which search results are requested can also be provided to the content management system 110 to facilitate identification of content that is relevant to the resource or search query 116 .
- the content management system 110 can select content that is eligible to be provided in response to the request (“eligible content items”).
- eligible content items can include eligible ads having characteristics matching the characteristics of ad slots and that are identified as relevant to specified resource keywords or search queries 116 .
- other information such as information obtained from one or more snapshots, can be used to respond to the received request.
- the selection of the eligible content items can further depend on user signals, such as demographic signals, behavioral signals or other signals derived from a user profile.
- the content management system 110 can select from the eligible content items that are to be provided for presentation in slots of a resource or search results page based at least in part on results of an auction (or by some other selection process). For example, for the eligible content items, the content management system 110 can receive offers from content sponsors 108 and allocate the slots, based at least in part on the received offers (e.g., based on the highest bidders at the conclusion of the auction or based on other criteria, such as those related to satisfying open reservations and a value of learning). The offers represent the amounts that the content sponsors are willing to pay for presentation of (or selection of or other interaction with) their content with a resource or search results page.
- an offer can specify an amount that a content sponsor is willing to pay for each 1000 impressions (i.e., presentations) of the content item, referred to as a CPM bid.
- the offer can specify an amount that the content sponsor is willing to pay (e.g., a cost per engagement) for a selection (i.e., a click-through) of the content item or a conversion following selection of the content item.
- the selected content item can be determined based on the offers alone, or based on the offers of each content sponsor being multiplied by one or more factors, such as quality scores derived from content performance, landing page scores, a value of learning, and/or other factors.
- a conversion can be said to occur when a user performs a particular transaction or action related to a content item provided with a resource or search results page. What constitutes a conversion may vary from case-to-case and can be determined in a variety of ways. For example, a conversion may occur when a user clicks on a content item (e.g., an ad), is referred to a webpage, and consummates a purchase there before leaving that webpage.
- a content item e.g., an ad
- a conversion can also be defined by a content provider to be any measurable or observable user action, such as downloading a white paper, navigating to at least a given depth of a website, viewing at least a certain number of webpages, spending at least a predetermined amount of time on a web site or webpage, registering on a website, experiencing media, or performing a social action regarding a content item (e.g., an ad), such as endorsing, republishing or sharing the content item.
- a content provider to be any measurable or observable user action, such as downloading a white paper, navigating to at least a given depth of a website, viewing at least a certain number of webpages, spending at least a predetermined amount of time on a web site or webpage, registering on a website, experiencing media, or performing a social action regarding a content item (e.g., an ad), such as endorsing, republishing or sharing the content item.
- Other actions that constitute a conversion can also be used
- FIG. 2 shows an example system 200 for inserting a proxy server between a client user device that generates page a request for a publisher page and a publisher resource server.
- the proxy server 122 can receive a page request 202 for a resource 105 and forward the request to a server 205 associated with the resource 105 .
- the proxy server 122 can process the received page, including requesting third-party content (e.g., from third-party content serving systems 111 ) for slots in the page, and provide the processed page in response to the original request.
- third-party content e.g., from third-party content serving systems 111
- the following example stages can be used for receiving and responding to received requests for content.
- the proxy server 122 is added in between user devices and a server that hosts a resource on the web.
- the proxy server 122 can be added in front of a publisher's existing server.
- the proxy server 122 assumes the publisher's existing server's domain name system (DNS) name (e.g., www.publisherXdomain.com) and internet protocol (IP) address.
- DNS domain name system
- IP internet protocol
- the publisher's existing server can be assigned and receive a new IP address accessible by the proxy server 122 .
- the content management system 110 can invoke the proxy server 122 in certain instances, such as dependent on types of requests received from one or more of the user devices 106 . Whether or not to use the proxy server 122 can depend, for example, on various conditions, such as including a device type (e.g., mobile, non-mobile) associated with a given request. As such, the content management system 110 can provide or use an instance of the proxy server 122 as needed on a per-publisher basis or based on other conditions.
- a device type e.g., mobile, non-mobile
- the proxy server 122 can receive, from a user device 106 , a page request 202 addressed to the resource 105 .
- a page request 202 addressed to the resource 105 .
- the request can be directed to (or intercepted by) the proxy server 122 for processing.
- the client device browser that generated the request can automatically include the publisher's browser cookie with a given request, e.g., by attaching the publisher's browser cookie to the request.
- the proxy server 122 can forward (e.g., using a forwarded page request 204 ) the received page request 202 to the server 205 (e.g., the publisher's server).
- the proxy server 122 can forward the request to the publisher's own server, such as the server 205 , along with the publisher's own browser cookie.
- the proxy server 122 can attach the user device's IP address in the HTTP header's original IP address field, for example.
- the server 205 can receive the request and can pass the page to the proxy server 122 with a redirect back to the user device 106 .
- replaced embedded tags can be forwarded, or the tags can point directly to the proxy server 122 .
- the proxy server 122 can receive, from the server 205 , a requested page 206 associated with the resource 105 .
- the server 205 can serve the publisher's content as if there were no proxy standing in between the publisher's server and the user's browser.
- the requested page 206 that is received is responsive to the forwarded page request 202 .
- a page 208 represents the received page, initially including the content of the requested page 206 and further processed by the page processing engine 124 , including updating the page 208 as a result of the processing.
- processing the page 208 can include the following sub-stages.
- the page processing engine 124 can parse ( 210 ) the page 208 to locate content blocks in the page 208 .
- the publisher's content received by the proxy server 122 can include slots for which requests can be made for third-party content (e.g., from partners of the publisher).
- the page processing engine 124 can identify the slots, for example.
- the page processing engine 124 can extract ( 212 ) slot information for each content block in the page 208 .
- the page processing engine 124 can determine characteristics of various slots identified in stage 5a. The characteristics can include, for example, addresses for the third-party content providers' servers.
- the page processing engine 124 can use a data store of known slot tags 133 to identify and determine the slot information. For example, using slot information located in the resource 105 , the page processing engine 124 can determine (e.g., using a look-up) if matching/relevant information exists in the data store of known slot tags 133 . If information exists in the data store for a particular slot, the page processing engine 124 can use the information to determine how to invoke a particular third-party content provider with the extracted parameters to retrieve the required third-party content. In some implementations, the information can also specify how to merge the retrieved third-party content into the corresponding slot within the publisher's original content, and how to match the publisher's browser cookie to the third-party content provider's browser cookie.
- the page processing engine 124 can forward ( 214 ) content requests for each content block to respective third-party content serving systems 111 .
- the proxy server 122 can invoke the corresponding third-party content serving system 111 to retrieve the third-party content.
- any tags that are unrecognizable can be ignored by the proxy server 122 , e.g., as would be done in situations not using a proxy server.
- the page processing engine 124 can receive responses 216 responsive to the content requests and merge the responses 216 into the page 208 at respective content blocks. For example, the page processing engine 124 can merge the third-party content into the slot defined in the publisher's original content.
- a new tag can be included in the page 208 that points to an image returned to the proxy server 122 . The new tag can be inserted, for example, before content requests are forwarded ( 214 ), and a version of the page 208 can be returned to the user device 106 in parallel.
- the page processing engine 124 can remove ( 218 ) tags from one or more items in the responses and include a single tag in the page 208 that is associated with the proxy server 122 .
- Tags can include, for example, tracking pixels, cookies, or other types of information retrieval instruments.
- tracking pixels can be used for tracking which pages the user is visiting, or for tracking whether a conversion has occurred.
- the page processing engine 124 can recognize and locate each tracking pixel in the publisher's content merged with third-party content providers' content.
- the tracking pixels can be identified, for example, as tracking pixels T 1 , T 2 , . . . T n .
- the page processing engine 124 can remove each of tracking pixels T 1 , T 2 , .
- the page processing engine 124 can insert the single tracking pixel T 0 into the merged content that points back to the proxy server 122 .
- the page processing engine 124 can use the data store of known tracking pixels 135 to generate the single tag. For example, using a tracking pixel located in or associated with the resource 105 , the page processing engine 124 can determine (e.g., using a data store look-up) if associated information exists in the data store of known tracking pixels 135 . If information exists, the page processing engine 124 can access information for identifying patterns of known/supported tracking pixels. The information can include, for example, information for pattern-matching particular tracking pixel tags to extract parameters from those tracking pixels (including destination URLs), information for matching the publisher's browser cookie with the destination servers' browser cookies, and information for invoking the destination servers to report permissible events.
- the page processing engine 124 can store ( 220 ) a linking between the removed tags and the single tag associated with the proxy server 122 .
- the page processing engine 124 can record at least the extracted tracking information (e.g., destination URL, additional parameters) in the data store of tag links 131 .
- the information stored can associate tracking pixel T 0 with tracking pixels T 1 , T 2 , . . . T n .
- the page processing engine 124 can store other types of content in addition to information linking tags.
- the content management system 110 can provide a processed page 222 responsive to the received page request 202 .
- the processed page 222 can be the final version of the page 208 after being processed by the page processing engine 124 .
- the processed page 222 can include, for example, the publisher's content modified by merging third-party content and replacement of plural third-party tracking pixels with the proxy server's own tracking pixel (and/or content links replaced by content links pointing to the proxy server 122 ).
- the proxy server's tracking pixel fires a request to the proxy server 122 .
- the proxy server 122 can use tracking pixel T 0 to retrieve relevant information for tracking pixels T 1 , T 2 , . . . T n from the data store of tag links 131 , and the proxy server 122 can send tracking requests associated with tracking pixels T 1 , T 2 , . . . T n to the corresponding destination servers (e.g., third-party content serving systems 111 ) accordingly.
- cookie matching can be established between a publisher's browser cookie and a third-party content providers' cookie and/or a fourth-party trackers' cookie. For example, this can be done by adapting one of various industry common practices as follows.
- the proxy server 122 can insert a cookie matching pixel in the modified content before the processed page 222 is provided to the user device 106 .
- the cookie matching pixel once rendered in the user's browser, can fire up a cookie matching event with the third-party content provider's server, which can optionally redirect back to the proxy server 122 .
- a push approach can be used, for example in situations in which the user's browser blocks third-party cookies.
- the proxy server 122 can reply with a redirect request to redirect the user's browser to the third-party content provider's server, which can drop its own cookie to the user's browser as a first-party cookie. Then the user's browser can be redirected back to the proxy server, which can serve the content as described above.
- cookie-matching can be initiated by a third-party content provider. For example, when the third-party content provider drops a cookie matching pixel to the user's browser, the cookie matching pixel can send a request to the proxy server. In this example, there can optionally be a redirect back to the third-party content provider's server.
- FIG. 3 is a flowchart of an example process 300 for processing content requests using a proxy server.
- the content management system 110 can perform steps of the process 300 using instructions that are executed by one or more processors.
- FIGS. 1-2 are used to provide example structures for performing the steps of the process 300 .
- a proxy server is added in between user devices and a server that hosts a resource on the web ( 302 ).
- the content management system 110 can include the proxy server 122 for serving as a proxy between requesting sources (e.g., user devices 106 ) and third-party content serving systems 111 .
- adding the proxy server includes assigning the proxy server a domain name service name and associated internet protocol address associated with the resource.
- the proxy server 122 can assume the URL or IP address of a corresponding resource 105 .
- a page request addressed to the resource is received at the proxy server and from a user device ( 304 ).
- the content management system 110 can receive the page request 202 from the user device 106 , the page request being for a particular resource 105 .
- the process further includes dropping a cookie associated with the proxy server on the user device responsive to the received page request.
- the proxy server 122 can provide a cookie to the user device 106 that initiated the page request 202 .
- a publisher's existing web server may have already dropped cookies into a user's browsers, e.g., before use of the proxy server 122 .
- the proxy server 122 can re-use existing cookies dropped by the publisher's web server prior to installing the proxy. As a result, the proxy server 122 may only drop a cookie if the publisher's web server has not already done so.
- the received request is forwarded to the server ( 306 ).
- the proxy server 122 can provide the forwarded page request 204 to the server 205 .
- the server 205 in this case, does not know the source of the page request, e.g., that the page request is from a proxy server.
- a page associated with the resource is received responsive to the forwarding and from the server ( 308 ).
- the server 205 can provide, to the proxy server 122 , the requested page 206 that is identified by the request.
- the page is processed by the proxy server ( 310 ).
- the page processing engine 124 can process the requested page 206 , as described above.
- the page 208 for example, can serve as a working copy of the received requested page 206 , updated by one or more of the following steps.
- the received page is parsed and content blocks in the page are located ( 312 ).
- the page processing engine 124 can identify, within the page 208 , one or more content blocks for incorporating third-party content, as described above.
- Slot information for each content block is extracted ( 314 ).
- the page processing engine 124 can extract the slot information, such as including the information to request third-party content from specific third-party content serving systems 111 .
- Content requests for each content block are forwarded to respective third-party content serving systems ( 316 ).
- the page processing engine 124 can forward ( 214 ) content requests to respective ones of the third-party content serving systems 111 .
- forwarded requests can occur in parallel to providing the page, e.g., replacing links in the content blocks with pointers to the proxy server and the returning the page to the client device 106 while the content requests are forwarded.
- Responses to the content requests are received, and the responses are merged into the page at respective content blocks ( 318 ).
- the page processing engine 124 can update the page 208 .
- Tags are removed from one or more items in the responses and a single tag is included in the processed page that is associated with the proxy server ( 320 ).
- the page processing engine 124 can update the page 208 by removing each of tracking pixels T 1 , T 2 , . . . T n and replacing them with the single tracking pixel, e.g., tracking pixel T 0 in the page 208 .
- Tags can include, for example, tracking pixels, cookies, or other types of information reporting elements.
- the tags include a script to pass request-specific, user-specific or publisher specific parameters to an associated tag sponsor when content associated with a respective response is rendered on a requesting device.
- the tracking pixels T 1 , T 2 , . . . T n replaced by the page processing engine 124 can include information associated with one or more of a particular user of the user device 106 , the specific page request 202 , and/or the resource 105 associated with the page request 202 .
- a linking between the removed tags and the single tag associated with the proxy server is stored ( 322 ).
- the page processing engine 124 can replace the tracking pixels T 1 , T 2 , . . . T n with the single tracking pixel T 0 , as described above, and store a linking in the data store of tag links 131 .
- storing the linking includes storing an association between the proxy server tag, third-party content, and one or more of an identifier associated with content provided for a given response, an impression identifier, a page identifier for the page, and/or a current time of impression or a uniform resource locator for a sponsor of the tag.
- the information stored in the data store of tag links 131 associating the tracking pixels T 1 , T 2 , . . . T n with the single tracking pixel T 0 can include information associated with serving the requested page 206 .
- the information can identify, for example, the specific content item provided, the specific impression, a date/timestamp of the impression, and/or the URL associated with the sponsor.
- the processed page is provided responsive to the received page request ( 324 ).
- the proxy server 122 can provide the processed page 222 (e.g., the final state of the page 208 ) to the user device 106 in response to the page request 202 .
- providing the processed page further includes initially providing a redirect request to redirect a requesting user device's browser associated with the received page request to a third-party content provider server associated with a respective response.
- the redirect request for example, can enable the third-party content provider to drop a cookie directly on the user device's browser as a first-party cookie.
- the method can further include thereafter redirecting the user's browser back to the proxy server to enable processing of the page.
- the processed page 222 can include a redirect URL that, when processed by the browser at the user device 106 , causes a redirection to a server of the third-party content serving system 111 , the re-direction including use of a cookie dropped on the user device 106 .
- the process 300 further includes receiving an indication that the single tag associated with proxy server has fired, identifying the removed tags using the linking, and providing a response to one or more sponsors of the removed tags responsive to the received indication.
- the proxy server 122 can receive a notification that the single tracking pixel T 0 has fired.
- the proxy server 122 can use the single tracking pixel T 0 to look up the associated tracking pixels T 1 , T 2 , . . . T n in the data store of tag links 131 .
- the proxy server 122 can notify sponsors associated with the tracking pixels T 1 , T 2 , . . . T n that the tracking pixels have fired.
- the proxy server 122 can also parse the HTML snippets returned by a respective content provider, and can either remove tags or can call respective content providers based on the recognized tags. This process can be recursive using, for example, third-party ad servers. For example, rather than serve an ad directly to the user's browser, the publisher can deliver an ad tag which can redirect the browser to an ad server where the ad is stored.
- the process 300 further includes linking cookies deposited directly by a content sponsor with cookies of the proxy server generated when content of the content sponsor is served in response to forwarded requests, wherein linking the cookies includes linking a cookie dropped on the user device by a content sponsor with the cookie associated with the proxy server based on the stored linking.
- the page processing engine 124 when storing ( 220 ) a linking in the data store of tag links 131 , can link cookies provided by the proxy server 122 and the third-party content serving systems.
- the process 300 further includes including, in a cookie dropped by a third-party content provider on the user device, a code that pings the proxy server to identify information associated with the third-party content sponsor known by the proxy server as a result of processing the page.
- the processed page 222 can include a code snippet for requesting, from the proxy server 122 , information associated with the third-party content serving systems 111 (corresponding to third-party content merged into the processed page 222 ).
- the received page request includes a cookie associated with the publisher of the resource
- the forwarded request includes the cookie associated with the publisher resource
- processing the page includes inserting a cookie matching pixel in the processed page that fires a cookie matching event with a third-party content provider's server associated with a respective response.
- the processed page 222 provided to the user device 106 can include a cookie associated with the publisher of the resource 105 , the cookie inserted by the page processing engine 124 for matching cookies upon pixel firing at the user device 106 .
- inserting a cookie matching pixel can be done on an as-needed basis, e.g., if the inserting has not been done before.
- these content providers can be selected, e.g., to maximize potential ads revenue based on their past ads-buying history or spending potential.
- the proxy server 122 can perform actions in a different sequence from that identified by the process 300 , e.g., including sending content requests to content providers only after receiving a page from the publisher. For example, to minimize latency, the proxy server 122 can perform the following steps.
- the page content can be cached, e.g., caching occurring only for information related to how many slots are on the page, size of those slots, tags of the slots, etc. Based on the cached slot information, the proxy server 122 can send requests to the publisher and to content providers at the same time (e.g., pre-fetching).
- the proxy server 122 can parse the page to extract slot information, then send additional requests to content providers for those slots that the proxy server has not yet pre-fetched.
- the proxy server can also update the cached ad slot information.
- the proxy server may not send some of the pre-fetched content to the user's browser, e.g., when the cached slot information does not match the publisher's page just retrieved. In this case, the pre-fetched content can be discarded if the content provider relies on a delayed impression pixel to track whether the content is actually displayed in user's browsers.
- the publisher′ web server can indicate to the proxy server 122 that the page is static, using standard HTML protocol. Therefore, the proxy server 122 can cache the page content and omit the call to the publisher's web server in some scenarios, e.g., to reduce the load to the publisher's server and perhaps further reduce latency.
- the proxy server 122 can rewrite the page content in many ways, e.g., to speed up paging rendering, to improve user experience, or to provide additional benefits to publishers. For example, the proxy server 122 can rewrite/compress the Javascript embedded in the page to reduce the size. If user's browser does not support some content (either a publisher's content or a third-party provider's content), the proxy server 122 can convert the content to a format supported by the user's browser and return the converted content to the user's browser. The publisher's web server need only to receive requests from the proxy server 122 . If the proxy server 122 is protected by a firewall, for example, the firewall can indirectly protect the publisher's web server as well without requiring the publisher to deal with an attack.
- the firewall can indirectly protect the publisher's web server as well without requiring the publisher to deal with an attack.
- FIG. 4 is a block diagram of example computing devices 400 , 450 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.
- Computing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 400 is further intended to represent any other typically non-mobile devices, such as televisions or other electronic devices with one or more processers embedded therein or attached thereto.
- Computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 400 includes a processor 402 , memory 404 , a storage device 406 , a high-speed controller 408 connecting to memory 404 and high-speed expansion ports 410 , and a low-speed controller 412 connecting to low-speed bus 414 and storage device 406 .
- Each of the components 402 , 404 , 406 , 408 , 410 , and 412 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 402 can process instructions for execution within the computing device 400 , including instructions stored in the memory 404 or on the storage device 406 to display graphical information for a GUI on an external input/output device, such as display 416 coupled to high-speed controller 408 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 400 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 404 stores information within the computing device 400 .
- the memory 404 is a computer-readable medium.
- the memory 404 is a volatile memory unit or units.
- the memory 404 is a non-volatile memory unit or units.
- the storage device 406 is capable of providing mass storage for the computing device 400 .
- the storage device 406 is a computer-readable medium.
- the storage device 406 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 404 , the storage device 406 , or memory on processor 402 .
- the high-speed controller 408 manages bandwidth-intensive operations for the computing device 400 , while the low-speed controller 412 manages lower bandwidth-intensive operations. Such allocation of duties is an example only.
- the high-speed controller 408 is coupled to memory 404 , display 416 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 410 , which may accept various expansion cards (not shown).
- low-speed controller 412 is coupled to storage device 406 and low-speed bus 414 .
- the low-speed bus 414 (e.g., a low-speed expansion port), which may include various communication ports (e.g., USB, Bluetooth®, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 420 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 424 . In addition, it may be implemented in a personal computer such as a laptop computer 422 . Alternatively, components from computing device 400 may be combined with other components in a mobile device (not shown), such as computing device 450 . Each of such devices may contain one or more of computing devices 400 , 450 , and an entire system may be made up of multiple computing devices 400 , 450 communicating with each other.
- Computing device 450 includes a processor 452 , memory 464 , an input/output device such as a display 454 , a communication interface 466 , and a transceiver 468 , among other components.
- the computing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the components 450 , 452 , 464 , 454 , 466 , and 468 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 452 can process instructions for execution within the computing device 450 , including instructions stored in the memory 464 .
- the processor may also include separate analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the computing device 450 , such as control of user interfaces, applications run by computing device 450 , and wireless communication by computing device 450 .
- Processor 452 may communicate with a user through control interface 458 and display interface 456 coupled to a display 454 .
- the display 454 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology.
- the display interface 456 may comprise appropriate circuitry for driving the display 454 to present graphical and other information to a user.
- the control interface 458 may receive commands from a user and convert them for submission to the processor 452 .
- an external interface 462 may be provided in communication with processor 452 , so as to enable near area communication of computing device 450 with other devices. External interface 462 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth® or other such technologies).
- the memory 464 stores information within the computing device 450 .
- the memory 464 is a computer-readable medium.
- the memory 464 is a volatile memory unit or units.
- the memory 464 is a non-volatile memory unit or units.
- Expansion memory 474 may also be provided and connected to computing device 450 through expansion interface 472 , which may include, for example, a subscriber identification module (SIM) card interface.
- SIM subscriber identification module
- expansion memory 474 may provide extra storage space for computing device 450 , or may also store applications or other information for computing device 450 .
- expansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 474 may be provide as a security module for computing device 450 , and may be programmed with instructions that permit secure use of computing device 450 .
- secure applications may be provided via the SIM cards, along with additional information, such as placing identifying information on the SIM card in a non-hackable manner.
- the memory may include for example, flash memory and/or MRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 464 , expansion memory 474 , or memory on processor 452 .
- Computing device 450 may communicate wirelessly through communication interface 466 , which may include digital signal processing circuitry where necessary. Communication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 468 (e.g., a radio-frequency transceiver). In addition, short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown). In addition, GPS receiver module 470 may provide additional wireless data to computing device 450 , which may be used as appropriate by applications running on computing device 450 .
- transceiver 468 e.g., a radio-frequency transceiver
- short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown).
- GPS receiver module 470 may provide additional wireless data to computing device 450 , which
- Computing device 450 may also communicate audibly using audio codec 460 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450 .
- Audio codec 460 may receive spoken information from a user and convert it to usable digital information. Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450 .
- the computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 480 . It may also be implemented as part of a smartphone 482 , personal digital assistant, or other mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
- This specification relates to information presentation.
- The Internet provides access to a wide variety of resources. For example, video and/or audio files, as well as webpages for particular subjects or particular news articles, are accessible over the Internet. Access to these resources presents opportunities for other content (e.g., advertisements) to be provided with the resources. For example, a webpage can include slots in which content can be presented. These slots can be defined in the webpage or defined for presentation with a webpage, for example, along with search results. Content in these examples can be of various formats, while the devices that consume (e.g., present) the content can be equally varied in terms of their type and capabilities.
- Publisher pages can include multiple content slots that are configured for receiving content from third-party sources, e.g., partners of the publisher controlling the publisher page. As an example, when a resource (e.g., publisher page) is to be rendered (e.g., in a browser), for each slot of multiple content slots, an individual request can be sent to a corresponding third-party content serving system to obtain content that is to be merged into the publisher page and provided to the user.
- In general, one innovative aspect of the subject matter described in this specification can be implemented in methods that include a computer-implemented method for providing content. The method includes adding a proxy server in between user devices and a server that hosts a resource on the web. The method further includes receiving, at the proxy server and from a user device, a page request addressed to the resource. The method further includes forwarding the received request to the server. The method further includes receiving, responsive to the forwarding and from the server, a page associated with the resource. The method further includes processing, by the proxy server, the page. Processing the page includes parsing the received page and locating content blocks in the page. Processing the page further includes extracting slot information for each content block. Processing the page further includes forwarding content requests for each content block to respective third-party content serving systems. Processing the page further includes receiving responses to the content requests and merging the responses into the page at respective content blocks. Processing the page further includes removing tags from one or more items in the responses and including a single tag in the processed page that is associated with the proxy server. Processing the page further includes storing a linking between the removed tags and the single tag associated with the proxy server. The method further includes providing the processed page responsive to the received page request.
- These and other implementations can each optionally include one or more of the following features. Adding the proxy server can include assigning the proxy server a domain name service name and associated internet protocol address associated with the resource. The method can further include dropping a cookie associated with the proxy server on the user device responsive to the received page request. The method can further include receiving an indication that the single tag associated with proxy server has fired, identifying the removed tags using the linking, and providing a response to one or more sponsors of the removed tags responsive to the received indication. The tags can be tracking pixels or cookies. The method can further include linking cookies deposited directly by a content sponsor with cookies of the proxy server generated when content of the content sponsor is served in response to forwarded requests, and linking the cookies can include linking a cookie dropped on the user device by a content sponsor with the cookie associated with the proxy server based on the stored linking. The method can further include including, in a cookie dropped by a third-party content provider on the user device, a code that pings the proxy server to identify information associated with the third-party content sponsor known by the proxy server as a result of processing the page. The storing a linking can include storing an association between the proxy server tag and one or more of an identifier associated with content provided for a given response, an impression identifier, a page identifier for the page, a current time of impression or a uniform resource locator for a sponsor of the tag. The received page request can include a cookie associated with the publisher of the resource, the forwarded request can include the cookie associated with the publisher resource, and processing the page can include inserting a cookie matching pixel in the processed page that fires a cookie matching event with a third-party content provider's server associated with a respective response. Providing the processed page can further include initially providing a redirect request to redirect a requesting user device's browser associated with the received page request to a third-party content provider server associated with a respective response so as to enable the third-party content provider to drop a cookie directly on the user device's browser as a first-party cookie, and the method can further include thereafter redirecting the user's browser back to the proxy server to enable processing of the page. The tags can include script to pass request-specific, user-specific or publisher specific parameters to an associated tag sponsor when content associated with a respective response is rendered on a requesting device.
- In general, another innovative aspect of the subject matter described in this specification can be implemented in computer program products that include a computer program product tangibly embodied in a computer-readable storage device and comprising instructions. The instructions, when executed by one or more processors, cause the processor to: add a proxy server in between user devices and a server that hosts a resource on the web; receive, at the proxy server and from a user device, a page request addressed to the resource; forward the received request to the server; receive, responsive to the forwarding and from the server, a page associated with the resource; and process, by the proxy server, the page including: parsing the received page and locating content blocks in the page; extracting slot information for each content block; forwarding content requests for each content block to respective third-party content serving systems; receiving responses to the content requests and merging the responses into the page at respective content blocks; removing tags from one or more items in the responses and including a single tag in the processed page that is associated with the proxy server; and storing a linking between the removed tags and the single tag associated with the proxy server; and provide the processed page responsive to the received page request.
- These and other implementations can each optionally include one or more of the following features. Adding the proxy server can include assigning the proxy server a domain name service name and associated internet protocol address associated with the resource. The instructions can further include instructions to drop a cookie associated with the proxy server on the user device responsive to the received page request. The instructions can further include instructions to receive an indication that the single tag associated with proxy server has fired, identify the removed tags using the linking, and provide a response to one or more sponsors of the removed tags responsive to the received indication. The tags can be tracking pixels or cookies.
- In general, another innovative aspect of the subject matter described in this specification can be implemented in systems, including a system comprising one or more processors and one or more memory elements including instructions. The instructions, when executed, cause the one or more processors to: add a proxy server in between user devices and a server that hosts a resource on the web; receive, at the proxy server and from a user device, a page request addressed to the resource; forward the received request to the server; receive, responsive to the forwarding and from the server, a page associated with the resource; and process, by the proxy server, the page including: parsing the received page and locating content blocks in the page; extracting slot information for each content block; forwarding content requests for each content block to respective third-party content serving systems; receiving responses to the content requests and merging the responses into the page at respective content blocks; removing tags from one or more items in the responses and including a single tag in the processed page that is associated with the proxy server; and storing a linking between the removed tags and the single tag associated with the proxy server; and provide the processed page responsive to the received page request.
- These and other implementations can each optionally include one or more of the following features. Adding the proxy server can include assigning the proxy server a domain name service name and associated internet protocol address associated with the resource. The instructions can further include instructions to drop a cookie associated with the proxy server on the user device responsive to the received page request. The instructions can further include instructions to receive an indication that the single tag associated with proxy server has fired, identify the removed tags using the linking, and provide a response to one or more sponsors of the removed tags responsive to the received indication.
- Particular implementations may realize none, one or more of the following advantages. A user's mobile web experience can be improved by increasing content rendering speed, reducing bandwidth consumption, and extending battery life on mobile devices. A single trusted party (e.g., embodied in a proxy service) can control and limit third- or fourth-party tracking of a user's online activity, resulting in increased protection of the user's online privacy. The need for ad blockers can be reduced, therefore protecting revenue and business value for legitimate publishers and third-party content providers (e.g., advertisers). Legitimate publishers' revenue sources can be protected, enabling the publishers to continue providing free (e.g., ad-supported) content to Internet users. Compared to a server-side approach, the proxy service solutions proposed can result in reduced integration costs for publishers, third-party content providers, and fourth-party tracking providers. These and other advantages may be realized with minimum or no changes to existing servers of publishers, third-party content providers, and fourth-party tracking providers.
- The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIG. 1 is a block diagram of an example environment for providing content. -
FIG. 2 shows an example system for inserting a proxy server between a client user device that generates page a request for a publisher page and a publisher resource server. -
FIG. 3 is a flowchart of an example process for processing content requests using a proxy server. -
FIG. 4 is a block diagram of an example computer system that can be used to implement the methods, systems and processes described in this disclosure. - Like reference numbers and designations in the various drawings indicate like elements.
- Systems, methods, and computer program products are described for providing content. For example, a proxy server can be added in between user devices and a server that hosts a resource on the web. A page request from a user device can be received at the proxy server, the page request being addressed to the resource. The received page request can be forwarded to the server. In response to the forwarded request, a page associated with the resource can be received from the server. The page can be processed by the proxy server prior to (or in parallel with) delivery to the user device. For example, processing can include parsing the received page and locating content blocks in the page. Slot information for each content block can also be extracted. Using the slot information, content requests for each content block can be forwarded to respective third-party content serving systems. Responses to the content requests can be received, and the responses can be merged into the page at the respective content blocks. Tags (e.g., tracking pixels, cookies or other forms of interaction detection elements) can be removed from one or more items in the responses, and a single tag can be created. In some implementations, for example, a new tag pointing to the proxy server can be merged into the page. In some implementations, in parallel the content requests to respective third-party content serving systems can be issued and the responses can be stored and later returned to the respective third-party content serving systems when the new tag is requested. A linking between the removed tags and the single tag can be stored. The processed page can then be provided responsive to the received page request. In some implementations, the proxy server can fetch the content in parallel with an initial page that is provided.
- Use of the proxy server can improve efficiency in handling requests for content. For example, it is common practice that, when an Internet user browses a website, the publisher may have space reserved on its webpages (e.g., slots). To fill the slots, for example, third-party content providers may partner with the publisher to provide third-party content. To facilitate delivery of the third-party content, for example, the publisher may embed a tag (e.g., in a scripting language) in each slot. When a webpage is rendered within the Internet user's browser, for example, the tags can be used to send requests to third-party content providers' servers to retrieve content customized for the Internet user, page or both. This approach is commonly known as client-side ads for online advertising.
- In addition, either the publisher (e.g., first-party) or third-party content providers may embed tags (e.g., tracking pixels) or other scripts in content returned to a user's browser. Once rendered, the tags can report back to various servers to allow those servers to track a user's interaction, browsing history or other conduct. The embedded tags can have multiple drawbacks. For example, the tags can slow down content rendering by the browser, which can be detrimental to the user's experience. Further, the use of tags can result in the generation and processing of multiple requests over the Internet, e.g., consuming precious bandwidth and battery life for a mobile device, which can degrade a mobile user's experience. Finally, the use of tags can allow multiple parties on the Internet to track the user online, which can pose a threat to the user's online privacy. The use of a proxy server, for example, can eliminate or mitigate these problems.
- Some implementations can use a proxy server, for example, within a hybrid between client-side ads (e.g., the current industry practice) and server-side ads. These and other implementations may require minimal changes to servers of publishers.
- For situations in which the systems discussed here collect and/or use personal information about users, the users may be provided with an opportunity to enable/disable or control programs or features that may collect and/or use personal information (e.g., information about a user's social network, social actions or activities, a user's preferences or a user's current location). In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information associated with the user is removed. For example, a user's identity may be anonymized so that the no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
-
FIG. 1 is a block diagram of anexample environment 100 for providing content. Theexample environment 100 includes acontent management system 110 for selecting and providing content in response to requests for content. Theexample environment 100 includes anetwork 102, such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof. Thenetwork 102 connects websites 104 (e.g., addressable resources),user devices 106, content sponsors 108 (e.g., advertisers),publishers 109, and thecontent management system 110. Plural third-partycontent serving systems 111 can provide third-party content, such as to fill slots onresources 105. Theexample environment 100 may include many thousands ofwebsites 104,user devices 106, content sponsors 108,publishers 109, and third-partycontent serving systems 111. - The
environment 100 can include plural data stores, which can be stored locally by thecontent management system 110, stored somewhere else and accessible using thenetwork 102, generated as needed from various data sources, or some combination of these. Further, some data stores described herein may include identifiers that can be used to match or access corresponding data records or other information that are stored elsewhere, e.g. locally and/or remotely. - A data store of
tag links 131, for example, can include linking information that links tags (e.g., cookies, tracking pixels, or other tags). For example, the data store oftag links 131 can link a tag created by theproxy server 122 and associated with a resource to plural tags associated with third-party content providers for content slots on the resource. - A data store of known slot tags 133, for example, can include information associated with patterns of supported slot tags, including information that can be used to pattern-match tags in the content blocks in order to extract parameters from slot definitions. The information can also include information that specifies how to invoke a particular third-party content provider with the extracted parameters to retrieve third-party content, how to merge the retrieved third-party content into the corresponding slot within the publisher's original content, and/or how to match the publisher's browser cookie to the third-party content provider's browser cookie.
- A data store of known tracking
pixels 135, for example, can include information used to identify patterns of known/supported tracking pixels. The information can include, for example, information specifying how to pattern-match those tracking pixels to extract parameters from those tracking pixels (including destination URLs), how to match the publisher's browser cookie with the destination servers' browser cookies, and/or how to invoke the destination servers to report permissible events. - The
content management system 110 can include plural engines, some or all of which may be combined or separate, and may be co-located or distributed (e.g., connected over the network 102). Theproxy server 122, for example, can be added in betweenuser devices 106 and servers that host resources on the web. For example, theproxy server 122 can receive a page request from theuser device 106 and forward the request to a server associated with the resource. In response to the forwarded request, a page associated with the resource (and) can be received from the server. The page can be processed by apage processing engine 124 before being provided to theuser device 106. - A
page processing engine 124, for example, can parse the received page, locate content blocks in the page, and extract slot information for each content block. Using the slot information, thepage processing engine 124 can forward content requests for each content block to respective third-partycontent serving systems 111. When the responses to the content requests are received, thepage processing engine 124 can merge the responses into the page at the respective content blocks. Thepage processing engine 124 can replace tags from one or more items in the responses and include/embed a single tag associated with theproxy server 122 into the page. A linking between the removed tags and the single tag associated with theproxy server 122 can be stored, e.g., in the data store of tag links 131. - A
website 104 includes one ormore resources 105 associated with a domain name and hosted by one or more servers. An example website is a collection of webpages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, such as scripts. Eachwebsite 104 can be maintained by a content publisher, which is an entity that controls, manages and/or owns thewebsite 104. - A
resource 105 can be any data that can be provided over thenetwork 102. Aresource 105 can be identified by a resource address that is associated with theresource 105. Resources include HTML pages, word processing documents, portable document format (PDF) documents, images, video, and news feed sources, to name only a few. The resources can include content, such as words, phrases, images, video and sounds, that may include embedded information (such as meta-information hyperlinks) and/or embedded instructions (such as JavaScript™ scripts). - A
user device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources over thenetwork 102.Example user devices 106 include personal computers (PCs), televisions with one or more processors embedded therein or coupled thereto, set-top boxes, gaming consoles, mobile communication devices (e.g., smartphones), tablet computers and other devices that can send and receive data over thenetwork 102. Auser device 106 typically includes one or more user applications, such as a web browser, to facilitate the sending and receiving of data over thenetwork 102. - A
user device 106 can requestresources 105 from awebsite 104. In turn, data representing theresource 105 can be provided to theuser device 106 for presentation by theuser device 106. The data representing theresource 105 can also include data specifying a portion of the resource or a portion of a user display, such as a presentation location of a pop-up window or a slot of a third-party content site or webpage, in which content can be presented. These specified portions of the resource or user display are referred to as slots (e.g., ad slots). - To facilitate searching of these resources, the
environment 100 can include asearch system 112 that identifies the resources by crawling and indexing the resources provided by the content publishers on thewebsites 104. Data about the resources can be indexed based on the resource to which the data corresponds. The indexed and, optionally, cached copies of the resources can be stored in anindexed cache 114. -
User devices 106 can submitsearch queries 116 to thesearch system 112 over thenetwork 102. In response, thesearch system 112 can, for example, access the indexedcache 114 to identify resources that are relevant to thesearch query 116. Thesearch system 112 identifies the resources in the form ofsearch results 118 and returns the search results 118 to theuser devices 106 in search results pages. Asearch result 118 can be data generated by thesearch system 112 that identifies a resource that is provided in response to a particular search query, and includes a link to the resource. Search results pages can also include one or more slots in which other content items (e.g., advertisements) can be presented. - When a
resource 105, search results 118 and/or other content (e.g., a video) are requested by auser device 106, thecontent management system 110 receives a request for content. The request for content can include characteristics of the slots that are defined for the requested resource or search results page, and can be provided to thecontent management system 110. - For example, a reference (e.g., URL) to the resource for which the slot is defined, a size of the slot, and/or media types that are available for presentation in the slot can be provided to the
content management system 110 in association with a given request. Similarly, keywords associated with a requested resource (“resource keywords”) or asearch query 116 for which search results are requested can also be provided to thecontent management system 110 to facilitate identification of content that is relevant to the resource orsearch query 116. - Based at least in part on data included in the request, the
content management system 110 can select content that is eligible to be provided in response to the request (“eligible content items”). For example, eligible content items can include eligible ads having characteristics matching the characteristics of ad slots and that are identified as relevant to specified resource keywords or search queries 116. In addition, when no search is performed or no keywords are available (e.g., because the user is not browsing a webpage), other information, such as information obtained from one or more snapshots, can be used to respond to the received request. In some implementations, the selection of the eligible content items can further depend on user signals, such as demographic signals, behavioral signals or other signals derived from a user profile. - The
content management system 110 can select from the eligible content items that are to be provided for presentation in slots of a resource or search results page based at least in part on results of an auction (or by some other selection process). For example, for the eligible content items, thecontent management system 110 can receive offers fromcontent sponsors 108 and allocate the slots, based at least in part on the received offers (e.g., based on the highest bidders at the conclusion of the auction or based on other criteria, such as those related to satisfying open reservations and a value of learning). The offers represent the amounts that the content sponsors are willing to pay for presentation of (or selection of or other interaction with) their content with a resource or search results page. For example, an offer can specify an amount that a content sponsor is willing to pay for each 1000 impressions (i.e., presentations) of the content item, referred to as a CPM bid. Alternatively, the offer can specify an amount that the content sponsor is willing to pay (e.g., a cost per engagement) for a selection (i.e., a click-through) of the content item or a conversion following selection of the content item. For example, the selected content item can be determined based on the offers alone, or based on the offers of each content sponsor being multiplied by one or more factors, such as quality scores derived from content performance, landing page scores, a value of learning, and/or other factors. - A conversion can be said to occur when a user performs a particular transaction or action related to a content item provided with a resource or search results page. What constitutes a conversion may vary from case-to-case and can be determined in a variety of ways. For example, a conversion may occur when a user clicks on a content item (e.g., an ad), is referred to a webpage, and consummates a purchase there before leaving that webpage. A conversion can also be defined by a content provider to be any measurable or observable user action, such as downloading a white paper, navigating to at least a given depth of a website, viewing at least a certain number of webpages, spending at least a predetermined amount of time on a web site or webpage, registering on a website, experiencing media, or performing a social action regarding a content item (e.g., an ad), such as endorsing, republishing or sharing the content item. Other actions that constitute a conversion can also be used.
-
FIG. 2 shows an example system 200 for inserting a proxy server between a client user device that generates page a request for a publisher page and a publisher resource server. For example, theproxy server 122 can receive apage request 202 for aresource 105 and forward the request to aserver 205 associated with theresource 105. Theproxy server 122 can process the received page, including requesting third-party content (e.g., from third-party content serving systems 111) for slots in the page, and provide the processed page in response to the original request. In some implementations, the following example stages can be used for receiving and responding to received requests for content. - At
stage 1, for example, theproxy server 122 is added in between user devices and a server that hosts a resource on the web. For example, theproxy server 122 can be added in front of a publisher's existing server. As such, theproxy server 122 assumes the publisher's existing server's domain name system (DNS) name (e.g., www.publisherXdomain.com) and internet protocol (IP) address. The publisher's existing server can be assigned and receive a new IP address accessible by theproxy server 122. - In some implementations, the
content management system 110 can invoke theproxy server 122 in certain instances, such as dependent on types of requests received from one or more of theuser devices 106. Whether or not to use theproxy server 122 can depend, for example, on various conditions, such as including a device type (e.g., mobile, non-mobile) associated with a given request. As such, thecontent management system 110 can provide or use an instance of theproxy server 122 as needed on a per-publisher basis or based on other conditions. - At
stage 2, for example, theproxy server 122 can receive, from auser device 106, apage request 202 addressed to theresource 105. For example, when a user's browser sends an HTTP/HTTPS request to the DNS name or IP address associated with the publisher e.g., to retrieve a webpage, the request can be directed to (or intercepted by) theproxy server 122 for processing. In some implementations, along with the request, the client device browser that generated the request can automatically include the publisher's browser cookie with a given request, e.g., by attaching the publisher's browser cookie to the request. - At
stage 3, for example, theproxy server 122 can forward (e.g., using a forwarded page request 204) the receivedpage request 202 to the server 205 (e.g., the publisher's server). As an example, theproxy server 122 can forward the request to the publisher's own server, such as theserver 205, along with the publisher's own browser cookie. Theproxy server 122 can attach the user device's IP address in the HTTP header's original IP address field, for example. While reference is made to the proxy server intercepting the request, in some implementations, theserver 205 can receive the request and can pass the page to theproxy server 122 with a redirect back to theuser device 106. For example, replaced embedded tags can be forwarded, or the tags can point directly to theproxy server 122. - At
stage 4, for example, theproxy server 122 can receive, from theserver 205, a requestedpage 206 associated with theresource 105. For example, theserver 205, can serve the publisher's content as if there were no proxy standing in between the publisher's server and the user's browser. The requestedpage 206 that is received is responsive to the forwardedpage request 202. Apage 208, for example, represents the received page, initially including the content of the requestedpage 206 and further processed by thepage processing engine 124, including updating thepage 208 as a result of the processing. - At
stage 5, for example, by thepage processing engine 124 can process thepage 208. In some implementations, processing thepage 208 can include the following sub-stages. - At
stage 5a, for example, thepage processing engine 124 can parse (210) thepage 208 to locate content blocks in thepage 208. For example, the publisher's content received by theproxy server 122 can include slots for which requests can be made for third-party content (e.g., from partners of the publisher). Thepage processing engine 124 can identify the slots, for example. - At
stage 5b, for example, thepage processing engine 124 can extract (212) slot information for each content block in thepage 208. For example, thepage processing engine 124 can determine characteristics of various slots identified instage 5a. The characteristics can include, for example, addresses for the third-party content providers' servers. - In some implementations, the
page processing engine 124 can use a data store of known slot tags 133 to identify and determine the slot information. For example, using slot information located in theresource 105, thepage processing engine 124 can determine (e.g., using a look-up) if matching/relevant information exists in the data store of known slot tags 133. If information exists in the data store for a particular slot, thepage processing engine 124 can use the information to determine how to invoke a particular third-party content provider with the extracted parameters to retrieve the required third-party content. In some implementations, the information can also specify how to merge the retrieved third-party content into the corresponding slot within the publisher's original content, and how to match the publisher's browser cookie to the third-party content provider's browser cookie. - At stage 5c, for example, the
page processing engine 124 can forward (214) content requests for each content block to respective third-partycontent serving systems 111. For example, for each tag that was successfully extracted based on the database content, theproxy server 122 can invoke the corresponding third-partycontent serving system 111 to retrieve the third-party content. In some implementations, any tags that are unrecognizable can be ignored by theproxy server 122, e.g., as would be done in situations not using a proxy server. - At
stage 5d, for example, thepage processing engine 124 can receiveresponses 216 responsive to the content requests and merge theresponses 216 into thepage 208 at respective content blocks. For example, thepage processing engine 124 can merge the third-party content into the slot defined in the publisher's original content. In some implementations, a new tag can be included in thepage 208 that points to an image returned to theproxy server 122. The new tag can be inserted, for example, before content requests are forwarded (214), and a version of thepage 208 can be returned to theuser device 106 in parallel. - At
stage 5e, for example, thepage processing engine 124 can remove (218) tags from one or more items in the responses and include a single tag in thepage 208 that is associated with theproxy server 122. Tags can include, for example, tracking pixels, cookies, or other types of information retrieval instruments. For example, tracking pixels can be used for tracking which pages the user is visiting, or for tracking whether a conversion has occurred. Thepage processing engine 124, for example, can recognize and locate each tracking pixel in the publisher's content merged with third-party content providers' content. The tracking pixels can be identified, for example, as tracking pixels T1, T2, . . . Tn. Thepage processing engine 124 can remove each of tracking pixels T1, T2, . . . Tn and replace them with a single tracking pixel, e.g., T0. In addition, thepage processing engine 124 can insert the single tracking pixel T0 into the merged content that points back to theproxy server 122. - In some implementations, the
page processing engine 124 can use the data store of known trackingpixels 135 to generate the single tag. For example, using a tracking pixel located in or associated with theresource 105, thepage processing engine 124 can determine (e.g., using a data store look-up) if associated information exists in the data store of known trackingpixels 135. If information exists, thepage processing engine 124 can access information for identifying patterns of known/supported tracking pixels. The information can include, for example, information for pattern-matching particular tracking pixel tags to extract parameters from those tracking pixels (including destination URLs), information for matching the publisher's browser cookie with the destination servers' browser cookies, and information for invoking the destination servers to report permissible events. - At stage 5f, for example, the
page processing engine 124 can store (220) a linking between the removed tags and the single tag associated with theproxy server 122. As an example, thepage processing engine 124 can record at least the extracted tracking information (e.g., destination URL, additional parameters) in the data store of tag links 131. The information stored, for example, can associate tracking pixel T0 with tracking pixels T1, T2, . . . Tn. In some implementations, thepage processing engine 124 can store other types of content in addition to information linking tags. - At
stage 6, for example, thecontent management system 110 can provide a processedpage 222 responsive to the receivedpage request 202. For example, the processedpage 222 can be the final version of thepage 208 after being processed by thepage processing engine 124. The processedpage 222 can include, for example, the publisher's content modified by merging third-party content and replacement of plural third-party tracking pixels with the proxy server's own tracking pixel (and/or content links replaced by content links pointing to the proxy server 122). - At the
user device 106, when the publisher's content is rendered in the user's browser, the proxy server's tracking pixel fires a request to theproxy server 122. When thecontent management system 110 receives information associated with the fired tracking pixel (e.g., tracking pixel T0), theproxy server 122 can use tracking pixel T0 to retrieve relevant information for tracking pixels T1, T2, . . . Tn from the data store oftag links 131, and theproxy server 122 can send tracking requests associated with tracking pixels T1, T2, . . . Tn to the corresponding destination servers (e.g., third-party content serving systems 111) accordingly. - In some implementations, cookie matching can be established between a publisher's browser cookie and a third-party content providers' cookie and/or a fourth-party trackers' cookie. For example, this can be done by adapting one of various industry common practices as follows. In some implementations that use a push approach, for example, the
proxy server 122 can insert a cookie matching pixel in the modified content before the processedpage 222 is provided to theuser device 106. The cookie matching pixel, once rendered in the user's browser, can fire up a cookie matching event with the third-party content provider's server, which can optionally redirect back to theproxy server 122. In some implementations, a push approach can be used, for example in situations in which the user's browser blocks third-party cookies. For example, when theproxy server 122 receives a request from the browser, theproxy server 122 can reply with a redirect request to redirect the user's browser to the third-party content provider's server, which can drop its own cookie to the user's browser as a first-party cookie. Then the user's browser can be redirected back to the proxy server, which can serve the content as described above. In some implementations, cookie-matching can be initiated by a third-party content provider. For example, when the third-party content provider drops a cookie matching pixel to the user's browser, the cookie matching pixel can send a request to the proxy server. In this example, there can optionally be a redirect back to the third-party content provider's server. -
FIG. 3 is a flowchart of anexample process 300 for processing content requests using a proxy server. In some implementations, thecontent management system 110 can perform steps of theprocess 300 using instructions that are executed by one or more processors.FIGS. 1-2 are used to provide example structures for performing the steps of theprocess 300. - A proxy server is added in between user devices and a server that hosts a resource on the web (302). For example, the
content management system 110 can include theproxy server 122 for serving as a proxy between requesting sources (e.g., user devices 106) and third-partycontent serving systems 111. - In some implementations, adding the proxy server includes assigning the proxy server a domain name service name and associated internet protocol address associated with the resource. For example, the
proxy server 122 can assume the URL or IP address of acorresponding resource 105. - A page request addressed to the resource is received at the proxy server and from a user device (304). As an example, the
content management system 110 can receive thepage request 202 from theuser device 106, the page request being for aparticular resource 105. - In some implementations, the process further includes dropping a cookie associated with the proxy server on the user device responsive to the received page request. For example, in response to the
page request 202, theproxy server 122 can provide a cookie to theuser device 106 that initiated thepage request 202. A publisher's existing web server may have already dropped cookies into a user's browsers, e.g., before use of theproxy server 122. In some implementations, because theproxy server 122 takes over the publisher's domain, theproxy server 122 can re-use existing cookies dropped by the publisher's web server prior to installing the proxy. As a result, theproxy server 122 may only drop a cookie if the publisher's web server has not already done so. - The received request is forwarded to the server (306). For example, the
proxy server 122 can provide the forwardedpage request 204 to theserver 205. In some implementations, theserver 205, in this case, does not know the source of the page request, e.g., that the page request is from a proxy server. - A page associated with the resource is received responsive to the forwarding and from the server (308). As an example, the
server 205 can provide, to theproxy server 122, the requestedpage 206 that is identified by the request. - The page is processed by the proxy server (310). For example, the
page processing engine 124 can process the requestedpage 206, as described above. During the processing, thepage 208, for example, can serve as a working copy of the received requestedpage 206, updated by one or more of the following steps. - The received page is parsed and content blocks in the page are located (312). As an example, the
page processing engine 124 can identify, within thepage 208, one or more content blocks for incorporating third-party content, as described above. - Slot information for each content block is extracted (314). For example, for each identified content block, the
page processing engine 124 can extract the slot information, such as including the information to request third-party content from specific third-partycontent serving systems 111. - Content requests for each content block are forwarded to respective third-party content serving systems (316). As an example, the
page processing engine 124 can forward (214) content requests to respective ones of the third-partycontent serving systems 111. In some implementations, forwarded requests can occur in parallel to providing the page, e.g., replacing links in the content blocks with pointers to the proxy server and the returning the page to theclient device 106 while the content requests are forwarded. - Responses to the content requests are received, and the responses are merged into the page at respective content blocks (318). For example, using the content in the received
responses 216, thepage processing engine 124 can update thepage 208. - Tags are removed from one or more items in the responses and a single tag is included in the processed page that is associated with the proxy server (320). As an example, the
page processing engine 124 can update thepage 208 by removing each of tracking pixels T1, T2, . . . Tn and replacing them with the single tracking pixel, e.g., tracking pixel T0 in thepage 208. Tags can include, for example, tracking pixels, cookies, or other types of information reporting elements. - In some implementations, the tags include a script to pass request-specific, user-specific or publisher specific parameters to an associated tag sponsor when content associated with a respective response is rendered on a requesting device. For example, the tracking pixels T1, T2, . . . Tn replaced by the
page processing engine 124 can include information associated with one or more of a particular user of theuser device 106, thespecific page request 202, and/or theresource 105 associated with thepage request 202. - A linking between the removed tags and the single tag associated with the proxy server is stored (322). For example, the
page processing engine 124 can replace the tracking pixels T1, T2, . . . Tn with the single tracking pixel T0, as described above, and store a linking in the data store of tag links 131. - In some implementations, storing the linking includes storing an association between the proxy server tag, third-party content, and one or more of an identifier associated with content provided for a given response, an impression identifier, a page identifier for the page, and/or a current time of impression or a uniform resource locator for a sponsor of the tag. For example, the information stored in the data store of
tag links 131 associating the tracking pixels T1, T2, . . . Tn with the single tracking pixel T0 can include information associated with serving the requestedpage 206. The information can identify, for example, the specific content item provided, the specific impression, a date/timestamp of the impression, and/or the URL associated with the sponsor. - The processed page is provided responsive to the received page request (324). As an example, the
proxy server 122 can provide the processed page 222 (e.g., the final state of the page 208) to theuser device 106 in response to thepage request 202. - In some implementations, providing the processed page further includes initially providing a redirect request to redirect a requesting user device's browser associated with the received page request to a third-party content provider server associated with a respective response. The redirect request, for example, can enable the third-party content provider to drop a cookie directly on the user device's browser as a first-party cookie. The method can further include thereafter redirecting the user's browser back to the proxy server to enable processing of the page. For example, the processed
page 222 can include a redirect URL that, when processed by the browser at theuser device 106, causes a redirection to a server of the third-partycontent serving system 111, the re-direction including use of a cookie dropped on theuser device 106. - In some implementations, the
process 300 further includes receiving an indication that the single tag associated with proxy server has fired, identifying the removed tags using the linking, and providing a response to one or more sponsors of the removed tags responsive to the received indication. For example, theproxy server 122 can receive a notification that the single tracking pixel T0 has fired. Theproxy server 122 can use the single tracking pixel T0 to look up the associated tracking pixels T1, T2, . . . Tn in the data store of tag links 131. Theproxy server 122 can notify sponsors associated with the tracking pixels T1, T2, . . . Tn that the tracking pixels have fired. In some implementations, theproxy server 122 can also parse the HTML snippets returned by a respective content provider, and can either remove tags or can call respective content providers based on the recognized tags. This process can be recursive using, for example, third-party ad servers. For example, rather than serve an ad directly to the user's browser, the publisher can deliver an ad tag which can redirect the browser to an ad server where the ad is stored. - In some implementations, the
process 300 further includes linking cookies deposited directly by a content sponsor with cookies of the proxy server generated when content of the content sponsor is served in response to forwarded requests, wherein linking the cookies includes linking a cookie dropped on the user device by a content sponsor with the cookie associated with the proxy server based on the stored linking. For example, thepage processing engine 124, when storing (220) a linking in the data store oftag links 131, can link cookies provided by theproxy server 122 and the third-party content serving systems. - In some implementations, the
process 300 further includes including, in a cookie dropped by a third-party content provider on the user device, a code that pings the proxy server to identify information associated with the third-party content sponsor known by the proxy server as a result of processing the page. For example, the processedpage 222 can include a code snippet for requesting, from theproxy server 122, information associated with the third-party content serving systems 111 (corresponding to third-party content merged into the processed page 222). - In some implementations, the received page request includes a cookie associated with the publisher of the resource, the forwarded request includes the cookie associated with the publisher resource, and processing the page includes inserting a cookie matching pixel in the processed page that fires a cookie matching event with a third-party content provider's server associated with a respective response. As an example, the processed
page 222 provided to theuser device 106 can include a cookie associated with the publisher of theresource 105, the cookie inserted by thepage processing engine 124 for matching cookies upon pixel firing at theuser device 106. In some implementations, inserting a cookie matching pixel can be done on an as-needed basis, e.g., if the inserting has not been done before. In some implementations, these content providers can be selected, e.g., to maximize potential ads revenue based on their past ads-buying history or spending potential. - In some implementations, the
proxy server 122 can perform actions in a different sequence from that identified by theprocess 300, e.g., including sending content requests to content providers only after receiving a page from the publisher. For example, to minimize latency, theproxy server 122 can perform the following steps. The page content can be cached, e.g., caching occurring only for information related to how many slots are on the page, size of those slots, tags of the slots, etc. Based on the cached slot information, theproxy server 122 can send requests to the publisher and to content providers at the same time (e.g., pre-fetching). After receiving the publisher's page, theproxy server 122 can parse the page to extract slot information, then send additional requests to content providers for those slots that the proxy server has not yet pre-fetched. The proxy server can also update the cached ad slot information. In some implementations, the proxy server may not send some of the pre-fetched content to the user's browser, e.g., when the cached slot information does not match the publisher's page just retrieved. In this case, the pre-fetched content can be discarded if the content provider relies on a delayed impression pixel to track whether the content is actually displayed in user's browsers. In some implementations, the publisher′ web server can indicate to theproxy server 122 that the page is static, using standard HTML protocol. Therefore, theproxy server 122 can cache the page content and omit the call to the publisher's web server in some scenarios, e.g., to reduce the load to the publisher's server and perhaps further reduce latency. - In some implementations, the
proxy server 122 can rewrite the page content in many ways, e.g., to speed up paging rendering, to improve user experience, or to provide additional benefits to publishers. For example, theproxy server 122 can rewrite/compress the Javascript embedded in the page to reduce the size. If user's browser does not support some content (either a publisher's content or a third-party provider's content), theproxy server 122 can convert the content to a format supported by the user's browser and return the converted content to the user's browser. The publisher's web server need only to receive requests from theproxy server 122. If theproxy server 122 is protected by a firewall, for example, the firewall can indirectly protect the publisher's web server as well without requiring the publisher to deal with an attack. -
FIG. 4 is a block diagram ofexample computing devices 400, 450 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.Computing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.Computing device 400 is further intended to represent any other typically non-mobile devices, such as televisions or other electronic devices with one or more processers embedded therein or attached thereto. Computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other computing devices. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document. -
Computing device 400 includes aprocessor 402,memory 404, astorage device 406, a high-speed controller 408 connecting tomemory 404 and high-speed expansion ports 410, and a low-speed controller 412 connecting to low-speed bus 414 andstorage device 406. Each of thecomponents processor 402 can process instructions for execution within thecomputing device 400, including instructions stored in thememory 404 or on thestorage device 406 to display graphical information for a GUI on an external input/output device, such asdisplay 416 coupled to high-speed controller 408. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also,multiple computing devices 400 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 404 stores information within thecomputing device 400. In one implementation, thememory 404 is a computer-readable medium. In one implementation, thememory 404 is a volatile memory unit or units. In another implementation, thememory 404 is a non-volatile memory unit or units. - The
storage device 406 is capable of providing mass storage for thecomputing device 400. In one implementation, thestorage device 406 is a computer-readable medium. In various different implementations, thestorage device 406 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as thememory 404, thestorage device 406, or memory onprocessor 402. - The high-
speed controller 408 manages bandwidth-intensive operations for thecomputing device 400, while the low-speed controller 412 manages lower bandwidth-intensive operations. Such allocation of duties is an example only. In one implementation, the high-speed controller 408 is coupled tomemory 404, display 416 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 410, which may accept various expansion cards (not shown). In the implementation, low-speed controller 412 is coupled tostorage device 406 and low-speed bus 414. The low-speed bus 414 (e.g., a low-speed expansion port), which may include various communication ports (e.g., USB, Bluetooth®, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The
computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as astandard server 420, or multiple times in a group of such servers. It may also be implemented as part of arack server system 424. In addition, it may be implemented in a personal computer such as alaptop computer 422. Alternatively, components fromcomputing device 400 may be combined with other components in a mobile device (not shown), such as computing device 450. Each of such devices may contain one or more ofcomputing devices 400, 450, and an entire system may be made up ofmultiple computing devices 400, 450 communicating with each other. - Computing device 450 includes a
processor 452,memory 464, an input/output device such as adisplay 454, acommunication interface 466, and atransceiver 468, among other components. The computing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage. Each of thecomponents - The
processor 452 can process instructions for execution within the computing device 450, including instructions stored in thememory 464. The processor may also include separate analog and digital processors. The processor may provide, for example, for coordination of the other components of the computing device 450, such as control of user interfaces, applications run by computing device 450, and wireless communication by computing device 450. -
Processor 452 may communicate with a user throughcontrol interface 458 anddisplay interface 456 coupled to adisplay 454. Thedisplay 454 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology. Thedisplay interface 456 may comprise appropriate circuitry for driving thedisplay 454 to present graphical and other information to a user. Thecontrol interface 458 may receive commands from a user and convert them for submission to theprocessor 452. In addition, anexternal interface 462 may be provided in communication withprocessor 452, so as to enable near area communication of computing device 450 with other devices.External interface 462 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth® or other such technologies). - The
memory 464 stores information within the computing device 450. In one implementation, thememory 464 is a computer-readable medium. In one implementation, thememory 464 is a volatile memory unit or units. In another implementation, thememory 464 is a non-volatile memory unit or units.Expansion memory 474 may also be provided and connected to computing device 450 throughexpansion interface 472, which may include, for example, a subscriber identification module (SIM) card interface.Such expansion memory 474 may provide extra storage space for computing device 450, or may also store applications or other information for computing device 450. Specifically,expansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example,expansion memory 474 may be provide as a security module for computing device 450, and may be programmed with instructions that permit secure use of computing device 450. In addition, secure applications may be provided via the SIM cards, along with additional information, such as placing identifying information on the SIM card in a non-hackable manner. - The memory may include for example, flash memory and/or MRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the
memory 464,expansion memory 474, or memory onprocessor 452. - Computing device 450 may communicate wirelessly through
communication interface 466, which may include digital signal processing circuitry where necessary.Communication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 468 (e.g., a radio-frequency transceiver). In addition, short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown). In addition,GPS receiver module 470 may provide additional wireless data to computing device 450, which may be used as appropriate by applications running on computing device 450. - Computing device 450 may also communicate audibly using
audio codec 460, which may receive spoken information from a user and convert it to usable digital information.Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450. - The computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a
cellular telephone 480. It may also be implemented as part of asmartphone 482, personal digital assistant, or other mobile device. - Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. Other programming paradigms can be used, e.g., functional programming, logical programming, or other programming. As used herein, the terms “machine-readable medium” “computer-readable medium” refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term “machine-readable signal” refers to any signal used to provide machine instructions and/or data to a programmable processor.
- To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable sub-combination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a sub-combination or variation of a sub-combination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Thus, particular implementations of the subject matter have been described. Other implementations are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/718,940 US20160344831A1 (en) | 2015-05-21 | 2015-05-21 | Proxy service for content requests |
PCT/US2016/031470 WO2016186882A1 (en) | 2015-05-21 | 2016-05-09 | Proxy service for content requests |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/718,940 US20160344831A1 (en) | 2015-05-21 | 2015-05-21 | Proxy service for content requests |
Publications (1)
Publication Number | Publication Date |
---|---|
US20160344831A1 true US20160344831A1 (en) | 2016-11-24 |
Family
ID=56072433
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/718,940 Abandoned US20160344831A1 (en) | 2015-05-21 | 2015-05-21 | Proxy service for content requests |
Country Status (2)
Country | Link |
---|---|
US (1) | US20160344831A1 (en) |
WO (1) | WO2016186882A1 (en) |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160164992A1 (en) * | 2014-12-05 | 2016-06-09 | At&T Intellectual Property I, L.P. | Multi Delivery Method Policy Controlled Client Proxy |
US20160294932A1 (en) * | 2015-04-03 | 2016-10-06 | Facebook, Inc. | Maintaining information describing interactions performed by users of an online system on third party systems on the online system |
CN107291913A (en) * | 2017-06-27 | 2017-10-24 | 武汉斗鱼网络科技有限公司 | HTML webpage loading method and device |
WO2018126023A1 (en) * | 2016-12-30 | 2018-07-05 | Google Llc | Methods and systems for server-side rendering of native content for presentation |
US20190036885A1 (en) * | 2017-07-26 | 2019-01-31 | Message 4U Pty Limited | System and method for facilitating the delivery of secure hyperlinked content via mobile messaging |
US20190057420A1 (en) * | 2015-02-19 | 2019-02-21 | Google Inc. | Third Party Customized Content Based on First Party Identifer |
CN109902220A (en) * | 2019-02-27 | 2019-06-18 | 腾讯科技（深圳）有限公司 | Webpage information acquisition methods, device and computer readable storage medium |
CN110109684A (en) * | 2019-04-04 | 2019-08-09 | 平安科技（深圳）有限公司 | Block chain node administration agent services installation method, electronic device and storage medium |
US10453092B1 (en) * | 2015-01-20 | 2019-10-22 | Google Llc | Content selection associated with webview browsers |
US10846180B2 (en) * | 2017-09-14 | 2020-11-24 | Commvault Systems, Inc. | Distributed framework for task splitting and task assignments in a content indexing system |
US10846266B2 (en) * | 2017-09-14 | 2020-11-24 | Commvault Systems, Inc. | Distributed architecture for content indexing emails |
US20210120093A1 (en) * | 2019-10-18 | 2021-04-22 | Amadeus S.A.S. | System and method for load mitigation in request handling |
US11032381B2 (en) * | 2019-06-19 | 2021-06-08 | Servicenow, Inc. | Discovery and storage of resource tags |
US11036592B2 (en) * | 2017-09-14 | 2021-06-15 | Commvault Systems, Inc. | Distributed content indexing architecture with separately stored file previews |
US11086834B2 (en) | 2017-09-14 | 2021-08-10 | Commvault Systems, Inc. | Distributed framework for data proximity-based task splitting in a content indexing system |
US11108836B2 (en) * | 2019-10-15 | 2021-08-31 | Relola, Inc. | System and methods of de-centralized content collection, distribution, and control |
JP2021140431A (en) * | 2020-03-04 | 2021-09-16 | 九電ビジネスソリューションズ株式会社 | Communication message conversion method, communication message conversion device, and communication message conversion program |
US11263088B2 (en) | 2017-09-14 | 2022-03-01 | Commvault Systems, Inc. | Distributed architecture for tracking content indexing |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060031404A1 (en) * | 2004-05-14 | 2006-02-09 | Mobilaps, Llc | Method of providing a web page with inserted content |
US20070101061A1 (en) * | 2005-10-27 | 2007-05-03 | Guruprasad Baskaran | Customized content loading mechanism for portions of a web page in real time environments |
US20070136443A1 (en) * | 2005-12-12 | 2007-06-14 | Google Inc. | Proxy server collection of data for module incorporation into a container document |
US20110185016A1 (en) * | 2009-09-30 | 2011-07-28 | David Rajendran Kandasamy | Enhanced website tracking system and mehod |
US20120054143A1 (en) * | 2010-08-31 | 2012-03-01 | Toby Doig | Systems and methods for rule based inclusion of pixel retargeting in campaign management |
US20120116896A1 (en) * | 2010-04-01 | 2012-05-10 | Lee Hahn Holloway | Internet-based proxy service to modify internet responses |
US20120158505A1 (en) * | 2010-12-20 | 2012-06-21 | Sreenivasulu Jaladanki | Blending Advertiser Data With Ad Network Data In Order To Serve Finely Targeted Ads |
US20120239811A1 (en) * | 2011-03-18 | 2012-09-20 | Juniper Networks, Inc. | Modular transparent proxy cache |
US20140089782A1 (en) * | 2012-09-19 | 2014-03-27 | TagMan Inc. | Systems and methods for 3-tier tag container architecture |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5894554A (en) * | 1996-04-23 | 1999-04-13 | Infospinner, Inc. | System for managing dynamic web page generation requests by intercepting request at web server and routing to page server thereby releasing web server to process other requests |
US8181107B2 (en) * | 2006-12-08 | 2012-05-15 | Bytemobile, Inc. | Content adaptation |
GB0902834D0 (en) * | 2009-02-19 | 2009-04-08 | Aceplan Invest Ltd | Content access platform and methods and apparatus providing access to internet content for heterogeneous devices |
CA2848175A1 (en) * | 2013-04-03 | 2014-10-03 | Usablenet Inc. | Methods for optimizing a web content proxy server and devices thereof |
-
2015
- 2015-05-21 US US14/718,940 patent/US20160344831A1/en not_active Abandoned
-
2016
- 2016-05-09 WO PCT/US2016/031470 patent/WO2016186882A1/en active Application Filing
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060031404A1 (en) * | 2004-05-14 | 2006-02-09 | Mobilaps, Llc | Method of providing a web page with inserted content |
US20070101061A1 (en) * | 2005-10-27 | 2007-05-03 | Guruprasad Baskaran | Customized content loading mechanism for portions of a web page in real time environments |
US20070136443A1 (en) * | 2005-12-12 | 2007-06-14 | Google Inc. | Proxy server collection of data for module incorporation into a container document |
US20110185016A1 (en) * | 2009-09-30 | 2011-07-28 | David Rajendran Kandasamy | Enhanced website tracking system and mehod |
US20120116896A1 (en) * | 2010-04-01 | 2012-05-10 | Lee Hahn Holloway | Internet-based proxy service to modify internet responses |
US20120117458A1 (en) * | 2010-04-01 | 2012-05-10 | Lee Hahn Holloway | Internet-based proxy service to modify internet responses |
US20150032552A9 (en) * | 2010-04-01 | 2015-01-29 | Lee Hahn Holloway | Internet-based proxy service to modify internet responses |
US20120054143A1 (en) * | 2010-08-31 | 2012-03-01 | Toby Doig | Systems and methods for rule based inclusion of pixel retargeting in campaign management |
US20120158505A1 (en) * | 2010-12-20 | 2012-06-21 | Sreenivasulu Jaladanki | Blending Advertiser Data With Ad Network Data In Order To Serve Finely Targeted Ads |
US20120239811A1 (en) * | 2011-03-18 | 2012-09-20 | Juniper Networks, Inc. | Modular transparent proxy cache |
US20140089782A1 (en) * | 2012-09-19 | 2014-03-27 | TagMan Inc. | Systems and methods for 3-tier tag container architecture |
Cited By (35)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10116761B2 (en) * | 2014-12-05 | 2018-10-30 | At&T Intellectual Property I, L.P. | Multi-delivery-method policy-controlled client proxy |
US20160164992A1 (en) * | 2014-12-05 | 2016-06-09 | At&T Intellectual Property I, L.P. | Multi Delivery Method Policy Controlled Client Proxy |
US9723095B2 (en) * | 2014-12-05 | 2017-08-01 | At&T Intellectual Property I, L.P. | Multi delivery method policy controlled client proxy |
US20170310780A1 (en) * | 2014-12-05 | 2017-10-26 | At&T Intellectual Property I, L.P. | Multi-Delivery-Method Policy-Controlled Client Proxy |
US10453092B1 (en) * | 2015-01-20 | 2019-10-22 | Google Llc | Content selection associated with webview browsers |
US11113724B1 (en) | 2015-01-20 | 2021-09-07 | Google Llc | Content selection associated with webview browsers |
US11748777B1 (en) | 2015-01-20 | 2023-09-05 | Google Llc | Content selection associated with webview browsers |
US10387923B2 (en) * | 2015-02-19 | 2019-08-20 | Google Llc | Third party customized content based on first party identifer |
US20190057420A1 (en) * | 2015-02-19 | 2019-02-21 | Google Inc. | Third Party Customized Content Based on First Party Identifer |
US11620686B2 (en) | 2015-02-19 | 2023-04-04 | Google Llc | Third party customized content based on first party identifer |
US11449905B2 (en) | 2015-02-19 | 2022-09-20 | Google Llc | Third party customized content based on first party identifer |
US10057362B2 (en) * | 2015-04-03 | 2018-08-21 | Facebook, Inc. | Maintaining information describing interactions performed by users of an online system on third party systems on the online system |
US20160294932A1 (en) * | 2015-04-03 | 2016-10-06 | Facebook, Inc. | Maintaining information describing interactions performed by users of an online system on third party systems on the online system |
WO2018126023A1 (en) * | 2016-12-30 | 2018-07-05 | Google Llc | Methods and systems for server-side rendering of native content for presentation |
CN107291913A (en) * | 2017-06-27 | 2017-10-24 | 武汉斗鱼网络科技有限公司 | HTML webpage loading method and device |
US20190036885A1 (en) * | 2017-07-26 | 2019-01-31 | Message 4U Pty Limited | System and method for facilitating the delivery of secure hyperlinked content via mobile messaging |
US20210334171A1 (en) * | 2017-09-14 | 2021-10-28 | Commvault Systems, Inc. | Distributed content indexing architecture with separately stored file previews |
US11036592B2 (en) * | 2017-09-14 | 2021-06-15 | Commvault Systems, Inc. | Distributed content indexing architecture with separately stored file previews |
US11086834B2 (en) | 2017-09-14 | 2021-08-10 | Commvault Systems, Inc. | Distributed framework for data proximity-based task splitting in a content indexing system |
US11687511B2 (en) | 2017-09-14 | 2023-06-27 | Commvault Systems, Inc. | Distributed framework for data proximity-based task splitting in a content indexing system |
US10846266B2 (en) * | 2017-09-14 | 2020-11-24 | Commvault Systems, Inc. | Distributed architecture for content indexing emails |
US11263088B2 (en) | 2017-09-14 | 2022-03-01 | Commvault Systems, Inc. | Distributed architecture for tracking content indexing |
US11321190B2 (en) | 2017-09-14 | 2022-05-03 | Commvault Systems, Inc. | Distributed framework for task splitting and task assignments in a content indexing system |
US10846180B2 (en) * | 2017-09-14 | 2020-11-24 | Commvault Systems, Inc. | Distributed framework for task splitting and task assignments in a content indexing system |
CN109902220A (en) * | 2019-02-27 | 2019-06-18 | 腾讯科技（深圳）有限公司 | Webpage information acquisition methods, device and computer readable storage medium |
CN110109684A (en) * | 2019-04-04 | 2019-08-09 | 平安科技（深圳）有限公司 | Block chain node administration agent services installation method, electronic device and storage medium |
US11032381B2 (en) * | 2019-06-19 | 2021-06-08 | Servicenow, Inc. | Discovery and storage of resource tags |
US11539771B2 (en) | 2019-10-15 | 2022-12-27 | Guise Inc. | System and methods of de-centralized content collection, distribution, and control |
US11108836B2 (en) * | 2019-10-15 | 2021-08-31 | Relola, Inc. | System and methods of de-centralized content collection, distribution, and control |
US20210120093A1 (en) * | 2019-10-18 | 2021-04-22 | Amadeus S.A.S. | System and method for load mitigation in request handling |
US20210409507A1 (en) * | 2019-10-18 | 2021-12-30 | Amadeus S.A.S. | System and method for load mitigation in request handling |
US11140237B2 (en) * | 2019-10-18 | 2021-10-05 | Amadeus S.A.S. | System and method for load mitigation in request handling |
US11778065B2 (en) * | 2019-10-18 | 2023-10-03 | Amadeus S.A.S. | System and method for load mitigation in request handling |
JP7267223B2 (en) | 2020-03-04 | 2023-05-01 | Ｑｓｏｌ株式会社 | Communication message conversion method, communication message conversion device, and communication message conversion program |
JP2021140431A (en) * | 2020-03-04 | 2021-09-16 | 九電ビジネスソリューションズ株式会社 | Communication message conversion method, communication message conversion device, and communication message conversion program |
Also Published As
Publication number | Publication date |
---|---|
WO2016186882A1 (en) | 2016-11-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20160344831A1 (en) | Proxy service for content requests | |
USRE49262E1 (en) | Providing content to a user across multiple devices | |
JP6547024B2 (en) | Dynamic phone number assignment | |
US11074625B2 (en) | Bidding based on the relative value of identifiers | |
US8688984B2 (en) | Providing content to a user across multiple devices | |
US11361344B2 (en) | Combining content with a search result | |
US10284666B1 (en) | Third-party cross-site data sharing | |
US9819678B1 (en) | Linking a forwarded contact on a resource to a user interaction on a requesting source item | |
US11620686B2 (en) | Third party customized content based on first party identifer | |
US10460098B1 (en) | Linking devices using encrypted account identifiers | |
US9258279B1 (en) | Bookmarking content for users associated with multiple devices | |
US10200236B1 (en) | Selecting follow-on content for co-located devices | |
US20140304065A1 (en) | Tracking On-Line Advertisement Exposure Via Mobile Wireless Device Browsers | |
US10129323B1 (en) | Sharing data across partner websites | |
WO2013185254A1 (en) | Contextual content for online previews |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SCHNEIDER, MASHA;WANG, GANG;GILES, JAMES;SIGNING DATES FROM 20150708 TO 20150811;REEL/FRAME:036301/0672 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
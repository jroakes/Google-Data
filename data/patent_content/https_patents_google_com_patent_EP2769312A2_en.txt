EP2769312A2 - Optimization of web page content including video - Google Patents
Optimization of web page content including videoInfo
- Publication number
- EP2769312A2 EP2769312A2 EP12842644.2A EP12842644A EP2769312A2 EP 2769312 A2 EP2769312 A2 EP 2769312A2 EP 12842644 A EP12842644 A EP 12842644A EP 2769312 A2 EP2769312 A2 EP 2769312A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- data
- video
- web
- module
- analytics
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
Definitions
- the present disclosure generally relates to video analysis and, more specifically, optimizing content of a web page that includes video data.
- Entities that publish content, such as video data, to one or more websites typically desire analytics data about the published content. For example, if video data is published to a website, the publishers may seek information about the number of times the video data is viewed and information describing the effect of the video data on one or more web pages from the website. Additionally, the publisher may also seek to optimize content in a web page to attract users.
- existing solutions for web page content optimization only considers optimizing verbal description contents such as headlines, news and stories, etc., without considering the effect of video data on the optimization.
- Existing solutions have numerous problems. First, they fail to optimize content of a web page embedded with a video. For example, existing solutions do not provide any mechanism for testing the effect of video data on a web page. Second, existing solutions also fail to obtain users' interactions to the content of the web page including the video. Third, since the existing solutions fail to optimize web page content including a video, it is impossible for the existing solutions to generate any report describing the effect of video data on the web page and how users respond to the content of the web page including the video.
- Embodiments disclosed herein provide a system and method for optimizing content of a web page.
- a web page is a collection of one or more related pages of web content.
- the system comprises a configuration analysis module, a request analysis module, an analytics module and an optimization module that are communicatively coupled to each other.
- the configuration analysis module receives a first set and a second set of web interaction data from a web page, respectively.
- the configuration analysis module determines a first content configuration for the first set of web interaction data and a second content configuration for the second set of web interaction data.
- the request analysis module receives a first request associated with the first content configuration and a second request associated with the second content configuration.
- the request analysis module extracts a first set of event data from the first request and a second set of event data from the second request.
- the analytics module generates a first set of video-aware analytics data using the first set of web interaction data and the first set of event data.
- the analytics module also generates a second set of video-aware analytics data using the second set of web interaction data and the second set of event data.
- the optimization module optimizes the content of the web page based at least in part on the first set and the second set of video-aware analytics data.
- Figure 1 is a high-level block diagram illustrating one embodiment of a computing environment for optimizing content of a web page including a video.
- Figure 2 is a block diagram illustrating one embodiment of a user device.
- Figure 3A is a block diagram illustrating one embodiment of a content management system.
- Figure 3B is a block diagram illustrating one embodiment of a content management module.
- FIG. 4 is a block diagram illustrating one embodiment of an analytics server.
- Figure 5 is a block diagram illustrating one embodiment of an analytics store.
- Figures 6A-6C are event diagrams illustrating various embodiments of a method for capturing web interaction data and requests.
- Figure 7 is an event diagram illustrating one embodiment of a method for capturing and associating web interaction data from a web page and requests from a media player.
- Figure 8 is a flow diagram illustrating one embodiment of a method for determining whether a media player cookie matches a web page tracking cookie.
- Figures 9A-9E are flow diagrams illustrating one embodiment of a method for capturing web interaction data and event data.
- Figures 10A and 10B are flow diagrams illustrating one embodiment of a method for generating video-aware analytics data using web interaction data and event data.
- Figures 11 A and 1 IB are flow diagrams illustrating one embodiment of a method for generating a report.
- Figure 12 is a flow diagram illustrating one embodiment of a method for optimizing content of a web page including a video.
- Figures 13 A and 13B are flow diagrams illustrating another embodiment of a method for optimizing content of a web page including a video.
- processing refers to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system's memories or registers or other such information storage, transmission or display devices.
- the present embodiments also relate to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may be a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer.
- the embodiments disclosed may take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment including both hardware and software elements.
- One embodiment is implemented in software comprising instructions or data stored on a computer-readable storage medium, which includes but is not limited to firmware, resident software, microcode or another method for storing instructions for execution by a processor.
- the embodiments may take the form of a computer program product accessible from a computer-usable or computer-readable storage medium providing program code for use by, or in connection with, a computer or any instruction execution system.
- a computer-usable or computer readable storage medium is any apparatus that can contain, store or transport the program for use by or in connection with the instruction execution system, apparatus or device.
- the computer- readable storage medium can be an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system (or apparatus or device) or a propagation medium.
- Examples of a tangible computer-readable storage medium include a semiconductor or solid state memory, magnetic tape, a removable computer diskette, a random access memory (RAM), a read-only memory (ROM), a rigid magnetic disk, an optical disk, an EPROM, an EEPROM, a magnetic card or an optical card.
- Examples of optical disks include compact disk - read only memory (CD-ROM), compact disk - read/write (CD-R/W) and digital video disc (DVD).
- Embodiments of the system described herein are suitable for storing and/or executing program code includes at least one processor coupled directly or indirectly to memory elements through a system bus.
- the memory elements may include local memory employed during actual execution of the program code, bulk storage and cache memories providing temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.
- I/O input/output
- I/O controllers such as keyboards, displays, pointing devices or other devices configured to receive data or to present data
- Network adapters may also be coupled to the data processing system to allow coupling to other data processing systems or remote printers or storage devices through intervening private or public networks.
- Modems, cable modem and Ethernet cards are just examples of the currently available types of network adapters.
- FIG. 1 shows one embodiment of a system 100 for optimizing content of a web page including a video.
- the system 100 includes a content management system (CMS) 1 10, a data store 120, an analytics server 123 that includes an analytics engine 125, a cache 130, one or more advertisement servers ("ad servers") 140A-140N (also referred to individually and collectively as 140), a network 150, a third party video server 180, a third party ad server 190, one or more user devices 160A, 160B, 160C (also referred to individually and collectively as 160) and one or more destination sites 170A-170N (also referred to individually and collectively as 170).
- CMS content management system
- the system 100 includes a content management system (CMS) 1 10, a data store 120, an analytics server 123 that includes an analytics engine 125, a cache 130, one or more advertisement servers (“ad servers”) 140A-140N (also referred to individually and collectively as 140), a network 150, a third party video server 180,
- Figure 1 also illustrates a media player 1 15 operating on one or more user devices 160.
- the system 100 may include different and/or additional components other than those depicted by Figure 1.
- the components of the system 100 are communicatively coupled to one another.
- the analytics server 123 is communicatively coupled to the network 150 via signal line 199.
- the CMS 110 is communicatively coupled to the cache 130 via signal line 195.
- the user device 160A is communicatively coupled to the network 150 via signal line 197A.
- the user device 160B is communicatively coupled to the network 150 via signal line 197B.
- the user device 160C is communicatively coupled to the network 150 via signal line 197C.
- the CMS 1 10 includes one or more processors and one or more storage devices storing data or instructions for execution by the one or more processors.
- the CMS 1 10 is a server, a server array or any other computing device, or group of computing devices, having data processing and communication capabilities.
- the CMS 1 10 receives video data and metadata from one or more publishers operating on one or more user devices 160 or other sources.
- a publisher is a user that publishes a video on one or more of the CMS 1 10, the third party video server 180 and the destination site 170.
- a publisher is an owner of a video.
- the CMS 1 10 associates the metadata with the video data and communicates the metadata, video data and association between video data and metadata to the data store 120, allowing the data store 120 to maintain relationships between video data and the metadata.
- the CMS 110 receives search queries for stored video data from a user device 160 and retrieves video data and metadata associated with the stored video data from the data store 120.
- the CMS 1 10 generates data or instructions for generating a media player 1 15 used to present the video data when executed by a processor. For example, the CMS 1 10 generates "embed code" that is included in a web page so that a media player 115 is embedded in the web page when loading the web page in a browser. The CMS 1 10 generates the data for creating a media player 1 15 (e.g., embed code) based at least in part on the video data and the metadata associated with the video data.
- the analytics server 123 generates data or instructions for generating the media player 115. The analytics server 123 is described in further detail below.
- the media player 115 is not generated based at least in part on data or instructions generated by the analytics server 123.
- the media player 115 includes code and routines stored on the user device 160.
- a processor of the user device 160 executes the media player 115.
- a browser (not pictured) stored and executed by the user device 160 receives video data from the CMS 1 10 via the network 150.
- the media player 115 receives the video data from the browser and displays a video on a display (not pictured) communicatively coupled to the user device 160.
- the media player 115 includes extensible metadata that can be modified by a user to change the features of the media player 1 15. The media player 115 is described in more detail below.
- the CMS 110 includes data or instructions for generating one or more user interfaces displaying video data and metadata retrieved from the data store 120.
- the user interfaces generated by the CMS 110 simplify user review and modification of metadata associated with the video data, allowing publishers to customize presentation of the video data to other users via a destination site 170 and presentation of content along with the video data.
- a user interface generated by the CMS 1 10 allows a publisher to customize the branding or skin of an embedded media player 1 15 used to present the video data when retrieved from a destination site 170 by modifying the metadata used by the CMS 1 10 to generate customized configuration data for the media player 1 15.
- a user interface generated by the CMS 1 10 allows a publisher to customize the temporal location and placement of supplemental content, such as an advertisement ("ad"), within video data when the video data is presented by a media player 1 15 operating on a user device 160.
- supplemental content such as an advertisement (“ad")
- the CMS 1 10 performs one or more tests to optimize content of a web page.
- the CMS 110 generates graphical data for providing a user interface to a publisher of a web page, allowing the publisher to configure the web page according to different content configurations, respectively.
- a content configuration is data describing an arrangement of content within a web page.
- a web page includes a media player for playback of video content, the video player is positioned at a first position on the web page and the content configuration includes data describing components of a web page (such as the the media player) and positions for each component within the web page (such as the media player being at the first position).
- the content management system 1 10 configures the web page using different content configurations, respectively, and cooperates with the analytics server 123 to test the performance for one or more of the content configurations so that a configuration having the best web analytics performance as measured by the analytics server 123 is selected. In one embodiment, such selection can involve A/B testing or other methods for determining the best performing configuration.
- the analytics server 123 optimizes content of the web page by comparing the performances for the different content configurations.
- the content management system 110 is further described below with reference to Figures 3A and 3B.
- the data store 120 is a non-volatile memory device or similar persistent storage device and media coupled to the CMS 1 10 for storing video data and metadata associated with stored video data.
- the data store 120 and the CMS 110 exchange data with each other via the network 150.
- the data store 120 and the CMS 1 10 exchange data via a dedicated communication channel. While the embodiment shown by Figure 1 depicts the data store 120 and CMS 1 10 as discrete components, in other embodiments a single component includes the data store 120 and the CMS 1 10.
- the data store 120 includes one or more tables associating metadata with video data.
- the data store 120 includes a table where an entry in the table includes a field identifying the video data and additional fields include metadata associated with the video data.
- the data store 120 may include additional tables identifying data used by a destination site 170 when storing video data for access by user devices 160.
- the data store 120 includes data mapping metadata associated with video data to data used by a destination site 170.
- the mapping of metadata associated with video data to data used by a destination site 170 allows the data store 120 to automatically map metadata associated with video data with one or more data fields used by a destination site 170, which beneficially reduces the time for a destination site 170 to store and communicate video data from the data store 120 to a user device 160.
- the data store 120 or the CMS 110 includes an index to expedite identification and/or retrieval of stored data from the data store 120.
- the analytics server 123 is one or more devices having at least one processor coupled to at least one storage device including instructions for execution by the processor.
- the analytics server 123 is one or more servers or other computing devices having data processing and data communication capabilities.
- the analytics server 123 monitors a website by receiving web interaction data from a user device 160 that loads one or more web pages on the website.
- the web interaction data is any data describing interaction between a web page and a user device 160.
- the web interaction data indicates that a browser in the user device 160 has loaded a web page for 5 minutes before switching to another web page.
- the web interaction data includes one or more of user interaction with a web page (e.g., a user clicking a link connected to a photo), data identifying the web page (e.g., a uniform resource locator ("URL") for the web page) and an indication identifying a content configuration for the web page.
- a web page e.g., a user clicking a link connected to a photo
- data identifying the web page e.g., a uniform resource locator ("URL") for the web page
- URL uniform resource locator
- the analytics server 123 only monitors interaction between a web page and a user device 160 after receiving permission to do such monitory from the human user o the user device 160.
- the analytics server 123 serves a web page to the user device 160 including a description of a privacy policy that requires the analytics server 123 to anonymize any data describing the activities of the user device 160 so that the identity of the user device 160 and the human user of the user device 160 cannot be determined.
- the web page can further include an explicit description of how the human user of the user device 160 has the right to opting in or opting out of data collection performed by the analytics server 123.
- the analytics server 123 does not monitor interaction between a web page and the user device 160. In one embodiment, if the analytics server 123 does collect data describing interaction between a web page and the user device 160, then the data is anonymized as described above and stored in compliance with a privacy policy that is shared with the human user of the user device 160.
- the analytics server 123 receives a request from a media player
- a request describes one or more of a state of a media player 1 15 and an action taken by the media player 115. There are different requests corresponding to different states and/or different actions. For example, a paused request indicates that the media player 1 15 has paused playback of a video. Other requests are described below.
- a request includes one or more of an indication identifying a content configuration for the web page and data describing interaction with the video. For example, a video-click request indicates that a user has provided an input to play a video by clicking a play graphic and the web page including the video is configured according to a content configuration identified by the indication that is included in the request.
- Video-aware analytics data is data describing interaction with one or more of a web page and a video embedded in the web page.
- the video-aware analytics data includes data describing the effect of video content on a web page (e.g., the presence of a video promoting user visits to the web page) and how one or more arrangements of web page content affect user access to video data (assume, for example, that an embedded video placed at the top of a web page is likely to have more video views than the same video placed at the bottom of the web page).
- the video-aware analytics data includes data describing one or more of the session time, the number of conversions, conversion rate, page views, unique page views, average time on the web page per page view, bounce rate, engagement rate, exit rate, video views, unique video views, a ratio of video views to page views, video views with a viewing of at least 25% of the video, video views with a viewing of at least 50% of the video, video views with a viewing of at least 75% of the video, video views with a viewing of 100% of the video, monetizable views, times that an advertisement is being clicked and times that an advertisement is being abandoned, etc.
- a conversion is an action that has reached a specified goal.
- the goal is specified by the administrator of the website.
- the goal can require multiple steps be taken by the visitor. For example, if a specified goal for a website is to have a visitor click a link to go to a second website and buy a product, a conversion occurs when the visitor has taken the steps to buy the product.
- a conversion rate is a percentage of sessions that result in occurrence of conversions.
- a bounce rate is a percentage of visitors that visit a web page on a website and leave the website without viewing any other web pages on the website. For example, a bounce rate represents a percentage of visitors that only view a single web page on a website.
- An engagement rate is a percentage of visitors that visit a web page on a website and further visit one or more additional web pages on the website. For example, an engagement rate indicates that 60% of visitors to a home page of a website click a hyperlink to visit a next web page from the home page.
- An exit rate for a web page is a percentage of visitors that visit a website and exit the website from the web page. For example, an exit rate for a web page represents a percentage of visitors that visit one or more web pages on a website (with the one or more web pages including the web page) and leave the website from the web page.
- the analytics server 123 optimizes content of a web page based at least in part on the video-aware analytics data.
- the analytics server 123 generates a first set of video-aware analytics data associated with a first content configuration for a web page and a second set of video-aware analytics data associated with a second content configuration for the same web page.
- the analytics server 123 compares the first and second sets of video- aware analytics data and selects one of the first content configuration and the second content configuration as an optimized content configuration for the web page.
- An optimized content configuration is a content configuration that has a better web analytics performance (e.g., higher conversion rate, higher engagement rate, longer session time, more conversions, etc.) than other content configurations.
- the analytics server 123 optimizes content of the web page by configuring the web page according to the optimized content configuration.
- the analytics server 123 and the analytics engine 125 are further described below with reference to Figure 4.
- the cache 130 is coupled to the content management system (CMS) 110 using the network 150 or using a direct communication channel between the CMS 110 and the cache 130.
- CMS content management system
- the CMS 110 communicates the video data to the cache 130, which stores a copy of the retrieved video data.
- a request for video data from a user device 160 or a destination site 170 is initially transmitted via the network 150 to the cache 130 and the requested video data is communicated to the user device 160 or the destination site 170 by the cache 130 if a copy of the video data is stored by the cache 130.
- the one or more advertisement servers (“ad servers”) 140A-140N are one or more computing devices having a processor and a computer-readable storage medium storing advertisements and data for selecting advertisements.
- An ad server 140 communicates with the CMS 1 10 via the network 150 or via a communication channel with the CMS 1 10. Also, an ad server 140 communicates with destination sites 170, the analytics server 123, third party video servers 190 or user devices 160 via the network 150 to communicate
- An ad server 140 also includes rules for targeting advertisements to specific users, for targeting advertisements to be displayed in conjunction with types of content, for targeting advertisements to specific locations or Internet Protocol (IP) addresses or other rules for selecting and/or targeting advertisements.
- IP Internet Protocol
- An ad server 140 receives metadata associated with video data from the CMS
- the ad server 140 selects stored advertisements based at least in part on keywords associated with the video data.
- modification of the metadata associated with the video data using the CMS 1 10 enables modification of the advertisements presented in conjunction with the video data.
- the network 150 is a conventional network and may have any number of configurations such as a star configuration, a token ring configuration or another
- the network 150 is a wireless network, a wired network or a combination of a wireless and a wired network.
- the network 150 may be a local area network (LAN), a wide area network (WAN) (e.g., the Internet) and/or any other interconnected data path across which multiple devices may communicate.
- the network 150 may be a peer-to- peer network.
- the network 150 may also be coupled to, or include, portions of a
- the network 150 includes a Bluetooth communication network and/or a cellular communications network for sending and receiving data.
- the network 150 transmits and/or receives data using one or more communication protocols such as short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, WAP, email or another suitable communication protocol.
- SMS short messaging service
- MMS multimedia messaging service
- HTTP hypertext transfer protocol
- WAP email or another suitable communication protocol.
- the one or more user devices 160A, 160B, 160C are computing devices having data processing and data communication capabilities.
- a user device 160 comprises a desktop computer, a laptop computer, a netbook computer, a tablet computer or a smartphone.
- different user devices 160A, 160B, 160C comprise different types of computing devices.
- the user device 160A is a smartphone
- the user device 160B is a tablet computer
- the user device 160C is a laptop computer.
- a user device 160 receives data from a user identifying a video (e.g., a title of the video, a video identification) and transmits the received data to a destination site 170 or to the CMS 1 10 via the network 150.
- a user identifying a video e.g., a title of the video, a video identification
- the user device 160 then receives video data for the video through the network 150, allowing presentation of the video by the user device 160 to the user. For example, the video is presented on the media player 1 15.
- the user device 160 receives metadata associated with video data from a user and transmits the metadata to the CMS 110 via the network 150 or receives metadata associated with video data from the CMS 1 10 from the network 150, allowing a user to view and/or modify the metadata using the user device 160.
- the user device 160 receives inputs from a user interacting with a webpage, the browser, the media player 115, etc.
- the media player 115 detects a user interaction with the media player 115 before, during and after playback of a video.
- the media player 1 15 is configured to detect user interaction with the media player 1 15 a predetermined amount of time before playback of the video (e.g., 5 seconds or any other amount of time), during playback of the video and a predetermined amount of time after playback of the video (e.g., 5 seconds or any other amount of time).
- the user device 160 stores the event data describing user interactions with the media player 1 15 in a buffer or any other non-transitory memory.
- a user device 160 transmits data to the CMS 1 10 via the network 150 and receives data from the CMS 110 and/or the cache 130 via the network 150.
- a user device 160 communicates video data to the CMS 1 10 via the network 150 or receives metadata associated with video data and/or user interface data from the CMS 110.
- a user device 160 receives data from a destination site 170 via the network 150.
- the user device 160 also transmits data, via the network 150, to the analytics server 123.
- the user device 160 transmits event data to the analytics server 123 via the network 150.
- the user device 160 generates a request including data describing the status of the media player 1 15.
- the request includes data describing a change in the status of the media player 1 15.
- requests are generated and transmitted to the analytics server 123 by the media player 1 15.
- Different types of requests and communications between the user device 160 and the analytics server 123 are described in further detail below with reference to Figures 6A-6C.
- the user device 160 is a processor-based smart television.
- the destination sites 170A-170N are computing devices having data processing and data communication capabilities, such as web servers.
- a destination site 170 includes data describing one or more web pages and communicates one or more web pages to a user device 160 via the network 150.
- One or more web pages stored by a destination site 170 include data or instructions for presenting video data by executing a media player 115 on the user device 160.
- a destination site 170 retrieves video data and the media player 1 15 used to present the video data from the CMS 1 10, allowing the destination site 170 to present video data using the architecture of the CMS 1 10.
- a destination site 170 receives video data and configuration data for a media player 115 from the CMS 1 10 and embeds the video data and the configuration data into web pages to present video data. For example, a destination site 170 receives embed code describing operation of the media player 115 and identifying video data presented by the media player 1 15 and includes the embed code in a web page.
- a user device 160 receives a web page from a destination site 170 to access content from the destination site 170 and communicates with the destination site 170 to navigate through a web page maintained by the destination site 170.
- One or more web pages stored by the destination site 170 include video data that is presented to the user by a media player 1 15.
- the third party video server 180 is one or more devices having at least one processor coupled to at least one storage device including instructions for execution by the processor.
- the third party video server 180 is a conventional server, a server array or any other computing device or group of computing devices, having data processing and communication capabilities.
- the third party video server 180 receives video data and metadata from one or more publishers operating on one or more user devices 160 and provides videos described by the video data and metadata to one or more users. For example, the third party video server 180 publishes a video provided by an owner of the video on a web site and presents the video to a user operating on a user device 160 when a request to view the video is received from the user.
- the third party video server 180 is communicatively coupled to other components of the system 100 via the network 150.
- the third party ad server 190 is any computing device having a processor and a computer-readable storage medium storing advertisements and data for selecting advertisements. For example, the third party server 190 selects an advertisement for a video and sends the advertisement to a user device 160 when the video is played by a media player 115 on the user device 160.
- the third party ad server 190 is communicatively coupled to other components of the system 100 via the network 150. In one embodiment, the third party ad server 190 provides functionalities similar to those provided by the ad server 140.
- Figure 2 is a block diagram illustrating one embodiment of a user device 160.
- the user device 160 includes a network adapter 202 coupled to a bus 204.
- a network adapter 202 also coupled to the bus 204 are at least one processor 206, a memory 208, a graphics adapter 210, an input device 212, a storage device 214, a media player 1 15 and a browser 220.
- the functionality of the bus 204 is provided by an interconnecting chipset.
- the user device 160 also includes a display 218, which is coupled to the graphics adapter 210.
- the input device 212, the graphics adapter 210 and the display 218 are depicted using dashed lines to indicate that they are optional features of the user device 160.
- the network adapter 202 is an interface that couples the user device 160 to a local or wide area network.
- the network adapter 202 is a network controller that couples to the network 150 via signal line 197 for data communication between the user device 160 and other components of the system 100.
- the network adapter 202 is communicatively coupled to a wireless network (e.g., a wireless local area network) via a wireless channel 230.
- the processor 206 may be any general-purpose processor.
- the processor 206 comprises an arithmetic logic unit, a microprocessor, a general purpose controller or some other processor array to perform computations, provide electronic display signals to display 218.
- the processor 206 is coupled to the bus 204 for communication with the other components of the user device 160.
- Processor 206 processes data signals and may comprise various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. Although only a single processor is shown in Figure 2, multiple processors may be included.
- the user device 160 also includes an operating system executable by the processor such as, but not limited to, WINDOWS®, MacOS X, Android, or UNIX® based operating systems.
- the memory 208 holds instructions and data used by the processor 206.
- the instructions and/or data comprise code for performing any and/or all of the techniques described herein.
- the memory 208 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory device known in the art.
- the memory 208 also includes a non-volatile memory such as a hard disk drive or flash drive for storing log information on a more permanent basis.
- the memory 208 is coupled by the bus 204 for communication with the other components of the user device 160.
- the media player 115 is stored in the memory 208 and executable by the processor 206.
- the storage device 214 is any device capable of holding data, like a hard drive, compact disk read-only memory (CD-ROM), DVD, or a solid-state memory device.
- the storage device 214 is a non- volatile memory device or similar permanent storage device and media.
- the storage device 214 stores data and instructions for the processor 206 and comprises one or more devices including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage device known in the art.
- instructions and/or data stored by the storage device 214 are described herein as different functional "modules," where different modules are different instructions and/or data included in the storage device that cause the described functionality when executed by the processor 206.
- the input device 212 may include a mouse, track ball, or other type of pointing device to input data into the user device 160.
- the input device 212 may also include a keyboard, such as a QWERTY keyboard.
- the input device 212 may also include a microphone, a web camera or similar audio or video capture device.
- the graphics adapter 210 displays images and other information on the display
- the media player 1 15 includes code and routines for presenting video data to a user.
- the media player 115 is a video player executed by a browser 220 to stream video data from one of the CMS 1 10, the destination site 170 and the third party video server 180 and presents the video data to a user.
- the media player 1 15 is included on one or more web pages provided by one of a destination site 170, a third party video server 180 and the CMS 110.
- the user device 160 receives a web page from the destination site 170 and generates a media player 1 15 to present video data to the user according to an embed code in the web page.
- the media player 1 15 includes code and routines stored in a memory of the user device 160 (e.g., one of memory 208 and storage device 214) and executed by the processor 206 to provide the functionality described herein.
- the media player 115 is a video player customized by a publisher such as the third party video server 180 or some other third party.
- the publisher customizes the customized extensible metadata 204 in the media player 1 15 so that the media player 115 includes one or more custom features.
- a custom feature is any feature added to the media player by a third party that is not the human user of the user device 160 or the administrator of the analytics server 123 or the CMS 1 10. Examples of custom features include an age-gating function, a user login interface, generating a first queue for playback and a second queue for saving a video for playback at a later time.
- the processor 206 executes the extensible metadata 204 to provide the custom feature.
- the media player 115 implements an age-gating function by requesting a user to confirm that he/she is at least 18 years old.
- the media player 1 15 includes, among other things, a ping module 290, an event module 291, a request module 292, a set of customized extensible metadata 294 and an event memory 296. These components of the media player 115 are communicatively coupled to each other.
- the customized extensible metadata 294 and the event memory 296 are depicted with dashed lines to indicate that they are optional features of the media player 1 15.
- the ping module 290 includes code and routines for handling communication between the media player 115 and other components of the system 100. For example, the ping module 290 transmits a request generated by the request module 291 to the analytics server 123. In one embodiment, the ping module 290 receives video data from one of the CMS 1 10, the third party video server 180 and the destination site 170. In another embodiment, the ping module 290 receives data for an advertisement from one of the ad server 140, the third party ad server 190 and the analytics server 123.
- the event module 291 includes code and routines for generating an event for the media player 115.
- An event describes a state of the media player 1 15 triggered by an action taken in the media player 1 15. For example, when the media player 115 is buffering video data for a video from the content management system 110, a video buffering event is generated by the event module 291.
- the event module 291 sends event data describing the generated event to the request module 292.
- an event describes interaction with a video by a user of the user device 160.
- Examples of an event include, but are not limited to, clicking a video to play, viewing 25% of a video, viewing 50% of a video, viewing 75% of a video, viewing 100% of a video, monetizable views, an ad being watched, an ad being clicked, an ad being abandoned, dropping off a video, age-gating, user login, queue for playback, saving for later view and any other events triggered by a publisher's customization of the media player 115.
- the request module 292 includes code and routines for generating a request.
- the request module 292 generates a request based at least in part on event data received from the event module 291. For example, the request module 292 generates a video-click request if event data describing a user clicking a video to play is received.
- a request includes one or more of a video identification ("video ID") to identify a video, a video version (e.g., a second version of a video), a location (e.g., an IP address) for a user device 160, a uniform resource locator ("URL”) to view a video (or, a URL for a web page including the video), event data describing an event and an indication identifying a content configuration for the web page including the video.
- video ID video identification
- video version e.g., a second version of a video
- location e.g., an IP address
- URL uniform resource locator
- the request module 292 sends the generated request to the ping module 290 and the ping module 290 delivers the request to the analytics server 123.
- Examples of a request include, but are not limited to, a load request indicating that the media player 115 is loaded on a web page, an ad start request indicating that an ad is starting to play, an ad progress request reporting viewing progress of an ad at a predetermined interval (e.g., 5 seconds), an ad checkpoint request reporting viewing progress of an ad at a checkpoint (e.g., 25%, 50%, 75% and 100% of an ad), an ad end request indicating that an ad is finished playing, a view request indicating that a video is starting to play, a view progress request reporting viewing progress of a video at a predetermined interval (e.g., 10 seconds), a view checkpoint request reporting viewing progress of a video at a checkpoint (e.g., 25%, 50%, 75% and 100% of a video) and
- the customized extensible metadata 294 is extensible metadata used to configure the media player 115.
- the customized extensible metadata 294 includes settings for the media player 1 15 to implement one or more features added by a publisher or any other party. For example, when the media player 115 is loaded by the user device 160, the media player 115 is configured according to the customized extensible metadata 294 so that one or more features customized by the publisher are added to the media player 115.
- the customized extensible metadata 294 is stored in the storage device 214 and retrieved by the media player 115 when the media player 115 is loaded.
- the media player 115 receives the customized extensible metadata 294 from the player configuration module 338 and stores the customized extensible metadata 294 in the storage device 214.
- the player configuration module 338 is described below with reference to Figure 3B.
- the event memory 296 stores and buffers the event data transmitted from the event module 292.
- the event memory 296 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory device known in the art.
- the memory 208 also stores requests generated by the request module 291 in conjunction with the event data.
- the browser 220 includes code and routines stored in a memory 208 and executed by a processor 206 of a user device 160.
- the browser 220 is a browser application such as Google ChromeTM.
- the browser 220 comprises a memory for storing data (e.g., a cookie or any other data).
- the browser 220 is launched on the user device 160.
- the browser 220 loads a web page from a website based at least in part on the content configuration for the web page.
- the content is arranged on the web page based at least in part on the content configuration.
- the browser 220 receives web page data describing content for a web page and a content configuration for the web page from the CMS 1 10, arranges content of the web page according to the content configuration and presents the web page to a user of the user device 160.
- the browser 220 sends any data describing interaction with the web page (e.g., web interaction data) to the analytics server 123.
- the browser 220 sends web interaction data describing that a user has clicked a hyperlink in the web page to the analytics server 123.
- the received web page data includes an embed code for generating a media player 115 so that a media player 1 15 for playing a video is embedded in the web page when the web page is loaded in the browser 220.
- the media player is 1 15 is a client-side module stored and executed by the user device 160.
- the browser 220 sends web interaction data for the web page to the analytics server 123, while the media player 115 sends requests that include event data describing interaction with the video to the analytics server 123.
- the browser 220 sends web interaction data to the analytics server 123 describing that a user has scrolled down the web page to read a brief introduction of a video, while the media player 1 15 sends a video-click request to the analytics server 123 indicating that the user has clicked to play the video.
- CMS Content Management System
- FIG 3 A is a block diagram illustrating one embodiment of a CMS 110.
- the CMS 1 10 includes a network adapter 302 coupled to a bus 304.
- the bus 304 also coupled to the bus 304 are at least one processor 306, a memory 308, a graphics adapter 310, an input device 312, a storage device 314, and a communication device 330.
- the functionality of the bus 304 is provided by an interconnecting chipset.
- the CMS 1 10 also includes a display 318, which is coupled to the graphics adapter 310.
- the input device 312, the graphics adapter 310 and the display 318 are depicted using dashed lines to indicate that they are optional features of the CMS 1 10.
- the network adapter 302 is an interface that couples the CMS 1 10 to a local or wide area network.
- the network adapter 302 is a network controller that couples to the network 150 via signal line 195 for data communication between the CMS 1 10 and other components of the system 100.
- the network adapter 302 is communicatively coupled to a wireless network (e.g., a wireless local area network) via a wireless channel 331.
- the processor 306 is any general-purpose processor.
- the processor 306 comprises an arithmetic logic unit, a microprocessor, a general purpose controller or some other processor array to perform computations, provide electronic display signals to the display 318.
- the processor 306 is coupled to the bus 304 for communication with the other components of the CMS 110.
- the processor 306 processes data signals and may comprise various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. Although only a single processor is shown in Figure 3 A, multiple processors may be included.
- the CMS 110 also includes an operating system executable by the processor 306 such as but not limited to WINDOWS®, MacOS X, Android, or UNIX® based operating systems.
- the memory 308 holds instructions and data used by the processor 306.
- the instructions and/or data comprise code for performing any and/or all of the techniques described herein.
- the memory 308 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory device known in the art.
- the memory 308 also includes a non-volatile memory such as a hard disk drive or flash drive for storing log information on a more permanent basis.
- the memory 308 is coupled by the bus 304 for communication with the other components of the CMS 1 10.
- the content management module 301 is stored in memory 308 and executable by the processor 306.
- the storage device 314 is any tangible device capable of storing data.
- the storage device 314 is a non- volatile memory device or similar permanent storage device and media.
- the storage device 314 stores data and instructions for the processor 306 and comprises one or more devices including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage device known in the art.
- the storage device 314 includes instructions and/or data for maintaining metadata associated with video data, for modifying stored metadata or for retrieving stored video data or stored metadata associated with stored video data.
- the input device 312 may include a mouse, track ball, or other type of pointing device to input data into the CMS 110.
- the input device 312 may also include a keyboard, such as a QWERTY keyboard.
- the input device 312 may also include a microphone, a web camera or similar audio or video capture device.
- the graphics adapter 310 displays images and other information on the display 318.
- the display 318 is a conventional type such as a liquid crystal display (LCD) or any other similarly equipped display device, screen, or monitor.
- the display 318 represents any device equipped to display electronic images and data as described herein.
- the communication device 330 transmits data from the CMS 1 10 to the network 150 and receives data from the network 150.
- the communication device 330 is coupled to the bus 304.
- the communication device 330 also exchanges data with one or more of the analytics server 123, the data store 120, the cache 130, the third party video server 180, the third party ad server 190 and/or one or more ad servers 140 using communication channels other than the network 150.
- the analytics server 123 the data store 120, the cache 130, the third party video server 180, the third party ad server 190 and/or one or more ad servers 140 using communication channels other than the network 150.
- the communication device 330 includes a port for direct physical connection to the network 150 or to another communication channel.
- the communication device 330 includes a USB, SD, CAT-5 or similar port for wired communication with the network 150.
- the communication device 330 includes a wireless transceiver for exchanging data with the network 150, or with another communication channel, using one or more wireless communication methods, such as IEEE 802.11, IEEE 802.16, BLUETOOTH® or another suitable wireless communication method.
- the communication device 330 includes a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, WAP, e-mail or another suitable type of electronic communication.
- SMS short messaging service
- MMS multimedia messaging service
- HTTP hypertext transfer protocol
- the communication device 330 includes a wired port and a wireless transceiver.
- the communication device 330 also provides other conventional connections to the network 150 for distribution of files and/or media objects using standard network protocols such as TCP/IP, HTTP, HTTPS and SMTP as will be understood to those skilled in the art.
- Figure 3A further illustrates a content management module 301
- the content management module 301 provides logic and instructions for storing video data from a publisher and providing the video data to other users.
- the content management module 301 can be implemented in hardware (e.g., in an FPGA), as illustrated in Figure 3 A.
- the content management module 301 can include software routines and instructions that are stored, for example, in the memory 308 and/or storage device 314 and executable by the processor 306 to cause the processer to store video data from a publisher and provide the video data to other users. Details describing the functionality and components of the content management module 301 will be explained in further detail below with reference to Figure 3B.
- the CMS 110 can have different and/or other components than those shown in Figure 3 A.
- the CMS 1 10 can lack certain illustrated components.
- the CMS 1 10 lacks an input device 312, graphics adapter 310, and/or display 318.
- the storage device 314 can be local and/or remote from the CMS 1 10 (such as embodied within a storage area network (SAN)).
- SAN storage area network
- the CMS 110 is adapted to execute computer program modules for providing functionality described herein.
- module refers to computer program logic utilized to provide the specified functionality.
- a module can be implemented in hardware, firmware, and/or software.
- program modules are stored on the storage device 314, loaded into the memory 308, and executed by the processor 306.
- Embodiments of the entities described herein can include other and/or different modules than the ones described here.
- the functionality attributed to the modules can be performed by other or different modules in other embodiments.
- this description occasionally omits the term "module" for purposes of clarity and
- Figure 3B is a block diagram illustrating one embodiment of the content management module 301.
- the content management module 301 includes a data editing module 321, a video search module 322, a transcoding module 325, a user interface module 326, a routing module 327, a player configuration module 328, an operations manager 329 and a test module 334.
- the content management module 301 includes different and/or additional modules than the ones depicted in Figure 3B.
- the modules are implemented using instructions and/or data included in the storage device 314. In another embodiment, the modules are
- modules are implemented using one or more hardware devices configured to provide the functionality further described below.
- the modules are implemented using one or more application specific integrated circuits (ASICs) and/or one or more FPGAs coupled to the bus 304 and configured to provide the functionality of the modules further described below.
- ASICs application specific integrated circuits
- FPGAs field-programmable gate arrays
- the data editing module 321 is software and routines executable by the processor 306 for modifying metadata and/or video data stored in the data store 120.
- the data editing module 321 receives data from a user of the user device 160 via the user interface module 326.
- the data editing module 321 uses the received data to generate (or modify) metadata that is stored by the data store 120.
- the data editing module 321 generates or modifies playlists including a sequence of video data based at least in part on data received from a user device 160 via the user interface module 326.
- the user interface module 326 receives data for modifying stored metadata associated with video data (or data identifying metadata for association with video data) from a user device 160 via the network 150 and the bus 304.
- the data editing module 321 modifies the metadata associated with the video data using the received data.
- the data editing module 321 stores the received metadata and an association between the received metadata and video data in the data store 120 as described in further detail below.
- the data editing module 321 generates an instruction identifying the metadata to be modified and describing the modification to the metadata. In another embodiment, the data editing module 321 generates an instruction identifying metadata and video data associated with the metadata. The generated instruction is then transmitted to the data store 120 by the communication device 330 to modify the metadata. Similarly, the data editing module 321 generates an instruction modifying a playlist, identifying modifications to the video data included in the playlist or identifying one or more attributes associated with the playlist to be modified. The generated instruction is transmitted to the data store 120 via the bus 304, the communication device 330 and the network 150.
- the video search module 322 is software and routines executable by the processor 306 for generating data or instructions for retrieving video data from the data store 120 based at least in part on received input, such as search terms.
- the video search module 322 searches the data store 120 for metadata that match or are similar to search terms received from the communication device 330 and/or from the user interface module 326.
- the video search module 322 allows users to more easily retrieve stored video data using metadata associated with the stored video data.
- the video search module 322 accesses the data store 120 via the network 150, the communication device 330 and the bus 304 to identify video data associated with metadata that match or are similar to search terms received from the communication device 330 and/or from the user interface module 326.
- the video search module 322 searches metadata associated with stored video data to identify and retrieve stored video data.
- the video search module 322 also receives data limiting the metadata to which the search terms are compared. For example, the video search module 322 receives input limiting comparison of search terms to metadata specifying video title and not to other metadata.
- the video search module 322 also receives data from the data store 120 describing stored video data associated with metadata that match or are similar to the search terms.
- the video search module 322 communicates the description of the stored video data to the user interface module 326 via the bus 304, and the user interface module 326 generates a user interface presenting the video data from the data store 120 to a user.
- the transcoding module 325 is software and routines executable by the processor 306 for generating a copy of the video data encoded in a different format than the video data's original format.
- the transcoding module 325 includes one or more codecs for generating differently encoded copies of the video data.
- the transcoding module 325 includes multiple video codecs, such as H.262/MPEG-2 Part 2 codecs,
- the transcoding module 325 enables generation of a compressed version of stored video data by encoding the video data with one or more of the stored video codecs.
- the differently-encoded copy of the video data is communicated to the data store 120 for storage and association with the original video data.
- the transcoding module 325 automatically encodes video data received by the CMS 110 using one or more predetermined codecs to generate one or more compressed versions of the video data, which are stored in the data store 120 along with the original video data.
- the transcoding module 325 automatically encodes video data using one or more commonly-used codecs, such as one or more H.264/MPEG-4 Advanced Video Coding codecs or one or more VP8 codecs. This simplifies distribution of the video data to destination sites 170 by automatically generating compressed versions of the video data using codecs most commonly used by destination sites 170.
- input received by the user interface module 326 allows a user to specify one or more codecs that are automatically applied to video data. For example, a user specifies a list of codecs to produce compressed video data compatible with user-desired destination sites 170, allowing the CMS 1 10 to automatically generate video data compatible with the user-desired destination sites 170.
- the transcoding module 325 may also receive input via the user interface module 326, allowing manual identification of a codec and encode video data using the identified codec. Additionally, a user may communicate one or more codecs to the CMS 1 10 via the network 150 and the transcoding module 325 stores the user-supplied codecs for subsequent use. Additionally, destination sites 170 may communicate codecs to the transcoding module 325 via the network 150, allowing the transcoding module 325 to dynamically modify the codecs used. The transcoding module 325 may also modify the one or more codecs automatically applied to video data responsive to data from destination sites 170 and/or from user devices 160, enabling dynamic modification of video encoding as different and/or additional codecs become more commonly used.
- the user interface module 326 is software and routines executable by the processor 306 for generating graphical data to provide one or more user interfaces for receiving data from a user and/or presenting video data and/or metadata associated with video data to a user.
- the user interface module 326 includes instructions that, when executed by a processor 306, generate graphical data for depicting user interfaces to display metadata associated with video data and/or modify metadata associated with video data.
- data stored in the user interface module 326 is communicated to a user device 160 via the communication device 330 and the network 150, and a processor included in the user device 160 generates a user interface by executing the instructions provided by the user interface module 326.
- the user interface module 326 generates graphical data for depicting a user interface to display metadata that is associated with video data and stored in the data store 120 and receive modification to the stored metadata. In another embodiment, the user interface module 326 generates graphical data for depicting a user interface identifying stored video data associated with a user from the data store 120, expediting the user's review of previously stored video data. In yet another embodiment, the user interface module 326 generates graphical data for depicting a user interface that allows a publisher to configure content of a web page such as including a video to the web page and arranging components of the web page in different layouts.
- the user interface module 326 sends the generated graphical data to the user device 160, causing the user device 160 to generate a user interface using the graphical data.
- the user interface module 326 stores the generated graphical data in the storage device 314.
- the routing module 327 is software and routines executable by the processor
- the communication device 330 transmits the data to the determined destination using the bus 304.
- the routing module 327 includes a routing table associating destinations with different types of data and/or with different commands. For example, the routing module 327 determines that editing commands from the data editing module 321 are routed to the data store 120 and determines that search commands from the video search module 322 are routed to the data store 120. As additional examples, the routing module 327 determines that data from the user interface module 326 is directed to a user device 160 or determines that web interaction data or video access data is transmitted to the analytics server 123.
- the player configuration module 328 is software and routines executable by the processor 306 for generating settings for a media player 115.
- the player configuration module 328 generates the settings for a media player 115 based at least in part on a publisher's customization of the media player 115 via the extensible metadata 294.
- the player configuration module 328 generates a setting for a media player based at least in part on an age-gating function added by a publisher.
- the player configuration module 328 is depicted with a dashed line to indicate that in one embodiment the player configuration module 328 is comprised within the content management module 301, while in other embodiments the player configuration module 328 is comprised within one or more of the third party video server 180, the content management module 301 and the destination site 170.
- the player configuration module 328 stores the settings for customizing the media player 1 15.
- the settings are stored as a portion of the customized extensible metadata 294 in the storage device 314.
- the player configuration module 328 stores a blacklist as a portion of the customized extensible metadata 294 for identifying domains or geographic regions in which the media player 1 15 is unable to present video data.
- the player configuration module 328 sends the customized extensible metadata 294 to a user device 160 so that the media player 1 15 launched in the user device 160 is configured according to the customized extensible metadata 294 to implement the features added by the publisher.
- the player configuration module 328 stores the customized extensible metadata 294 in the storage device 314 or the data store 120.
- the operations manager 329 is software and routines executable by the processor 306 for generating modifications to metadata stored in the data store 120 and scheduling modification of the stored metadata. Additionally, the operations manager 329 determines when data stored by the data store 120 is changed and notifies the CMS 1 10 when stored data has been changed using the communication device 330 and/or the network 150 or any other connection to the data store 120. In one embodiment, the operations manager 329 maintains one or more queues for scheduling modification of stored metadata or
- the operations manager 329 also communicates changes of stored metadata to one or more destination sites 170 via the communication device 330 and the network 150, allowing a destination site 170 to receive the most current metadata. In one embodiment, the operations manager 329 generates a queue or other schedule specifying the timing of communication of metadata to one or more destination sites 170.
- the test module 334 is software and routines executable by the processor 306 for performing one or more tests for one or more content configurations of a web page. For example, the test module 334 instructs the user interface module 326 to generate graphical data for depicting a user interface that allows a publisher to set up a content configuration for a web page. The user interface module 326 sends the graphical data to a user device 160, causing the user device 160 to present the user interface to an administrator of the publisher. The administrator of the publisher inputs a content configuration via the user interface and the content configuration is sent to the test module 334.
- the test module 334 assigns an indication (e.g., an identifier) to the content configuration and stores the indication and the content configuration in the storage device 314.
- the test module 334 configures the web page based at least in part on the content configuration so that the web page is presented to any users in a form corresponding to the content configuration.
- the test module 334 is configured to communicate with the analytics server 123 so that the analytics server 123 monitors and records any web interaction data from the web page and any requests from the media player 115 embedded in the web page when the web page is loaded on a user device 160.
- the analytics server 123 generates a set of video-aware analytics data for the web page configured according to the content configuration.
- test module 334 is depicted using a dashed line to indicate that in one embodiment the test module 334 is comprised within the content management module 301, while in other embodiments the test module 334 is comprised within one or more of the third party video server 180, the content management module 301 and the destination site 170.
- the test module 334 performs one or more tests for a web page.
- the test module 334 configures the web page according to a two or more content configuration.
- the test module updates the configuration of objects on the web page based at least in part on the content configuration.
- the web page is presented to a user via a browser 220 according to one of the two or more content configurations.
- Different users operating on different user devices 160 are presented with a web page configured based on different content configurations. For example, a first user of a first user device 160B is presented with the web page generated based on a first content configuration and a second user of a second user device 160C is presented with the web page generated based a second content configuration.
- the first user sees the web page configured one way
- the second user sees the web page configured a second way different from the first user.
- the analytics server 123 analyzes the way the first user and the second user interact with their respective web pages in order to determine which
- the analytics server 123 generates a set of video-aware analytics data for the first content configuration and the second content configuration.
- the analytics server 123 determines an optimized content configuration based at least in part on a comparison of the video-aware analytics data so that the better performing content configuration is determined to be the optimized content configuration.
- Examples of a content configuration include, but are not limited to, a content configuration with presence of a video, a content configuration with absence of the video, a content configuration with the video present in a first location of the web page, a content configuration with the video present in a second location of the web page, a content configuration with a different video present in one of the first and the second locations of the web page, a content configuration with a first thumbnail for the video, a content configuration with a second thumbnail for the video, a content configuration with a pre-roll advertisement for the video (e.g., an ad played a predetermined amount of time before viewing the video), a content configuration with a mid-roll advertisement for the video (e.g., an ad played in the middle of viewing the video) and a content configuration with a post-roll advertisement for the video (e.g., an ad played a predetermined amount of time after viewing the video), etc.
- the test module 334 assigns an indication (e.g., an indication (e.g
- the test module 334 receives a first content configuration with data describing the presence of a video in a web page from a publisher.
- the test module 334 configures the web page according to the first content configuration so that the web page including the video is presented to any users in a form corresponding to the first content configuration.
- the test module 334 updates the setting of the web page based at least in part on the first content configuration so that when a user requests the web page using a browser 220 executed on a user device 160, the browser 220 configures the web page according to the first content configuration and presents the web page to the user.
- the analytics server 123 collects web interaction data from the web page loaded on a user device 160 and any requests generated by the media player 115 embedded in the web page.
- the analytics server 123 generates a first set of video-aware analytics data for the first content configuration.
- the test module 334 receives a second content configuration with absence of the video so that the video is not included in the web page.
- the test module 334 configures the web page according to the second content configuration so that the web page without the video is presented to any users in a form corresponding to the second content configuration.
- the analytics server 123 collects web interaction data from the web page loaded on a user device 160 to generate a second set of video-aware analytics data for the second content configuration.
- the analytics server 123 optimizes the content of the web page using the first set and the second set of video-aware analytics data. In one embodiment, this optimization includes A/B testing. The optimization of web page content is described below with reference to Figure 4.
- test module 334 receives a first content
- the test module 334 configures the web page according to the first content configuration.
- the web page with the video present in the first location is presented to any users.
- the analytics server 123 generates a first set of video-aware analytics data for the first content configuration.
- the test module 334 receives a second content configuration with the same video present in a second location within the web page and configures the web page according to the second content configuration.
- the web page with the same video present in the second location is presented to any users.
- the analytics server 123 generates a second set of video-aware analytics data for the second content configuration.
- the analytics server 123 optimizes content of the web page using the first set and the second set of video-aware analytics data.
- the test module 334 receives a first content configuration with data describing a first video present in a first location within a web page.
- the test module 334 configures the web page according to the first content configuration.
- the web page including the first video is presented to any users.
- the analytics server 123 generates a first set of video-aware analytics data for the first content configuration.
- the test module 334 receives a second content configuration with a second video present in the same location as the first video (i.e., the first location).
- the test module 334 configures the web page according to the second content configuration and the web page including the second video is presented to any users.
- the analytics server 123 generates a second set of video- aware analytics data for the second content configuration.
- the analytics server 123 optimizes content of the web page using the first set and the second set of video-aware analytics data.
- the test module 334 receives a first content configuration with data describing web page having a first thumbnail for a video. The test module 334 configures the web page according to the first content configuration. The web page with the first thumbnail for the video is presented to any users.
- the analytics server 123 generates a first set of video-aware analytics data for the first content configuration.
- the test module 334 receives a second content configuration with a second thumbnail for the same video and configures the web page according to the second content configuration. The web page with the second thumbnail for the video is presented to any users.
- the analytics server 123 generates a second set of video-aware analytics data for the second content configuration.
- the analytics server 123 optimizes content of the web page using the first set and the second set of video-aware analytics data.
- the test module 334 receives a first content configuration with data describing a web page having a pre -roll advertisement ("ad") for the video.
- the test module 334 configures the web page according to the first content configuration and the web page with the pre-roll ad for the video is presented to any users.
- the analytics server 123 generates a first set of video-aware analytics data for the first content configuration.
- the test module 334 receives a second content configuration with a mid-roll ad for the video and configures the web page according to the second content configuration.
- the web page with the mid-roll ad for the video is presented to any users.
- the analytics server 123 generates a second set of video-aware analytics data for the second content configuration.
- the test module 334 receives a third content configuration with a post-roll ad for the video and configures the web page according to the third content configuration.
- the web page with the post-roll ad for the video is presented to any users.
- the analytics server 123 generates a third set of video-aware analytics data for the third content configuration.
- the analytics server 123 optimizes content of the web page using the first set, the second set and the third set of video-aware analytics data.
- the analytics server 123 includes a network adapter 402 coupled to a bus 404.
- the bus 404 also coupled to the bus 404 are at least one processor 406, a memory 408, a graphics adapter 410, an input device 412, a storage device 414, an analytics engine 125, an analytics store 420, an advertisement storage ("ad storage") 425 and a communication device 450.
- the functionality of the bus 404 is provided by an interconnecting chipset.
- the analytics server 123 also includes a display 418, which is coupled to the graphics adapter 410.
- the input device 412, the graphics adapter 410 and the display 418 are depicted using dashed lines to indicate that they are optional features of the analytics server 123.
- the analytics server 123 can have different and/or other components than those shown in Figure 4.
- the storage device 414 can be local and/or remote from the analytics server 123 (such as embodied within a storage area network (SAN)).
- SAN storage area network
- the analytics server 123 is adapted to execute computer program modules for providing functionality described herein.
- module refers to computer program logic utilized to provide the specified functionality.
- a module can be implemented in hardware, firmware, and/or software.
- program modules are stored on the storage device, loaded into the memory, and executed by the processor 406.
- Embodiments of the entities described herein can include other and/or different modules than the ones described here.
- the functionality attributed to the modules can be performed by other or different modules in other embodiments.
- this description occasionally omits the term "module" for purposes of clarity and convenience.
- the network adapter 402 is an interface that couples the analytics server 123 to a local or wide area network.
- the network adapter 402 is a network controller that couples to the network 150 via signal line 199 for data communication between the analytics server 123 and other components of the system 100.
- the network adapter 402 is communicatively coupled to a wireless network (e.g., a wireless local area network) via a wireless channel 433.
- the processor 406 is any general-purpose processor.
- the processor 406 comprises an arithmetic logic unit, a microprocessor, a general purpose controller or some other processor array to perform computations, provide electronic display signals to the display 418.
- the processor 406 is coupled to the bus 404 for communication with the other components of the analytics server 123.
- the processor 406 processes data signals and may comprise various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. Although only a single processor is shown in Figure 4, multiple processors may be included.
- CISC complex instruction set computer
- RISC reduced instruction set computer
- the analytics server 123 also includes an operating system executable by the processor 406 such as but not limited to WINDOWS®, MacOS X, Android, or UNIX® based operating systems.
- the memory 408 holds instructions and data used by the processor 406. The instructions and/or data comprise code for performing any and/or all of the techniques described herein.
- the memory 408 may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, flash memory or some other memory device known in the art.
- the memory 408 also includes a non-volatile memory such as a hard disk drive or flash drive for storing log information on a more permanent basis.
- the memory 408 is coupled by the bus 404 for communication with the other components of the analytics server 123.
- the analytics engine 125 is stored in the memory 408 and executable by the processor 346.
- the storage device 414 is any device capable of holding data, like a hard drive, compact disk read-only memory (CD-ROM), DVD, or a solid-state memory device.
- the storage device 414 is a non- volatile memory device or similar permanent storage device and media.
- the storage device 414 stores data and instructions for the processor 408 and comprises one or more devices including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage device known in the art.
- the storage device 414 includes instructions and/or data for maintaining metadata associated with video data, for modifying stored metadata or for retrieving stored video data or stored metadata associated with stored video data.
- instructions and/or data stored by the storage device 414 are described herein as different functional "modules,” where different modules are different instructions and/or data included in the storage device that cause the described functionality when executed by the processor 406.
- the input device 412 may include a mouse, track ball, or other type of pointing device to input data into the analytics server 123.
- the input device 412 may also include a keyboard, such as a QWERTY keyboard.
- the input device 412 may also include a microphone, a web camera or similar audio or video capture device.
- the graphics adapter 410 displays images and other information on the display 418.
- the display 418 is a conventional type such as a liquid crystal display (LCD) or any other similarly equipped display device, screen, or monitor.
- the display 418 represents any device equipped to display electronic images and data as described herein.
- the communication device 450 transmits data from the analytics server 123 to the network 150 and receives data from the network 150.
- the communication device 450 is coupled to the bus 404.
- the communication device 450 also exchanges data with one or more of the CMS 1 10, the data store 120, the cache 130 and/or one or more ad servers 140 using communication channels other than the network 150.
- the communication device 450 includes a port for direct physical connection to the network 150 or to another communication channel.
- the communication device 450 includes a USB, SD, CAT-5 or similar port for wired communication with the network 150.
- the communication device 450 includes a wireless transceiver for exchanging data with the network 150, or with another communication channel, using one or more wireless communication methods, such as IEEE 802.11, IEEE 802.16, BLUETOOTH® or another suitable wireless communication method.
- the communication device 450 includes a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service (SMS), multimedia messaging service (MMS), hypertext transfer protocol (HTTP), direct data connection, WAP, e-mail or another suitable type of electronic communication.
- SMS short messaging service
- MMS multimedia messaging service
- HTTP hypertext transfer protocol
- the communication device 450 includes a wired port and a wireless transceiver.
- the communication device 450 also provides other conventional connections to the network 150 for distribution of files and/or media objects using standard network protocols such as TCP/IP, HTTP, HTTPS and SMTP as will be understood to those skilled in the art.
- the analytics engine 125 includes code and routines when executed by the processor 406 for analyzing web interaction data associated with a web page and any requests received from the media player 115.
- the analytics engine 125 is communicatively coupled to the bus 404 for communication with other components of the analytics server 123.
- the analytics engine 125 provides logic and instructions for generating video- aware analytics data and optimizing content of a web page based at least in part on the video- aware analytics data.
- optimizing content of a web page comprises determining an optimized content configuration based at least in part on a comparison of a first set of video-aware analytics data and a second set of video-aware analytics data. The optimum configuration is a configuration having the best web analytics data.
- the analytics engine 125 receives a first set of web interaction data and a second set of web interaction data from a web page loaded on a browser of the user device 160.
- the analytics engine 125 determines a first content configuration associated with the first set of web interaction data and a second content configuration associated with the second set of web interaction data.
- the analytics engine 125 receives a first request and a second request from a media player 1 15.
- the first request can be from a first media player 115 operating on the first user device 160B and the second request can be from a second media player 115 operating on the second user device 160C.
- the first request is associated with the first content configuration and the second request is associated with the second content configuration.
- the analytics engine 125 extracts a first set of event data from the first request and a second set of event data from the second request.
- the analytics engine 125 generates a first set of video-aware analytics data based at least in part on the first set of web interaction data and the first set of event data.
- the analytics engine 125 generates a second set of video- aware analytics data based at least in part on the second set of web interaction data and the second set of event data.
- the analytics engine 125 determines an optimized content configuration based at least in part on a comparison of the first set of video-aware analytics data and the second set of video-aware analytics data. For example, in one embodiment, the first set of video-aware analytics data and the second set of video-aware analytics data are used by the analytics engine 125 for A/B testing to determine which of the first and second configurations results in the best web analytics for the web page.
- the analytics engine 125 is implemented in hardware (e.g., FPGAs, ASICs, etc.). In another embodiment, the analytics engine 125 includes software routines and instructions that are stored, for example, in the memory 408 and/or storage device 414 and executable by the processor 406 to cause the processer 406 to implement functionalities described herein.
- the analytics engine 125 includes a communication module 460, an advertisement determination module ("ad determination module") 465, a configuration analysis module 467, a request analysis module 470, a metric determination module 475, an analytics module 480, an optimization module 483 and a reporting module 485. These components of the analytics engine 125 are communicatively coupled to each other.
- the ad determination module 465 is depicted using a dashed line to indicate that it is an optional feature of the analytics engine 125.
- the communication module 460 includes code and routines for handling communication between the analytics engine 125 and other components of the analytics server 123.
- the communication module 460 receives requests that include event data describing interaction with a video from the media player 1 15 launched on a user device 160 via the network 150 and the communication device 450.
- the communication module 460 receives web interaction data from web pages loaded in a browser that is executed on a user device 160 via the network 150 and the communication device 450.
- the communication module 460 sends a report generated by the reporting module 485 to a user operating on a user device 160.
- the reporting module 485 sends the report to an administrator of the web page and the administrator is a user of a computing device such as the user device 160.
- the communication module 460 sends data stream for an ad to the media player 1 15 launched on a user device 160.
- the ad determination module 465 includes code and routines for determining an ad to be played on the media player 1 15. For example, the ad determination module 465 parses metadata associated with a video (e.g., a keyword describing the video) and selects an ad from the ad storage 425 based at least in part on the parsed metadata. In one embodiment, an ad associated with a video is pre-determined by a publisher (e.g., an administrator of the third party video server 180) when publishing the video and the ad determination module 465 retrieves the pre-determined ad for the video from the ad storage 425 using the video ID.
- a publisher e.g., an administrator of the third party video server 180
- the ad determination module 465 retrieves analytics data for a video from the analytics store 420 and determines an ad for the video based at least in part on the analytics data. For example, if the analytics data shows that 60% of the referrers of the video are geographically located in Asia, the ad determination module 465 selects an ad related to a product that is popular in Asia.
- the ad determination module 465 determines when to play the ad during the viewing process of the video. For example, the ad determination module 465 determines whether to play the ad before playing the video (e.g., a pre-roll ad), in the middle of playing the video (e.g., a mid-roll ad) or after playing the video (e.g., a post roll ad).
- the configuration analysis module 467 includes code and routines for determining a content configuration for a web page based at least in part on web interaction data associated with the web page and/or requests generated by a media player 1 15.
- the communication module 460 receives web interaction data from a web page loaded on a user device 160 via the communication device 450 and the network 150 and delivers the web interaction data to the configuration analysis module 467.
- the configuration analysis module 467 extracts an indication identifying a content configuration from the web interaction data and determines a content configuration for the web page based at least in part on the indication. For example, the configuration analysis module 467 obtains an indication identifying a content configuration for the web page from the web interaction data and retrieves the content configuration using the indication from the storage device 314 via the network 150, the communication device 450 and the communication module 460.
- the configuration analysis module 467 stores the retrieved content configuration and the indication in the configuration data 530 of the analytics store 420.
- the configuration data 530 is described below with reference to Figure 5.
- the configuration analysis module 467 sends the web interaction data to the metric determination module 475.
- the configuration analysis module 467 stores the web interaction data in the interaction data 535 of the analytics store 420.
- the interaction data 535 is described below with reference to Figure 5.
- the configuration analysis module 467 receives a request from a media player 1 15 associated with a user device 160.
- the configuration analysis module 467 extracts an indication identifying a content configuration from the request and determines the content configuration based at least in part on the indication. For example, the configuration analysis module 467 obtains an indication identifying a content configuration from the request and retrieves the content configuration using the indication from the storage device 314 via the network 150 and the communication module 460.
- the configuration analysis module 467 stores the content configuration and the indication in the configuration data 530 of the analytics store 420.
- the configuration analysis module 467 sends the request to the request analysis module 470.
- the configuration analysis module 467 associates the web interaction data and the requests that are related to the same content configuration for the same web page. For example, the configuration analysis module 467 generates a table listing associations for the web interaction data and the requests that relate to the same content configuration for the same web page and stores the table in the analytics store 420.
- the request analysis module 470 includes code and routines for analyzing a request.
- the request analysis module 470 is a parser parsing a request to extract one or more of a video ID, a video version, a URL to view a video and event data describing an event.
- the request analysis module 470 stores the video ID in the video identification data 505, the video version in the video version log 510 and the event data as a portion of event data 520 in the analytics store 420.
- the video identification data 505, the video version log 510 and the event data 520 are described below with reference to Figure 5.
- the request analysis module 470 also stores the URL in the analytics store 420.
- the request analysis module 470 sends the event data to the metric determination module 475.
- the metric determination module 475 includes code and routines for determining one or more web metrics for web interaction data and/or one or more video metrics for event data.
- a web metric is a term categorizing the web interaction data. For example, a web metric is a category describing one of page views, unique page views, bounce rate, session time for a website, etc.
- a video metric is a term categorizing the event data.
- a video metric is a category describing one of video views, unique video views, video views with a viewing of at least 25% of a video, video views with a viewing of at least 50% of a video, video views with a viewing of at least 75% of a video, video views with a viewing of 100% of a video, monetizable views, an ad being watched, an ad being clicked, an ad being abandoned, dropping off a video, age-gating, user login, generating a queue for playback, saving for later view and any other events triggered by a publisher's customization of the media player 115.
- the metric determination module 475 receives the web interaction data from the configuration analysis module 467 and determines one or more web metrics for the web interaction data. For example, the metric determination module 475 receives web interaction data describing that a new visitor is visiting a web page and determines at least two web metrics for the web interaction data such as "page views" and "unique page views.” The metric determination module 475 stores the web metrics in the metric categories 515 of the analytics store 420. The metric categories 515 are described below with reference to Figure 5. In another embodiment, the metric determination module 475 receives event data from the request analysis module 470 and determines one or more video metrics for the event data.
- the metric determination module 475 receives event data describing that a user has clicked a mid-roll ad and determines "an ad being clicked" as a video metric for the event data.
- the metric determination module 475 stores the video metric in the metric categories 515 of the analytics store 420.
- the metric determination module 475 determines whether the web metric is a new web metric.
- the metric determination module 475 maintains a list of web metrics and determines a web metric as a new web metric if the web metric is not in the list.
- the metric determination module 475 adds the new web metric to the list and stores the list in the analytics store 420.
- the analytics module 480 includes code and routines for analyzing web interaction data and event data to generate video-aware analytics data. For example, the analytics module 480 retrieves the web interaction data associated with a content
- the analytics module 480 generates a set of video- aware analytics data related to the content configuration for the web page using the web interaction data and the event data. In one embodiment, the analytics module 480 generates different sets of video-aware analytics data related to different content configurations for the web page, respectively. [0141] In one embodiment, the analytics module 480 retrieves a content configuration for a web page from the configuration data 530. Next, the analytics module 480 retrieves web interaction data associated with the content configuration from the interaction data 535 and web metrics associated with the web interaction data from the metric categories 515. The analytics module 480 calculates values for the web metrics using the web interaction data.
- the analytics module 480 calculates values for the web metrics (e.g., page views, unique page views) describing that there are 1,000,000 page views and 980,000 unique page views for the web page configured according to the content configuration in one month. Additionally, the analytics module 480 retrieves event data associated with the content configuration from the event data 520 and video metrics for the event data from the metric categories 515. The analytics module 480 calculates values for the video metrics using the event data. For example, the analytics module 480 calculates values for the video metrics (e.g., video views, unique video views) describing that there are 800,000 video views and 780,000 unique video views for a video embedded in the web page configured according to the content configuration in one month.
- the video metrics e.g., video views, unique video views
- the analytics module 480 generates video-aware analytics data based at least in part on the values for the web metrics and the values for the video metrics. For example, the analytics module 480 generates video-aware analytics data by combining the values for the web metrics and the values for the video metrics so that the video-aware analytics data describes that there are 1,000,000 page views, 980,000 unique page views, 800,000 video views and 780,000 unique video views for the web page configured according to the content configuration in one month.
- the video-aware analytics data includes the values for the web metrics, the values for the video metrics and other analytics data generated by the analytics module 480.
- the video-aware analytics data further includes a 10% bounce rate for the 1,000,000 page views and a 15% conversion rate for the web page, etc.
- the analytics module 480 stores the video-aware analytics data, the values for the web metrics and the values for the video metrics in the analytics data 525 of the analytics store 420.
- the analytics data 525 is described below with reference to Figure 5.
- the analytics module 480 sends the video-aware analytics data to the optimization module 483 and the reporting module 485, respectively.
- the analytics module 480 analyzes the web interaction data and/or the event data to extract geographic data associated with the web interaction data and/or the event data. For example, the analytics module 480 analyzes the web interaction data received from a user device 160 and determines an IP address for the user device 160. The analytics module 480 stores the geographic data in the analytics store 420.
- the optimization module 483 includes code and routines for optimizing content of a web page. For example, the optimization module 483 optimizes content of a web page based at least in part on two sets of video-aware analytics data related to two different content configurations of the web page. The optimization module 483 receives the two sets of video-aware analytics data from the analytics data 525, respectively. The optimization module 483 compares the two sets of video-aware analytics data to generate a comparison result and selects one of the two content configurations as an optimized content configuration for the web page based at least in part on the comparison result.
- the optimization module 483 compares two sets of video-aware analytics data and generates a result describing that the first content configuration has more conversions and a higher conversion rate than the second content configuration. The optimization module 483 therefore selects the first content configuration as the optimized content configuration for the web page.
- the optimization module 483 generates an optimized content configuration for a web page based at least in part on three or more sets of video- aware analytics data. For example, the optimization module 483 compares three sets of video-aware analytics data associated with three different content configurations for the web page and selects the content configuration with the most conversions as the optimized content configuration. [0146] The optimization module 483 stores the optimized content configuration in the configuration data 530. In one embodiment, the optimization module 483 sends the optimized content configuration to the CMS 110 so that the CMS system 110 configures the web page according to the optimized content configuration.
- the reporting module 485 includes code and routines for generating a report to a user. For example, the reporting module 485 retrieves video-aware analytics data from the analytics data 525 and generates a report including the video-aware analytics data. In one embodiment, the reporting module 485 includes data describing one or more predefined reports to expedite generation of the predefined reports.
- a predefine report is a report with content predefined by an administrator. For example, a predefined report is a video viewing report with predefined contents such as total video views and unique video views for a video.
- the reporting module 485 receives a selection of a predefined report from a user, retrieves analytics data (e.g., values for web metrics, values for video metrics, video-aware analytics data, etc.) from the analytic store 420 and generates the selected predefined report.
- analytics data e.g., values for web metrics, values for video metrics, video-aware analytics data, etc.
- the reporting module 485 instructs a user interface module (not pictured) to generate graphical data for providing a user interface to a user (e.g., a publisher of a web page), allowing the user to specify parameters for generating a customized report.
- a customized report is a report customized by a user.
- a customized report is a report describing video-aware analytics data within geographic locations specified by a user.
- the parameters for generating a report are web metrics and/or video metrics.
- the parameters for generating a report are metrics such as conversion rate, page views, unique page views, bounce rate and video views.
- the reporting module 485 retrieves video-aware analytics data associated with the parameters from the analytics data 525.
- the reporting module 485 constructs one or more of charts, diagrams and tables using the retrieved video-aware analytics data.
- the reporting module 485 generates a table including fields such as page views, unique page views, bounce rate, video views and unique video views.
- the reporting module 485 generates a report including the video-aware analytics data by incorporating the charts, diagrams and tables into the report.
- the reporting module 485 retrieves geographic data associated with a content configuration from the analytics store 420 and generates a map describing the distribution of the video-aware analytics data according to different geographic locations. The reporting module 485 incorporates the map into the report.
- the analytics store 420 is a persistent storage device that stores data received from one or more of a user device 160, a media player 1 15, the analytics engine 125 and the communication device 450.
- the analytics store 420 stores one or more of video IDs, video versions, video metrics, event data, location data with video URLs, geographic data for web interaction data and/or event data, web interaction data and other analytics data generated by the analytics module 480 such as video-aware analytics data.
- the analytics store 420 stores web interaction data and requests (or, event data) using a visit identifier, so that interactions with web pages and video data during a visit are maintained according to the visit identifier.
- the analytics store 420 is further described below with reference to Figure 5.
- the advertisement storage (“ad storage”) 425 is a persistent storage device that stores data for playback of an ad.
- the ad storage 425 stores one or more ads to be displayed before, during or after playback of a video.
- the ad storage 425 stores metadata for an ad (e.g., a title, a keyword and a description for the ad), allowing the ad determination module 465 to determine an ad for a video by matching the metadata of the ad against the metadata of the video.
- the ad determination module 465 compares a keyword describing the video with keywords for the ads stored in the ad storage 425 and selects an ad with the same keyword as the video.
- the ad storage 425 stores rules for displaying advertisements as pre-roll ads (e.g., ads played before playing a video), mid-roll ads (e.g., ads played in the middle of playing a video) and past-roll ads (e.g., ads played after playing a video).
- pre-roll ads e.g., ads played before playing a video
- mid-roll ads e.g., ads played in the middle of playing a video
- past-roll ads e.g., ads played after playing a video
- FIG. 5 is a block diagram illustrating one embodiment of the analytics store
- the analytics store 420 includes video identification data 505, a video version log 510, metric categories 515, event data 520, analytics data 525, configuration data 530, interaction data 535, report data 540 and graphics data 545.
- the analytics store 420 may store additional data not depicted in Figure 5, such as location data for a video, domain restriction data for a media player 115 and other data to provide functionalities described herein.
- the video identification data 505 is data identifying one or more videos.
- the video identification data 505 includes one or more of a unique video ID that distinguishes a video from another video, a publisher, a published time and a title for a video, etc.
- the video version log 510 is a log of data describing various video versions for a video.
- the video version log 510 stores a video version (e.g., a second version of a video) included in a request and an association between the video version and event data included the same request.
- the video version log 510 includes all the video versions for a video and an association between each video version and the event data related to the video version.
- the metric categories 515 are data describing web metrics for web interaction data and/or video metrics for event data.
- the metric categories 515 stores a first list of web metrics for web interaction data and a second list of video metrics for event data received from media players 115.
- the metric categories 515 stores web metrics and/or video metrics in one of a list, a table, a queue and/or other data structures.
- the event data 520 is data describing events.
- the event data 520 describes events occurring in the media player 115 embedded in a web page loading on a user device 160.
- the event data 520 includes data describing user interactions with the video included in the web page.
- the event data 520 includes data describing that a user is marking the video as a favorite video.
- the analytics data 525 is data received from the analytics engine 125.
- the analytics data 525 includes one or more of video-aware analytics data, geographic data associated with page views and/or video views, values for web metrics, values for video metrics and other analytics results generated by the analytics engine 125.
- the analytics data 525 provides a basis for generating a report to a user.
- the reporting module 485 retrieves a portion of the analytics data 525 from the analytics store 420 based at least in part on parameters for a report and generates the report using the portion of analytics data 525.
- the configuration data 530 includes data describing content configurations for one or more web pages.
- the configuration data 530 includes all the content configurations for a web page and the corresponding indication for each content
- the interaction data 535 is data describing interaction with one or more web pages.
- the interaction data 535 includes web interaction data associated with one or more web pages.
- the web interaction data for each web page is stored in a section of the analytics store 420 specified for the web page.
- the report data 540 is data describing reports generated by the reporting module 485.
- the reports include at least two types of reports, i.e., predefined reports and customized reports. In each type, the reports can be sharing reports, discovery reports, comparison reports, daily reports, year-end reports, etc.
- the report data 540 also include data describing predefined reports.
- the report data 540 include report templates for all styles.
- the report data 540 are saved for a predetermined period of time.
- the reporting module 485 uses historical reports to generate new reports, such as year-end reports and comparison reports for a set of different time periods.
- the graphics data 545 are graphical data used by the reporting module 485 to perform its function.
- the graphics data 545 includes graphical data used by the reporting module 485 to generate reports, charts, maps, pictures and any other graphics necessary for the reporting module 485 to perform its function.
- Figure 6A illustrates an event diagram of a method for capturing web interaction data and requests according to one embodiment.
- the user device 160 loads 601 a web page that is configured according to a content configuration.
- the user device 160 establishes a connection to the analytics engine 125 and, optionally, sends 602 web interaction data to the analytics engine 125 if any interaction with the web page is detected. For example, if a user has clicked a hyperlink in the web page, a browser 220 executed in the user device 160 sends web interaction data describing the user clicking the hyperlink to the analytics engine 125.
- the user device 160 sends web interaction data to the analytics engine 125 whenever interaction with the web page is detected (e.g., before playing a video, during playing a video, after playing a video, etc.).
- the user device 160 loads 603 a media player 115 for presenting the video to a user.
- the media player 1 15 transmits 604 a load request to the analytics engine 125.
- the load request is generated by the media player 115 responsive to a load event indicating that the media player 115 is loading on the user device 160.
- the analytics engine 125 receives the load request from the user device 160.
- the analytics engine 125 determines 606 an ad to be played and sends the ad to the media player 115.
- the ad determination module 465 comprised within the analytics engine 125 determines an ad for the video by retrieving an ad stored in the ad storage 425 that matches a keyword of the video.
- the media player 115 receives 608 the data stream for the ad from the analytics engine 125. Steps 606 and 608 are depicted using dashed lines to indicate that they are optional features.
- the media player 1 15 receives the data stream for an ad from one of the third party ad server 190 and the ad server 140.
- the ad begins 610 playing in the media player 1 15. Since the ad is played before viewing the video, the ad is a pre-roll ad.
- the media player 115 sends 612 an ad start request to the analytics engine 125.
- the ad start request includes event data describing that the pre-roll ad has started playback. In one embodiment, the ad start request includes event data describing any other events that have occurred since the last request was sent.
- the media player 1 15 While playing the pre-roll ad, the media player 1 15 sends 614 an ad progress request to the analytics engine 125 at predetermined intervals defined by an administrator (e.g., every two seconds).
- the ad progress request includes event data describing how much of the ad has been played back on the media player 1 15 and any other events that have occurred since the last request was sent to the analytics engine 125.
- the media player 115 sends 616 one or more ad checkpoint requests to the analytics engine 125 at one or more checkpoints such as playback of 25%, 50%, 75% and 100% of the total length of the ad.
- the ad checkpoint request includes event data describing the percentage of the ad that has been played back on the media player 1 15 and any other events that occurred since the last request was sent to the analytics engine 125. If the ad completes 618 playing without abandonment, the media player 115 sends 620 an ad end request to the analytics engine 125 to indicate completion of playing the ad.
- the ad end request includes event data describing that the entire ad was played back on the media player 115 and any other events that occurred since the last request was sent to the analytics server 125. [0169] After the completion of playing the ad, the media player 115 sends 622 a view request to the analytics engine 125 to indicate video playback has begun.
- the view request includes event data describing that the video has begun playback and any other events that occurred since the last request was sent to the analytics server 125.
- the playback of the video begins 624.
- the media player 115 sends 626 a video progress request to the analytics engine 125 at predetermined intervals.
- the video progress request includes event data describing how much of the video has been played back and any other events that occurred since the last request was sent to the analytics server 125.
- the media player 115 also sends 628 one or more view checkpoint requests to the analytics engine 125 at one or more checkpoints such as playback of 25%, 50%, 75% and 100% of the total length of the video.
- the view checkpoint request includes event data describing the percentage of the video that has been played back on the media player 115 and any other events that occurred since the last request was sent to the analytics engine 125.
- the media player 115 sends 630 a view end request to the analytics engine 125 to indicate completion of playing the video.
- the view end request includes event data describing that playback of the video has ended and describing any other events that occurred since the last request was sent to the analytics engine 125.
- FIG. 6B illustrates an event diagram of a method for capturing web interaction data and requests according to another embodiment.
- the user device 160 loads 631 a web page that is configured according to a content configuration.
- the user device 160 establishes a connection to the analytics engine 125 and, optionally, sends 632 web interaction data to the analytics engine 125 if any interaction with the web page is detected.
- the user device 160 sends web interaction data to the analytics engine 125 whenever interaction with the web page is detected (e.g., before playing a video, during playing a video or after playing a video, etc.).
- the user device 160 loads 633 a media player
- the media player 115 transmits 634 a load request to the analytics engine 125.
- the media player 1 15 sends 636 a view request to the analytics engine 125.
- the playback of the video begins 638.
- the media player 1 15 sends 640 one or more view progress requests to the analytics engine 125 at one or more predetermined intervals.
- the media player 115 sends 642 one or more view checkpoint requests to the analytics engine 125.
- the analytics engine 125 determines 644 an ad to be played for the video.
- the media player 1 15 receives 646 data stream for playing the ad from the analytics engine 125.
- Steps 640-646 are depicted using dashed lines to indicate that they are optional features to the method.
- the media player 115 receives data stream for an ad from one of the third party ad server 190 and the ad server 140.
- the media player 115 sends 650 a view pausing request to the analytics engine 125 to indicate that the video is paused in the media player 115.
- the view pausing request includes event data describing the pausing of video playback and event data describing any other events that have occurred since the last request was sent to the analytics engine 125.
- the media player 1 15 buffers the data stream for the ad and the ad begins 652 to play. Since the ad is played in the middle of playing the video, the ad is referred to as a mid-roll ad.
- the media player 1 15 sends 654 an ad start request to the analytics engine 125.
- the media player 1 15 also sends 656 an ad progress request to the analytics engine 125 at predetermined intervals.
- the media player 115 sends 658 one or more ad checkpoint requests to the analytics engine 125.
- the media player 115 sends 662 an ad end request to the analytics engine 125 to indicate completion of playing the ad 660.
- the playback of the video continues 664 and the media player 115 sends 666 a view continuing request to the analytics engine 125 to indicate continuing to play the video.
- the view continuing request includes event data describing that playback of the video has resumed.
- the view continuing request also includes event data describing any other events that have occurred since the last request was sent.
- the event data describes how the user interacted with the ad, such as muting the volume during playback of the ad, minimizing the screen of the advertisement during playback of the ad, clicking links and taking steps to purchase a product featured in the ad, etc.
- the media player 1 15 sends 668 a view progress request to the analytics engine 125.
- the media player 1 15 sends 670 one or more view checkpoint requests to the analytics engine 125 at one or more checkpoints.
- the media player 115 sends 672 a view end request to the analytics engine 125.
- Figure 6C illustrates an event diagram of a method for capturing web interaction data and requests according to yet another embodiment.
- the user device 160 loads 673 a web page that is configured according to a content configuration.
- the user device 160 establishes a connection to the analytics engine 125 and, optionally, sends 674 web interaction data to the analytics engine 125 if any interaction with the web page is detected.
- the user device 160 sends web interaction data to the analytics engine 125 whenever interaction with the web page is detected (e.g., before playing a video, during playing a video or after playing a video, etc.).
- the user device 160 loads 675 a media player
- the media player 115 transmits 676 a load request to the analytics engine 125.
- the media player 1 15 sends 678 a view request to the analytics engine 125.
- the playback of the video begins 680.
- the media player 1 15 sends 682 a view progress request to the analytics engine 125 at predetermined intervals.
- the media player 115 sends 684 one or more view checkpoint requests to the analytics engine 125.
- the media player 115 sends 686 a view end request to the analytics engine 125 to indicate completion of playing the video.
- the analytics engine 125 determines 688 an ad to be played.
- the media player 1 15 receives 689 the ad data stream from the analytics engine 125. Steps 688 and 689 are depicted using dashed lines to indicate that they are optional features of the method.
- the media player 115 receives data stream for an ad from one of the third party ad server 190 and the ad server 140.
- the media player 1 15 buffers the data stream for the ad.
- the ad begins 690 to play. Since the ad is played after viewing the video, the ad is referred to as a post-roll ad.
- the media player 1 15 sends 691 an ad start request to the analytics engine 125.
- the media player 1 15 sends 692 an ad progress request to the analytics engine 125 at predetermined intervals.
- the media player 115 sends 694 one or more ad checkpoint requests to the analytics engine 125. If the ad completes 696 playing without abandonment, the media player 115 sends 698 an ad end request to the analytics engine 125.
- Figure 7 illustrates an event diagram of a method for capturing and associating web interaction data and video interaction data (e.g., requests from a media player 115) according to one embodiment.
- the user device 160 receives a web page including video data from a destination site 170.
- the user device 160 loads 705 the web page.
- the user device 160 processes data, such as a structured document, to display the web page from the destination site 170.
- the user device 160 loads 710 a media player 115 included in the web page.
- the user device 160 executes embed code included in the web page, causing the media player 115 to be loaded.
- the media player 1 15 establishes
- the media player 1 15 transmits 720 various requests to the analytics engine 125.
- the media player 115 transmits a request to the analytics engine 125 at predetermined intervals. For example, the media player 115 transmits a view progress request to the analytics engine 125 every 10 seconds when playing the video.
- the media player 1 15 transmits a request to the analytics engine 125 responsive to an event occurring in the media player 1 15. For example, the media player 1 15 transmits a view end request to the analytics engine 125 in response to the completion of playing a video.
- the analytics engine 125 stores 725 the requests in the analytics store 420. As the media player 115 transmits additional requests, the analytics engine 125 stores the additional requests. In addition to storing requests, the analytics engine 125 also stores web interaction data if the website maintained by the destination site 170 is also tracked by the analytics engine 125. However, even if the website maintained by the destination site 170 is not tracked by the analytics engine 125, the requests are stored to allow monitoring and analyzing interactions with video data.
- the media player 115 determines 730 whether a tracking cookie included in the web page matches a media player cookie associated with the media player 1 15. If a website is being tracked by the analytics engine 125, web pages comprising the web site include a tracking cookie.
- the tracking cookie included in the web page is a first party cookie.
- the tracking cookie is associated with a domain used by the destination site 170 to maintain the website.
- the tracking cookie included in a web page tracked by the analytics engine 125 includes a visitor identifier, a visit identifier, a user identifier and data associated with the web page.
- the analytics engine 125 uses a third-party cookie for the media player cookie.
- the third-party media player cookie is associated with a domain that differs from the domain used by the destination site 170 to maintain the website.
- the media player cookie is associated with a domain related to the analytics engine 125.
- the analytics engine 125 allows access to the video data presented by the media player 115 to be tracked across different domains.
- the third-party media player cookie includes a user identifier that is the same across different websites that present the video data allowing data to be captured about interactions for video data even if the video data is copied to different websites.
- the media player 1 15 determines whether the user identifier of the tracking cookie matches the user identifier of the media player cookie. If the media player 1 15 determines that the tracking cookie matches the media player cookie, interactions with the web page are transmitted 735 from the user device 160 to the analytics engine 125 via the network 150. By determining if the user identifier of the tracking cookie and the user identifier of the media player cookie match, the media player 1 15 initially determines whether the website and the video data are commonly owned before transmitting web interaction data to the analytics server 125.
- the media player 115 determines that the user identifier of the tracking cookie and the user identifier of the media player cookie match, the media player 115 associates a session identifier with the tracking cookie and the media player cookie.
- the analytics server 125 stores 740 the web interaction data in the analytics store 420 and associates 745 the stored requests with the stored web interaction data.
- the analytics server 125 separately receives the web interaction data and the requests and then associates the web interaction data and the requests.
- the analytics engine 125 associates requests and web interaction data using the session identifier associated with the tracking cookie and the media player cookie.
- the reporting module 485 of the analytics engine 125 generates 750 a report based at least in part on an analysis of the web interaction data and the requests. For example, the reporting module 485 constructs charts, tables and statistics using video-aware analytics data generated from the web interaction data and event data included in the requests. [0191] However, if the media player 115 determines 730 that the media player cookie does not match the tracking cookie, web interaction data is not transmitted to the analytics engine 125.
- the analytics engine 125 still stores 725 requests to enable tracking of interactions with video data.
- Figure 8 is a flow diagram illustrating one embodiment of a method 730 for determining whether a media player cookie matches a web page tracking cookie.
- the steps identified by Figure 8 are performed by the media player 1 15 executing on the user device 160.
- the media player 1 15 determines 810 whether a tracking cookie is associated with the web page in which the media player 115 is launched. For example, the media player 1 15 places a call to the web page to identify the web page tracking cookie. If no information identifying the web page tracking cookie is received from the web page or if the media player 115 is otherwise unable to identify the web page tracking cookie, the method ends. Accordingly, web interaction data is not transmitted to the analytics engine 125 because the web page is not being tracked by the analytics engine 125; however, requests from the media player 115 are transmitted to the analytics engine 125 to allow tracking of interactions for video data.
- the media player 115 determines 810 that a web page tracking cookie is associated with the web page, the media player 115 identifies 820 a user identifier ("user ID") associated with the web page tracking cookie.
- the web page communicates the web page tracking cookie or data identifying the web page tracking cookie to the media player 115.
- the media player 1 15 identifies 820 the user identifier associated with the web page tracking cookie.
- the web page identifies 820 the user identifier associated with the web page tracking cookie.
- the media player 1 15 determines 830 whether the user identifier associated with the web page tracking cookie matches a user identifier associated with the media player cookie. If the user identifier associated with the web page tracking cookie does not match a user identifier associated with the media player cookie, the method ends and web interaction data is not transmitted to the analytics engine 125. For example, if the user identifier associated with the web page tracking cookie differs from the media player cookie, the web page and the media player 115 are owned by different entities so that web interaction data is not transmitted. However, the requests from the custom media player 1 15 are transmitted to the analytics engine 125.
- the media player 1 15 Responsive to the user identifier associated with the web page tracking cookie matching the user identifier associated with the media player cookie, the media player 1 15 initiates a command to establish 840 a connection between the user device 160 and the analytics engine 125.
- the media player 1 15 associates a session identifier with the tracking cookie and the media player cookie. The session identifier is included with the web interaction data and the requests transmitted to the analytics engine
- Associating a session identifier with the requests and the web interaction data allows the analytics engine 125 to associate the received web interaction data and requests with each other in a session that includes web interaction data and requests.
- Figures 9A-9E are flow diagrams illustrating one embodiment of a method 900 for capturing web interaction data and event data. Turning to Figure 9A, the
- the communication module 460 receives 902 web interaction data from a web page loaded in a user device 160. In one embodiment, the web page is tracked by the analytics engine 125. The communication module 460 delivers the web interaction data to the configuration analysis module 467. The configuration analysis module 467 determines 904 a content configuration for the web page from the web interaction data. For example, the configuration analysis module 467 extracts an indication identifying a content configuration from the web interaction data and retrieves the content configuration from the storage device 314 in the CMS 1 10 using the indication. The configuration analysis module 467 stores 906 the content configuration in conjunction with the indication as a portion of configuration data 530 in the analytics store 420. The configuration analysis module 467 sends the web interaction data to the metric determination module 475.
- the metric determination module 475 determines 908 a web metric for the web interaction data. In one embodiment, the metric determination module 475 determines 910 whether the determined web metric is a new web metric. For example, the metric determination module 475 maintains a list of web metrics and determines the web metric for the web interaction data as a new metric if the web metric is not included in the list. If the web metric is determined to be a new metric, the method 900 moves to step 912. Otherwise, the method 900 moves to step 914. At step 912, the metric determination module 475 stores 912 the new web metric in the metric categories 515 of the analytics store 420. For example, the metric determination module 475 adds the new web metric to the list of web metrics and stores the list in the metric categories 515 of the analytics store 420. The metric
- the determination module 475 also stores 914 the web interaction data as a portion of interaction data 535 in the analytics store 420.
- a load request is sent from a media player 115 embedded in the web page to the analytics engine 125 when the media player 115 for playing the video is loaded on a user device 160.
- the communication module 460 receives 916 the load request and delivers the load request to the request analysis module 470.
- the communication module 460 delivers the load request to the configuration analysis module 467 and the configuration analysis module 467 determines a content configuration for the web page including the media player 115 for presenting the video.
- the configuration analysis module 467 associates the load request with the web interaction data related to the same content configuration for the same web page.
- the request analysis module 470 parses the load request and extracts 918 event data from the load request. For example, the request analysis module 470 determines a video ID, a video version, a URL for the video and event data included in the load request. The request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in a subroutine 999. [0201] Referring to Figure 9C, the sub-routine 999 is illustrated according to one embodiment. The metric determination module 475 receives the event data and determines 930 a video metric for the event data. In one embodiment, the metric determination module 475 determines 932 whether the video metric is a new video metric.
- the metric determination module 475 maintains a list of video metrics and determines the video metric as a new video metric if the video metric is not included in the list. If a new video metric is received, the sub-routine 999 moves to step 934. Otherwise, the sub-routine 999 moves to step 936.
- the metric determination module 475 stores the new video metric in the analytics store 420. For example, the metric determination module 475 adds the new video metric to the list of video metrics and stores the list in the analytics store 420. The metric determination module 475 also stores 936 event data in the analytics store 420.
- the ad determination module 465 determines an ad to be played in the media player 1 15. For example, the ad determination module 465 retrieves an ad associated with the video from the ad storage 425. The ad determination module 465 sends 922 the data stream for the ad to the media player 115. Steps 920 and 922 are depicted using dashed lines to indicate that they are optional features of the method 900. In one embodiment, the media player 115 receives data stream for an ad from one of the third party ad server 190 and the ad server 140.
- the 460 receives an ad start request from the media player 115 and delivers the ad start request to the request analysis module 470.
- the communication module 460 sends the ad start request to the configuration analysis module 467 and the configuration analysis module 467 associates the ad start request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the ad start request and extracts 926 event data from the ad start request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above. When the sub-routine 999 completes, the method 900 moves to step 928.
- the communication module 460 receives an ad progress request from the media player 115 at predetermined intervals and delivers the ad progress request to the request analysis module 470.
- the communication module 460 sends the ad progress request to the configuration analysis module 467 and the configuration analysis module 467 associates the ad progress request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the ad progress request and extracts 940 event data from the ad progress request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above. When the sub-routine 999 completes, the method 900 moves to step 942.
- the communication module 460 receives an ad checkpoint request from the media player 115 at a checkpoint (e.g., 25%, 50%, 75% and 100% of the ad) and delivers the ad checkpoint request to the request analysis module 470.
- a checkpoint e.g. 25%, 50%, 75% and 100% of the ad
- the communication module 460 sends the ad checkpoint request to the configuration analysis module 467 and the configuration analysis module 467 associates the ad checkpoint request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the ad checkpoint request and extracts 944 event data from the ad checkpoint request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above.
- the method 900 moves to step 946.
- the communication module 460 receives an ad end request from the media player 115 and delivers the ad end request to the request analysis module 470. In one embodiment, the communication module 460 sends the ad end request to the
- configuration analysis module 467 and the configuration analysis module 467 associates the ad end request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the ad end request and extracts 948 event data from the ad end request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above. When the sub-routine 999 completes, the method 900 moves to step 950.
- the communication module 460 receives a view request from the media player 1 15 indicating the video is starting to play and delivers the view request to the request analysis module 470.
- the communication module 460 sends the view request to the configuration analysis module 467 and the configuration analysis module 467 associates the view request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the view request and extracts 952 event data from the view request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above. When the sub-routine 999 completes, the method 900 moves to step 954.
- the communication module 460 receives a view progress request from the media player 115 at predetermined intervals and delivers the view progress request to the request analysis module 470.
- the communication module 460 sends the view progress request to the configuration analysis module 467 and the configuration analysis module 467 associates the view progress request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the view progress request and extracts
- step 956 event data from the view progress request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above. When the sub-routine 999 completes, the method 900 moves to step 958.
- the communication module 460 receives a view checkpoint request from the media player 1 15 at a checkpoint (e.g., 25%, 50%, 75% and 100% of the video) and delivers the view checkpoint request to the request analysis module 470.
- a checkpoint e.g. 25%, 50%, 75% and 100% of the video
- the communication module 460 sends the view checkpoint request to the configuration analysis module 467 and the configuration analysis module 467 associates the view checkpoint request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the view checkpoint request and extracts 960 event data from the view checkpoint request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above.
- the method 900 moves to step 962.
- the communication module 460 receives 962 a view end request from the media player 1 15 and delivers the view end request to the request analysis module 470.
- the communication module 460 sends the view end request to the configuration analysis module 467 and the configuration analysis module 467 associates the view end request to other requests and web interaction data associated with the same content configuration for the same web page.
- the request analysis module 470 parses the view end request and extracts 964 event data from the view end request.
- the request analysis module 470 sends the event data to the metric determination module 475 and the method 900 moves to step 930 included in the sub-routine 999.
- the method 900 continues to execute steps included in the sub-routine 999 as described above. When the sub-routine 999 completes, the method 900 ends.
- FIGS 10A and 10B are flow diagrams illustrating one embodiment of a method 1000 for generating video-aware analytics data.
- the analytics module 480 retrieves 1002 a content configuration for a web page from the analytics store 420.
- the analytics module 480 also retrieves 1004 web interaction data associated with the content configuration.
- the analytics module 480 retrieves 1006 one or more web metrics associated with the web interaction data and calculates 1008 one or more values for the one or more web metrics using the web interaction data. For example, the analytics module 480 calculates values for page views and unique page views using the web interaction data.
- the analytics module 480 retrieves 1010 event data associated with the content configuration for the web page from the analytics store 420.
- the analytics module 480 also retrieves 1012 one or more video metrics associated with the event data.
- the analytics module 480 retrieves 1014 the video identification data and a video version for the video included in the web page.
- the analytics module 480 calculates 1016 one or more values for the one or more video metrics using the event data. For example, the analytics module 480 calculates values for video views and unique video views from the event data. The analytics module 480 combines 1018 the one or more values for the one or more web metrics and the one or more values for the one or more video metrics to form video-aware analytics data. For example, the analytics module 480 generates video-aware analytics data describing that there are 1,000,000 page views for a web page in conjunction with 900,000 video views for a video included in the web page. The analytics module 480 stores 1020 the video-aware analytics data in the analytics store 420. Optionally, the analytics module 480 determines 1022 geographic data associated with the content configuration and stores 1024 the geographic data in the analytics store 420. For example, the analytics module 480 determines geographic information for user devices 160 that load the web page including the video according to the content configuration.
- FIGS 11A and 1 IB are flow diagrams of one embodiment of a method 1100 for generating a report.
- the reporting module 485 receives 1102 a content configuration for a web page from a user. For example, a user selects a content configuration for a web page from a list and sends the content configuration to the reporting module 485 so that the reporting module 485 generates a report corresponding to the content configuration.
- the reporting module 485 receives 1104 one or more parameters from the user for generating the report.
- the one or more parameters are one or more web metrics (session time, conversions, page views, unique page views, etc.) and/or one or more video metrics (e.g., video views, unique video views, etc.).
- the reporting module 485 retrieves 1106 video-aware analytics data using the one or more parameters from the analytics store 420. For example, if the parameters are page views and video views, the reporting module 485 retrieves the video-aware analytics data related to the page views and the video views such as the number for the page views and the number for the video views.
- the reporting module 485 compares 1 108 the video-aware analytics data to historical data describing values for the same metrics in the past. For example, the reporting module 485 compares the number for video views in the last month to the number for video views in the month before the last month. Also optionally, the reporting module 485 constructs 11 10 one or more of a chart, a diagram and a table using the video- aware analytics data. In one embodiment, the reporting module 485 constructs a chart, a diagram and/or a table according to the type of the report (e.g., a report focusing on video views, a report focusing on advertisements, etc.). The reporting module 485 generates 1 112 a report including the video-aware analytics data.
- the type of the report e.g., a report focusing on video views, a report focusing on advertisements, etc.
- the reporting module 485 generates the report by incorporating 11 14 the one or more of the chart, the diagram and/or the table into the report.
- the reporting module 485 arranges the chart, the diagram and/or the table according to a style selected by a user.
- the reporting module 485 generates a report using a template for the arrangement of the chart, the diagram and/or the table.
- the reporting module 485 retrieves 11 16 geographic data associated with the content configuration and generates 1 118 a map describing the distribution of the video-aware analytics data according to the geographic data. For example, the reporting module 485 generates a map showing the distribution of page views and video views according to different states in the United States. The reporting module 485 incorporates 1 120 the map into the report. Steps 11 14-1 120 are depicted using dashed lines to indicate that they are optional features of the method 1 100.
- Figure 12 is a flow diagram of one embodiment of a method 1200 for optimizing content of a web page. The optimization module 483 retrieves 1202 a first content configuration for a web page from the configuration data 530 stored in the analytics store 420.
- the optimization module 483 retrieves 1204 a first set of video-aware analytics data associated with the first content configuration. Next, the optimization module 483 retrieves 1206 a second content configuration for the same web page from the configuration data 530. The optimization module 483 also retrieves 1208 a second set of video-aware analytics data for the second content configuration. The optimization module 483 optimizes 1210 content for the web page based at least in part on the first set and the second set of video-aware analytics data. For example, the optimization module 483 selects the first content configuration as an optimized content configuration for the web page if the first content configuration results in more conversions and a higher conversion rate than the second content configuration.
- Figures 13 A and 13B are flow diagrams of another embodiment of a method
- the communication module 460 receives 1302 a first set of web interaction data from a web page loaded in one or more user devices 160 and sends the first set of web interaction data to the configuration analysis module 467.
- the configuration analysis module 467 determines 1304 a first content configuration associated with the first set of web interaction data.
- the communication module 460 receives 1306 one or more first requests associated with the first content configuration from a media player 1 15 embedded in the web page and sends the one or more requests to the request analysis module 470.
- the request analysis module 470 extracts 1308 a first set of event data from the one or more first requests and sends the first set of event data to the analytics module 480.
- the analytics module 480 generates 1310 a first set of video-aware analytics data using the first set of web interaction data and the first set of event data. For example, the metric determination module 475 determines one or more web metrics for the first set of web interaction data and one or more video metrics for the first set of event data. The analytics module 480 calculates values for the one or more web metrics and values for the one or more video metrics. The analytics module 480 combines the values for the one or more web metrics and the values for the one or more video metrics to form the first set of video-aware analytics data. The analytics module 480 sends the first set of video-aware analytics data to the optimization module 483. Optionally, the analytics module 480 stores 131 1 the first set of video-aware analytics data in the analytics store 420.
- the communication module 460 receives 1312 a second set of web interaction data from the web page loaded in one or more user devices 160 and sends the second set of web interaction data to the configuration analysis module 467.
- the configuration analysis module 467 determines 1314 a second content configuration associated with the second set of web interaction data.
- the communication module 460 receives 1316 one or more second requests associated with the second content configuration for the web page and sends the one or more second requests to the request analysis module 470.
- the request analysis module 470 extracts 1318 a second set of event data from the one or more second requests and sends the second set of event data to the analytics module 480.
- the analytics module 480 generates 1320 a second set of video-aware analytics data using the second set of web interaction data and the second set of event data.
- the analytics module 480 sends the second set of video-aware analytics data to the optimization module 483.
- the analytics module 480 stores 1321 the second set of video-aware analytics data in the analytics store 420.
- the optimization module 483 optimizes 1322 content of a web page based at least in part on the first set and the second set of video-aware analytics data. For example, the optimization module 483 selects the first content configuration as an optimized content configuration for the web page if the first content configuration results in more conversions and a higher conversion rate than the second content configuration.
- modules, routines, features, attributes, methodologies and other aspects of the present embodiments can be implemented as software, hardware, firmware or any combination of the three.
- a component, an example of which is a module, of the present embodiments is implemented as software
- the component can be implemented as a standalone program, as part of a larger program, as a plurality of separate programs, as a statically or dynamically linked library, as a kernel loadable module, as a device driver, and/or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming.
- the present embodiments are in no way limited to implementation in any specific programming language, or for any specific operating system or environment. Accordingly, the disclosure intended to be illustrative, but not limiting, of the scope of the embodiments, which is set forth in the following claims.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/277,381 US8510644B2 (en) | 2011-10-20 | 2011-10-20 | Optimization of web page content including video |
PCT/US2012/061336 WO2013059798A2 (en) | 2011-10-20 | 2012-10-22 | Optimization of web page content including video |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2769312A2 true EP2769312A2 (en) | 2014-08-27 |
EP2769312A4 EP2769312A4 (en) | 2016-06-01 |
Family
ID=48136993
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12842644.2A Ceased EP2769312A4 (en) | 2011-10-20 | 2012-10-22 | Optimization of web page content including video |
Country Status (4)
Country | Link |
---|---|
US (1) | US8510644B2 (en) |
EP (1) | EP2769312A4 (en) |
CN (1) | CN104221006B (en) |
WO (1) | WO2013059798A2 (en) |
Families Citing this family (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8819817B2 (en) * | 2011-05-25 | 2014-08-26 | Apple Inc. | Methods and apparatus for blocking usage tracking |
US9369740B1 (en) * | 2012-06-21 | 2016-06-14 | Google Inc. | Custom media player |
US10165245B2 (en) | 2012-07-06 | 2018-12-25 | Kaltura, Inc. | Pre-fetching video content |
US9032335B2 (en) * | 2012-08-14 | 2015-05-12 | Christopher V. Beckman | User interface techniques reducing the impact of movements |
US9680689B2 (en) * | 2013-02-14 | 2017-06-13 | Comcast Cable Communications, Llc | Fragmenting media content |
US10986063B2 (en) * | 2013-02-27 | 2021-04-20 | Comcast Cable Communications, Llc | Methods and systems for providing supplemental data |
US9031375B2 (en) | 2013-04-18 | 2015-05-12 | Rapt Media, Inc. | Video frame still image sequences |
US9634910B1 (en) * | 2013-06-14 | 2017-04-25 | Google Inc. | Adaptive serving companion shared content |
US9294532B2 (en) * | 2013-07-02 | 2016-03-22 | Facebook, Inc. | Performing an action on a social networking system based on a content identifier embedded in provided content |
US10122824B1 (en) * | 2013-09-13 | 2018-11-06 | Reflektion, Inc. | Creation and delivery of individually customized web pages |
US10013500B1 (en) * | 2013-12-09 | 2018-07-03 | Amazon Technologies, Inc. | Behavior based optimization for content presentation |
US10708651B2 (en) | 2014-06-04 | 2020-07-07 | Comcast Cable Communications, Llc | Dynamic content ratings |
US9990653B1 (en) | 2014-09-29 | 2018-06-05 | Google Llc | Systems and methods for serving online content based on user engagement duration |
US20160100221A1 (en) * | 2014-10-06 | 2016-04-07 | StreamRail Ltd. | System and method for preventing abandonment of web-based video content |
US10410673B2 (en) * | 2014-10-28 | 2019-09-10 | Clipchamp Ip Pty Ltd | Embeddable video capturing, processing and conversion application |
WO2016078072A1 (en) * | 2014-11-21 | 2016-05-26 | 华为技术有限公司 | Method and system for implementing service optimization |
US9654360B1 (en) | 2016-02-29 | 2017-05-16 | Wowza Media Systems, LLC | Coordinating analytics between media player and server |
US10116537B2 (en) * | 2016-02-29 | 2018-10-30 | Wowza Media Systems, LLC | Media player analytics |
GB2551978A (en) * | 2016-06-30 | 2018-01-10 | Ipco 2012 Ltd | A method, apparatus, computer program product, computer readable storage medium, information processing apparatus and server |
US20180205994A1 (en) * | 2017-01-17 | 2018-07-19 | Hong Fu Jin Precision Industry (Shenzhen) Co., Ltd | Collection and processing method for information as to viewing of videos by user and device and server using the same |
US10831512B2 (en) | 2017-06-30 | 2020-11-10 | Microsoft Technology Licensing, Llc | Capturing user interactions |
US11539992B2 (en) * | 2018-02-28 | 2022-12-27 | Google Llc | Auto-adjust playback speed and contextual information |
US10915599B2 (en) | 2018-11-15 | 2021-02-09 | Elementor Ltd. | System and method for producing transferable, modular web pages |
US20210357983A1 (en) * | 2020-05-14 | 2021-11-18 | Nanning Fugui Precision Industrial Co., Ltd. | System for presenting advertisements online and method thereof |
US11907508B1 (en) * | 2023-04-12 | 2024-02-20 | Adobe Inc. | Content analytics as part of content creation |
Family Cites Families (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN1260889A (en) * | 1997-05-19 | 2000-07-19 | 英特维公司 | System and method for optimizing delivery of aduio and video data over computer network |
EP1128286A2 (en) * | 2000-02-22 | 2001-08-29 | Web Marketing Limited | Active content delivery system |
US6981227B1 (en) | 2002-02-04 | 2005-12-27 | Mircrosoft Corporation | Systems and methods for a dimmable user interface |
US6968973B2 (en) | 2003-05-31 | 2005-11-29 | Microsoft Corporation | System and process for viewing and navigating through an interactive video tour |
US7702718B2 (en) | 2004-03-30 | 2010-04-20 | Cisco Technology, Inc. | Providing enterprise information |
US7746378B2 (en) * | 2004-10-12 | 2010-06-29 | International Business Machines Corporation | Video analysis, archiving and alerting methods and apparatus for a distributed, modular and extensible video surveillance system |
US7760956B2 (en) * | 2005-05-12 | 2010-07-20 | Hewlett-Packard Development Company, L.P. | System and method for producing a page using frames of a video stream |
CN1905670A (en) * | 2005-07-25 | 2007-01-31 | 黎灿兵 | Method and apparatus for implementing video-on-demand live telecasting based on network technique |
US7925973B2 (en) | 2005-08-12 | 2011-04-12 | Brightcove, Inc. | Distribution of content |
CN101034997A (en) * | 2006-03-09 | 2007-09-12 | 新数通兴业科技（北京）有限公司 | Method and system for accurately publishing the data information |
US8848053B2 (en) * | 2006-03-28 | 2014-09-30 | Objectvideo, Inc. | Automatic extraction of secondary video streams |
US7646914B2 (en) * | 2006-06-15 | 2010-01-12 | David Anthony Clausi | System and method for collecting and analyzing event data |
US20080270163A1 (en) * | 2006-12-26 | 2008-10-30 | Green Jermon D | System, program and method for experientially inducing user activity |
US9734464B2 (en) * | 2007-09-11 | 2017-08-15 | International Business Machines Corporation | Automatically generating labor standards from video data |
US20090164601A1 (en) * | 2007-12-21 | 2009-06-25 | Eyedestinations Inc. | System and method for providing a primary video stream with a secondary video stream for display on an electronic device |
US8769558B2 (en) * | 2008-02-12 | 2014-07-01 | Sony Computer Entertainment America Llc | Discovery and analytics for episodic downloaded media |
WO2009121053A2 (en) * | 2008-03-28 | 2009-10-01 | On-Net Surveillance Systems, Inc. | Method and systems for video collection and analysis thereof |
US20090278937A1 (en) * | 2008-04-22 | 2009-11-12 | Universitat Stuttgart | Video data processing |
US8180667B1 (en) * | 2008-06-03 | 2012-05-15 | Google Inc. | Rewarding creative use of product placements in user-contributed videos |
US20100007738A1 (en) * | 2008-07-10 | 2010-01-14 | International Business Machines Corporation | Method of advanced person or object recognition and detection |
US20100010884A1 (en) * | 2008-07-14 | 2010-01-14 | Mixpo Portfolio Broadcasting, Inc. | Method And System For Customizable Video Advertising |
US8175922B2 (en) * | 2008-10-31 | 2012-05-08 | Yahoo! Inc. | Dynamic in-page advertising |
US20100220592A1 (en) * | 2009-02-24 | 2010-09-02 | Cisco Technology, Inc. | Layered internet video engineering |
US8559720B2 (en) * | 2009-03-30 | 2013-10-15 | Thomson Licensing S.A. | Using a video processing and text extraction method to identify video segments of interest |
US8930818B2 (en) * | 2009-03-31 | 2015-01-06 | International Business Machines Corporation | Visualization of website analytics |
EP2415022A4 (en) * | 2009-04-01 | 2016-12-14 | I-Cetana Pty Ltd | Systems and methods for detecting anomalies from data |
CN101625700A (en) * | 2009-08-12 | 2010-01-13 | 中兴通讯股份有限公司 | Method and device for optimizing display network page on terminal |
US8935359B2 (en) * | 2009-10-07 | 2015-01-13 | International Business Machines Corporation | Media system with social awareness |
WO2011050280A2 (en) * | 2009-10-22 | 2011-04-28 | Chintamani Patwardhan | Method and apparatus for video search and delivery |
CN102656886B (en) * | 2009-12-14 | 2016-08-10 | 汤姆逊许可证公司 | The video coding strategies of object-aware |
US11232458B2 (en) * | 2010-02-17 | 2022-01-25 | JBF Interlude 2009 LTD | System and method for data mining within interactive multimedia |
US20110263946A1 (en) * | 2010-04-22 | 2011-10-27 | Mit Media Lab | Method and system for real-time and offline analysis, inference, tagging of and responding to person(s) experiences |
US20110279641A1 (en) * | 2010-05-14 | 2011-11-17 | New York University | Apparatus, systems, computer-accessible medium and methods for video cropping, temporally-coherent warping and retargeting |
AU2010202741B1 (en) * | 2010-06-30 | 2010-12-23 | Brightcove Inc. | Dynamic chunking for media streaming |
US20120130774A1 (en) * | 2010-11-18 | 2012-05-24 | Dror Daniel Ziv | Analyzing performance using video analytics |
US9704393B2 (en) * | 2011-01-11 | 2017-07-11 | Videonetics Technology Private Limited | Integrated intelligent server based system and method/systems adapted to facilitate fail-safe integration and/or optimized utilization of various sensory inputs |
-
2011
- 2011-10-20 US US13/277,381 patent/US8510644B2/en active Active
-
2012
- 2012-10-22 CN CN201280062681.3A patent/CN104221006B/en active Active
- 2012-10-22 EP EP12842644.2A patent/EP2769312A4/en not_active Ceased
- 2012-10-22 WO PCT/US2012/061336 patent/WO2013059798A2/en active Application Filing
Also Published As
Publication number | Publication date |
---|---|
CN104221006B (en) | 2017-07-11 |
US8510644B2 (en) | 2013-08-13 |
WO2013059798A2 (en) | 2013-04-25 |
CN104221006A (en) | 2014-12-17 |
WO2013059798A3 (en) | 2014-09-12 |
EP2769312A4 (en) | 2016-06-01 |
US20130104024A1 (en) | 2013-04-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8510644B2 (en) | Optimization of web page content including video | |
US9369740B1 (en) | Custom media player | |
US8560683B2 (en) | Video and site analytics | |
US9003032B2 (en) | Video aware pages | |
US9872069B1 (en) | Goal-based video analytics | |
US8572243B2 (en) | Video aware paths | |
US9706253B1 (en) | Video funnel analytics | |
US9525900B2 (en) | Video management system | |
US8151194B1 (en) | Visual presentation of video usage statistics | |
AU2010245156B2 (en) | Content syndication in web-based media via ad tagging | |
US20180288461A1 (en) | Web Analytics for Video Level Events | |
US11503356B2 (en) | Intelligent multi-device content distribution based on internet protocol addressing | |
US9135224B1 (en) | Display of videos based on referrers | |
US9078036B2 (en) | Mechanism to evaluate the geographic popularity of geographically-located user-generated content items | |
US8479228B1 (en) | Customization of advertisements to content of video data | |
CN104144357B (en) | Video broadcasting method and system | |
US11388561B2 (en) | Providing a summary of media content to a communication device | |
WO2015143854A1 (en) | Data acquisition and interaction method, set top box, server and multimedia system | |
WO2012031246A1 (en) | Method and apparatus for callback supplementation of media program metadata | |
US10084841B2 (en) | Systems and methods for managing media content playback | |
KR101525519B1 (en) | Method for web browsing on offline based HTML5 | |
US9917875B2 (en) | System and methods for managing media content playback using social media data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20140514 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: RAJKUMAR, NARESHKUMARInventor name: GATTO, VINCENTInventor name: FUNK, GREGORY, ALLANInventor name: HAMILTON, THEODORE, KENT |
|
R17D | Deferred search report published (corrected) |
Effective date: 20140912 |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20160429 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/30 20060101AFI20160422BHEP |
|
17Q | First examination report despatched |
Effective date: 20170725 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: FUNK, GREGORY, ALLANOwner name: GOOGLE LLCOwner name: GATTO, VINCENTOwner name: RAJKUMAR, NARESHKUMAROwner name: HAMILTON, THEODORE, KENT |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20181031 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
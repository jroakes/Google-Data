US5940822A - Encoding method of members related by multiple concept or group hierarchies and identification of members in a corpus or a database that are descendants of one or more selected concepts or groups from the encoding - Google Patents
Encoding method of members related by multiple concept or group hierarchies and identification of members in a corpus or a database that are descendants of one or more selected concepts or groups from the encoding Download PDFInfo
- Publication number
- US5940822A US5940822A US08/921,197 US92119797A US5940822A US 5940822 A US5940822 A US 5940822A US 92119797 A US92119797 A US 92119797A US 5940822 A US5940822 A US 5940822A
- Authority
- US
- United States
- Prior art keywords
- members
- computer
- encoding
- concept hierarchies
- hierarchies
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
- 238000000034 method Methods 0.000 title claims abstract description 43
- 238000013500 data storage Methods 0.000 claims abstract description 22
- 238000004519 manufacturing process Methods 0.000 claims abstract description 8
- 238000004590 computer program Methods 0.000 claims description 13
- 239000000047 product Substances 0.000 description 25
- 238000004220 aggregation Methods 0.000 description 6
- 230000002776 aggregation Effects 0.000 description 6
- 238000007726 management method Methods 0.000 description 6
- 230000006870 function Effects 0.000 description 5
- 238000004458 analytical method Methods 0.000 description 4
- 238000003860 storage Methods 0.000 description 4
- 238000007906 compression Methods 0.000 description 3
- 230000006835 compression Effects 0.000 description 3
- 238000005065 mining Methods 0.000 description 3
- 238000007418 data mining Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 238000002372 labelling Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012545 processing Methods 0.000 description 2
- 239000006227 byproduct Substances 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000007405 data analysis Methods 0.000 description 1
- 238000013144 data compression Methods 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 229940079593 drug Drugs 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000011156 evaluation Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/28—Databases characterised by their database models, e.g. relational or object models
- G06F16/284—Relational databases
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99932—Access augmentation or optimizing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
- Y10S707/99934—Query formulation, input preparation, or translation
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99942—Manipulating data structure, e.g. compression, compaction, compilation
Definitions
- This invention relates in general to a computer-implemented encoding system, and more particularly, to an encoding system for concept or group hierarchies.
- Databases are computerized information storage and retrieval systems.
- RDBMS Relational Database Management System
- DBMS database management system
- Relational databases are organized into tables which consist of rows and columns of data. The rows are formally called tuples.
- a database will typically have many tables and each table will typically have multiple tuples and multiple columns.
- the tables are typically stored on random access storage devices (RASD) such as magnetic or optical disk drives for semi-permanent storage.
- RASD random access storage devices
- RDBMS software using a Structured Query Language (SQL) interface is well known in the art.
- SQL interface has evolved into a standard language for RDBMS software and has been adopted as such by both the American National Standards Institute (ANSI) and the International Standards Organization (ISO).
- ANSI American National Standards Institute
- ISO International Standards Organization
- the SQL interface allows users to formulate relational operations on the tables either interactively, in batch files, or embedded in host languages, such as C and COBOL. SQL allows the user to manipulate the data.
- the definitions for SQL provide that a RDBMS should respond to a particular query with a particular set of data given a specified database content, but the method that the RDBMS uses to actually find the required information in the tables on the disk drives is left up to the RDBMS.
- the RDBMS will optimize the method used to find the data requested in a query in order to minimize the computer time used and, therefore, the cost of doing the query.
- a "concept" or "group” is a generalization of one or more keywords or parts of parsed text.
- a text search query against a large corpus i.e., collection of data
- Example concepts or groups are (sales by) STATE(s), (sales by) CITY(s), etc.
- Concepts and groups have members, and, typically, members are related by a hierarchy. For example, for the group STATE(s), one natural hierarchy is based on geography (e.g., East Coast states, Southwest states, Midwest states, Western states, etc.).
- Members can be related by more than one hierarchy.
- product categories e.g., housewares, hardware, etc.
- product categories e.g., housewares, hardware, etc.
- they are also related by employees of the department store, commonly referred to as buyers, who are responsible for buying the products, and related by the management structure of these employees.
- a sequence of joins are performed between the DETAIL table and other tables that carry a map of the hierarchy.
- the number of joins is determined by the maximum depth of the hierarchy.
- this method performs aggregations. This method is described in more detail in M. Wang and B. Iyer, Efficient Roll-Up and Drill-Down Analysis in Relational Databases, SIGMOD Data Mining Workshop, 1997, which is incorporated by reference herein.
- the first method does not clearly address the issue of input/output ("I/O") efficiency and is also subject to the known "quirkiness" of commercial RDBMS optimizers that sometimes cause the RDBMS to execute a query sub-optimally.
- the second technique stores the names of ancestors of members along with the members in the DETAIL table. This second technique requires a large amount of memory for storing the names of the ancestors. Therefore, the second method is wasteful of space.
- the present invention discloses a method, apparatus, and article of manufacture for a computer implemented encoder for encoding members in a concept hierarchy.
- a query is executed in a computer.
- the query is performed by the computer to retrieve data from a database stored on a data storage device connected to the computer.
- Members in the database that are related by one or more concept hierarchies are encoded.
- members in one of the concept hierarchies that are descendants of one or more selected concepts are identified based on the encoding.
- An object of the invention is to provide an improved system for encoding members of hierarchies. Another object of the present invention is to encode members of multiple, related concept hierarchies. Yet another object of the present invention is to identify descendants of a member based on the encoding.
- FIG. 1 is an exemplary hardware environment used to implement the preferred embodiment of the invention
- FIG. 2 illustrates a tree structure stored on a data storage device that represents a hierarchy of products sold at a Super Department Store
- FIG. 3 illustrates a tree structure stored on a data storage device that represents two hierarchies by which items at a Super Department Store may be related
- FIG. 4 is a flow diagram illustrating the steps performed by the encoder.
- FIG. 1 is an exemplary hardware environment used to implement the preferred embodiment of the invention.
- the present invention is typically implemented using a computer 100, which generally includes, inter alia, a processor 102, random access memory (RAM) 104, data storage devices 106 (e.g., hard, floppy, and/or CD-ROM disk drives, etc.), data communications devices 108 (e.g., modems, network interfaces, etc.), monitor 110 (e.g., CRT, LCD display, etc.), mouse pointing device 112, and keyboard 114.
- RAM random access memory
- data storage devices 106 e.g., hard, floppy, and/or CD-ROM disk drives, etc.
- data communications devices 108 e.g., modems, network interfaces, etc.
- monitor 110 e.g., CRT, LCD display, etc.
- mouse pointing device 112 e.g., CRT, LCD display, etc.
- the computer 100 operates under the control of an operating system (OS) 116, such as MVSTM, AIXTM, OS/2TM, WINDOWS NTTM, WINDOWSTM, UNIXTM, etc.
- OS operating system
- the operating system 116 is booted into the memory 102 of the computer 100 for execution when the computer 100 is powered-on or reset.
- the operating system 116 controls the execution of one or more computer programs 118 by the computer 100.
- the present invention is generally implemented in these computer programs 118, which execute under the control of the operating system 116 and cause the computer 100 to perform the desired functions as described herein.
- the present invention may be implemented in the operating system 116 itself.
- the present invention is typically implemented using relational database management system (RDBMS) software 120, such as the DB2 product sold by IBM Corporation, although it may be implemented with any database management system (DBMS) software.
- RDBMS relational database management system
- the RDBMS software 120 receives commands from users for performing various search and retrieval functions, termed queries, against one or more databases stored in the data storage devices 106.
- queries conform to the Structured Query Language (SQL) standard, although other types of queries could also be used without departing from the scope of the invention.
- SQL Structured Query Language
- the queries invoke functions performed by the RDBMS software 120, such as definition, access control, interpretation, compilation, database retrieval, and update of user and system data.
- the RDBMS software 120 invokes the encoder 122 to perform encoding.
- the operating system 116 and computer programs 118 are comprised of instructions which, when read and executed by the computer 100, causes the computer 100 to perform the steps necessary to implement and/or use the present invention.
- the operating system 116 and/or computer programs 118 are tangibly embodied in and/or readable from a device, carrier, or media, such as memory 102, data storage devices 106, and/or data communications devices 108.
- the computer programs 118 may be loaded from the memory 102, data storage devices 106, and/or data communications devices 108 into the memory 102 of the computer 100 for use during actual operations.
- the present invention may be implemented as a method, apparatus, or article of manufacture using standard programming and/or engineering techniques to produce software, firmware, hardware, or any combination thereof.
- article of manufacture (or alternatively, “computer program product”) as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media.
- FIG. 1 is not intended to limit the present invention. Indeed, those skilled in the art will recognize that other alternative hardware environments may be used without departing from the scope of the present invention.
- the present invention provides an encoder 122 that provides encoding of members related by multiple concept or group hierarchies. After encoding, the encoder 122 can identify members in a corpus or a database that are descendants of one or more selected concepts or groups in one or more hierarchies based on the encoding.
- the concepts or groups are known as ancestors. In one pass through the corpus or database, the number of occurrences of selected concepts or groups are identified, regardless of the number of concepts or groups in a hierarchy and regardless of the number of hierarchies.
- the encoder 122 provides a simple but elegant system to encode members belonging simultaneously to multiple hierarchies and solves the problems of the two conventional systems mentioned earlier that compute aggregations. In one embodiment, it is recommended that the present invention be combined with a method to compress codes using a compression system which exhibits decoding efficiency both in central processing unit (“CPU”) cycles and memory usage. One skilled in the art, however, would recognize that the present invention may be used without a compression system.
- CPU central processing unit
- the encoder 122 uses this concept to take a partial order induced by a hierarchy and convert it into a total order, so that all children of an ancestor fall into one range (i.e., of values) of this labeling.
- the encoder 122 extends this idea to encode multiple hierarchies by yet another elegant form of code construction.
- POS point-of-sale
- CPG Consumer Packaged Goods
- SKU stockable unit number
- FIG. 2 illustrates a tree structure stored on a data storage device 106 that represents a hierarchy of products sold at a Super Department Store 200.
- a tree structure has a root node from which all other nodes in the tree depend.
- a node from which other nodes depend is called a parent node.
- Nodes that depend from another node are called child nodes.
- a child node is said to be a descendent of a parent node, and a parent node is said to be an ancestor of a child node.
- the root node "Super Department Store 28" is an ancestor node of each other node in the tree, but it does not have an ancestor itself.
- the node "Apparel 14" has an ancestor node "Super Department Store 28" and child nodes "Men 0", “Shoes 1", “Kids 6", and "Women 13". Nodes that have ancestor nodes and no child nodes are termed leaf nodes. For instance, node “Petites 7" is a leaf node that has an ancestor node “Women 13" and no child nodes.
- the nodes in FIG. 2 represent members of a domain. Each of the members has an associated label (e.g., number) for identifying the node in the tree.
- label e.g., number
- Roll-up i.e., accumulating total sales for all descendent SKUs of selected members of the hierarchy, is a generic operation for Business Intelligence analysis. For example, with reference to the Super Department Store hierarchy 200, an analyst at the Super Department Store headquarters, may wish to roll-up sales on "Apparel 14" for "Women 13" and "Supermarket 27" for analyzing relative performance of the store in the two categories.
- On-line analytical processing (“OLAP”) tools such as Arbor's ESSBASE, Informix's METACUSE, etc., store frequently computed aggregations in essentially the main memory database on a client personal computer ("PC"). If a pre-computed aggregate is not available in the main memory database of the client PC, an SQL query is issued against the database manager hosting the Detail table data.
- OLAP On-line analytical processing
- the encoder 122 demonstrates that if members of the hierarchy are labeled by a postorder traversal of the tree representing one hierarchy, all children of an ancestor are bounded by the labels of the ancestor and the lowest numbered child. Next, if the members appearing in the database were encoded by such labels, multiple aggregates of members and all their descendants are computable in one pass of the data, as described further in M. Wang and B. Iyer, Efficient Roll-Up and Drill-Down Analysis in Relational Databases, SIGMOD Data Mining Workshop, 1997, which is incorporated by reference herein. For example, in the Super Department Store hierarchy 200 of FIG. 2, labels for all SKU's in the "Apparel 14" for "Women 13" member are in the range of (7, 14) and labels for SKU's in the "Supermarket” member are in the range (24, 27).
- FIG. 3 illustrates a tree structure stored on a data storage device 106 that represents two hierarchies by which items at a Super Department Store may be related.
- One of the hierarchies is a products hierarchy 300, which includes some of the members of the Super Department Store hierarchy 200, and the other hierarchy is a buyers hierarchy 302 representing buyers who purchase products for the Super Department Store.
- FIG. 3 illustrates that members are related by more than one hierarchy, i.e., products 300 and buyers 302. For example, John 2 is the buyer for "Men 0", “Toddlers 1", “Infants 2", “Boys 3", and "Girls 4" products.
- the encoder 122 For a single hierarchy, the encoder 122 demonstrates that predicates that capture a range of consecutive values identify a member of the hierarchy and all its descendants. For the example hierarchies illustrated in FIG. 3, users may want a report of the aggregate sales of all "Kids 1" products purchased by buyers managed by "Phil 18".
- the encoder 122 encodes members with labels from which the encoder 122 can determine whether the member is a descendant of a specified ancestor in any hierarchy. In the worst case, the time taken to perform encoding is proportional to the number of hierarchies.
- the label is used for multiple hierarchies in a similar manner as the label for a single hierarchy.
- the encoder 122 first traverses the products hierarchy 300 in postorder fashion and assigns non-negative integers to each member, in natural order. For example, the encoder 122 assigns the label 1 to the member "Toddler" for the products hierarchy 300. As there are 16 members of the products hierarchy 300, the encoder 122 uses 16 integers (0 through 15 inclusive) for labeling.
- the encoder 122 traverses the buyers hierarchy 302 in postorder fashion and assigns non-negative integers to each member, in natural order. For example, the encoder 122 assigns the label 7 to the member "Toddler" for the buyers hierarchy 302.
- the encoder 122 can determine the labels for the member from each hierarchy of which it is a member (e.g., the products and buyers hierarchies 300, 302).
- the encoder 122 can determine that the member is a descendant of concept "Kids", which has a range (1, 5), in the products hierarchy 300.
- the encoder 122 can determine that the member is a descendant of "Phil”, which has a range (7, 18) in the buyers hierarchy 302.
- h ⁇ i> denote the number of nodes in the tree representing hierarchy ⁇ i> (e.g., for hierarchy 1, the number of nodes is represented by h1).
- h1 is not larger (in terms of number of members, i.e., nodes in the tree) than h2 which, in turn, is not larger than h3, and that, in turn, is not larger than h4.
- Independent traversals of the four hierarchies produce four labels (i.e., codes c1, c2, c3, c4) for each leaf, for hierarchies 1, 2, 3 and 4, respectively.
- the encoder 122 computes the combined code for a leaf appearing in these four hierarchies with the following formula:
- the encoder 122 Upon obtaining the combined code of a member, the encoder 122 computes the labels for the member in its various hierarchies with the following formulas:
- FIG. 4 is a flow diagram illustrating the steps performed by the encoder 122.
- the encoder 122 selects the next hierarchy, starting with the first.
- the encoder 122 traverses the selected hierarchy in postorder, assigning non-negative integers to each member in the hierarchy.
- the encoder 122 determines whether all hierarchies have been selected. When all hierarchies have been selected, the encoder continues at Block 406, else the encoder 122 loops back to Block 400 to select the next hierarchy.
- the encoder 122 assigns a combined code to each member.
- the encoder 122 uses the combined code to identify descendants of each member.
- the encoder 122 With the encoder 122, a representation of the combined code is stored in lieu of the member in the DETAIL table data. Unless transformed, the length of the combined code is (log2(h1 ⁇ h2 ⁇ h3 ⁇ h4)). If there are a million members belonging to ten hierarchies, the combined code for a member would be approximately 100 bits long. The amount of space used would be 100 bits multiplied by the number of records containing the combined code. However, the combined code has only a million unique values. It is the sparsity in the usage of the code space that makes the combined code long. A million unique values may be represented by 10 bits or less.
- any type of computer such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention.
- the present invention discloses a method, apparatus, and article of manufacture for an encoder for encoding members in a concept hierarchy.
- the present invention provides an improved system for encoding members of hierarchies.
- the present invention also encodes members of multiple, related concept hierarchies. Additionally, the present invention identifies descendants of a member based on the encoding.
Abstract
Description
combined code=c1+c2×h1×h2+c4×h1×h2×h3
______________________________________ c1 = combined code % h1 (since h1 <= h2) c2 = ((combined code - c1)/h1)%h2 (since h2 <= h3) c3 = ((combined code - c1 - c2 × h1)/(h1 × h2))%h3 (since h3 <= h4) c4 = ((combined code - c1 - c2 × h1 - c3 × h1 × h2)/(h1 × h2 × h3)) ______________________________________
Claims (18)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/921,197 US5940822A (en) | 1997-08-29 | 1997-08-29 | Encoding method of members related by multiple concept or group hierarchies and identification of members in a corpus or a database that are descendants of one or more selected concepts or groups from the encoding |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/921,197 US5940822A (en) | 1997-08-29 | 1997-08-29 | Encoding method of members related by multiple concept or group hierarchies and identification of members in a corpus or a database that are descendants of one or more selected concepts or groups from the encoding |
Publications (1)
Publication Number | Publication Date |
---|---|
US5940822A true US5940822A (en) | 1999-08-17 |
Family
ID=25445073
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/921,197 Expired - Lifetime US5940822A (en) | 1997-08-29 | 1997-08-29 | Encoding method of members related by multiple concept or group hierarchies and identification of members in a corpus or a database that are descendants of one or more selected concepts or groups from the encoding |
Country Status (1)
Country | Link |
---|---|
US (1) | US5940822A (en) |
Cited By (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6020972A (en) * | 1997-11-14 | 2000-02-01 | Xerox Corporation | System for performing collective symbol-based compression of a corpus of document images |
US6081799A (en) * | 1999-05-05 | 2000-06-27 | International Business Machines Corporation | Executing complex SQL queries using index screening for conjunct or disjunct index operations |
US6263332B1 (en) * | 1998-08-14 | 2001-07-17 | Vignette Corporation | System and method for query processing of structured documents |
WO2002003226A1 (en) * | 2000-06-30 | 2002-01-10 | Fair, Isaac And Company, In. | Detecting and measuring risk with predictive models using content mining |
US20030149707A1 (en) * | 2002-02-06 | 2003-08-07 | Helmbrecht Paul Kurtis | Methods and systems for managing business information on a web site |
US6611216B1 (en) | 1999-02-02 | 2003-08-26 | Cisco Technology, Inc. | Fast look-up table based scheme for NRZI encoding/decoding and zero insertion/removal in serial bit streams |
US20030208399A1 (en) * | 2002-05-03 | 2003-11-06 | Jayanta Basak | Personalized product recommendation |
US20030217079A1 (en) * | 2000-02-28 | 2003-11-20 | Reuven Bakalash | Customer relationship management (CRM) system with integrated data aggregation engine |
US20030225752A1 (en) * | 1999-08-04 | 2003-12-04 | Reuven Bakalash | Central data warehouse with integrated data aggregation engine for performing centralized data aggregation operations |
US6691132B2 (en) | 2001-05-16 | 2004-02-10 | Reengineering Llc | Semantic encoding and compression of database tables |
US20040036716A1 (en) * | 2002-06-12 | 2004-02-26 | Jordahl Jena J. | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20040059724A1 (en) * | 1999-10-15 | 2004-03-25 | Cristian Petculescu | Extensions for adding and removing calculated members in a multidimensional database |
US20050120051A1 (en) * | 2003-12-01 | 2005-06-02 | Gerd Danner | Operational reporting architecture |
US20050278275A1 (en) * | 2004-05-28 | 2005-12-15 | Metadata, Llc | Defining a data dependency path through a body of related data |
US20060020591A1 (en) * | 2001-07-20 | 2006-01-26 | Kommers Jefferson M | Information retrieval from a collection of information objects tagged with hierarchical keywords |
US20060149739A1 (en) * | 2004-05-28 | 2006-07-06 | Metadata, Llc | Data security in a semantic data model |
US7603371B1 (en) | 2002-12-17 | 2009-10-13 | Vignette Corporation | Object based system and method for managing information |
US20100185581A1 (en) * | 1999-08-04 | 2010-07-22 | Hyperroll, Inc. | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US20110099167A1 (en) * | 2004-05-26 | 2011-04-28 | Nicholas Galbreath | Graph Server Querying for Managing Social Network Information Flow |
US8122016B1 (en) * | 2007-04-24 | 2012-02-21 | Wal-Mart Stores, Inc. | Determining concepts associated with a query |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5289567A (en) * | 1991-04-01 | 1994-02-22 | Digital Equipment Corporation | Computer apparatus and method for finite element identification in interactive modeling |
US5495605A (en) * | 1992-01-12 | 1996-02-27 | Bull S.A. | Method to help in optimizing a query from a relational data base management system, and resultant method of syntactical analysis |
US5619615A (en) * | 1994-07-22 | 1997-04-08 | Bay Networks, Inc. | Method and apparatus for identifying an agent running on a device in a computer network |
US5659725A (en) * | 1994-06-06 | 1997-08-19 | Lucent Technologies Inc. | Query optimization by predicate move-around |
US5694591A (en) * | 1995-05-02 | 1997-12-02 | Hewlett Packard Company | Reducing query response time using tree balancing |
US5701454A (en) * | 1995-01-17 | 1997-12-23 | International Business Machines Corporation | Simplification of SQL queries using generalized inference propagation and generalized transitive closure |
US5706495A (en) * | 1996-05-07 | 1998-01-06 | International Business Machines Corporation | Encoded-vector indices for decision support and warehousing |
US5761654A (en) * | 1996-06-05 | 1998-06-02 | Oracle Corporation | Memory structure and method for tuning a database statement using a join-tree data structure representation, including selectivity factors, of a master table and detail table |
-
1997
- 1997-08-29 US US08/921,197 patent/US5940822A/en not_active Expired - Lifetime
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5289567A (en) * | 1991-04-01 | 1994-02-22 | Digital Equipment Corporation | Computer apparatus and method for finite element identification in interactive modeling |
US5495605A (en) * | 1992-01-12 | 1996-02-27 | Bull S.A. | Method to help in optimizing a query from a relational data base management system, and resultant method of syntactical analysis |
US5659725A (en) * | 1994-06-06 | 1997-08-19 | Lucent Technologies Inc. | Query optimization by predicate move-around |
US5619615A (en) * | 1994-07-22 | 1997-04-08 | Bay Networks, Inc. | Method and apparatus for identifying an agent running on a device in a computer network |
US5701454A (en) * | 1995-01-17 | 1997-12-23 | International Business Machines Corporation | Simplification of SQL queries using generalized inference propagation and generalized transitive closure |
US5694591A (en) * | 1995-05-02 | 1997-12-02 | Hewlett Packard Company | Reducing query response time using tree balancing |
US5706495A (en) * | 1996-05-07 | 1998-01-06 | International Business Machines Corporation | Encoded-vector indices for decision support and warehousing |
US5761654A (en) * | 1996-06-05 | 1998-06-02 | Oracle Corporation | Memory structure and method for tuning a database statement using a join-tree data structure representation, including selectivity factors, of a master table and detail table |
Non-Patent Citations (10)
Title |
---|
IBM Technical Disclosure Bulletin, "Evaluation of Column Functions on Grouped Data Ordering", vol. 32, No. 10B, Mar. 1990, pp. 385-386. |
IBM Technical Disclosure Bulletin, Evaluation of Column Functions on Grouped Data Ordering , vol. 32, No. 10B, Mar. 1990, pp. 385 386. * |
Internet article, http://fas.sfu.ca/cs/conf/dmkd97.html, "Workshop on Research Issues on Data Mining and Knowledge Discovery (DMKD'97) in cooperation with ACM-SIGMOD'97, Tuscon, Arizona, May 11, 1997", DMKD'97 Pre-Conf. Data Mining Workshop: Call For Participation and Registration (entire document). |
Internet article, http://fas.sfu.ca/cs/conf/dmkd97.html, Workshop on Research Issues on Data Mining and Knowledge Discovery (DMKD 97) in cooperation with ACM SIGMOD 97, Tuscon, Arizona, May 11, 1997 , DMKD 97 Pre Conf. Data Mining Workshop: Call For Participation and Registration (entire document). * |
Iyer, Balakrishna R., et al., "Data Compression Support in Databases", Technology Institute, International Business Machines Corporation, Software Solutions Division, Santa Teresa Laboratory, Apr. 1994, pp. 1-26. |
Iyer, Balakrishna R., et al., Data Compression Support in Databases , Technology Institute, International Business Machines Corporation, Software Solutions Division, Santa Teresa Laboratory, Apr. 1994, pp. 1 26. * |
Kerin, Roger A., et al., "Product Hierarchy and Brand Strategy Influences on the Order of Entry Effect for Consumer Packaged Goods", J. Prod. Innov. Manag., vol. 13, 1996, Elsevier Science Inc., pp. 21-34. |
Kerin, Roger A., et al., Product Hierarchy and Brand Strategy Influences on the Order of Entry Effect for Consumer Packaged Goods , J. Prod. Innov. Manag. , vol. 13, 1996, Elsevier Science Inc., pp. 21 34. * |
Klug, Anthony, "Access Paths in the `Abe` Statistical Query Facility", Proceedings of the International Conference on Management of Data, Jun. 2-4, 1982, Orlando, Florida, ACM SIGMOD Association for Computing Machinery, pp. 161-173. |
Klug, Anthony, Access Paths in the Abe Statistical Query Facility , Proceedings of the International Conference on Management of Data, Jun. 2 4, 1982, Orlando, Florida, ACM SIGMOD Association for Computing Machinery, pp. 161 173. * |
Cited By (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6020972A (en) * | 1997-11-14 | 2000-02-01 | Xerox Corporation | System for performing collective symbol-based compression of a corpus of document images |
US6263332B1 (en) * | 1998-08-14 | 2001-07-17 | Vignette Corporation | System and method for query processing of structured documents |
US6882995B2 (en) | 1998-08-14 | 2005-04-19 | Vignette Corporation | Automatic query and transformative process |
US6438540B2 (en) | 1998-08-14 | 2002-08-20 | Vignette Corporation | Automatic query and transformative process |
US6611216B1 (en) | 1999-02-02 | 2003-08-26 | Cisco Technology, Inc. | Fast look-up table based scheme for NRZI encoding/decoding and zero insertion/removal in serial bit streams |
US6081799A (en) * | 1999-05-05 | 2000-06-27 | International Business Machines Corporation | Executing complex SQL queries using index screening for conjunct or disjunct index operations |
US8463736B2 (en) | 1999-08-04 | 2013-06-11 | Yanicklo Technology Limited Liability Company | Relational database management system having integrated non-relational multi-dimensional data store of aggregated data elements |
US20050091237A1 (en) * | 1999-08-04 | 2005-04-28 | Reuven Bakalash | Relational database management system having integrated non-relational multi-dimensional data store of aggregated data elements |
US8788453B2 (en) | 1999-08-04 | 2014-07-22 | Yanicklo Technology Limited Liability Company | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US7392248B2 (en) | 1999-08-04 | 2008-06-24 | Hyperroll Israel, Ltd. | Data aggregation server supporting rapid query response with sparse multi-dimensional data |
US20030225752A1 (en) * | 1999-08-04 | 2003-12-04 | Reuven Bakalash | Central data warehouse with integrated data aggregation engine for performing centralized data aggregation operations |
US20100185581A1 (en) * | 1999-08-04 | 2010-07-22 | Hyperroll, Inc. | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US8041670B2 (en) | 1999-08-04 | 2011-10-18 | Yanicklo Technology Limited Liability Company | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US8799209B2 (en) | 1999-08-04 | 2014-08-05 | Yanicklo Technology Limited Liability Company | Data aggregation module supporting dynamic query responsive aggregation during the servicing of database query requests provided by one or more client machines |
US7328206B2 (en) | 1999-10-15 | 2008-02-05 | Microsoft Corporation | Extensions for adding and removing calculated members in a multidimensional database |
US20040059724A1 (en) * | 1999-10-15 | 2004-03-25 | Cristian Petculescu | Extensions for adding and removing calculated members in a multidimensional database |
US8452804B2 (en) | 2000-02-28 | 2013-05-28 | Yanicklo Technology Limited Liability Company | Database management system (DBMS) employing a relational datastore and a multi-dimensional database (MDDB) for servicing query statements in a manner transparent to client machine |
US8195602B2 (en) | 2000-02-28 | 2012-06-05 | Yanicklo Technology Limited Liability Company | Relational database management system (RDBMS) employing a relational datastore and a multi-dimensional database (MDDB) for serving query statements from client machines |
US8170984B2 (en) | 2000-02-28 | 2012-05-01 | Yanicklo Technology Limited Liability Company | System with a data aggregation module generating aggregated data for responding to OLAP analysis queries in a user transparent manner |
US8321373B2 (en) | 2000-02-28 | 2012-11-27 | Yanicklo Technology Limited Liability | Method of servicing query statements from a client machine using a database management system (DBMS) employing a relational datastore and a multi-dimensional database (MDDB) |
US7315849B2 (en) | 2000-02-28 | 2008-01-01 | Hyperroll Israel, Ltd. | Enterprise-wide data-warehouse with integrated data aggregation engine |
US20030225736A1 (en) * | 2000-02-28 | 2003-12-04 | Reuven Bakalash | Enterprise-wide resource planning (ERP) system with integrated data aggregation engine |
US20030217079A1 (en) * | 2000-02-28 | 2003-11-20 | Reuven Bakalash | Customer relationship management (CRM) system with integrated data aggregation engine |
US7333982B2 (en) | 2000-02-28 | 2008-02-19 | Hyperroll Israel, Ltd. | Information system having a mode of operation in which queries form one or more clients are serviced using aggregated data retrieved from a plurality of different types of data storage structures for improved query performance |
US8473450B2 (en) | 2000-02-28 | 2013-06-25 | Yanicklo Technology Limited Liability Company | Relational database management system (RDBMS) employing multi-dimensional database (MDDB) for servicing query statements through one or more client machines |
US7376618B1 (en) | 2000-06-30 | 2008-05-20 | Fair Isaac Corporation | Detecting and measuring risk with predictive models using content mining |
US20090234683A1 (en) * | 2000-06-30 | 2009-09-17 | Russell Anderson | Detecting and Measuring Risk with Predictive Models Using Content Mining |
US8032448B2 (en) | 2000-06-30 | 2011-10-04 | Fair Isaac Corporation | Detecting and measuring risk with predictive models using content mining |
WO2002003226A1 (en) * | 2000-06-30 | 2002-01-10 | Fair, Isaac And Company, In. | Detecting and measuring risk with predictive models using content mining |
GB2380034A (en) * | 2000-06-30 | 2003-03-26 | Fair Isaac And Company Inc | Detecting and measuring risk with predictive models using content mining |
US6691132B2 (en) | 2001-05-16 | 2004-02-10 | Reengineering Llc | Semantic encoding and compression of database tables |
US7627558B2 (en) | 2001-07-20 | 2009-12-01 | Vignette Software, LLC | Information retrieval from a collection of information objects tagged with hierarchical keywords |
US8301642B2 (en) | 2001-07-20 | 2012-10-30 | Open Text, S.A. | Information retrieval from a collection of information objects tagged with hierarchical keywords |
US20100077000A1 (en) * | 2001-07-20 | 2010-03-25 | Kommers Jefferson M | Information retrieval from a collection of information objects tagged with hierarchial keywords |
US7028024B1 (en) | 2001-07-20 | 2006-04-11 | Vignette Corporation | Information retrieval from a collection of information objects tagged with hierarchical keywords |
US10303807B2 (en) | 2001-07-20 | 2019-05-28 | Open Text Sa Ulc | Information retrieval from a collection of information objects tagged with hierarchical keywords |
US20060020591A1 (en) * | 2001-07-20 | 2006-01-26 | Kommers Jefferson M | Information retrieval from a collection of information objects tagged with hierarchical keywords |
US20030149707A1 (en) * | 2002-02-06 | 2003-08-07 | Helmbrecht Paul Kurtis | Methods and systems for managing business information on a web site |
US7120632B2 (en) | 2002-02-06 | 2006-10-10 | General Electric Capital Corporation | Methods and systems for managing business information on a web site |
US20030208399A1 (en) * | 2002-05-03 | 2003-11-06 | Jayanta Basak | Personalized product recommendation |
US20130346422A1 (en) * | 2002-06-12 | 2013-12-26 | Global Connect Technology | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US7246128B2 (en) * | 2002-06-12 | 2007-07-17 | Jordahl Jena J | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20040036716A1 (en) * | 2002-06-12 | 2004-02-26 | Jordahl Jena J. | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20100049774A1 (en) * | 2002-12-17 | 2010-02-25 | Vignette Corporation | Object Structure-Based System and Method for Managing Information |
US8271561B2 (en) | 2002-12-17 | 2012-09-18 | Open Text S.A. | Object structure-based system and method for managing information |
US7603371B1 (en) | 2002-12-17 | 2009-10-13 | Vignette Corporation | Object based system and method for managing information |
US7756822B2 (en) * | 2003-12-01 | 2010-07-13 | Sap Ag | Operational reporting architecture |
US20050120051A1 (en) * | 2003-12-01 | 2005-06-02 | Gerd Danner | Operational reporting architecture |
US8572221B2 (en) | 2004-05-26 | 2013-10-29 | Facebook, Inc. | System and method for managing an online social network |
US9241027B2 (en) | 2004-05-26 | 2016-01-19 | Facebook, Inc. | System and method for managing an online social network |
US10628502B2 (en) | 2004-05-26 | 2020-04-21 | Facebook, Inc. | Graph server querying for managing social network information flow |
US9990430B2 (en) | 2004-05-26 | 2018-06-05 | Facebook, Inc. | Graph server querying for managing social network information flow |
US20110099167A1 (en) * | 2004-05-26 | 2011-04-28 | Nicholas Galbreath | Graph Server Querying for Managing Social Network Information Flow |
US9703879B2 (en) | 2004-05-26 | 2017-07-11 | Facebook, Inc. | Graph server querying for managing social network information flow |
US20050278275A1 (en) * | 2004-05-28 | 2005-12-15 | Metadata, Llc | Defining a data dependency path through a body of related data |
US7076493B2 (en) | 2004-05-28 | 2006-07-11 | Metadata, Llc | Defining a data dependency path through a body of related data |
US20060149739A1 (en) * | 2004-05-28 | 2006-07-06 | Metadata, Llc | Data security in a semantic data model |
US7490099B2 (en) | 2004-05-28 | 2009-02-10 | Metadata, Llc. | Rapid application development based on a data dependency path through a body of related data |
US20060218166A1 (en) * | 2004-05-28 | 2006-09-28 | Metadata, Llc | Rapid application development based on a data dependency path through a body of related data |
US9535810B1 (en) | 2007-04-24 | 2017-01-03 | Wal-Mart Stores, Inc. | Layout optimization |
US8560532B2 (en) | 2007-04-24 | 2013-10-15 | Wal-Mart Stores, Inc. | Determining concepts associated with a query |
US8122016B1 (en) * | 2007-04-24 | 2012-02-21 | Wal-Mart Stores, Inc. | Determining concepts associated with a query |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5940822A (en) | Encoding method of members related by multiple concept or group hierarchies and identification of members in a corpus or a database that are descendants of one or more selected concepts or groups from the encoding | |
US6405208B1 (en) | Dynamic recursive build for multidimensional databases and methods and apparatus thereof | |
US7991782B2 (en) | Iterative data analysis enabled through query result abstraction | |
AU773177B2 (en) | System for maintaining precomputed views | |
JP5242875B2 (en) | Multidimensional database and integrated aggregation server | |
Gray et al. | Data cube: A relational aggregation operator generalizing group-by, cross-tab, and sub-totals | |
EP1425682B1 (en) | Database processor for on-line analytical processing of multidimensional data | |
US6931390B1 (en) | Method and mechanism for database partitioning | |
US7747640B2 (en) | Method for regenerating selected rows for an otherwise static result set | |
US20040254939A1 (en) | Singleton abstract model correspondence to multiple physical models | |
US6343286B1 (en) | Efficient technique to defer large object access with intermediate results | |
US7668807B2 (en) | Query rebinding for high-availability database systems | |
JP3431482B2 (en) | Classification item analysis method and recording medium recording this program | |
US6775676B1 (en) | Defer dataset creation to improve system manageability for a database system | |
Albrecht et al. | Management of multidimensional aggregates for efficient online analytical processing | |
Pedersen et al. | Integrating XML data in the TARGIT OLAP system | |
US20080059440A1 (en) | Method and system for managing operation of a user-defined function on a partitioned database | |
Rajamani et al. | Efficient mining for association rules with relational database systems | |
Thomas et al. | Incremental mining of constrained associations | |
Yoshizawa et al. | Sql based association rule mining using commercial rdbms (ibm db2 udb eee) | |
Markl et al. | Processing relational OLAP queries with UB-Trees and multidimensional hierarchical clustering. | |
Aggarwal et al. | Fast algorithms for online generation of profile association rules | |
Johnson et al. | Extending complex ad-hoc OLAP | |
Wang et al. | E cient roll-up and drill-down analysis in relational database | |
Firestone | Dimensional modeling and ER modeling in the data warehouse |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HADERLE, DONALD J.;IYER, BALAKRISHNA RAGHAVENDRA;REEL/FRAME:008958/0994Effective date: 19980106 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 12 |
|
SULP | Surcharge for late payment |
Year of fee payment: 11 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
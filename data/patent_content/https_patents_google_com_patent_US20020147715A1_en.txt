US20020147715A1 - Vendor independent network configuration tool method, system, and product - Google Patents
Vendor independent network configuration tool method, system, and product Download PDFInfo
- Publication number
- US20020147715A1 US20020147715A1 US09/826,757 US82675701A US2002147715A1 US 20020147715 A1 US20020147715 A1 US 20020147715A1 US 82675701 A US82675701 A US 82675701A US 2002147715 A1 US2002147715 A1 US 2002147715A1
- Authority
- US
- United States
- Prior art keywords
- network
- products
- attributes
- weighting value
- computer
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/14—Network analysis or design
- H04L41/145—Network analysis or design involving simulating, designing, planning or modelling of a network
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/02—Standardisation; Integration
- H04L41/022—Multivendor or multi-standard integration
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/08—Configuration management of networks or network elements
- H04L41/0803—Configuration setting
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the present invention relates generally to the field of computer systems and, more specifically to computer systems including a method, system, and product for configuring a computer network utilizing products supplied by different vendors.
- Some network product vendors currently offer configuration tools accessible through the vendor's Internet site.
- a user may access a particular vendor's site, provide information about a network being designed, and receive information about all of that particular vendor's products which could be used to implement the network design.
- these vendors select only the vendor's products to include in the network design. None of the vendors select any competitor's products to include in the recommended network design. Further, the vendors will return information about all of its products which could be selected resulting in an overwhelming amount of data for the designer to consider.
- a method, system, and product are described for configuring a computer network.
- a database is established which includes information about multiple network products.
- the network products are supplied by multiple different vendors.
- the computer network is then configured by selecting ones of the network products to use to implement the computer network.
- the computer network is thus configured utilizing products available from different vendors.
- Attributes are established which are used to evaluate network products.
- Each of the network products are assigned a weighted value for each of the attributes.
- a selection of network products is made utilizing the attributes and the weighted values assigned to the network products.
- FIG. 1 depicts a block diagram of a data processing system in which the present invention may be implemented
- FIG. 2 illustrates a block diagram of a computer system which may be utilized as a server computer system in accordance with the present invention
- FIG. 3 depicts a block diagram of a computer system which may be utilized as a client computer system in accordance with the present invention
- FIG. 4 is a high level flow chart which depicts the specification of attributes and a collection of product information for multiple, different, competing vendors in accordance with the present invention
- FIG. 5 is a high level flow chart which illustrates a vendor independent network configuration tool in accordance with the present invention
- FIG. 6 is a block diagram of a user profile created utilizing a vendor independent database in accordance with the present invention.
- FIG. 7 is a block diagram of a vendor profile created utilizing a vendor independent database in accordance with the present invention.
- the invention is preferably realized using a well-known computing platform, such as an IBM RS/6000 server running the IBM AIX operating system.
- a well-known computing platform such as an IBM RS/6000 server running the IBM AIX operating system.
- IBM AIX operating system such as an IBM personal computer running the Microsoft Windows operating system or a Sun Microsystems workstation running operating systems such as UNIX or LINUX, without departing from the spirit and scope of the invention.
- the present invention is a vendor independent configuration method, system, and product.
- a database is created which includes information about different products available from different vendors. The vendors are typically competitors of each other.
- the configuration tool may be utilized by a user to design a computer network.
- the user must enter information which is used to generate a generic network layout.
- the generic layout describes the types of necessary network products.
- the generic layout does not include any specification of particular vendors' products.
- a weighting value is assigned to each product for each different attribute.
- the attributes are used to evaluate a computer network and to evaluate the different products. For the following attributes, a weighting value may be specified for each product:
- Scaleability ability to add additional components to the system to increase its capabilities
- Availability failure rates (MTBF—mean time between failures);
- Capacity maximum load handled by the system
- Manageability tools or functions available to monitor or manage the system
- Maintainability how easy it is to install and maintain the system
- Measurability ability to provide statistics to measure throughput/traffic
- Capability/Functionality the extra features or functions of this system which are not included in other systems.
- the overall computer network to be designed is evaluated and a weighting value is assigned for some or all of these attributes.
- each product is evaluated and a weighting value is assigned for each of these attributes, for only some or these attributes, or for any other attribute which might be of interest when evaluating products to be included in a computer network.
- the database may include information about each individual product available from a vendor, or it may include information about each product family available from the vendors. Often, each product which is part of a product family will be evaluated similarly with regard to the attributes. Including product families instead of individual products will reduce the size of the database and increase the speed of the configuration tool. Therefore, those skilled in the art will recognize that the present invention may be used with a database including either product families, products, or a combination of the two.
- the database is searched to obtain information about the products which could be used to build the network. For each necessary network component, a calculation is performed to rate each product which might be used to implement that component. In this manner, the highest rated product, or a group of products which received high ratings, may be presented to the user to use to implement the network. The user may then select a product to use to implement each component.
- FIG. 1 depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented.
- Network data processing system 100 is a network of computers in which the present invention may be implemented.
- Network data processing system 100 contains a network 102 , which is the medium used to provide communications links between various devices and computers connected together within network data processing system 100 .
- Network 102 may include connections, such as wire, wireless communication links, or fiber optic cables.
- a server 104 is connected to network 102 along with storage unit 106 .
- clients 108 , 110 , and 112 also are connected to network 102 .
- These clients 108 , 110 , and 112 may be, for example, personal computers or network computers.
- server 104 provides data, such as boot files, operating system images, and applications to clients 108 - 112 .
- Clients 108 , 110 , and 112 are clients to server 104 .
- Network data processing system 100 may include additional servers, clients, and other devices not shown.
- network data processing system 100 is the Internet with network 102 representing a worldwide collection of networks and gateways that use the TCP/IP suite of protocols to communicate with one another.
- network 102 representing a worldwide collection of networks and gateways that use the TCP/IP suite of protocols to communicate with one another.
- network data processing system 100 also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN).
- FIG. 1 is intended as an example, and not as an architectural limitation for the present invention.
- Data processing system 200 may be a symmetric multiprocessor (SMP) system including a plurality of processors 202 and 204 connected to system bus 206 . Alternatively, a single processor system may be employed. Also connected to system bus 206 is memory controller/cache 208 , which provides an interface to local memory 209 . I/O bus bridge 210 is connected to system bus 206 and provides an interface to I/O bus 212 . Memory controller/cache 208 and I/O bus bridge 210 may be integrated as depicted.
- SMP symmetric multiprocessor
- Peripheral component interconnect (PCI) bus bridge 214 connected to I/O bus 212 provides an interface to PCI local bus 216 .
- PCI bus 216 A number of modems may be connected to PCI bus 216 .
- Typical PCI bus implementations will support four PCI expansion slots or add-in connectors.
- Communications links to network computers 108 - 112 in FIG. 1 may be provided through modem 218 and network adapter 220 connected to PCI local bus 216 through add-in boards.
- Additional PCI bus bridges 222 and 224 provide interfaces for additional PCI buses 226 and 228 , from which additional modems or network adapters may be supported. In this manner, data processing system 200 allows connections to multiple network computers.
- a memory-mapped graphics adapter 230 and hard disk 232 may also be connected to I/O bus 212 as depicted, either directly or indirectly.
- FIG. 2 may vary.
- other peripheral devices such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted.
- the depicted example is not meant to imply architectural limitations with respect to the present invention.
- the data processing system depicted in FIG. 2 may be, for example, an IBM RISC/System 6000 system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system.
- IBM RISC/System 6000 system a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system.
- AIX Advanced Interactive Executive
- Data processing system 300 is an example of a client computer.
- Data processing system 300 employs a peripheral component interconnect (PCI) local bus architecture.
- PCI peripheral component interconnect
- AGP Accelerated Graphics Port
- ISA Industry Standard Architecture
- Processor 302 and main memory 304 are connected to PCI local bus 306 through PCI bridge 308 .
- PCI bridge 308 also may include an integrated memory controller and cache memory for processor 302 . Additional connections to PCI local bus 306 may be made through direct component interconnection or through add-in boards.
- local area network (LAN) adapter 310 SCSI host bus adapter 312 , and expansion bus interface 314 are connected to PCI local bus 306 by direct component connection.
- audio adapter 316 graphics adapter 318 , and audio/video adapter 319 are connected to PCI local bus 306 by add-in boards inserted into expansion slots.
- Expansion bus interface 314 provides a connection for a keyboard and mouse adapter 320 , modem 322 , and additional memory 324 .
- Small computer system interface (SCSI) host bus adapter 312 provides a connection for hard disk drive 326 , tape drive 328 , and CD-ROM drive 330 .
- Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors.
- An operating system runs on processor 302 and is used to coordinate and provide control of various components within data processing system 300 in FIG. 3.
- the operating system may be a commercially available operating system, such as Windows 2000, which is available from Microsoft Corporation.
- An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system 300 . “Java” is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented operating system, and applications or programs are located on storage devices, such as hard disk drive 326 , and may be loaded into main memory 304 for execution by processor 302 .
- FIG. 3 may vary depending on the implementation.
- Other internal hardware or peripheral devices such as flash ROM (or equivalent nonvolatile memory) or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in FIG. 3.
- the processes of the present invention may be applied to a multiprocessor data processing system.
- data processing system 300 may be a stand-alone system configured to be bootable without relying on some type of network communication interface, whether or not data processing system 300 comprises some type of network communication interface.
- data processing system 300 may be a Personal Digital Assistant (PDA) device, which is configured with ROM and/or flash ROM in order to provide non-volatile memory for storing operating system files and/or user-generated data.
- PDA Personal Digital Assistant
- data processing system 300 also may be a notebook computer or hand held computer in addition to taking the form of a PDA.
- data processing system 300 also may be a kiosk or a Web appliance.
- FIG. 4 is a high level flow chart which depicts a specification of attributes and a collection of product information for multiple, different, competing vendors in accordance with the present invention.
- the process starts as depicted by block 400 and thereafter passes to block 402 which illustrates a specification of attributes to use to analyze the products.
- block 404 depicts importing product information from each participating vendor for each product, each product family, or both products and product families.
- block 406 illustrates a specification of a weighting value for each product family, and/or each product, for each attribute.
- the process then terminates as depicted by block 408 .
- FIG. 5 is a high level flow chart which illustrates a vendor independent network configuration tool in accordance with the present invention.
- the process starts as depicted by block 500 and thereafter passes to block 502 which illustrates a receipt of a user identifier.
- block 504 depicts a determination of whether or not a saved file is to be used. If a determination is made that a saved file is to be used, the process passes to block 506 which illustrates retrieving a saved file which was saved for this particular user. The process then passes to block 508 . Referring again to block 504 , if a determination is made that a saved file is not to be used, the process passes to block 508 .
- Block 508 depicts acquiring information about the network characteristics of the network the user wishes to design.
- the network characteristics may describe the network as being a local area network, a wide area network, a voice, data, video, or a combined network.
- Information about the intended users of the network is also obtained.
- Information about the total number of users, user locations, type of users, and their requirements is collected.
- the process then passes to block 510 which illustrates creating an attribute table and assigning a weighting value for each attribute which indicates that attribute's relative importance. The user ranks each attribute according to its relative importance.
- block 512 depicts completing a user profile which includes the network information and attribute table, such as depicted by FIG. 6.
- block 514 illustrates using the user profile to create a vendor independent network layout which specifies all network components necessary to complete the network layout.
- Block 516 depicts presenting the layout to the user.
- a black box implementation is created and displayed to the user using only generic names for the different network components. No vendor information is presented. This black box implementation indicates basic connectivity and network functionality.
- the process then passes to block 518 which illustrates a determination of whether or not the network layout is correct. If a determination is made that the network layout is not correct, the process passes to block 520 which depicts a modification of the network layout. The process then passes back to block 518 .
- the process passes to block 522 which illustrates a determination of whether or not the search is to be limited to specified vendors. A user may have a preference for only a particular subset of all vendors. If a determination is made that the search is to be limited to specified vendors, the process passes to block 524 which depicts searching product information for only those specified vendors' product families which match the search criteria. The process then passes to block 532 .
- the process passes to block 524 which illustrates a determination of whether or not the search should be limited to only part of the full database of vendor product information. If a determination is made that the search should be limited, the process passes to block 526 which depicts searching only part of the full database of vendor product information which match the search criteria. The process then passes to block 532 .
- block 530 illustrates searching the full vendor product database for all matching product families for each component of the network. At this point, for each necessary network component, all product families, or products, which could be used to implement that component are retrieved.
- Block 532 depicts calculating a score for each product family or product which matched the search criteria for each component of the network.
- a score is first calculated for each attribute for a product family.
- the attribute score is calculated by multiplying the weighting value assigned to a particular attribute by the weighting value given to this product family for this particular attribute.
- a total score for the product family is calculated by adding the individual attribute scores calculated for this product family together.
- block 534 illustrates presenting the product families having the highest total scores and which matched the search criteria.
- the highest scoring product family may be presented. In this manner, only one result is returned for each component of the network. Alternatively, a particular number of product families may be presented. For example, the product families which received the highest three scores may be presented.
- operability As an example, suppose a user ranked eleven attributes in descending order of importance as follows: operability, scaleability, manageability, performance, and so on with the most important attribute receiving the highest weighting value. The highest attribute, operability, is then assigned a weighting value of “11”. The other attributes are assigned weighting values as follows: scaleability assigned a “10”, manageability assigned a “9”, performance assigned an “8”, and so on down to a “1”. Further suppose a particular vendor family has been assigned a weighting value for the following features: operability—7; scaleability—8; manageability—6; performance—4; availability—8; recoverability—9; and maintainability—6. Therefore, for this vendor family, a score for operability is calculated by multiplying 11 by 7.
- a score for scaleability is calculated by multiplying 10 by 8.
- a score for manageability is calculated by multiplying 9 by 6.
- a score for performance is calculated by multiplying 8 by 4.
- Scores are calculated for this product family for all of the remaining attributes in a similar manner. A total score is then obtained by adding the scores for this product family for each attribute. Thus, the total score for this product family is obtained by adding together 77, 80, 54, 32, and the remaining attribute scores.
- block 536 depicts a determination of whether or not more detail is to be presented to the user. If a determination is made that more detail is to be presented, the process passes to block 538 which illustrates presenting the full results showing all attribute information for all product families which matched the search criteria.
- block 540 depicts a determination of whether or not the search is to be refined. If a determination is made that the search is to be refined, the process passes back to block 508 . Referring again to block 540 , if a determination is made that the search is not to be refined, the process passes to block 542 depicts presenting the model graphically and saving the file associating it with this user identifier. The process then terminates as illustrated by block 544 .
- FIG. 6 is a block diagram of a user profile created utilizing a vendor independent database in accordance with the present invention.
- a plurality of user types which may use the network being configured are listed.
- a weighting value is specified for each attribute. For example, mobile workers require a higher performance than clerical workers. Therefore, the performance attribute is weighted as a “4” for mobile workers, while performance is weighted as a “1” for clerical workers.
- FIG. 7 is a block diagram of a vendor-specific product profile in accordance with the present invention.
- the profile includes a plurality of products, or product families, which have been evaluated with respect to some of the attributes.
- a vendor profile is created for each vendor participating in the present invention, and the results are stored in the database.
- a particular model 4400 has a weighting value of “3” for the availability attribute, a weighting value of “1” for a performance capacity attribute, and a weighting value of “1” for a cost or price attribute.
- the numerical weighting values are used as described above in order to calculate an overall score for each product, or product family for each required component of the network.
- Textual information is also stored for this product family. The textual information may be displayed to a user to aid in a decision. The textual information may be displayed for all products which were selected during a search of the database.
Abstract
Description
- 1. Technical Field
- The present invention relates generally to the field of computer systems and, more specifically to computer systems including a method, system, and product for configuring a computer network utilizing products supplied by different vendors.
- 2. Description of Related Art
- In the networking services business, there are hundreds, if not thousands, of possibilities when designing computer networks. These options revolve around which vendor's networking hardware is used, which carriers/service providers are used for the transport layer, which standards/protocols are most appropriate, and which niche vendors provide specialized network equipment. A large part of configuring a network design is eliminating the large number of options and arriving at a few good options for the particular client situation. This process of eliminating options is highly time consuming and also highly dependent on the individual network designer who is responsible for choosing these options. The network designer may be familiar with and have experience with only a limited number of products. As a result, most network designs end up including products and services that the individual network designer knows and has worked with in the past. However, the network design selected by a particular individual may not be the best choice for a particular client.
- Some network product vendors currently offer configuration tools accessible through the vendor's Internet site. A user may access a particular vendor's site, provide information about a network being designed, and receive information about all of that particular vendor's products which could be used to implement the network design. However, these vendors select only the vendor's products to include in the network design. None of the vendors select any competitor's products to include in the recommended network design. Further, the vendors will return information about all of its products which could be selected resulting in an overwhelming amount of data for the designer to consider.
- Therefore, a need exists for a method, system, and product for configuring a computer network utilizing only the most appropriate products supplied by one or more different vendors.
- A method, system, and product are described for configuring a computer network. A database is established which includes information about multiple network products. The network products are supplied by multiple different vendors. The computer network is then configured by selecting ones of the network products to use to implement the computer network. The computer network is thus configured utilizing products available from different vendors. Attributes are established which are used to evaluate network products. Each of the network products are assigned a weighted value for each of the attributes. A selection of network products is made utilizing the attributes and the weighted values assigned to the network products.
- The above as well as additional objectives, features, and advantages of the present invention will become apparent in the following detailed written description.
- The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:
- FIG. 1 depicts a block diagram of a data processing system in which the present invention may be implemented;
- FIG. 2 illustrates a block diagram of a computer system which may be utilized as a server computer system in accordance with the present invention;
- FIG. 3 depicts a block diagram of a computer system which may be utilized as a client computer system in accordance with the present invention;
- FIG. 4 is a high level flow chart which depicts the specification of attributes and a collection of product information for multiple, different, competing vendors in accordance with the present invention;
- FIG. 5 is a high level flow chart which illustrates a vendor independent network configuration tool in accordance with the present invention;
- FIG. 6 is a block diagram of a user profile created utilizing a vendor independent database in accordance with the present invention; and
- FIG. 7 is a block diagram of a vendor profile created utilizing a vendor independent database in accordance with the present invention.
- A preferred embodiment of the present invention and its advantages are better understood by referring to the figures, like numerals being used for like and corresponding parts of the accompanying figures.
- The invention is preferably realized using a well-known computing platform, such as an IBM RS/6000 server running the IBM AIX operating system. However, it may be realized in other popular computer system platforms, such as an IBM personal computer running the Microsoft Windows operating system or a Sun Microsystems workstation running operating systems such as UNIX or LINUX, without departing from the spirit and scope of the invention.
- The present invention is a vendor independent configuration method, system, and product. A database is created which includes information about different products available from different vendors. The vendors are typically competitors of each other.
- The configuration tool may be utilized by a user to design a computer network. The user must enter information which is used to generate a generic network layout. The generic layout describes the types of necessary network products. The generic layout does not include any specification of particular vendors' products. Once the generic layout is completed, the database is searched to locate the products which could be utilized to implement each component of the network.
- When the database is created, a weighting value is assigned to each product for each different attribute. The attributes are used to evaluate a computer network and to evaluate the different products. For the following attributes, a weighting value may be specified for each product:
- Performance: speed through the system;
- Scaleability: ability to add additional components to the system to increase its capabilities;
- Availability: failure rates (MTBF—mean time between failures);
- Capacity: maximum load handled by the system;
- Recoverability/Fault Tolerance: features which may be included such as dual power supplies, alternate processors;
- Manageability: tools or functions available to monitor or manage the system;
- Maintainability: how easy it is to install and maintain the system;
- Operability: how easy it is to operate or use;
- Accessibility: when does the system need to be available;
- Measurability: ability to provide statistics to measure throughput/traffic;
- Capability/Functionality: the extra features or functions of this system which are not included in other systems; and
- Price.
- The overall computer network to be designed is evaluated and a weighting value is assigned for some or all of these attributes. In addition, each product is evaluated and a weighting value is assigned for each of these attributes, for only some or these attributes, or for any other attribute which might be of interest when evaluating products to be included in a computer network.
- The database may include information about each individual product available from a vendor, or it may include information about each product family available from the vendors. Often, each product which is part of a product family will be evaluated similarly with regard to the attributes. Including product families instead of individual products will reduce the size of the database and increase the speed of the configuration tool. Therefore, those skilled in the art will recognize that the present invention may be used with a database including either product families, products, or a combination of the two.
- The database is searched to obtain information about the products which could be used to build the network. For each necessary network component, a calculation is performed to rate each product which might be used to implement that component. In this manner, the highest rated product, or a group of products which received high ratings, may be presented to the user to use to implement the network. The user may then select a product to use to implement each component.
- With reference now to the figures, FIG. 1 depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network
data processing system 100 is a network of computers in which the present invention may be implemented. Networkdata processing system 100 contains anetwork 102, which is the medium used to provide communications links between various devices and computers connected together within networkdata processing system 100.Network 102 may include connections, such as wire, wireless communication links, or fiber optic cables. - In the depicted example, a
server 104 is connected to network 102 along withstorage unit 106. In addition,clients clients server 104 provides data, such as boot files, operating system images, and applications to clients 108-112.Clients server 104. Networkdata processing system 100 may include additional servers, clients, and other devices not shown. In the depicted example, networkdata processing system 100 is the Internet withnetwork 102 representing a worldwide collection of networks and gateways that use the TCP/IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, consisting of thousands of commercial, government, educational and other computer systems that route data and messages. Of course, networkdata processing system 100 also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN). FIG. 1 is intended as an example, and not as an architectural limitation for the present invention. - Referring to FIG. 2, a block diagram of a data processing system that may be implemented as a server, such as
server 104 in FIG. 1, is depicted in accordance with a preferred embodiment of the present invention.Data processing system 200 may be a symmetric multiprocessor (SMP) system including a plurality ofprocessors system bus 206. Alternatively, a single processor system may be employed. Also connected tosystem bus 206 is memory controller/cache 208, which provides an interface tolocal memory 209. I/O bus bridge 210 is connected tosystem bus 206 and provides an interface to I/O bus 212. Memory controller/cache 208 and I/O bus bridge 210 may be integrated as depicted. - Peripheral component interconnect (PCI)
bus bridge 214 connected to I/O bus 212 provides an interface to PCIlocal bus 216. A number of modems may be connected toPCI bus 216. Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to network computers 108-112 in FIG. 1 may be provided throughmodem 218 andnetwork adapter 220 connected to PCIlocal bus 216 through add-in boards. - Additional
PCI bus bridges additional PCI buses data processing system 200 allows connections to multiple network computers. A memory-mappedgraphics adapter 230 andhard disk 232 may also be connected to I/O bus 212 as depicted, either directly or indirectly. - Those of ordinary skill in the art will appreciate that the hardware depicted in FIG. 2 may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.
- The data processing system depicted in FIG. 2 may be, for example, an IBM RISC/System 6000 system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system.
- With reference now to FIG. 3, a block diagram illustrating a data processing system is depicted in which the present invention may be implemented.
Data processing system 300 is an example of a client computer.Data processing system 300 employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used.Processor 302 andmain memory 304 are connected to PCI local bus 306 throughPCI bridge 308.PCI bridge 308 also may include an integrated memory controller and cache memory forprocessor 302. Additional connections to PCI local bus 306 may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN)adapter 310, SCSIhost bus adapter 312, andexpansion bus interface 314 are connected to PCI local bus 306 by direct component connection. In contrast,audio adapter 316,graphics adapter 318, and audio/video adapter 319 are connected to PCI local bus 306 by add-in boards inserted into expansion slots.Expansion bus interface 314 provides a connection for a keyboard andmouse adapter 320,modem 322, andadditional memory 324. Small computer system interface (SCSI)host bus adapter 312 provides a connection forhard disk drive 326,tape drive 328, and CD-ROM drive 330. Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors. - An operating system runs on
processor 302 and is used to coordinate and provide control of various components withindata processing system 300 in FIG. 3. The operating system may be a commercially available operating system, such as Windows 2000, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing ondata processing system 300. “Java” is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented operating system, and applications or programs are located on storage devices, such ashard disk drive 326, and may be loaded intomain memory 304 for execution byprocessor 302. - Those of ordinary skill in the art will appreciate that the hardware in FIG. 3 may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash ROM (or equivalent nonvolatile memory) or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in FIG. 3. Also, the processes of the present invention may be applied to a multiprocessor data processing system.
- As another example,
data processing system 300 may be a stand-alone system configured to be bootable without relying on some type of network communication interface, whether or notdata processing system 300 comprises some type of network communication interface. As a further example,data processing system 300 may be a Personal Digital Assistant (PDA) device, which is configured with ROM and/or flash ROM in order to provide non-volatile memory for storing operating system files and/or user-generated data. - The depicted example in FIG. 3 and above-described examples are not meant to imply architectural limitations. For example,
data processing system 300 also may be a notebook computer or hand held computer in addition to taking the form of a PDA.Data processing system 300 also may be a kiosk or a Web appliance. - FIG. 4 is a high level flow chart which depicts a specification of attributes and a collection of product information for multiple, different, competing vendors in accordance with the present invention. The process starts as depicted by
block 400 and thereafter passes to block 402 which illustrates a specification of attributes to use to analyze the products. Next, block 404 depicts importing product information from each participating vendor for each product, each product family, or both products and product families. Next, block 406 illustrates a specification of a weighting value for each product family, and/or each product, for each attribute. The process then terminates as depicted byblock 408. - FIG. 5 is a high level flow chart which illustrates a vendor independent network configuration tool in accordance with the present invention. The process starts as depicted by
block 500 and thereafter passes to block 502 which illustrates a receipt of a user identifier. Next, block 504 depicts a determination of whether or not a saved file is to be used. If a determination is made that a saved file is to be used, the process passes to block 506 which illustrates retrieving a saved file which was saved for this particular user. The process then passes to block 508. Referring again to block 504, if a determination is made that a saved file is not to be used, the process passes to block 508. -
Block 508, depicts acquiring information about the network characteristics of the network the user wishes to design. The network characteristics may describe the network as being a local area network, a wide area network, a voice, data, video, or a combined network. Information about the intended users of the network is also obtained. Information about the total number of users, user locations, type of users, and their requirements is collected. The process then passes to block 510 which illustrates creating an attribute table and assigning a weighting value for each attribute which indicates that attribute's relative importance. The user ranks each attribute according to its relative importance. Thereafter, block 512 depicts completing a user profile which includes the network information and attribute table, such as depicted by FIG. 6. Next, block 514 illustrates using the user profile to create a vendor independent network layout which specifies all network components necessary to complete the network layout.Block 516, then, depicts presenting the layout to the user. At this stage in the process, a black box implementation is created and displayed to the user using only generic names for the different network components. No vendor information is presented. This black box implementation indicates basic connectivity and network functionality. - The process then passes to block518 which illustrates a determination of whether or not the network layout is correct. If a determination is made that the network layout is not correct, the process passes to block 520 which depicts a modification of the network layout. The process then passes back to block 518.
- Referring again to block518, if a determination is made that the network layout is correct, the process passes to block 522 which illustrates a determination of whether or not the search is to be limited to specified vendors. A user may have a preference for only a particular subset of all vendors. If a determination is made that the search is to be limited to specified vendors, the process passes to block 524 which depicts searching product information for only those specified vendors' product families which match the search criteria. The process then passes to block 532.
- Referring again to block522, if a determination is made that the search should not be limited to specified vendors, the process passes to block 524 which illustrates a determination of whether or not the search should be limited to only part of the full database of vendor product information. If a determination is made that the search should be limited, the process passes to block 526 which depicts searching only part of the full database of vendor product information which match the search criteria. The process then passes to block 532.
- Referring again to block526, if a determination is made that the search should not be limited to only part of the database, the process passes to block 530 which illustrates searching the full vendor product database for all matching product families for each component of the network. At this point, for each necessary network component, all product families, or products, which could be used to implement that component are retrieved.
-
Block 532 depicts calculating a score for each product family or product which matched the search criteria for each component of the network. A score is first calculated for each attribute for a product family. The attribute score is calculated by multiplying the weighting value assigned to a particular attribute by the weighting value given to this product family for this particular attribute. A total score for the product family is calculated by adding the individual attribute scores calculated for this product family together. - Thereafter, block534 illustrates presenting the product families having the highest total scores and which matched the search criteria. The highest scoring product family may be presented. In this manner, only one result is returned for each component of the network. Alternatively, a particular number of product families may be presented. For example, the product families which received the highest three scores may be presented.
- As an example, suppose a user ranked eleven attributes in descending order of importance as follows: operability, scaleability, manageability, performance, and so on with the most important attribute receiving the highest weighting value. The highest attribute, operability, is then assigned a weighting value of “11”. The other attributes are assigned weighting values as follows: scaleability assigned a “10”, manageability assigned a “9”, performance assigned an “8”, and so on down to a “1”. Further suppose a particular vendor family has been assigned a weighting value for the following features: operability—7; scaleability—8; manageability—6; performance—4; availability—8; recoverability—9; and maintainability—6. Therefore, for this vendor family, a score for operability is calculated by multiplying 11 by 7. A score for scaleability is calculated by multiplying 10 by 8. A score for manageability is calculated by multiplying 9 by 6. A score for performance is calculated by multiplying 8 by 4. Scores are calculated for this product family for all of the remaining attributes in a similar manner. A total score is then obtained by adding the scores for this product family for each attribute. Thus, the total score for this product family is obtained by adding together 77, 80, 54, 32, and the remaining attribute scores.
- The process then passes to block536 which depicts a determination of whether or not more detail is to be presented to the user. If a determination is made that more detail is to be presented, the process passes to block 538 which illustrates presenting the full results showing all attribute information for all product families which matched the search criteria. Next, block 540 depicts a determination of whether or not the search is to be refined. If a determination is made that the search is to be refined, the process passes back to block 508. Referring again to block 540, if a determination is made that the search is not to be refined, the process passes to block 542 depicts presenting the model graphically and saving the file associating it with this user identifier. The process then terminates as illustrated by
block 544. - FIG. 6 is a block diagram of a user profile created utilizing a vendor independent database in accordance with the present invention. A plurality of user types which may use the network being configured are listed. For each user type, a weighting value is specified for each attribute. For example, mobile workers require a higher performance than clerical workers. Therefore, the performance attribute is weighted as a “4” for mobile workers, while performance is weighted as a “1” for clerical workers.
- FIG. 7 is a block diagram of a vendor-specific product profile in accordance with the present invention. The profile includes a plurality of products, or product families, which have been evaluated with respect to some of the attributes. A vendor profile is created for each vendor participating in the present invention, and the results are stored in the database.
- For example, as illustrated by FIG. 7, a
particular model 4400 has a weighting value of “3” for the availability attribute, a weighting value of “1” for a performance capacity attribute, and a weighting value of “1” for a cost or price attribute. The numerical weighting values are used as described above in order to calculate an overall score for each product, or product family for each required component of the network. Textual information is also stored for this product family. The textual information may be displayed to a user to aid in a decision. The textual information may be displayed for all products which were selected during a search of the database. - It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media such a floppy disc, a hard disk drive, a RAM, and CD-ROMs and transmission-type media such as digital and analog communications links.
- The description of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.
Claims (30)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/826,757 US6662183B2 (en) | 2001-04-05 | 2001-04-05 | Vendor independent network configuration tool method, system, and product |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/826,757 US6662183B2 (en) | 2001-04-05 | 2001-04-05 | Vendor independent network configuration tool method, system, and product |
Publications (2)
Publication Number | Publication Date |
---|---|
US20020147715A1 true US20020147715A1 (en) | 2002-10-10 |
US6662183B2 US6662183B2 (en) | 2003-12-09 |
Family
ID=25247452
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/826,757 Expired - Fee Related US6662183B2 (en) | 2001-04-05 | 2001-04-05 | Vendor independent network configuration tool method, system, and product |
Country Status (1)
Country | Link |
---|---|
US (1) | US6662183B2 (en) |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030212955A1 (en) * | 2002-05-13 | 2003-11-13 | Siemens Aktiengesellschaft | Method of generating pages in a markup language for selecting products and a software tool |
EP1480415A1 (en) * | 2003-05-23 | 2004-11-24 | Deutsche Thomson-Brandt Gmbh | Method for assigning an identifier to a peer-group in a peer-to-peer network |
EP1487181A2 (en) * | 2003-05-23 | 2004-12-15 | Thomson Licensing, Inc. | Method for assigning an identifier to a peer-group in a peer-to-peer network |
US20050021793A1 (en) * | 2003-05-23 | 2005-01-27 | Stefan Kubsch | Method for assigning an identifier to a peer-group in a peer-to-peer network |
US20070260640A1 (en) * | 2006-05-08 | 2007-11-08 | Hamilton Rick A Ii | Method for Developing Enterprise Information Life Cycle Management Polices and Solutions |
US20070282897A1 (en) * | 2006-05-31 | 2007-12-06 | Hamilton Rick A | Method and System for Classifying Information |
CN100384146C (en) * | 2005-06-08 | 2008-04-23 | 杭州华三通信技术有限公司 | Method for managing distribution network equipment |
US7418410B2 (en) | 2005-01-07 | 2008-08-26 | Nicholas Caiafa | Methods and apparatus for anonymously requesting bids from a customer specified quantity of local vendors with automatic geographic expansion |
US20120072366A1 (en) * | 2010-09-20 | 2012-03-22 | International Business Machines Corporation | Method, system and program product for independent software vendor (isv) solution evaluation |
EP2720413A1 (en) * | 2012-10-12 | 2014-04-16 | Sling Media, Inc. | Method, computer-readable media and configuration management system comprising a device having a current configuration settings and a set of device parameters |
US10083474B2 (en) * | 2014-12-18 | 2018-09-25 | Expedia, Inc. | Persona for opaque travel item selection |
US11929896B1 (en) * | 2021-01-28 | 2024-03-12 | Wiz, Inc. | System and method for generation of unified graph models for network entities |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7013232B2 (en) * | 2001-08-15 | 2006-03-14 | National Insurance Corporation | Network-based system for configuring a measurement system using configuration information generated based on a user specification |
WO2003098451A1 (en) * | 2002-05-16 | 2003-11-27 | Agency For Science, Technology And Research | Apparatus for discovering computing services architecture an developing patterns of computing services and method therefor |
US7359930B2 (en) * | 2002-11-21 | 2008-04-15 | Arbor Networks | System and method for managing computer networks |
US20060045523A1 (en) * | 2004-08-31 | 2006-03-02 | Kozischek David R | Online system for designing a fiber optic network and associated methods |
US20070084583A1 (en) * | 2005-10-14 | 2007-04-19 | Wen-Hsing Pan | Structure for connecting radiating fins |
US10606961B2 (en) | 2015-11-30 | 2020-03-31 | Corning Optical Communications LLC | Tools and methods for designing indoor and outdoor waveguide system networks |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5963915A (en) * | 1996-02-21 | 1999-10-05 | Infoseek Corporation | Secure, convenient and efficient system and method of performing trans-internet purchase transactions |
US6151643A (en) * | 1996-06-07 | 2000-11-21 | Networks Associates, Inc. | Automatic updating of diverse software products on multiple client computer systems by downloading scanning application to client computer and generating software list on client computer |
US6397221B1 (en) * | 1998-09-12 | 2002-05-28 | International Business Machines Corp. | Method for creating and maintaining a frame-based hierarchically organized databases with tabularly organized data |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5557775A (en) | 1994-02-23 | 1996-09-17 | International Business Machines Corporation | Expert system for designing computer networks |
US5809282A (en) | 1995-06-07 | 1998-09-15 | Grc International, Inc. | Automated network simulation and optimization system |
US5821937A (en) | 1996-02-23 | 1998-10-13 | Netsuite Development, L.P. | Computer method for updating a network design |
US5831610A (en) | 1996-02-23 | 1998-11-03 | Netsuite Development L.P. | Designing networks |
US5784539A (en) | 1996-11-26 | 1998-07-21 | Client-Server-Networking Solutions, Inc. | Quality driven expert system |
US5895454A (en) * | 1997-04-17 | 1999-04-20 | Harrington; Juliette | Integrated interface for vendor/product oriented internet websites |
US6058262A (en) | 1997-04-18 | 2000-05-02 | Geargarage.Com Inc. | Computer-aided-design method and apparatus for networks |
US6442549B1 (en) * | 1997-07-25 | 2002-08-27 | Eric Schneider | Method, product, and apparatus for processing reusable information |
-
2001
- 2001-04-05 US US09/826,757 patent/US6662183B2/en not_active Expired - Fee Related
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5963915A (en) * | 1996-02-21 | 1999-10-05 | Infoseek Corporation | Secure, convenient and efficient system and method of performing trans-internet purchase transactions |
US6151643A (en) * | 1996-06-07 | 2000-11-21 | Networks Associates, Inc. | Automatic updating of diverse software products on multiple client computer systems by downloading scanning application to client computer and generating software list on client computer |
US6397221B1 (en) * | 1998-09-12 | 2002-05-28 | International Business Machines Corp. | Method for creating and maintaining a frame-based hierarchically organized databases with tabularly organized data |
Cited By (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7530018B2 (en) * | 2002-05-13 | 2009-05-05 | Siemens Ag | Method of generating pages in a markup language for selecting products and a software tool |
US20030212955A1 (en) * | 2002-05-13 | 2003-11-13 | Siemens Aktiengesellschaft | Method of generating pages in a markup language for selecting products and a software tool |
EP1480415A1 (en) * | 2003-05-23 | 2004-11-24 | Deutsche Thomson-Brandt Gmbh | Method for assigning an identifier to a peer-group in a peer-to-peer network |
EP1487181A2 (en) * | 2003-05-23 | 2004-12-15 | Thomson Licensing, Inc. | Method for assigning an identifier to a peer-group in a peer-to-peer network |
US20050021793A1 (en) * | 2003-05-23 | 2005-01-27 | Stefan Kubsch | Method for assigning an identifier to a peer-group in a peer-to-peer network |
EP1487181A3 (en) * | 2003-05-23 | 2005-02-09 | Thomson Licensing, Inc. | Method for assigning an identifier to a peer-group in a peer-to-peer network |
US7418410B2 (en) | 2005-01-07 | 2008-08-26 | Nicholas Caiafa | Methods and apparatus for anonymously requesting bids from a customer specified quantity of local vendors with automatic geographic expansion |
CN100384146C (en) * | 2005-06-08 | 2008-04-23 | 杭州华三通信技术有限公司 | Method for managing distribution network equipment |
US7519638B2 (en) | 2006-05-08 | 2009-04-14 | International Business Machines Corporation | Method for developing enterprise information life cycle management policies and solutions |
US20070260640A1 (en) * | 2006-05-08 | 2007-11-08 | Hamilton Rick A Ii | Method for Developing Enterprise Information Life Cycle Management Polices and Solutions |
US8060493B2 (en) | 2006-05-08 | 2011-11-15 | International Business Machines Corporation | Developing enterprise information life cycle management policies and solutions |
US20090070381A1 (en) * | 2006-05-31 | 2009-03-12 | International Business Machines Corporation | Method and system for classifying information |
US7493296B2 (en) | 2006-05-31 | 2009-02-17 | International Business Machines Corporation | Method and system for classifying information |
US20070282897A1 (en) * | 2006-05-31 | 2007-12-06 | Hamilton Rick A | Method and System for Classifying Information |
US8332341B2 (en) | 2006-05-31 | 2012-12-11 | International Business Machine Corporation | Method and system for classifying information |
US20120072366A1 (en) * | 2010-09-20 | 2012-03-22 | International Business Machines Corporation | Method, system and program product for independent software vendor (isv) solution evaluation |
EP2720413A1 (en) * | 2012-10-12 | 2014-04-16 | Sling Media, Inc. | Method, computer-readable media and configuration management system comprising a device having a current configuration settings and a set of device parameters |
US9753985B2 (en) | 2012-10-12 | 2017-09-05 | Sling Media Pvt Ltd. | Methods and apparatus for managing configuration settings |
US10083474B2 (en) * | 2014-12-18 | 2018-09-25 | Expedia, Inc. | Persona for opaque travel item selection |
US10817922B2 (en) | 2014-12-18 | 2020-10-27 | Expedia, Inc. | Persona for opaque travel item selection |
US11929896B1 (en) * | 2021-01-28 | 2024-03-12 | Wiz, Inc. | System and method for generation of unified graph models for network entities |
Also Published As
Publication number | Publication date |
---|---|
US6662183B2 (en) | 2003-12-09 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6662183B2 (en) | Vendor independent network configuration tool method, system, and product | |
US7035919B1 (en) | Method for calculating user weights for thin client sizing tool | |
US7047177B1 (en) | Thin client sizing tool for enterprise server farm solution configurator | |
US7437713B2 (en) | Automated system that tests software on multiple computers | |
US6532481B1 (en) | Product identifier, catalog and locator system and method | |
KR100822084B1 (en) | System and method for configuring a storage area network | |
US6192470B1 (en) | Configuration sizer for selecting system of computer components based on price/performance normalization | |
US20090006066A1 (en) | Method and System for Automatic Selection of Test Cases | |
US20050251786A1 (en) | System and method for dynamic software installation instructions | |
US20020049573A1 (en) | Automated system and method for designing model based architectures of information systems | |
US20060235859A1 (en) | Prescriptive architecutre recommendations | |
US20060248372A1 (en) | Intelligent resource provisioning based on on-demand weight calculation | |
US20030236878A1 (en) | Statistical method for estimating the performances of computer systems | |
KR20080028574A (en) | Integrated search service system and method | |
JP2005234705A (en) | System layout designing program for realizing automatic configuration of system, system layout designing device and system layout designing method | |
US6963828B1 (en) | Metafarm sizer configuration optimization method for thin client sizing tool | |
US20090319951A1 (en) | Aggregating Service Components | |
US20070074074A1 (en) | Application health checks | |
US20090292577A1 (en) | Method and Apparatus for Determining Data Center Resource Availability Using Multiple Time Domain Segments | |
US7043539B1 (en) | Generating a description of a configuration for a virtual network system | |
US7860700B2 (en) | Hardware verification batch computing farm simulator | |
US20060250970A1 (en) | Method and apparatus for managing capacity utilization estimation of a data center | |
US20060212568A1 (en) | System and method for managing a computer network | |
CN100517314C (en) | Method and system for selectively removing entities from a user interface displaying network entities | |
US20020143667A1 (en) | Method and system for inventory management |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BEYER, DAVID PAUL;REEL/FRAME:011736/0595Effective date: 20010403 |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
REMI | Maintenance fee reminder mailed | ||
LAPS | Lapse for failure to pay maintenance fees | ||
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20151209 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044144/0001Effective date: 20170929 |
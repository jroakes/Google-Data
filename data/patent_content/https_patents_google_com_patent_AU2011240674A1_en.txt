AU2011240674A1 - Collaborative cursors in a hosted word processor - Google Patents
Collaborative cursors in a hosted word processorInfo
- Publication number
- AU2011240674A1 AU2011240674A1 AU2011240674A AU2011240674A AU2011240674A1 AU 2011240674 A1 AU2011240674 A1 AU 2011240674A1 AU 2011240674 A AU2011240674 A AU 2011240674A AU 2011240674 A AU2011240674 A AU 2011240674A AU 2011240674 A1 AU2011240674 A1 AU 2011240674A1
- Authority
- AU
- Australia
- Prior art keywords
- document
- user
- users
- editing
- model
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Description
Attorney Docket No.: 16113-2216W01
Collaborative Cursors in a Hosted Word Processor
CROSS-REFERENCE TO RELATED APPLICATIONS
[0001] This application claims priority to U.S. Provisional Application Serial
No. 61/323,259, filed on April 12, 2010, entitled "Collaborative Cursors in a Hosted
Word Processor," the entire contents of which are hereby incorporated by reference.
TECHNICAL FIELD
[0002] This document relates to systems and techniques for managing and displaying locations of cursors for users who are collaboratively editing an electronic document on a hosted server system.
BACKGROUND
[0003] Cloud-based, or hosted, computing generally involves executing applications via a web browser, and obtaining information for the applications from a remote server system or service. Cloud computing provides real advantages over traditional desktop software, such as the ability to access documents from various different computers and locations. Office productivity applications are one type of application currently be delivered by the cloud. For example, users can employ their web browsers to edit word processing and spreadsheet documents that are stored on hosted server systems, may access enterprise resource planning (ERP) applications, may edit photos, and may perform most other activities that they could previously perform with desktop productivity software.
[0004] In a hosted system, users may also be permitted to access the same document simultaneously. For example, the server system may maintain a master document and may communicate changes to the document to various client
Attorney Docket No.: 16113-2216W01 computing devices that are accessing the document over the internet. Such collaborative editing may permit for an improved experience over systems in which each user makes a batch of edits to a document, and then forwards it on to another user, where there is no ready feedback loop to correct edits made by one user when another user knows that the edits are not advisable.
SUMMARY
[0005] This document describes systems and techniques that may be used to display information to users of a hosted word processing system who are in the document at the same time and are editing the document simultaneously (where "simultaneous" indicates the ability to have overlapping editing in a common session, and does not require literal simultaneity). As described here, each user's client device may frequently report to a server system changes, or mutations, that the particular user has recently made to their version of the document. Such reports, which may occur on the order of multiple reports per second when the user is making mutations (e.g., is typing), may be accompanied by data that tells the server system where the user's cursor is located in the document (e.g., between which characters in a character string that represents the content of the document). The server system may resolve the mutations with other mutations it has received from the other users (e.g., if they interfere with each other) and may send updated coordinated mutation information out to all of the client devices that did not submit the corresponding mutations, and may send with such data the data that indicates the positions of the other user's cursors.
[0006] Such features may, in certain implementations, provide one or more advantages. For example, a browser-based document may be displayed to, and edited by, multiple users at a time in a collaborative editing session. Each of the
Attorney Docket No.: 16113-2216W01 users may be visually anchored in being able to see a cursor that marks the editing location for each of the other users. As a result, the particular user may be induced to avoid editing in the same area as the other users, so as to avoid collisions in entered edits.
[0007] In one implementation, a computer-implemented collaborative editing method is disclosed. The method comprises receiving input from a user of a browser-based document editing application on a document displayed by the application; identifying a current location in the document for a cursor of a first user executing the application; receiving from a central server system data that reflects changes made to the document by one or more users other than the first user and current positions in the document of cursors for the one or more other user; updating a document model stored on a computing device that is executing the browser- based application and rendering at least a portion of the model to the browser; and rendering the current positions of the cursors for the one or more other users to the browser. The method can also comprise receiving updated information regarding current positions of the cursors for the one or more other users in the document, and rendering the current positions of the cursors for the one or more other users.
Moreover, the method can include transmitting to the central server system data that describes changes to the document made by the first user, and identifying a current location in the document for a cursor of the first user.
[0008] In some aspects, the method comprises transmitting the data describing changes in the document and identifying a current location for a cursor of the first user more than once per second during periods of active editing activity by the first user. The method can also comprise detecting when the first user is actively editing the document, starting a timer when the first user begins editing the
Attorney Docket No.: 16113-2216W01 document, and transmitting accrued data from the user's editing activity when the timer expires. Moreover, the method can include setting the timer for a period less than 500 milliseconds, and can also comprise setting the timer for a period equal to or less than 250 milliseconds. In addition, the method can also comprise
transmitting the data describing changes in the document and identifying a current location for a cursor of the first user more than once per second during periods of active editing activity by the first user.
[0009] In another implementation, a computer-implemented collaborative editing system is disclosed, and comprises an interface for receiving
communications from a plurality of client devices editing electronic documents using web browsers, including information indicating locations of a cursor in a document in which a particular user is active; an active model manager to identify users other than the particular user who are active in the electronic document; and collaboration logic to provide the users other than the particular user with information that reflects changes made to a model for the electronic document and locations in the document of a cursor for the particular user.
[0010] The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features and advantages will be apparent from the description and drawings, and from the claims.
DESCRIPTION OF DRAWINGS
[001 1] FIG. 1 is a schematic diagram of a system for coordinating cursor locations in a collaborative document editing situation.
[0012] FIGs. 2A and 2B are block diagrams showing components of a model- view-controller implementation of a spreadsheet application.
Attorney Docket No.: 16113-2216W01
[0013] FIG. 2C is a block diagram of a system for permitting collaborative editing of a documented by multiple users through a hosted server system.
[0014] FIG. 3 is a flow chart of an example process for coordinating simultaneous changes to an electronic document.
[0015] FIG. 4 is a swim lane diagram of an example process for coordinating simultaneous changes to an electronic document
[0016] FIG. 5A shows an example screenshot of a word processor that is implementing a collaborative editing session.
[0017] FIG. 5B shows a screenshot of a spreadsheet document being edited collaboratively by multiple users.
[0018] FIG. 6 shows an example of a computer device and a mobile computer device that can be used to implement the techniques described here.
[0019] Like reference symbols in the various drawings indicate like elements.
DETAILED DESCRIPTION
[0020] This document describes systems and techniques for coordinating simultaneous editing of an electronic document by multiple different users who are separated from each other, and from a server system that is hosting the interaction, by the internet. Thus, the techniques discussed here can provide a good user experience while editing a rich document (i.e., a document that can include formatting, images, and other content that goes beyond simple text) in a cloud, or hosted, computing paradigm. As discussed herein, changes that various users make to a document may be represented as mutations that are communicated to a central server system that serves as a referee when the mutations interfere with time-wise overlapping changes by other users, and forwards the mutations (perhaps after processing them into another form) to the users who are not the source of the
Attorney Docket No.: 16113-2216W01 particular mutation or group of mutations in interest. This broadcasting of mutations may occur very frequently when a user is making changes to a document, such as on the order of once every few seconds, once every second, or multiple times per second. Also, the mutation information may be accompanied by information from the first user that indicates the current location of that user's cursor in the document, and information that identifies the user. As a result, when the other users' computing devices receive such information, they may generate a cursor for the first user (though in a color or shape that differs from that of their own cursor), and may also display a tag or flag that shows the first user's handle or name. To minimize visual interference, such a flag may be displayed only when the remote user who corresponds to the cursor is actively editing (e.g., has typed in the last few seconds) or when the local user hovers a pointer over the other user's cursor.
[0021] FIG. 1 is a schematic diagram of a system 100 for coordinating cursor locations in a collaborative document editing situation. In general, the system shown here is a hosted word processing system that multiple users can access at the same time in order to collaboratively edit a common document with each other. Shown schematically here are corresponding web pages for three different users who are working on a newsletter called the "Weekly Collaborator." Page 102 is being edited by a user named Barley; page 104, which may be generated by a client computing device that is remote from page 102, and accessed through a network 1 10 such as the internet, is being operated on by a user named Betty; and page 106 is being operated on by a user named JohnB. Each of the pages, or more particularly each of the web browsers that are generating the pages, may communicate through the network 1 10 with a hosted server system 108. The system 108 may be operated by a company that provides a variety of hosted services, such as search results,
Attorney Docket No.: 16113-2216W01 mapping results, payment transactions for shopping online, translation tools, and other similar services in the cloud.
[0022] Page 102 is shown as having a toolbar 1 12 near its top edge which may display browser buttons and a search box for entering search queries in a familiar manner. Below the toolbar 1 12, there is displayed chrome 1 14 such as in the form of pull down menus and selectable icons that may cause formatting changes to be made to the document that is being edited in the browser page 102. Additional chrome such as scrollbar 1 18 may be provided where the document is larger than the viewport that will fit on the page 102. A handle on the scrollbar 1 18 may be selected by a user to bring other portions of the document into view at one time. As described below, the system may follow a model-view-controller arrangement, so that a model of the document may be stored on a client device, and may be rendered to a document object model (DOM) that may then be displayed on the page 102. Where the document is much larger than the viewport, it may be more efficient to render only a portion of the document at or around the viewport, and to defer rendering or even downloading from the server to the client, the remainder of the document model.
[0023] In this particular example, the users of page 102, page 104, and page
106 are all editing the newsletter furiously to meet an impending deadline. As such, each of them has their cursor located at a different portion of the document from the others, and they are typing text and deleting text from the document as they edit. Using the techniques discussed here, a controller executing on each of the users' client computing devices may intercept such keystrokes and other inputs, and may send information about those keystrokes as mutations to the server 108. Such information may include, for example, a location indexed to the content of the model
Attorney Docket No.: 16113-2216W01 where the edit is currently taking place or has occurred, and a location indexed to the model where the particular user's cursor is currently located. In addition, information for identifying the particular user may be provided so that, as described in more detail below, the server 108 may provide information that identifies cursor location for users other than the local user.
[0024] With respect to the cursor positions, cursor information for all three users is shown on page 102. The cursor information for Barley, the local user, is shown by cursor 122. The cursor 122 and other cursors may be generated as span elements having a narrow width, in a background color that contrasts with the background color of the document that is being edited. The location for the cursor may be determined by identifying a starting location for the cursor and then, as characters are entered, by generating the characters in an off screen div element using the appropriate character size and formatting, and then using standard HTML elements to determine the height and width of such an off screen element. Such a user-entered character may then be provided to the DOM and displayed on the page 102, and the position of the cursor 122 may be indexed forward by the width of the off-screen element, so that the cursor is now to the right of the newly added character, and indicates to Barley, the local user, that his next keystroke will be at that location. In this manner, the cursor 122 and the text and other portions of the document being edited may all be synthetically generated so as to provide a visual impression that matches the format that the particular author intended.
[0025] A cursor 124A is shown for Betty, as editing the document above the location at which Barley is editing the document. A flag 124B is appended to the cursor, so that Barley may immediately recognize that Betty is performing the particular editing. Thus, for example, Barley may know that Betty is an expert in the
Attorney Docket No.: 16113-2216W01 topic around the area where she is editing and may pay less attention to her edits. In contrast, Barley may know that the area in which Betty is editing is an area that he cares deeply about, and he may watch Betty's edits very closely and provide comments to her if she changes the document in a way that he does not like. For example, he may paste a marginal note to the document, he can edit Betty's edits, or he can type a note into a chat session that may be executing automatically with the word processing application.
[0026] JohnB is editing the document at a location far below that of the other two users, and off the current viewport on page 102. As a result, the cursor for JohnB is shown only as a small caret 120A that is appended to a flag 120B, and points downward off the page to indicate to Barley that JohnB is somewhere horizontally in line with the caret 120A, but off the bottom of the page.
[0027] Pages 104 and 106 show corresponding icons and flags that may be displayed to the other users. In particular, those users may have their locations marked merely with an icon like icon 122, and may have the locations of the other users marked with differently-colored icons and possibly appended with a flag or other note that identifies the user that is editing at that location.
[0028] The flags shown here may be turned off in certain situations so that the local user may more readily see the page 102. For example, if Betty stops typing for a predetermined period, such as for 5 seconds or more, the flag 124B may disappear, and only icon 124A may be shown. In this way, an appropriate level of alerting may be provided to a user without overwhelming the visual interface.
[0029] Effective collaborative editing may be obtained in such a situation by having a controller, like the controller discussed below, intercept user inputs and send them as mutations to the server system 108 frequently. For example, when a
Attorney Docket No.: 16113-2216W01 long period has passed without input from the user, and the user starts providing input, a timer may be started and all inputs cached when the timer has expired may be sent as a batch of mutations to the server system 108. The timer may be set for example, a period of three seconds, two seconds, one second, or a fraction of a second, such as by sending uploads to the server system 108, when a user is providing active input, every 200 ms (milliseconds). The server system 108 may then revise such mutations that are passed to it if it has identified that there is a collision between inputs by the users, and may pass the revise mutations back to the other clients. Such information may be accompanied by information that identifies the user who is making the edits and also the location within the document model for the cursor of that user. Such information may be processed by the other client systems, such as by a layout engine generating a span element of a narrow width in a background color that contrasts with the background for the particular user's document. The cursor as a span element may then be placed on an editing surface for page 104 or 106, and may be viewed by the users of those pages.
[0030] This process of intercepting user interactions, determining locations for cursors at the present time, and passing such information up to server 108 and back down to the other clients may occur repeatedly throughout a session of editing a document, until one of the users logs out of the session and their cursor is no longer shown, or until all of the users log out of the session, and the most up-to-date model is the model currently on the server 108. In such a situation, the copies of the model at each of the clients may be cached and reused the next time the users log back into the system, if the server model has not changed from that time, or may be discarded (since the central model can be downloaded at a next session).
Attorney Docket No.: 16113-2216W01
[0031] FIGs. 2A and 2B are block diagrams showing components of a model- view-controller (MVC) implementation of a word processing application. The word processing application, for example, may be executed by a web browser, such as the browser 104 shown in FIG. 1A. In general, the MVC implementation provides for the download of a model from a remote server to a client, and the rendering of the model into a DOM to form a view of the model that may be managed directly by the web browser. The controller may intercept actions, such as clicks on icons and keystrokes on a keyboard, and may cause such actions to be implemented, such as by adding typed characters both to the model on the client and on the remote server (e.g., uploading changes or mutations back to the server, which may be programmed with rules for integrating the mutations into a master model, so that the client-side model matches the master model as the user works).
[0032] Referring to FIG. 2A, a computer application 200A may be configured to display a word processing document 202. The application 200A includes, controls, or accesses a model 204A, a view 206A, and a controller 208A. For example, the model 204A can contain a representation of the state of the word processing document 202, including such elements as character data, formats, styles, paragraphs, sections, breaks, lists, tables, images, formulas, and the like. The view 206A can represent a rendering of the current state of the model 204A. For example, the view can provide a visual representation that combines the substance of the document (e.g., its raw text) with formatting and layout information. The view, when displayed by a browser, provides a form of, if not an exact,
WYSIWYG representation of the document that is defied by the model.
[0033] In addition to the rendering of the model, the view 206A can be used for presenting to the user visual information that is associated with the word
Attorney Docket No.: 16113-2216W01 processing document 202, such as visible user controls for the application (i.e., chrome) and other word processing data. The controller 208A can respond to changes in the model 204A or the view 206A, and can update the state of the model 204A and the view 206A. As shown in FIG. 2A, solid lines between the model 204A, the view 206A, and the controller 208A represent direct references between components, and dashed lines represent listeners. For example, listening for user interaction (e.g., provided by user controls) with the presentation of the view 206A, the controller 208A can modify the model 204A, and can in turn modify the view 206A either directly or indirectly (by causing the view 206A to obtain new model data and render that new data).
[0034] As another example, listening for changes in the model 204A made by another user in a collaborative environment or changes made through an automated data update or another such process, the view 206A can request re-rendering of an updated model or portion of the model. For example, if a user of a client device is only one of multiple users concurrently editing a document, characters and other edits by the other users may be passed to the client device from the server system (and edits by the first user may be passed from the client device to the server system), and the client code may add characters to the model in near real-time, and those changes can be passed into the DOM (e.g., via rendering by the view 206A) - so that each user can see the edits made by the other users very quickly.
[0035] Referring to FIG. 2B, the model-view-controller implementation as presented in FIG. 2A is shown with additional detail. As shown, a computer application 200B (corresponding with the application 200A) includes, controls, or accesses a model 204B (corresponding with the model 204A), a view 206B
Attorney Docket No.: 16113-2216W01
(corresponding with the view 206A), and a controller 208B (corresponding with the controller 208A).
[0036] The model 204B can include one or more document models 210.
Each of the document models 210 can represent a separate document in a collection of word processing documents, for example, and each of the models 210 can include elements such as characters, styles, and entities. Other forms of documents such as spreadsheet documents may also be represented. Model data and elements may be provided by a master document model 238 that is stored on a remote server system via a connection to a network 236 (e.g., the internet).
[0037] Generally, document text in the models 210 is associated with a series of characters. For example, the characters may represent raw text for the word processing document 202, and may also include certain reserved control characters such as characters that indicate the occurrence of a break (e.g., a paragraph break, a page break, or the like). In some implementations, each of the document models 210 can include a one-dimensional character string that includes document characters in an order in which they appear in the document.
[0038] Styles may be used to store information related to the presentation of document text (e.g., the series of characters). For example, text styles may include character formatting attributes such as font, font size, bold, italics, underline, foreground and background colors, alignment, and other such attributes. In some implementations, styles included in each of the document models 210 can be stored in a sparse map. For example, the sparse map can include markers that correspond to changes in styles in the document and pointers to positions in the character string. The pointers, for example, can define style runs between matched markers by specifying locations along the character string at which style changes occur. In
Attorney Docket No.: 16113-2216W01 some implementations, the markers in the matched set may be arranged to be tethered to certain characters in the one-dimensional character string. For example, if text is added between two paired markers, the pointer for one of the markers may shift by an integer equal to a number or characters associated with the added text.
[0039] Entities in each of the models 210 may be used to store information related to objects outside of the document models 210, and may be pointed to by references in the model such as in the one-dimensional character string. For example, entities may include objects such as lists, tables, images, and the like. In some implementations, the references can include object identifiers and pointers to the one-dimensional character string (e.g., from the sparse map) indicating where in the character string the object should appear, or identifiers from within the character string that point to the entities and mark the locations at which the particular entities are to appear in the document when it is rendered and displayed. For example, an image that should appear between two paragraphs may be associated with a special character appearing in the character string after a paragraph marker for one paragraph, and before the first character of the next paragraph.
[0040] The view 206B can generate one or more view items 220 that may enable the user to interact with the application 200B, such as menu bars, tool bars, context menus, chat panes, dialogs, other chrome, and the like. The view 206B can also include a document menu 222 that presents information and control options related to one or more of the document models 210, and one or more of a set of per views 224. For example, one of the per views 224 may be associated with a corresponding one of the sheet models 210. Each of the per views 224 may include components or controls such as selectors (e.g., cursors, selection indicators, and the like) navigation tools (e.g., scrollbars, document maps, outlines, and the like).
Attorney Docket No.: 16113-2216W01
[0041] The controller 208B can include one or more controllers 230 that may listen for and handle user interactions with one or more of the view items 220. In some implementations, each of the controllers 230 may be associated with a corresponding one of the view items 220. For example, menu bar controllers may listen for and handle user interactions with menu bar view items (e.g., relating to various actions that a user would typically take from a row of menu selections), tool bar controllers may listen for and handle user interactions with tool bar view items, context menu controllers may listen for and handle user interactions with context menu view items, and so forth. The determination that a particular event has occurred may cause a particular controller 230 to execute predetermined code or otherwise carry out a predetermined process, such as by updating a local model when a key press is received and uploading information about the key press to a central server system.
[0042] The controller 208B can also include a document controller 232 that may listen for and handle user interactions with the document menu 222. In addition, the controller 208B can include a set of per view controllers 234, where each of the controllers 234 is configured to listen for and handle user interactions with a corresponding view in the set of per views 224. Each of the per view controllers 234 may include various controller types, such as key controllers for intercepting and interpreting keyboard input, mouse controllers for intercepting and interpreting mouse input, and model change controllers for intercepting and interpreting model change events.
[0043] Generally, the controllers included in the controller 208B can transform user-generated events into model and view mutations. For example, based on a user action, a relevant controller (e.g., a controller configured for
Attorney Docket No.: 16113-2216W01 handling the action) may receive one or more events associated with the action and make transient changes to the view 206B before the user action is committed. Then, based on the event properties, the relevant controller can construct a command to mutate the model 204B, execute it, and send the updated model or just data for the particular mutations to the remote server system that hosts the document model 238 via the network 236.
[0044] The controllers may also use timers or other mechanisms to aggregate inputs or mutations, so as to lower the number of updates that need to be made to the local or server-based models. For example, the controllers may implement changes to the local and/or server-based model in batches that occur within predefined time windows, such as by waiting 200ms after an initial keystroke is sensed before sending to the central server system data about all keystrokes received in the time window.
[0045] Many possible user interactions with the application 200B are possible, including interactions that are included in single-user sessions and in multiple-user sessions. For purposes of illustration, a series of example user interactions with the application 200B are described here. For example, to enter text into the word processing document 202, the user may proceed by using a computer mouse to select a desired document location 212 for text insertion by clicking on the document 202. A mouse controller that is included in the per view controllers 234 (e.g., a per view controller associated with the active document 202) can listen for an event that is associated with the mouse positioning input and the mouse click input, and upon intercepting it, can modify the view 206B (e.g., a per view associated with the active document) to provide the user with a visual indicator for the selection (e.g., a cursor). For example, the selected location 212 may be associated with a visible
Attorney Docket No.: 16113-2216W01 cursor (where the cursor is a graphical HTML element such as an image, and is displayed at an appropriate location on a canvas where the document is also being displayed so as to create a synthetic presentation that makes the graphical element look like a true cursor), may be highlighted, or may receive another such
modification. Additionally, the selected location 212 may also be associated with a location in the model 204B. For example, a position in a one-dimensional character string included in the document models 210 can be determined, based on the selected location 212.
[0046] Using a keyboard, the user may enter desired text at the document location 212. A keyboard controller that is included in the per view controllers 234 can listen for events associated with the keyboard input, and upon intercepting them, can modify the view 206B to provide the user with a visual indicator for the input. For example, as the user types text at the location 212, the document 202 may be visually updated to present the text to the user. Additionally, the keyboard controller can modify the model 204B to include entered text by copying the user input to the model. For example, a one-dimensional character string included in the document models 210 can be updated to include the entered characters. Additionally, the document model 238 may be updated to include the entered text, thus coordinating the model 204B with the document model 238. For example, changes to the model 204B may be transmitted to the document model 238 via a connection to the network 236. In some implementations, changes may be sent periodically (e.g., once every 100 milliseconds, once every 200 milliseconds, once every 600 milliseconds, once every second, once every 2 seconds, or another appropriate time interval). In some implementations, changes may be sent based on user activity (e.g., entering a
Attorney Docket No.: 16113-2216W01 paragraph break, applying a formatting change, navigating to another document section, clicking a save button, or some other action).
[0047] As another example, the user may insert an entity (e.g., a list, a table, a hyperlink, an image, or another such object) into the document 202. For example, the user may proceed by using a computer mouse to select a desired document location (e.g., the location 212) for entity insertion by clicking on the document 202. Similar to interactions associated with text entry, for example, a mouse controller included in the per view controllers 234 can listen for an event associated with the mouse positioning input and the mouse click input, and upon intercepting it, can modify view 206B to provide the user with a visual indicator for the selected location. Next, for example, the user may specify the entity for insertion by interacting with one of the view items 220 or with the document menu 222. For example, the user may make a selection on a menu bar to indicate an intent to insert an image. A dialog associated with image selection may be presented to the user, enabling the user to select the desired image.
[0048] Model-view-controller interactions for adding the entity within the application 200B may operate in a similar manner as when a user is entering text. For example, as the user inserts the image at the location 212, the document 202, as it is displayed on an editing surface, may be visually updated to present the image to the user. Additionally, the model 204B may be modified to include a reference to the inserted image by writing the reference to the model. For example, one of the document models 210 (e.g., the model associated with the active document) can be updated to include a reference to the inserted image. A one-dimensional character string may be updated to include a special character indicating the position of the image, and the reference to the image may be stored.
Attorney Docket No.: 16113-2216W01
[0049] When the document 202 is rendered from the model associated with the active document, for example, the image content may be integrated into the document 202 that is displayed to the user. In some implementations, the one- dimensional character string may include multiple instances of an identifier for a single entity. For example, the image may be positioned at multiple locations in the document 202, specified by multiple positions for the identifier in the one- dimensional character string. Thus, a single external entity may be shared within a document, or may be shared among multiple documents - both by common references to the external entity. The document model 238 may be updated to include the inserted image(s), thus coordinating the model 204B with the document model 238. For example, changes to the model 204B may be transmitted to the document model 238 via a connection to the network 236.
[0050] Additionally, for example, the user may modify the formatting of text and entities presented in the document 202. By interacting with one of the view items 220 or with the document menu 222, the user can indicate a desired formatting change (e.g., a change such as changing a font of a selected text block to bold, changing a group of words to be organized as a list, changing a paragraph justification to be right-aligned, changing a document line spacing to be double- spaced, and the like). One of the controllers 230 or the document controller 232 can listen for user interaction with the view 206B, and upon detecting the interaction, can modify the model 204B to include the formatting change. For example, one of the document models 210 (e.g., the model associated with the active document) can be updated to include an element in a sparse map of styles defining the formatting change, and defining the locations along the one-dimensional character string at which the changes in style are to occur. A model change controller included in the
Attorney Docket No.: 16113-2216W01 per view controllers 234 can listen for events associated with the model 204B and can send a request to the view 206B to update accordingly (e.g., by rendering a display of formatted text). In some implementations, the model change controller may also handle model change events that result from collaborative model changes.
[0051] In some implementations, a document model that is one of the document models 210 may include a subset of the document data from the document model 238. For example, if the document model 238 is substantially large, a subset of the data (e.g., a subset associated with a portion of the document that is currently viewable by the user, plus perhaps a buffer area around the currently viewable area, or viewport, so that small scrolling distances may be handled by normal browser interactions without a need to render additional content form the model) may be provided to each client that is currently displaying the word processing document 202. As another example, the full document model 238 may be provided to each client.
[0052] The user may elect to view a different portion of the word processing document 202 than the user is currently viewing in the web browser. For example, by interacting with a scrollbar 214 that is associated with the document 202, the user may indicate an intent to view document data beyond the current viewport, or displayed area. One of the per view controllers 234 (e.g., the per view controller associated with the active document) can listen for user interaction with the view 206B or other appropriate component (e.g., the visual portion of the scrollbar 214), and upon detecting the interaction (e.g., via a computer mouse), can request for the view 206 B to redraw itself.
[0053] If the user specifies a small amount of scrolling, the view 206A may cause itself to be displayed by the browser. For example, a buffer area of document
Attorney Docket No.: 16113-2216W01 data may be maintained in the model 204B (already rendered into a DOM) around the data that is displayed in the visible area of the document 202. If the amount of scrolling specified by the user is determined by the view 206B to be within the bounds of the buffer area of data, the document display may be updated using such pre-rendered data. If the user specifies a larger amount of scrolling, such that the scrolling specified by the user is determined by the view 206B to be outside of the bounds of the pre-rendered buffer data, for example, additional document data from the document model 238 may be downloaded via the network 236. Thus, the model 204B may be updated with information that is related to additional document sections, and the document may be rendered using the downloaded data.
[0054] FIG. 2C is a block diagram of a system 240 for permitting collaborative editing of a document by multiple users through a hosted server system. In general, the system 240 includes a hosted document system 242 executed by one or more computer servers (e.g. a server farm). The hosted document system 242 can provide document hosting services to any number of client users via connections to a network 244 (e.g., the internet). Using the document system 242, client users may create new documents, modify existing documents, share documents, and collaboratively work on documents with other users.
[0055] For purposes of illustration, document hosting services may be provided to browser applications 246, 248, and 250. Each of the applications may be executed by a web browser (e.g., by the browser 104, as shown in FIG. 1 ), and may include model, view, and controller components (e.g., similar to the application 200, shown in FIGs. 2A and 2B). The applications 246, 248, and 250 may be configured to execute computer code (e.g., JavaScript and other code running in a web browser) to display a word processing interface and to perform word processing
Attorney Docket No.: 16113-2216W01 functions associated with one or more documents served by the hosted document system 242.
[0056] As shown in the present illustration, Chris can interact with a web browser 252, Tina can interact with a web browser 254, and Spike can interact with a web browser 256. Each of the browsers 252, 254, and 256 may access any appropriate number of browser applications (e.g., embedded applications, widgets, web services, and the like). For example, browser 252 can access application 246, browser 254 can access application 248, and browser 256 can access application 250.
[0057] By interacting with controls presented by the web browsers, for example, users of the system 240 (e.g., Chris, Spike, and Tina), can work with one or more documents that are managed and provided by the hosted document system 242. For example, the users may access existing documents provided by the system 242 or may create new documents. Each of the browser applications 246, 248, and 250 can communicate with an interface 260 of the document system 242 via the network 244. For example, communication between the browser applications 246, 248, and 250 and the interface 260 may include HTTP (HyperText Transfer Protocol) requests, SOAP (Simple Object Access Protocol) messages, or some other appropriate protocol. In some implementations, client browsers may maintain browser channel connections to the interface 260 for communicating session data between clients and the document system 242.
[0058] The hosted document system 242 can include sub-components for storing and managing information related to system users, documents, and browser applications. The various sub-components may be executed by the same computer server, or may be distributed among multiple computer servers. The sub-
Attorney Docket No.: 16113-2216W01 components may communicate with each other directly (e.g., via messages, transferred files, shared data, remote procedure calls, or some other protocol) or indirectly (e.g., by communicating with an intermediary application). Generally, subcomponents included in the document system 242 can communicate with client applications (e.g., the browser applications 246, 248, and 250) via the interface 260.
[0059] The system 242 can also include one or more data stores for storing user information 270. For example, the user information 270 can include information associated with system users (e.g., Chris, Tina, and Spike). Such information may include general user information and login information (e.g., user names, passwords, e-mail addresses, and the like), information related to one or more devices employed by the users to access the system (e.g., IP addresses, browser versions, connection speeds, and the like), and system usage information (e.g., access times, amount of data accessed, and the like), to name a few possibilities.
[0060] In some implementations, the system 242 can include one or more data stores for storing documents 272 in the form, e.g., of document models like those discussed above and below. For example, the documents 272 can include word processing documents created, maintained, and accessed by system users. As another example, the documents 272 may be generated by an automated process, such as a news feed or another reporting process that is based on gathered data. Information associated with the documents 272 can include document data models, document text, document formatting information, entities (e.g., tables, images, videos, sound clips, or other such objects), and the like.
[0061] The system 242 can also include one or more data stores for storing access information 274. For example, the access information 274 can include information that can be used for controlling access of system users (e.g., users
Attorney Docket No.: 16113-2216W01 included in the user information 270) to system documents (e.g., documents included in the documents 272). Generally, system users may set access privileges for documents that they create or manage. For example, Chris may create a personal letter document and specify the document as being private. Thus, other users of the system (e.g., Tina and Spike) may be unable to locate or access the document, which may have access control limitations applied to it in various familiar manners. As another example, Tina may upload a schedule document and specify the document as being shared and as being viewable by Chris. Thus, Spike may be unable to locate or access the document, but Chris may be able to access the document in view-only mode. In some implementations, Tina, as the document creator, may retain full access to the document, having privileges such as the ability to add, edit, and delete content, having the ability to change privileges, and having the ability to remove the document from the system 242. As another example, Spike may create a document related to a group project and specify Chris and Tina (and himself) as having full access privileges. In some implementations, user groups may be included in the access information 274. For example, a user may create a group and may add one or more users to the group. Rather than select individual users when assigning document permissions, in some instances, users may select a group including the users. The access information 274 may also include such information as the user ids of document users, document access times, and the like.
[0062] In some implementations, the system 242 can include one or more data stores for storing HTML/JavaScript 276. For example, the HTML/JavaScript 276 can include application code for executing the browser applications 246, 248, and 250. The application code may be provided to any of the browsers 252, 254, and 256, for example, when browser users access a web site associated with the
Attorney Docket No.: 16113-2216W01 hosted document system 242. Upon receiving a request for any of the documents 272, for example, the system 242 may provide the HTML/JavaScript 276 in addition to one or more of the documents 272. Using the HTML/JavaScript 276, the browser applications 246, 248, and 250 may render the document data and may provide an interface that enables browser users to interact with the documents. In some implementations, technologies other than HTML and JavaScript may be used for providing application code. For example, for web browsers including an appropriate plugin, another type of compiled or interpreted code may be provided.
[0063] Many possible user interactions with the system 240 are possible, including interactions in single user sessions and in multiple user sessions. For example, in a collaborative editing session, multiple users may simultaneously interact with a document. Although the applications used for editing the document may each behave independently, the applications may follow the same editing rules for updating and rendering the document model. Thus, multiple users may have similar experiences with the document, and may work together to produce a similar document model.
[0064] In an example session, to initiate collaborative word processing document editing, Chris accesses the hosted document system 242 by directing the web browser 252 to a web site (e.g., a domain) that is associated with the system 242. Receiving login information from the browser 252, the system 242 can verify Chris's information against the user information 270. Upon verification, the system 242 can provide HTML/JavaScript 276 to the browser 252 for executing an online word processor (though certain of the code may be passed before verification occurs). The browser can include a portion of the HTML/JavaScript 276 as the
Attorney Docket No.: 16113-2216W01 browser application 246, render chrome associated with the application, and display the application to Chris.
[0065] Chris may interact with the browser application 246 via a set of controls displayed in an application view within the browser 252. For example, Chris may indicate an intent to create a new document by clicking a button or selecting a menu option displayed in the application view. The application controller can intercept the command and pass the command to the interface 260 via the network 244. Receiving the command, the system 242 can add a new document to the documents 272, and add information associated with the new document to the set of active models 262. For example, the active models 262 may include model information associated with documents currently being edited by other users of the system 242.
[0066] A corresponding version of a model in the set of active models 262 may be present at the browser application 246. For example, Chris may add content and make changes to the word processing document provided by the view of the browser application 246, and the corresponding content and changes can be applied to a model that is accessed by the browser application 246 (and associated HTML and JavaScript code running in the browser), and may be propagated to the active models 262.
[0067] Chris may also share the document with one or more users. For example, using controls associated with the application 246, Chris may select Tina and Spike as users who may share the document, and he may assign both Tina and Spike full document privileges. For example, Tina and Spike may be included in a presented list of users commonly sharing documents with Chris, and Chris may select Tina and Spike from the list. As another example, Chris may provide the e-
Attorney Docket No.: 16113-2216W01 mail addresses of Tina and Spike. The system 242 can store the sharing information (e.g., user ids of other users having access to the document, permissions levels for the users, and the like) in the access information 274. In some implementations, the system 242 may send messages (e.g., e-mail, text messages, instant messages, and the like) to users who have received document privileges. In some
implementations, users who have received document privileges may receive a link (e.g., a hyperlink or URL) to the shared document.
[0068] Upon receiving notification of the shared document, Tina and Spike may access the document using their web browsers 254, 256. For example, upon verification, the system 242 can provide HTML/JavaScript 276 to the browser 254, 256 for executing an online word processor. The browsers can include a portion of the HTML/JavaScript 276 as the browser applications 248, 250, can render chrome associated with the application, and can display the applications.
[0069] Additionally, an active model manager 264 included the hosted document system 242 can identify which documents are currently open by users of the system, and users who are active in the document (i.e., Chris), and can set up a collaborative session. For example, the active model manager 264 can determine that the document requested by Tina and by Spike is associated with one or more of the active models 262. The system 242 can then forward the document request to a computer hosting the document, and the computer can associate Tina and Spike with the current session. Additionally, the browser applications 248, 250 can download model data associated with the active model(s) 262, and render and display the downloaded model data. In some implementations, the system 242 can create model instances for Tina and for Spike and can add the instances to the active models 262.
Attorney Docket No.: 16113-2216W01
[0070] In the present example, users may be able to view their own cursors as well as the cursors of other users in a collaborative session. For purposes of illustration, each user's cursor appears to himself/herself as a square. For example, Chris may view his own cursor as a square, and the other users' cursors as a circle or as a triangle. Correspondingly, Tina and Spike may also view their own cursor as a squares, and the other users' cursors as circles or triangles. In some
implementations, the cursors may appear as a different color (which could not be shown here). For example, cursors may generally appear as underlines or vertical bars, where the cursors are different colors for each user.
[0071] In the present example, changes made by each of the users can be sent by the browser applications 246, 248, and 250 to the hosted document system 242, coordinated, and sent back to the other users. In some implementations, the changes can be sent at time intervals (e.g., once every 100 milliseconds, once every 200 milliseconds, once every 600 milliseconds, once every second, once every 2 seconds, or another appropriate time interval). In some implementations, sending can be based at least in part on user activity or inactivity. For example, during periods of user inactivity, changes may be sent or received less frequently than during periods of user activity. When a user is entering data or when a local user hovers over a cursor for another user, a pop-up label that identifies the other user may be displayed, so that the local user can identify who is making changes - though the label may then disappear so that it does not continue to block the document.
[0072] To coordinate multiple document changes made by multiple users, for example, the hosted document system 242 can include collaboration logic 266. For example, the collaboration logic 266 can be executed by one or more code modules
Attorney Docket No.: 16113-2216W01 executed by one or more computer servers associated with the system 242. In some implementations, portions of the collaboration logic can be executed by the browser applications 246, 248, and 250. Generally, the logic 266 can resolve data collisions (e.g., instances where multiple users edit the same document portion or apply conflicting document formats) by applying a consistent set of rules to all user changes. Although, in some instances, one or more users may be prompted to disambiguate a change. For example, if Tina makes a document change and Spike makes a conflicting document change before receiving Tina's change, Spike may be presented with a message from the browser application 250 including possible conflict resolution scenarios. In some implementations, one user may be identified as trumping other users in collision situations. Chris, as the document creator, for example, may be able to apply his changes over changes made by either Tina or Spike in cases of conflict. For example, if Spike edits a passage at the same time as Chris deletes it, the passage (including Spike's edits) may be deleted.
[0073] Thus, the system shown in FIG. 2C may handle collaborative editing of a hosted document by multiple users at one time. The management of such editing can involve a low amount of data passing between the various sub-systems in the system
[0074] FIG. 3 is a flow chart of an example process for coordinating simultaneous changes to an electronic document. In general, the process involves identifying changes in a document and document model made by a user of a client computing device, recording those changes as mutations, identifying a current location of a cursor for the user of the client device, and uploading such information to a server system, which may then share such information with other client devices, perhaps after reformatting or otherwise adjusting the information. This information
Attorney Docket No.: 16113-2216W01 may enable each of the client devices to show edits made by the other devices and the current cursor position of the other devices in real time on each of the local machines.
[0075] The process begins at box 302, where user inputs are received by a client device. These inputs may take a variety of forms, such as typing of text into a word processing, spreadsheet, or drawing document, or other appropriate changes. The input may also involve deleting text, inserting figures, and changing the format or style of elements in a document.
[0076] At box 304, the inputs receive from the user are packaged into a transmission to a central server system. Such information that is transmitted to the server system may include information that identifies the changes made by a user, and locations at which those changes are to be made in a document model that is being managed by the central server system. The changes may also include a revision number so that the central server system may track the order in which changes have arrived, and may use such information to resolve interferences between changes received from different users. In addition, the information may include identifying information for each user so that the users' identities may be shared with other users in a collaborative editing mode for a document.
[0077] At box 306, the client device updates its own version of the document model and renders that model or the updated portion of the model to a document object model (DOM) on the device that is accessible to a browser that will then display the document. At box 308, the device receives model data for the document from the central server system. This received information corresponds to information that other client devices provided to the central server system, similar to the information that the first local client device provided in box 304. Thus, the various
Attorney Docket No.: 16113-2216W01 users are making simultaneous edits, and the communications through the central server system are overlapping with each other.
[0078] In the time since the client device last communicated with the server system, the user of the device may have made edits on the device that affect or are affected by the edits made by other users on other devices. As such, overlapping edits may need to be identified, and transformations may be performed in a manner that matches transformations performed on the other clients and on the server system, so as to generate an updated document model at the local client. The client may also identify cursor positions of the other users, where such positions may be indicated directly in the data that was received form the server system. That data may be added to the local document model, and rendered to the local DOM. Such data may also indicate an identifier, such as a username or handle, to associate with each cursor position. At box 312, the process resolves the edits and adjusts cursor positions for each of the other users that had a cursor previously displayed on the document display at the local client. For example, narrow span elements having background colors that contrasts with the background of the document may be moved within the DOM from their positions indicated in the last communication from the server system, to new positions indicated by the most recent communication from the server system.
[0079] At box 314, the changes are added to the model and by extension to the DOM, when the model is rendered to the DOM area, and at box 316, a browser displays the modified document and the cursors by accessing the DOM. The process shown here may repeat frequently, as noted above, such as repeating multiple times per second. As a result, cursor positions for other users may be frequently updated and may very closely match in time and location to cursor positions currently being
Attorney Docket No.: 16113-2216W01 seen by the other users on their own machines. As a result, multiple users may interact more smoothly because they can readily see the work that other users are performing in the document in real time.
[0080] FIG. 4 is a swim lane diagram of an example process for coordinating simultaneous changes to an electronic document. In general, the process shows an example in which symmetrical actions are taken by two different client computing devices that are both accessing a common document through a central server system to perform collaborative editing on the document.
[0081] The process starts at boxes 402A and 402B, where each of the users at the two client devices begins editing a shared document nearly simultaneously. At boxes 404A and 404B, each of the client devices may transmit those changes to the server system, such as when a timer expires, or for every keystroke or similar change that is identified on one of the clients. At box 406, the server system identifies the document as being edited by the particular user, and in this example, may perform such actions for the two different client devices in parallel, as shown by the stacked boxes in the middle column. The actions may also be stacked in a queue, and handled in the order in which they were received. The server system 408 may also identify other users who are currently in the document and active, so that it may determine which other users to share the information that it is received. At box 410, the server system updates its master copy of the document model and transmits change data to the respective clients, or data associated with the changes from client B will be sent to client A., and changes associated with client B will be sent the client A.
[0082] At boxes 412A and 412B, the clients receive the change data from the central server system and identify potential collisions created by the edits from the
Attorney Docket No.: 16113-2216W01 other client when compared to the edits made on the local client. At boxes 414A and 414B, each of the client devices adjusts its change data representations to resolve such collisions and then, at boxes 416A and 416B, the client devices update their respective models and render them to the respective DOMs on browsers running on the clients. Finally, at boxes 418A and 418B, the clients change the data in the DOM relating to cursors of other users, and shift the representations for those cursors to new positions represented in the data received from the server system at boxes 412A and 412B.
[0083] The process shown here may be a continuous process, in that each client may be continually listening for input made to the users and may transmit the input in batches that may be batches of single inputs such as keystrokes or in slightly larger batches, where the batch size is generally selected to be small enough that inputs may be transmitted to other clients frequently enough to provide a smooth user experience in a collaborative session.
[0084] FIG. 5A shows an example screenshot of a word processor that is implementing a collaborative editing session. In this example, there are three users looking at a resume of Joseph Smith and typing comments at the bottom of the resume. The particular screenshot shown here is a page user named kroberts, as indicated by the fact that an cursor in the middle of the three lines near the bottom of the resume is not accompanied by a flag with a name to it. Presumably, the local user (kroberts here) does not need to see her own name next to her cursor, and also by omitting the flag, the cursor stands out more prominently as compared to the other cursors that look more like each other. The other users, James Pattison and a user named otazi are typing at the same time as kroberts such that if the figure were animated, one would see the three vertical cursor bars moving across the page from
Attorney Docket No.: 16113-2216W01 left-to-right almost in unison. Each update to the DOM from which the document is generated may occur frequently (e.g., multiple times per second), and may include one to several characters, depending on a typing speed of the particular user.
[0085] Also, a chat box is provided to a right side of the page, where the users may type comments as they move along, where those comments will not be included on the document itself. For example, as shown here, in a collaborative editing environment, one of the users may request that the other users perform certain actions. As one example, a first user may request that other users review and edit particular paragraphs in the document while the first user reviews and edits other paragraphs.
[0086] FIG. 5B shows a screenshot of a spreadsheet document being edited collaboratively by multiple users. In this example, the presence of the particular user's cursors is indicated by colored outlines or boxes on particular cells, and here it appears that four different users are concurrently editing column B. of the
spreadsheet.
[0087] FIG. 6 shows an example of a generic computer device 600 and a generic mobile computer device 650, which may be used with the techniques described here. Computing device 600 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Computing device 650 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
Attorney Docket No.: 16113-2216W01
[0088] Computing device 600 includes a processor 602, memory 604, a storage device 606, a high-speed interface 608 connecting to memory 604 and highspeed expansion ports 610, and a low speed interface 612 connecting to low speed bus 614 and storage device 606. Each of the components 602, 604, 606, 608, 610, and 612, are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate. The processor 602 can process instructions for execution within the computing device 600, including instructions stored in the memory 604 or on the storage device 606 to display graphical information for a GUI on an external input/output device, such as display 616 coupled to high speed interface 608. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also, multiple computing devices 600 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
[0089] The memory 604 stores information within the computing device 600.
In one implementation, the memory 604 is a volatile memory unit or units. In another implementation, the memory 604 is a non-volatile memory unit or units. The memory 604 may also be another form of computer-readable medium, such as a magnetic or optical disk.
[0090] The storage device 606 is capable of providing mass storage for the computing device 600. In one implementation, the storage device 606 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. A computer program product can be tangibly
Attorney Docket No.: 16113-2216W01 embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory 604, the storage device 606, memory on processor 602, or a propagated signal.
[0091] The high speed controller 608 manages bandwidth-intensive operations for the computing device 600, while the low speed controller 612 manages lower bandwidth-intensive operations. Such allocation of functions is exemplary only. In one implementation, the high-speed controller 608 is coupled to memory 604, display 616 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 610, which may accept various expansion cards (not shown). In the implementation, low-speed controller 612 is coupled to storage device 606 and low-speed expansion port 614. The low-speed expansion port, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
[0092] The computing device 600 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 620, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 624. In addition, it may be
implemented in a personal computer such as a laptop computer 622. Alternatively, components from computing device 600 may be combined with other components in a mobile device (not shown), such as device 650. Each of such devices may contain
Attorney Docket No.: 16113-2216W01 one or more of computing device 600, 650, and an entire system may be made up of multiple computing devices 600, 650 communicating with each other.
[0093] Computing device 650 includes a processor 652, memory 664, an input/output device such as a display 654, a communication interface 666, and a transceiver 668, among other components. The device 650 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of the components 650, 652, 664, 654, 666, and 668, are
interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
[0094] The processor 652 can execute instructions within the computing device 650, including instructions stored in the memory 664. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide, for example, for coordination of the other components of the device 650, such as control of user interfaces, applications run by device 650, and wireless communication by device 650.
[0095] Processor 652 may communicate with a user through control interface
658 and display interface 656 coupled to a display 654. The display 654 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology. The display interface 656 may comprise appropriate circuitry for driving the display 654 to present graphical and other information to a user. The control interface 658 may receive commands from a user and convert them for submission to the processor 652. In addition, an external interface 662 may be provide in communication with processor 652, so as to enable near area communication of device 650 with other devices. External interface 662 may provide, for example, for wired communication
Attorney Docket No.: 16113-2216W01 in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
[0096] The memory 664 stores information within the computing device 650.
The memory 664 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units. Expansion memory 674 may also be provided and connected to device 650 through expansion interface 672, which may include, for example, a SIMM (Single In Line Memory Module) card interface. Such expansion memory 674 may provide extra storage space for device 650, or may also store applications or other information for device 650. Specifically, expansion memory 674 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, expansion memory 674 may be provide as a security module for device 650, and may be programmed with instructions that permit secure use of device 650. In addition, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
[0097] The memory may include, for example, flash memory and/or NVRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the memory 664, expansion memory 674, memory on processor 652, or a propagated signal that may be received, for example, over transceiver 668 or external interface 662.
Attorney Docket No.: 16113-2216W01
[0098] Device 650 may communicate wirelessly through communication interface 666, which may include digital signal processing circuitry where necessary. Communication interface 666 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 668. In addition, short- range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 670 may provide additional navigation- and location-related wireless data to device 650, which may be used as appropriate by applications running on device 650.
[0099] Device 650 may also communicate audibly using audio codec 660, which may receive spoken information from a user and convert it to usable digital information. Audio codec 660 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 650. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 650.
[00100] The computing device 650 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 680. It may also be implemented as part of a smartphone 682, personal digital assistant, or other similar mobile device.
[00101] Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware,
Attorney Docket No.: 16113-2216W01 firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
[00102] These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium" "computer-readable medium" refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
[00103] To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual
Attorney Docket No.: 16113-2216W01 feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
[00104] The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the Internet.
[00105] The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
[00106] A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example, much of this document has been described with respect to word processing documents but other forms of documents may also be addressed.
[00107] In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. In addition, other steps may be provided, or steps may be eliminated, from the described flows,
Attorney Docket No.: 16113-2216W01 and other components may be added to, or removed from, the described systems. Accordingly, other embodiments are within the scope of the following claims.
Claims (20)
1 . A computer-implemented collaborative editing method, comprising:
receiving input from a user of a browser-based document editing application on a document displayed by the application;
identifying a current location in the document for a cursor of a first user executing the application;
receiving from a central server system data that reflects changes made to the document by one or more users other than the first user and current positions in the document of cursors for the one or more other user;
updating a document model stored on a computing device that is executing the browser-based application and rendering at least a portion of the model to the browser; and
rendering the current positions of the cursors for the one or more other users to the browser.
2. The method of claim 1 , further comprising receiving updated
information regarding current positions of the cursors for the one or more other users in the document, and rendering the current positions of the cursors for the one or more other users.
3. The method of claim 1 , further comprising transmitting to the central server system data that describes changes to the document made by the first user, and identifying a current location in the document for a cursor of the first user. Attorney Docket No.: 16113-2216W01
4. The method of claim 1 , wherein the method comprises transmitting the data describing changes in the document and identifying a current location for a cursor of the first user more than once per second during periods of active editing activity by the first user.
5. The method of claim 4, further comprising detecting when the first user is actively editing the document, starting a timer when the first user begins editing the document, and transmitting accrued data from the user's editing activity when the timer expires.
6. The method of claim 5, further comprising setting the timer for a period less than 500 milliseconds.
7. The method of claim 5, further comprising setting the timer for a period equal to or less than 250 milliseconds.
8. The method of claim 1 , wherein the method comprises transmitting the data describing changes in the document and identifying a current location for a cursor of the first user more than once per second during periods of active editing activity by the first user.
9. One or more tangible computer-readable storage media storing instructions that when executed by one or more computers, perform
operations comprising: Attorney Docket No.: 16113-2216W01 receiving input from a user of a browser-based document editing application on a document displayed by the application;
identifying a current location in the document for a cursor of a first user executing the application;
receiving from a central server system data that reflects changes made to the document by one or more users other than the first user and current positions in the document of cursors for the one or more other user;
updating a document model stored on a computing device that is executing the browser-based application and rendering at least a portion of the model to the browser; and
rendering the current positions of the cursors for the one or more other users to the browser.
10. The tangible computer-readable storage media of claim 9, wherein the operations further comprise receiving updated information regarding current positions of the cursors for the one or more other users in he document, and rendering the current positions of the cursors for the one or more other users.
11 . The tangible computer-readable storage media of claim 9, wherein the operations further comprise transmitting to the central server system data that describes changes to the document made by the first user, and identifying a current location in the document for a cursor of the first user.
12. The tangible computer-readable storage media of claim 9, wherein the operations comprise transmitting the data describing changes in the Attorney Docket No.: 16113-2216W01 document and identifying a current location for a cursor of the first user more than once per second during periods of active editing activity by the first user.
13. The tangible computer-readable storage media of claim 12, wherein the operations further comprise detecting when the first user is actively editing the document, starting a timer when the first user begins editing the document, and transmitting accrued data from the user's editing activity when the timer expires.
14. The tangible computer-readable storage media of claim 9, wherein the operations comprise transmitting the data describing changes in the document and identifying a current location for a cursor of the first user more than once per second during periods of active editing activity by the first user.
15. A computer-implemented collaborative editing system, comprising:
an interface for receiving communications from a plurality of client devices editing electronic documents using web browsers, including information indicating locations of a cursor in a document in which a particular user is active;
an active model manager to identify users other than the particular user who are active in the electronic document; and
collaboration logic to provide the users other than the particular user with information that reflects changes made to a model for the electronic document and locations in the document of a cursor for the particular user. Attorney Docket No.: 16113-2216W01
16. The system of claim 15, further comprising an output interface programmed to receive information from the collaboration logic and to use the information to transmit to client devices, other than a client device from which information about changes to the model have been received, information so that the client devices may reflect the changes and display current cursor positions for the client device from which the information about the changes to the model have been received.
17. The system of claim 15, further comprising a document log that correlates documents to users who are currently accessing the documents.
18. The system of claim 15, wherein the collaboration logic is programmed to provide the information that reflects the changes more frequently than once per second.
19. The system of claim 18, wherein the collaboration logic is programmed to provide the information that reflects the changes more frequently than once every 500 milliseconds.
20. The system of claim 18, wherein the system is programmed to report to each of a plurality of users simultaneously editing a document more than once every 500 milliseconds.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US32325910P | 2010-04-12 | 2010-04-12 | |
US61/323,259 | 2010-04-12 | ||
PCT/US2011/032138 WO2011130286A1 (en) | 2010-04-12 | 2011-04-12 | Collaborative cursors in a hosted word processor |
Publications (2)
Publication Number | Publication Date |
---|---|
AU2011240674A1 true AU2011240674A1 (en) | 2012-11-22 |
AU2011240674B2 AU2011240674B2 (en) | 2015-04-02 |
Family
ID=44169198
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2011240674A Ceased AU2011240674B2 (en) | 2010-04-12 | 2011-04-12 | Collaborative cursors in a hosted word processor |
Country Status (7)
Country | Link |
---|---|
US (3) | US20110252339A1 (en) |
EP (2) | EP2558959A1 (en) |
CN (2) | CN102934105B (en) |
AU (1) | AU2011240674B2 (en) |
CA (1) | CA2796299A1 (en) |
DE (1) | DE202011110880U1 (en) |
WO (1) | WO2011130286A1 (en) |
Families Citing this family (197)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8788319B2 (en) * | 2005-12-30 | 2014-07-22 | Microsoft Corporation | Social context monitor |
US8326814B2 (en) | 2007-12-05 | 2012-12-04 | Box, Inc. | Web-based file management system and service |
US9396279B1 (en) * | 2009-02-17 | 2016-07-19 | Jpmorgan Chase Bank, Na | Collaborative virtual markup |
US20110314392A1 (en) * | 2010-06-17 | 2011-12-22 | Cisco Technology, Inc. | Incorporating calendar interfaces to dynamically adjust presentation information |
JP2012038210A (en) * | 2010-08-10 | 2012-02-23 | Sony Corp | Information processing unit, information processing method, computer program, and content display system |
US9930092B2 (en) | 2010-12-06 | 2018-03-27 | Zoho Corporation Private Limited | Editing an unhosted third party application |
US10554426B2 (en) | 2011-01-20 | 2020-02-04 | Box, Inc. | Real time notification of activities that occur in a web-based collaboration environment |
US20120210243A1 (en) * | 2011-02-11 | 2012-08-16 | Gavin Andrew Ross Uhma | Web co-navigation |
US8996985B1 (en) | 2011-03-16 | 2015-03-31 | Google Inc. | Online document processing service for displaying comments |
US8681866B1 (en) | 2011-04-28 | 2014-03-25 | Google Inc. | Method and apparatus for encoding video by downsampling frame resolution |
US8918723B2 (en) | 2011-05-06 | 2014-12-23 | David H. Sitrick | Systems and methodologies comprising a plurality of computing appliances having input apparatus and display apparatus and logically structured as a main team |
US10402485B2 (en) * | 2011-05-06 | 2019-09-03 | David H. Sitrick | Systems and methodologies providing controlled collaboration among a plurality of users |
US8826147B2 (en) | 2011-05-06 | 2014-09-02 | David H. Sitrick | System and methodology for collaboration, with selective display of user input annotations among member computing appliances of a group/team |
US8918722B2 (en) | 2011-05-06 | 2014-12-23 | David H. Sitrick | System and methodology for collaboration in groups with split screen displays |
US8914735B2 (en) | 2011-05-06 | 2014-12-16 | David H. Sitrick | Systems and methodologies providing collaboration and display among a plurality of users |
US11611595B2 (en) | 2011-05-06 | 2023-03-21 | David H. Sitrick | Systems and methodologies providing collaboration among a plurality of computing appliances, utilizing a plurality of areas of memory to store user input as associated with an associated computing appliance providing the input |
US9330366B2 (en) | 2011-05-06 | 2016-05-03 | David H. Sitrick | System and method for collaboration via team and role designation and control and management of annotations |
US8918724B2 (en) | 2011-05-06 | 2014-12-23 | David H. Sitrick | Systems and methodologies providing controlled voice and data communication among a plurality of computing appliances associated as team members of at least one respective team or of a plurality of teams and sub-teams within the teams |
US8924859B2 (en) | 2011-05-06 | 2014-12-30 | David H. Sitrick | Systems and methodologies supporting collaboration of users as members of a team, among a plurality of computing appliances |
US9106787B1 (en) | 2011-05-09 | 2015-08-11 | Google Inc. | Apparatus and method for media transmission bandwidth control using bandwidth estimation |
US20130117064A1 (en) * | 2011-06-17 | 2013-05-09 | Progress Software Corporation | Business process analysis combining modeling, simulation and collaboration with web and cloud delivery |
US9063912B2 (en) | 2011-06-22 | 2015-06-23 | Box, Inc. | Multimedia content preview rendering in a cloud content management system |
US9978040B2 (en) | 2011-07-08 | 2018-05-22 | Box, Inc. | Collaboration sessions in a workspace on a cloud-based content management system |
WO2013009337A2 (en) | 2011-07-08 | 2013-01-17 | Arnold Goldberg | Desktop application for access and interaction with workspaces in a cloud-based content management system and synchronization mechanisms thereof |
US9197718B2 (en) | 2011-09-23 | 2015-11-24 | Box, Inc. | Central management and control of user-contributed content in a web-based collaboration environment and management console thereof |
US9948988B2 (en) | 2011-10-04 | 2018-04-17 | Ricoh Company, Ltd. | Meeting system that interconnects group and personal devices across a network |
US20150199308A1 (en) | 2011-10-17 | 2015-07-16 | Google Inc. | Systems and methods for controlling the display of online documents |
US8266245B1 (en) | 2011-10-17 | 2012-09-11 | Google Inc. | Systems and methods for incremental loading of collaboratively generated presentations |
US8812946B1 (en) | 2011-10-17 | 2014-08-19 | Google Inc. | Systems and methods for rendering documents |
US8434002B1 (en) * | 2011-10-17 | 2013-04-30 | Google Inc. | Systems and methods for collaborative editing of elements in a presentation document |
US10430388B1 (en) | 2011-10-17 | 2019-10-01 | Google Llc | Systems and methods for incremental loading of collaboratively generated presentations |
US11210610B2 (en) | 2011-10-26 | 2021-12-28 | Box, Inc. | Enhanced multimedia content preview rendering in a cloud content management system |
US8990307B2 (en) | 2011-11-16 | 2015-03-24 | Box, Inc. | Resource effective incremental updating of a remote client with events which occurred via a cloud-enabled platform |
US8738706B1 (en) * | 2011-11-16 | 2014-05-27 | Google Inc. | Systems and methods for collaborative document editing |
GB2500152A (en) | 2011-11-29 | 2013-09-11 | Box Inc | Mobile platform file and folder selection functionalities for offline access and synchronization |
EP2786270A1 (en) * | 2011-11-30 | 2014-10-08 | The University of Surrey | System, process and method for the detection of common content in multiple documents in an electronic system |
US9542366B2 (en) | 2011-12-20 | 2017-01-10 | Apple Inc. | Smart text in document chat |
US20130159849A1 (en) | 2011-12-20 | 2013-06-20 | Keng Fai Lee | Jump to Collaborator Cursor |
US9019123B2 (en) | 2011-12-22 | 2015-04-28 | Box, Inc. | Health check services for web-based collaboration environments |
US9904435B2 (en) | 2012-01-06 | 2018-02-27 | Box, Inc. | System and method for actionable event generation for task delegation and management via a discussion forum in a web-based collaboration environment |
US20130185651A1 (en) * | 2012-01-18 | 2013-07-18 | Microsoft Corporation | People presence detection in a multidocument knowledge base |
US20130191451A1 (en) * | 2012-01-19 | 2013-07-25 | Microsoft Corporation | Presence-based Synchronization |
US11232481B2 (en) | 2012-01-30 | 2022-01-25 | Box, Inc. | Extended applications of multimedia content previews in the cloud-based content management system |
US9965745B2 (en) | 2012-02-24 | 2018-05-08 | Box, Inc. | System and method for promoting enterprise adoption of a web-based collaboration environment |
US9195636B2 (en) | 2012-03-07 | 2015-11-24 | Box, Inc. | Universal file type preview for mobile devices |
US9286597B2 (en) * | 2012-03-30 | 2016-03-15 | Microsoft Technology Licensing, Llc | Tracking co-authoring conflicts using document comments |
US20130262992A1 (en) * | 2012-04-02 | 2013-10-03 | Jane He | Methods and systems for electronic editing and/or signing |
US9575981B2 (en) | 2012-04-11 | 2017-02-21 | Box, Inc. | Cloud service enabled to handle a set of files depicted to a user as a single file in a native operating system |
US9367522B2 (en) | 2012-04-13 | 2016-06-14 | Google Inc. | Time-based presentation editing |
US20130283147A1 (en) * | 2012-04-19 | 2013-10-24 | Sharon Wong | Web-based collaborative document review system |
US9185429B1 (en) | 2012-04-30 | 2015-11-10 | Google Inc. | Video encoding and decoding using un-equal error protection |
US9413587B2 (en) | 2012-05-02 | 2016-08-09 | Box, Inc. | System and method for a third-party application to access content within a cloud-based platform |
GB2514947B (en) | 2012-05-04 | 2015-06-17 | Box Inc | Repository redundancy implementation of a system which incrementally updates clients with events that occured via a cloud-enabled platform |
US20130311598A1 (en) * | 2012-05-16 | 2013-11-21 | Apple Inc. | Cloud-based data item sharing and collaboration among groups of users |
US9691051B2 (en) | 2012-05-21 | 2017-06-27 | Box, Inc. | Security enhancement through application access control |
US8914900B2 (en) | 2012-05-23 | 2014-12-16 | Box, Inc. | Methods, architectures and security mechanisms for a third-party application to access content in a cloud-based platform |
US9712510B2 (en) | 2012-07-06 | 2017-07-18 | Box, Inc. | Systems and methods for securely submitting comments among users via external messaging applications in a cloud-based platform |
GB2505072A (en) | 2012-07-06 | 2014-02-19 | Box Inc | Identifying users and collaborators as search results in a cloud-based system |
US9237170B2 (en) | 2012-07-19 | 2016-01-12 | Box, Inc. | Data loss prevention (DLP) methods and architectures by a cloud service |
US9794256B2 (en) | 2012-07-30 | 2017-10-17 | Box, Inc. | System and method for advanced control tools for administrators in a cloud-based service |
US9369520B2 (en) | 2012-08-19 | 2016-06-14 | Box, Inc. | Enhancement of upload and/or download performance based on client and/or server feedback information |
US8745267B2 (en) | 2012-08-19 | 2014-06-03 | Box, Inc. | Enhancement of upload and/or download performance based on client and/or server feedback information |
GB2513671A (en) | 2012-08-27 | 2014-11-05 | Box Inc | Server side techniques for reducing database workload in implementing selective subfolder synchronization in a cloud-based environment |
US9135462B2 (en) | 2012-08-29 | 2015-09-15 | Box, Inc. | Upload and download streaming encryption to/from a cloud-based platform |
US9117087B2 (en) | 2012-09-06 | 2015-08-25 | Box, Inc. | System and method for creating a secure channel for inter-application communication based on intents |
US9195519B2 (en) | 2012-09-06 | 2015-11-24 | Box, Inc. | Disabling the self-referential appearance of a mobile application in an intent via a background registration |
JP2014056319A (en) * | 2012-09-11 | 2014-03-27 | Canon Inc | Information processor, program, and control method |
US9292833B2 (en) | 2012-09-14 | 2016-03-22 | Box, Inc. | Batching notifications of activities that occur in a web-based collaboration environment |
US9372833B2 (en) * | 2012-09-14 | 2016-06-21 | David H. Sitrick | Systems and methodologies for document processing and interacting with a user, providing storing of events representative of document edits relative to a document; selection of a selected set of document edits; generating presentation data responsive to said selected set of documents edits and the stored events; and providing a display presentation responsive to the presentation data |
US10200256B2 (en) | 2012-09-17 | 2019-02-05 | Box, Inc. | System and method of a manipulative handle in an interactive mobile user interface |
US9553758B2 (en) | 2012-09-18 | 2017-01-24 | Box, Inc. | Sandboxing individual applications to specific user folders in a cloud-based service |
US10915492B2 (en) | 2012-09-19 | 2021-02-09 | Box, Inc. | Cloud-based platform enabled with media content indexed for text-based searches and/or metadata extraction |
WO2014051577A1 (en) * | 2012-09-27 | 2014-04-03 | Hewlett-Packard Development Company, L. P. | Sharing content between collocated mobile devices in an ad-hoc private social group |
US9959420B2 (en) | 2012-10-02 | 2018-05-01 | Box, Inc. | System and method for enhanced security and management mechanisms for enterprise administrators in a cloud-based environment |
US9495364B2 (en) | 2012-10-04 | 2016-11-15 | Box, Inc. | Enhanced quick search features, low-barrier commenting/interactive features in a collaboration platform |
US9665349B2 (en) | 2012-10-05 | 2017-05-30 | Box, Inc. | System and method for generating embeddable widgets which enable access to a cloud-based collaboration platform |
US9756022B2 (en) | 2014-08-29 | 2017-09-05 | Box, Inc. | Enhanced remote key management for an enterprise in a cloud-based environment |
GB2507191B (en) | 2012-10-17 | 2015-03-04 | Box Inc | Remote key management in a cloud-based environment |
US10140198B1 (en) * | 2012-10-30 | 2018-11-27 | Google Llc | Networked desktop environment |
US8819587B1 (en) | 2012-10-30 | 2014-08-26 | Google Inc. | Methods of managing items in a shared workspace |
US20150193492A1 (en) * | 2012-11-08 | 2015-07-09 | Google Inc. | Editing sub-section of an electronic document via notification message |
US9529785B2 (en) | 2012-11-27 | 2016-12-27 | Google Inc. | Detecting relationships between edits and acting on a subset of edits |
CN103853319A (en) * | 2012-11-30 | 2014-06-11 | 英业达科技有限公司 | System, server and method for controlling different devices according to input operation |
FR2998995A1 (en) * | 2012-12-03 | 2014-06-06 | France Telecom | METHOD OF COMMUNICATION BETWEEN MULTIPLE USERS WITH COMMUNICATION TERMINALS THROUGH A VIRTUAL COMMUNICATION SPACE |
JP5916590B2 (en) * | 2012-12-06 | 2016-05-11 | コニカミノルタ株式会社 | Object operation device and object operation control program |
US10235383B2 (en) | 2012-12-19 | 2019-03-19 | Box, Inc. | Method and apparatus for synchronization of items with read-only permissions in a cloud-based environment |
CN103118067B (en) * | 2012-12-26 | 2017-02-08 | 珠海金山办公软件有限公司 | Method and system for intelligent transmission and document opening among multiple devices |
US9396245B2 (en) | 2013-01-02 | 2016-07-19 | Box, Inc. | Race condition handling in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
US9462037B2 (en) | 2013-01-07 | 2016-10-04 | Google Inc. | Dynamically sizing chunks in a partially loaded spreadsheet model |
US9953036B2 (en) | 2013-01-09 | 2018-04-24 | Box, Inc. | File system monitoring in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
EP2755151A3 (en) | 2013-01-11 | 2014-09-24 | Box, Inc. | Functionalities, features and user interface of a synchronization client to a cloud-based environment |
US9172740B1 (en) | 2013-01-15 | 2015-10-27 | Google Inc. | Adjustable buffer remote access |
US9311622B2 (en) * | 2013-01-15 | 2016-04-12 | Google Inc. | Resolving mutations in a partially-loaded spreadsheet model |
EP2757491A1 (en) | 2013-01-17 | 2014-07-23 | Box, Inc. | Conflict resolution, retry condition management, and handling of problem files for the synchronization client to a cloud-based platform |
US9311692B1 (en) | 2013-01-25 | 2016-04-12 | Google Inc. | Scalable buffer remote access |
US9225979B1 (en) | 2013-01-30 | 2015-12-29 | Google Inc. | Remote access encoding |
US20140258969A1 (en) * | 2013-03-05 | 2014-09-11 | Research In Motion Limited | Web-Based Integrated Development Environment For Real-Time Collaborative Application Development |
US20140258968A1 (en) * | 2013-03-05 | 2014-09-11 | Research In Motion Limited | Visual Representation Of Edits For Collaborative Application Development |
US9158518B2 (en) | 2013-03-11 | 2015-10-13 | Blackberry Limited | Collaborative application development environment using a connected device |
US10049084B2 (en) * | 2013-03-18 | 2018-08-14 | Hsc Acquisition, Llc | Rules based content management system and method |
US9773264B2 (en) | 2013-03-26 | 2017-09-26 | Blackberry Limited | Method for providing composite user interface controls and an online storefront for same |
US20140337718A1 (en) * | 2013-05-07 | 2014-11-13 | International Business Machines Corporation | Graphical marking to indicate edited data |
US10725968B2 (en) | 2013-05-10 | 2020-07-28 | Box, Inc. | Top down delete or unsynchronization on delete of and depiction of item synchronization with a synchronization client to a cloud-based platform |
US10846074B2 (en) | 2013-05-10 | 2020-11-24 | Box, Inc. | Identification and handling of items to be ignored for synchronization with a cloud-based platform by a synchronization client |
GB2515192B (en) | 2013-06-13 | 2016-12-14 | Box Inc | Systems and methods for synchronization event building and/or collapsing by a synchronization component of a cloud-based platform |
US9588954B2 (en) * | 2013-06-15 | 2017-03-07 | Microsoft Technology Licensing, Llc | Application/document collaboration in a multi-device environment |
US10133720B2 (en) | 2013-06-15 | 2018-11-20 | Microsoft Technology Licensing, Llc | Showing presence of multiple authors in a spreadsheet |
US9805050B2 (en) | 2013-06-21 | 2017-10-31 | Box, Inc. | Maintaining and updating file system shadows on a local device by a synchronization client of a cloud-based platform |
US9489114B2 (en) * | 2013-06-24 | 2016-11-08 | Microsoft Technology Licensing, Llc | Showing interactions as they occur on a whiteboard |
US9535924B2 (en) | 2013-07-30 | 2017-01-03 | Box, Inc. | Scalability improvement in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
CN105706080B (en) | 2013-08-07 | 2020-01-10 | 微软技术许可有限责任公司 | Augmenting and presenting captured data |
US9971752B2 (en) | 2013-08-19 | 2018-05-15 | Google Llc | Systems and methods for resolving privileged edits within suggested edits |
US10258886B2 (en) | 2013-09-04 | 2019-04-16 | Nvidia Corporation | Dynamic interface control device mapping when game sharing |
US11130055B2 (en) | 2013-09-04 | 2021-09-28 | Nvidia Corporation | System and method for granting remote access to a video game executed on a video game console or network client |
JP2015052821A (en) * | 2013-09-05 | 2015-03-19 | 株式会社東芝 | Communication device and communication method |
GB2518298A (en) | 2013-09-13 | 2015-03-18 | Box Inc | High-availability architecture for a cloud-based concurrent-access collaboration platform |
US8892679B1 (en) | 2013-09-13 | 2014-11-18 | Box, Inc. | Mobile device, methods and user interfaces thereof in a mobile device platform featuring multifunctional access and engagement in a collaborative environment provided by a cloud-based platform |
US10509527B2 (en) | 2013-09-13 | 2019-12-17 | Box, Inc. | Systems and methods for configuring event-based automation in cloud-based collaboration platforms |
US9704137B2 (en) * | 2013-09-13 | 2017-07-11 | Box, Inc. | Simultaneous editing/accessing of content by collaborator invitation through a web-based or mobile application to a cloud-based collaboration platform |
US10866931B2 (en) | 2013-10-22 | 2020-12-15 | Box, Inc. | Desktop application for accessing a cloud collaboration platform |
US9348803B2 (en) | 2013-10-22 | 2016-05-24 | Google Inc. | Systems and methods for providing just-in-time preview of suggestion resolutions |
US9407596B2 (en) * | 2013-11-20 | 2016-08-02 | International Business Machines Corporation | Interactive splitting of entries in social collaboration environments |
JP6244902B2 (en) * | 2013-12-27 | 2017-12-13 | 富士通株式会社 | Inter-gadget display cooperation method, inter-gadget display cooperation program, and information processing apparatus |
US20150199454A1 (en) * | 2014-01-10 | 2015-07-16 | Brigham Young University | Concurrent design and analysis of an engineering object |
EP3105688B1 (en) * | 2014-02-11 | 2020-09-16 | Wix.com Ltd. | System for synchronization of changes in edited websites and interactive applications |
US9898520B2 (en) | 2014-03-25 | 2018-02-20 | Open Text Sa Ulc | Systems and methods for seamless access to remotely managed documents using synchronization of locally stored documents |
CN104980453B (en) * | 2014-04-02 | 2018-10-30 | 纬创资通股份有限公司 | Method, system, electronic device and the server of simultaneous display operation information |
US10530854B2 (en) | 2014-05-30 | 2020-01-07 | Box, Inc. | Synchronization of permissioned content in cloud-based environments |
US10038731B2 (en) | 2014-08-29 | 2018-07-31 | Box, Inc. | Managing flow-based interactions with cloud-based shared content |
US9894119B2 (en) | 2014-08-29 | 2018-02-13 | Box, Inc. | Configurable metadata-based automation and content classification architecture for cloud-based collaboration platforms |
US10574442B2 (en) | 2014-08-29 | 2020-02-25 | Box, Inc. | Enhanced remote key management for an enterprise in a cloud-based environment |
US20160098162A1 (en) * | 2014-10-06 | 2016-04-07 | Lenovo (Singapore) Pte. Ltd. | Pen based locking mechanism |
CN105630757B (en) * | 2014-11-07 | 2019-11-26 | 珠海金山办公软件有限公司 | A kind of data editing method and device |
US10191890B2 (en) * | 2014-12-17 | 2019-01-29 | Microsoft Technology Licensing, Llc | Persistent viewports |
WO2016144928A1 (en) * | 2015-03-09 | 2016-09-15 | Sensor Technologies Llc | Multiuser interactive display system and method |
US9987561B2 (en) | 2015-04-02 | 2018-06-05 | Nvidia Corporation | System and method for multi-client control of a common avatar |
US9953018B2 (en) * | 2015-05-01 | 2018-04-24 | Microsoft Technology Licensing, Llc | Transfer of content between documents of different storage types |
US10394949B2 (en) | 2015-06-22 | 2019-08-27 | Microsoft Technology Licensing, Llc | Deconstructing documents into component blocks for reuse in productivity applications |
US10339183B2 (en) | 2015-06-22 | 2019-07-02 | Microsoft Technology Licensing, Llc | Document storage for reuse of content within documents |
US10740349B2 (en) | 2015-06-22 | 2020-08-11 | Microsoft Technology Licensing, Llc | Document storage for reuse of content within documents |
US10565297B2 (en) | 2015-06-26 | 2020-02-18 | Microsoft Technology Licensing, Llc. | Rumored changes for real-time coauthoring |
WO2017044409A1 (en) | 2015-09-07 | 2017-03-16 | Voicebox Technologies Corporation | System and method of annotating utterances based on tags assigned by unmanaged crowds |
US9519766B1 (en) | 2015-09-07 | 2016-12-13 | Voicebox Technologies Corporation | System and method of providing and validating enhanced CAPTCHAs |
US9448993B1 (en) | 2015-09-07 | 2016-09-20 | Voicebox Technologies Corporation | System and method of recording utterances using unmanaged crowds for natural language processing |
US9401142B1 (en) | 2015-09-07 | 2016-07-26 | Voicebox Technologies Corporation | System and method for validating natural language content using crowdsourced validation jobs |
US9786277B2 (en) * | 2015-09-07 | 2017-10-10 | Voicebox Technologies Corporation | System and method for eliciting open-ended natural language responses to questions to train natural language processors |
US20170075507A1 (en) | 2015-09-16 | 2017-03-16 | International Business Machines Corporation | Displaying user activity in real-time collaborative editing systems |
US10204077B2 (en) * | 2015-09-21 | 2019-02-12 | Facebook, Inc. | Rich text editor |
US11194398B2 (en) * | 2015-09-26 | 2021-12-07 | Intel Corporation | Technologies for adaptive rendering using 3D sensors |
CN105302787A (en) * | 2015-11-10 | 2016-02-03 | 浪潮软件股份有限公司 | Method and device for table data editing |
US20170129870A1 (en) * | 2015-11-11 | 2017-05-11 | Mohan Murali Alapati | Compositions and methods for the treatment of neurological diseases |
US9667676B1 (en) * | 2016-01-29 | 2017-05-30 | Dropbox, Inc. | Real time collaboration and document editing by multiple participants in a content management system |
US11102188B2 (en) * | 2016-02-01 | 2021-08-24 | Red Hat, Inc. | Multi-tenant enterprise application management |
CN107515710A (en) * | 2016-06-16 | 2017-12-26 | 阿里巴巴集团控股有限公司 | Instant communication processing method, device, equipment and system |
US10310716B2 (en) * | 2016-06-27 | 2019-06-04 | Hancom Inc. | Apparatus for supporting cooperation for joint editing of electronic document, and method of operating the same |
US10733478B2 (en) * | 2016-08-31 | 2020-08-04 | Facebook, Inc. | Systems and methods for processing media content that depict objects |
US20180063206A1 (en) * | 2016-08-31 | 2018-03-01 | Microsoft Technology Licensing, Llc | Media Communication |
US10635286B2 (en) * | 2016-10-23 | 2020-04-28 | Oracle International Corporation | Visualizations supporting unlimited rows and columns |
US11003632B2 (en) | 2016-11-28 | 2021-05-11 | Open Text Sa Ulc | System and method for content synchronization |
US10382547B2 (en) * | 2017-01-31 | 2019-08-13 | Box, Inc. | Collaborative cloud-based document editing from a browser-enabled platform native application |
US11200071B2 (en) * | 2017-02-27 | 2021-12-14 | International Business Machines Corporation | Cognitive scrollbar |
US11163616B2 (en) * | 2017-03-07 | 2021-11-02 | Polyjuice Ab | Systems and methods for enabling interoperation of independent software applications |
US10666593B2 (en) * | 2017-03-21 | 2020-05-26 | Domo, Inc. | Systems and methods for messaging and collaboration |
KR101880507B1 (en) * | 2017-04-21 | 2018-07-20 | 주식회사 한글과컴퓨터 | Client terminal device that supports resizing of a figure embedded in a web document and operating method thereof |
US10068002B1 (en) | 2017-04-25 | 2018-09-04 | Palantir Technologies Inc. | Systems and methods for adaptive data replication |
KR101880508B1 (en) * | 2017-04-27 | 2018-07-20 | 주식회사 한글과컴퓨터 | Web document editing support apparatus and method for supporting list generation in web documents |
KR101781844B1 (en) | 2017-05-19 | 2017-09-27 | 주식회사 한글과컴퓨터 | Apparatus for synchronizing combination letter of markup language based document and operating method thereof |
US11301431B2 (en) | 2017-06-02 | 2022-04-12 | Open Text Sa Ulc | System and method for selective synchronization |
US20190004639A1 (en) * | 2017-06-29 | 2019-01-03 | Microsoft Technology Licensing, Llc | Providing living avatars within virtual meetings |
US10380196B2 (en) * | 2017-12-08 | 2019-08-13 | Palantir Technologies Inc. | Systems and methods for using linked documents |
CN110209308A (en) * | 2018-03-13 | 2019-09-06 | 腾讯科技（深圳）有限公司 | Cursor control method and relevant device |
CN108549623B (en) * | 2018-04-12 | 2022-03-01 | 北京三快在线科技有限公司 | Collaborative document editing control method and device, electronic equipment and storage medium |
US20190361580A1 (en) * | 2018-05-23 | 2019-11-28 | Microsoft Technology Licensing, Llc | Progressive presence user interface for collaborative documents |
US10902188B2 (en) * | 2018-08-20 | 2021-01-26 | International Business Machines Corporation | Cognitive clipboard |
CN109710909B (en) * | 2018-12-29 | 2020-07-07 | 腾讯科技（深圳）有限公司 | Content acquisition method, device, terminal and storage medium |
CN109918345B (en) * | 2019-02-22 | 2023-11-03 | 腾讯科技（深圳）有限公司 | Document processing method, device, terminal and storage medium |
US11244100B2 (en) * | 2019-05-08 | 2022-02-08 | Microsoft Technology Licensing, Llc | Visualizing changes based on document scope |
US11379016B2 (en) | 2019-05-23 | 2022-07-05 | Intel Corporation | Methods and apparatus to operate closed-lid portable computers |
CN110290218B (en) * | 2019-07-05 | 2022-04-19 | 永中软件股份有限公司 | File annotation method and system, and computer readable medium |
US11652930B2 (en) * | 2019-07-30 | 2023-05-16 | Cimpress Schweiz Gmbh | Systems and methods for synchronizing document edits using application state variables |
JP2021043719A (en) * | 2019-09-11 | 2021-03-18 | 富士ゼロックス株式会社 | Information processing apparatus and program |
US11543873B2 (en) | 2019-09-27 | 2023-01-03 | Intel Corporation | Wake-on-touch display screen devices and related methods |
CN110752984B (en) * | 2019-10-24 | 2021-10-15 | 北京字节跳动网络技术有限公司 | Method and device for displaying online document, electronic equipment and storage medium |
US11733761B2 (en) | 2019-11-11 | 2023-08-22 | Intel Corporation | Methods and apparatus to manage power and performance of computing devices based on user presence |
US20210234908A1 (en) * | 2019-12-20 | 2021-07-29 | Atlassian Pty Ltd. | Systems and methods for collaborative editing an electronic resource using client device designations |
US11809535B2 (en) | 2019-12-23 | 2023-11-07 | Intel Corporation | Systems and methods for multi-modal user device authentication |
US11360528B2 (en) | 2019-12-27 | 2022-06-14 | Intel Corporation | Apparatus and methods for thermal management of electronic user devices based on user activity |
US11157089B2 (en) * | 2019-12-27 | 2021-10-26 | Hypori Llc | Character editing on a physical device via interaction with a virtual device user interface |
US11763559B2 (en) * | 2020-02-14 | 2023-09-19 | Magic Leap, Inc. | 3D object annotation |
US11388209B2 (en) * | 2020-03-19 | 2022-07-12 | DTEN, Inc. | Interactive broadcast |
US20210365231A1 (en) * | 2020-05-25 | 2021-11-25 | Shopify Inc. | Systems and methods for displaying a cursor on another user device |
US20220109651A1 (en) * | 2020-10-07 | 2022-04-07 | Microsoft Technology Licensing, Llc | Interactive components for user collaboration |
WO2022079123A1 (en) * | 2020-10-13 | 2022-04-21 | Pitch Software Gmbh | Workspace video collaboration |
US11366583B1 (en) * | 2021-02-02 | 2022-06-21 | Bank Of America Corporation | Computer-to-computer users# edit and event transfer and synchronization |
US11863600B2 (en) * | 2021-06-30 | 2024-01-02 | Dropbox, Inc. | Techniques for efficient communication during a video collaboration session |
US11863615B2 (en) | 2022-03-18 | 2024-01-02 | T-Mobile Usa, Inc. | Content management systems providing zero recovery time objective |
US11935007B1 (en) | 2022-12-27 | 2024-03-19 | Dropbox, Inc. | Generating collaborative content items to provide customizable graphical representations in online graphical user interfaces |
Family Cites Families (133)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5528743A (en) | 1993-05-27 | 1996-06-18 | Apple Computer, Inc. | Method and apparatus for inserting text on a pen-based computer system |
US5793966A (en) | 1995-12-01 | 1998-08-11 | Vermeer Technologies, Inc. | Computer system and computer-implemented process for creation and maintenance of online services |
US5761669A (en) | 1995-06-06 | 1998-06-02 | Microsoft Corporation | Controlling access to objects on multiple operating systems |
US6651108B2 (en) | 1995-08-14 | 2003-11-18 | Next Software, Inc. | Method and apparatus for generating object-oriented world wide web pages |
US5930813A (en) | 1995-12-21 | 1999-07-27 | Adobe Systems Incorporated | Method and system for designating objects |
US5758358A (en) | 1996-01-29 | 1998-05-26 | Microsoft Corporation | Method and system for reconciling sections of documents |
US6006239A (en) | 1996-03-15 | 1999-12-21 | Microsoft Corporation | Method and system for allowing multiple users to simultaneously edit a spreadsheet |
US5895476A (en) | 1996-09-09 | 1999-04-20 | Design Intelligence, Inc. | Design engine for automatic reformatting for design and media |
US6006252A (en) | 1996-10-08 | 1999-12-21 | Wolfe; Mark A. | System and method for communicating information relating to a network resource |
JP3739525B2 (en) | 1996-12-27 | 2006-01-25 | 富士通株式会社 | Variable delay circuit and semiconductor integrated circuit device |
US6662210B1 (en) * | 1997-03-31 | 2003-12-09 | Ncr Corporation | Method of remote collaboration system |
JP3143079B2 (en) | 1997-05-30 | 2001-03-07 | 松下電器産業株式会社 | Dictionary index creation device and document search device |
US7031954B1 (en) | 1997-09-10 | 2006-04-18 | Google, Inc. | Document retrieval system with access control |
JPH11208130A (en) | 1998-01-23 | 1999-08-03 | Fujicopian Co Ltd | Thermal transfer recording medium |
AUPP252298A0 (en) * | 1998-03-24 | 1998-04-23 | 80-20 Software Pty Limited | Document management software |
US6154738A (en) | 1998-03-27 | 2000-11-28 | Call; Charles Gainor | Methods and apparatus for disseminating product information via the internet using universal product codes |
US6243706B1 (en) | 1998-07-24 | 2001-06-05 | Avid Technology, Inc. | System and method for managing the creation and production of computer generated works |
US6377354B1 (en) | 1998-09-21 | 2002-04-23 | Microsoft Corporation | System and method for printing a document having merged text and graphics contained therein |
JP3904752B2 (en) | 1999-01-26 | 2007-04-11 | アルプス電気株式会社 | Reflective liquid crystal display device and manufacturing method thereof |
US6512531B1 (en) | 1999-04-09 | 2003-01-28 | Adobe Systems Incorporated | Font navigation tool |
US7064757B1 (en) | 1999-05-07 | 2006-06-20 | Apple Computer, Inc. | Automatic synthesis of font tables for character layout |
US6501779B1 (en) | 1999-05-26 | 2002-12-31 | Nxi Communications, Inc. | Network communication system |
US7330875B1 (en) | 1999-06-15 | 2008-02-12 | Microsoft Corporation | System and method for recording a presentation for on-demand viewing over a computer network |
US6971105B1 (en) * | 1999-07-29 | 2005-11-29 | Rehle Visual Communications Llc | Method, apparatus, and computer program product for deferred completion of multi-step user transaction applications |
US6327584B1 (en) | 1999-07-30 | 2001-12-04 | Hewlett-Packard Company | Apparatus and method for using version control to dynamically update files while the files are available for access |
JP3498020B2 (en) | 1999-09-29 | 2004-02-16 | Ｎｅｃ液晶テクノロジー株式会社 | Active matrix substrate and manufacturing method thereof |
US7047033B2 (en) | 2000-02-01 | 2006-05-16 | Infogin Ltd | Methods and apparatus for analyzing, processing and formatting network information such as web-pages |
US6704798B1 (en) | 2000-02-08 | 2004-03-09 | Hewlett-Packard Development Company, L.P. | Explicit server control of transcoding representation conversion at a proxy or client location |
US7009626B2 (en) | 2000-04-14 | 2006-03-07 | Picsel Technologies Limited | Systems and methods for generating visual representations of graphical data and digital document processing |
US7210099B2 (en) | 2000-06-12 | 2007-04-24 | Softview Llc | Resolution independent vector display of internet content |
US7035910B1 (en) | 2000-06-29 | 2006-04-25 | Microsoft Corporation | System and method for document isolation |
US6983316B1 (en) | 2000-07-18 | 2006-01-03 | Western Digital Ventures, Inc. | Method of and content delivery server for delivering content to a personal computer having a disk drive which includes a network address for the content delivery server and a server-contacting program |
WO2002017115A2 (en) | 2000-08-21 | 2002-02-28 | Thoughtslinger Corporation | Simultaneous multi-user document editing system |
US6972748B1 (en) | 2000-08-31 | 2005-12-06 | Microsoft Corporation | J-key input for computer systems |
US7685183B2 (en) * | 2000-09-01 | 2010-03-23 | OP40, Inc | System and method for synchronizing assets on multi-tiered networks |
US7152203B2 (en) | 2000-09-11 | 2006-12-19 | Appeon Corporation | Independent update and assembly of web page elements |
US6717593B1 (en) | 2000-09-12 | 2004-04-06 | Avaya Technology Corp. | Mark-up language implementation of graphical or non-graphical user interfaces |
TW538275B (en) | 2000-09-18 | 2003-06-21 | Alps Electric Co Ltd | Reflective liquid crystal display device |
US20020035580A1 (en) | 2000-09-21 | 2002-03-21 | Yoshinori Tanabe | Computer readable medium containing HTML document generation program |
US20020133492A1 (en) | 2000-11-16 | 2002-09-19 | Samson Information Tech, L.L.C. | System and methods for web browser based document scanning, remote storage, and retrieval |
US6766334B1 (en) | 2000-11-21 | 2004-07-20 | Microsoft Corporation | Project-based configuration management method and apparatus |
US6879997B1 (en) | 2000-11-27 | 2005-04-12 | Nokia Corporation | Synchronously shared online documents |
US8255791B2 (en) | 2000-11-29 | 2012-08-28 | Dov Koren | Collaborative, flexible, interactive real-time displays |
US20020129096A1 (en) | 2001-02-14 | 2002-09-12 | Mansour Peter M. | Platform-independent distributed user interface client architecture |
KR100685946B1 (en) | 2001-03-02 | 2007-02-23 | 엘지.필립스 엘시디 주식회사 | Liquid crystal display panel and method for fabricating the same |
GB2373085B (en) | 2001-03-08 | 2004-10-06 | Ibm | Method, computer program and system for style sheet generation |
US6725219B2 (en) | 2001-03-13 | 2004-04-20 | Seiko Epson Corporation | Internet presentation system |
US7039643B2 (en) | 2001-04-10 | 2006-05-02 | Adobe Systems Incorporated | System, method and apparatus for converting and integrating media files |
JP3692054B2 (en) | 2001-05-21 | 2005-09-07 | 株式会社東芝 | Document structure conversion method, document structure conversion apparatus, and program |
JP4081643B2 (en) | 2001-08-01 | 2008-04-30 | 株式会社日立製作所 | Liquid crystal display |
EP1435046A2 (en) | 2001-08-03 | 2004-07-07 | Koninklijke Philips Electronics N.V. | Method of and system for updating a document |
US7529778B1 (en) | 2001-12-12 | 2009-05-05 | Microsoft Corporation | System and method for providing access to consistent point-in-time file versions |
US6938070B2 (en) | 2001-12-17 | 2005-08-30 | Dassault Systemes | Conflict resolution for collaborative work system |
US20030179230A1 (en) | 2002-03-25 | 2003-09-25 | Gerry Seidman | Method and apparatus for providing remote peer-to-peer collaborative user interfaces |
US7114160B2 (en) | 2002-04-17 | 2006-09-26 | Sbc Technology Resources, Inc. | Web content customization via adaptation Web services |
JP3857663B2 (en) | 2002-04-30 | 2006-12-13 | 株式会社東芝 | Structured document editing apparatus, structured document editing method and program |
US7190468B2 (en) | 2002-07-17 | 2007-03-13 | Hewlett-Packard Development Company, L.P. | Background document rendering system and method |
US6928476B2 (en) | 2002-08-23 | 2005-08-09 | Mirra, Inc. | Peer to peer remote data storage and collaboration |
CA2421825C (en) | 2002-09-20 | 2012-07-10 | Mks Inc. | Version control system for software development |
US7231597B1 (en) | 2002-10-07 | 2007-06-12 | Microsoft Corporation | Method, apparatus, and computer-readable medium for creating asides within an electronic document |
CN1244874C (en) * | 2002-10-12 | 2006-03-08 | 鸿富锦精密工业（深圳）有限公司 | Multi-point coordinated operation system and method |
US7818678B2 (en) | 2002-10-31 | 2010-10-19 | Litera Technology Llc | Collaborative document development and review system |
US20040088374A1 (en) | 2002-10-31 | 2004-05-06 | Webb James D. | Aggregation and sharing of patient data |
US7904807B2 (en) | 2002-11-05 | 2011-03-08 | Xerox Corporation | System and method for copying formatting information between Web pages |
EP1623302A4 (en) | 2003-03-18 | 2012-11-21 | Networks Dynamics Inc | Network operating system and method |
GB0307714D0 (en) | 2003-04-03 | 2003-05-07 | Ibm | System and method for information collation |
US7349929B2 (en) | 2003-04-25 | 2008-03-25 | Sap Ag | Accessing data based on user identity |
US7506069B2 (en) | 2003-04-25 | 2009-03-17 | Sap Ag | Accessing data in a computer network |
US7426543B2 (en) | 2003-04-25 | 2008-09-16 | Sap Ag | Accessing data stored in multiple locations |
US7890928B2 (en) | 2003-07-26 | 2011-02-15 | Pilla Gurumurty Patrudu | Mechanism and system for representing and processing rules |
US20050033811A1 (en) | 2003-08-07 | 2005-02-10 | International Business Machines Corporation | Collaborative email |
JP2005131915A (en) | 2003-10-30 | 2005-05-26 | Seiko Epson Corp | Printing apparatus, printing method and program for printing apparatus |
US20050125461A1 (en) | 2003-12-08 | 2005-06-09 | International Business Machines Corporation | Version control of metadata |
GB2410814A (en) | 2004-02-05 | 2005-08-10 | Stephen John Doyle | Document conversion enabling browser content across different types of terminal devices |
US7812860B2 (en) | 2004-04-01 | 2010-10-12 | Exbiblio B.V. | Handheld device for capturing text from both a document printed on paper and a document displayed on a dynamic display device |
US7818679B2 (en) | 2004-04-20 | 2010-10-19 | Microsoft Corporation | Method, system, and apparatus for enabling near real time collaboration on an electronic document through a plurality of computer systems |
US7487448B2 (en) | 2004-04-30 | 2009-02-03 | Microsoft Corporation | Document mark up methods and systems |
US20060031751A1 (en) | 2004-05-26 | 2006-02-09 | Shai Ehud | Method for creating editable web sites with increased performance & stability |
WO2006026578A2 (en) * | 2004-08-27 | 2006-03-09 | Peng Tao | Online annotation management system and method |
US7707498B2 (en) | 2004-09-30 | 2010-04-27 | Microsoft Corporation | Specific type content manager in an electronic document |
US7656543B2 (en) | 2004-11-12 | 2010-02-02 | Hewlett-Packard Development Company, L.P. | Albuming images |
US8065604B2 (en) | 2004-12-30 | 2011-11-22 | Massachusetts Institute Of Technology | Techniques for relating arbitrary metadata to media files |
US7792788B2 (en) * | 2005-03-04 | 2010-09-07 | Microsoft Corporation | Method and system for resolving conflicts operations in a collaborative editing environment |
US7653875B2 (en) | 2005-04-07 | 2010-01-26 | Microsoft Corporation | Browser sensitive web content delivery |
US20060248121A1 (en) | 2005-04-15 | 2006-11-02 | Michael Cacenco | System and method for supporting packaging, publishing and republishing of wireless component applications |
US7491399B2 (en) | 2005-06-23 | 2009-02-17 | University Of Maryland Biotechnology Institute | In Ovo vaccine against infectious bursal disease |
US8539604B2 (en) | 2005-08-03 | 2013-09-17 | International Business Machines Corporation | Method, system and program product for versioning access control settings |
US7953696B2 (en) | 2005-09-09 | 2011-05-31 | Microsoft Corporation | Real-time synchronization of XML data between applications |
US20070061714A1 (en) | 2005-09-09 | 2007-03-15 | Microsoft Corporation | Quick styles for formatting of documents |
EP1932141A4 (en) | 2005-09-13 | 2009-08-19 | Spacetime3D Inc | System and method for providing three-dimensional graphical user interface |
US20070073899A1 (en) | 2005-09-15 | 2007-03-29 | Judge Francis P | Techniques to synchronize heterogeneous data sources |
US7958448B2 (en) | 2005-10-25 | 2011-06-07 | Celartem, Inc. | Systems, methods, user interfaces, and computer-readable media for activating and managing fonts |
CA2524527A1 (en) | 2005-10-26 | 2007-04-26 | Ibm Canada Limited - Ibm Canada Limitee | Systems, methods and tools for facilitating group collaborations |
GB0523703D0 (en) * | 2005-11-22 | 2005-12-28 | Ibm | Collaborative editing of a document |
US7774703B2 (en) | 2006-02-09 | 2010-08-10 | Microsoft Corporation | Virtual shadow awareness for multi-user editors |
US20070220068A1 (en) | 2006-02-15 | 2007-09-20 | Bruce Thompson | Electronic document and business process control |
US8307119B2 (en) | 2006-03-31 | 2012-11-06 | Google Inc. | Collaborative online spreadsheet application |
US7743018B2 (en) | 2006-04-10 | 2010-06-22 | International Business Machines Corporation | Transient storage in distributed collaborative computing environments |
US8230351B2 (en) * | 2006-04-11 | 2012-07-24 | Sri International | Method and apparatus for collaborative work |
US7769727B2 (en) | 2006-05-31 | 2010-08-03 | Microsoft Corporation | Resolving update-delete conflicts |
JP4795127B2 (en) | 2006-06-06 | 2011-10-19 | 三菱電機株式会社 | Liquid crystal display device and manufacturing method thereof |
US8745227B2 (en) | 2006-06-07 | 2014-06-03 | Apple Inc. | Distributed secure content delivery |
US8250082B2 (en) | 2006-06-23 | 2012-08-21 | Microsoft Corporation | Cross domain communication |
US20080028302A1 (en) | 2006-07-31 | 2008-01-31 | Steffen Meschkat | Method and apparatus for incrementally updating a web page |
US20080059539A1 (en) | 2006-08-08 | 2008-03-06 | Richard Chin | Document Collaboration System and Method |
JP4979312B2 (en) | 2006-09-09 | 2012-07-18 | ソニー株式会社 | Information processing apparatus, information processing method, and computer program |
US7624145B2 (en) | 2007-01-06 | 2009-11-24 | Microsoft Corporation | Persistent collaborative framework for interactive web applications |
US8019780B1 (en) | 2007-03-30 | 2011-09-13 | Google Inc. | Handling document revision history information in the presence of a multi-user permissions model |
US8190987B2 (en) | 2007-10-25 | 2012-05-29 | Microsoft Corporation | Private views of data and local calculations during real time collaboration |
US20090192845A1 (en) | 2008-01-30 | 2009-07-30 | Microsoft Corporation | Integrated real time collaboration experiences with online workspace |
US9436927B2 (en) | 2008-03-14 | 2016-09-06 | Microsoft Technology Licensing, Llc | Web-based multiuser collaboration |
US20100030578A1 (en) | 2008-03-21 | 2010-02-04 | Siddique M A Sami | System and method for collaborative shopping, business and entertainment |
CN101556593A (en) * | 2008-04-11 | 2009-10-14 | 北京亿企通信息技术有限公司 | Method and system for multiple-person cooperative work document management |
US7478330B1 (en) | 2008-04-30 | 2009-01-13 | International Business Machines Corporation | Systems and methods involving improved web browsing |
US8209706B2 (en) | 2008-06-27 | 2012-06-26 | Microsoft Corporation | Inter-frame messaging between different domains |
US8321783B2 (en) | 2008-09-30 | 2012-11-27 | Apple Inc. | Visualizing content positioning within a document using layers |
US8073812B2 (en) | 2008-10-15 | 2011-12-06 | Microsoft Corporation | Preserving user intention in distributed data systems |
US20100153948A1 (en) | 2008-12-11 | 2010-06-17 | Ghost, Inc. | Combined web and local computing environment |
US7962547B2 (en) | 2009-01-08 | 2011-06-14 | International Business Machines Corporation | Method for server-side logging of client browser state through markup language |
JP2010181978A (en) * | 2009-02-03 | 2010-08-19 | Seiko Epson Corp | Collaborative work apparatus and method of controlling collaborative work |
US8775939B2 (en) | 2009-02-20 | 2014-07-08 | Fuji Xerox Co., Ltd. | Systems and methods for audience-enabled access to presentation content |
US8639762B2 (en) | 2009-03-23 | 2014-01-28 | Google Inc. | Providing access to a conversation in a hosted conversation system |
US8446377B2 (en) | 2009-03-24 | 2013-05-21 | Microsoft Corporation | Dual screen portable touch sensitive computing system |
US8782524B2 (en) | 2009-03-31 | 2014-07-15 | Samsung Electronics Co., Ltd | Method and apparatus for controlling presentation slides |
US8179417B2 (en) * | 2009-07-22 | 2012-05-15 | Hewlett-Packard Development Company, L.P. | Video collaboration |
US8327812B2 (en) | 2009-07-24 | 2012-12-11 | Deere & Company | Nucleate boiling cooling system |
US9049258B2 (en) | 2009-09-17 | 2015-06-02 | Border Stylo, LLC | Systems and methods for anchoring content objects to structured documents |
JP5503300B2 (en) | 2010-01-14 | 2014-05-28 | 株式会社ジャパンディスプレイ | Method for manufacturing liquid crystal display device, liquid crystal display device and electronic apparatus |
US20110178981A1 (en) | 2010-01-21 | 2011-07-21 | International Business Machines Corporation | Collecting community feedback for collaborative document development |
US8572022B2 (en) | 2010-03-02 | 2013-10-29 | Microsoft Corporation | Automatic synchronization conflict resolution |
US8892632B2 (en) | 2010-06-04 | 2014-11-18 | Microsoft Corporation | Client-server interaction frequency control |
US20120072819A1 (en) | 2010-09-21 | 2012-03-22 | Google, Inc. | Asynchronous Redrawing in Online Document Processors |
DE202011110895U1 (en) | 2010-11-02 | 2017-01-31 | Google Inc. | Real-time synchronized editing of documents by multiple users for blogging |
-
2011
- 2011-04-12 CN CN201180027547.5A patent/CN102934105B/en active Active
- 2011-04-12 CA CA2796299A patent/CA2796299A1/en not_active Abandoned
- 2011-04-12 WO PCT/US2011/032138 patent/WO2011130286A1/en active Application Filing
- 2011-04-12 EP EP11717829A patent/EP2558959A1/en not_active Withdrawn
- 2011-04-12 EP EP17164734.0A patent/EP3214556A3/en not_active Withdrawn
- 2011-04-12 AU AU2011240674A patent/AU2011240674B2/en not_active Ceased
- 2011-04-12 CN CN201610811777.5A patent/CN106445194B/en active Active
- 2011-04-12 US US13/085,292 patent/US20110252339A1/en not_active Abandoned
- 2011-04-12 DE DE202011110880.9U patent/DE202011110880U1/en not_active Expired - Lifetime
-
2012
- 2012-01-13 US US13/350,106 patent/US9280529B2/en active Active
-
2016
- 2016-01-27 US US15/008,209 patent/US10082927B2/en active Active
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10082927B2 (en) | Collaborative cursors in a hosted word processor | |
US9384176B2 (en) | Rich content in a browser-based word processor | |
AU2011240674A1 (en) | Collaborative cursors in a hosted word processor | |
US10678999B2 (en) | Real-time collaboration in a hosted word processor | |
EP2558962B1 (en) | Rich browser-based word processor | |
EP2558956B1 (en) | Synthetic navigation elements for electronic documents | |
EP2558958B1 (en) | Row heights in electronic documents | |
US20110252335A1 (en) | Zooming in a Web Browser | |
US8839457B2 (en) | Image storage in electronic documents | |
AU2015202042A1 (en) | Rich browser-based word processor |
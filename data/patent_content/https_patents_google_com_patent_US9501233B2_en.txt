US9501233B2 - Providing snapshots of virtual storage devices - Google Patents
Providing snapshots of virtual storage devices Download PDFInfo
- Publication number
- US9501233B2 US9501233B2 US14/977,055 US201514977055A US9501233B2 US 9501233 B2 US9501233 B2 US 9501233B2 US 201514977055 A US201514977055 A US 201514977055A US 9501233 B2 US9501233 B2 US 9501233B2
- Authority
- US
- United States
- Prior art keywords
- snapshot
- storage device
- virtual storage
- regions
- virtual
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0602—Interfaces specially adapted for storage systems specifically adapted to achieve a particular effect
- G06F3/0614—Improving the reliability of storage systems
- G06F3/0619—Improving the reliability of storage systems in relation to data integrity, e.g. data losses, bit errors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1446—Point-in-time backing up or restoration of persistent data
- G06F11/1448—Management of the data involved in backup or backup restore
- G06F11/1451—Management of the data involved in backup or backup restore by selection of backup contents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/22—Indexing; Data structures therefor; Storage structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/27—Replication, distribution or synchronisation of data between databases or within a distributed database system; Distributed database system architectures therefor
-
- G06F17/30312—
-
- G06F17/30575—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0646—Horizontal data movement in storage systems, i.e. moving data in between storage devices or systems
- G06F3/065—Replication mechanisms
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0628—Interfaces specially adapted for storage systems making use of a particular technique
- G06F3/0662—Virtualisation aspects
- G06F3/0664—Virtualisation aspects at device level, e.g. emulation of a storage device or system
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/06—Digital input from, or digital output to, record carriers, e.g. RAID, emulated record carriers or networked record carriers
- G06F3/0601—Interfaces specially adapted for storage systems
- G06F3/0668—Interfaces specially adapted for storage systems adopting a particular infrastructure
- G06F3/0671—In-line storage system
- G06F3/0673—Single storage device
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1446—Point-in-time backing up or restoration of persistent data
- G06F11/1458—Management of the backup or restore process
- G06F11/1469—Backup restoration techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2201/00—Indexing scheme relating to error detection, to error correction, and to monitoring
- G06F2201/815—Virtual
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2201/00—Indexing scheme relating to error detection, to error correction, and to monitoring
- G06F2201/84—Using snapshots, i.e. a logical point-in-time copy of the data
Definitions
- This specification relates to providing snapshots of virtual storage devices.
- Cloud computing is network-based computing in which typically large collections of servers housed in data centers or “server farms” provide computational resources and data storage as needed to remote end users.
- Some cloud computing services provide access to software applications such as word processors and other commonly used applications to end users who interface with the applications through web browsers or other client-side software. Users' electronic data files are usually stored in the server farm rather than on the users' computing devices. Maintaining software applications and user data on a server farm simplifies management of end user computing devices.
- Some cloud computing services allow end users to execute software applications in virtual machines.
- This specification describes technologies relating to providing snapshots of virtual storage devices.
- one aspect of the subject matter described in this specification can be embodied in methods that include receiving, at a computer system, a request to create a snapshot of a virtual storage device, wherein the virtual storage device virtually stores data at virtual addresses, the data being physically stored at a plurality of physical storage locations that are managed by an underlying storage system associated with virtual storage device, the plurality of physical storage locations being associated with physical addresses and being distributed across a plurality of physical storage devices, the underlying storage system managing storage of the data across the plurality of physical storage devices using unique identifiers that are: i) independent of the plurality of physical storage devices and the plurality of physical storage locations and ii) different from the virtual addresses.
- the methods can further include identifying, by the computer system, one or more regions of the virtual storage device that have been written to since a previous snapshot of the virtual storage device was created, wherein data written to the one or more identified regions is stored in the plurality of physical storage locations separately from other stored data that corresponds to other snapshots of the one or more regions.
- the methods can additionally include generating a unique identifier for the requested snapshot; and creating the requested snapshot using the identified one more regions and the unique identifier, wherein the requested snapshot includes a mapping of the unique identifier to the one or more identified regions of the virtual storage device and does not include any data stored in the virtual storage device.
- Snapshots of virtual storage devices can be efficiently created, retrieved, and maintained. For example, instead of creating a copy of the actual data that is being stored by a virtual storage device, a snapshot can be created to include information that identifies persistent storage locations where the data is being storage. In another example, snapshots can build upon each other so that each snapshot can store only information identifying the portions of a virtual storage device that were written to since a previous snapshot was created, instead of each snapshot storing the entire index of a virtual storage device.
- an example virtual storage device includes 500 regions and only 10 of those regions were written to since the previous snapshot of the virtual storage device was created, then a new snapshot of the virtual storage device can be created to include information identifying the 10 regions instead of all 500 regions.
- each snapshot can be created and/or retrieved quickly, can save computational resources, and/or can reduce lag time associated with creating and/or restoring snapshots of a virtual storage device.
- FIG. 1 is conceptual diagram of an example system that provides snapshots of a virtual storage device.
- FIG. 2 is a schematic diagram of an example system for providing snapshots of a virtual storage device.
- FIG. 3 is a schematic illustration of an example system in which snapshots of virtual storage devices are provided.
- FIG. 4 is a flow diagram of an example process for providing snapshots for a virtual storage device.
- FIG. 5 is a block diagram of example computing devices.
- Data that is stored by a storage device can continuously change over time. For instance, a portion of a storage device may at one point in time store an executable file and at another point in time store a word processing document.
- a snapshot of a storage device is a record of the contents of the storage device at a point in time. Snapshots can be used to restore and/or recreate previous states of a storage device. For example, snapshots can be used to allow a user to go back in time to recover the state of a storage device at a point in the device's history.
- a virtual storage device can be implemented in a variety of computing environments.
- virtual storage devices can be used as part of a cloud computing system to provide remote clients with one or more virtualized persistent storage arrays to which information can be stored and retrieved.
- virtual storage devices can be implemented as storage devices for virtual machines.
- virtual storage devices can be implemented locally on a computing device using one or more physical storage devices and one or more layers of abstraction.
- a snapshot for a virtual storage device maps regions of the virtual storage device to storage locations in an underlying storage system.
- Storage devices both virtual and physical, can store and retrieve data from regions of storage devices. Regions can be variable in size and can be addressable at any location in a storage device.
- An underlying storage system is a computer system that stores data for one or more virtual storage devices using various levels of abstraction.
- an underlying storage system can be a cloud computing system that stores data across a networked system of one or more computer servers and physical storage devices.
- cloud computing systems can use various unique identifiers for data, such as a combination of a row identifier, a column identifier, and a timestamp for data stored in one or more tables.
- Such unique identifiers can be independent one or more physical locations where data is being stored—the underlying storage system can manage correlating such unique storage location identifiers to one or more physical storage locations.
- an underlying storage system can be one or more computing devices that are providing a virtual machine and one or more corresponding virtual storage devices.
- an underlying storage system can be a file management system on a local computing device (e.g., desktop computer, laptop computer, smartphone) that correlates logical addresses to physical storage locations of one or more physical storage locations that are accessible to the local computing device.
- Data written to the same regions of a virtual storage device at different times can be mapped to and persistently stored in different storage locations in an underlying storage system. For example, data written to a first region of a virtual storage device at a first time can be stored in a first storage location of an underlying storage system. If new data is written to the first region of the virtual storage device at a later second time, the new data can be stored in a second storage location of the underlying system that is different from the first storage location. The original data stored in the first storage location and the new data stored in the second storage location can be persistently and concurrently maintained as part of the underlying storage system, even though in the current state of the virtual storage device original data has been overwritten with the new data. Such concurrent and persistent storage of previous versions of data in an underlying storage system can allow for snapshots to be efficiently created and maintained—instead of having to copy data for a snapshot, only the storage location of relevant data is tracked.
- Snapshots can build upon each other so that a snapshot only includes the regions of the virtual storage device that were written since the previous snapshot was created.
- a simplified example of a virtual storage device includes regions 0 - 3 and a first snapshot maps regions 0 - 2 of the virtual storage device to storage locations in an underlying storage system.
- data is written to regions 2 and 3 of the virtual storage device and then a second snapshot of the virtual storage device is created.
- the second snapshot can map to only regions 2 and 3 , which have been modified since the previous first snapshot. Regions that are included in a snapshot can include portions of files that have changed since a previous snapshot.
- a text file e.g., .txt file
- regions of the text file that have changed e.g., bytes that have changed from ASCII values for ‘h’ and ‘w’ to ‘H’ and ‘W’
- ASCII values for ‘h’ and ‘w’ to ‘H’ and ‘W’ can be added to a snapshot instead of all of the regions of the text file.
- the snapshots for the virtual storage device are analyzed in reverse chronological order starting with the snapshot to be recreated until the most recent copy of each region has been identified. For instance, referring to the example in the previous paragraph, to recreate the second snapshot corresponding storage locations for regions 2 and 3 are first identified from the mapping for the second snapshot. Moving back in time from the second snapshot, the first snapshot is analyzed and the remaining regions, regions 0 and 1 , are identified in the mapping for the first snapshot. Thus, the second snapshot can be recreated by using the data associated with regions 0 and 1 in the first snapshot and the data associated with regions 2 and 3 in the second snapshot.
- FIG. 1 is conceptual diagram of an example system 100 that provides snapshots of a virtual storage device.
- the example system 100 is includes a computer system 102 that provides snapshots 104 of a virtual storage device 106 using an underlying storage system 108 .
- the computer system 102 can include any of a variety of appropriate computing devices, such as a client computing device (e.g., laptop computer, smartphone, tablet computing device) that is interfacing over one or more communications network (e.g., the Internet, local area network (LAN), 3G/4G wireless network) with a cloud computing system, a virtual machine that is implemented across one or more networked computing devices, and/or a standalone computing device (e.g., laptop computer, smartphone, desktop computer). Other computing devices may also be included in the computer system 102 .
- the snapshots 104 can be any of a variety of appropriate data repositories for snapshot information, such as one or more databases, files, and/or computing devices.
- the virtual storage device 106 is a virtualization of one or more physical storage devices.
- the virtual storage device 106 can include virtual storage locations (e.g., storage locations that are not physical storage locations but instead correspond to one or more physical storage locations of one or more physical storage devices) that are identified by virtual addresses (e.g., addresses that correspond to virtual storage locations of the virtual storage device 106 ).
- the virtual storage device 106 can be accessed and used by computing devices similar manner to physical storage devices. For example, computing devices can issue the same commands to write to and read from the virtual storage device 106 that would be issued to a physical storage device.
- Various information and/or data structures can be associated with the virtual storage device 106 to provide the virtual storage device 106 , such as indices mapping regions of the virtual storage device 106 to storage locations in the underlying storage system 108 , and/or information tracking which regions of the virtual storage device 106 have been written to since the previous snapshot was created.
- the underlying storage system 108 can include any of a variety of appropriate computer systems and/or physical storage devices, such a cloud computing system, a disc management system accessible over a communication network (e.g., the Internet, a LAN), and/or a local disc management system on a computing device.
- the system 100 is depicted as including a table 110 depicting example snapshots S 0 -S 3 for the virtual storage device 106 , which is presented as having regions 0 - 3 .
- the snapshots S 0 -S 3 can include a mapping of regions of the virtual storage device 106 to storage locations in the underlying storage system 108 .
- the storage locations in the underlying storage system 108 are identified as P 0 -P 6 .
- the storage locations P 0 -P 6 can be any of a variety of identifiers to uniquely identify corresponding data in the underlying storage system 108 , such as information identifying physical addresses in the underlying storage system 108 (e.g., pointers to physical addresses), information identifying logical addresses in the underlying storage system 108 (e.g., pointers to logical addresses), information identifying unique identifiers that are used by the underlying storage system 108 and that are independent of the physical storage devices and physical storage locations where the data is being physically stored (e.g., unique identifiers that include combinations of row, column, and/or timestamp information that are used by cloud computing systems to identify data stored across a plurality of physical storage devices), and/or a combination of one or more values that can be used to locate data in the underlying storage system 108 .
- information identifying physical addresses in the underlying storage system 108 e.g., pointers to physical addresses
- information identifying logical addresses in the underlying storage system 108 e.g.,
- the underlying storage system 108 can include a database that provides access to the data for the virtual storage device 106 .
- the storage locations P 0 -P 6 can each include one or more values that are used to search fields of the database to locate corresponding data in the underlying storage system 108 .
- data values can include row and column identifiers for a table that the underlying storage system 108 uses to store data for the virtual storage device 106 .
- the snapshots S 0 -S 3 can be implemented in a variety of ways.
- the snapshots S 0 -S 3 can be implemented collectively as part of a data structure (e.g., multi-dimensional array) that maps the regions of the virtual storage device 106 to the storage locations P 0 -P 6 of the underlying storage system 108 , similar to the example table 110 .
- each of the snapshots S 0 -S 3 can be implemented separately (e.g., separate file, separate table, separate data structure) and can include information that correlates the regions 0 - 3 of the virtual storage device 106 to the storage locations P 0 -P 6 of the underlying storage system 108 .
- the snapshots S 0 -S 3 can include a unique identifier that encodes a sequential order among the snapshots S 0 -S 3 .
- the snapshots S 0 -S 3 can be associated with a timestamp that indicates a time at which the snapshot S 0 -S 3 was created.
- the snapshots S 0 -S 3 can be associated with a unique identifier (e.g., an integer) that is incremented for each snapshot.
- unique identifiers can be used to not only identify and refer to a snapshot, but can also be used to determine a sequence in which the snapshots S 0 -S 3 were created.
- the sequence of the snapshots S 0 -S 3 can be used to recreate a snapshot by moving in revers chronological order through the snapshots S 0 -S 3 until storage locations for each of the regions 0 - 3 of the virtual storage device 106 have been located.
- each of the snapshots S 0 -S 3 can be uniquely identified by timestamps and can include a list of the regions of the virtual storage device 106 and the corresponding storage locations in the underlying storage system 108 .
- the regions may be encoded in the information identifying the storage locations in the underlying storage system 108 .
- a storage location P 0 -P 6 can be identified by a combination of a unique identifier for the virtual storage device 106 , the corresponding region of the virtual storage device 106 , and a timestamp corresponding to the relevant snapshot S 0 -S 1 .
- each of the snapshots S 0 -S 3 can include information that maps fewer than all of the regions 0 - 3 of the virtual storage device 106 to the underlying storage system 108 .
- the snapshot S 3 maps only region 0 to the storage location P 6 of the underlying storage system 108 .
- Snapshots S 0 -S 3 can be created to only map the regions of the virtual storage device 106 that have changed (e.g., been written to) since a previous snapshot.
- the example table 110 indicates that after creating the snapshot S 0 , data was written to regions 1 and 3 of the virtual storage device 106 at storage locations P 3 and P 4 of the underlying storage system 108 , respectively.
- the snapshot S 1 includes only information identifying this change in the virtual storage device 106 over the previous snapshot S 0 .
- Such a configuration can allow for snapshots to be quickly created (e.g., the mapping does not have to include information for all regions, but only a subset of the regions) and to minimize the amount of storage space occupied by the snapshots.
- the snapshots S 0 -S 3 can allow a user to move back in time for the virtual storage device 106 to any of the previous states of the device 106 that were captured by the snapshots S 0 -S 3 .
- the state of the virtual storage device 106 at any one of the snapshots S 0 -S 3 can be recreated by going to the snapshot of interest and then moving in reverse chronological order until the most recent version of each of the regions 0 - 3 of the virtual storage device 106 is located.
- to recreate the snapshot S 2 first the regions that are included in the snapshot S 2 are identified. In this example, the mapping of region 2 to storage location P 5 is identified.
- mappings for regions 0 , 1 , and 3 have not been identified, the recreation moves to examine snapshot S 1 , which was created before the snapshot S 2 .
- Snapshot S 1 maps regions 1 and 3 to storage locations P 3 and P 4 , respectively.
- Snapshot S 0 is then examined to identify an entry for region 0 , which is mapped in snapshot S 0 to storage location P 0 .
- the entries in snapshot S 0 for regions 1 and 2 are not analyzed because more recent versions of these regions were located in snapshots 1 and 2 .
- the resulting state of the virtual storage device 106 at snapshot S 2 includes the following: region 0 —storage location P 0 ; region 1 —storage location P 3 ; region 2 —storage location P 5 ; region 3 —storage location P 4 .
- the virtual storage device 106 does not have to be recreated in its entirety—a portion of the virtual storage device 106 can be recreated using the snapshots S 0 -S 3 .
- Table 112 provides an example of data (Data 0 -Data 6 ) that can be stored by the underlying storage system 108 .
- data values that have been overwritten in the virtual storage device 106 can be persistently maintained without having to copy or move the data that has been overwritten. For instance, at snapshot S 0 the region 1 stores Data 1 (cross-referencing storage location P 1 from the table 110 with the entry for P 1 in the table 112 ), but is then rewritten with Data 3 at snapshot S 1 (cross-referencing storage location P 3 from the table 110 with the entry for P 3 in the table 112 ).
- the storage location P 1 associated with region 1 at snapshot S 0 is not rewritten with Data 3 , but instead the new data value Data 3 is written to a new storage location P 3 of the underlying storage system 108 .
- the mapping of snapshot S 0 does not have to be altered as regions that are mapped to in the snapshot S 0 are rewritten and any older data that has been rewritten in the virtual storage device 106 can be persistently maintained in the underlying storage system 108 without having to be relocated.
- Table 114 provides an example view of the state of the virtual storage device 106 at the time of snapshot S 3 , with the data mapping for the regions 0 - 3 resolved against the data stored in the underlying storage system 108 .
- a current state and historical states of the virtual storage device 106 can appear as a traditional storage device to the computer system 102 , which can obtain data from and write data to the virtual storage device 106 .
- One or more of the snapshots 104 can be deleted for the virtual storage device 106 . Since portions of a snapshot may be used to recreate other snapshots, deletion of a snapshot may be limited to situations where the regions mapped by a snapshot would no longer be used to recreate other snapshots. For example, the snapshot S 0 may not be deleted since the mapped to regions 0 and 2 would be used to recreate the snapshot S 1 . In some implementations, regions that block deletion of a snapshot, such as the mapping for regions 0 and 2 for snapshot S 0 , can be added to the next chronological snapshot. For instance, the mapping of region 0 to storage location P 0 and region 2 to storage location P 2 can be added to snapshot S 1 , which can permit the snapshot S 0 to be deleted. In conjunction with deleting a snapshot, corresponding storage locations in the underlying storage system 108 can be deleted and released.
- the snapshot is made inaccessible to the user (e.g., removed from a list of user accessible snapshots) and is marked for deletion at a future time when deletion is possible.
- a marking can be used by a service (e.g., garbage collection operation) that periodically examines whether snapshots and their corresponding storage locations can be deleted.
- FIG. 2 is a schematic diagram of an example system 200 for providing snapshots of a virtual storage device.
- the system 200 is similar to the system 100 described above with regard to FIG. 1 .
- the system 200 can be implemented by any of a variety of appropriate computing devices, such as the computer system 102 described above with regard to FIG. 1 .
- the system 200 includes a snapshot manager 210 that manages the creation, use, and deletion of snapshots for one or more virtual storage device(s) 242 .
- the virtual storage devices 242 are similar to the virtual storage device 106 described above with regard to FIG. 1 .
- the snapshot manager 210 includes a snapshot generator 212 , a snapshot recreation module 214 , a snapshot deletion manager 216 , and an input/output (I/O) interface 218 .
- the snapshot generator 212 creates new snapshots of the virtual storage devices 242 . As described previously, snapshots can be generated using the regions of a virtual storage device that were modified (e.g., written) since a previous snapshot of the virtual storage device was created.
- the snapshot recreation module 214 recreates snapshots by scanning through snapshots in reverse chronological order until the most recent version of the regions of the portion of the virtual storage device to be recreated have been located.
- the snapshot deletion manager 216 manages deletion of snapshots as described above.
- the I/O interface 218 can be any of a variety of interfaces to communicate over a data communication network, such as an physical network (e.g., an internal bus), an internal network (e.g., LAN), and/or an external network (e.g., the Internet).
- the I/O interface can be a wireless network card.
- the system 200 further includes persistent storage 220 that can store snapshot information (e.g., snapshot mappings of virtual storage device regions to data storage locations) and/or data for the virtual storage devices 242 .
- the persistent storage 220 can be replicated across multiple hard disks and/or other computer-readable media, e.g., disks 222 a , 222 b , and 222 c.
- the system 200 also includes an underlying storage system 230 that manages the storage of data for the virtual storage devices 242 .
- the underlying storage system 230 is similar to the underlying storage system 108 described above with regard to FIG. 1 .
- the snapshot manager 210 , the persistent storage 220 , the underlying storage system 230 , and/or the virtual storage devices 242 can be communicatively connected over a data communication networks 240 .
- the data communication network 240 can include a combination of physical data channels (e.g., communication bus), internal networks (e.g., LAN), and/or external networks (e.g., the Internet).
- FIG. 3 is a schematic illustration of an example system 300 in which snapshots of virtual storage devices are provided.
- the system 300 is a virtual machine system that includes one or more host machines, for example, host machine 302 and host machine 304 .
- a host machine is one or more data processing apparatus such as a rack mounted servers or other computing devices.
- the data processing apparatus can be in different physical locations and can have different capabilities and computer architectures.
- Host machines can communicate with each other through an internal data communication network 316 .
- the internal network can include one or more wired (e.g., Ethernet) or wireless (e.g., WI-FI) networks, for example.
- the internal network 316 is an intranet.
- Host machines can also communicate with devices on external networks, such as the Internet 322 , through one or more gateways 320 which are data processing apparatus responsible for routing data communication traffic between the internal network 316 and the external network 322 . Other types of external networks are possible.
- Each host machine executes a host operating system (“OS”) or other software that virtualizes the underlying host machine hardware and manages concurrent execution of one or more virtual machines.
- OS host operating system
- the host operating system 306 is managing virtual machine (VM) 310 and VM 312
- host OS 308 is managing a single VM 314 .
- Each VM includes a simulated version of the underlying host machine hardware, or a different computer architecture.
- the simulated version of the hardware is referred to as virtual hardware (e.g., virtual hardware 310 a , 312 a and 314 a ).
- the simulated hardware can include one or more virtual storage devices, such as the virtual storage device 106 and/or the virtual storage device 242 .
- the virtual storage devices can be associated with physical disks that are local to the machine the virtual machine instance is running on or remotely located.
- Software that is executed by the virtual hardware is referred to as guest software.
- guest software cannot determine if it is being executed by virtual hardware or by a physical host machine. If guest software executing in a VM, or the VM itself, malfunctions or aborts, other VMs executing on the host machine will not be affected.
- a host machine's microprocessor(s) can include processor-level mechanisms to enable virtual hardware to execute software applications efficiently by allowing guest software instructions to be executed directly on the host machine's microprocessor without requiring code-rewriting, recompilation, or instruction emulation.
- Each VM (e.g., VMs 310 , 312 and 314 ) is allocated a set of virtual memory pages from the virtual memory of the underlying host operating system and is allocated virtual disk blocks from one or more virtual disk drives for use by the guest software executing on the VM.
- host operating 306 allocates memory pages and disk blocks to VM 310 and VM 312
- host operating system 308 does the same for VM 314 .
- a given VM cannot access the virtual memory pages assigned to other VMs.
- VM 310 cannot access memory pages that have been assigned to VM 312 .
- a virtual disk drive can be persisted across VM restarts.
- Virtual disk blocks are allocated on physical disk drives coupled to host machines or available over the internal network 316 , for example.
- VMs can be allocated network addresses through which their respective guest software can communicate with other processes reachable through the internal network 316 or the Internet 322 .
- guest software executing on VM 310 can communicate with guest software executing on VM 312 or VM 314 .
- each VM is allocated one or more unique Internet Protocol (IP) version 4 or version 6 addresses and one or more User Datagram Protocol (UDP) port numbers.
- IP Internet Protocol
- UDP User Datagram Protocol
- a VM's guest software can include a guest operating system (e.g., guest operating systems 310 b , 312 b and 314 b ) which is software that controls the execution of respective guest software applications (e.g., guest applications 310 c , 312 c and 314 c ), within the VM and provides services to those applications.
- a guest operating system could be a variation of the UNIX operating system. Other operating systems are possible.
- Each VM can execute the same guest operating system or different guest operating systems.
- a VM does not require a guest operating system in order to execute guest software applications.
- a guest operating system's access to resources such as networks and virtual disk storage is controlled by the underlying host operating system.
- the guest application 310 c or guest operating system 310 b attempts to perform an input/output operation on a virtual storage device (e.g., the virtual storage device 106 ), initiate network communication, or perform a privileged operation, for example, the virtual hardware 310 a is interrupted so that the host operating system 306 can perform the action on behalf of the virtual machine 310 .
- the host operating system 306 can perform these actions with a process that executes in kernel process space 306 b , user process space 306 a , or both.
- the kernel process space 306 b is virtual memory reserved for the host operating system 306 's kernel 306 d which can include kernel extensions and device drivers, for instance.
- the kernel process space has elevated privileges (sometimes referred to as “supervisor mode”); that is, the kernel 306 d can perform certain privileged operations that are off limits to processes running in the user process space 306 a . Examples of privileged operations include access to different address spaces, access to special functional processor units in the host machine such as memory management units, and so on.
- the user process space 306 a is a separate portion of virtual memory reserved for user mode processes. User mode processes cannot perform privileged operations directly.
- a portion of VM network communication functionality is implemented in a communication process (e.g., communication process 306 c ).
- the communication process executes in the user process space (e.g., user process space 306 a ) of a host operating system (e.g., host operating system 306 ).
- the communication process can execute in the kernel process space (e.g., kernel process space 306 d ) of the host operating system.
- some portion of the communication process executes in the user process space and another portion executes in the kernel process space.
- the communication process communicates with a snapshot manager 318 to provide snapshots for the virtual storage devices that are provided with the virtual hardware 310 a , 312 a , and 314 a .
- the snapshot manger 318 can provide snapshots similar to the snapshots described above with regard to systems 100 and 200 , and the snapshot manager can be similar to the snapshot manager 210 described above with regard to FIG. 2 .
- FIG. 4 is a flow diagram of an example process 400 for providing snapshots for a virtual storage device.
- the process 400 can be performed by any of a variety of appropriate computing devices, such as the computer system 102 described above with regard to FIG. 1 , the system 200 described above with regard to FIG. 2 , and/or the system 300 described above with regard to FIG. 3 .
- the process 400 includes receiving a request to create a snapshot of a virtual storage device ( 402 ).
- the snapshot manager 318 can receive requests to create snapshots of virtual storage devices from any of a variety of appropriate sources, such a one or more of the VMs 310 - 314 , the host machines 302 - 304 , and/or client computing device (e.g., laptop computer, desktop computer, smartphone) that can communicate with the snapshot manager 318 over the Internet 322 but which are not depicted in FIG. 3 .
- one or more regions of the virtual storage device that have been modified (e.g., written to) since a previous snapshot was created are identified ( 404 ).
- the snapshot generator 212 described above with regard to FIG. 2 creates new snapshots of the virtual storage devices 242 by identifying regions of the virtual storage devices 242 that were modified (e.g., written to) since a previous snapshot of the virtual storage device was created. Such identification can be made by the snapshot generator 212 using any of a variety of appropriate techniques, such as by performing a diff operation with regard to the current state of the virtual storage devices 242 and the most recent snapshots created for the virtual storage devices 242 . For instance, referring to FIG.
- the computer system 102 can identify that region 0 of the virtual storage device 106 was modified by comparing a current state of the virtual storage device 106 , as presented in the table 114 , with the S 2 snapshot, as presented in table 110 . Using the techniques discussed above to recreate the snapshot S 2 , the computer system 102 can determine that the snapshot S 2 includes the following region values: region 0 has the value stored in storage location P 0 (Data 0 ); region 1 has the value stored in storage location P 3 (Data 3 ); region 2 has the value stored in storage location P 5 (Data 5 ); and region 4 has the value stored in storage location P 4 (Data 4 ).
- the computer system 102 can identify that the value of region 0 has been modified since the previous snapshot S 2 .
- a unique identifier for the requested snapshot is generated ( 406 ).
- a running counter of snapshots for a virtual storage device can be used to identify a next unique identifier for the requested snapshot.
- the snapshots S 0 -S 3 can each be associated with different unique numbers, such as numbers in a sequence of incremented/decremented integers.
- timestamps e.g., UNIX epoch timestamp
- times at which snapshots were created can be generated and used as a unique identifier for the snapshot.
- the requested snapshot is created using the identified regions of the virtual storage device and the generated unique identifier ( 408 ).
- the snapshot generator 212 can create and store snapshots in the persistent storage 220 using information that identifies regions of the virtual storage devices 242 that have been modified since previous snapshots were created and information that uniquely identifies the snapshots. For instance, referring to FIG.
- the computer system 102 can create an entry for the snapshot S 3 in the snapshot repository 104 using, at least, a unique identifier for the snapshot S 3 (e.g., an incremented snapshot number, a timestamp) and information that identifies the recently modified regions of the virtual storage device 106 (region 0 of the virtual storage device 106 ) and a data value for the recently modified regions (information identifying storage location P 6 from the underlying storage system 108 ).
- a unique identifier for the snapshot S 3 e.g., an incremented snapshot number, a timestamp
- a subsequent request is received to write new data to a first region of the virtual storage device, where the first region is one of the identified regions that are included in the created snapshot ( 410 ).
- the computer system 102 can receive a request to write Data 3 to region 1 of the virtual storage device 106 .
- the snapshot S 0 is depicted as including data stored at P 1 (Data 1 ) of the underlying storage system 108 as having been written to region 1 of the virtual storage device 106 .
- a second storage location is allocated to store the new data ( 412 ).
- the computer system 102 allocates a new storage location P 3 from the underlying storage system 108 to store the requested data.
- the second storage location can be different and separate from the first storage location.
- the newly allocated storage location P 3 is different and separate from the storage location P 1 that is storing the original contents of region 1 of the virtual storage device 106 .
- the new data is written to the second storage location ( 414 ).
- the new data (Data 3 ) is written to the newly allocated storage location P 3 in the underlying storage system 108 .
- the old data for the first region stored in the first storage location and the new data stored in the second storage location can be persistently and concurrently maintained by an underlying storage system.
- the table 112 indicates that the original and rewritten data for region 1 of the virtual storage device 106 , Data 1 , is still stored at location P 1 of the underlying storage system 108 after the region 1 of the virtual storage device 106 has been rewritten with the new data, Data 3 , which is concurrently stored at location P 3 of the underlying storage system 108 .
- a subsequent request is received to access the created snapshot ( 416 ).
- the computer system 102 can receive a request from a client computing device (e.g., a desktop computer, laptop computer, smartphone) to access the snapshot S 2 of the virtual storage device 106 .
- the regions that are identified in the snapshot can be retrieved ( 418 ).
- the computer system 102 can access the snapshot S 2 from the snapshot repository 104 and can use the information included in the snapshot S 2 (e.g., information that correlates region 2 of the virtual storage device 106 with the with location P 5 of the underlying storage system 108 ) to access data values Data 5 for region 2 of the virtual storage device 106 at snapshot S 2 .
- snapshot S 1 the computer system 102 can access the snapshot S 1 from the snapshot repository 104 and can use the information included in the snapshot S 1 (e.g., information that correlates regions 1 and 3 of the virtual storage device 106 with the with locations P 3 and P 4 , respectively, of the underlying storage system 108 ) to access data values Data 3 for region 1 and Data 4 for region 3 of the virtual storage device 106 .
- information included in the snapshot S 1 e.g., information that correlates regions 1 and 3 of the virtual storage device 106 with the with locations P 3 and P 4 , respectively, of the underlying storage system 108
- the computer system 102 can access the snapshot S 1 from the snapshot repository 104 and, using the stored information for the snapshot S 1 , can access a data value Data 0 for region 0 from storage location P 0 of the underlying storage system 108 .
- Data for the other two regions included in the snapshot S 0 , region 1 and region 2 may not be retrieved by the computer system 102 based data already having been retrieved for these regions with regard to more recent snapshots (snapshots S 2 and S 1 ).
- Access to the snapshot can be provided using the identified regions from the snapshot and the most recent versions of the other regions ( 422 ).
- the computer system 102 can provide at least a portion of the recreated snapshot S 2 for the virtual storage device 106 to a client device that has requested access to the snapshot.
- a subsequent request is received to delete a previous snapshot ( 424 ).
- the computer system 102 can receive a request from a client computing device to delete the snapshot S 1 of the virtual storage device 106 .
- a determination can be made as to whether any other snapshots that occur chronologically after the previous snapshot use region information that is specified in the previous snapshot ( 426 ).
- the computer system 102 can determine whether snapshots S 2 or S 3 (snapshots occurring chronologically after the snapshot S 1 ) rely on data values that are contained in the snapshot S 1 that is requested for deletion.
- the snapshot S 2 uses data values for regions 1 and 3 from the snapshot S 1
- the snapshot S 3 uses the same data values for regions 1 and 3 from the snapshot S 1 .
- the previous snapshot can be marked for deletion at a later time when portions of the previous snapshot are not being used by other snapshots that occur chronologically after the previous snapshot ( 428 ).
- the computer system 102 can mark the snapshot S 1 for deletion at a later date when the other snapshots (e.g., S 2 , S 3 ) are no longer using portions of data included in the snapshot S 1 .
- FIG. 5 is a block diagram of example computing devices 500 , 550 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.
- Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices.
- Additionally computing device 500 or 550 can include Universal Serial Bus (USB) flash drives.
- USB flash drives may store operating systems and other applications.
- the USB flash drives can include input/output components, such as a wireless transmitter or USB connector that may be inserted into a USB port of another computing device.
- input/output components such as a wireless transmitter or USB connector that may be inserted into a USB port of another computing device.
- Computing device 500 includes a processor 502 , memory 504 , a storage device 506 , a high-speed interface 508 connecting to memory 504 and high-speed expansion ports 510 , and a low speed interface 512 connecting to low speed bus 514 and storage device 506 .
- Each of the components 502 , 504 , 506 , 508 , 510 , and 512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 502 can process instructions for execution within the computing device 500 , including instructions stored in the memory 504 or on the storage device 506 to display graphical information for a GUI on an external input/output device, such as display 516 coupled to high speed interface 508 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 504 stores information within the computing device 500 .
- the memory 504 is a volatile memory unit or units.
- the memory 504 is a non-volatile memory unit or units.
- the memory 504 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 506 is capable of providing mass storage for the computing device 500 .
- the storage device 506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 504 , the storage device 506 , or memory on processor 502 .
- the high speed controller 508 manages bandwidth-intensive operations for the computing device 500 , while the low speed controller 512 manages lower bandwidth-intensive operations.
- the high-speed controller 508 is coupled to memory 504 , display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510 , which may accept various expansion cards (not shown).
- low-speed controller 512 is coupled to storage device 506 and low-speed expansion port 514 .
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 520 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 524 . In addition, it may be implemented in a personal computer such as a laptop computer 522 . Alternatively, components from computing device 500 may be combined with other components in a mobile device (not shown), such as device 550 . Each of such devices may contain one or more of computing device 500 , 550 , and an entire system may be made up of multiple computing devices 500 , 550 communicating with each other.
- Computing device 550 includes a processor 552 , memory 564 , an input/output device such as a display 554 , a communication interface 566 , and a transceiver 568 , among other components.
- the device 550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 550 , 552 , 564 , 554 , 566 , and 568 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 552 can execute instructions within the computing device 550 , including instructions stored in the memory 564 .
- the processor may be implemented as a chip set of chips that include separate and multiple analog and digital processors. Additionally, the processor may be implemented using any of a number of architectures.
- the processor 410 may be a CISC (Complex Instruction Set Computers) processor, a RISC (Reduced Instruction Set Computer) processor, or a MISC (Minimal Instruction Set Computer) processor.
- the processor may provide, for example, for coordination of the other components of the device 550 , such as control of user interfaces, applications run by device 550 , and wireless communication by device 550 .
- Processor 552 may communicate with a user through control interface 558 and display interface 556 coupled to a display 554 .
- the display 554 may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user.
- the control interface 558 may receive commands from a user and convert them for submission to the processor 552 .
- an external interface 562 may be provide in communication with processor 552 , so as to enable near area communication of device 550 with other devices. External interface 562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 564 stores information within the computing device 550 .
- the memory 564 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 574 may also be provided and connected to device 550 through expansion interface 572 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 574 may provide extra storage space for device 550 , or may also store applications or other information for device 550 .
- expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 574 may be provide as a security module for device 550 , and may be programmed with instructions that permit secure use of device 550 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 564 , expansion memory 574 , or memory on processor 552 that may be received, for example, over transceiver 568 or external interface 562 .
- Device 550 may communicate wirelessly through communication interface 566 , which may include digital signal processing circuitry where necessary. Communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 568 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 570 may provide additional navigation- and location-related wireless data to device 550 , which may be used as appropriate by applications running on device 550 .
- GPS Global Positioning System
- Device 550 may also communicate audibly using audio codec 560 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550 .
- Audio codec 560 may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550 .
- the computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 580 . It may also be implemented as part of a smartphone 582 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), peer-to-peer networks (having ad-hoc or static members), grid computing infrastructures, and the Internet.
- LAN local area network
- WAN wide area network
- peer-to-peer networks having ad-hoc or static members
- grid computing infrastructures and the Internet.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims (15)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/977,055 US9501233B2 (en) | 2011-09-01 | 2015-12-21 | Providing snapshots of virtual storage devices |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161530358P | 2011-09-01 | 2011-09-01 | |
US13/602,974 US8966198B1 (en) | 2011-09-01 | 2012-09-04 | Providing snapshots of virtual storage devices |
US14/629,149 US9251234B1 (en) | 2011-09-01 | 2015-02-23 | Providing snapshots of virtual storage devices |
US14/977,055 US9501233B2 (en) | 2011-09-01 | 2015-12-21 | Providing snapshots of virtual storage devices |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/629,149 Continuation US9251234B1 (en) | 2011-09-01 | 2015-02-23 | Providing snapshots of virtual storage devices |
Publications (2)
Publication Number | Publication Date |
---|---|
US20160124669A1 US20160124669A1 (en) | 2016-05-05 |
US9501233B2 true US9501233B2 (en) | 2016-11-22 |
Family
ID=52473138
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/602,974 Active 2032-11-16 US8966198B1 (en) | 2011-09-01 | 2012-09-04 | Providing snapshots of virtual storage devices |
US14/629,149 Active US9251234B1 (en) | 2011-09-01 | 2015-02-23 | Providing snapshots of virtual storage devices |
US14/977,055 Active US9501233B2 (en) | 2011-09-01 | 2015-12-21 | Providing snapshots of virtual storage devices |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/602,974 Active 2032-11-16 US8966198B1 (en) | 2011-09-01 | 2012-09-04 | Providing snapshots of virtual storage devices |
US14/629,149 Active US9251234B1 (en) | 2011-09-01 | 2015-02-23 | Providing snapshots of virtual storage devices |
Country Status (1)
Country | Link |
---|---|
US (3) | US8966198B1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10613947B2 (en) * | 2016-06-09 | 2020-04-07 | Nutanix, Inc. | Saving and restoring storage devices using application-consistent snapshots |
US10747718B2 (en) | 2011-08-10 | 2020-08-18 | Nutanix, Inc. | Mapping structure for maintaining metadata for snapshots in a virtualized storage environment |
US10824522B2 (en) | 2017-11-27 | 2020-11-03 | Nutanix, Inc. | Method, apparatus, and computer program product for generating consistent snapshots without quiescing applications |
US11074134B2 (en) | 2018-08-23 | 2021-07-27 | International Business Machines Corporation | Space management for snapshots of execution images |
US11243707B2 (en) | 2014-03-12 | 2022-02-08 | Nutanix, Inc. | Method and system for implementing virtual machine images |
Families Citing this family (69)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150242282A1 (en) * | 2014-02-24 | 2015-08-27 | Red Hat, Inc. | Mechanism to update software packages |
US9836476B2 (en) | 2014-09-25 | 2017-12-05 | Netapp, Inc. | Synchronizing configuration of partner objects across distributed storage systems using transformations |
JP6281511B2 (en) * | 2015-03-24 | 2018-02-21 | 日本電気株式会社 | BACKUP CONTROL DEVICE, BACKUP CONTROL METHOD, AND PROGRAM |
US9594512B1 (en) | 2015-06-19 | 2017-03-14 | Pure Storage, Inc. | Attributing consumed storage capacity among entities storing data in a storage array |
US11106645B1 (en) * | 2015-09-29 | 2021-08-31 | EMC IP Holding Company LLC | Multi point in time object store |
EP3200080B1 (en) * | 2015-12-16 | 2021-12-22 | Tata Consultancy Services Limited | Methods and systems for memory suspect detection |
US10114702B2 (en) * | 2016-01-06 | 2018-10-30 | International Business Machines Corporation | Method and system to discover and manage distributed applications in virtualization environments |
US10484015B2 (en) | 2016-12-28 | 2019-11-19 | Amazon Technologies, Inc. | Data storage system with enforced fencing |
US10771550B2 (en) | 2016-12-28 | 2020-09-08 | Amazon Technologies, Inc. | Data storage system with redundant internal networks |
US11301144B2 (en) | 2016-12-28 | 2022-04-12 | Amazon Technologies, Inc. | Data storage system |
US10514847B2 (en) | 2016-12-28 | 2019-12-24 | Amazon Technologies, Inc. | Data storage system with multiple durability levels |
US10552372B2 (en) | 2017-01-31 | 2020-02-04 | Microsoft Technology Licensing, Llc | Systems, methods, and computer-readable media for a fast snapshot of application data in storage |
US11010064B2 (en) * | 2017-02-15 | 2021-05-18 | Amazon Technologies, Inc. | Data system with flush views |
US10437729B2 (en) * | 2017-04-19 | 2019-10-08 | International Business Machines Corporation | Non-disruptive clearing of varying address ranges from cache |
US10652025B2 (en) * | 2017-07-10 | 2020-05-12 | Micron Technology, Inc. | Secure snapshot management for data storage devices |
US11947489B2 (en) | 2017-09-05 | 2024-04-02 | Robin Systems, Inc. | Creating snapshots of a storage volume in a distributed storage system |
US10579276B2 (en) | 2017-09-13 | 2020-03-03 | Robin Systems, Inc. | Storage scheme for a distributed storage system |
US10430105B2 (en) | 2017-09-13 | 2019-10-01 | Robin Systems, Inc. | Storage scheme for a distributed storage system |
US10452267B2 (en) | 2017-09-13 | 2019-10-22 | Robin Systems, Inc. | Storage scheme for a distributed storage system |
US10423344B2 (en) | 2017-09-19 | 2019-09-24 | Robin Systems, Inc. | Storage scheme for a distributed storage system |
US10534549B2 (en) | 2017-09-19 | 2020-01-14 | Robin Systems, Inc. | Maintaining consistency among copies of a logical storage volume in a distributed storage system |
US10846001B2 (en) | 2017-11-08 | 2020-11-24 | Robin Systems, Inc. | Allocating storage requirements in a distributed storage system |
US10782887B2 (en) | 2017-11-08 | 2020-09-22 | Robin Systems, Inc. | Window-based prority tagging of IOPs in a distributed storage system |
US10430110B2 (en) | 2017-12-19 | 2019-10-01 | Robin Systems, Inc. | Implementing a hybrid storage node in a distributed storage system |
US10452308B2 (en) | 2017-12-19 | 2019-10-22 | Robin Systems, Inc. | Encoding tags for metadata entries in a storage system |
US10430292B2 (en) * | 2017-12-19 | 2019-10-01 | Robin Systems, Inc. | Snapshot deletion in a distributed storage system |
US11582168B2 (en) | 2018-01-11 | 2023-02-14 | Robin Systems, Inc. | Fenced clone applications |
US11099937B2 (en) | 2018-01-11 | 2021-08-24 | Robin Systems, Inc. | Implementing clone snapshots in a distributed storage system |
US10628235B2 (en) | 2018-01-11 | 2020-04-21 | Robin Systems, Inc. | Accessing log files of a distributed computing system using a simulated file system |
US10896102B2 (en) | 2018-01-11 | 2021-01-19 | Robin Systems, Inc. | Implementing secure communication in a distributed computing system |
US11392363B2 (en) | 2018-01-11 | 2022-07-19 | Robin Systems, Inc. | Implementing application entrypoints with containers of a bundled application |
US10642697B2 (en) | 2018-01-11 | 2020-05-05 | Robin Systems, Inc. | Implementing containers for a stateful application in a distributed computing system |
US11748203B2 (en) | 2018-01-11 | 2023-09-05 | Robin Systems, Inc. | Multi-role application orchestration in a distributed storage system |
US10845997B2 (en) | 2018-01-12 | 2020-11-24 | Robin Systems, Inc. | Job manager for deploying a bundled application |
US10579364B2 (en) | 2018-01-12 | 2020-03-03 | Robin Systems, Inc. | Upgrading bundled applications in a distributed computing system |
US10846137B2 (en) | 2018-01-12 | 2020-11-24 | Robin Systems, Inc. | Dynamic adjustment of application resources in a distributed computing system |
US10642694B2 (en) | 2018-01-12 | 2020-05-05 | Robin Systems, Inc. | Monitoring containers in a distributed computing system |
US10976938B2 (en) | 2018-07-30 | 2021-04-13 | Robin Systems, Inc. | Block map cache |
US11023328B2 (en) | 2018-07-30 | 2021-06-01 | Robin Systems, Inc. | Redo log for append only storage scheme |
US10817380B2 (en) | 2018-07-31 | 2020-10-27 | Robin Systems, Inc. | Implementing affinity and anti-affinity constraints in a bundled application |
US10599622B2 (en) | 2018-07-31 | 2020-03-24 | Robin Systems, Inc. | Implementing storage volumes over multiple tiers |
US10908848B2 (en) | 2018-10-22 | 2021-02-02 | Robin Systems, Inc. | Automated management of bundled applications |
US11036439B2 (en) | 2018-10-22 | 2021-06-15 | Robin Systems, Inc. | Automated management of bundled applications |
US10620871B1 (en) | 2018-11-15 | 2020-04-14 | Robin Systems, Inc. | Storage scheme for a distributed storage system |
US11086725B2 (en) | 2019-03-25 | 2021-08-10 | Robin Systems, Inc. | Orchestration of heterogeneous multi-role applications |
US11150831B2 (en) * | 2019-03-27 | 2021-10-19 | Red Hat, Inc. | Virtual machine synchronization and recovery |
US11256434B2 (en) | 2019-04-17 | 2022-02-22 | Robin Systems, Inc. | Data de-duplication |
US11042483B2 (en) | 2019-04-26 | 2021-06-22 | International Business Machines Corporation | Efficient eviction of whole set associated cache or selected range of addresses |
US10831387B1 (en) | 2019-05-02 | 2020-11-10 | Robin Systems, Inc. | Snapshot reservations in a distributed storage system |
US10877684B2 (en) | 2019-05-15 | 2020-12-29 | Robin Systems, Inc. | Changing a distributed storage volume from non-replicated to replicated |
US11169723B2 (en) | 2019-06-28 | 2021-11-09 | Amazon Technologies, Inc. | Data storage system with metadata check-pointing |
US11226847B2 (en) | 2019-08-29 | 2022-01-18 | Robin Systems, Inc. | Implementing an application manifest in a node-specific manner using an intent-based orchestrator |
US11249851B2 (en) | 2019-09-05 | 2022-02-15 | Robin Systems, Inc. | Creating snapshots of a storage volume in a distributed storage system |
US11520650B2 (en) | 2019-09-05 | 2022-12-06 | Robin Systems, Inc. | Performing root cause analysis in a multi-role application |
US11269737B2 (en) * | 2019-09-16 | 2022-03-08 | Microsoft Technology Licensing, Llc | Incrementally updating recovery map data for a memory system |
US11113158B2 (en) | 2019-10-04 | 2021-09-07 | Robin Systems, Inc. | Rolling back kubernetes applications |
US11347684B2 (en) | 2019-10-04 | 2022-05-31 | Robin Systems, Inc. | Rolling back KUBERNETES applications including custom resources |
US11366682B1 (en) * | 2019-10-22 | 2022-06-21 | Amazon Technologies, Inc. | Automatic snapshotting for recovery of instances with local storage |
US11403188B2 (en) | 2019-12-04 | 2022-08-02 | Robin Systems, Inc. | Operation-level consistency points and rollback |
US11108638B1 (en) | 2020-06-08 | 2021-08-31 | Robin Systems, Inc. | Health monitoring of automatically deployed and managed network pipelines |
US11528186B2 (en) | 2020-06-16 | 2022-12-13 | Robin Systems, Inc. | Automated initialization of bare metal servers |
US11921671B2 (en) * | 2020-06-26 | 2024-03-05 | Netapp, Inc. | Managing volume snapshots in the cloud |
US11740980B2 (en) | 2020-09-22 | 2023-08-29 | Robin Systems, Inc. | Managing snapshot metadata following backup |
US11743188B2 (en) | 2020-10-01 | 2023-08-29 | Robin Systems, Inc. | Check-in monitoring for workflows |
US11456914B2 (en) | 2020-10-07 | 2022-09-27 | Robin Systems, Inc. | Implementing affinity and anti-affinity with KUBERNETES |
US11271895B1 (en) | 2020-10-07 | 2022-03-08 | Robin Systems, Inc. | Implementing advanced networking capabilities using helm charts |
CN112261097B (en) * | 2020-10-15 | 2023-11-24 | 科大讯飞股份有限公司 | Object positioning method for distributed storage system and electronic equipment |
US11750451B2 (en) | 2020-11-04 | 2023-09-05 | Robin Systems, Inc. | Batch manager for complex workflows |
US11556361B2 (en) | 2020-12-09 | 2023-01-17 | Robin Systems, Inc. | Monitoring and managing of complex multi-role applications |
Citations (170)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5463768A (en) | 1994-03-17 | 1995-10-31 | General Electric Company | Method and system for analyzing error logs for diagnostics |
US5655081A (en) | 1995-03-08 | 1997-08-05 | Bmc Software, Inc. | System for monitoring and managing computer resources and applications across a distributed computing environment using an intelligent autonomous agent architecture |
US5778444A (en) | 1996-05-06 | 1998-07-07 | Motorola, Inc. | Method and apparatus for reset-sensitive and controlled register write accesses in a data processing system with user and test modes |
US5794224A (en) | 1994-09-30 | 1998-08-11 | Yufik; Yan M. | Probabilistic resource allocation system with self-adaptive capability |
US6148368A (en) | 1997-07-31 | 2000-11-14 | Lsi Logic Corporation | Method for accelerating disk array write operations using segmented cache memory and data logging |
US6178482B1 (en) | 1997-11-03 | 2001-01-23 | Brecis Communications | Virtual register sets |
US20020091902A1 (en) | 2001-01-10 | 2002-07-11 | Susumu Hirofuji | File system and data caching method thereof |
US20020097747A1 (en) | 2000-05-22 | 2002-07-25 | Kirkby Paul Anthony | Management and control of multi-layer networks |
US6449671B1 (en) | 1999-06-09 | 2002-09-10 | Ati International Srl | Method and apparatus for busing data elements |
US6490651B1 (en) | 2000-03-14 | 2002-12-03 | Maxtor Corporation | Host-based virtual disk drive for improving the performance of a hard disk drive's input/output |
US6505248B1 (en) | 1999-03-24 | 2003-01-07 | Gte Data Services Incorporated | Method and system for monitoring and dynamically reporting a status of a remote server |
US6505211B1 (en) | 1999-01-26 | 2003-01-07 | International Business Machines Corporation | Method for providing for persistence of java classes where the persistence semantics may be orthogonal to the class definition |
US6587866B1 (en) | 2000-01-10 | 2003-07-01 | Sun Microsystems, Inc. | Method for distributing packets to server nodes using network client affinity and packet distribution table |
US6598179B1 (en) | 2000-03-31 | 2003-07-22 | International Business Machines Corporation | Table-based error log analysis |
US6643613B2 (en) | 2001-07-03 | 2003-11-04 | Altaworks Corporation | System and method for monitoring performance metrics |
US20040068637A1 (en) | 2002-10-03 | 2004-04-08 | Nelson Lee L. | Virtual storage systems and virtual storage system operational methods |
US20040139368A1 (en) | 2003-01-09 | 2004-07-15 | International Business Machines Corporation | Method and apparatus for reporting error logs in a logical environment |
US20040148484A1 (en) | 2003-01-23 | 2004-07-29 | Hitachi, Ltd. | Throttling in storage systems |
US20040210653A1 (en) | 2003-04-16 | 2004-10-21 | Novadigm, Inc. | Method and system for patch management |
US6829678B1 (en) | 2000-07-18 | 2004-12-07 | International Business Machines Corporation | System for determining the order and frequency in which space is allocated on individual storage devices |
US20050010715A1 (en) | 2003-04-23 | 2005-01-13 | Dot Hill Systems Corporation | Network storage appliance with integrated server and redundant storage controllers |
US6891839B2 (en) | 1999-07-01 | 2005-05-10 | Cisco Technology, Inc. | Distributing packets among multiple tiers of network appliances |
US6898697B1 (en) | 2002-03-29 | 2005-05-24 | Advanced Micro Devices, Inc. | Efficient method for mode change detection and synchronization |
US20050166011A1 (en) | 2004-01-23 | 2005-07-28 | Burnett Robert J. | System for consolidating disk storage space of grid computers into a single virtual disk drive |
US20050196030A1 (en) | 2004-02-12 | 2005-09-08 | Nortel Networks Limited | Method and apparatus for monitoring the transportation of medical images on a communication network |
US20050216659A1 (en) | 2004-03-26 | 2005-09-29 | Hitachi, Ltd. | Storage capable of cache assignment modification |
US20050237543A1 (en) | 2000-02-29 | 2005-10-27 | Canon Kabushiki Kaisha | Network device manager |
US20050289499A1 (en) | 2004-06-25 | 2005-12-29 | Matsushita Electric Industrial Co., Ltd. | High level synthesis method for semiconductor integrated circuit |
US20060026354A1 (en) | 2004-07-27 | 2006-02-02 | Texas Instruments Incorporated | Cache memory usable as scratch pad storage |
US6996502B2 (en) | 2004-01-20 | 2006-02-07 | International Business Machines Corporation | Remote enterprise management of high availability systems |
US20060048130A1 (en) | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Patch sequencing |
US20060048077A1 (en) | 2004-08-31 | 2006-03-02 | International Business Machines Corporation | Method, system, program product and user interface for displaying a topology |
US20060059228A1 (en) | 2004-08-12 | 2006-03-16 | Oracle International Corporation | Capturing and re-creating the state of a queue when migrating a session |
US20060067236A1 (en) | 2004-09-30 | 2006-03-30 | Sanyogita Gupta | Determining and provisioning paths in a network |
US20060075199A1 (en) | 2004-10-06 | 2006-04-06 | Mahesh Kallahalla | Method of providing storage to virtual computer cluster within shared computing environment |
US7043455B1 (en) | 2000-07-28 | 2006-05-09 | International Business Machines Corporation | Method and apparatus for securing session information of users in a web application server environment |
US20060098618A1 (en) | 2003-01-31 | 2006-05-11 | Koninklijke Philips Electronics N.V. | Method and bridging device for priortizing transfer of data streams |
US7062718B2 (en) | 2001-08-14 | 2006-06-13 | National Instruments Corporation | Configuration diagram which graphically displays program relationship |
US20060136676A1 (en) | 2004-12-21 | 2006-06-22 | Park Chan-Ik | Apparatus and methods using invalidity indicators for buffered memory |
US20060153099A1 (en) | 2004-12-23 | 2006-07-13 | Carmel-Haifa University Economic Corp. Ltd. | Ad hoc communication system and method for routing speech packets therein |
US20060161753A1 (en) | 2005-01-18 | 2006-07-20 | Aschoff John G | Method, apparatus and program storage device for providing automatic performance optimization of virtualized storage allocation within a virtualized storage subsystem |
US7117243B2 (en) | 2001-10-02 | 2006-10-03 | Citrix Systems, Inc. | Methods for distributed program execution with file-type association in a client-server network |
US20060235795A1 (en) | 2005-04-19 | 2006-10-19 | Microsoft Corporation | Secure network commercial transactions |
US20060271547A1 (en) | 2005-05-25 | 2006-11-30 | Microsoft Corporation | Cluster storage collection based data management |
US20070005761A1 (en) | 2001-04-07 | 2007-01-04 | Webmethods, Inc. | Predictive monitoring and problem identification in an information technology (it) infrastructure |
US20070011361A1 (en) | 2005-07-07 | 2007-01-11 | Wataru Okada | Storage management system |
US20070112956A1 (en) | 2005-11-12 | 2007-05-17 | Chapman Matthew P | Resource optimisation component |
US20070118694A1 (en) | 2004-03-23 | 2007-05-24 | Hitachi, Ltd. | Storage system |
US20070123276A1 (en) | 2003-08-29 | 2007-05-31 | Stephen Parker | Secure valet telephone system apparatus and method |
US20070177198A1 (en) | 2006-01-30 | 2007-08-02 | Brother Kogyo Kabushiki Kaisha | Data Processing Device for Renaming Virtual Device |
US20070199058A1 (en) | 2006-02-10 | 2007-08-23 | Secunet Security Networks Aktiengesellschaft | Method of using a security token |
US20070271604A1 (en) | 2004-03-17 | 2007-11-22 | Fidelitygenetic Ltd. | Secure Transaction of Dna Data |
US20070280243A1 (en) | 2004-09-17 | 2007-12-06 | Hewlett-Packard Development Company, L.P. | Network Virtualization |
US20070288921A1 (en) | 2006-06-13 | 2007-12-13 | King Steven R | Emulating a network-like communication connection between virtual machines on a physical device |
US20080028389A1 (en) | 2006-07-27 | 2008-01-31 | Genty Denise M | Filtering a list of available install items for an install program based on a consumer's install policy |
US7356679B1 (en) | 2003-04-11 | 2008-04-08 | Vmware, Inc. | Computer image capture, customization and deployment |
US20080086515A1 (en) | 2006-10-06 | 2008-04-10 | International Business Machines Corporation | Method and System for a Soft Error Collection of Trace Files |
US20080095176A1 (en) | 2006-10-20 | 2008-04-24 | Ciena Corporation | System and method for supporting virtualized links at an exterior network-to-network interface |
US20080107112A1 (en) | 2006-11-03 | 2008-05-08 | Hon Hai Precision Industry Co., Ltd. | Network device and packet forwarding method thereof |
US20080205415A1 (en) | 2007-02-28 | 2008-08-28 | Morales Henry N Jerez | Access, Connectivity and Interoperability for Devices and Services |
US20080208681A1 (en) | 2006-09-28 | 2008-08-28 | Ayman Hammad | Payment using a mobile device |
US20080215796A1 (en) | 2003-12-08 | 2008-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Virtual Appliance Management |
US20080222246A1 (en) | 2006-06-15 | 2008-09-11 | International Business Machines Corporation | Method and Apparatus for Localized Adaptation of Client Devices Based on Correlation or Learning at Remote Server |
US20080222375A1 (en) | 2007-02-21 | 2008-09-11 | Deutsche Telekom Ag | Method and system for the transparent migration of virtual machines storage |
US20080244471A1 (en) | 1999-02-05 | 2008-10-02 | Killian Earl A | System and method of customizing an existing processor design having an existing processor instruction set architecture with instruction extensions |
US20080244030A1 (en) | 2007-03-30 | 2008-10-02 | Gregory Leitheiser | Methods and apparatus to perform file transfers in distributed file systems |
US20080250407A1 (en) | 2007-04-05 | 2008-10-09 | Microsoft Corporation | Network group name for virtual machines |
US20080270704A1 (en) | 2007-04-30 | 2008-10-30 | He Dingshan | Cache arrangement for improving raid i/o operations |
US20080307258A1 (en) | 2007-06-11 | 2008-12-11 | International Business Machines Corporation | Distributed Job Manager Recovery |
US20080304516A1 (en) | 2007-06-06 | 2008-12-11 | Hanhua Feng | Distributed Joint Admission Control And Dynamic Resource Allocation In Stream Processing Networks |
US7466703B1 (en) | 1998-05-01 | 2008-12-16 | Alcatel-Lucent Usa Inc. | Scalable high speed router apparatus |
US20080310324A1 (en) | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Aborting a packetized wireless communication |
US7478388B1 (en) | 2004-04-21 | 2009-01-13 | Vmware, Inc. | Switching between multiple software entities using different operating modes of a processor in a computer system |
US20090025074A1 (en) | 2003-04-29 | 2009-01-22 | Activcard Ireland, Limited | Uniform modular framework for a host computer system |
US7500262B1 (en) | 2002-04-29 | 2009-03-03 | Aol Llc | Implementing single sign-on across a heterogeneous collection of client/server and web-based applications |
US20090097657A1 (en) | 2007-10-05 | 2009-04-16 | Scheidt Edward M | Constructive Channel Key |
US7529836B1 (en) | 2004-01-08 | 2009-05-05 | Network Appliance, Inc. | Technique for throttling data access requests |
US20090150629A1 (en) | 2007-12-05 | 2009-06-11 | Fujitsu Limited | Storage management device, storage system control device, storage medium storing storage management program, and storage system |
US20090199177A1 (en) | 2004-10-29 | 2009-08-06 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US7584467B2 (en) | 2003-03-17 | 2009-09-01 | Microsoft Corporation | Software updating system and method |
US20090222815A1 (en) | 2008-02-29 | 2009-09-03 | Steven Dake | Fault tolerant virtual machine |
US20090235358A1 (en) | 2004-12-10 | 2009-09-17 | Microsoft Corporation | Systems and methods for attaching a virtual machine virtual hard disk to a host machine |
US20090241108A1 (en) | 2004-10-29 | 2009-09-24 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090240744A1 (en) | 2008-03-21 | 2009-09-24 | Qualcomm Incorporated | Pourover journaling |
US7596620B1 (en) | 2008-11-04 | 2009-09-29 | Aptana, Inc. | System and method for developing, deploying, managing and monitoring a web application in a single environment |
US20090249440A1 (en) | 2008-03-30 | 2009-10-01 | Platt Darren C | System, method, and apparatus for managing access to resources across a network |
US20090276771A1 (en) | 2005-09-15 | 2009-11-05 | 3Tera, Inc. | Globally Distributed Utility Computing Cloud |
US20090282266A1 (en) | 2008-05-08 | 2009-11-12 | Microsoft Corporation | Corralling Virtual Machines With Encryption Keys |
US20090300641A1 (en) | 2008-05-30 | 2009-12-03 | Novell, Inc. | System and method for supporting a virtual appliance |
US20090300605A1 (en) | 2004-10-29 | 2009-12-03 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090310554A1 (en) | 2008-06-16 | 2009-12-17 | Qualcomm Incorporated | Jamming graph and its application in network resource assignment |
US7650331B1 (en) | 2004-06-18 | 2010-01-19 | Google Inc. | System and method for efficient large-scale data processing |
US20100017859A1 (en) | 2003-12-23 | 2010-01-21 | Wells Fargo Bank, N.A. | Authentication system for networked computer applications |
US7653833B1 (en) | 2006-10-31 | 2010-01-26 | Hewlett-Packard Development Company, L.P. | Terminating a non-clustered workload in response to a failure of a system with a clustered workload |
US20100023582A1 (en) | 2006-04-12 | 2010-01-28 | Pedersen Brad J | Systems and Methods for Accelerating Delivery of a Computing Environment to a Remote User |
US20100046426A1 (en) | 2008-05-02 | 2010-02-25 | Rochester Institute Of Technology | Methods for providing an ad hoc mobile communication network and systems thereof |
US20100057913A1 (en) | 2008-08-29 | 2010-03-04 | Dehaan Michael Paul | Systems and methods for storage allocation in provisioning of virtual machines |
US20100071035A1 (en) | 2008-09-12 | 2010-03-18 | Renata Budko | Methods and systems for securely managing virtualization platform |
US20100088335A1 (en) | 2008-10-07 | 2010-04-08 | Yasuyuki Mimatsu | Method and apparatus for improving file access performance of distributed storage system |
US20100094999A1 (en) | 2008-10-10 | 2010-04-15 | Netapp Inc. | Limiting simultaneous data transfers and efficient throttle management |
US20100095000A1 (en) | 2008-10-14 | 2010-04-15 | Kevin Kettler | Enabling Throttling of Resources on a Virtualization Enabled Information Handling System |
US20100153617A1 (en) | 2008-09-15 | 2010-06-17 | Virsto Software | Storage management system for virtual machines |
US7761573B2 (en) | 2005-12-07 | 2010-07-20 | Avaya Inc. | Seamless live migration of virtual machines across optical networks |
US20100199089A1 (en) | 2009-02-05 | 2010-08-05 | Wwpass Corporation | Centralized authentication system with safe private data storage and method |
US20100212004A1 (en) | 2009-02-18 | 2010-08-19 | Nokia Corporation | Method and apparatus for providing enhanced service authorization |
US20100217927A1 (en) | 2004-12-21 | 2010-08-26 | Samsung Electronics Co., Ltd. | Storage device and user device including the same |
US20100235649A1 (en) | 2009-03-13 | 2010-09-16 | Microsoft Corporation | Portable secure data files |
US7804862B1 (en) | 2004-05-25 | 2010-09-28 | Qlogic, Corporation | Token ID mechanism for network data transfer |
US20100274984A1 (en) | 2009-04-22 | 2010-10-28 | Hitachi, Ltd. | Management server device for managing virtual storage device, and method for managing virtual storage device |
US20100287548A1 (en) | 2009-05-06 | 2010-11-11 | Vmware, Inc. | Long Distance Virtual Machine Migration |
US7836285B2 (en) | 2007-08-08 | 2010-11-16 | Analog Devices, Inc. | Implementation of variable length instruction encoding using alias addressing |
US20100293285A1 (en) | 2001-04-18 | 2010-11-18 | Hitachi, Ltd. | Method of translating protocol at translator, method of providing protocol translation information at translation server, and address translation server |
US20100303241A1 (en) | 2009-06-02 | 2010-12-02 | Oliver Breyel | Automatic change of symmetrical encryption key |
US20110010483A1 (en) | 2007-06-28 | 2011-01-13 | Nokia Corporation | Memory protection unit in a virtual processing environment |
US20110022812A1 (en) | 2009-05-01 | 2011-01-27 | Van Der Linden Rob | Systems and methods for establishing a cloud bridge between virtual storage resources |
US20110055361A1 (en) | 2009-08-31 | 2011-03-03 | Dehaan Michael Paul | Systems and methods for generating management agent installations |
US20110060882A1 (en) | 2009-09-04 | 2011-03-10 | Petros Efstathopoulos | Request Batching and Asynchronous Request Execution For Deduplication Servers |
US20110078363A1 (en) | 2009-09-30 | 2011-03-31 | Phison Electronics Corp. | Block management method for a flash memory and flash memory controller and storage system using the same |
US20110085563A1 (en) | 2009-10-14 | 2011-04-14 | Dell Products, Lp | Virtualization Aware Network Switch |
US20110103389A1 (en) | 2009-11-03 | 2011-05-05 | Blade Network Technologies, Inc. | Method and apparatus for switching traffic between virtual machines |
US20110153697A1 (en) | 2005-09-15 | 2011-06-23 | Computer Assoicates Think, Inc. | Automated Filer Technique for Use in Virtualized Appliances and Applications |
US20110153838A1 (en) | 2009-12-18 | 2011-06-23 | Microsoft Corporation | Session monitoring of virtual desktops in a virtual machine farm |
US20110179412A1 (en) | 2007-05-23 | 2011-07-21 | Nec Corporation | Information sharing system, computer, project managing server, and information sharing method used in them |
US20110191768A1 (en) | 2010-02-03 | 2011-08-04 | Xobni Corporation | Systems and Methods to Identify Users Using an Automated Learning Process |
US20110191485A1 (en) | 2010-02-03 | 2011-08-04 | Os Nexus, Inc. | Role based access control utilizing scoped permissions |
US20110197024A1 (en) | 2010-02-10 | 2011-08-11 | International Business Machines Corporation | Providing redundancy in a virtualized storage system for a computer system |
WO2011095516A1 (en) | 2010-02-05 | 2011-08-11 | St-Ericsson Sa | Method and system for mass storage on flash memory |
US20110231280A1 (en) | 2010-03-17 | 2011-09-22 | Siamak Farah | Cloud-based desktop and subscription application platform apparatuses, methods and systems |
US20110246767A1 (en) | 2010-03-30 | 2011-10-06 | Pradeep Kumar Chaturvedi | Secure virtual machine memory |
US20110258441A1 (en) | 2010-04-20 | 2011-10-20 | International Business Machines Corporation | Secure Access to a Virtual Machine |
US8051414B2 (en) | 2005-08-01 | 2011-11-01 | Siemens Aktiengesellschaft | Method and system for remote software updating of a medical device |
US8065717B2 (en) | 2002-11-27 | 2011-11-22 | Activcard | Automated security token administrative services |
US20110296157A1 (en) | 2010-05-28 | 2011-12-01 | Dell Products, Lp | System and Method for Supporting Secure Subsystems in a Client Hosted Virtualization System |
US20110302415A1 (en) | 2010-06-02 | 2011-12-08 | Vmware, Inc. | Securing customer virtual machines in a multi-tenant cloud |
US20110302400A1 (en) | 2010-06-07 | 2011-12-08 | Maino Fabio R | Secure virtual machine bootstrap in untrusted cloud infrastructures |
US8103771B2 (en) | 2004-02-03 | 2012-01-24 | Sony Corporation | Distributing processing apparatus, method, and system |
US8108903B2 (en) | 2003-06-18 | 2012-01-31 | Telefonaktiebolaget Lm Ericsson (Publ) | Arrangement and a method relating to IP network access |
US8127295B1 (en) | 2007-08-03 | 2012-02-28 | Oracle America, Inc. | Scalable resource allocation |
US20120060018A1 (en) | 2010-09-02 | 2012-03-08 | International Business Machines Corporation | Collective Operations in a File System Based Execution Model |
US20120063458A1 (en) | 2010-09-15 | 2012-03-15 | International Business Machines Corporation | Multiple virtual machines sharing a single ip address |
US8146147B2 (en) | 2008-03-27 | 2012-03-27 | Juniper Networks, Inc. | Combined firewalls |
US20120084570A1 (en) | 2010-09-30 | 2012-04-05 | Microsoft Corporation | Remote Resources Single Sign On |
US20120084768A1 (en) | 2010-09-30 | 2012-04-05 | International Business Machines Corporation | Capturing Multi-Disk Virtual Machine Images Automatically |
US20120089981A1 (en) | 2008-06-30 | 2012-04-12 | Oracle America Inc. | Method and system for power management in a virtual machine environment without disrupting network connectivity |
US20120159634A1 (en) | 2010-12-15 | 2012-06-21 | International Business Machines Corporation | Virtual machine migration |
US20120173866A1 (en) | 2010-12-31 | 2012-07-05 | International Business Machines Corporation | System for securing virtual machine disks on a remote shared storage subsystem |
US8219777B2 (en) | 2002-10-03 | 2012-07-10 | Hewlett-Packard Development Company, L.P. | Virtual storage systems, virtual storage methods and methods of over committing a virtual raid storage system |
US20120179796A1 (en) | 2010-06-24 | 2012-07-12 | Ashwath Nagaraj | Routing and service performance management in an application acceleration environment |
US20120185688A1 (en) | 2011-01-13 | 2012-07-19 | Google Inc. | Processor mode locking |
US20120191912A1 (en) | 2011-01-20 | 2012-07-26 | Google Inc. | Storing data on storage nodes |
US20120215050A1 (en) | 2006-02-27 | 2012-08-23 | Huping Hu | Method and apparatus for producing quantum entanglement and non-local effects of substances |
US8261295B1 (en) | 2011-03-16 | 2012-09-04 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US20120233678A1 (en) | 2011-03-10 | 2012-09-13 | Red Hat, Inc. | Securely and automatically connecting virtual machines in a public cloud to corporate resource |
US20120233705A1 (en) | 2009-12-01 | 2012-09-13 | Andre Michel Boysen | System and methods for identity attribute validation |
US8276140B1 (en) | 2011-11-14 | 2012-09-25 | Google Inc. | Adjustable virtual network performance |
US20120246637A1 (en) | 2011-03-22 | 2012-09-27 | Cisco Technology, Inc. | Distributed load balancer in a virtual machine environment |
US8296459B1 (en) | 2010-06-30 | 2012-10-23 | Amazon Technologies, Inc. | Custom routing decisions |
US20130074181A1 (en) | 2011-09-19 | 2013-03-21 | Cisco Technology, Inc. | Auto Migration of Services Within a Virtual Data Center |
US8407687B2 (en) | 2000-09-22 | 2013-03-26 | Lumension Security, Inc. | Non-invasive automatic offsite patch fingerprinting and updating system and method |
US20130081014A1 (en) | 2011-09-23 | 2013-03-28 | Google Inc. | Bandwidth throttling of virtual disks |
US8423993B2 (en) | 2008-02-29 | 2013-04-16 | Red Hat, Inc. | Systems and methods for managing software patches |
US20130117801A1 (en) | 2011-11-03 | 2013-05-09 | Choung-Yaw Michael Shieh | Virtual security boundary for physical or virtual network devices |
US8468535B1 (en) | 2008-09-23 | 2013-06-18 | Gogrid, LLC | Automated system and method to provision and allocate hosting resources |
US8484353B1 (en) | 2010-09-28 | 2013-07-09 | Amazon Technologies, Inc. | Resource placement templates for virtual networks |
US8504844B2 (en) | 2008-12-19 | 2013-08-06 | Teradata Us, Inc. | System, method, and computer-readable medium for cryptographic key rotation in a database system |
US20130212709A1 (en) | 2010-10-31 | 2013-08-15 | Temporal Defense Systems, Llc | System and Method for Securing Virtual Computing Environments |
US20130227303A1 (en) | 2012-02-24 | 2013-08-29 | Google Inc. | Log structured volume encryption for virtual machines |
US8533796B1 (en) | 2011-03-16 | 2013-09-10 | Google Inc. | Providing application programs with access to secured resources |
US20130262405A1 (en) | 2012-03-27 | 2013-10-03 | Andrew Kadatch | Virtual Block Devices |
US20130276068A1 (en) | 2010-10-19 | 2013-10-17 | ArulMurugan Alwar | Methods and systems for generation of authorized virtual appliances |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP5081847B2 (en) | 2009-02-20 | 2012-11-28 | 株式会社日立製作所 | Packet processing apparatus and packet processing method using multiprocessor |
-
2012
- 2012-09-04 US US13/602,974 patent/US8966198B1/en active Active
-
2015
- 2015-02-23 US US14/629,149 patent/US9251234B1/en active Active
- 2015-12-21 US US14/977,055 patent/US9501233B2/en active Active
Patent Citations (172)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5463768A (en) | 1994-03-17 | 1995-10-31 | General Electric Company | Method and system for analyzing error logs for diagnostics |
US5794224A (en) | 1994-09-30 | 1998-08-11 | Yufik; Yan M. | Probabilistic resource allocation system with self-adaptive capability |
US5655081A (en) | 1995-03-08 | 1997-08-05 | Bmc Software, Inc. | System for monitoring and managing computer resources and applications across a distributed computing environment using an intelligent autonomous agent architecture |
US5778444A (en) | 1996-05-06 | 1998-07-07 | Motorola, Inc. | Method and apparatus for reset-sensitive and controlled register write accesses in a data processing system with user and test modes |
US6148368A (en) | 1997-07-31 | 2000-11-14 | Lsi Logic Corporation | Method for accelerating disk array write operations using segmented cache memory and data logging |
US6178482B1 (en) | 1997-11-03 | 2001-01-23 | Brecis Communications | Virtual register sets |
US7466703B1 (en) | 1998-05-01 | 2008-12-16 | Alcatel-Lucent Usa Inc. | Scalable high speed router apparatus |
US6505211B1 (en) | 1999-01-26 | 2003-01-07 | International Business Machines Corporation | Method for providing for persistence of java classes where the persistence semantics may be orthogonal to the class definition |
US20080244471A1 (en) | 1999-02-05 | 2008-10-02 | Killian Earl A | System and method of customizing an existing processor design having an existing processor instruction set architecture with instruction extensions |
US6505248B1 (en) | 1999-03-24 | 2003-01-07 | Gte Data Services Incorporated | Method and system for monitoring and dynamically reporting a status of a remote server |
US6449671B1 (en) | 1999-06-09 | 2002-09-10 | Ati International Srl | Method and apparatus for busing data elements |
US6891839B2 (en) | 1999-07-01 | 2005-05-10 | Cisco Technology, Inc. | Distributing packets among multiple tiers of network appliances |
US6587866B1 (en) | 2000-01-10 | 2003-07-01 | Sun Microsystems, Inc. | Method for distributing packets to server nodes using network client affinity and packet distribution table |
US20050237543A1 (en) | 2000-02-29 | 2005-10-27 | Canon Kabushiki Kaisha | Network device manager |
US6490651B1 (en) | 2000-03-14 | 2002-12-03 | Maxtor Corporation | Host-based virtual disk drive for improving the performance of a hard disk drive's input/output |
US6598179B1 (en) | 2000-03-31 | 2003-07-22 | International Business Machines Corporation | Table-based error log analysis |
US20020097747A1 (en) | 2000-05-22 | 2002-07-25 | Kirkby Paul Anthony | Management and control of multi-layer networks |
US6829678B1 (en) | 2000-07-18 | 2004-12-07 | International Business Machines Corporation | System for determining the order and frequency in which space is allocated on individual storage devices |
US7043455B1 (en) | 2000-07-28 | 2006-05-09 | International Business Machines Corporation | Method and apparatus for securing session information of users in a web application server environment |
US8407687B2 (en) | 2000-09-22 | 2013-03-26 | Lumension Security, Inc. | Non-invasive automatic offsite patch fingerprinting and updating system and method |
US20020091902A1 (en) | 2001-01-10 | 2002-07-11 | Susumu Hirofuji | File system and data caching method thereof |
US20070005761A1 (en) | 2001-04-07 | 2007-01-04 | Webmethods, Inc. | Predictive monitoring and problem identification in an information technology (it) infrastructure |
US20100293285A1 (en) | 2001-04-18 | 2010-11-18 | Hitachi, Ltd. | Method of translating protocol at translator, method of providing protocol translation information at translation server, and address translation server |
US6643613B2 (en) | 2001-07-03 | 2003-11-04 | Altaworks Corporation | System and method for monitoring performance metrics |
US7062718B2 (en) | 2001-08-14 | 2006-06-13 | National Instruments Corporation | Configuration diagram which graphically displays program relationship |
US7117243B2 (en) | 2001-10-02 | 2006-10-03 | Citrix Systems, Inc. | Methods for distributed program execution with file-type association in a client-server network |
US6898697B1 (en) | 2002-03-29 | 2005-05-24 | Advanced Micro Devices, Inc. | Efficient method for mode change detection and synchronization |
US7500262B1 (en) | 2002-04-29 | 2009-03-03 | Aol Llc | Implementing single sign-on across a heterogeneous collection of client/server and web-based applications |
US20040068637A1 (en) | 2002-10-03 | 2004-04-08 | Nelson Lee L. | Virtual storage systems and virtual storage system operational methods |
US8219777B2 (en) | 2002-10-03 | 2012-07-10 | Hewlett-Packard Development Company, L.P. | Virtual storage systems, virtual storage methods and methods of over committing a virtual raid storage system |
US8065717B2 (en) | 2002-11-27 | 2011-11-22 | Activcard | Automated security token administrative services |
US20040139368A1 (en) | 2003-01-09 | 2004-07-15 | International Business Machines Corporation | Method and apparatus for reporting error logs in a logical environment |
US20040148484A1 (en) | 2003-01-23 | 2004-07-29 | Hitachi, Ltd. | Throttling in storage systems |
US20060098618A1 (en) | 2003-01-31 | 2006-05-11 | Koninklijke Philips Electronics N.V. | Method and bridging device for priortizing transfer of data streams |
US7584467B2 (en) | 2003-03-17 | 2009-09-01 | Microsoft Corporation | Software updating system and method |
US7356679B1 (en) | 2003-04-11 | 2008-04-08 | Vmware, Inc. | Computer image capture, customization and deployment |
US20040210653A1 (en) | 2003-04-16 | 2004-10-21 | Novadigm, Inc. | Method and system for patch management |
US20050010715A1 (en) | 2003-04-23 | 2005-01-13 | Dot Hill Systems Corporation | Network storage appliance with integrated server and redundant storage controllers |
US20090025074A1 (en) | 2003-04-29 | 2009-01-22 | Activcard Ireland, Limited | Uniform modular framework for a host computer system |
US8108903B2 (en) | 2003-06-18 | 2012-01-31 | Telefonaktiebolaget Lm Ericsson (Publ) | Arrangement and a method relating to IP network access |
US20070123276A1 (en) | 2003-08-29 | 2007-05-31 | Stephen Parker | Secure valet telephone system apparatus and method |
US20080215796A1 (en) | 2003-12-08 | 2008-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Virtual Appliance Management |
US20100017859A1 (en) | 2003-12-23 | 2010-01-21 | Wells Fargo Bank, N.A. | Authentication system for networked computer applications |
US7529836B1 (en) | 2004-01-08 | 2009-05-05 | Network Appliance, Inc. | Technique for throttling data access requests |
US6996502B2 (en) | 2004-01-20 | 2006-02-07 | International Business Machines Corporation | Remote enterprise management of high availability systems |
US20050166011A1 (en) | 2004-01-23 | 2005-07-28 | Burnett Robert J. | System for consolidating disk storage space of grid computers into a single virtual disk drive |
US8103771B2 (en) | 2004-02-03 | 2012-01-24 | Sony Corporation | Distributing processing apparatus, method, and system |
US20050196030A1 (en) | 2004-02-12 | 2005-09-08 | Nortel Networks Limited | Method and apparatus for monitoring the transportation of medical images on a communication network |
US20070271604A1 (en) | 2004-03-17 | 2007-11-22 | Fidelitygenetic Ltd. | Secure Transaction of Dna Data |
US20070118694A1 (en) | 2004-03-23 | 2007-05-24 | Hitachi, Ltd. | Storage system |
US20050216659A1 (en) | 2004-03-26 | 2005-09-29 | Hitachi, Ltd. | Storage capable of cache assignment modification |
US7478388B1 (en) | 2004-04-21 | 2009-01-13 | Vmware, Inc. | Switching between multiple software entities using different operating modes of a processor in a computer system |
US7804862B1 (en) | 2004-05-25 | 2010-09-28 | Qlogic, Corporation | Token ID mechanism for network data transfer |
US7650331B1 (en) | 2004-06-18 | 2010-01-19 | Google Inc. | System and method for efficient large-scale data processing |
US20050289499A1 (en) | 2004-06-25 | 2005-12-29 | Matsushita Electric Industrial Co., Ltd. | High level synthesis method for semiconductor integrated circuit |
US20060026354A1 (en) | 2004-07-27 | 2006-02-02 | Texas Instruments Incorporated | Cache memory usable as scratch pad storage |
US20060059228A1 (en) | 2004-08-12 | 2006-03-16 | Oracle International Corporation | Capturing and re-creating the state of a queue when migrating a session |
US20060048130A1 (en) | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Patch sequencing |
US20060048077A1 (en) | 2004-08-31 | 2006-03-02 | International Business Machines Corporation | Method, system, program product and user interface for displaying a topology |
US20070280243A1 (en) | 2004-09-17 | 2007-12-06 | Hewlett-Packard Development Company, L.P. | Network Virtualization |
US20060067236A1 (en) | 2004-09-30 | 2006-03-30 | Sanyogita Gupta | Determining and provisioning paths in a network |
US20060075199A1 (en) | 2004-10-06 | 2006-04-06 | Mahesh Kallahalla | Method of providing storage to virtual computer cluster within shared computing environment |
US20090199177A1 (en) | 2004-10-29 | 2009-08-06 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090241108A1 (en) | 2004-10-29 | 2009-09-24 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090300605A1 (en) | 2004-10-29 | 2009-12-03 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090235358A1 (en) | 2004-12-10 | 2009-09-17 | Microsoft Corporation | Systems and methods for attaching a virtual machine virtual hard disk to a host machine |
US20060136676A1 (en) | 2004-12-21 | 2006-06-22 | Park Chan-Ik | Apparatus and methods using invalidity indicators for buffered memory |
US20100217927A1 (en) | 2004-12-21 | 2010-08-26 | Samsung Electronics Co., Ltd. | Storage device and user device including the same |
US20060153099A1 (en) | 2004-12-23 | 2006-07-13 | Carmel-Haifa University Economic Corp. Ltd. | Ad hoc communication system and method for routing speech packets therein |
US20060161753A1 (en) | 2005-01-18 | 2006-07-20 | Aschoff John G | Method, apparatus and program storage device for providing automatic performance optimization of virtualized storage allocation within a virtualized storage subsystem |
US20060235795A1 (en) | 2005-04-19 | 2006-10-19 | Microsoft Corporation | Secure network commercial transactions |
US20060271547A1 (en) | 2005-05-25 | 2006-11-30 | Microsoft Corporation | Cluster storage collection based data management |
US20070011361A1 (en) | 2005-07-07 | 2007-01-11 | Wataru Okada | Storage management system |
US8051414B2 (en) | 2005-08-01 | 2011-11-01 | Siemens Aktiengesellschaft | Method and system for remote software updating of a medical device |
US20110153697A1 (en) | 2005-09-15 | 2011-06-23 | Computer Assoicates Think, Inc. | Automated Filer Technique for Use in Virtualized Appliances and Applications |
US20090276771A1 (en) | 2005-09-15 | 2009-11-05 | 3Tera, Inc. | Globally Distributed Utility Computing Cloud |
US20070112956A1 (en) | 2005-11-12 | 2007-05-17 | Chapman Matthew P | Resource optimisation component |
US7761573B2 (en) | 2005-12-07 | 2010-07-20 | Avaya Inc. | Seamless live migration of virtual machines across optical networks |
US20070177198A1 (en) | 2006-01-30 | 2007-08-02 | Brother Kogyo Kabushiki Kaisha | Data Processing Device for Renaming Virtual Device |
US20070199058A1 (en) | 2006-02-10 | 2007-08-23 | Secunet Security Networks Aktiengesellschaft | Method of using a security token |
US20120215050A1 (en) | 2006-02-27 | 2012-08-23 | Huping Hu | Method and apparatus for producing quantum entanglement and non-local effects of substances |
US20100023582A1 (en) | 2006-04-12 | 2010-01-28 | Pedersen Brad J | Systems and Methods for Accelerating Delivery of a Computing Environment to a Remote User |
US20070288921A1 (en) | 2006-06-13 | 2007-12-13 | King Steven R | Emulating a network-like communication connection between virtual machines on a physical device |
US20080222246A1 (en) | 2006-06-15 | 2008-09-11 | International Business Machines Corporation | Method and Apparatus for Localized Adaptation of Client Devices Based on Correlation or Learning at Remote Server |
US20080028389A1 (en) | 2006-07-27 | 2008-01-31 | Genty Denise M | Filtering a list of available install items for an install program based on a consumer's install policy |
US20080208681A1 (en) | 2006-09-28 | 2008-08-28 | Ayman Hammad | Payment using a mobile device |
US20080086515A1 (en) | 2006-10-06 | 2008-04-10 | International Business Machines Corporation | Method and System for a Soft Error Collection of Trace Files |
US20080095176A1 (en) | 2006-10-20 | 2008-04-24 | Ciena Corporation | System and method for supporting virtualized links at an exterior network-to-network interface |
US7653833B1 (en) | 2006-10-31 | 2010-01-26 | Hewlett-Packard Development Company, L.P. | Terminating a non-clustered workload in response to a failure of a system with a clustered workload |
US20080107112A1 (en) | 2006-11-03 | 2008-05-08 | Hon Hai Precision Industry Co., Ltd. | Network device and packet forwarding method thereof |
US20080222375A1 (en) | 2007-02-21 | 2008-09-11 | Deutsche Telekom Ag | Method and system for the transparent migration of virtual machines storage |
US20080205415A1 (en) | 2007-02-28 | 2008-08-28 | Morales Henry N Jerez | Access, Connectivity and Interoperability for Devices and Services |
US20080244030A1 (en) | 2007-03-30 | 2008-10-02 | Gregory Leitheiser | Methods and apparatus to perform file transfers in distributed file systems |
US20080250407A1 (en) | 2007-04-05 | 2008-10-09 | Microsoft Corporation | Network group name for virtual machines |
US20080270704A1 (en) | 2007-04-30 | 2008-10-30 | He Dingshan | Cache arrangement for improving raid i/o operations |
US20110179412A1 (en) | 2007-05-23 | 2011-07-21 | Nec Corporation | Information sharing system, computer, project managing server, and information sharing method used in them |
US20080304516A1 (en) | 2007-06-06 | 2008-12-11 | Hanhua Feng | Distributed Joint Admission Control And Dynamic Resource Allocation In Stream Processing Networks |
US20080307258A1 (en) | 2007-06-11 | 2008-12-11 | International Business Machines Corporation | Distributed Job Manager Recovery |
US20080310324A1 (en) | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Aborting a packetized wireless communication |
US20110010483A1 (en) | 2007-06-28 | 2011-01-13 | Nokia Corporation | Memory protection unit in a virtual processing environment |
US8127295B1 (en) | 2007-08-03 | 2012-02-28 | Oracle America, Inc. | Scalable resource allocation |
US7836285B2 (en) | 2007-08-08 | 2010-11-16 | Analog Devices, Inc. | Implementation of variable length instruction encoding using alias addressing |
US20090097657A1 (en) | 2007-10-05 | 2009-04-16 | Scheidt Edward M | Constructive Channel Key |
US20090150629A1 (en) | 2007-12-05 | 2009-06-11 | Fujitsu Limited | Storage management device, storage system control device, storage medium storing storage management program, and storage system |
US20090222815A1 (en) | 2008-02-29 | 2009-09-03 | Steven Dake | Fault tolerant virtual machine |
US8423993B2 (en) | 2008-02-29 | 2013-04-16 | Red Hat, Inc. | Systems and methods for managing software patches |
US20090240744A1 (en) | 2008-03-21 | 2009-09-24 | Qualcomm Incorporated | Pourover journaling |
US8146147B2 (en) | 2008-03-27 | 2012-03-27 | Juniper Networks, Inc. | Combined firewalls |
US20090249440A1 (en) | 2008-03-30 | 2009-10-01 | Platt Darren C | System, method, and apparatus for managing access to resources across a network |
US20100046426A1 (en) | 2008-05-02 | 2010-02-25 | Rochester Institute Of Technology | Methods for providing an ad hoc mobile communication network and systems thereof |
US20090282266A1 (en) | 2008-05-08 | 2009-11-12 | Microsoft Corporation | Corralling Virtual Machines With Encryption Keys |
US20090300641A1 (en) | 2008-05-30 | 2009-12-03 | Novell, Inc. | System and method for supporting a virtual appliance |
US20090310554A1 (en) | 2008-06-16 | 2009-12-17 | Qualcomm Incorporated | Jamming graph and its application in network resource assignment |
US20120089981A1 (en) | 2008-06-30 | 2012-04-12 | Oracle America Inc. | Method and system for power management in a virtual machine environment without disrupting network connectivity |
US20100057913A1 (en) | 2008-08-29 | 2010-03-04 | Dehaan Michael Paul | Systems and methods for storage allocation in provisioning of virtual machines |
US20100071035A1 (en) | 2008-09-12 | 2010-03-18 | Renata Budko | Methods and systems for securely managing virtualization platform |
US20100153617A1 (en) | 2008-09-15 | 2010-06-17 | Virsto Software | Storage management system for virtual machines |
US8468535B1 (en) | 2008-09-23 | 2013-06-18 | Gogrid, LLC | Automated system and method to provision and allocate hosting resources |
US20100088335A1 (en) | 2008-10-07 | 2010-04-08 | Yasuyuki Mimatsu | Method and apparatus for improving file access performance of distributed storage system |
US20100094999A1 (en) | 2008-10-10 | 2010-04-15 | Netapp Inc. | Limiting simultaneous data transfers and efficient throttle management |
US20100095000A1 (en) | 2008-10-14 | 2010-04-15 | Kevin Kettler | Enabling Throttling of Resources on a Virtualization Enabled Information Handling System |
US7596620B1 (en) | 2008-11-04 | 2009-09-29 | Aptana, Inc. | System and method for developing, deploying, managing and monitoring a web application in a single environment |
US8504844B2 (en) | 2008-12-19 | 2013-08-06 | Teradata Us, Inc. | System, method, and computer-readable medium for cryptographic key rotation in a database system |
US20100199089A1 (en) | 2009-02-05 | 2010-08-05 | Wwpass Corporation | Centralized authentication system with safe private data storage and method |
US20100212004A1 (en) | 2009-02-18 | 2010-08-19 | Nokia Corporation | Method and apparatus for providing enhanced service authorization |
US20100235649A1 (en) | 2009-03-13 | 2010-09-16 | Microsoft Corporation | Portable secure data files |
US20100274984A1 (en) | 2009-04-22 | 2010-10-28 | Hitachi, Ltd. | Management server device for managing virtual storage device, and method for managing virtual storage device |
US20110022812A1 (en) | 2009-05-01 | 2011-01-27 | Van Der Linden Rob | Systems and methods for establishing a cloud bridge between virtual storage resources |
US20100287548A1 (en) | 2009-05-06 | 2010-11-11 | Vmware, Inc. | Long Distance Virtual Machine Migration |
US20100303241A1 (en) | 2009-06-02 | 2010-12-02 | Oliver Breyel | Automatic change of symmetrical encryption key |
US20110055361A1 (en) | 2009-08-31 | 2011-03-03 | Dehaan Michael Paul | Systems and methods for generating management agent installations |
US20110060882A1 (en) | 2009-09-04 | 2011-03-10 | Petros Efstathopoulos | Request Batching and Asynchronous Request Execution For Deduplication Servers |
US20110078363A1 (en) | 2009-09-30 | 2011-03-31 | Phison Electronics Corp. | Block management method for a flash memory and flash memory controller and storage system using the same |
US20110085563A1 (en) | 2009-10-14 | 2011-04-14 | Dell Products, Lp | Virtualization Aware Network Switch |
US20110103389A1 (en) | 2009-11-03 | 2011-05-05 | Blade Network Technologies, Inc. | Method and apparatus for switching traffic between virtual machines |
US20120233705A1 (en) | 2009-12-01 | 2012-09-13 | Andre Michel Boysen | System and methods for identity attribute validation |
US20110153838A1 (en) | 2009-12-18 | 2011-06-23 | Microsoft Corporation | Session monitoring of virtual desktops in a virtual machine farm |
US20110191485A1 (en) | 2010-02-03 | 2011-08-04 | Os Nexus, Inc. | Role based access control utilizing scoped permissions |
US20110191768A1 (en) | 2010-02-03 | 2011-08-04 | Xobni Corporation | Systems and Methods to Identify Users Using an Automated Learning Process |
WO2011095516A1 (en) | 2010-02-05 | 2011-08-11 | St-Ericsson Sa | Method and system for mass storage on flash memory |
US20110197024A1 (en) | 2010-02-10 | 2011-08-11 | International Business Machines Corporation | Providing redundancy in a virtualized storage system for a computer system |
US20110231280A1 (en) | 2010-03-17 | 2011-09-22 | Siamak Farah | Cloud-based desktop and subscription application platform apparatuses, methods and systems |
US20110246767A1 (en) | 2010-03-30 | 2011-10-06 | Pradeep Kumar Chaturvedi | Secure virtual machine memory |
US20110258441A1 (en) | 2010-04-20 | 2011-10-20 | International Business Machines Corporation | Secure Access to a Virtual Machine |
US20110296157A1 (en) | 2010-05-28 | 2011-12-01 | Dell Products, Lp | System and Method for Supporting Secure Subsystems in a Client Hosted Virtualization System |
US20110302415A1 (en) | 2010-06-02 | 2011-12-08 | Vmware, Inc. | Securing customer virtual machines in a multi-tenant cloud |
US20110302400A1 (en) | 2010-06-07 | 2011-12-08 | Maino Fabio R | Secure virtual machine bootstrap in untrusted cloud infrastructures |
US20120179796A1 (en) | 2010-06-24 | 2012-07-12 | Ashwath Nagaraj | Routing and service performance management in an application acceleration environment |
US8296459B1 (en) | 2010-06-30 | 2012-10-23 | Amazon Technologies, Inc. | Custom routing decisions |
US20120060018A1 (en) | 2010-09-02 | 2012-03-08 | International Business Machines Corporation | Collective Operations in a File System Based Execution Model |
US20120063458A1 (en) | 2010-09-15 | 2012-03-15 | International Business Machines Corporation | Multiple virtual machines sharing a single ip address |
US8484353B1 (en) | 2010-09-28 | 2013-07-09 | Amazon Technologies, Inc. | Resource placement templates for virtual networks |
US20120084570A1 (en) | 2010-09-30 | 2012-04-05 | Microsoft Corporation | Remote Resources Single Sign On |
US20120084768A1 (en) | 2010-09-30 | 2012-04-05 | International Business Machines Corporation | Capturing Multi-Disk Virtual Machine Images Automatically |
US20130276068A1 (en) | 2010-10-19 | 2013-10-17 | ArulMurugan Alwar | Methods and systems for generation of authorized virtual appliances |
US20130212709A1 (en) | 2010-10-31 | 2013-08-15 | Temporal Defense Systems, Llc | System and Method for Securing Virtual Computing Environments |
US20120159634A1 (en) | 2010-12-15 | 2012-06-21 | International Business Machines Corporation | Virtual machine migration |
US20120173866A1 (en) | 2010-12-31 | 2012-07-05 | International Business Machines Corporation | System for securing virtual machine disks on a remote shared storage subsystem |
US20120185688A1 (en) | 2011-01-13 | 2012-07-19 | Google Inc. | Processor mode locking |
US20120191912A1 (en) | 2011-01-20 | 2012-07-26 | Google Inc. | Storing data on storage nodes |
US8745329B2 (en) | 2011-01-20 | 2014-06-03 | Google Inc. | Storing data across a plurality of storage nodes |
US20120233678A1 (en) | 2011-03-10 | 2012-09-13 | Red Hat, Inc. | Securely and automatically connecting virtual machines in a public cloud to corporate resource |
US20120266159A1 (en) | 2011-03-16 | 2012-10-18 | Pankaj Risbood | Selection of Ranked Configurations |
US8533796B1 (en) | 2011-03-16 | 2013-09-10 | Google Inc. | Providing application programs with access to secured resources |
US8261295B1 (en) | 2011-03-16 | 2012-09-04 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US20120246637A1 (en) | 2011-03-22 | 2012-09-27 | Cisco Technology, Inc. | Distributed load balancer in a virtual machine environment |
US20130074181A1 (en) | 2011-09-19 | 2013-03-21 | Cisco Technology, Inc. | Auto Migration of Services Within a Virtual Data Center |
US20130081014A1 (en) | 2011-09-23 | 2013-03-28 | Google Inc. | Bandwidth throttling of virtual disks |
US20130117801A1 (en) | 2011-11-03 | 2013-05-09 | Choung-Yaw Michael Shieh | Virtual security boundary for physical or virtual network devices |
US8276140B1 (en) | 2011-11-14 | 2012-09-25 | Google Inc. | Adjustable virtual network performance |
US20130227303A1 (en) | 2012-02-24 | 2013-08-29 | Google Inc. | Log structured volume encryption for virtual machines |
US20130262405A1 (en) | 2012-03-27 | 2013-10-03 | Andrew Kadatch | Virtual Block Devices |
Non-Patent Citations (80)
Title |
---|
"Generic Routing Encapsulation". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported. [retrieved on Jan. 14, 2011]. Retrieved from the Internet:, pp. 1-5. |
"Generic Routing Encapsulation". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported. [retrieved on Jan. 14, 2011]. Retrieved from the Internet:<URL: http://creativecommons.org/licenses/by-sa/3.0/>, pp. 1-5. |
"IPsec". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported. [retrieved on Jan. 14, 2011]. Retrieved from the Internet:, pp. 1-8. |
"IPsec". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported. [retrieved on Jan. 14, 2011]. Retrieved from the Internet:<URL: http://creativecommons.org/licenses/by-sa/3.0/>, pp. 1-8. |
Abdull, AlastairIrvine, et al. "Generic Routing Encapsulation", [online] [retrieved on Jan. 4, 2011]. Retrieved from the Internet: , 5 pages. |
Abdull, AlastairIrvine, et al. "Generic Routing Encapsulation", [online] [retrieved on Jan. 4, 2011]. Retrieved from the Internet: <URL: http:/ / creativecommons. org/ licenses/ by-sa/ 3. 0/>, 5 pages. |
Alpern, B., "The Jalapeno virtual machine," IBM Systems Journal, Jan. 2000, vol. 39, Issue 1, pp. 211-238. |
Amazon Auto Scaling-Developer Guide-API Version Aug. 1, 2010. Amazon Web Services LLC, 2011, 62 pages. |
Amazon Auto Scaling-Getting Started Guide-API Version Aug. 1, 2010. Amazon Web Services LLC, 2010, 20 pages. |
Amazon CloudWatch-Developer Guide-API Version Aug. 1, 2010. Amazon Web Services LLC, 2010, 75 pages. |
Amazon Elastic Compute Cloud, User Guide, API Version Mar. 1, 2012, pp. 97-103, downloaded from http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html?r=4276 on Mar. 18, 2012. |
Anonymous, "Storage I/O Control Technical Overview and Consideration for Deployment," VMware vSphere(TM) 4.1, Jan. 1, 2010, XP05504491, retrieved from the internet: URL: http://www.vmware.com/fled/pdf/techpaper/WMW-vSphere41-SIOC.pdf; [retrieved on Nov. 21, 2012], the entire document. |
Anonymous, "Storage I/O Control Technical Overview and Consideration for Deployment," VMware vSphere™ 4.1, Jan. 1, 2010, XP05504491, retrieved from the internet: URL: http://www.vmware.com/fled/pdf/techpaper/WMW-vSphere41-SIOC.pdf; [retrieved on Nov. 21, 2012], the entire document. |
Apache HTTP Server Version 2.0. "Log Files." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet , 7 pages. |
Apache HTTP Server Version 2.0. "Log Files." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet <URL: http://httpd.apache.org/docs/2.0/logs.html>, 7 pages. |
Benincosa. "Ganglia and Nagios, Part 2: Monitor enterprise clusters with Nagios-Install Nagios to effectively monitor a data center; make Ganglia and Nagios work together," 2009, 20 pages. |
Bok, Jin Yo, Authorized Officer for Korean Intellectual Property Office, International Search Report and Written Opinion for PCT/US2012/029210, International Search Report completed Oct. 10, 2012, 2 pages. |
Bucket Explorer. "What is my AWS Access and Secret Key." [Retrieved Apr. 26, 2011]. Retrieved from the Internet <URL: http://www.bucketexplorer.com/documentation/amazon-s3--what-is-my-aws-access-and-secret-key.html>, 1 page. |
Cabellos et al., LISPmob: Mobile Networking through LISP, Apr. 2, 2012, 8 pages. |
Cala et al., "Automatic Software Deployment in the Azure Cloud", IFIP International Federation for Information Processing, 2010, pp. 1-14. |
Chen, Per M., et al., : "Maximizing Performance in a Striped Disk Array", 17th Annual International Symposium on Computer Architecture (SIGARCH 1990), 18 pages. |
Cloud Computing Course, Part 2: Amazon's EC2, Marcel Gagne, Jun. 13, 2011. Retrieved from the Internet: , 6 pages. |
Cloud Computing Course, Part 2: Amazon's EC2, Marcel Gagne, Jun. 13, 2011. Retrieved from the Internet: <URL: http://marcelgagne.com/content/cloud-computing-course-part-2-amazons-ec2>, 6 pages. |
Eng, Lili, Australian Government, IP Australia, Examiner's First Report for 2012200562, dated Jun. 4, 2012, 2 pages. |
Farinacci et al., "RFC 2784: Generic Routing Encapsulation (GRE)", Mar. 2000, The Internet Society, 10 pages. |
Gowalla "API Documentation-Oauth." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet , 4 pages. |
Gowalla "API Documentation-Oauth." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet <URL: http://gowalla.com/api/docs/oauth>, 4 pages. |
Hehn, Eva, Authorized Office for European Patent Office, International Search Report and Written Opinion for PCT/US2013/027456, completed Jun. 24, 2013, 11 pages. |
Hongkiat. "Amazon S3-The Beginner's Guide." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet , 9 pages. |
Hongkiat. "Amazon S3-The Beginner's Guide." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet <URL: http://www.hongkiat.com/blog/amazon-s3-the-beginners-guide/>, 9 pages. |
How to: Getting Started With Amazon EC2, Paul Stamatiou, Apr. 5, 2008. Retrieved from the Internet: , 25 pages. |
How to: Getting Started With Amazon EC2, Paul Stamatiou, Apr. 5, 2008. Retrieved from the Internet: <URL:http//paulstamatiou.com/how-to-getting-started-with-amazon-ec2>, 25 pages. |
Kent et al., "RFC 4301: Security Architecture for the Internet Protocol", Dec. 2005, The Internet Society, 102 pages. |
Key Management In Cloud Datacenters, Security Stackexchange.com, Retrieved from the Internet on Nov. 18, 2011; Retrieved from: , 2 pages. |
Key Management In Cloud Datacenters, Security Stackexchange.com, Retrieved from the Internet on Nov. 18, 2011; Retrieved from: <URL: http://security.stackexchange.com/questions/2514/key-management-in-cloud-datacenters>, 2 pages. |
Laitinen, Aapo et al., Network Address Translation [Retrieved on Oct. 10, 2011] Retrieved from the Internet: <URL: http://en.wikipedia.org/wiki/Networkpages-Address-and-Port-Translation>, 11 pages. |
Managing Amazon EC2-SSH Login and Protecting Your Instances, Everyday's Findings, Monday, May 18, 2009, Retrieved from the Internet on Nov. 18, 2011; Retrieved from: <URL: http://blog.taggesell.de/index.php?/aarchives/73-Managing-Amazon-EC2., 6 pages. |
Microsoft Support. "How to view and manage event logs in Event Viewer in Windows XP." May 7, 2007, version 3.5 [Retrieved on Feb. 15, 2011]. Retrieved from the Internet , 6 pages. |
Microsoft Support. "How to view and manage event logs in Event Viewer in Windows XP." May 7, 2007, version 3.5 [Retrieved on Feb. 15, 2011]. Retrieved from the Internet <URL: http://support.microsoft.com/kb/308427>, 6 pages. |
Moller, Jan, et al., "Internal Network Security", Feb. 1, 2000-May 18, 2001, Retrieved from the Internet: , 183 pages. |
Moller, Jan, et al., "Internal Network Security", Feb. 1, 2000-May 18, 2001, Retrieved from the Internet: <URL: http://www.daimi.au.dk/˜fwiffo/thesis/>, 183 pages. |
MSDN. "Visual Basic Concepts, Visual Studio 6.0: Centralized Error Handling." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet , 4 pages. |
MSDN. "Visual Basic Concepts, Visual Studio 6.0: Centralized Error Handling." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet <URL: http://msdn.microsoft.com/en-us/library/aa240795(d=printer, v=vs.60).aspx>, 4 pages. |
Myerson, Judith. "Creating Applications with Amazon EC2 and S3." O'ReillyOnLamp.com, May 13, 2008 [Retrieved on Apr. 26, 2011]. Retrieved from the Internet , 8 pages. |
Myerson, Judith. "Creating Applications with Amazon EC2 and S3." O'ReillyOnLamp.com, May 13, 2008 [Retrieved on Apr. 26, 2011]. Retrieved from the Internet <URL: http://onlamp.com/pub/a/onlamp/2008/05/13/creating-applications-with-amazon-ec2-and-s3.html>, 8 pages. |
'Nagios' [online]. "Monitoring Linux/Unix Machines," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: <http://nagios.sourceforge.net/docs/3-0/monitoring-linux.html > 1 page. |
'Nagios' [online]. "Monitoring Linux/Unix Machines," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: 1 page. |
'Nagios' [online]. "Nagios Plugins," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: <http://nagios.sourceforge.net/docs/3-0/plugins.html > 2 pages. |
'Nagios' [online]. "Nagios Plugins," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: 2 pages. |
OMG, Deployment and Configuration of Component-based Distributed Applications Specification-Version 4.0, OMG, 2006, pp. 1-160. |
Paravirtualization, Wikipedia Article, downloaded from http://en.wikipedia.org/wiki/Paravirtualization on Mar. 18, 2012. |
Paravirtualized File Systems, Eric Van Hensbergen, downloaded from http://www.slideshare.net/ericvh/9p-on-kvm on Mar. 18, 2012. |
Primet, Pascale, et al.., "HIPCAL: State of the Art of OS and Network virtualization solutions for Grids", Sep. 14, 2007, 38 pages. |
RSA Laboratories, "PKCS #11 v2.20: Cryptographic Token Interface Standard," Jun. 28, 2004, RSA Security Inc. (407 pages). |
Sarhan, Nabil J., et al., "Caching and Scheduling in NAD-Based Multimedia Servers"; IEEE Computer Society, IEEE Transactions on Parallel and Distributed Systems, vol. 15, No. 10, Oct. 2004; pp. 921-933. |
Steinmetz, Christof, Authorized Office for European Patent Office, International Search Report and Written Opinion for PCT/US2013/034140, completed Jun. 25, 2013, 21 pages. |
Travostino, Franco, et al., Seamless Live Migration of Virtual Machines over the MAN/WAN, 2006, Elsevier Future Generation Computer Systems 2006, 10 pages. |
Uploading Personal ssh Keys to Amazon EC2, Eric Hammond, Oct. 14, 2010. Retrieved from the Internet: , 3 pages. |
Uploading Personal ssh Keys to Amazon EC2, Eric Hammond, Oct. 14, 2010. Retrieved from the Internet: <URL:http://alestic.com/2010/10/ec2-ssh-keys>, 3 pages. |
Using and Managing AWS-Part 6: SSH Key Pairs, Top WordPress, May 26, 2009, Retrieved from the Internet: , 5 pages. |
Using and Managing AWS-Part 6: SSH Key Pairs, Top WordPress, May 26, 2009, Retrieved from the Internet: <URL: http://clouddb.info/2009/05/26/using-and-managing-aws-part-6-ssh-key-pairs>, 5 pages. |
Vazhkudai, Sudharshan S., et al.; "Constructing Collaborative Desktop Storage Caches for Large Scientific Datasets"; ACM Journal Name, vol. V, No. N, Jun. 2006, 34 pages. |
VMCI Datagram API [Retrieved on Jun. 8, 2011], Retrieved from the Internet: , 1 page. |
VMCI Datagram API [Retrieved on Jun. 8, 2011], Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/datagram html>, 1 page. |
VMCI Datagram-SendTo [Retrieved on Jun. 8, 2011], Retrieved from the Internet: , 1 page. |
VMCI Datagram-SendTo [Retrieved on Jun. 8, 2011], Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/functions/VMCIDatagram-SendTo.html>, 1 page. |
VMCI Overview [Retrieved on Jun. 8, 2011] Retrieved from the Internet: , 3 pages. |
VMCI Overview [Retrieved on Jun. 8, 2011] Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/VMCI-intro.html>, 3 pages. |
VMCIDs-Lookup [Retrieved on Jun. 8, 2011], Retrieved from the Internet: , 2 pages. |
VMCIDs-Lookup [Retrieved on Jun. 8, 2011], Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/functions/VMCIDs-Lookup.html>, 2 pages. |
VMware vSphere [Retrieved on Jun. 8, 2011] Retrieved from the Internet: , 2 pages. |
VMware vSphere [Retrieved on Jun. 8, 2011] Retrieved from the Internet: <URL: http://www.vmware.com/products/vmotion/overview.html>, 2 pages. |
Wikipedia, "IPSec", [online] [retrieved on Jan. 4, 2011]. Retrieved from the Internet: , 8 pages. |
Wikipedia, "IPSec", [online] [retrieved on Jan. 4, 2011]. Retrieved from the Internet: <URL: http://en.wikipedia.org/wiki/IPsec/>, 8 pages. |
Wikipedia. "OAuth." [online] [Retrieved on Jan. 20, 2011]. Retrieved from the Internet , 3 pages. |
Wikipedia. "OAuth." [online] [Retrieved on Jan. 20, 2011]. Retrieved from the Internet <URL: http://en.wikipedia.org/wiki/OAuth> , 3 pages. |
Wikipedia., Anycast [Retrieved on Oct. 10, 2011] Retrieved from the Internet: URL, 5 pages. |
Wikipedia., Anycast [Retrieved on Oct. 10, 2011] Retrieved from the Internet: URL<http://en.wikipedia.org/wiki/Anycast>, 5 pages. |
'Zabbix' [online]. "Zabbix 1.8: The Ultimate Open Source Monitoring Solution," 2001-2012, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: <http://www.zabbix.com/features.php.> 1 page. |
'Zabbix' [online]. "Zabbix 1.8: The Ultimate Open Source Monitoring Solution," 2001-2012, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: 1 page. |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10747718B2 (en) | 2011-08-10 | 2020-08-18 | Nutanix, Inc. | Mapping structure for maintaining metadata for snapshots in a virtualized storage environment |
US11243707B2 (en) | 2014-03-12 | 2022-02-08 | Nutanix, Inc. | Method and system for implementing virtual machine images |
US10613947B2 (en) * | 2016-06-09 | 2020-04-07 | Nutanix, Inc. | Saving and restoring storage devices using application-consistent snapshots |
US10824522B2 (en) | 2017-11-27 | 2020-11-03 | Nutanix, Inc. | Method, apparatus, and computer program product for generating consistent snapshots without quiescing applications |
US11074134B2 (en) | 2018-08-23 | 2021-07-27 | International Business Machines Corporation | Space management for snapshots of execution images |
Also Published As
Publication number | Publication date |
---|---|
US9251234B1 (en) | 2016-02-02 |
US20160124669A1 (en) | 2016-05-05 |
US8966198B1 (en) | 2015-02-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9501233B2 (en) | Providing snapshots of virtual storage devices | |
US11249951B2 (en) | Heuristic interface for enabling a computer device to utilize data property-based data placement inside a nonvolatile memory device | |
US9720952B2 (en) | Virtual block devices | |
US9612749B2 (en) | Opportunistic asynchronous deduplication using an in-memory cache | |
US9952782B1 (en) | Method and system for accessing data between different virtual disk formats in a virtualization environment | |
US20170017411A1 (en) | Data property-based data placement in a nonvolatile memory device | |
US8881144B1 (en) | Systems and methods for reclaiming storage space from virtual machine disk images | |
US11003477B2 (en) | Provision of input/output classification in a storage system | |
EP3669262B1 (en) | Thin provisioning virtual desktop infrastructure virtual machines in cloud environments without thin clone support | |
US11210319B2 (en) | Replication progress for UPIT snapshots | |
US11138028B1 (en) | Hot growing a cloud hosted block device | |
US9471366B2 (en) | Virtual machine disk image backup using block allocation area | |
US11016676B2 (en) | Spot coalescing of distributed data concurrent with storage I/O operations | |
GB2496960A (en) | Caching method for a virtual machine. | |
US9952984B2 (en) | Erasing a storage block before writing partial data | |
US10013201B2 (en) | Region-integrated data deduplication | |
US20150095568A1 (en) | Storage system and storage device configuration reporting | |
US20190102433A1 (en) | Storing derived summaries on persistent memory of a storage device | |
US9286092B1 (en) | Virtual machine disk images | |
US11748259B2 (en) | System and method to conserve device lifetime for snapshot generation | |
US20220197860A1 (en) | Hybrid snapshot of a global namespace | |
US20230104089A1 (en) | Transferring log data from pre-os environment to persistent store |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HARRIS, MATTHEW S.;KADATCH, ANDREW;KHORUN, SERGEY;AND OTHERS;REEL/FRAME:037410/0169Effective date: 20110913 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044097/0658Effective date: 20170929 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
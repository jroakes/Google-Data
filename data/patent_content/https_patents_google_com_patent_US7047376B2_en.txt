US7047376B2 - Backup system and method and program - Google Patents
Backup system and method and program Download PDFInfo
- Publication number
- US7047376B2 US7047376B2 US10/874,247 US87424704A US7047376B2 US 7047376 B2 US7047376 B2 US 7047376B2 US 87424704 A US87424704 A US 87424704A US 7047376 B2 US7047376 B2 US 7047376B2
- Authority
- US
- United States
- Prior art keywords
- data
- backup
- received
- module
- site
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000000034 method Methods 0.000 title claims description 38
- 238000012546 transfer Methods 0.000 claims abstract description 53
- 238000012545 processing Methods 0.000 claims description 101
- 230000005540 biological transmission Effects 0.000 claims description 32
- 239000000284 extract Substances 0.000 claims 1
- 238000007726 management method Methods 0.000 description 52
- 238000013523 data management Methods 0.000 description 24
- 230000008569 process Effects 0.000 description 22
- 238000010586 diagram Methods 0.000 description 16
- 230000004048 modification Effects 0.000 description 6
- 238000012986 modification Methods 0.000 description 6
- 230000001360 synchronised effect Effects 0.000 description 4
- 238000012544 monitoring process Methods 0.000 description 3
- 230000001105 regulatory effect Effects 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000001771 impaired effect Effects 0.000 description 1
- 230000007257 malfunction Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1415—Saving, restoring, recovering or retrying at system level
- G06F11/1443—Transmit or communication errors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/16—Error detection or correction of the data by redundancy in hardware
- G06F11/20—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements
- G06F11/2053—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant
- G06F11/2056—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant by mirroring
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/16—Error detection or correction of the data by redundancy in hardware
- G06F11/20—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements
- G06F11/2053—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant
- G06F11/2056—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant by mirroring
- G06F11/2058—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant by mirroring using more than 2 mirrored copies
Definitions
- the present invention relates to a backup technology for data in a storage system or a server, and more specifically to a technology of asynchronous data update between plural sites.
- Databases and web sites avoid data redundancy by taking a backup and storing the backup data in physically different storage system. For instance, data of a site that is currently in use (hereinafter referred to as currently-used site) is transferred to a storage system on a site located in a geographically remote place (hereinafter referred to as remote site) and the data is updated so that the backup data on the remote site can be used to avoid losing data of the currently-used site over calamities such as earthquake in case the effectiveness of the currently-used site is impaired.
- currently-used site data of a site that is currently in use
- remote site a storage system on a site located in a geographically remote place
- Such data backup systems known to this point are divided into synchronous backup systems (EP 0671686 A1) with which a data update on a remote site is synchronous with a data update on a currently-used site and asynchronous backup systems (EP 0672985 A1) with which a data update on a currently-used site is followed by a data update on a remote site.
- An object of the present invention provides a technology of crosschecking that data is backed up correctly between plural sites.
- data transmitted from a site is backed up on a first backup site and a second backup site.
- the first backup site stores the data received from the sender site and transfers the stored data to the second backup site.
- the second backup site stores the data received from the first backup site and transfers the stored data to the sender site.
- the sender site crosschecks the data returned from the second backup site against the data transmitted to the first backup site and, when the two do not match, transmits the data to be backed up to the first backup site once again.
- FIG. 1 is a block diagram showing the overall structure of a system.
- FIG. 2 is a block diagram showing an example of a currently-used site.
- FIG. 3 is an explanatory diagram showing a data flow for data backup between three geographically different sites.
- FIG. 4 is a block diagram showing software configurations of a currently-used site, a proximal site, and a remote site.
- FIG. 5 is an explanatory diagram showing an example of a role definition table.
- FIG. 6 is an explanatory diagram showing a flow of processing of a role definition unit.
- FIG. 7 is a flow chart showing an example of processing performed in a backup site.
- FIG. 8 is a flow chart showing a data flow between sites.
- FIG. 9 is an explanatory diagram showing an example of a management list.
- FIG. 10 is an explanatory diagram showing an example of data to be transferred.
- FIG. 11 is a time chart showing timings of snapshot and writing.
- FIG. 12 is a flow chart showing processing of creates a snapshot.
- FIG. 13 is a flow chart showing an example of Write request processing.
- FIG. 14 is a flow chart showing an example of data crosscheck processing.
- FIG. 15 is a flow chart showing an example of timeout monitoring processing.
- FIG. 16 is an explanatory diagram of a modification example showing a data flow for crosscheck processing in a backup site.
- FIGS. 1 to 3 are block diagrams showing the overall structure of a system to which the present invention is applied.
- FIG. 1 is a block diagram showing the structure of a certain site.
- FIG. 2 is a block diagram showing the relation between a server and a storage system of FIG. 1 .
- FIG. 3 shows an example in which a currently-used site 1 , a proximal site 2 , and a remote site 3 are located in three geographically different places and data of the currently-used site 1 is backed up to the proximal site 2 and the remote site 3 .
- FIG. 1 is a block diagram showing an example of the currently-used site 1 of FIG. 3 .
- the currently-used site 1 of FIG. 3 has an intra network composed of a backbone LAN (Local Area Network) 11 A and an SAN (Storage Area Network) 11 B.
- the backbone LAN 11 A is connected to an external network (omitted from the drawing) such as Internet and WAN through a not-shown gateway (e.g., router).
- Various servers 10 A to 10 F are connected to the backbone LAN 11 A to process and accumulate information upon request from application clients (client computers) 5 A, 5 B and 5 C, which are also connected to the backbone LAN 11 A.
- the various servers 10 A to 10 F are connected to storage systems in a manner described below.
- Application servers 10 A and 10 B are connected via the SAN 11 B to storage systems 12 A and 12 B, so that the serves 10 A and 10 B can read and write data in the storage systems 12 A and 12 B.
- An NAS server 10 C is connected via the SAN 11 B to the storage systems 12 A and 12 B, so that the NAS server 10 C can read and write data in the storage systems 12 A and 12 B upon request from the application clients 5 A to 5 C.
- An NAS server 10 D is connected to a storage system 12 D, so that the NAS server 10 D can read and write data in the storage system 12 D upon request from the application clients 5 A to 5 C.
- File servers 10 E and 10 F are locally connected to storage systems 12 E and 12 F, respectively.
- the file server 10 E reads and writes data in the storage system 12 E upon request from the application clients 5 A to 5 C.
- the file server 10 F reads and writes data in the storage system 12 F upon request from the application clients 5 A to 5 C.
- the servers 10 A to 10 F use software, which is described later, to back up data in the storage systems 12 A to 12 F to the proximal site 2 and the remote site 3 shown in FIG. 3 .
- the proximal site 2 and the remote site 3 of FIG. 3 can have the structure shown in FIG. 1 .
- FIG. 2 is a detailed block diagram showing the relation between the application server 10 A and the storage system 12 A which constitute the currently-used site 1 .
- the application server 10 A has interfaces (referred to as I/F in the drawings) connected to a CPU, a memory, an external network, and an intra network 11 A.
- the storage system 12 A has a control unit 121 which includes an interface connected to a CPU, a memory, a cache memory (data cache), and an intra network 11 B, and an interface connected to disk drives 120 .
- the application server 10 A also has a display system and an input system which are not shown in the drawing.
- the application server 10 A receives a request from a client, which is described later, or the like, the application server 10 A reads or writes data in the SAN storage system 12 A and, when a data update takes place, transfers data to the proximal site 2 and the remote site 3 for backup as will be described below.
- the application server 10 A may have local disk drives as the file servers 10 E and 10 F of FIG. 1 have.
- the application server 10 A and the storage system 12 A of FIGS. 1 and 2 are provided in each of the sites shown in FIG. 3 to exchange data among the sites for backup. It is assumed for a simpler explanation that the application server 10 A, the SAN 11 B, and the storage system 12 A are provided in each of the currently-used site 1 , the proximal site 2 , and the remote site 3 shown in FIG. 3 and that a backup system is run on the application server 10 A of each site.
- the application server 10 A and the storage system 12 A which are connected to each other via the SAN 11 B in FIGS. 1 and 2 , may be connected through a LAN or an original network instead of the SAN 11 B.
- the intra network 11 A which is a LAN in FIG. 1 , may be composed of an IP network.
- FIG. 3 is an explanatory diagram showing a data flow for data backup between three geographically different sites.
- data writing in the storage systems 12 A of the currently-used site 1 is followed by transfer (copying) of the written data to the remote site 3 (S 2 in the drawing).
- the remote site 3 writes the data received from the currently-used site 1 in a storage system (for example, the storage system 12 A of FIG. 1 ) and then transfers (copies) the written data to the proximal site 2 (S 3 in the drawing).
- the proximal site 2 writes the data received from the remote site 3 in a storage system (for example, the storage system 12 A of FIG. 1 ) and then transfers (copies) the written data to the currently-used site 1 (S 4 in the drawing).
- the currently-used site 1 crosschecks the data received from the proximal site 2 against the data transmitted to the remote site 3 in step S 2 to find out whether the data written in the remote site 3 and the proximal site 2 is correct or not (S 5 in the drawing). When it is found as a result of the crosscheck that the written data is not correct, the currently-used site 1 transmits data to be backed up to the remote site 3 once more.
- a site serving as a sender transmits data to be backed up to sites to which the data is backed up (the proximal site 2 and the remote site 3 ), data written to the backup destination sites is transferred to the sender site for data looping and, as the data looping is completed, the data transmitted from the sender and the data that is backed up last are compared to each other for crosscheck.
- the present invention makes backup destination sites daisy-chained from one site that serves as a sender, thereby allowing the sender site to take a backup at minimum load irrespective of the number of backup destination sites.
- a site is composed of a data processing devices which includes a computer such as a server, a storage system for storing data, and a network for connecting the computer and the storage system to each other, or for interconnecting computers, or for interconnecting storage systems.
- the currently-used site 1 is a site that has data to be backed up, which is stored, for example, by the application server 10 A in the storage system 12 A connected to the application server 10 A via the intra network (SAN or LAN) 11 B.
- SAN or LAN intra network
- FIG. 4 Components in FIG. 4 are roughly divided into two: a software group 100 of the currently-used site 1 which serves as a sender of data to be backed up and a software group 200 of the proximal site 2 and the remote site 3 to which the data from the currently-used site 1 is backed up.
- the software groups 100 and 200 are executed by the application server 10 A shown in FIG. 1 .
- the structure of the software group 100 is described first.
- the software group 100 of the currently-used site 1 which transmits written data and crosschecks data returned from a backup destination site, is composed of six modules: a role definition module 101 for determining the role of each site, a data management module 102 for managing data written in the storage system 12 A and data to be transmitted, a data write module 103 for writing data in the storage system 12 A, data transfer module 104 for transmitting data written in the storage system 12 A to a backup destination, a data receiving module 105 for receiving data returned from a backup destination by looping, and a crosscheck module 106 for comparing the data transmitted by the data transfer module 104 and the data received by the data receiving module 105 with each other for crosscheck.
- servers of the proximal site 2 and the remote site 3 have the same structure as the application server 10 A of FIG. 1 .
- the only difference between the server of the proximal site 2 and the server of the remote site 3 is reception and transmission destination determined by role definition, which will be described later, and the two servers carry out identical processing.
- the software group 200 is composed of a data receiving module 201 for receiving backup data and role definition transmitted, a role definition analyzing module 202 for analyzing the received role definition and ruling the server operation based on the role definition, a data write module 203 for writing the received backup data in the storage system 12 A, and a transfer module 204 for transmitting the written data to the next backup destination or to the sender (currently-used site 1 ).
- the role definition module 101 run on the application server 10 A of the currently-used site 1 , which is the sender, determines in what order backup data is to be transmitted from the currently-used site 1 as the sender, and what processing is to be performed in the respective sites.
- Such definition is set as a table shown in FIG. 5 , for example.
- the remote site 3 is defined as the transmission (transfer) destination of backup data of the currently-used site 1 serving as the sender
- the proximal site 2 is defined as the transfer destination of data of the remote site 3
- the currently-used site 1 is defined as the transfer destination of data of the proximal site 2 .
- the table of FIG. 5 also instructs about processing on data received by the respective sites.
- transferring (transmitting) data and crosschecking received data against transmitted data are defined as processing to be made.
- writing the received backup data in the storage system and transferring the written data are defined as processing to be made.
- backup data received by the proximal site 2 is written in the storage system and the written data is transferred according to the definition.
- the written data is transferred to the remote site 3 which is the transfer destination allotted for the currently-used site 1 as shown in FIG. 3 .
- the remote site 3 writes the data received from the currently-used site 1 in the storage system and transfers the written data to the proximal site 2 .
- the proximal site 2 writes the data received from the remote site 3 in the storage system and transfers the written data to the currently-used site 1 .
- the currently-used site 1 compares the data received from the proximal site 2 with the data transmitted to crosscheck whether the two matches or not (in other words, whether data looped through the sites is correct or not). If it is found as a result of the crosscheck that the two do not match, given processing such as retransmission of backup data is executed as will be described below.
- Processing defined by the role definition module 101 is composed as shown in FIG. 6 .
- the application server 10 A of the currently-used site 1 runs the role definition module 101 first to read the role definition of FIG. 5 (S 10 ) and to transmit to the proximal site 2 and the remote site 3 their respective processing after reception and data transfer destinations (S 11 ).
- the currently-used site 1 transmits to the proximal site 2 role definition (role sharing information) which defines write and transfer of data received as processing after data reception and which defines the currently-used site 1 as the transfer destination.
- the currently-used site 1 transmits to the remote site 3 role definition (role sharing information) which defines writing and transfer of data received as processing after data reception and which defines the proximal site 2 as the transfer destination.
- Described next referring to a flow chart of FIG. 7 are details of the software group 200 executed on the servers of the proximal site 2 and the remote site 3 .
- FIG. 7 shows the data receiving module 201 , the role analyzing module 202 , the data write module 203 , and the data transfer module 204 which are shown in FIG. 4 .
- step S 20 data from the sender is waited for and reception of the data advances the process to step S 21 , where the data received is identified for branch processing according to data type.
- step S 21 when the received data is role definition (role sharing information), the process proceeds to step S 22 whereas processing of step S 23 is chosen when the received data is transfer data (backup data).
- step S 22 a site to which the data is to be transferred next and what processing is to be made on the received data are set based on the received data which is role definition. For instance, in the remote site 3 , the role definition (the table of FIG. 5 ) transmitted from the currently-used site 1 sets the proximal site 2 as the data transfer destination and sets write and transfer as processing after reception. Thereafter, the process is returned to step S 20 to wait for the next data.
- the role definition the table of FIG. 5
- step S 23 the received data, which has been determined as transfer data (backup) in step S 21 , is written in the storage system.
- the written data is transmitted to the transfer destination set in step S 22 .
- the proximal site 2 and the remote site 3 set their transfer destinations and contents of processing to be made on received data based on the role definition which has been received from the currently-used site 1 .
- writing data in the storage system 12 A of the currently-used site 1 starts backup processing in each site following a procedure shown in FIG. 8 .
- the point at which a write instruction is transmitted from the application server 10 A and received by the control module 121 of the storage system 12 A is deemed as completion of data writing.
- a snapshot is created after data is written in the storage system 12 A to create data management information, which will be described later. Then the data is transferred to the remote site 3 defined as the transfer destination as shown in FIG. 8 .
- the snapshot created is for a file, block, or volume written in the storage system 12 A.
- a snapshot of all data is created and transferred.
- data that is updated alone is transferred. This means that, upon start of backup, a snapshot of all data is created and every data is transferred to other sites whereas a snapshot is created for a differential of data and the data differential is transferred to other sites for backup from the next time on.
- FIG. 8 is a diagram showing a data flow between sites.
- synchronization request processing for creating a snapshot of data is carried out in step S 31 when the backup system (software group 100 ) is started or otherwise initialized and when a request is made to create a snapshot.
- the synchronization processing includes, as described later, creating a snapshot that indicates the physical location (the location in the storage system 12 A) of data to be backed up, creating identification information (for example, information unique to data such as time stamp and address), and holding the created data as management information for crosscheck of written data after the data is backed up on other sites (processing carried out by the data management module 102 of FIG. 4 ).
- the application server 10 A transfers the written data and the management information attached thereto to the remote site 3 , which is the transfer destination determined by the role definition (S 32 , the data transfer module 104 of FIG. 4 ).
- the server of the remote site 3 processes the received data as the role definition dictated following the flow chart of FIG. 7 .
- the server of the remote site 3 writes the received data in the storage system to execute backup (S 34 ).
- the server transmits the data written in the storage system to the proximal site 2 , which is the transfer destination determined by the role definition (S 35 ).
- the data transmitted from the remote site 3 is received by the server of the proximal site 2 (S 36 ).
- the server of the proximal site 2 processes the received data as the role definition dictates following the flow chart of FIG. 7 .
- the server of the proximal site 2 After receiving the data (S 36 ), the server of the proximal site 2 writes the received data in the storage system to execute backup (S 37 ). Then the server transmits the data written in the storage system to the currently-used site 1 , which is the transfer destination determined by the role definition (S 38 ).
- the data transmitted from the proximal site 2 is received by the application server 10 A of the currently-used site 1 (S 39 ).
- the application server 10 A of the currently-used site 1 processes the received data as the role definition dictated with the use of the software group 100 of FIG. 4 .
- the application server 10 A compares the management information of the received data with the data management information kept in step S 31 to crosscheck whether or not the data transmitted from the currently-used site 1 matches the data returned after backup to two sites. (S 40 , the data crosscheck module 106 of FIG. 4 ).
- step S 42 When it is found as a result of the crosscheck that the two match, the data management information is updated in step S 42 whereas, when the two do not match, the process returns to step S 32 to transmit anew the data that has failed the crosscheck (S 41 ). After the data management information is updated in step S 42 , backup processing for next data is started.
- data written in the currently-used site 1 is backed up to the proximal site 2 and the remote site 3 separately after management information unique to the data is attached to the data, so that the management information of the transmission data kept by the sender is compared with management information contained in data which has been looped through the sites and which has been received from the proximal site 2 . In this way, whether the data is correctly backed up or not can readily be crosschecked.
- the load required for crosscheck is not influenced by the number of sites to which data is backed up since, in the case of crosschecking data on the currently-used site 1 , which is the sender of backup data, the currently-used site 1 only has to compare management information of data received from a site where the data is backed up last with management information of the data transmitted which has been kept in the currently-used site 1 irrespective of the number of backup sites.
- steps S 31 and S 32 and the processing from steps S 39 to S 42 are carried out by the data management module 102 to the data crosscheck module 106 of the software group 100 of FIG. 4 which is executed on the application server 10 A of the data sender.
- FIG. 9 An example of data management information is shown in FIG. 9 .
- the data management information uses a time point Ti at which a snapshot is created and which serves as time stamp.
- the time stamp makes the index of the management information.
- a management list 40 of FIG. 9 contains the length and value of data, additional information 44 (transmission time point 42 and retransmission counter 43 ), and data address 41 .
- Data management information is added to the management list 40 for each time stamp Ti, in other words, whenever data is written in the currently-used site 1 and a snapshot is created.
- columns in the drawing each of which is composed of the address 41 , the additional information 44 , and data 50 are sequentially created with one column as one entry (record). Plural entries are managed by their time stamp Ti.
- Data transfer processing is as shown in FIG. 10 .
- the management information (the time stamp Ti, the address 41 , and the additional information 44 ) is added in a preset data format to the data 50 and the data is then transmitted to the remote site 3 .
- FIG. 10 shows a data format example in which the time stamp Ti constitutes a section from the header (0 byte) of data to be transferred to 8 bits, the address 41 constitutes a section up to 12 bits, the additional information 44 constitutes a section up to 16 bits, and the data 50 including the data length is stored in a section from 17 bits and on.
- the time stamp Ti is composed of, for example, year, month, date, time, minute, second + 1/100 second. If a snapshot is created on Oct. 29, 2003 at 9:53:2:78, the time stamp is expressed as “2003102909530278”.
- the address 41 of the data 50 is expressed by the logical location in a file system or the physical location in the storage system 12 A. For instance, when the address 41 is expressed by logical location, “file_a10” is expressed as “/nas/data/dir_a/file_a10”. For the data value, in the case of text data, “NAS backup method examples” and the like are stored.
- the retransmission counter 43 indicates the number of times data is re-transferred due to non-match crosscheck results.
- the additional information 44 may include a counter indicating the number of timeout (in which transferred data fails to return in a given period of time), a counter indicating the number of non-match crosscheck results, or the like.
- the additional information 44 includes the transmission time point 42 in the example shown here, the transmission time point 42 may be omitted if data to be transferred is managed by the time stamp Ti.
- a group associated with the time stamp Ti may include data written in the currently-used site 1 at different timing. For instance, a first data block (e.g., block 1 ) is written in the storage system 12 A and then is registered to the management list 40 in preparation of transfer. In registering the block 1 to the list, a time stamp T 1 at which a snapshot is created is stamped on the block 1 . Then a second data block (block 2 ) is written in the storage system 12 A and, upon transfer, is registered to the management list 40 . If at this point the snapshot created at the time stamp T 1 includes the block 1 and the block 2 , the block 1 and the block 2 constitute a group of the management list 40 which has the same time stamp Ti as the index.
- the snapshot and the management list 40 which are created by the above snapshot creating processing and data management information creating processing are stored in given area of the memory of the application server 10 A or the storage system 12 A shown in FIG. 1 .
- the snapshots and the entries in the management list 40 are deleted when crosscheck results match as described later.
- FIG. 11 is a time chart showing an event where this backup system is put into operation.
- initialization is performed first.
- steps subsequent to step S 10 of FIG. 6 are executed to distribute role sharing information throughout sites to which data is to be backed up. Thereafter, a snapshot of all data is created by processing described later and by the data synchronization request of FIG. 8 to synchronize data of the currently-used site 1 with data of the proximal site 2 and the remote site 3 to which data is to be backed up.
- the application server 10 A After that, receiving a write request, the application server 10 A stores data in the storage system 12 A before creating a snapshot of data updated at the time stamp T 1 .
- differential data alone is transferred for data synchronization among the sites in creating a snapshot from the time stamp T 1 on.
- a write request is received to the currently-used site 1 , it only has to manage differential data and the load of processing the write request can be reduced.
- step S 55 The first step in FIG. 12 is step S 55 in which whether the snapshot processing type is initialization or not is determined. In the case of initialization, the process proceeds to step S 56 . After completion of initialization, the snapshot processing type is determined as normal snapshot creating processing and the process proceeds to step S 60 .
- target data is initialized so that “no snapshot of the target data has been created yet”. This state is determined at the time of creating a snapshot.
- the target data can be file-unit data, volume-unit data, or the like as described above.
- step S 56 ‘i’ in the first time stamp Ti is set to 0 and a snapshot is created as the time stamp T 0 .
- step S 57 data management information is created for all data.
- step S 58 area for the management list 40 and for a snapshot which are to be used at the next time stamp T 1 are created and initialized.
- step S 59 the data created for the time stamp T 0 in step S 57 is transferred to the remote site 3 .
- current time is written as the transmission time point 42 in the management list 40 and the value of the retransmission counter is initialized.
- step S 60 for the second and subsequent snapshot createing processing a time stamp T(i) is created and the latest snapshot time is created as well in order to take a backup after a write request is received to the application server 10 A as shown in FIG. 1 .
- step S 61 area for the management list 40 and for a snapshot which are to be used at the next time stamp T(i+1) are created and initialized.
- a snapshot of updated data is created by write request processing, which will be described later.
- step S 62 the data created for the time stamp T(i) in step S 60 is transferred to the remote site 3 .
- current time is written as the transmission time point 42 in the management list 40 .
- step S 65 When the application server 10 A receives the write request, address of this data and management information containing the data are created in step S 65 . In other words, an entry of management information having the next time stamp T(i) as the index is added to the management list 40 .
- step S 66 an instruction is issued to write this data to the storage system 12 A.
- a write request after completion of initialization starts creation of management information of data to be written which is followed by creating of the time stamp T(i) and a snapshot as well, and the data written in the currently-used site 1 is transmitted to the remote site 3 based on role definition (role sharing information).
- management information of T(i+1) is created by the write processing ( FIG. 13 )
- the write processing can be made lighter by using the snapshot creating processing to create area since creating data management information is approximately equivalent with creating a snapshot.
- step S 65 original data (transfer data) to be compared is stored in data management information and relevant data is taken out of the data management information for comparison in the crosscheck processing.
- Data contents at the time stamp Ti are therefore kept in data management information so that data contents of the currently-used site 1 at the time stamp Ti can be synchronized with other sites and so that no problem is raised from writing data of the same address at a time stamp subsequent to the time stamp Ti over the data at the time stamp Ti.
- step S 70 the time stamp Ti and the address 41 are extracted from management information of data transmitted from the proximal site 2 and received by the application server 10 A as shown in FIG. 10 . Then the management list 40 is searched with the time stamp Ti as the index to extract data that has matching address 41 from the relevant entry stamped with the time stamp Ti.
- step S 71 the received data is compared with the data 50 of the management list 40 to determine whether the two match or not.
- the two may be crosschecked for bit by bit, or checksum may be created upon transmission and compared for crosscheck of the data.
- a part of the received data may be compared with a part of the data 50 for crosscheck. For instance, a section from the header of the data to a given bit number, a section from the tail of the data to a given bit number, a section stretching over a data border for a given number of bits, or the like may be used for crosscheck.
- the data border refers to the border between data blocks, the border between packet data, and the like.
- step S 76 When the received data and the data 50 of the management list 40 coincide with each other, the process proceeds to step S 76 whereas the process proceeds to step S 72 when the two do not match.
- step S 72 where received data which returns after being looped through the sites does not match the data 50 of the management list 40 , the retransmission counter 43 of the management list 40 is read to whether or not the read count of the retransmission counter 43 exceeds a given retransmission count.
- step S 74 to notify a not-shown display device or the like of the application server 10 A of a retransmission error (notification of the fact that the given retransmission count is exceeded). In this way, an administrator of the application server 10 A or the like can be notified of several malfunctions that have taken place in the process of looping backup data from the currently-used site 1 through the remote site 3 and the proximal site 2 .
- step S 73 When the given retransmission count is not exceeded but there is a retransmission error, the process proceeds to step S 73 to warn a not-shown console or the like of the application server 10 A of a data crosscheck error.
- step S 75 the count of the retransmission counter 43 of the management list 40 is incremented and the transmission time stamp is updated to transmit the original data 50 again.
- steps S 72 to S 75 corresponds to the processing of steps S 39 to S 41 and S 32 shown in FIG. 8 .
- step S 76 where the data received from the proximal site 2 is determined in step S 71 as matching the data 50 of the management list 40 , the transmission time point 42 is extracted from the management information of the data 50 and is compared with the time stamp at which the data is received in step S 70 to determine whether or not the arrival time (reception time point—transmission time point 42 ) exceeds a preset standard time.
- step S 77 to warn a not-shown display device or the like of the application server 10 A of lowered performance of a backup site or an external network.
- the warning enables an administrator of the application server 10 A or the like to surmise that there is an increase in traffic of the external network or the performance of the server is, for example.
- step S 78 an entry for which the received data and the data 50 of the management list 40 coincide with each other is deleted.
- step S 79 it is determined whether every entry with the time stamp Ti serving as the index of the data 50 has been deleted or not.
- the process proceeds to step S 80 to delete the snapshot that corresponds to the time stamp Ti and to delete index of the time stamp Ti from the management list 40 , thereby completing the processing.
- the processing of steps S 78 to S 80 corresponds to the data management information update processing of step S 42 shown in FIG. 8 .
- the data crosscheck processing data which returns from being looped from the currently-used site 1 through the remote site 3 and the proximal site 2 is compared to the data 50 of the management list 40 which is created prior to transmission to crosscheck, upon the return of the data, whether or not a backup is correctly taken on each backup site. Since the application server 10 A only has to crosscheck data from the site where a backup takes place last irrespective of the number of backup sites, an increase in number of backup sites does not lead to an increase in load of the application server 10 A. Therefore, the crosscheck processing merely requires very small load even in a backup system that has a large number of backup sites.
- FIG. 15 is a flow chart showing an example of timeout monitoring processing which is executed at regular time intervals (for instance, an interval of several hundreds msec.) on the application server 10 A of the currently-used site 1 .
- step S 91 an entry with the transmission time point 42 is taken out of the management list 40 to compute a time difference between current time and the transmission time point 42 .
- step S 92 it is determined whether the created time difference exceeds a preset timeout determining value (a fixed time period) or not.
- step S 93 the count of the retransmission counter 43 is read to determine whether or not the count of the retransmission counter 43 is equal to or lower than the preset retransmission count.
- step S 95 When the count of the retransmission counter 43 is equal to or lower than the given retransmission count, the process proceeds to step S 95 to warn a not-shown display device or the like of the application server 10 A that transmission timeout has taken place. Then the process proceeds to step S 96 to transmit the data 50 again. Upon retransmission of the data 50 , the count of the retransmission counter 43 is incremented and the transmission time stamp is updated in the relevant entry.
- step S 94 to notify a not-shown display device or the like of the application server 10 A that a transmission timeout error has taken place and that the retransmission count has exceeded the regulated count.
- steps S 91 to S 96 is performed on the first through last entries of the management list 40 in order.
- the above processing makes it possible to detect with precision that return of the data transmitted is inhibited by failures in the proximal site 2 and the remote site 3 to which data is to be backed up and in an external network, and to notify an administrator of the application server 10 A or the like that the crosscheck processing cannot be carried out.
- the currently-used site 1 serving as a sender of backup data transmits the backup data to a single site and receives data returned from being backed up to one or more sites.
- backup and crosscheck of backup data are achieved at very small processing load and data can correctly be backed up between plural sites while simplifying the management procedure of data update.
- timeout monitoring processing is performed at regular time intervals and a warning is given when data cannot be received from the last backup site in the loop, thereby prompting an administrator of the application server 10 A or the like to take an appropriate action.
- the error alarm (notification) issued in step S 94 of FIG. 15 may be replaced by processing that stops the backup system since in step S 94 the retransmission count has exceeded the regulated count and a transmission timeout error has taken place which means that a backup site or an external network may have stopped operating.
- the backup processing can be carried out by the NAS servers 10 C and 10 D and file servers 10 E and 10 F shown in FIG. 1 instead of the application server 10 A.
- the NAS servers 10 C and 10 D may be replaced by NAS heads.
- Shown in the embodiment described above is an example of creating a snapshot.
- a time point at which data is written in the storage system 12 A may be used as the time stamp Ti.
- a time point at which management information is created may be used as the time stamp Ti to manage the management list 40 .
- the present invention is not limited to the use of the time stamp Ti and synchronization may be achieved in a manner that makes a backup site catch up with data contents of the currently-used site 1 .
- synchronization processing started upon a synchronization request ( FIG. 8 ) lasts until data inconsistency between the sites is solved and the backup site only has to make its data contents match the latest data contents of the currently-used site 1 instead of synchronization based on a snapshot which is data contents at a specific time point.
- the time stamp and the data 50 are thus made unnecessary and the information may be managed by the address 41 .
- the substance of data is not contained in data management information and that data stored in the address 41 that is specified by the data management information is created upon crosscheck.
- the path of creating a snapshot which is shown in FIG. 12 is unnecessary and, in step S 65 of FIG. 13 , the transmission time point 42 of the data management information is reset as data of the same address is written.
- Backup data is looped to the sender for crosscheck in the embodiment described above.
- a sender of backup data and a site which performs crosscheck may be separate sites as shown in FIG. 16 .
- the currently-used site 1 transfers backup data to the remote site 3 and at the same time transfers management information (the management list 40 ) to the proximal site 2 , which is the last backup site in the loop.
- the proximal site 2 receives data from the remote site 3 , the proximal site 2 writes the data in the storage system and then executes processing similar to the one in the above embodiment to crosscheck the written data against the management list 40 received from the currently-used site 1 .
- data crosscheck can be performed by a sender site or any one of the backup sites.
- the last backup site in the loop performs the crosscheck since this way the data consistency can be ensured.
- the role of the respective sites can be changed at any time according to the role definition shown in FIG. 5 . It is therefore possible to change the flow of backup loop and the site that performs crosscheck arbitrarily by merely changing the processing after reception of data and the data transfer destination in the role definition as long as the software group 100 is set in each site.
- the currently-used site 1 and the proximal site 2 are connected through an external network. Instead, the same SAN 11 B may be used to connect the storage system of the currently-used site 1 and the storage system of the proximal site 2 .
- the backup system (the software groups 100 and 200 ) may be run on the application server 10 A as in the above embodiment or may be run by the control module 121 of the storage system 12 A.
- the latter makes it possible to reduce the load of the application server 10 A even more and, in addition, the storage system 12 A can improve the overall performance of the backup system by communicating with another storage system 12 A via the same SAN 11 B at high speed.
- the servers of the respective sites in the above embodiment are connected to one another through an external network.
- the control module 121 of the storage system 12 A on one site may be connected to the control module 121 of another site through an external network, so that the software group 100 or 200 of the above embodiment is executed by each control module 121 .
- the storage system 12 A in the above example has disk drives, which may be replaced by tape devices or optical disk drives.
- the address 41 as management information may be the physical storage position in the storage system 12 A instead of the file position employed in the above embodiment.
- the currently-used site 1 and other sites usually have to have an identical physical configuration and therefore the same data is stored at the same address in the respective sites.
- the address is logical information, the sites do not need to have an identical physical configuration.
Abstract
Description
Claims (21)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2003-419162 | 2003-12-17 | ||
JP2003419162A JP3977803B2 (en) | 2003-12-17 | 2003-12-17 | Backup system, method and program |
Publications (2)
Publication Number | Publication Date |
---|---|
US20050138310A1 US20050138310A1 (en) | 2005-06-23 |
US7047376B2 true US7047376B2 (en) | 2006-05-16 |
Family
ID=34675199
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/874,247 Active 2024-12-16 US7047376B2 (en) | 2003-12-17 | 2004-06-24 | Backup system and method and program |
Country Status (2)
Country | Link |
---|---|
US (1) | US7047376B2 (en) |
JP (1) | JP3977803B2 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080168303A1 (en) * | 2007-01-04 | 2008-07-10 | International Business Machines Corporation | Storage management in cascaded replication of data |
US20140082414A1 (en) * | 2012-09-18 | 2014-03-20 | Dan Olster | Data Re-Protection in a Distributed Replicated Data Storage System |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP4812513B2 (en) * | 2006-05-23 | 2011-11-09 | 株式会社エヌ・ティ・ティ・ドコモ | Arrival confirmation type broadcast distribution method, mobile terminal, and broadcast distribution server |
US8924352B1 (en) * | 2007-03-31 | 2014-12-30 | Emc Corporation | Automated priority backup and archive |
WO2009013833A1 (en) * | 2007-07-26 | 2009-01-29 | Fujitsu Limited | Recording control device, recording device, recording system, and recording control program |
US8583601B1 (en) | 2007-09-28 | 2013-11-12 | Emc Corporation | Imminent failure backup |
JP2010033168A (en) * | 2008-07-25 | 2010-02-12 | Makita Corp | Charging system, battery, battery charger, and program |
US9552215B2 (en) | 2011-03-08 | 2017-01-24 | Rackspace Us, Inc. | Method and system for transferring a virtual machine |
US9027024B2 (en) | 2012-05-09 | 2015-05-05 | Rackspace Us, Inc. | Market-based virtual machine allocation |
US10812434B2 (en) * | 2017-03-23 | 2020-10-20 | Blackberry Limited | Apparatus and method for maintaining message databases in eventual consistency distributed database systems |
CN112204934B (en) * | 2018-05-21 | 2023-10-17 | 三菱电机株式会社 | Communication device, communication method, and computer-readable recording medium |
US10901781B2 (en) | 2018-09-13 | 2021-01-26 | Cisco Technology, Inc. | System and method for migrating a live stateful container |
Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP0671686A1 (en) | 1994-02-22 | 1995-09-13 | International Business Machines Corporation | Synchronous remote data duplexing |
EP0672985A1 (en) | 1994-02-22 | 1995-09-20 | International Business Machines Corporation | Asynchronous remote data duplexing |
JPH09330262A (en) | 1996-06-11 | 1997-12-22 | Toshiba Corp | Backup system |
US5802554A (en) * | 1995-02-28 | 1998-09-01 | Panasonic Technologies Inc. | Method and system for reducing memory access latency by providing fine grain direct access to flash memory concurrent with a block transfer therefrom |
US6148383A (en) * | 1998-07-09 | 2000-11-14 | International Business Machines Corporation | Storage system employing universal timer for peer-to-peer asynchronous maintenance of consistent mirrored storage |
US6374266B1 (en) * | 1998-07-28 | 2002-04-16 | Ralph Shnelvar | Method and apparatus for storing information in a data processing system |
US6397292B1 (en) * | 1999-08-19 | 2002-05-28 | Emc Corporation | Asymmetrical striping of mirrored storage device arrays and concurrent access to even tracks in the first array and odd tracks in the second array to improve data access performance |
US20020065998A1 (en) * | 2000-11-30 | 2002-05-30 | International Business Machines Corporation | NUMA system with redundant main memory architecture |
US6601187B1 (en) * | 2000-03-31 | 2003-07-29 | Hewlett-Packard Development Company, L. P. | System for data replication using redundant pairs of storage controllers, fibre channel fabrics and links therebetween |
US20030204609A1 (en) | 2002-04-30 | 2003-10-30 | Anderson Andrew V. | Method and apparatus for bandwidth-efficient and storage-efficient backups |
US6643750B2 (en) | 2001-02-28 | 2003-11-04 | Hitachi, Ltd. | Storage apparatus system and method of data backup |
US20030220920A1 (en) | 2002-05-24 | 2003-11-27 | Mentor Graphics Corporation | Matching database fields in an electronic design automation environment |
US6662281B2 (en) * | 2001-01-31 | 2003-12-09 | Hewlett-Packard Development Company, L.P. | Redundant backup device |
US20040019751A1 (en) * | 2002-07-23 | 2004-01-29 | Sharma Debendra Das | System and method for memory migration in distributed-memory multi-processor systems |
US20040044842A1 (en) | 2002-08-30 | 2004-03-04 | Alacritus, Inc. | System and method for exporting a virtual tape |
US20040044863A1 (en) | 2002-08-30 | 2004-03-04 | Alacritus, Inc. | Method of importing data from a physical data storage device into a virtual tape library |
US20040174894A1 (en) * | 1998-09-22 | 2004-09-09 | Hughes Electronics Corporation | System and method for transmitting data in frame format using an R-Rake retransmission technique with blind identification of data frames |
US6889297B2 (en) * | 2001-03-23 | 2005-05-03 | Sun Microsystems, Inc. | Methods and systems for eliminating data redundancies |
US20050097289A1 (en) * | 2003-11-03 | 2005-05-05 | Burton David A. | Speculative data mirroring apparatus method and system |
-
2003
- 2003-12-17 JP JP2003419162A patent/JP3977803B2/en not_active Expired - Lifetime
-
2004
- 2004-06-24 US US10/874,247 patent/US7047376B2/en active Active
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP0671686A1 (en) | 1994-02-22 | 1995-09-13 | International Business Machines Corporation | Synchronous remote data duplexing |
EP0672985A1 (en) | 1994-02-22 | 1995-09-20 | International Business Machines Corporation | Asynchronous remote data duplexing |
US5802554A (en) * | 1995-02-28 | 1998-09-01 | Panasonic Technologies Inc. | Method and system for reducing memory access latency by providing fine grain direct access to flash memory concurrent with a block transfer therefrom |
JPH09330262A (en) | 1996-06-11 | 1997-12-22 | Toshiba Corp | Backup system |
US6148383A (en) * | 1998-07-09 | 2000-11-14 | International Business Machines Corporation | Storage system employing universal timer for peer-to-peer asynchronous maintenance of consistent mirrored storage |
US6374266B1 (en) * | 1998-07-28 | 2002-04-16 | Ralph Shnelvar | Method and apparatus for storing information in a data processing system |
US20040174894A1 (en) * | 1998-09-22 | 2004-09-09 | Hughes Electronics Corporation | System and method for transmitting data in frame format using an R-Rake retransmission technique with blind identification of data frames |
US6397292B1 (en) * | 1999-08-19 | 2002-05-28 | Emc Corporation | Asymmetrical striping of mirrored storage device arrays and concurrent access to even tracks in the first array and odd tracks in the second array to improve data access performance |
US6601187B1 (en) * | 2000-03-31 | 2003-07-29 | Hewlett-Packard Development Company, L. P. | System for data replication using redundant pairs of storage controllers, fibre channel fabrics and links therebetween |
US20020065998A1 (en) * | 2000-11-30 | 2002-05-30 | International Business Machines Corporation | NUMA system with redundant main memory architecture |
US6662281B2 (en) * | 2001-01-31 | 2003-12-09 | Hewlett-Packard Development Company, L.P. | Redundant backup device |
US6643750B2 (en) | 2001-02-28 | 2003-11-04 | Hitachi, Ltd. | Storage apparatus system and method of data backup |
US6889297B2 (en) * | 2001-03-23 | 2005-05-03 | Sun Microsystems, Inc. | Methods and systems for eliminating data redundancies |
US20030204609A1 (en) | 2002-04-30 | 2003-10-30 | Anderson Andrew V. | Method and apparatus for bandwidth-efficient and storage-efficient backups |
US20030220920A1 (en) | 2002-05-24 | 2003-11-27 | Mentor Graphics Corporation | Matching database fields in an electronic design automation environment |
US20040019751A1 (en) * | 2002-07-23 | 2004-01-29 | Sharma Debendra Das | System and method for memory migration in distributed-memory multi-processor systems |
US20040044842A1 (en) | 2002-08-30 | 2004-03-04 | Alacritus, Inc. | System and method for exporting a virtual tape |
US20040044863A1 (en) | 2002-08-30 | 2004-03-04 | Alacritus, Inc. | Method of importing data from a physical data storage device into a virtual tape library |
US20050097289A1 (en) * | 2003-11-03 | 2005-05-05 | Burton David A. | Speculative data mirroring apparatus method and system |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080168303A1 (en) * | 2007-01-04 | 2008-07-10 | International Business Machines Corporation | Storage management in cascaded replication of data |
US7702953B2 (en) * | 2007-01-04 | 2010-04-20 | International Business Machines Corporation | Storage management in cascaded replication of data |
US20140082414A1 (en) * | 2012-09-18 | 2014-03-20 | Dan Olster | Data Re-Protection in a Distributed Replicated Data Storage System |
US8874956B2 (en) * | 2012-09-18 | 2014-10-28 | Datadirect Networks, Inc. | Data re-protection in a distributed replicated data storage system |
Also Published As
Publication number | Publication date |
---|---|
US20050138310A1 (en) | 2005-06-23 |
JP2005182251A (en) | 2005-07-07 |
JP3977803B2 (en) | 2007-09-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6363462B1 (en) | Storage controller providing automatic retention and deletion of synchronous back-up data | |
US7275177B2 (en) | Data recovery with internet protocol replication with or without full resync | |
US7567991B2 (en) | Replication of snapshot using a file system copy differential | |
US5608865A (en) | Stand-in Computer file server providing fast recovery from computer file server failures | |
US8706833B1 (en) | Data storage server having common replication architecture for multiple storage object types | |
US6647473B1 (en) | Kernel-based crash-consistency coordinator | |
US7769722B1 (en) | Replication and restoration of multiple data storage object types in a data network | |
US7383463B2 (en) | Internet protocol based disaster recovery of a server | |
US7577867B2 (en) | Cross tagging to data for consistent recovery | |
US9098455B2 (en) | Systems and methods of event driven recovery management | |
US6745303B2 (en) | Data synchronization of multiple remote storage | |
US9519657B2 (en) | Clustered filesystem with membership version support | |
US8805889B2 (en) | Metadata structures and related locking techniques to improve performance and scalability in a cluster file system | |
US7085819B2 (en) | System and method for distributed network data storage | |
US8601225B2 (en) | Time ordered view of backup data on behalf of a host | |
US7694177B2 (en) | Method and system for resynchronizing data between a primary and mirror data storage system | |
US8285824B2 (en) | Storage system and data replication method that refuses one or more requests for changing the first logical configuration information until the first storage apparatus and second storage apparatus are synchronized | |
CN111124301A (en) | Data consistency storage method and system of object storage device | |
US20060136685A1 (en) | Method and system to maintain data consistency over an internet small computer system interface (iSCSI) network | |
US20050044162A1 (en) | Multi-protocol sharable virtual storage objects | |
US20080243951A1 (en) | Write ordering style asynchronous replication utilizing a loosely-accurate global clock | |
US7047376B2 (en) | Backup system and method and program | |
JP2005267327A (en) | Storage system | |
US7228352B1 (en) | Data access management system in distributed processing system | |
US8566446B2 (en) | Write operation control in storage networks |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: HITACHI LTD, JAPANFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:HORIUCHI, TAKASHI;REEL/FRAME:015724/0408Effective date: 20040611 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:HITACHI, LTD.;REEL/FRAME:030555/0554Effective date: 20121016 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553)Year of fee payment: 12 |
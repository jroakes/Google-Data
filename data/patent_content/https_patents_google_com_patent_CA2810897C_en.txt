CA2810897C - Method and apparatus for feature based video coding - Google Patents
Method and apparatus for feature based video coding Download PDFInfo
- Publication number
- CA2810897C CA2810897C CA2810897A CA2810897A CA2810897C CA 2810897 C CA2810897 C CA 2810897C CA 2810897 A CA2810897 A CA 2810897A CA 2810897 A CA2810897 A CA 2810897A CA 2810897 C CA2810897 C CA 2810897C
- Authority
- CA
- Canada
- Prior art keywords
- sub
- technique
- bands
- band
- video stream
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/30—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using hierarchical techniques, e.g. scalability
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/12—Selection from among a plurality of transforms or standards, e.g. selection between discrete cosine transform [DCT] and sub-band transform or selection between H.263 and H.264
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/119—Adaptive subdivision aspects, e.g. subdivision of a picture into rectangular or non-rectangular coding blocks
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/12—Selection from among a plurality of transforms or standards, e.g. selection between discrete cosine transform [DCT] and sub-band transform or selection between H.263 and H.264
- H04N19/122—Selection of transform size, e.g. 8x8 or 2x4x8 DCT; Selection of sub-band transforms of varying structure or type
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/137—Motion inside a coding unit, e.g. average field, frame or block difference
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/14—Coding unit complexity, e.g. amount of activity or edge presence estimation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/184—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being bits, e.g. of the compressed video stream
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/20—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using video object coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/46—Embedding additional information in the video signal during the compression process
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
- H04N19/619—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding the transform being operated outside the prediction loop
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/63—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using sub-band based transform, e.g. wavelets
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/63—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using sub-band based transform, e.g. wavelets
- H04N19/635—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding using sub-band based transform, e.g. wavelets characterised by filter definition or implementation details
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/649—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding the transform being applied to non rectangular image segments
Abstract
In a video distribution system, a divider (105) to segment an input video stream (302) into partitions for each of a plurality of channels of the video stream is provided. A channel analyzer (306) is coupled to the divider wherein the channel analyzer decomposes the partitions. An encoder (106) is coupled to the channel analyzer to encode the decomposed partitions into an encoded bitstream (208, 210) wherein the encoder receives coding information from at least one of the plurality of channels to be used in encoding the decomposed partitions into the encoded bitstream. A decoder (124) receives the coded bitstream to decode the received bitstream and to reconstruct the input video stream. The decoder uses the coding information to decode the bitstream.
Description
METHOD AND APPARATUS FOR FEATURE BASED VIDEO CODING
[001] Field of the Invention
[001] Field of the Invention
[002] This application relates to coding of video streams and, in particular, relates to dividing the video streams according to the features found in the video stream and then using the appropriate coding method to encode the divided video stream.
Background of the Invention
Background of the Invention
[003] Many video compression techniques, e.g. MPEG-2 and MPEG-4 Part 10/AVC, use block-based motion compensated transform coding. These approaches attempt to adapt block size to content for spatial and temporal prediction, with DCT
transform coding of the residual. Although efficient coding can be achieved, limitations on block size and blocking artifacts can often affect performance. What is needed is a framework that allows for coding of the video that can be better adapted to the local image content for efficient coding and improved visual perception.
Brief Description of the Drawings
transform coding of the residual. Although efficient coding can be achieved, limitations on block size and blocking artifacts can often affect performance. What is needed is a framework that allows for coding of the video that can be better adapted to the local image content for efficient coding and improved visual perception.
Brief Description of the Drawings
[004] The accompanying figures, where like reference numerals refer to identical or functionally similar elements throughout the separate views and which together with the detailed description below are incorporated in and form part of the specification, serve to further illustrate various embodiments and to explain various principles and advantages all in accordance with the present invention.
[005] FIG. 1 is an example of a network architecture that is used by some embodiments of the invention.
[006] FIG. 2 is a diagram of an encoder/decoder used in accordance with some embodiments of the invention.
[007] FIG. 3 is a diagram of an encoder/decoder used in accordance with some embodiments of the invention.
[0081 FIG. 4 is an illustration of an encoder incorporating some of the principles of the invention.
[009] FIG. 5 is an illustration of a decoder corresponding to the encoder shown in FIG.
4.
[0010] FIG. 6 is an illustration of a partitioned picture from a video stream in accordance with some embodiments of the invention.
[0011] FIG. 7 is an illustration of an encoder incorporating some of the principles of the invention.
[0012] FIG. 8 is an illustration of a decoder corresponding to the encoder shown in FIG.
7.
[0013] FIGs. 9(a) and 9(b) are illustrations of interpolation modules incorporating some of the principles of the invention.
[0014] FIG. 10 is an illustration of an encoder incorporating some of the principles of the invention.
[0015] FIG. 11 is an illustration of a decoder corresponding to the encoder shown in FIG.
10.
[0016] FIG. 12 is an illustration of 3D encoding.
[0017] FIG. 13 is another illustration of 3D encoding.
[0018] FIG. 14 is yet another illustration of 3D encoding.
[0019] FIG. 15 is an illustration of an encoder incorporating some of the principles of the invention.
[0020] FIG. 16 is an illustration of decoder corresponding to the encoder shown in FIG.
15.
[0021] FIG. 17 is a flow chart showing the operation of encoding an input video stream according to some embodiments of the invention.
[0022] FIG. 18 is a flow chart showing the operation of decoding an encoded bitstream according to some embodiments of the invention.
[0023] Skilled artisans will appreciate that elements in the figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale. For example, the dimensions of some of the elements in the figures may be exaggerated relative to other elements to help to improve understanding of embodiments of the present invention.
Detailed Description Before describing in detail embodiments that are in accordance with the present invention, it should be observed that the embodiments reside primarily in combinations of method steps and apparatus components related to a method and apparatus of feature based coding of video streams. Accordingly, the apparatus components and method steps have been represented where appropriate by conventional symbols in the drawings, showing only those specific details that are pertinent to understanding the embodiments of the present invention so as not to obscure the disclosure with details that will be readily apparent to those of ordinary skill in the art having the benefit of the description herein.
[0024] In this document, relational terms such as first and second, top and bottom, and the like may be used solely to distinguish one entity or action from another entity or action without necessarily requiring or implying any actual such relationship or order between such entities or actions. The terms "comprises," "comprising," or any other variation thereof, are intended to cover a non-exclusive inclusion, such that a process, method, article, or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. An element proceeded by "comprises ...a" does not, without more constraints, preclude the existence of additional identical elements in the process, method, article, or apparatus that comprises the element. It will be appreciated that embodiments of the invention described herein may be comprised of one or more conventional processors and unique stored program instructions that control the one or more processors to implement, in conjunction with certain non-processor circuits, some, most, or all of the functions of feature base coding of video streams as described herein.
The non-processor circuits may include, but are not limited to, a radio receiver, a radio transmitter, signal drivers, clock circuits, power source circuits, and user input devices.
As such, these functions may be interpreted as steps of a method to perform feature based coding of video streams. Alternatively, some or all functions could be implemented by a state machine that has no stored program instructions, or in one or more application specific integrated circuits (ASICs), in which each function or some combinations of certain of the functions are implemented as custom logic. Of course, a combination of the two approaches could be used. Thus, methods and means for these functions have 5 been described herein. Further, it is expected that one of ordinary skill, notwithstanding possibly significant effort and many design choices motivated by, for example, available time, current technology, and economic considerations, when guided by the concepts and principles disclosed herein will be readily capable of generating such software instructions and programs and ICs with minimal experimentation.
[0025] In accordance with the description, the principles described are directed to an apparatus operating at a head end of a video distribution system and a divider to segment an input video stream into partitions for each of a plurality of channels of the video. The apparatus also includes a channel analyzer coupled to the divider wherein the channel analyzer decomposes the partitions, and an encoder coupled to the channel analyzer to encode the decomposed partitions into an encoded bitstream wherein the encoder receives coding information from at least one of the plurality of channels to be used in encoding the decomposed partitions into the encoded bitstream. In an embodiment, the apparatus includes a reconstruction loop to decode the encoded bitstream and recombine the decoded bitstreams into a reconstructed video stream and a buffer to store the reconstructed video stream. In another embodiment, the buffer also can store other coding information from other channels of the video stream. In addition, the coding information includes at least one of the reconstructed video stream and coding information used for the encoder and the coding information is at least one of reference picture information and coding information of video stream. Moreover, the divider uses at least one of a plurality of feature sets to form the partitions. In an embodiment the reference picture information is determined from reconstructed video stream created from the bitstreams.
[0026] In another embodiment, an apparatus is disclosed that includes a decoder that receives an encoded bitstream wherein the decoder decodes the bitstream according to received coding information regarding channels of the encoded bitstream. The apparatus also includes a channel synthesizer coupled to the decoder to synthesize the decoded bitstream into partitions of a video stream, and a combiner coupled to the channel synthesizer to create a reconstructed video stream from the decoded bitstreams. The coding information can include at least one of the reconstructed video stream and coding information for the reconstructed video stream. In addition, the apparatus includes a buffer coupled to the combiner wherein the buffer stores the reconstructed video stream.
A filter can couple between the buffer and decoder to feed back at least a part of the reconstructed video stream to the decoder as coding information. The partitions can also be determined based on at least one of a plurality of feature sets.
[0027] In addition, the principles described disclose a method that includes receiving an input video stream and partitioning the input video stream into a plurality of partitions.
The method also includes decomposing the plurality of partitions, and encoding the decomposed partitions into an encoded bitstream wherein the encoding uses coding information from channels of the input video stream. In an embodiment, the method further includes receiving a reconstructed video stream derived from the encoded bitstreams as an input used to encode the partitions into the bitstream.
Moreover, the method can include buffering a reconstructed video stream reconstructed from the encoded bitstreams to be used as coding information for other channels of the input video stream. The coding information can be at least one of reference picture information and coding information of the video stream.
[0028] Another method is also disclosed. This method includes receiving at least one encoded bitstream and decoding the received bitstream wherein the decoding uses coding information from channels of an input video stream. In addition, the method synthesizes the decoded bitstream into a series of partitions of the input video stream, and combines the partitions into a reconstructed video stream. In an embodiment, the coding information is at least one of reference picture information and coding information of the input video stream. Furthermore, the method can include using the reconstructed video stream as input for decoding the bitstreams and synthesizing the reconstructed video stream for decoding the bitstream.
[0029] The present description is developed based on the premise that each area of a picture in a video stream is most efficiently described with a specific set of features. For example, a set of features can be determined for the parameters that efficiently describes a face for a given face model. In addition, the efficiency of a set of features that describes a part of an image depends on the application (e.g. perceptual relevance for those applications where humans are the end user) and efficiency of the compression algorithm used in encoding for minimum description length of those features.
[0030] The proposed video codec uses N sets of features, named {FS/
FSN }, where each FS, consists of n, features named {Al) f(n,)}. The proposed video codec efficiently (e.g. based on some Rate-Distortion aware scheme) divides each picture into P
suitable partitions that can be overlapped or disjoint. Next, each partition j is assigned one set of features which optimally describes that partition, e.g. FS,. Finally, the value associated with each of the n, features in the FS, feature set to describe the data in partition j would be encoded/compressed and sent to the decoder. The decoder reconstructs each feature value and then reconstructs the partition. The plurality of partitions will form the reconstructed picture.
[0031] In an embodiment, a method is performed that receives a video stream that is to be encoded and transmitted or stored in a suitable medium. The video stream is comprised of a plurality of pictures that are arranged in a series. For each of the plurality of pictures, the method determines a set of features for the picture and divides each picture into a plurality of partitions. Each partition corresponds to at least one of the features that describe the partition. The method encodes each partition according to an encoding scheme that is adapted to the feature that describes the partition.
The encoded partitions can then be transmitted or stored.
[0081 FIG. 4 is an illustration of an encoder incorporating some of the principles of the invention.
[009] FIG. 5 is an illustration of a decoder corresponding to the encoder shown in FIG.
4.
[0010] FIG. 6 is an illustration of a partitioned picture from a video stream in accordance with some embodiments of the invention.
[0011] FIG. 7 is an illustration of an encoder incorporating some of the principles of the invention.
[0012] FIG. 8 is an illustration of a decoder corresponding to the encoder shown in FIG.
7.
[0013] FIGs. 9(a) and 9(b) are illustrations of interpolation modules incorporating some of the principles of the invention.
[0014] FIG. 10 is an illustration of an encoder incorporating some of the principles of the invention.
[0015] FIG. 11 is an illustration of a decoder corresponding to the encoder shown in FIG.
10.
[0016] FIG. 12 is an illustration of 3D encoding.
[0017] FIG. 13 is another illustration of 3D encoding.
[0018] FIG. 14 is yet another illustration of 3D encoding.
[0019] FIG. 15 is an illustration of an encoder incorporating some of the principles of the invention.
[0020] FIG. 16 is an illustration of decoder corresponding to the encoder shown in FIG.
15.
[0021] FIG. 17 is a flow chart showing the operation of encoding an input video stream according to some embodiments of the invention.
[0022] FIG. 18 is a flow chart showing the operation of decoding an encoded bitstream according to some embodiments of the invention.
[0023] Skilled artisans will appreciate that elements in the figures are illustrated for simplicity and clarity and have not necessarily been drawn to scale. For example, the dimensions of some of the elements in the figures may be exaggerated relative to other elements to help to improve understanding of embodiments of the present invention.
Detailed Description Before describing in detail embodiments that are in accordance with the present invention, it should be observed that the embodiments reside primarily in combinations of method steps and apparatus components related to a method and apparatus of feature based coding of video streams. Accordingly, the apparatus components and method steps have been represented where appropriate by conventional symbols in the drawings, showing only those specific details that are pertinent to understanding the embodiments of the present invention so as not to obscure the disclosure with details that will be readily apparent to those of ordinary skill in the art having the benefit of the description herein.
[0024] In this document, relational terms such as first and second, top and bottom, and the like may be used solely to distinguish one entity or action from another entity or action without necessarily requiring or implying any actual such relationship or order between such entities or actions. The terms "comprises," "comprising," or any other variation thereof, are intended to cover a non-exclusive inclusion, such that a process, method, article, or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus. An element proceeded by "comprises ...a" does not, without more constraints, preclude the existence of additional identical elements in the process, method, article, or apparatus that comprises the element. It will be appreciated that embodiments of the invention described herein may be comprised of one or more conventional processors and unique stored program instructions that control the one or more processors to implement, in conjunction with certain non-processor circuits, some, most, or all of the functions of feature base coding of video streams as described herein.
The non-processor circuits may include, but are not limited to, a radio receiver, a radio transmitter, signal drivers, clock circuits, power source circuits, and user input devices.
As such, these functions may be interpreted as steps of a method to perform feature based coding of video streams. Alternatively, some or all functions could be implemented by a state machine that has no stored program instructions, or in one or more application specific integrated circuits (ASICs), in which each function or some combinations of certain of the functions are implemented as custom logic. Of course, a combination of the two approaches could be used. Thus, methods and means for these functions have 5 been described herein. Further, it is expected that one of ordinary skill, notwithstanding possibly significant effort and many design choices motivated by, for example, available time, current technology, and economic considerations, when guided by the concepts and principles disclosed herein will be readily capable of generating such software instructions and programs and ICs with minimal experimentation.
[0025] In accordance with the description, the principles described are directed to an apparatus operating at a head end of a video distribution system and a divider to segment an input video stream into partitions for each of a plurality of channels of the video. The apparatus also includes a channel analyzer coupled to the divider wherein the channel analyzer decomposes the partitions, and an encoder coupled to the channel analyzer to encode the decomposed partitions into an encoded bitstream wherein the encoder receives coding information from at least one of the plurality of channels to be used in encoding the decomposed partitions into the encoded bitstream. In an embodiment, the apparatus includes a reconstruction loop to decode the encoded bitstream and recombine the decoded bitstreams into a reconstructed video stream and a buffer to store the reconstructed video stream. In another embodiment, the buffer also can store other coding information from other channels of the video stream. In addition, the coding information includes at least one of the reconstructed video stream and coding information used for the encoder and the coding information is at least one of reference picture information and coding information of video stream. Moreover, the divider uses at least one of a plurality of feature sets to form the partitions. In an embodiment the reference picture information is determined from reconstructed video stream created from the bitstreams.
[0026] In another embodiment, an apparatus is disclosed that includes a decoder that receives an encoded bitstream wherein the decoder decodes the bitstream according to received coding information regarding channels of the encoded bitstream. The apparatus also includes a channel synthesizer coupled to the decoder to synthesize the decoded bitstream into partitions of a video stream, and a combiner coupled to the channel synthesizer to create a reconstructed video stream from the decoded bitstreams. The coding information can include at least one of the reconstructed video stream and coding information for the reconstructed video stream. In addition, the apparatus includes a buffer coupled to the combiner wherein the buffer stores the reconstructed video stream.
A filter can couple between the buffer and decoder to feed back at least a part of the reconstructed video stream to the decoder as coding information. The partitions can also be determined based on at least one of a plurality of feature sets.
[0027] In addition, the principles described disclose a method that includes receiving an input video stream and partitioning the input video stream into a plurality of partitions.
The method also includes decomposing the plurality of partitions, and encoding the decomposed partitions into an encoded bitstream wherein the encoding uses coding information from channels of the input video stream. In an embodiment, the method further includes receiving a reconstructed video stream derived from the encoded bitstreams as an input used to encode the partitions into the bitstream.
Moreover, the method can include buffering a reconstructed video stream reconstructed from the encoded bitstreams to be used as coding information for other channels of the input video stream. The coding information can be at least one of reference picture information and coding information of the video stream.
[0028] Another method is also disclosed. This method includes receiving at least one encoded bitstream and decoding the received bitstream wherein the decoding uses coding information from channels of an input video stream. In addition, the method synthesizes the decoded bitstream into a series of partitions of the input video stream, and combines the partitions into a reconstructed video stream. In an embodiment, the coding information is at least one of reference picture information and coding information of the input video stream. Furthermore, the method can include using the reconstructed video stream as input for decoding the bitstreams and synthesizing the reconstructed video stream for decoding the bitstream.
[0029] The present description is developed based on the premise that each area of a picture in a video stream is most efficiently described with a specific set of features. For example, a set of features can be determined for the parameters that efficiently describes a face for a given face model. In addition, the efficiency of a set of features that describes a part of an image depends on the application (e.g. perceptual relevance for those applications where humans are the end user) and efficiency of the compression algorithm used in encoding for minimum description length of those features.
[0030] The proposed video codec uses N sets of features, named {FS/
FSN }, where each FS, consists of n, features named {Al) f(n,)}. The proposed video codec efficiently (e.g. based on some Rate-Distortion aware scheme) divides each picture into P
suitable partitions that can be overlapped or disjoint. Next, each partition j is assigned one set of features which optimally describes that partition, e.g. FS,. Finally, the value associated with each of the n, features in the FS, feature set to describe the data in partition j would be encoded/compressed and sent to the decoder. The decoder reconstructs each feature value and then reconstructs the partition. The plurality of partitions will form the reconstructed picture.
[0031] In an embodiment, a method is performed that receives a video stream that is to be encoded and transmitted or stored in a suitable medium. The video stream is comprised of a plurality of pictures that are arranged in a series. For each of the plurality of pictures, the method determines a set of features for the picture and divides each picture into a plurality of partitions. Each partition corresponds to at least one of the features that describe the partition. The method encodes each partition according to an encoding scheme that is adapted to the feature that describes the partition.
The encoded partitions can then be transmitted or stored.
8 [0032] It can be appreciated that a suitable method of decoding is performed for a video stream that is received using feature based encoding. The method determines from the received video stream the encoded partitions. From each received partition it is determined from the encoding method used the feature used to encode each partition.
Based on the determined features, the method reconstructs the plurality of partitions used to create each of the plurality of pictures in the encoded video stream.
[0033] In an embodiment, each feature coding scheme might be unique to that specific feature. In another embodiment, each feature coding scheme may be shared for coding of a number of different features. The coding schemes can use spatial, temporal or coding information across the feature space for the same partition to optimally code any given feature. If the decoder depends on such spatial, temporal or cross feature information, it must come from already transmitted and decoded data.
[0034] Turning to FIG. 1, there is illustrated a network architecture 100 that encodes and decodes a video stream according the features found in the pictures of the video stream.
Embodiments of the encoding and decoding are described in more detail below.
As shown in FIG. 1, the network architecture 100 is illustrated as cable television (CATV) network architecture 100, including a cable headend unit 110 and a cable network 111. It is understood, however, that the concepts described here are applicable to other video streaming embodiments including other wired and wireless types of transmission. A
number of data sources 101, 102, 103, may be communicatively coupled to the cable head-end unit 110 including, but in no way limited to, a plurality of servers 101, the Internet 102, radio signals, or television signals received via a content provider 103. The cable head-end 110 is also communicatively coupled to one or more subscribers 150a-n through the cable network 111.
[0035] The cable head end 110 includes the necessary equipment to encode the video stream that it receives from the data sources 101, 102, 103 according to the various
Based on the determined features, the method reconstructs the plurality of partitions used to create each of the plurality of pictures in the encoded video stream.
[0033] In an embodiment, each feature coding scheme might be unique to that specific feature. In another embodiment, each feature coding scheme may be shared for coding of a number of different features. The coding schemes can use spatial, temporal or coding information across the feature space for the same partition to optimally code any given feature. If the decoder depends on such spatial, temporal or cross feature information, it must come from already transmitted and decoded data.
[0034] Turning to FIG. 1, there is illustrated a network architecture 100 that encodes and decodes a video stream according the features found in the pictures of the video stream.
Embodiments of the encoding and decoding are described in more detail below.
As shown in FIG. 1, the network architecture 100 is illustrated as cable television (CATV) network architecture 100, including a cable headend unit 110 and a cable network 111. It is understood, however, that the concepts described here are applicable to other video streaming embodiments including other wired and wireless types of transmission. A
number of data sources 101, 102, 103, may be communicatively coupled to the cable head-end unit 110 including, but in no way limited to, a plurality of servers 101, the Internet 102, radio signals, or television signals received via a content provider 103. The cable head-end 110 is also communicatively coupled to one or more subscribers 150a-n through the cable network 111.
[0035] The cable head end 110 includes the necessary equipment to encode the video stream that it receives from the data sources 101, 102, 103 according to the various
9 embodiments described below. The cable head end 110 includes a feature set device 104.
The feature set device 104 stores the various features, described below, that are used to partition the video stream. As features are determined, the qualities of the features are stored in the memory of the feature set device 104. The cable head end 110 also includes a divider 105 that divides the video stream into a plurality of partitions according the various features of the video stream determined by the feature set device 104.
[0036] The encoder 106 encodes the partitions using any of a variety of encoding schemes that are adapted to the features that describe the partitions. In an embodiment, the encoder is capable of encoding the video stream according to any of a variety of different encoding schemes. The encoded partitions of the video stream are provided to the cable network 111 and transmitted using transceiver 107 to the various subscriber units 150a-n. In addition, a processor 108 and memory 109 are used in conjunction with the feature set device 104, divider 105, encoder 106 and transceiver 107 as a part of the operation of cable head end 110.
[0037] The subscriber units 150a-n can be 2D-ready TVs 150n or 3D ready TVs 150d. In an embodiment, the cable network 111 provides the 3D and 2D video content stream to each of the subscriber units 150a-n using, for instance, fixed optical fibers or coaxial cables. The subscriber units 150a-n each include a set top box (STB) 120, 120d that receives the video content stream that is using the feature-based principles described. As is understood, the subscriber units 150a-n can include other types of wireless or wired transceivers from STB 120, 120d that are capable of transmitting and receiving video streams and control data from the head end 110. The subscriber unit 150d may have a 3D-ready TV component 122d capable of displaying 3D stereoscopic views. The subscriber unit 150n has a 2D TV component 122 that is capable of displaying 2D views.
Each of the subscriber units 150a-n include a combiner 121 that receives the decoded partitions and recreates the video stream. In addition, a processor 126 and memory 128, as well as other components not shown, are used in conjunction with the STB
and the TV
components 122, 122d as part of the operation of the subscriber units 150a-n.
[0038] As mentioned, each picture in the video stream is partitioned according to the various features found in the pictures. In an embodiment, the rules by which a partition is decomposed or analyzed for encoding and reconstructed or synthesized for decoding are 5 based on a set of fixed features that are known by both encoder and the decoder. These fixed rules are stored in the memories 109, 128 of the head end device 110 and the subscriber units 150a-n, respectively. In this embodiment, there is no need to send any information from the encoder to the decoder on how to reconstruct the partition in this class of fixed feature-based video codecs. In this embodiment, the encoder 106 and the
The feature set device 104 stores the various features, described below, that are used to partition the video stream. As features are determined, the qualities of the features are stored in the memory of the feature set device 104. The cable head end 110 also includes a divider 105 that divides the video stream into a plurality of partitions according the various features of the video stream determined by the feature set device 104.
[0036] The encoder 106 encodes the partitions using any of a variety of encoding schemes that are adapted to the features that describe the partitions. In an embodiment, the encoder is capable of encoding the video stream according to any of a variety of different encoding schemes. The encoded partitions of the video stream are provided to the cable network 111 and transmitted using transceiver 107 to the various subscriber units 150a-n. In addition, a processor 108 and memory 109 are used in conjunction with the feature set device 104, divider 105, encoder 106 and transceiver 107 as a part of the operation of cable head end 110.
[0037] The subscriber units 150a-n can be 2D-ready TVs 150n or 3D ready TVs 150d. In an embodiment, the cable network 111 provides the 3D and 2D video content stream to each of the subscriber units 150a-n using, for instance, fixed optical fibers or coaxial cables. The subscriber units 150a-n each include a set top box (STB) 120, 120d that receives the video content stream that is using the feature-based principles described. As is understood, the subscriber units 150a-n can include other types of wireless or wired transceivers from STB 120, 120d that are capable of transmitting and receiving video streams and control data from the head end 110. The subscriber unit 150d may have a 3D-ready TV component 122d capable of displaying 3D stereoscopic views. The subscriber unit 150n has a 2D TV component 122 that is capable of displaying 2D views.
Each of the subscriber units 150a-n include a combiner 121 that receives the decoded partitions and recreates the video stream. In addition, a processor 126 and memory 128, as well as other components not shown, are used in conjunction with the STB
and the TV
components 122, 122d as part of the operation of the subscriber units 150a-n.
[0038] As mentioned, each picture in the video stream is partitioned according to the various features found in the pictures. In an embodiment, the rules by which a partition is decomposed or analyzed for encoding and reconstructed or synthesized for decoding are 5 based on a set of fixed features that are known by both encoder and the decoder. These fixed rules are stored in the memories 109, 128 of the head end device 110 and the subscriber units 150a-n, respectively. In this embodiment, there is no need to send any information from the encoder to the decoder on how to reconstruct the partition in this class of fixed feature-based video codecs. In this embodiment, the encoder 106 and the
10 decoders 124 are configured with the feature sets used to encode/decode the various partitions of the video stream.
[0039] In another embodiment, the rules by which a partition is decomposed or analyzed for encoding and reconstructed or synthesized for decoding is based on a set of features that is set by the encoder 106 to accommodate more efficient coding of a given partition.
The rules that are set by the encoder 106 are adaptive reconstruction rules.
These rules need to be sent from the head end 110 to the decoder 124 at the subscriber units 150a-n.
[0040] FIG. 2 shows a high-level diagram 200 where the input video signal x 202 is decomposed into two sets of features by a feature set device 104. The pixels from the input video x 202 can be categorized by features such as motion (e.g. low, high), intensity (bright, dark), texture, pattern, orientation, shape, and other categories based on the content, quality or context of the input video x 202. The input video signal x 202 can also be decomposed by spatiotemporal frequency, signal vs. noise, or by using some image model. In addition, the input video signal x 202 can be decomposed using a combination of any of the different categories. Since the perceptual importance of each feature can differ, each one can be more appropriately encoded by encoder 106 with one or more of the different encoders Ei 204, 206 using different encoder parameters to produce bitstreams bi 208, 210. The encoder E 106 can also make joint use of the individual feature encoders Ei 204, 206.
[0039] In another embodiment, the rules by which a partition is decomposed or analyzed for encoding and reconstructed or synthesized for decoding is based on a set of features that is set by the encoder 106 to accommodate more efficient coding of a given partition.
The rules that are set by the encoder 106 are adaptive reconstruction rules.
These rules need to be sent from the head end 110 to the decoder 124 at the subscriber units 150a-n.
[0040] FIG. 2 shows a high-level diagram 200 where the input video signal x 202 is decomposed into two sets of features by a feature set device 104. The pixels from the input video x 202 can be categorized by features such as motion (e.g. low, high), intensity (bright, dark), texture, pattern, orientation, shape, and other categories based on the content, quality or context of the input video x 202. The input video signal x 202 can also be decomposed by spatiotemporal frequency, signal vs. noise, or by using some image model. In addition, the input video signal x 202 can be decomposed using a combination of any of the different categories. Since the perceptual importance of each feature can differ, each one can be more appropriately encoded by encoder 106 with one or more of the different encoders Ei 204, 206 using different encoder parameters to produce bitstreams bi 208, 210. The encoder E 106 can also make joint use of the individual feature encoders Ei 204, 206.
11 100411 The decoder D 124, which includes decoders 212, 214 reconstructs the features from the bitstreams b, 208, 210 with possible joint use of information from all the bitstreams being sent between the head end 110 and the subscriber units 150a-n and the features are combined by combiner 121 to produce the reconstructed output video signal x' 216. As can be understood, output video signal x' 216 corresponds to the input video signal x 202.
100421 More specifically, Figure 3 shows a diagram of the proposed High-Efficiency Video Coding (HVC) approach. For example, the features used as a part of HVC
are based on a spatial frequency decomposition. It is understood, however, that the principles described for HVC can be applied to features other than spatial frequency decomposition.
As shown, an input video signal x 302 is provided to the divider 105, which includes a partitioning module 304 and a channel analysis module 306. The partitioning module 304 is configured to analyze the input video signal x 302 according to a given feature set, e.g.
spatial frequency, and divide or partition the input video signal x 302 into a plurality of partitions based on the feature set. The partitioning of the input video signal x 302 is based on the rules corresponding to the given feature set. For example, since the spatial frequency content varies within a picture, each input picture is partitioned by partitioning module 304 so that each partition can have a different spatial frequency decomposition so that each partition has a different feature set.
[0043] For example, in the channel analysis module 306, an input video partition can be decomposed into 2x2 bands based on spatial frequency, e.g. low-low, low-high, high-low, and high-high for a total of four feature sets, or into 2x1 (vertical) or 1x2 (horizontal) frequency bands which requires two features (H & L frequency components) for these two feature sets. These sub-bands or "channels" can be coded using spatial prediction, temporal prediction, and cross-band prediction, with an appropriate sub-band specific objective or perceptual quality metric (e.g. mean square error (MSE) weighting).
Existing codec technology can be used or adapted to code the bands using channel
100421 More specifically, Figure 3 shows a diagram of the proposed High-Efficiency Video Coding (HVC) approach. For example, the features used as a part of HVC
are based on a spatial frequency decomposition. It is understood, however, that the principles described for HVC can be applied to features other than spatial frequency decomposition.
As shown, an input video signal x 302 is provided to the divider 105, which includes a partitioning module 304 and a channel analysis module 306. The partitioning module 304 is configured to analyze the input video signal x 302 according to a given feature set, e.g.
spatial frequency, and divide or partition the input video signal x 302 into a plurality of partitions based on the feature set. The partitioning of the input video signal x 302 is based on the rules corresponding to the given feature set. For example, since the spatial frequency content varies within a picture, each input picture is partitioned by partitioning module 304 so that each partition can have a different spatial frequency decomposition so that each partition has a different feature set.
[0043] For example, in the channel analysis module 306, an input video partition can be decomposed into 2x2 bands based on spatial frequency, e.g. low-low, low-high, high-low, and high-high for a total of four feature sets, or into 2x1 (vertical) or 1x2 (horizontal) frequency bands which requires two features (H & L frequency components) for these two feature sets. These sub-bands or "channels" can be coded using spatial prediction, temporal prediction, and cross-band prediction, with an appropriate sub-band specific objective or perceptual quality metric (e.g. mean square error (MSE) weighting).
Existing codec technology can be used or adapted to code the bands using channel
12 encoder 106. The resulting bitstream of the encoded video signal partitions is transmitted to subscriber unit 150a-n for decoding. The channels decoded by decoder 124 are used for channel synthesis by channel synthesis module 308 to reconstruct the partitions by reconstruction module 310 that thereby produce output video signal 312.
[0044] An example of a two-channel HVC encoder 400 is shown in FIG. 4. The input video signal x 402 can be the entire image or a single image partition from divider 105.
The input video signal x 402 is filtered according to a function h, by filters 404, 406. It is understood that any number of filters can be used depending on the features set. In an embodiment, filtered signals are then sampled by samplers 408 by a factor corresponding to the number of filters 404, 406, e.g. two, so that the total number of samples in all channels is the same as the number of input samples. The input image or partition can be appropriately padded (e.g. using symmetric extension) in order to achieve the appropriate number of samples in each channel. The resulting channel data is then encoded by encoder Eo 410 and El 412 to produce the channel bitstream bo 414 and b1 416, respectively.
[0045] If the bit depth resolution of the input data to an encoder E, is larger than what the encoder can process, then the input data can be appropriately re-scaled prior to encoding.
This re-scaling can be done through bounded quantization (uniform or non-uniform) of data which may include scaling, offset, rounding and clipping of the data. Any operations performed before encoding (such as scaling and offset) should be reversed after decoding. The particular parameters used in the transformation can be transmitted to the decoder or agreed upon a priori between the encoder and decoder.
[0046] A channel encoder may make use of coding information 61 418 from other channels (channel k for channel j in the case of k) to improve coding efficiency and performance. If /0] is already available at the decoder there is no need to include this information in the bitstream this information; otherwise, ioi is also made available to the decoder, described below, with the bitstreams. In an embodiment, the coding information
[0044] An example of a two-channel HVC encoder 400 is shown in FIG. 4. The input video signal x 402 can be the entire image or a single image partition from divider 105.
The input video signal x 402 is filtered according to a function h, by filters 404, 406. It is understood that any number of filters can be used depending on the features set. In an embodiment, filtered signals are then sampled by samplers 408 by a factor corresponding to the number of filters 404, 406, e.g. two, so that the total number of samples in all channels is the same as the number of input samples. The input image or partition can be appropriately padded (e.g. using symmetric extension) in order to achieve the appropriate number of samples in each channel. The resulting channel data is then encoded by encoder Eo 410 and El 412 to produce the channel bitstream bo 414 and b1 416, respectively.
[0045] If the bit depth resolution of the input data to an encoder E, is larger than what the encoder can process, then the input data can be appropriately re-scaled prior to encoding.
This re-scaling can be done through bounded quantization (uniform or non-uniform) of data which may include scaling, offset, rounding and clipping of the data. Any operations performed before encoding (such as scaling and offset) should be reversed after decoding. The particular parameters used in the transformation can be transmitted to the decoder or agreed upon a priori between the encoder and decoder.
[0046] A channel encoder may make use of coding information 61 418 from other channels (channel k for channel j in the case of k) to improve coding efficiency and performance. If /0] is already available at the decoder there is no need to include this information in the bitstream this information; otherwise, ioi is also made available to the decoder, described below, with the bitstreams. In an embodiment, the coding information
13 iik can be the information needed by the encoders or decoders or it can be predictive information based on analysis of the information and the channel conditions.
The reuse of spatial or temporal prediction information can be across a plurality of sub-bands determined by the HVC coding approach. Motion vectors from the channels can be made available to the encoders and decoders so that the coding of one sub-band can be used by another sub-band. These motion vectors can be the exact motion vector of the sub-band or predictive motion vectors. Any currently coded coding unit can inherit the coding mode information from one or more of the sub-bands which are available to the encoders and decoders. In addition, the encoders and decoders can use the coding mode information to predict the coding mode for the current coding unit. Thus, the modes of one sub-band can also be used by another sub-band.
[0047] In order to match the decoded output, the decoder reconstruction loop 420 is also included in the encoder, as illustrated by the bitstream decoder Di 422, 424.
As a part of the decoder reconstruction loop 420, the decoded bitstreams 414, 416 are up-sampled by a factor of two by samplers 423, where the factor corresponds to the number of bitstreams, and is then post-filtered by a function of g, by filters 428, 430.
The filters hi 404, 406 and filters g, 428, 430 can be chosen so that when the post-filtered outputs are added by combiner 431, the original input signal x can be recovered as reconstructed signal x' in the absence of coding distortion. Alternatively, the filters hi 404, 406 and gi 428, 430 can be designed so as to minimize overall distortion in the presence of coding distortion.
[0048] FIG. 4 also illustrates how the reconstructed output x' can be used as a reference for coding future pictures as well as for coding information i for another channel k (not shown). A buffer 431 stores these outputs, which then can be filtered hi and decimated to produce picture ri, and this is performed for both encoder Ei and decoder D.
As shown, the picture I-, can be fed back to be used by both the encoder 410 as well as the decoder 422, which is a part of the reconstruction loop 420. In addition, optimization can be achieved using filters Ri 432, 434, which filter and sample the output for the decoder
The reuse of spatial or temporal prediction information can be across a plurality of sub-bands determined by the HVC coding approach. Motion vectors from the channels can be made available to the encoders and decoders so that the coding of one sub-band can be used by another sub-band. These motion vectors can be the exact motion vector of the sub-band or predictive motion vectors. Any currently coded coding unit can inherit the coding mode information from one or more of the sub-bands which are available to the encoders and decoders. In addition, the encoders and decoders can use the coding mode information to predict the coding mode for the current coding unit. Thus, the modes of one sub-band can also be used by another sub-band.
[0047] In order to match the decoded output, the decoder reconstruction loop 420 is also included in the encoder, as illustrated by the bitstream decoder Di 422, 424.
As a part of the decoder reconstruction loop 420, the decoded bitstreams 414, 416 are up-sampled by a factor of two by samplers 423, where the factor corresponds to the number of bitstreams, and is then post-filtered by a function of g, by filters 428, 430.
The filters hi 404, 406 and filters g, 428, 430 can be chosen so that when the post-filtered outputs are added by combiner 431, the original input signal x can be recovered as reconstructed signal x' in the absence of coding distortion. Alternatively, the filters hi 404, 406 and gi 428, 430 can be designed so as to minimize overall distortion in the presence of coding distortion.
[0048] FIG. 4 also illustrates how the reconstructed output x' can be used as a reference for coding future pictures as well as for coding information i for another channel k (not shown). A buffer 431 stores these outputs, which then can be filtered hi and decimated to produce picture ri, and this is performed for both encoder Ei and decoder D.
As shown, the picture I-, can be fed back to be used by both the encoder 410 as well as the decoder 422, which is a part of the reconstruction loop 420. In addition, optimization can be achieved using filters Ri 432, 434, which filter and sample the output for the decoder
14 reconstruction loop 420 using a filter function h 436, 438 and samplers 440.
In an embodiment, the filters Ri 432, 434 select one of several channel analyses (including the default with no decomposition) for each image or partition. However, once an image or partition is reconstructed, the buffered output can then be filtered using all possible channel analyses to produce appropriate reference pictures. As is understood, these reference pictures can be used as a part of the encoders 410, 412 and as coding information for other channels. In addition, although FIG. 4 shows the reference channels being decimated after filtering, it is also possible for the reference channels to be undecimated. While FIG. 4 shows the case of a two-channel analysis, the extension to more channels is readily understood from the principles described.
[0049] Sub-band reference picture interpolation can be used to provide information on what the video stream should be. The reconstructed image can be appropriately decomposed to generate reference sub-band information. The generation of sub-sampled sub-band reference data can be done using an undecimated reference picture that may have been properly synthesized. A design of a fixed interpolation filter can be used based on the spectral characteristics of each sub-band. For example, a flat interpolation is appropriate for high frequency data. On the other hand, adaptive interpolation filters can be based on MSE minimization that may include Wiener filter coefficients that apply to synthesized referenced frames that are undecimated.
[0050] FIG. 5 shows the corresponding decoder 500 to the encoder illustrated in FIG. 4.
The decoder 500 operates on the received bitstreams bi 414, 416 and co-channel coding information i 418. This information can be used to derive or re-use coding information among the channels at both the encoder and decoder. The received bitstreams 414, 416 are decoded by decoders 502, 504 which are configured to match the encoders 410, 412.
When encoding/decoding parameters are agreed to a priori, then decoders 502, 504 are configured with similar parameters. Alternatively, decoders 502, 504 receive parameter data as a part of the bitstreams 414, 416 so as to be configured corresponding to the encoders 410, 412. Samplers 506 are used to resample the decoded signal.
Filters 508, 510 using a filter function g, are used to obtain a reconstructed input video signal x'. The outputs signals ao 512 and el 514 from filters 508, 510 are added together by adder 516 to produce reconstructed input video signal x' 518.
5 [0051] As seen, the reconstructed video signal x' 518 is also provided to buffer 520. The buffered signal is supplied to filters 522, 524 that filter the reconstructed input signal by a function of h, 526, 528 and then resample the signals using samplers 530. As shown, the filtered reconstruction input signal is fed back into decoders 502, 504.
10 [0052] As described above, an input video stream x can be divided into partitions by divider 105. In an embodiment, the pictures of an input video stream x are divided into partitions where each partition is decomposed using the most suitable set of analysis, sub-sampling, and synthesis filters (based on the local picture content for each given partition) where the partitions are configured having similar features from the feature set.
In an embodiment, the filters Ri 432, 434 select one of several channel analyses (including the default with no decomposition) for each image or partition. However, once an image or partition is reconstructed, the buffered output can then be filtered using all possible channel analyses to produce appropriate reference pictures. As is understood, these reference pictures can be used as a part of the encoders 410, 412 and as coding information for other channels. In addition, although FIG. 4 shows the reference channels being decimated after filtering, it is also possible for the reference channels to be undecimated. While FIG. 4 shows the case of a two-channel analysis, the extension to more channels is readily understood from the principles described.
[0049] Sub-band reference picture interpolation can be used to provide information on what the video stream should be. The reconstructed image can be appropriately decomposed to generate reference sub-band information. The generation of sub-sampled sub-band reference data can be done using an undecimated reference picture that may have been properly synthesized. A design of a fixed interpolation filter can be used based on the spectral characteristics of each sub-band. For example, a flat interpolation is appropriate for high frequency data. On the other hand, adaptive interpolation filters can be based on MSE minimization that may include Wiener filter coefficients that apply to synthesized referenced frames that are undecimated.
[0050] FIG. 5 shows the corresponding decoder 500 to the encoder illustrated in FIG. 4.
The decoder 500 operates on the received bitstreams bi 414, 416 and co-channel coding information i 418. This information can be used to derive or re-use coding information among the channels at both the encoder and decoder. The received bitstreams 414, 416 are decoded by decoders 502, 504 which are configured to match the encoders 410, 412.
When encoding/decoding parameters are agreed to a priori, then decoders 502, 504 are configured with similar parameters. Alternatively, decoders 502, 504 receive parameter data as a part of the bitstreams 414, 416 so as to be configured corresponding to the encoders 410, 412. Samplers 506 are used to resample the decoded signal.
Filters 508, 510 using a filter function g, are used to obtain a reconstructed input video signal x'. The outputs signals ao 512 and el 514 from filters 508, 510 are added together by adder 516 to produce reconstructed input video signal x' 518.
5 [0051] As seen, the reconstructed video signal x' 518 is also provided to buffer 520. The buffered signal is supplied to filters 522, 524 that filter the reconstructed input signal by a function of h, 526, 528 and then resample the signals using samplers 530. As shown, the filtered reconstruction input signal is fed back into decoders 502, 504.
10 [0052] As described above, an input video stream x can be divided into partitions by divider 105. In an embodiment, the pictures of an input video stream x are divided into partitions where each partition is decomposed using the most suitable set of analysis, sub-sampling, and synthesis filters (based on the local picture content for each given partition) where the partitions are configured having similar features from the feature set.
15 FIG. 6 shows an example of a coding scenario which uses a total of four different decomposition choices using spatial frequency decomposition as an example of the feature set used to adaptively partition, decompose and encode a picture 600.
Adaptive partitioning of pictures in a video stream can be described by one feature set FS that is based on a minimal feature description length criterion. As understood, other feature sets can be used. For spatial frequency decomposition, the picture 600 is examined to determine the different partitions where similar characteristics can be found.
Based on the examination of the picture 600, partitions 602-614 are created. As shown, the partitions 602-614 are not overlapping with one another, but it is understood that the edges of partitions 602-614 can overlap.
[0053] In the example of spatial frequency decomposition, the feature set options are as based on vertical or horizontal filtering and sub-sampling. In one example, designated as V1H1, used in partitions 604, 610 as an example, the pixel values of the partition are coded. This feature set has only one feature, which are the pixel values of the partition.
This is equivalent of the traditional picture coding, where the encoder and decoder
Adaptive partitioning of pictures in a video stream can be described by one feature set FS that is based on a minimal feature description length criterion. As understood, other feature sets can be used. For spatial frequency decomposition, the picture 600 is examined to determine the different partitions where similar characteristics can be found.
Based on the examination of the picture 600, partitions 602-614 are created. As shown, the partitions 602-614 are not overlapping with one another, but it is understood that the edges of partitions 602-614 can overlap.
[0053] In the example of spatial frequency decomposition, the feature set options are as based on vertical or horizontal filtering and sub-sampling. In one example, designated as V1H1, used in partitions 604, 610 as an example, the pixel values of the partition are coded. This feature set has only one feature, which are the pixel values of the partition.
This is equivalent of the traditional picture coding, where the encoder and decoder
16 operate on the pixel values. As shown, partitions 606, 612, which are designated by V IH2, are horizontally filtered and sub-sampled by a factor of two for each of the two sub-bands. This feature set has two features. One is the value(s) of the low frequency sub-band and the other is the value(s) of the high frequency sub-band. Each sub-band is then coded with an appropriate encoder. In addition, partition 602, which is designated by V2111, is filtered using a vertical filter and sub-sampled by a factor of two for each of the two sub-bands. Like partitions 606, 612 using V1H2, the feature set for partition 602 has two features. One is the value(s) of the low frequency sub-band and the other is the value(s) of the high frequency sub-band. Each sub-band can be coded with an appropriate encoder.
[0054] Partitions 608, 614, which are designated by V2H2, use separable or non-separable filtering and sub-sampling by a factor of two in each of the horizontal and vertical directions. As the filtering and sub-sampling is in two dimensions, the operation takes place for each of four sub-bands so that the feature set has four features.
For example, in the case of a separable decomposition, the first feature captures the value(s) of a low frequencies (LL) sub-band, the second and third features capture the combination of low and high frequencies, i.e. LH and HL sub-band value(s), respectively, and the fourth feature captures the value(s) of high frequencies (HH) sub-band. Each sub-band is then coded with an appropriate encoder.
[0055] Divider 105 can use a number of different adaptive partitioning schemes to approach creating the partitions 602-614 of each picture in an input video stream x. One category is rate distortion (RD) based. One example of RD based partition is a Tree-structured approach. In this approach, a partitioning map would be coded using a tree structure, e.g. quadtree. The tree branching is decided based on cost minimization that includes both the performance of the best decompositioning scheme as well as the required bits for description of the tree nodes and leaves. Alternatively, the RD based partition can use a two pass approach. In the first pass, all partitions with a given size would go through adaptive decompositioning to find the cost of each decompositioning
[0054] Partitions 608, 614, which are designated by V2H2, use separable or non-separable filtering and sub-sampling by a factor of two in each of the horizontal and vertical directions. As the filtering and sub-sampling is in two dimensions, the operation takes place for each of four sub-bands so that the feature set has four features.
For example, in the case of a separable decomposition, the first feature captures the value(s) of a low frequencies (LL) sub-band, the second and third features capture the combination of low and high frequencies, i.e. LH and HL sub-band value(s), respectively, and the fourth feature captures the value(s) of high frequencies (HH) sub-band. Each sub-band is then coded with an appropriate encoder.
[0055] Divider 105 can use a number of different adaptive partitioning schemes to approach creating the partitions 602-614 of each picture in an input video stream x. One category is rate distortion (RD) based. One example of RD based partition is a Tree-structured approach. In this approach, a partitioning map would be coded using a tree structure, e.g. quadtree. The tree branching is decided based on cost minimization that includes both the performance of the best decompositioning scheme as well as the required bits for description of the tree nodes and leaves. Alternatively, the RD based partition can use a two pass approach. In the first pass, all partitions with a given size would go through adaptive decompositioning to find the cost of each decompositioning
17 choice, then the partitions from the first pass would be optimally merged to minimize the overall cost of coding the picture. In this calculation, the cost of transmission of the partitioning information can also be considered. In the second pass the picture would be partitioned and decomposed according to the optimal partition map.
[0056] Another category of partition is non-RD based. In this approach Norm-p Minimization is utilized. In this method, a norm-p of the sub-band data for all channels of the same spatial locality would be calculated for each possible choice of decompositioning. Optimal partitioning is realized by optimal division of the picture to minimize the over norm-p at all partitions 602-614. Also in this method, the cost of sending the partitioning information is considered by adding the suitably weighted bit-rate (either actual or estimated) to send the partitioning information to the overall norm-p of the data. For pictures with natural content a norm-1 is mostly used.
[0057] The adaptive sub-band decomposition of a picture or partition in video coding is described above. Each decomposition choice is described by the level of sub-sampling in each of horizontal and vertical directions, which in turn defines the number and size of sub-bands. e.g. V Hi , V IH2, etc. As understood, the decomposition information for a picture or partition can be reused or predicted by sending the residual increment for a future picture or partition. Each sub-band is derived by application of analysis filters, e.g.
filters h, 404, 406, before compression and reconstructed by application of a synthesis filters, e.g. filters g, 428, 430, after proper upsampling. In the case of cascading the decomposition, there might be more than one filter involved to analyze or synthesize each band.
[0058] Returning to FIGs. 4 and 5, filters 404, 406, 428, 430, 436, 438, 508, 510, 524, 522 can be configured and designed to minimize the overall distortion and as adaptive synthesis filters (ASF). In ASF, filters are attempting to minimize the distortion caused by the coding of each channel. The coefficients of the synthesis filter can be set based on the reconstructed channels. On example of ASF is based on joint sub-band optimization.
[0056] Another category of partition is non-RD based. In this approach Norm-p Minimization is utilized. In this method, a norm-p of the sub-band data for all channels of the same spatial locality would be calculated for each possible choice of decompositioning. Optimal partitioning is realized by optimal division of the picture to minimize the over norm-p at all partitions 602-614. Also in this method, the cost of sending the partitioning information is considered by adding the suitably weighted bit-rate (either actual or estimated) to send the partitioning information to the overall norm-p of the data. For pictures with natural content a norm-1 is mostly used.
[0057] The adaptive sub-band decomposition of a picture or partition in video coding is described above. Each decomposition choice is described by the level of sub-sampling in each of horizontal and vertical directions, which in turn defines the number and size of sub-bands. e.g. V Hi , V IH2, etc. As understood, the decomposition information for a picture or partition can be reused or predicted by sending the residual increment for a future picture or partition. Each sub-band is derived by application of analysis filters, e.g.
filters h, 404, 406, before compression and reconstructed by application of a synthesis filters, e.g. filters g, 428, 430, after proper upsampling. In the case of cascading the decomposition, there might be more than one filter involved to analyze or synthesize each band.
[0058] Returning to FIGs. 4 and 5, filters 404, 406, 428, 430, 436, 438, 508, 510, 524, 522 can be configured and designed to minimize the overall distortion and as adaptive synthesis filters (ASF). In ASF, filters are attempting to minimize the distortion caused by the coding of each channel. The coefficients of the synthesis filter can be set based on the reconstructed channels. On example of ASF is based on joint sub-band optimization.
18 For a given size of the function of gõ the Linear Mean Square Estimation technique can be used to calculate the coefficients of g, such that the mean square estimate error between the final reconstructed partition x' and the original pixels in the original signal x in the partition is minimized. In an alternative embodiment, independent channel optimization is used. In this example, the joint sub-band optimization requires the auto and cross correlations between the original signal x and the reconstructed sub-band signals after upsampling. Furthermore a system of matrix equations can be solved. The computation associated with this joint sub-band optimization might be prohibitive in many applications.
100591 An example of independent channel optimization solution for an encoder 700 can be seen in FIG. 7, which focuses on the ASF so the reference picture processing using filters 432 and 434 shown in FIG. 3 are omitted. In ASF, filter estimation module (FE,) 702, 704 is provided to perform filter estimation between the decoded reconstructed channel , which is generally noisy, and the unencoded reconstructed channel c 'õ which is noiseless. As shown, an input video signal x 701 is split and provided to filters 706, 708 that filter the signal x according to the known function h, and then sampled using samplers 710 at a rate determined by the number of partitions. In an embodiment of two channel decomposition, one of the filters 706, 708 can be a low pass filter and the other can be high pass filters. It is understood, the partitioning the data in a two-channel decomposition doubles the data. Thus, the samplers 710 can critically sample the input signals to half the amount of data so that the same number of samples are available to reconstruct the input signal at the decoder. The filtered and sampled signal is then encoded by encoders E, 712, 714 to produce bitstreams b, 716, 718. The encoded bitstreams b, 716, 718 are provided to decoders 720, 722.
100601 Encoder 700 is provided with an interpolation module 724, 726 that receives a signal filtered and sampled signal provided to the encoders 712, 714 and from decoder 720, 722. The decimated and sampled signal and the decoded signal are sampled by samplers 728, 730. The resampled signals are processed by filters 732, 734 to produce
100591 An example of independent channel optimization solution for an encoder 700 can be seen in FIG. 7, which focuses on the ASF so the reference picture processing using filters 432 and 434 shown in FIG. 3 are omitted. In ASF, filter estimation module (FE,) 702, 704 is provided to perform filter estimation between the decoded reconstructed channel , which is generally noisy, and the unencoded reconstructed channel c 'õ which is noiseless. As shown, an input video signal x 701 is split and provided to filters 706, 708 that filter the signal x according to the known function h, and then sampled using samplers 710 at a rate determined by the number of partitions. In an embodiment of two channel decomposition, one of the filters 706, 708 can be a low pass filter and the other can be high pass filters. It is understood, the partitioning the data in a two-channel decomposition doubles the data. Thus, the samplers 710 can critically sample the input signals to half the amount of data so that the same number of samples are available to reconstruct the input signal at the decoder. The filtered and sampled signal is then encoded by encoders E, 712, 714 to produce bitstreams b, 716, 718. The encoded bitstreams b, 716, 718 are provided to decoders 720, 722.
100601 Encoder 700 is provided with an interpolation module 724, 726 that receives a signal filtered and sampled signal provided to the encoders 712, 714 and from decoder 720, 722. The decimated and sampled signal and the decoded signal are sampled by samplers 728, 730. The resampled signals are processed by filters 732, 734 to produce
19 signal c', while the decoded signals are also processed by filters 736, 738 to produce signal-6; . The signals c', and are both provided to the filter estimation module 702, 704 described above. The output of the filter estimation module 702, 704 corresponds to the filter information info, of the interpolation module 724, 726. The filter information info, can also be provided to the corresponding decoder as well as to other encoders.
[0061] The interpolation module can also be configured with a filter 740, 742 utilizing a filter function f. The filter 740, 742 can be derived to minimize an error metric between c', and , and this filter is applied to c", to generate c. The resulting filtered channel outputs c are then combined to produce the overall output. In an embodiment, the ASF
outputs c can be used to replace-6; in Figure 4. Since the ASF is applied to each channel before combining, the ASF filtered outputs c, can be kept at a higher bit-depth resolution relative to the final output bit-depth resolution. That is, the combined ASF
outputs can be kept at a higher bit-depth resolution internally for purposes of reference picture processing, while the final output bit-depth resolution can be reduced, for example, by clipping and rounding. The filtering performed by the interpolation module 740, 742 can fill in information that may be discarded by the sampling conducted by samplers 710. In an embodiment, the encoders 712, 714 can use different parameters based on the features set used to partition the input video signals and then to encode signals.
[0062] The filter information i, can be transmitted to the decoder 800, which is shown in FIG. 8. The modified synthesis filter 802, 804 gi' can be derived from the functions gi and f of filters 706, 708, 732-738 so that both encoder 700 and decoder 800 perform equivalent filtering. In ASF, the synthesis filter 732-738 g, is modified to g: in filters 802, 804 to account for the distortions introduced by the coding. It is also possible to modify the analysis filter functions 111 from filters 706, 708 to hi' in filters 806, 808 to account for coding distortions in adaptive analysis filtering (AAF).
Simultaneous AAF
and ASF is also possible. ASF/AAF can be applied to the entire picture or to picture partitions, and a different filter can be applied to different partitions. In an example of AAF, the analysis filter, e.g. 9/7, 3/5, etc., can be selected from a set of filter banks. The filter that is used is based on the qualities of the signal coming into the filter. The coefficients of the AAF filter can be set based on the content of each partition and coding 5 condition. In addition, the filters can be used for generation of sub-band reference data, in case the filter index or coefficients can be transmitted to the decoder to prevent a drift between the encoder and the decoder.
[0063] As seen in FIG. 8. bitstreams bi 716, 718 are supplied to decoders 810, 812, which 10 have complementary parameters to encoders 712, 714. Decoders 810, 812 also receive as inputs coding information i from the encoder 700 as well as from other encoders and decoders in the system. The output of decoders 810, 812 are resampled by samplers 814 and supplied to the filters 802, 804 described above. The filtered decoded bitstreams c", are combined by the combiner 816 to produce reconstructed video signal x'. The 15 reconstructed video signal x' can also be buffered in buffer 818 and processed by filters 806, 808 and sampled by samplers 820 to be supplied as feedback input to the decoders 810, 812.
[0064] The codecs shown in FIGs. 4-5 and 7-8 can be enhanced for HVC. In an
[0061] The interpolation module can also be configured with a filter 740, 742 utilizing a filter function f. The filter 740, 742 can be derived to minimize an error metric between c', and , and this filter is applied to c", to generate c. The resulting filtered channel outputs c are then combined to produce the overall output. In an embodiment, the ASF
outputs c can be used to replace-6; in Figure 4. Since the ASF is applied to each channel before combining, the ASF filtered outputs c, can be kept at a higher bit-depth resolution relative to the final output bit-depth resolution. That is, the combined ASF
outputs can be kept at a higher bit-depth resolution internally for purposes of reference picture processing, while the final output bit-depth resolution can be reduced, for example, by clipping and rounding. The filtering performed by the interpolation module 740, 742 can fill in information that may be discarded by the sampling conducted by samplers 710. In an embodiment, the encoders 712, 714 can use different parameters based on the features set used to partition the input video signals and then to encode signals.
[0062] The filter information i, can be transmitted to the decoder 800, which is shown in FIG. 8. The modified synthesis filter 802, 804 gi' can be derived from the functions gi and f of filters 706, 708, 732-738 so that both encoder 700 and decoder 800 perform equivalent filtering. In ASF, the synthesis filter 732-738 g, is modified to g: in filters 802, 804 to account for the distortions introduced by the coding. It is also possible to modify the analysis filter functions 111 from filters 706, 708 to hi' in filters 806, 808 to account for coding distortions in adaptive analysis filtering (AAF).
Simultaneous AAF
and ASF is also possible. ASF/AAF can be applied to the entire picture or to picture partitions, and a different filter can be applied to different partitions. In an example of AAF, the analysis filter, e.g. 9/7, 3/5, etc., can be selected from a set of filter banks. The filter that is used is based on the qualities of the signal coming into the filter. The coefficients of the AAF filter can be set based on the content of each partition and coding 5 condition. In addition, the filters can be used for generation of sub-band reference data, in case the filter index or coefficients can be transmitted to the decoder to prevent a drift between the encoder and the decoder.
[0063] As seen in FIG. 8. bitstreams bi 716, 718 are supplied to decoders 810, 812, which 10 have complementary parameters to encoders 712, 714. Decoders 810, 812 also receive as inputs coding information i from the encoder 700 as well as from other encoders and decoders in the system. The output of decoders 810, 812 are resampled by samplers 814 and supplied to the filters 802, 804 described above. The filtered decoded bitstreams c", are combined by the combiner 816 to produce reconstructed video signal x'. The 15 reconstructed video signal x' can also be buffered in buffer 818 and processed by filters 806, 808 and sampled by samplers 820 to be supplied as feedback input to the decoders 810, 812.
[0064] The codecs shown in FIGs. 4-5 and 7-8 can be enhanced for HVC. In an
20 embodiment, cross sub-band prediction can be used. For coding a partition with multiple sub-band feature sets, the encoder and the decoder can use the coding information from all the sub-bands that are already decoded and available at the decoder without the need to send any extra information. This is shown by the input of coding information provided to the encoders and decoders. An example of this is the re-use of temporal and spatial predictive information for the co-located sub-bands which are already decoded at the decoder. The issue of cross band prediction is an issue related to the encoder and the decoder. A few schemes which can be used to perform this task in the context of contemporary video encoders and decoders are now described.
21 [0065] One such scheme uses cross sub-band motion vector prediction. Since the motion vectors in corresponding locations in each of the sub-bands point to the same area in the pixel domain of the input video signal x and therefore for the various partitions of x, it is beneficial to use the motion vectors from already coded sub-bands blocks at the corresponding location to derive the motion vector for current block. Two extra modes can be added to the codec to support this feature. One mode is the re-use of motion vectors. In this mode the motion vector used for each block is directly derived from all the motion vectors of the corresponding blocks in the already transmitted sub-bands.
Another mode uses motion vector prediction. In this mode the motion vector used for each block is directly derived by adding a delta motion vector to the predicted motion vector from all the motion vectors of the corresponding blocks in the already transmitted sub-bands.
[0066] Another scheme uses cross sub-band coding mode prediction. Since the structural gradients such as edges in each image location taken from a picture in the video stream or from a partition of the picture can be spilled to corresponding locations in each of the sub-bands, it is beneficial for coding of any given block to re-use the coding mode information from the already coded sub-band blocks at the corresponding location. For example, in this mode the prediction mode for each macroblock can be derived from the corresponding macroblock of the low frequency sub-band.
[0067] Another embodiment of codec enhancement uses reference picture interpolation.
For purposes of reference picture processing, the reconstructed pictures are buffered as seen in FIGs. 4 and 5 and are used as references for coding of future pictures. Since the encoder Ei operates on the filtered/decimated channels, the reference pictures are likewise filtered and decimated by reference picture process Ri performed by filters 432, 434.
However, some encoders may use higher subpixel precision and the function Ri is typically interpolated as shown in FIGs. 9(a) and 9(b) for the case of quarter-pel resolution.
Another mode uses motion vector prediction. In this mode the motion vector used for each block is directly derived by adding a delta motion vector to the predicted motion vector from all the motion vectors of the corresponding blocks in the already transmitted sub-bands.
[0066] Another scheme uses cross sub-band coding mode prediction. Since the structural gradients such as edges in each image location taken from a picture in the video stream or from a partition of the picture can be spilled to corresponding locations in each of the sub-bands, it is beneficial for coding of any given block to re-use the coding mode information from the already coded sub-band blocks at the corresponding location. For example, in this mode the prediction mode for each macroblock can be derived from the corresponding macroblock of the low frequency sub-band.
[0067] Another embodiment of codec enhancement uses reference picture interpolation.
For purposes of reference picture processing, the reconstructed pictures are buffered as seen in FIGs. 4 and 5 and are used as references for coding of future pictures. Since the encoder Ei operates on the filtered/decimated channels, the reference pictures are likewise filtered and decimated by reference picture process Ri performed by filters 432, 434.
However, some encoders may use higher subpixel precision and the function Ri is typically interpolated as shown in FIGs. 9(a) and 9(b) for the case of quarter-pel resolution.
22 [0068] In FIGs. 9(a) and 9(b), the reconstructed input signals x' are provided to the filter Q, 902 and Q', 904. As seen in FIG. 9(a), the reference picture processing operation by filter R, 432 operation uses filter h, 436 and decimates the signal using sampler 440. The interpolation operation typically performed in the encoder can be combined in the filter's Q, 902 operation using quarter-pel interpolation module 910. This overall operation generates quarter-pel resolution reference samples q, 906 of the encoder channel inputs.
Alternatively, another way to generate the interpolated reference picture q,' is shown in Figure 9(b). In this "undecimated interpolation" Q,', the reconstructed output is only filtered in R1' using filter h, 436 and not decimated. The filtered output is then interpolated by half-pel using half-pel interpolation module 912 to generate the quarter-pel reference picture q,' 908. The advantage of Q,' over Q, is that Q,' has access to the "original" (undecimated) half-pel samples, resulting in better half-pel and quarter-pel sample values. The Q,' interpolation can be adapted to the specific characteristics of each channel i, and it can also be extended to any desired subpixel resolution.
[0069] As is understood from the foregoing, each picture, which in series makes up the input video stream x, can be processed as an entire picture, or partitioned into smaller contiguous or overlapping sub-pictures as seen in FIG. 5. The partitions can have fixed or adaptive size and shape. The partitions can be done at the picture level or adaptively.
In an adaptive embodiments, the picture can be segmented into partitions using any of a number of different methods include a tree structure or a two-pass structure where the first path uses fixed blocks and the second pass works on merging blocks.
[0070] In decomposition, the channel analysis and synthesis can be chosen depending on content of the picture and video stream. For the example of filter-based analysis and synthesis, the decomposition can take on any number of horizontal and/or vertical bands, as well as multiple levels of decomposition. The analysis/synthesis filters can be separable or non-separable, and they can be designed to achieve perfect reconstruction in the lossless coding case. Alternatively, for the lossy coding case, they can be jointly designed to minimize the overall end-to-end error or perceptual error. As with the =
Alternatively, another way to generate the interpolated reference picture q,' is shown in Figure 9(b). In this "undecimated interpolation" Q,', the reconstructed output is only filtered in R1' using filter h, 436 and not decimated. The filtered output is then interpolated by half-pel using half-pel interpolation module 912 to generate the quarter-pel reference picture q,' 908. The advantage of Q,' over Q, is that Q,' has access to the "original" (undecimated) half-pel samples, resulting in better half-pel and quarter-pel sample values. The Q,' interpolation can be adapted to the specific characteristics of each channel i, and it can also be extended to any desired subpixel resolution.
[0069] As is understood from the foregoing, each picture, which in series makes up the input video stream x, can be processed as an entire picture, or partitioned into smaller contiguous or overlapping sub-pictures as seen in FIG. 5. The partitions can have fixed or adaptive size and shape. The partitions can be done at the picture level or adaptively.
In an adaptive embodiments, the picture can be segmented into partitions using any of a number of different methods include a tree structure or a two-pass structure where the first path uses fixed blocks and the second pass works on merging blocks.
[0070] In decomposition, the channel analysis and synthesis can be chosen depending on content of the picture and video stream. For the example of filter-based analysis and synthesis, the decomposition can take on any number of horizontal and/or vertical bands, as well as multiple levels of decomposition. The analysis/synthesis filters can be separable or non-separable, and they can be designed to achieve perfect reconstruction in the lossless coding case. Alternatively, for the lossy coding case, they can be jointly designed to minimize the overall end-to-end error or perceptual error. As with the =
23 partitioning, each picture or sub-picture can have a different decomposition.
Examples of such decomposition of the picture or video stream are filter-based, feature-based, content based such as vertical, horizontal, diagonal, features, multiple levels, separable and non-separable, perfect reconstruction (PR) or not PR, and picture and sub-picture adaptive methods.
[0071] For coding by the encoders E, of the channels, existing video coding technologies can be used or adapted. In the case of a decomposition by frequency, the low frequency band may be directly coded as a normal video sequence since it retains many properties of the original video content. Because of this, the framework can be used to maintain "backward compatibility" where the low band is independently decoded using current codec technology. The higher bands can be decoded using future developed technology and used together with the low band to reconstruct at a higher quality. Since each channel or band may exhibit different properties from one another, specific channel coding methods can be applied. Interchannel redundancies can also be exploited spatially and temporally to improve coding efficiency. For example, motion vectors, predicted motion vectors, coefficient scan order, coding mode decisions, and other methods may be derived based upon one or more other channels. In this case, the derived values may need to be appropriately scaled or mapped between channels. The principles can be applied to any video codec, can be backward compatible (e.g. low bands), can be for specific channel coding methods (e.g. high bands) and can exploit interchannel redundancies.
[0072] For reference picture interpolation, a combination of undecimated half-pel samples, interpolated values, and adaptive interpolation filter (AIF) samples for the interpolated positions can be used. For example, some experiments showed it may beneficial to use AIF samples except for high band half-pel positions, where it was beneficial to use the undecimated wavelet samples. Although the half-pel interpolation in
Examples of such decomposition of the picture or video stream are filter-based, feature-based, content based such as vertical, horizontal, diagonal, features, multiple levels, separable and non-separable, perfect reconstruction (PR) or not PR, and picture and sub-picture adaptive methods.
[0071] For coding by the encoders E, of the channels, existing video coding technologies can be used or adapted. In the case of a decomposition by frequency, the low frequency band may be directly coded as a normal video sequence since it retains many properties of the original video content. Because of this, the framework can be used to maintain "backward compatibility" where the low band is independently decoded using current codec technology. The higher bands can be decoded using future developed technology and used together with the low band to reconstruct at a higher quality. Since each channel or band may exhibit different properties from one another, specific channel coding methods can be applied. Interchannel redundancies can also be exploited spatially and temporally to improve coding efficiency. For example, motion vectors, predicted motion vectors, coefficient scan order, coding mode decisions, and other methods may be derived based upon one or more other channels. In this case, the derived values may need to be appropriately scaled or mapped between channels. The principles can be applied to any video codec, can be backward compatible (e.g. low bands), can be for specific channel coding methods (e.g. high bands) and can exploit interchannel redundancies.
[0072] For reference picture interpolation, a combination of undecimated half-pel samples, interpolated values, and adaptive interpolation filter (AIF) samples for the interpolated positions can be used. For example, some experiments showed it may beneficial to use AIF samples except for high band half-pel positions, where it was beneficial to use the undecimated wavelet samples. Although the half-pel interpolation in
24 Q' can be adapted to the signal and noise characteristics of each channel, a lowpass filter can be used for all channels to generate the quarter-pel values.
[0073] It is understood that some features can be adapted in the coding of channels. In an embodiment, the best quantization parameter is chosen for each partition/channel based on RD-cost. Each picture of a video sequence can be partitioned and decomposed into several channels. By allowing different quantization parameters for each partition or channel, the overall performance can be improved.
[0074] To perform optimal bit allocation amongst different sub-bands of the same partition or across different partitions, an RD minimization technique can be used. If the measure of fidelity is peak signal-to-noise ratio (PSNR), it is possible to independently minimize the Lagrangian cost (DA.R) for each sub-band when the same Lagrangian multiplier (X) is used to achieve optimal coding of individual channels and partitions.
[0075] For the low frequency band that preserves most of the natural image content, its RD curve generated by a traditional video codec maintains a convex property, and a quantization parameter (qp) is obtained by a recursive RD cost search. For instance, at the first step, RD costs at qpi=qp, qp2=qp+A, qp3=qp-A are calculated. The value of qp, (i=1,2,or3) that has the smallest cost is used to repeat the process where the new qp is set to qp,. The RD costs at qpi=qp, qp2=qp+A/2, qp3=qp-A/2 are then computed, and this is repeated until the qp increment A becomes 1.
[0076] For high frequency bands, the convex property no longer holds. Instead of the recursive method, an exhaustive search is applied to find the best qp with the lowest RD
cost. The encoding process at different quantization parameters from qp - A to qp + A is then run.
[0077] For example, A is set to be 2 in the low frequency channel search, and this results in a 5x increase in coding complexity in time relative to the case without RD
optimization at the channel level. For the high frequency channel search, A is set to be 3, corresponding to a 7x increase in coding complexity.
[0078] By the above method, an optimal qp for each channel is determined at the expense 5 of multi-pass encoding and increased encoding complexity. Methods for reducing the complexity can be developed that directly assign qp for each channel without going through multi-pass encoding.
[0079] In another embodiment, lambda adjustment can be used for each channel.
As 10 mentioned above, the equal Lagrangian multiplier choice for different sub-bands will result in optimum coding under certain conditions. One such condition is that the distortions from all sub-bands are additive with equal weight in formation of the final reconstructed picture. This observation along the knowledge that compression noise for different sub-bands go through different (synthesis) filters, with different frequency 15 dependent gains, suggest that coding efficiency can be improved by assigning a different Lagrangian function for different sub-bands, depending on the spectral shape of compression noise and the characteristics of the filter. For example, this is done by assigning a scaling factor to the channel lambda, where the scaling factor can be an input parameter from the configuration file.
[0080] In yet another embodiment, picture type determination can be used. An advanced video coding (AVC) encoder may not be very efficient in coding the high frequency sub-bands. Many microblocks (MB) s in HVC are intra coded in predictive slices, including P
and B slices. In some extreme cases, all of MBs in a predictive slice are intra-coded.
Since the context model of the intra MB mode is different for different slice types, the generated bit rates are quite different when the sub-band is coded as an I
slice, P slice or a B slice. In other words, in natural images, the intra MBs are less likely occur in a predictive slice. Therefore, a context model with a low intra MB probability is assigned.
For I slices, a context model with a much higher intra MB probability is assigned. In this case, a predictive slice with all MBs intra-coded consumes more bits than an I
slice even when every MB is coded at the same mode. As a consequence, a different entropy coder can be used for high frequency channels. Moreover, each sub-band can use a different entropy coding technique or coder based on the statistical characteristics of each sub-band. Alternatively, another solution is to code each picture in a channel with a different slice type, and then choose the slice type with the least RD cost.
[0081] For another embodiment, new intra skip mode for each basic coding unit is used.
Intra skip mode benefits sparse data coding for a block-based algorithm where the prediction from already reconstructed neighboring pixels are used to reconstruct the content. High sub-band signals usually contain a lot of flat areas and the high frequency components are sparsely located. It might be advantageous to use one bit to distinguish whether an area is flat or not. In particular, an intra skip mode was defined to indicate an MB with flat content. Whenever an intra skip mode is decided, the area is not coded, no further residual is sent out, and the DC value of the area is predicted by using the pixel values in the neighboring MB.
[0082] Specifically, the intra skip mode is an additional MB level flag. The MB can be any size. In AVC, the MB size is 16x16. For some video codecs, larger MB sizes (32x32, 64x64, etc.) for high definition video sequences are proposed. Intra skip mode benefits from the larger MB size because of the potential fewer bits generated from the flat areas.
The intra skip mode is only enabled in the coding of the high band signals and disabled in the coding of the low band signals. Because the flat areas in low frequency channel are not as frequent as those in the high frequency channels, generally speaking, the intra skip mode increases the bit rate for low frequency channels while decreasing the bit rate for high frequency channels. The skip mode can also apply to an entire channel or band.
[0083] For yet another embodiment, inloop deblocking filter is used. An inloop deblocking filter helps the RD performance and the visual quality in the AVC
codec.
There are two places where the inloop deblocking filter can be placed in the HVC
encoder. These are illustrated in Figure 10 for the encoder, and in Figure 11 for the corresponding decoder. FIGs. 10 and 11 are configured as the encoder 400 of FIG. 4 and the decoder 500 of FIG. 5 where similar components are numbered similarly and perform the same function as described above. One inloop deblocking filter is a part of the decoder D1 1002, 1004 is at the end of each individual channel reconstruction.
The other inloop deblocking filter 1006 is after channel synthesis and the reconstruction of the full picture by combiner 431. The first inloop deblocking filters 1002, 1004 are used for the channel reconstruction and are an intermediate signal. Its smoothness on the MB
boundaries may improve the final picture reconstruction in an RD sense. It also can result in the intermediate signals varying further away from the true values so that a performance degradation is possible. To overcome this, the inloop deblocking filters 1002, 1004 can be configured for each channel based on the properties of how that channel is to be synthesized. For example the filters 1002, 1004 can be based on the up sampling direction as well as the synthesis filter type.
[0084] On the other hand, the inloop deblocking filter 1006 should be helpful after picture reconstruction. Due to the nature of the sub-band/channel coding, the final reconstructed pictures preserve artifacts other than blockiness, such as ringing effects.
Thus, it is better to redesign the inloop filter to effectively treat those artifacts.
[0085] It is understood that the principles described for inloop deblocking filters 1002-1006 apply to the inloop deblocking filters 1102, 1104 and 1106 that are found in decoder 1100 of FIG. 11.
[0086] In another embodiment, sub-band dependent, entropy coding can be used.
The legacy entropy coders such as VLC tables and CABAC in conventional codecs (AVC, MPEG, etc.) are designed based on the statistical characteristics from natural images in some transform domain (e.g. DCT in case of AVC which tend to follow some mix of Laplacian and Gaussian distributions). The performance of sub-band entropy coding can be enhanced by using an entropy coder based on the statistical characteristics of each sub-band.
[0087] In yet another embodiment, decomposition dependent coefficient scan order can be used. The optimal decompositioning choice for each partition can be indicative of the orientation of features in the partition. Therefore it would be preferable to use a suitable scan order prior to entropy coding of the coding transform coefficients. For example, it is possible to assign a specific scan order to each sub-band for each of the available decomposition schemes. Thus, no extra information needs to be sent to communicate the choice of scan order. Alternatively, it is possible to selectively choose and communicate the scanning pattern of the coded coefficients, such as quantized DCT
coefficients in the case of AVC, from a list of possible scan order choices and send this scan order selection for each coded sub-band of each partition. This requires the selection choices be sent for each sub-band of the given decomposition for a given partition. This scan order can also be predicted from the already coded sub-bands with the same directional preference. In addition, fixed scan order per sub-band and per decomposition choice can be performed.
Alternatively, a selective scanning pattern per sub-band in a partition can be used.
[0088] In an embodiment, sub-band distortion adjustment can be used. Sub-band distortion can be based on the creation of more information from some sub-bands while not producing any information for other sub-bands. Such distortion adjustments can be done via distortion synthesis or by distortion mapping from sub-bands to the pixel domain. In the general case, the sub-band distortion can be first mapped to some frequency domain and then weighted according to the frequency response of the sub-band synthesis process. In conventional video coding schemes, many of the coding decisions are carried out by minimization of a rate-distortion cost. The measured distortion in each sub-band does not necessarily reflect the final impact of the distortion from that sub-band to the final reconstructed picture or picture partition. For perceptual quality metrics, this is more obvious where the same amount of distortion, e.g. MSE in one of the frequency sub-bands would have a different perceptual impact for the final reconstructed image than the same amount of distortion in a different sub-band. For non-subjective quality measures such as MSE, the spectral density of distortion can impact the distortion in the quality of synthesized partition.
[0089] To address this, it is possible to insert the noisy block into the otherwise noiseless image partition. In addition, sub-band up-sampling and synthesis filtering may be necessary before calculating the distortion for that given block.
Alternatively, it is possible to use a fixed mapping from distortion in sub-band data to a distortion in the final synthesized partition. For perceptual quality metrics, this may involve gathering subjective test results to generate the mapping function. For a more general case, the sub-band distortion can be mapped to some finer frequency sub-bands where the total distortion would be a weighted sum of each sub-sub-band distortion according to the combined frequency response from the upsampling and synthesis filtering.
[0090] In another embodiment, range adjustment is provided. It is possible that sub-band data can be a floating point that needs to be converted to integer point with certain dynamic range. The encoder may not be able to handle the floating point input so the input is changed to compensate for what is being received. This can be achieved by using integer implementation of sub-band decomposition via a lifting scheme.
Alternatively, a generic bounded quantizer can be used that is constructed by using a continuous non-decreasing mapping curve (e.g. a sigmoid) followed by a uniform quantizer. The parameters for the mapping curves should be known by the decoder or passed to it to reconstruct the sub-band signal prior to upsampling and synthesis.
[0091] The I-IVC described offers several advantages.
Frequency sub-band decomposition can provide better band-separation for better spatiotemporal prediction and coding efficiency. Since most of the energy in typical video content is concentrated in a few sub-bands, more efficient coding or band-skipping can be performed for the low-energy bands.
Sub-band dependent quantization, entropy coding, and subjective/objective optimization can also be performed. This can be used to perform coding according to the perceptual importance of each sub-band. Also, compared to other prefiltering only approaches, a critically sampled decomposition does not increase the number of samples and perfect reconstruction is possible.
[0092] From a predictive coding perspective, HVC adds cross sub-band prediction in 5 addition to the spatial and temporal prediction. Each sub-band can be coded using a picture type (e.g. I/P/B slices) different from the other sub-bands as long as it adheres to the picture/partition type (e.g. an Intra type partition can only have Intra type coding for all its sub-bands). By virtue of the decomposition, the virtual coding units and transform units are extended without the need for explicitly designing new prediction modes, sub-10 partitioning schemes, transforms, coefficient scans, entropy coding, etc.
[0093] Lower computational complexity is possible in HVC where time-consuming operations such as, for example, motion estimation (ME), are performed only on the decimated low frequency sub-bands.
Parallel processing of sub-bands and 15 decompositions is also possible.
[0094] Because the HVC framework is independent of the particular channel or sub-band coding used, it can utilize different compression schemes for the different bands. It does not conflict with other proposed coding tools (e.g. KTA and the proposed JCT-VC) and 20 can provide additional coding gains on top of other coding tools.
[0095] The principles of HVC described above for 2D video streaming can also apply to 3D video outputs such as for 3DTV. HVC can also take most advantage of the compression technologies, newer encoding and decoding hardware is required.
Because
[0073] It is understood that some features can be adapted in the coding of channels. In an embodiment, the best quantization parameter is chosen for each partition/channel based on RD-cost. Each picture of a video sequence can be partitioned and decomposed into several channels. By allowing different quantization parameters for each partition or channel, the overall performance can be improved.
[0074] To perform optimal bit allocation amongst different sub-bands of the same partition or across different partitions, an RD minimization technique can be used. If the measure of fidelity is peak signal-to-noise ratio (PSNR), it is possible to independently minimize the Lagrangian cost (DA.R) for each sub-band when the same Lagrangian multiplier (X) is used to achieve optimal coding of individual channels and partitions.
[0075] For the low frequency band that preserves most of the natural image content, its RD curve generated by a traditional video codec maintains a convex property, and a quantization parameter (qp) is obtained by a recursive RD cost search. For instance, at the first step, RD costs at qpi=qp, qp2=qp+A, qp3=qp-A are calculated. The value of qp, (i=1,2,or3) that has the smallest cost is used to repeat the process where the new qp is set to qp,. The RD costs at qpi=qp, qp2=qp+A/2, qp3=qp-A/2 are then computed, and this is repeated until the qp increment A becomes 1.
[0076] For high frequency bands, the convex property no longer holds. Instead of the recursive method, an exhaustive search is applied to find the best qp with the lowest RD
cost. The encoding process at different quantization parameters from qp - A to qp + A is then run.
[0077] For example, A is set to be 2 in the low frequency channel search, and this results in a 5x increase in coding complexity in time relative to the case without RD
optimization at the channel level. For the high frequency channel search, A is set to be 3, corresponding to a 7x increase in coding complexity.
[0078] By the above method, an optimal qp for each channel is determined at the expense 5 of multi-pass encoding and increased encoding complexity. Methods for reducing the complexity can be developed that directly assign qp for each channel without going through multi-pass encoding.
[0079] In another embodiment, lambda adjustment can be used for each channel.
As 10 mentioned above, the equal Lagrangian multiplier choice for different sub-bands will result in optimum coding under certain conditions. One such condition is that the distortions from all sub-bands are additive with equal weight in formation of the final reconstructed picture. This observation along the knowledge that compression noise for different sub-bands go through different (synthesis) filters, with different frequency 15 dependent gains, suggest that coding efficiency can be improved by assigning a different Lagrangian function for different sub-bands, depending on the spectral shape of compression noise and the characteristics of the filter. For example, this is done by assigning a scaling factor to the channel lambda, where the scaling factor can be an input parameter from the configuration file.
[0080] In yet another embodiment, picture type determination can be used. An advanced video coding (AVC) encoder may not be very efficient in coding the high frequency sub-bands. Many microblocks (MB) s in HVC are intra coded in predictive slices, including P
and B slices. In some extreme cases, all of MBs in a predictive slice are intra-coded.
Since the context model of the intra MB mode is different for different slice types, the generated bit rates are quite different when the sub-band is coded as an I
slice, P slice or a B slice. In other words, in natural images, the intra MBs are less likely occur in a predictive slice. Therefore, a context model with a low intra MB probability is assigned.
For I slices, a context model with a much higher intra MB probability is assigned. In this case, a predictive slice with all MBs intra-coded consumes more bits than an I
slice even when every MB is coded at the same mode. As a consequence, a different entropy coder can be used for high frequency channels. Moreover, each sub-band can use a different entropy coding technique or coder based on the statistical characteristics of each sub-band. Alternatively, another solution is to code each picture in a channel with a different slice type, and then choose the slice type with the least RD cost.
[0081] For another embodiment, new intra skip mode for each basic coding unit is used.
Intra skip mode benefits sparse data coding for a block-based algorithm where the prediction from already reconstructed neighboring pixels are used to reconstruct the content. High sub-band signals usually contain a lot of flat areas and the high frequency components are sparsely located. It might be advantageous to use one bit to distinguish whether an area is flat or not. In particular, an intra skip mode was defined to indicate an MB with flat content. Whenever an intra skip mode is decided, the area is not coded, no further residual is sent out, and the DC value of the area is predicted by using the pixel values in the neighboring MB.
[0082] Specifically, the intra skip mode is an additional MB level flag. The MB can be any size. In AVC, the MB size is 16x16. For some video codecs, larger MB sizes (32x32, 64x64, etc.) for high definition video sequences are proposed. Intra skip mode benefits from the larger MB size because of the potential fewer bits generated from the flat areas.
The intra skip mode is only enabled in the coding of the high band signals and disabled in the coding of the low band signals. Because the flat areas in low frequency channel are not as frequent as those in the high frequency channels, generally speaking, the intra skip mode increases the bit rate for low frequency channels while decreasing the bit rate for high frequency channels. The skip mode can also apply to an entire channel or band.
[0083] For yet another embodiment, inloop deblocking filter is used. An inloop deblocking filter helps the RD performance and the visual quality in the AVC
codec.
There are two places where the inloop deblocking filter can be placed in the HVC
encoder. These are illustrated in Figure 10 for the encoder, and in Figure 11 for the corresponding decoder. FIGs. 10 and 11 are configured as the encoder 400 of FIG. 4 and the decoder 500 of FIG. 5 where similar components are numbered similarly and perform the same function as described above. One inloop deblocking filter is a part of the decoder D1 1002, 1004 is at the end of each individual channel reconstruction.
The other inloop deblocking filter 1006 is after channel synthesis and the reconstruction of the full picture by combiner 431. The first inloop deblocking filters 1002, 1004 are used for the channel reconstruction and are an intermediate signal. Its smoothness on the MB
boundaries may improve the final picture reconstruction in an RD sense. It also can result in the intermediate signals varying further away from the true values so that a performance degradation is possible. To overcome this, the inloop deblocking filters 1002, 1004 can be configured for each channel based on the properties of how that channel is to be synthesized. For example the filters 1002, 1004 can be based on the up sampling direction as well as the synthesis filter type.
[0084] On the other hand, the inloop deblocking filter 1006 should be helpful after picture reconstruction. Due to the nature of the sub-band/channel coding, the final reconstructed pictures preserve artifacts other than blockiness, such as ringing effects.
Thus, it is better to redesign the inloop filter to effectively treat those artifacts.
[0085] It is understood that the principles described for inloop deblocking filters 1002-1006 apply to the inloop deblocking filters 1102, 1104 and 1106 that are found in decoder 1100 of FIG. 11.
[0086] In another embodiment, sub-band dependent, entropy coding can be used.
The legacy entropy coders such as VLC tables and CABAC in conventional codecs (AVC, MPEG, etc.) are designed based on the statistical characteristics from natural images in some transform domain (e.g. DCT in case of AVC which tend to follow some mix of Laplacian and Gaussian distributions). The performance of sub-band entropy coding can be enhanced by using an entropy coder based on the statistical characteristics of each sub-band.
[0087] In yet another embodiment, decomposition dependent coefficient scan order can be used. The optimal decompositioning choice for each partition can be indicative of the orientation of features in the partition. Therefore it would be preferable to use a suitable scan order prior to entropy coding of the coding transform coefficients. For example, it is possible to assign a specific scan order to each sub-band for each of the available decomposition schemes. Thus, no extra information needs to be sent to communicate the choice of scan order. Alternatively, it is possible to selectively choose and communicate the scanning pattern of the coded coefficients, such as quantized DCT
coefficients in the case of AVC, from a list of possible scan order choices and send this scan order selection for each coded sub-band of each partition. This requires the selection choices be sent for each sub-band of the given decomposition for a given partition. This scan order can also be predicted from the already coded sub-bands with the same directional preference. In addition, fixed scan order per sub-band and per decomposition choice can be performed.
Alternatively, a selective scanning pattern per sub-band in a partition can be used.
[0088] In an embodiment, sub-band distortion adjustment can be used. Sub-band distortion can be based on the creation of more information from some sub-bands while not producing any information for other sub-bands. Such distortion adjustments can be done via distortion synthesis or by distortion mapping from sub-bands to the pixel domain. In the general case, the sub-band distortion can be first mapped to some frequency domain and then weighted according to the frequency response of the sub-band synthesis process. In conventional video coding schemes, many of the coding decisions are carried out by minimization of a rate-distortion cost. The measured distortion in each sub-band does not necessarily reflect the final impact of the distortion from that sub-band to the final reconstructed picture or picture partition. For perceptual quality metrics, this is more obvious where the same amount of distortion, e.g. MSE in one of the frequency sub-bands would have a different perceptual impact for the final reconstructed image than the same amount of distortion in a different sub-band. For non-subjective quality measures such as MSE, the spectral density of distortion can impact the distortion in the quality of synthesized partition.
[0089] To address this, it is possible to insert the noisy block into the otherwise noiseless image partition. In addition, sub-band up-sampling and synthesis filtering may be necessary before calculating the distortion for that given block.
Alternatively, it is possible to use a fixed mapping from distortion in sub-band data to a distortion in the final synthesized partition. For perceptual quality metrics, this may involve gathering subjective test results to generate the mapping function. For a more general case, the sub-band distortion can be mapped to some finer frequency sub-bands where the total distortion would be a weighted sum of each sub-sub-band distortion according to the combined frequency response from the upsampling and synthesis filtering.
[0090] In another embodiment, range adjustment is provided. It is possible that sub-band data can be a floating point that needs to be converted to integer point with certain dynamic range. The encoder may not be able to handle the floating point input so the input is changed to compensate for what is being received. This can be achieved by using integer implementation of sub-band decomposition via a lifting scheme.
Alternatively, a generic bounded quantizer can be used that is constructed by using a continuous non-decreasing mapping curve (e.g. a sigmoid) followed by a uniform quantizer. The parameters for the mapping curves should be known by the decoder or passed to it to reconstruct the sub-band signal prior to upsampling and synthesis.
[0091] The I-IVC described offers several advantages.
Frequency sub-band decomposition can provide better band-separation for better spatiotemporal prediction and coding efficiency. Since most of the energy in typical video content is concentrated in a few sub-bands, more efficient coding or band-skipping can be performed for the low-energy bands.
Sub-band dependent quantization, entropy coding, and subjective/objective optimization can also be performed. This can be used to perform coding according to the perceptual importance of each sub-band. Also, compared to other prefiltering only approaches, a critically sampled decomposition does not increase the number of samples and perfect reconstruction is possible.
[0092] From a predictive coding perspective, HVC adds cross sub-band prediction in 5 addition to the spatial and temporal prediction. Each sub-band can be coded using a picture type (e.g. I/P/B slices) different from the other sub-bands as long as it adheres to the picture/partition type (e.g. an Intra type partition can only have Intra type coding for all its sub-bands). By virtue of the decomposition, the virtual coding units and transform units are extended without the need for explicitly designing new prediction modes, sub-10 partitioning schemes, transforms, coefficient scans, entropy coding, etc.
[0093] Lower computational complexity is possible in HVC where time-consuming operations such as, for example, motion estimation (ME), are performed only on the decimated low frequency sub-bands.
Parallel processing of sub-bands and 15 decompositions is also possible.
[0094] Because the HVC framework is independent of the particular channel or sub-band coding used, it can utilize different compression schemes for the different bands. It does not conflict with other proposed coding tools (e.g. KTA and the proposed JCT-VC) and 20 can provide additional coding gains on top of other coding tools.
[0095] The principles of HVC described above for 2D video streaming can also apply to 3D video outputs such as for 3DTV. HVC can also take most advantage of the compression technologies, newer encoding and decoding hardware is required.
Because
25 of this, there has been recent interest in systems that provide a 3D
compatible signal using existing 2D codec technology. Such a "base layer" (BL) signal would be backward compatible with existing 2D hardware, while newer systems with 3D hardware can take advantage of additional "enhancement layer" (EL) signals to deliver higher quality 3D
signals.
[0096] One way to achieve such migration path coding to 3D is to use a side-by-side or top/bottom 3D panel format for the BL, and use the two full resolution views for the EL.
The BL can be encoded and decoded using existing 2D compression such as AVC
with only small additional changes to handle the proper signaling of the 3D format (e.g. frame packing SEI messages and HDMI 1.4 signaling). Newer 3D systems can decode both BL
and EL and use them to reconstruct the full resolution 3D signals.
[0097] For 3D video coding the BL and the EL may have concatenating views. For the BL, the first two views, e.g. left and right views, may be concatenated and then the concatenated 2x picture would be decomposed to yield the BL. Alternatively, a view can be decomposed and then the low frequency sub-bands from each view can be concatenated to yield the BL. In this approach the decomposition process does not mix information from either view. For the EL, the first two views may be concatenated and then the concatenated 2x picture would be decomposed to yield the enhancement layer.
Each view may be decomposed and then coded by one enhancement layer or two enhancement layers. In the one enhancement layer embodiment, the high frequency sub-bands for each view would be concatenated to yield the EL as large as the base layer. In the two layer embodiment, the high frequency sub-band for one view would be coded first, as the first enhancement layer and then the high frequency sub-band for the other view would be coded as the second enhancement layer. In this approach the EL 1 can use the already coded EL 0 as a reference for coding predictions.
[0098] Figure 12 shows the approach to migration path coding using scalable video coding (SVC) compression 1200 for the side-by-side case. As can be understood, the extension to other 3D formats (e.g. top/bottom, checkerboard, etc.) is straightforward.
Thus, the description focuses on the side-by-side case. The EL 1202 is a concatenated double-width version of the two full resolution views 1204, while the BL 1206 is generally a filtered and horizontally subsampled version of the EL 1204. SVC
spatial scalability tools can then be used to encode the BL 1206 and EL 1204, where the BL is AVC-encoded. Both full resolution views can be extracted from the decoded EL.
[0099] Another possibility for migration path coding is to use multiview video coding (MVC) compression. In the MVC approach, the two full resolution views are typically sampled without filtering to produce two panels. In Figure 13, the BL panel contains the even columns of both the left and right views in the full resolution 1304. The EL panel 1306 contains the odd columns of both views 1304. It is also possible for the BL 1302 to contain the even column of one view and the odd column of the other view, or vice-versa, while the EL 1306 would contain the other parity. The BL panel 1302 and EL panel 1306 can then coded as two views using MVC, where the GOP coding structure is chosen so that the BL is the independent AVC-encoded view, while the EL is coded as a dependent view. After decoding both BL and EL, the two full resolution views can be generated by appropriately re-interleaving the BL and EL columns. Prefiltering is typically not performed in generating the BL and EL views so that the original full resolution views can be recovered in the absence of coding distortion.
[00100] Turning to FIG. 14, it is possible to apply HVC in migration path 3DTV
coding since typical video content tends to be low-frequency in nature. When the input to HVC is a concatenated double-width version of the two full resolution views, the BL
1402 is the low frequency band in a 2-band horizontal decomposition (for the side-by-side case) of the full resolution view 1406, and the EL 1404 can be the high frequency band.
[00101] This HVC approach to 3DTV migration path coding by encoder 1500 is shown in FIG. 15, which is an application and special case of the general HVC
approach.
As seen, many of the principles discussed above are included in the migration path for this 3DTV approach. A low frequency encoding path using of input video coding stream x 1502 is shown using some of the principles described in connection with FIG.
4. Since it is desired that the BL be AVC-compliant, the top low-frequency channel in Figure 15 uses AVC tools for encoding. A path of the stream x 1502 is filtered using filter ho 1504 and decimated by sampler 1506. A range adjustment modules 1508 restricts the range of the base layer as described in more detail below. Information infoRA can be used by the encoder shown, the corresponding decoder (see FIG. 16) as well as other encoders etc. as described above. The restricted input signal is then provided to encoder E0 1510 to produce bitstream bo 1512. Coding information i01 which contains information regarding the high and low band signals form the encoder, decoder or other channels is provided to the encoder 1526 to improve the performance. As is understood, the bitstream bo can be reconstructed using a reconstruction loop.
The reconstruction loop includes a complementary decoder Do 1514, range adjustment module RA' 1516, sampler 1518 and filter go 1520.
[00102] A
high frequency encoding path is also provided, which is described in connection with FIG. 7. Unlike the low frequency channel discussed above, the high frequency channel can use additional coding tools such as undecimated interpolation, ASF, cross sub-band mode and motion vector prediction, Intra Skip mode, etc.
The high frequency channel can even be coded dependently where one view is independently encoded and the other view is dependently encoded. As described in connection with FIG. 7, the high frequency band includes the filter III 1522 that filters the high frequency input stream x that is then decimated by sampler 1524. Encoder El 1526 encodes the filtered and decimated signal to form bitstream b1 1528.
[00103]
Like the low frequency channel, the high frequency channel includes a decoder DI 1529 which feeds a decoded signal to the interpolation module 1530.
The interpolation module 1530 is provided for the high frequency channel to produce information info] 1532. The interpolation module 1530 corresponds to the interpolation module 726 shown in FIG. 7 and includes samplers 728, 730, filters gi 734, 738, FEi filter 704, and filterfi 742 to produce information info]. The output from the decoded low frequency input stream 1521 and from the interpolation module 1532 are combined by combiner 1534 to produce the reconstructed signal x' 1536.
[00104] The reconstructed signal x' 1536 is also provided to the buffer 1538, which is similar to the buffers described above. The buffered signal can be supplied to reference picture processing module Q' I 1540 as described in connection with FIG. 9(b).
The output of the reference picture processing module is supplied to the high frequency encoder El 1526. As shown, the information ioi from the reference picture processing module that includes coding the low frequency channel can be used in coding the high frequency channel, but not necessarily vice-versa.
[00105] Since the BL is often constrained to be 8 bits per color component in 3DTV, it is important that the output of the filter 110 (and decimation) be limited in bit-depth to 8 bits. One way to comply with restricted dynamic range of the base layer is to use some Range Adjustment (RA) operation performed by RA module 1508. The RA
module 1508 is intended to map the input values into the desired bit-depth. In general the RA process can be accomplished by a Bounded Quantization (uniform or non-uniform) of the input values. For example, one possible RA operation can be defined as RAout = clip(round(scale * RAin + offset)), where round() approximates to the nearest integer, and clip() limits the range of values to [min, max] (e.g. [0, 255] for 8 bits), and scale # 0. Other RA operations can be defined, including ones that operate simultaneously on a group of input and output values. The RA parameter information needs to be sent to the decoder (as infoRA) if these parameters are not fixed or somehow are not known to the decoder. The "inverse" RA' module 1516 rescales the values back to the original range, but of course with some possible loss due to rounding and clipping in the forward RA operation, where:
RA-lout = (RA-lin - o ffs et)/s cale .
[00106] Range adjustment of the BL provides for acceptable visual quality by scaling and shifting the sub-band data, or by using a more general nonlinear transformation. In an embodiment of fixed scaling, a fix scaling is set such that the dc gain of synthesis filter and scaling is one. In adaptive scaling and shifting two parameters of scale and shift for each view are selected such that the normalized histogram of that view in the BL has the same mean and variance as the normalized histogram of the 5 corresponding original view.
[00107] The corresponding decoder 1600 shown in FIG. 16 also performs the RA-1 operation, but only for purposes of reconstructing the double-width concatenated full resolution views, as the BL is assumed to be only AVC decoded and output. The decoder 10 1600 includes a low frequency channel decoder Do 1602 which can produce a decoded video signal x1 for the base layer. The decoded signal is supplied to the reverse range adjustment module RA-1 1604 that is resampled by sampler 1606 and filtered by filter go 1608 to produce the low frequency reconstructed signal 2'0 1610. For the high frequency path, the decoder DI 1612 decodes the signal that is then resampled by sampler 1614 and 15 filtered by filter g' I 1616. Information info, can be provided to the filter 1616. The output of the filter 1616 produces reconstructed signal-61 1617. The reconstructed low frequency and high frequency signals are combined by combiner 1618 to create the reconstructed video signal 1620. The reconstructed video signal 1620 is supplied to the buffer 1621 to be used by other encoders and decoders. The buffered signal can also 20 be provided to a reference picture processing module 1624 that is fed back into the high frequency decoder DI.
[00108] The specific choice of RA modules can be determined based on perceptual and/or coding efficiency considerations and tradeoffs. From a coding efficiency point of 25 view, it is often desirable to make use of the entire output dynamic range specified by the bit-depth. Since the input dynamic range to RA is generally different for each picture or partition, the parameters that maximize the output dynamic range will differ among pictures. Although this may not be a problem from a coding point of view, it may cause problems when the BL is decoded and directly viewed, as the RA-1 operation may not be performed before being viewed, possibly leading to variations in brightness and contrast.
This is in contrast to the more general HVC, where the individual channels are internal and not intended to be viewed. An alternative solution to remedy the loss of information, associated with the RA process, is to use an integer implementation of sub-band coding using a lifting scheme which brings the base band layer to the desired dynamic range.
[00109] If the AVC-encoded BL supports the adaptive range scaling per picture or partition RA-1 (such as through SEI messaging), then the RA and RA-1 operations can be chosen to optimize both perceptual quality and coding efficiency. In the absence of such decoder processing for the BL and/or information about the input dynamic range, one possibility is to choose a fixed RA to preserve some desired visual characteristic. For example, if the analysis filter 110 1504 has a DC gain of a # 0, a reasonable choice of RA
in module 1508 is to set gain = 1/a and offset = 0.
[00110] It is worth noting that although it is not shown in FIGs. 15 and 16, the EL
can also undergo similar RA and RA-1 operations. However, the EL bitdepth is typically higher than that required by the BL. Also, the analysis, synthesis, and reference picture filtering of the concatenated double-width picture by hi and gi in FIGs. 15 and 16 can be performed so that there is no mixing of views around the view border (in contrast to SVC
filtering). This can be achieved, for example, by symmetric padding and extension of a given view at the border, similar to that used at the other picture edges.
[00111] In view of the foregoing, the discussed HVC video coding provides a framework that offers many advantages and flexibility from traditional pixel domain video coding. An application of the HVC coding approach can used to provide a scalable migration path to 3DTV coding. Its performance appears to provide some promising gains compared to other scalable approaches such as SVC and MVC. It uses existing AVC technology for the lower resolution 3DTV BL, and allows for additional tools for improving coding efficiency of the EL and full resolution views.
1001121 Turning to FIG. 17, the devices described above perform a method 1700 of encoding an input video stream. The input video stream is received 1702 at a head end of a video distribution system described and is divided 1704 into a series of partitions based on at least one feature set of the input video stream. The feature set can be any type of features of the video stream including features of the content, context, quality and coding functions of the video stream. In addition, the input video stream can be partitioned according to the various channels of the video stream such that each channel is separately divided according to the same or different feature sets. After dividing, the partitions of the input video stream are processed and analyzed to decompose 1706 the partitions for encoding by such operations as decimation and sampling of the partitions.
The decomposed partitions are then encoded 1708 to produced encoded bitstreams. As a part of the encoding process, coding information can be provided to the encoder. The coding information can include input information from the other channels of the input video stream as well as coding information based on a reconstructed video stream.
Coding information can also include information regarding control and quality information about the video stream as well as information regarding the feature sets. In an embodiment, the encoded bitstream is reconstructed 1710 into a reconstructed video stream which can be buffered and stored 1712. The reconstructed video stream can be fed back 1714 into the encoder and used as coding information as well as provided 1716 to encoders for other channels of the input video stream. As understood from the description above, the process of reconstructing the video stream as well as providing the reconstructed video stream as coding information can include the processes of analyzing and synthesizing the encoded bitstreams and reconstructed video stream.
1001131 FIG. 18 is a flow chart that illustrates a method 1800 of decoding encoded bitstreams that are formed as a result of the method shown in FIG. 17. The encoded bitstreams are received 1802 by a subscriber unit 150a-n as a part of a video distribution system. The bitstreams are decoded 1804 using coding information that is received by the decoder. The decoding information can be received as a part of the bitstream or it can be stored by the decoder. In addition, the coding information can be received from different channels for the video stream. The decoded bitstream is then synthesized 1806 into a series of partitions that are then combined 1808 to create a reconstructed video stream that corresponds to the input video stream described in connection with FIG.
17.
[00114] In the foregoing specification, specific embodiments of the present invention have been described. However, one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present invention as set forth in the claims below. Accordingly, the specification and figures are to be regarded in an illustrative rather than a restrictive sense, and all such modifications are intended to be included within the scope of present invention. The benefits, advantages, solutions to problems, and any element(s) that may cause any benefit, advantage, or solution to occur or become more pronounced are not to be construed as a critical, required, or essential features or elements of any or all the claims.
The invention is defined solely by the appended claims including any amendments made during the pendency of this application and all equivalents of those claims as issued.
compatible signal using existing 2D codec technology. Such a "base layer" (BL) signal would be backward compatible with existing 2D hardware, while newer systems with 3D hardware can take advantage of additional "enhancement layer" (EL) signals to deliver higher quality 3D
signals.
[0096] One way to achieve such migration path coding to 3D is to use a side-by-side or top/bottom 3D panel format for the BL, and use the two full resolution views for the EL.
The BL can be encoded and decoded using existing 2D compression such as AVC
with only small additional changes to handle the proper signaling of the 3D format (e.g. frame packing SEI messages and HDMI 1.4 signaling). Newer 3D systems can decode both BL
and EL and use them to reconstruct the full resolution 3D signals.
[0097] For 3D video coding the BL and the EL may have concatenating views. For the BL, the first two views, e.g. left and right views, may be concatenated and then the concatenated 2x picture would be decomposed to yield the BL. Alternatively, a view can be decomposed and then the low frequency sub-bands from each view can be concatenated to yield the BL. In this approach the decomposition process does not mix information from either view. For the EL, the first two views may be concatenated and then the concatenated 2x picture would be decomposed to yield the enhancement layer.
Each view may be decomposed and then coded by one enhancement layer or two enhancement layers. In the one enhancement layer embodiment, the high frequency sub-bands for each view would be concatenated to yield the EL as large as the base layer. In the two layer embodiment, the high frequency sub-band for one view would be coded first, as the first enhancement layer and then the high frequency sub-band for the other view would be coded as the second enhancement layer. In this approach the EL 1 can use the already coded EL 0 as a reference for coding predictions.
[0098] Figure 12 shows the approach to migration path coding using scalable video coding (SVC) compression 1200 for the side-by-side case. As can be understood, the extension to other 3D formats (e.g. top/bottom, checkerboard, etc.) is straightforward.
Thus, the description focuses on the side-by-side case. The EL 1202 is a concatenated double-width version of the two full resolution views 1204, while the BL 1206 is generally a filtered and horizontally subsampled version of the EL 1204. SVC
spatial scalability tools can then be used to encode the BL 1206 and EL 1204, where the BL is AVC-encoded. Both full resolution views can be extracted from the decoded EL.
[0099] Another possibility for migration path coding is to use multiview video coding (MVC) compression. In the MVC approach, the two full resolution views are typically sampled without filtering to produce two panels. In Figure 13, the BL panel contains the even columns of both the left and right views in the full resolution 1304. The EL panel 1306 contains the odd columns of both views 1304. It is also possible for the BL 1302 to contain the even column of one view and the odd column of the other view, or vice-versa, while the EL 1306 would contain the other parity. The BL panel 1302 and EL panel 1306 can then coded as two views using MVC, where the GOP coding structure is chosen so that the BL is the independent AVC-encoded view, while the EL is coded as a dependent view. After decoding both BL and EL, the two full resolution views can be generated by appropriately re-interleaving the BL and EL columns. Prefiltering is typically not performed in generating the BL and EL views so that the original full resolution views can be recovered in the absence of coding distortion.
[00100] Turning to FIG. 14, it is possible to apply HVC in migration path 3DTV
coding since typical video content tends to be low-frequency in nature. When the input to HVC is a concatenated double-width version of the two full resolution views, the BL
1402 is the low frequency band in a 2-band horizontal decomposition (for the side-by-side case) of the full resolution view 1406, and the EL 1404 can be the high frequency band.
[00101] This HVC approach to 3DTV migration path coding by encoder 1500 is shown in FIG. 15, which is an application and special case of the general HVC
approach.
As seen, many of the principles discussed above are included in the migration path for this 3DTV approach. A low frequency encoding path using of input video coding stream x 1502 is shown using some of the principles described in connection with FIG.
4. Since it is desired that the BL be AVC-compliant, the top low-frequency channel in Figure 15 uses AVC tools for encoding. A path of the stream x 1502 is filtered using filter ho 1504 and decimated by sampler 1506. A range adjustment modules 1508 restricts the range of the base layer as described in more detail below. Information infoRA can be used by the encoder shown, the corresponding decoder (see FIG. 16) as well as other encoders etc. as described above. The restricted input signal is then provided to encoder E0 1510 to produce bitstream bo 1512. Coding information i01 which contains information regarding the high and low band signals form the encoder, decoder or other channels is provided to the encoder 1526 to improve the performance. As is understood, the bitstream bo can be reconstructed using a reconstruction loop.
The reconstruction loop includes a complementary decoder Do 1514, range adjustment module RA' 1516, sampler 1518 and filter go 1520.
[00102] A
high frequency encoding path is also provided, which is described in connection with FIG. 7. Unlike the low frequency channel discussed above, the high frequency channel can use additional coding tools such as undecimated interpolation, ASF, cross sub-band mode and motion vector prediction, Intra Skip mode, etc.
The high frequency channel can even be coded dependently where one view is independently encoded and the other view is dependently encoded. As described in connection with FIG. 7, the high frequency band includes the filter III 1522 that filters the high frequency input stream x that is then decimated by sampler 1524. Encoder El 1526 encodes the filtered and decimated signal to form bitstream b1 1528.
[00103]
Like the low frequency channel, the high frequency channel includes a decoder DI 1529 which feeds a decoded signal to the interpolation module 1530.
The interpolation module 1530 is provided for the high frequency channel to produce information info] 1532. The interpolation module 1530 corresponds to the interpolation module 726 shown in FIG. 7 and includes samplers 728, 730, filters gi 734, 738, FEi filter 704, and filterfi 742 to produce information info]. The output from the decoded low frequency input stream 1521 and from the interpolation module 1532 are combined by combiner 1534 to produce the reconstructed signal x' 1536.
[00104] The reconstructed signal x' 1536 is also provided to the buffer 1538, which is similar to the buffers described above. The buffered signal can be supplied to reference picture processing module Q' I 1540 as described in connection with FIG. 9(b).
The output of the reference picture processing module is supplied to the high frequency encoder El 1526. As shown, the information ioi from the reference picture processing module that includes coding the low frequency channel can be used in coding the high frequency channel, but not necessarily vice-versa.
[00105] Since the BL is often constrained to be 8 bits per color component in 3DTV, it is important that the output of the filter 110 (and decimation) be limited in bit-depth to 8 bits. One way to comply with restricted dynamic range of the base layer is to use some Range Adjustment (RA) operation performed by RA module 1508. The RA
module 1508 is intended to map the input values into the desired bit-depth. In general the RA process can be accomplished by a Bounded Quantization (uniform or non-uniform) of the input values. For example, one possible RA operation can be defined as RAout = clip(round(scale * RAin + offset)), where round() approximates to the nearest integer, and clip() limits the range of values to [min, max] (e.g. [0, 255] for 8 bits), and scale # 0. Other RA operations can be defined, including ones that operate simultaneously on a group of input and output values. The RA parameter information needs to be sent to the decoder (as infoRA) if these parameters are not fixed or somehow are not known to the decoder. The "inverse" RA' module 1516 rescales the values back to the original range, but of course with some possible loss due to rounding and clipping in the forward RA operation, where:
RA-lout = (RA-lin - o ffs et)/s cale .
[00106] Range adjustment of the BL provides for acceptable visual quality by scaling and shifting the sub-band data, or by using a more general nonlinear transformation. In an embodiment of fixed scaling, a fix scaling is set such that the dc gain of synthesis filter and scaling is one. In adaptive scaling and shifting two parameters of scale and shift for each view are selected such that the normalized histogram of that view in the BL has the same mean and variance as the normalized histogram of the 5 corresponding original view.
[00107] The corresponding decoder 1600 shown in FIG. 16 also performs the RA-1 operation, but only for purposes of reconstructing the double-width concatenated full resolution views, as the BL is assumed to be only AVC decoded and output. The decoder 10 1600 includes a low frequency channel decoder Do 1602 which can produce a decoded video signal x1 for the base layer. The decoded signal is supplied to the reverse range adjustment module RA-1 1604 that is resampled by sampler 1606 and filtered by filter go 1608 to produce the low frequency reconstructed signal 2'0 1610. For the high frequency path, the decoder DI 1612 decodes the signal that is then resampled by sampler 1614 and 15 filtered by filter g' I 1616. Information info, can be provided to the filter 1616. The output of the filter 1616 produces reconstructed signal-61 1617. The reconstructed low frequency and high frequency signals are combined by combiner 1618 to create the reconstructed video signal 1620. The reconstructed video signal 1620 is supplied to the buffer 1621 to be used by other encoders and decoders. The buffered signal can also 20 be provided to a reference picture processing module 1624 that is fed back into the high frequency decoder DI.
[00108] The specific choice of RA modules can be determined based on perceptual and/or coding efficiency considerations and tradeoffs. From a coding efficiency point of 25 view, it is often desirable to make use of the entire output dynamic range specified by the bit-depth. Since the input dynamic range to RA is generally different for each picture or partition, the parameters that maximize the output dynamic range will differ among pictures. Although this may not be a problem from a coding point of view, it may cause problems when the BL is decoded and directly viewed, as the RA-1 operation may not be performed before being viewed, possibly leading to variations in brightness and contrast.
This is in contrast to the more general HVC, where the individual channels are internal and not intended to be viewed. An alternative solution to remedy the loss of information, associated with the RA process, is to use an integer implementation of sub-band coding using a lifting scheme which brings the base band layer to the desired dynamic range.
[00109] If the AVC-encoded BL supports the adaptive range scaling per picture or partition RA-1 (such as through SEI messaging), then the RA and RA-1 operations can be chosen to optimize both perceptual quality and coding efficiency. In the absence of such decoder processing for the BL and/or information about the input dynamic range, one possibility is to choose a fixed RA to preserve some desired visual characteristic. For example, if the analysis filter 110 1504 has a DC gain of a # 0, a reasonable choice of RA
in module 1508 is to set gain = 1/a and offset = 0.
[00110] It is worth noting that although it is not shown in FIGs. 15 and 16, the EL
can also undergo similar RA and RA-1 operations. However, the EL bitdepth is typically higher than that required by the BL. Also, the analysis, synthesis, and reference picture filtering of the concatenated double-width picture by hi and gi in FIGs. 15 and 16 can be performed so that there is no mixing of views around the view border (in contrast to SVC
filtering). This can be achieved, for example, by symmetric padding and extension of a given view at the border, similar to that used at the other picture edges.
[00111] In view of the foregoing, the discussed HVC video coding provides a framework that offers many advantages and flexibility from traditional pixel domain video coding. An application of the HVC coding approach can used to provide a scalable migration path to 3DTV coding. Its performance appears to provide some promising gains compared to other scalable approaches such as SVC and MVC. It uses existing AVC technology for the lower resolution 3DTV BL, and allows for additional tools for improving coding efficiency of the EL and full resolution views.
1001121 Turning to FIG. 17, the devices described above perform a method 1700 of encoding an input video stream. The input video stream is received 1702 at a head end of a video distribution system described and is divided 1704 into a series of partitions based on at least one feature set of the input video stream. The feature set can be any type of features of the video stream including features of the content, context, quality and coding functions of the video stream. In addition, the input video stream can be partitioned according to the various channels of the video stream such that each channel is separately divided according to the same or different feature sets. After dividing, the partitions of the input video stream are processed and analyzed to decompose 1706 the partitions for encoding by such operations as decimation and sampling of the partitions.
The decomposed partitions are then encoded 1708 to produced encoded bitstreams. As a part of the encoding process, coding information can be provided to the encoder. The coding information can include input information from the other channels of the input video stream as well as coding information based on a reconstructed video stream.
Coding information can also include information regarding control and quality information about the video stream as well as information regarding the feature sets. In an embodiment, the encoded bitstream is reconstructed 1710 into a reconstructed video stream which can be buffered and stored 1712. The reconstructed video stream can be fed back 1714 into the encoder and used as coding information as well as provided 1716 to encoders for other channels of the input video stream. As understood from the description above, the process of reconstructing the video stream as well as providing the reconstructed video stream as coding information can include the processes of analyzing and synthesizing the encoded bitstreams and reconstructed video stream.
1001131 FIG. 18 is a flow chart that illustrates a method 1800 of decoding encoded bitstreams that are formed as a result of the method shown in FIG. 17. The encoded bitstreams are received 1802 by a subscriber unit 150a-n as a part of a video distribution system. The bitstreams are decoded 1804 using coding information that is received by the decoder. The decoding information can be received as a part of the bitstream or it can be stored by the decoder. In addition, the coding information can be received from different channels for the video stream. The decoded bitstream is then synthesized 1806 into a series of partitions that are then combined 1808 to create a reconstructed video stream that corresponds to the input video stream described in connection with FIG.
17.
[00114] In the foregoing specification, specific embodiments of the present invention have been described. However, one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present invention as set forth in the claims below. Accordingly, the specification and figures are to be regarded in an illustrative rather than a restrictive sense, and all such modifications are intended to be included within the scope of present invention. The benefits, advantages, solutions to problems, and any element(s) that may cause any benefit, advantage, or solution to occur or become more pronounced are not to be construed as a critical, required, or essential features or elements of any or all the claims.
The invention is defined solely by the appended claims including any amendments made during the pendency of this application and all equivalents of those claims as issued.
Claims (14)
1. An apparatus comprising:
a divider to segment an input video stream into a plurality of non-overlapping partitions;
a channel analyzer coupled to the divider wherein the channel analyzer decomposes each of the plurality of non-overlapping partitions into at least two sub-bands using spatial frequency decomposition, wherein a level of sub-sampling in each of a horizontal and a vertical direction in the spatial frequency decomposition defines a number and size of the at least two sub-bands and each of the at least two sub-bands forms a respective channel of the input video stream; and a plurality of encoders coupled to the channel analyzer, each encoder of the plurality of encoders configured to encode one of the at least two sub-bands into an encoded bitstream to produce a plurality of encoded bitstreams using different coding information based on the one of the at least two sub-bands; wherein the plurality of encoders includes at least a first encoder receiving a low frequency sub-band and a second encoder receiving a high frequency sub-band, the first encoder generating a first quantization parameter to encode the low frequency sub-band using a first technique and the second encoder generating a second quantization parameter to encode the high frequency sub-band using a second technique, the first technique being different from the second technique.
a divider to segment an input video stream into a plurality of non-overlapping partitions;
a channel analyzer coupled to the divider wherein the channel analyzer decomposes each of the plurality of non-overlapping partitions into at least two sub-bands using spatial frequency decomposition, wherein a level of sub-sampling in each of a horizontal and a vertical direction in the spatial frequency decomposition defines a number and size of the at least two sub-bands and each of the at least two sub-bands forms a respective channel of the input video stream; and a plurality of encoders coupled to the channel analyzer, each encoder of the plurality of encoders configured to encode one of the at least two sub-bands into an encoded bitstream to produce a plurality of encoded bitstreams using different coding information based on the one of the at least two sub-bands; wherein the plurality of encoders includes at least a first encoder receiving a low frequency sub-band and a second encoder receiving a high frequency sub-band, the first encoder generating a first quantization parameter to encode the low frequency sub-band using a first technique and the second encoder generating a second quantization parameter to encode the high frequency sub-band using a second technique, the first technique being different from the second technique.
2. The apparatus according to claim 1 further comprising a reconstruction loop to decode each encoded bitstream and recombine the plurality of decoded bitstreams into a reconstructed video stream.
3. The apparatus according to claim 1 or 2 wherein the divider uses at least one of a plurality of feature sets to form the partitions.
4. The apparatus of any one of claims 1-3 wherein the coding information includes reference picture information determined from a reconstructed video stream created by the bitstream.
5. The apparatus of claim 1 wherein the first technique is a recursive rate distortion cost search and the second technique is an exhaustive rate distortion cost search.
6. An apparatus comprising:
a plurality of decoders receiving an encoded bitstream, each decoder of the plurality of decoders configured to decode one of the at least two sub-bands in the bitstream using difference coding information based on the one of the at least two sub-bands; wherein the plurality of decoders includes at least a first decoder decoding a low frequency sub-band in the bitstream using a first quantization parameter generated using a first technique and a second decoder decoding a high frequency sub-band in the bitstream using a second quantization parameter generated using a second technique, the first technique being different from the second technique;
a channel synthesizer coupled to each decoder of the plurality of decoders to synthesize the decoded at least two sub-bands into partitions, and a combiner coupled to the channel synthesizer to create a reconstructed video stream from the partitions.
a plurality of decoders receiving an encoded bitstream, each decoder of the plurality of decoders configured to decode one of the at least two sub-bands in the bitstream using difference coding information based on the one of the at least two sub-bands; wherein the plurality of decoders includes at least a first decoder decoding a low frequency sub-band in the bitstream using a first quantization parameter generated using a first technique and a second decoder decoding a high frequency sub-band in the bitstream using a second quantization parameter generated using a second technique, the first technique being different from the second technique;
a channel synthesizer coupled to each decoder of the plurality of decoders to synthesize the decoded at least two sub-bands into partitions, and a combiner coupled to the channel synthesizer to create a reconstructed video stream from the partitions.
7. The apparatus of claim 6 wherein the first technique is a recursive rate distortion cost search and the second technique is an exhaustive rate distortion cost search.
8. A method comprising:
receiving an input video stream;
partitioning the input video stream into a plurality of non-overlapping partitions;
decomposing each of the plurality of non-overlapping partitions into at least two sub-bands using spatial frequency decomposition, wherein a level of sub-sampling in each of a horizontal and a vertical direction in the spatial frequency decomposition defines a number and size of the at least two sub-bands and each of the at least two sub-bands forming a respective channel of the input video stream;
generating, using a first technique, a first quantization parameter to encode a low frequency sub-band of the at least two sub-bands;
generating, using a second technique, a second quantization parameter to encode a high frequency sub-band of the at least two sub-bands, the first technique being different from the second technique; and encoding each of the at least two sub-bands into an encoded bitstream to produce a plurality of encoded bitstreams using different coding information from channels of the input video stream including encoding the low frequency sub-band in the first encoder using the first quantization parameter and encoding the high frequency sub-band in the second encoder using the second quantization parameter.
receiving an input video stream;
partitioning the input video stream into a plurality of non-overlapping partitions;
decomposing each of the plurality of non-overlapping partitions into at least two sub-bands using spatial frequency decomposition, wherein a level of sub-sampling in each of a horizontal and a vertical direction in the spatial frequency decomposition defines a number and size of the at least two sub-bands and each of the at least two sub-bands forming a respective channel of the input video stream;
generating, using a first technique, a first quantization parameter to encode a low frequency sub-band of the at least two sub-bands;
generating, using a second technique, a second quantization parameter to encode a high frequency sub-band of the at least two sub-bands, the first technique being different from the second technique; and encoding each of the at least two sub-bands into an encoded bitstream to produce a plurality of encoded bitstreams using different coding information from channels of the input video stream including encoding the low frequency sub-band in the first encoder using the first quantization parameter and encoding the high frequency sub-band in the second encoder using the second quantization parameter.
9. The method of claim 8 wherein the encoding further includes receiving a reconstructed video stream derived from the plurality of encoded bitstreams as an input used to encode the partitions into the bitstreams.
10. The method of claim 8 or 9 further comprising buffering a reconstructed video stream reconstructed from the plurality of encoded bitstreams to be used as coding information for other channels of the input video stream.
11. The method of claim 8 wherein the coding information includes reference picture information.
12. The method of claim 8 wherein the first technique is a recursive rate distortion cost search and the second technique is an exhaustive rate distortion cost search.
13. A method comprising:
receiving an encoded bitstream;
decoding at least two sub-bands in the received bitstream using difference coding information including decoding a low frequency sub-band of the at least two sub-bands using a first quantization parameter in a first decoder and decoding a high frequency sub-band of the at least two sub-bands using a second quantization parameter in a second decoder, the first quantization parameter generated using a first technique, the second quantization parameter generated using a second technique, and the first technique different from the second technique;
synthesizing the decoded at least two sub-bands into a plurality of partitions; and combining the plurality of partitions into a reconstructed video stream.
receiving an encoded bitstream;
decoding at least two sub-bands in the received bitstream using difference coding information including decoding a low frequency sub-band of the at least two sub-bands using a first quantization parameter in a first decoder and decoding a high frequency sub-band of the at least two sub-bands using a second quantization parameter in a second decoder, the first quantization parameter generated using a first technique, the second quantization parameter generated using a second technique, and the first technique different from the second technique;
synthesizing the decoded at least two sub-bands into a plurality of partitions; and combining the plurality of partitions into a reconstructed video stream.
14. The method of claim 13 wherein the first technique is a recursive rate distortion cost search and the second technique is an exhaustive rate distortion cost search.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US38993010P | 2010-10-05 | 2010-10-05 | |
US61/389,930 | 2010-10-05 | ||
US13/253,793 | 2011-10-05 | ||
PCT/US2011/054993 WO2012048052A1 (en) | 2010-10-05 | 2011-10-05 | Method and apparatus for feature based video coding |
US13/253,793 US20120082243A1 (en) | 2010-10-05 | 2011-10-05 | Method and Apparatus for Feature Based Video Coding |
Publications (2)
Publication Number | Publication Date |
---|---|
CA2810897A1 CA2810897A1 (en) | 2012-04-12 |
CA2810897C true CA2810897C (en) | 2015-11-24 |
Family
ID=45889828
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CA2810897A Active CA2810897C (en) | 2010-10-05 | 2011-10-05 | Method and apparatus for feature based video coding |
Country Status (6)
Country | Link |
---|---|
US (1) | US20120082243A1 (en) |
EP (1) | EP2606647A1 (en) |
KR (1) | KR20130054413A (en) |
CA (1) | CA2810897C (en) |
MX (1) | MX2013003868A (en) |
WO (1) | WO2012048052A1 (en) |
Families Citing this family (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9532059B2 (en) | 2010-10-05 | 2016-12-27 | Google Technology Holdings LLC | Method and apparatus for spatial scalability for video coding |
US9510020B2 (en) | 2011-10-20 | 2016-11-29 | Qualcomm Incorporated | Intra pulse code modulation (IPCM) and lossless coding mode deblocking for video coding |
TWI575933B (en) * | 2011-11-04 | 2017-03-21 | 杜比實驗室特許公司 | Layer decomposition in hierarchical vdr coding |
US9544587B2 (en) * | 2012-05-14 | 2017-01-10 | Google Technology Holdings LLC | Scalable video coding with enhanced base layer |
US10623759B2 (en) | 2012-06-13 | 2020-04-14 | Sony Corporation | Decoupling enhancements in sample adaptive offset (SAO) for high efficiency video encoder (HEVC) |
JP6074566B2 (en) * | 2012-07-02 | 2017-02-08 | ソニー株式会社 | Enhanced sample adaptive offset (SAO) separation for high-efficiency video encoder (HEVC) |
US9532051B2 (en) * | 2012-10-05 | 2016-12-27 | Futurewei Technologies, Inc. | Architecture for hybrid video codec |
TWI597968B (en) | 2012-12-21 | 2017-09-01 | 杜比實驗室特許公司 | High precision up-sampling in scalable coding of high bit-depth video |
KR102161741B1 (en) * | 2013-05-02 | 2020-10-06 | 삼성전자주식회사 | Method, device, and system for changing quantization parameter for coding unit in HEVC |
US10057599B2 (en) | 2014-02-19 | 2018-08-21 | Mediatek Inc. | Method for performing image processing control with aid of predetermined tile packing, associated apparatus and associated non-transitory computer readable medium |
US10284849B2 (en) | 2015-04-13 | 2019-05-07 | Qualcomm Incorporated | Quantization parameter (QP) calculation for display stream compression (DSC) based on complexity measure |
US10244255B2 (en) * | 2015-04-13 | 2019-03-26 | Qualcomm Incorporated | Rate-constrained fallback mode for display stream compression |
US10356428B2 (en) | 2015-04-13 | 2019-07-16 | Qualcomm Incorporated | Quantization parameter (QP) update classification for display stream compression (DSC) |
US9916637B1 (en) | 2017-04-27 | 2018-03-13 | Apple Inc. | Splitting and merging subband image data |
US11095895B2 (en) * | 2018-02-01 | 2021-08-17 | Intel Corporation | Human visual system optimized transform coefficient shaping for video encoding |
CN110166781B (en) * | 2018-06-22 | 2022-09-13 | 腾讯科技（深圳）有限公司 | Video coding method and device, readable medium and electronic equipment |
US10657623B2 (en) | 2018-08-10 | 2020-05-19 | Apple Inc. | Two stage multi-scale processing of image data |
CN114521327A (en) * | 2019-07-05 | 2022-05-20 | 威诺瓦国际有限公司 | Quantization of residual in video coding |
KR102275168B1 (en) * | 2019-09-30 | 2021-07-07 | 인천대학교 산학협력단 | Vehicle navigation method based on vision sensor |
US20210120255A1 (en) * | 2020-01-10 | 2021-04-22 | Intel Corporation | Image compression using autoencoder information |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5253058A (en) * | 1992-04-01 | 1993-10-12 | Bell Communications Research, Inc. | Efficient coding scheme for multilevel video transmission |
US6707948B1 (en) * | 1997-11-17 | 2004-03-16 | The Regents Of The University Of California | Image compression for memory-constrained decoders |
US6236757B1 (en) * | 1998-06-18 | 2001-05-22 | Sharp Laboratories Of America, Inc. | Joint coding method for images and videos with multiple arbitrarily shaped segments or objects |
US6888894B2 (en) * | 2000-04-17 | 2005-05-03 | Pts Corporation | Segmenting encoding system with image segmentation performed at a decoder and encoding scheme for generating encoded data relying on decoder segmentation |
FR2856228A1 (en) * | 2003-06-12 | 2004-12-17 | France Telecom | Video image sequence encoding method, involves associating topology of mesh of video images with each video sub-sequence and forming data signal having associated topology and information representing coefficients of image |
US7715658B2 (en) * | 2005-08-03 | 2010-05-11 | Samsung Electronics Co., Ltd. | Apparatus and method for super-resolution enhancement processing |
US8428133B2 (en) * | 2007-06-15 | 2013-04-23 | Qualcomm Incorporated | Adaptive coding of video block prediction mode |
US8249142B2 (en) * | 2008-04-24 | 2012-08-21 | Motorola Mobility Llc | Method and apparatus for encoding and decoding video using redundant encoding and decoding techniques |
US8781844B2 (en) * | 2009-09-25 | 2014-07-15 | Nokia Corporation | Audio coding |
KR101447796B1 (en) * | 2010-04-13 | 2014-10-07 | 프라운호퍼 게젤샤프트 쭈르 푀르데룽 데어 안겐반텐 포르슝 에. 베. | Inter-plane prediction |
-
2011
- 2011-10-05 MX MX2013003868A patent/MX2013003868A/en not_active Application Discontinuation
- 2011-10-05 US US13/253,793 patent/US20120082243A1/en not_active Abandoned
- 2011-10-05 EP EP11776043.9A patent/EP2606647A1/en not_active Withdrawn
- 2011-10-05 CA CA2810897A patent/CA2810897C/en active Active
- 2011-10-05 KR KR1020137008873A patent/KR20130054413A/en not_active Application Discontinuation
- 2011-10-05 WO PCT/US2011/054993 patent/WO2012048052A1/en active Application Filing
Also Published As
Publication number | Publication date |
---|---|
CN103155556A (en) | 2013-06-12 |
KR20130054413A (en) | 2013-05-24 |
CA2810897A1 (en) | 2012-04-12 |
EP2606647A1 (en) | 2013-06-26 |
WO2012048052A1 (en) | 2012-04-12 |
US20120082243A1 (en) | 2012-04-05 |
MX2013003868A (en) | 2013-06-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CA2810897C (en) | Method and apparatus for feature based video coding | |
CA2810905C (en) | Method and apparatus for spatial scalability for hevc | |
US9992503B2 (en) | Scalable video coding with enhanced base layer | |
US9955176B2 (en) | Efficient and scalable intra video/image coding using wavelets and AVC, modified AVC, VPx, modified VPx, or modified HEVC coding | |
US20180310023A1 (en) | Encoding and decoding architectures for format compatible 3d video delivery | |
US10602187B2 (en) | Efficient, compatible, and scalable intra video/image coding using wavelets and HEVC coding | |
US20170155905A1 (en) | Efficient intra video/image coding using wavelets and variable size transform coding | |
US7468745B2 (en) | Multiview video decomposition and encoding | |
US10034008B2 (en) | Method and apparatus for scalable video encoding using switchable de-noising filtering, and method and apparatus for scalable video decoding using switchable de-noising filtering | |
EP1617677A1 (en) | Embedded base layer codec for 3D sub-band coding | |
EP1806931A2 (en) | Scalable video coding | |
US20060120450A1 (en) | Method and apparatus for multi-layered video encoding and decoding | |
EP2903282A1 (en) | Method for sao compensation for encoding inter-layer prediction error and apparatus therefor | |
KR20160132857A (en) | Scalable video encoding/decoding method and apparatus | |
CN108718411B (en) | Image decoding method and apparatus using the same | |
US20180302650A1 (en) | Moving image decoding apparatus, moving image decoding method, moving image encoding apparatus, moving image encoding method and computer-readable storage medium | |
EP1555829A1 (en) | Video/image coding method and system enabling region-of-interest | |
US20140286434A1 (en) | Image-encoding method and image-decoding method | |
CN103155556B (en) | The method and apparatus compiled for the video of feature based | |
CN103155561B (en) | Method and apparatus for the spatial scalability of video compiling |
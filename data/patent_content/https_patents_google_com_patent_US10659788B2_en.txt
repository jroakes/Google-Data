US10659788B2 - Block-based optical flow estimation for motion compensated prediction in video coding - Google Patents
Block-based optical flow estimation for motion compensated prediction in video coding Download PDFInfo
- Publication number
- US10659788B2 US10659788B2 US15/817,369 US201715817369A US10659788B2 US 10659788 B2 US10659788 B2 US 10659788B2 US 201715817369 A US201715817369 A US 201715817369A US 10659788 B2 US10659788 B2 US 10659788B2
- Authority
- US
- United States
- Prior art keywords
- reference frame
- frame portion
- optical flow
- frame
- warped
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 230000033001 locomotion Effects 0.000 title claims abstract description 224
- 230000003287 optical effect Effects 0.000 title claims abstract description 138
- 238000000034 method Methods 0.000 claims description 140
- 230000008569 process Effects 0.000 claims description 97
- 238000012545 processing Methods 0.000 claims description 46
- 239000013598 vector Substances 0.000 claims description 42
- 238000002156 mixing Methods 0.000 claims description 16
- 238000010586 diagram Methods 0.000 description 28
- 230000015654 memory Effects 0.000 description 28
- 230000006870 function Effects 0.000 description 25
- 238000004891 communication Methods 0.000 description 10
- 238000001914 filtration Methods 0.000 description 9
- 238000004364 calculation method Methods 0.000 description 8
- 230000006835 compression Effects 0.000 description 8
- 238000007906 compression Methods 0.000 description 8
- 238000012935 Averaging Methods 0.000 description 4
- 238000013459 approach Methods 0.000 description 4
- 238000013139 quantization Methods 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 3
- 230000000903 blocking effect Effects 0.000 description 3
- 150000001875 compounds Chemical class 0.000 description 3
- 238000001514 detection method Methods 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 208000037170 Delayed Emergence from Anesthesia Diseases 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000004590 computer program Methods 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 230000004044 response Effects 0.000 description 2
- 230000002123 temporal effect Effects 0.000 description 2
- 238000004458 analytical method Methods 0.000 description 1
- 238000000137 annealing Methods 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 239000003086 colorant Substances 0.000 description 1
- 230000008867 communication pathway Effects 0.000 description 1
- 230000006837 decompression Effects 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 238000009472 formulation Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 230000001373 regressive effect Effects 0.000 description 1
- 230000002441 reversible effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/137—Motion inside a coding unit, e.g. average field, frame or block difference
- H04N19/139—Analysis of motion vectors, e.g. their magnitude, direction, variance or reliability
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/105—Selection of the reference unit for prediction within a chosen coding or prediction mode, e.g. adaptive choice of position and number of pixels used for prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/537—Motion estimation other than block-based
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/573—Motion compensation with multiple frame prediction using two or more reference frames in a given prediction direction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/577—Motion compensation with bidirectional frame interpolation, i.e. using B-pictures
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- One technique for compression uses a reference frame to generate a prediction block corresponding to a current block to be encoded. Differences between the prediction block and the current block can be encoded, instead of the values of the current block themselves, to reduce the amount of data encoded.
- This disclosure relates generally to encoding and decoding video data and more particularly relates to using block-based optical flow estimation for motion compensated prediction in video compression. Frame-level based optical flow estimation is also described.
- a method determining a first frame portion of a first frame to be predicted, the first frame being in a video sequence, determining a first reference frame from the video sequence for forward inter prediction of the first frame, determining a second reference frame from the video sequence for backward inter prediction of the first frame, generating an optical flow reference frame portion for inter prediction of the first frame portion by performing an optical flow estimation using the first reference frame and the second reference frame, and performing a prediction process for the first frame portion using the optical flow reference frame.
- the first frame portion and optical flow reference frame portion can be a block, or an entire frame, for example.
- An apparatus includes a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out a method including determining a first frame to be predicted in a video sequence, and determining an availability of a first reference frame for forward inter prediction of the first frame and a second reference frame for backward inter prediction of the first frame.
- the method also includes, responsive to determining the availability of both the first reference frame and the second reference frame, generating a respective motion field for pixels of a first frame portion using the first reference frame and the second reference frame as input into an optical flow estimation process, warping a first reference frame portion to the first frame portion using the motion fields to form a first warped reference frame portion, the first reference frame portion comprising pixels of the first reference frame co-located with the pixels of the first frame portion, warping a second reference frame portion to the first frame portion using the motion fields to form a second warped reference frame portion, the second reference frame portion comprising pixels of the second reference frame co-located with the pixels of the first frame portion, and blending the first warped reference frame portion and the second warped reference frame portion to form an optical flow reference frame portion for inter prediction of at least one block of the first frame.
- Another apparatus also includes a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out a method including generating an optical flow reference frame portion for inter prediction of a block of a first frame of a video sequence using a first reference frame from the video sequence and a second reference frame of the video sequence by initializing motion fields for pixels of a first frame portion in a first processing level for an optical flow estimation, the first processing level representing downscaled motion within the first frame portion and comprising one level of multiple levels, and, for each level of the multiple levels warping the first reference frame portion to the first frame portion using the motion fields to form a first warped reference frame portion, warping the second reference frame portion to the first frame portion using the motion fields to form a second warped reference frame portion, estimating motion fields between the first warped reference frame portion and the second warped reference frame portion using the optical flow estimation, and updating the motion fields for pixels of the first frame portion using the motion fields between the first warped reference frame portion and the second warped reference frame portion by the
- the method also includes, for a final level of the multiple levels, warping the first reference frame portion to the first frame portion using the updated motion fields to form a final first warped reference frame portion, warping the second reference frame portion to the first frame portion using the updated motion fields to form a final second warped reference frame portion, and blending the final first warped reference frame portion and the second warped reference frame portion to form the optical flow reference frame portion.
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a block diagram of an example of a reference frame buffer.
- FIG. 7 is a diagram of a group of frames in a display order of a video sequence.
- FIG. 8 is a diagram of an example of a coding order for the group of frames of FIG. 7 .
- FIG. 9 is a diagram used to explain the linear projection of a motion field according to the teachings herein.
- FIG. 10 is a flowchart diagram of a process for motion compensated prediction of a video frame using at least a portion of a reference frame generated using optical flow estimation.
- FIG. 11 is a flowchart diagram of a process for generating an optical flow reference frame portion.
- FIG. 12 is a flowchart diagram of another process for generating an optical flow reference frame portion.
- FIG. 13 is a diagram illustrating the processes of FIGS. 11 and 12 .
- FIG. 14 is a diagram illustrating object occlusion.
- FIG. 15 is a diagram illustrating a technique for optimizing a decoder.
- the alternative reference frame is a reference frame usable for backwards prediction.
- One or more forward and/or backward reference frames can be used to encode or decode a bock.
- the efficacy of a reference frame when used to encode or decode a block within a current frame can be measured based on a resulting signal-to-noise ratio or other measures of rate-distortion.
- the pixels that form prediction blocks are obtained directly from one or more of the available reference frames.
- the reference pixel blocks or their linear combinations are used for prediction of the given coding block in the current frame.
- This direct, block-based prediction does not capture the true motion activity available from the reference frames. For this reason, motion compensated prediction accuracy can suffer.
- references frame portions collocated with the current coding frame portions that use a per-pixel motion field calculated by optical flow to estimate the true motion activities in the video signal.
- Reference frame portions are interpolated that allow tracking of complicated non-translational motion activity, which is beyond the capability of conventional block-based motion compensated prediction determined directly from reference frames. Use of such reference frame portions can improve prediction quality.
- a frame portion refers to some of all of a frame, such as a block, a slice, or an entire frame.
- a frame portion in one frame is collocated with a frame portion in another frame if they have the same dimensions and are at the same pixel locations within the dimensions of each frame.
- FIG. 1 is a schematic of a video encoding and decoding system 100 .
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102 and the encoded video stream can be decoded in the receiving station 106 .
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- an implementation can omit the network 104 .
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having a non-transitory storage medium or memory.
- the receiving station 106 receives (e.g., via the network 104 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol is used for transmission of the encoded video over the network 104 .
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol.
- HTTP Hypertext Transfer Protocol
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1 .
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 202 in the computing device 200 can be a central processing unit.
- the CPU 202 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown, e.g., the CPU 202 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device or non-transitory storage medium can be used as the memory 204 .
- the memory 204 can include code and data 206 that is accessed by the CPU 202 using a bus 212 .
- the memory 204 can further include an operating system 208 and application programs 210 , the application programs 210 including at least one program that permits the CPU 202 to perform the methods described here.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 214 , which can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- a secondary storage 214 can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218 .
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the CPU 202 via the bus 212 .
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218 .
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220 , for example a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200 .
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200 .
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound-sensing device 222 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200 .
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200 .
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302 .
- the video sequence 302 includes a number of adjacent frames 304 . While three frames are depicted as the adjacent frames 304 , the video sequence 302 can include any number of adjacent frames 304 .
- the adjacent frames 304 can then be further subdivided into individual frames, e.g., a frame 306 .
- the frame 306 can be divided into a series of planes or segments 308 .
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310 , which can contain data corresponding to, for example, 16 ⁇ 16 pixels in the frame 306 .
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4 ⁇ 4 pixels, 8 ⁇ 8 pixels, 16 ⁇ 8 pixels, 8 ⁇ 16 pixels, 16 ⁇ 16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102 such as by providing a computer software program stored in memory, for example, the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the transmitting station 102 to encode video data in the manner described in FIG. 4 .
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102 .
- the encoder 400 is a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402 , a transform stage 404 , a quantization stage 406 , and an entropy encoding stage 408 .
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410 , an inverse transform stage 412 , a reconstruction stage 414 , and a loop filtering stage 416 .
- Other structural variations of the encoder 400 can be used to encode the video stream 300 .
- respective frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra-prediction) or inter-frame prediction (also called inter-prediction).
- intra-frame prediction also called intra-prediction
- inter-frame prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames. The designation of reference frames for groups of blocks is discussed in further detail below.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, transform type, motion vectors and quantizer value, are then output to the compressed bitstream 420 .
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that the encoder 400 and a decoder 500 (described below) use the same reference frames to decode the compressed bitstream 420 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 400 can be used to encode the compressed bitstream 420 .
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106 , for example, by providing a computer software program stored in the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the receiving station 106 to decode video data in the manner described in FIG. 5 .
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106 .
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a deblocking filtering stage 514 .
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400 .
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 , e.g., at the intra/inter prediction stage 402 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- the deblocking filtering stage 514 is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516 .
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the decoder 500 can produce the output video stream 516 without the deblocking filtering stage 514 .
- FIG. 6 is a block diagram of an example of a reference frame buffer 600 .
- the reference frame buffer 600 stores reference frames used to encode or decode blocks of frames of a video sequence.
- the reference frame buffer 600 includes reference frames identified as a last frame LAST_FRAME 602 , a golden frame GOLDEN_FRAME 604 , and an alternative reference frame ALTREF_FRAME 606 .
- a frame header of a reference frame may include a virtual index to a location within the reference frame buffer at which the reference frame is stored.
- a reference frame mapping may map the virtual index of a reference frame to a physical index of memory at which the reference frame is stored. Where two reference frames are the same frame, those reference frames will have the same physical index even if they have different virtual indexes.
- the number of reference positions within the reference frame buffer 600 , the types, and the names used are examples only.
- the reference frames stored in the reference frame buffer 600 can be used to identify motion vectors for predicting blocks of frames to be encoded or decoded. Different reference frames may be used depending on the type of prediction used to predict a current block of a current frame. For example, in bi-prediction, blocks of the current frame can be forward predicted using either frame stored as the LAST_FRAME 602 or the GOLDEN_FRAME 604 , and backward predicted using a frame stored as the ALTREF_FRAME 606 .
- the reference frame buffer 600 can store up to eight reference frames, wherein each stored reference frame may be associated with a different virtual index of the reference frame buffer. Although three of the eight spaces in the reference frame buffer 600 are used by frames designated as the LAST_FRAME 602 , the GOLDEN_FRAME 604 , and the ALTREF_FRAME 606 , five spaces remain available to store other reference frames. For example, one or more available spaces in the reference frame buffer 600 may be used to store further reference frames, in particular some or all of the interpolated reference frame described herein. Although the reference frame buffer 600 is shown as being able to store up to eight reference frames, other implementations of the reference frame buffer 600 may be able to store additional or fewer reference frames.
- the alternative reference frame designated as the ALTREF_FRAME 606 may be a frame of a video sequence that is distant from a current frame in a display order, but is encoded or decoded earlier than it is displayed.
- the alternative reference frame may be ten, twelve, or more (or fewer) frames after the current frame in a display order.
- Further alternative reference frames can be frames located nearer to the current frame in the display order.
- An alternative reference frame may not correspond directly to a frame in the sequence. Instead, the alternative reference frame may be generated using one or more of the frames having filtering applied, being combined together, or being both combined together and filtered.
- An alternative reference frame may not be displayed. Instead, it can be a frame or portion of a frame generated and transmitted for use only in a prediction process (i.e., it is omitted when the decoded sequence is displayed).
- FIG. 7 is a diagram of a group of frames in a display order of the video sequence.
- the group of frames is preceded by a frame 700 , which can be referred to as a key frame or an overlay frame in some cases, and comprises eight frames 702 - 716 .
- No block within the frame 700 is inter predicted using reference frames of the group of frames.
- the frame 700 is a key (also referred to as intra-predicted frame) in this example, which refers to its status that predicted blocks within the frame are only predicted using intra prediction.
- the frame 700 can be an overlay frame, which is an inter-predicted frame that can be a reconstructed frame of a previous group of frames.
- an inter-predicted frame at least some of the predicted blocks are predicted using inter prediction.
- the number of frames forming each group of frames can vary according to the video spatial/temporal characteristics and other encoded configurations, such as the key frame interval selected for random access or error resilience, for example.
- the coding order for each group of frames can differ from the display order. This allows a frame located after a current frame in the video sequence to be used as a reference frame for encoding the current frame.
- a decoder such as the decoder 500
- the group coding structure assigns different roles that respective frames within the group may play in the reference buff (e.g., a last frame, an alternative reference frame, etc.) and defines or indicates the coding order for the frames within a group.
- FIG. 8 is a diagram of an example of a coding order for the group of frames of FIG. 7 .
- the coding order of FIG. 8 is associated with a first group coding structure whereby a single backward reference frame is available for each frame of the group. Because the encoding and decoding order is the same, the order shown in FIG. 8 is generally referred to herein as a coding order.
- the key or overlay frame 700 is designated the golden frame in a reference frame buffer, such as the GOLDEN_FRAME 604 in the reference frame buffer 600 .
- the frame 700 is intra-predicted in this example, so it does not require a reference frame, but an overlay frame as the frame 700 , being a reconstructed frame from a previous group, also does not use a reference frame of the current group of frames.
- the final frame 716 in the group is designated an alternative reference frame in a reference frame buffer, such as the ALTREF_FRAME 606 in the reference frame buffer 600 .
- the frame 716 is coded out of the display order after the frame 700 so as to provide a backward reference frame for each of the remaining frames 702 - 714 .
- the frame 700 serves as an available reference frame for blocks of the frame 716 .
- FIG. 8 is only one example of a coding order for a group of frames. Other group coding structures may designate one or more different or additional frames for forward and/or backward prediction.
- FIG. 9 is a diagram used to explain the linear projection of a motion field according to the teachings herein.
- the optical flow (also called a motion field) of the current frame may be estimated using the nearest available reconstructed (e.g., reference) frames before and after the current frame.
- the reference frame 1 is a reference frame that may be used for forward prediction of the current frame 900
- the reference frame 2 is a reference frame that may be used for backward prediction of the current frame 900 .
- the immediately preceding, or last, frame 704 e.g., the reconstructed frame stored in the reference frame buffer 600 as the LAST_FRAME 602
- the frame 716 e.g., the reconstructed frame stored in the reference frame buffer 600 as the ALTREF_FRAME 606
- motion vectors may be projected between the pixels in the reference frames 1 and 2 to the pixels in the current frame 900 assuming that the motion field is linear in time.
- the index for the current frame 900 is 3
- the index for the reference frame 1 is 0,
- the index for the reference frame 2 is 716.
- a projected motion vector 904 for a pixel 902 of the current frame 900 is shown.
- the display indexes of the group of frames of FIG. 7 would show that the frame 704 is temporally closer to the frame 706 than the frame 716 . Accordingly, the single motion vector 904 shown in FIG.
- the projected motion field 906 is linear between the reference frame 1 , the current frame 900 , and the reference frame 2 .
- Selecting the nearest available reconstructed forward and backward reference frames and assuming a motion field for respective pixels of the current frame that is linear in time allows generation of the interpolated reference frame using optical flow estimation to be performed at both an encoder and a decoder (e.g., at the intra/inter prediction stage 402 and the intra/inter prediction stage 508 ) without transmitting extra information.
- a decoder e.g., at the intra/inter prediction stage 402 and the intra/inter prediction stage 508
- different frames may be used as designated a priori between the encoder and decoder.
- identification of the frames used for the optical flow estimation may be transmitted. Generation of the interpolated frame is discussed in more detail below.
- FIG. 10 is a flowchart diagram of a method or process 1000 for motion compensated prediction of a frame of a video sequence using at least a portion of a reference frame generated using optical flow estimation.
- the reference frame portion may be a block, a slice, or an entire reference frame, for example.
- An optical flow reference frame portion may also be referred to as a co-located reference frame portion herein.
- the process 1000 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1000 .
- the process 1000 can be implemented using specialized hardware or firmware. Some computing devices may have multiple memories or processors, and the operations described in the process 1000 can be distributed using multiple processors, memories, or both.
- a current frame to be predicted is determined.
- Frames may be coded, and hence predicted, in any order, such as in the coding order shown in FIG. 8 .
- the frames to be predicted may also be referred to as a first, second, third, etc. frame.
- the label of first, second, etc. does not necessarily indicate an order of the frames. Instead the label is used to distinguish one current frame from another herein unless otherwise stated.
- the frame may be processed in units of blocks in a block coding order, such as a raster scan order.
- the frame may also be processed in units of blocks according to receipt of their encoded residuals within an encoded bitstream.
- forward and backward reference frames are determined.
- the forward and backward reference frames are the nearest reconstructed frames before and after (e.g., in display order) the current frame, such as the current frame 900 .
- the process 1000 ends. The current frame is then processed without considering optical flow.
- an optical flow reference frame portion may be generated using the reference frames at 1006 . Generating the optical flow reference frame portion is described in more detail with reference to FIGS. 11-14 .
- the optical flow reference frame portion may be stored at a defined position within the reference frame buffer 600 in some implementations. Initially, optical flow estimation according to the teachings herein is described.
- J data is the data penalty based on the brightness constancy assumption (i.e., the assumption that an intensity value of a small portion of an image remains unchanged over time despite a position change).
- J spatial is the spatial penalty based on the smoothness of the motion field (i.e., the characteristic that neighboring pixels likely belong to the same object item in an image, resulting in substantial the same image motion).
- the Lagrangian parameter ⁇ controls the importance of the smoothness of the motion field. A large value for the parameter ⁇ results in a smoother motion field and can better account for motion at a larger scale. In contrast, a smaller value for the parameter ⁇ may more effectively adapt to object edges and the movement of small objects.
- E x , E y , and E t are derivatives of pixel values of reference frame portions with respect to the horizontal axis x, the vertical axis y, and time t (e.g., as represented by frame indexes).
- the horizontal axis and the vertical axis are defined relative to the array of the pixels forming the current frame, such as the current frame 900 , and the reference frames, such as the reference frames 1 and 2 .
- E x (index r2 ⁇ index cur )/(index r2 ⁇ index r1 ) ⁇ E x (r1) +(index cur ⁇ index r1 )/(index r2 ⁇ index r1 ) ⁇ E x (r2)
- E y (index cur ⁇ index r1 )/(index r2 ⁇ index r1 ) ⁇ E y (r1) +(index cur ⁇ index r1 )/(index r2 ⁇ index r1 ) ⁇ E y (r2)
- E t E (r2) ⁇ E (r1) (5)
- variable E (r1) is a pixel value at a projected position in the reference frame 1 based on the motion field of the current pixel location in the current frame being encoded.
- variable E (r2) is a pixel value at a projected position in the reference frame 2 based on the motion field of the current pixel location in the current frame being encoded.
- variable index r1 is the display index of the reference frame 1 , where the display index of a frame is its index in the display order of the video sequence.
- variable index r2 is the display index of the reference frame 2
- variable index cur is the display index of the current frame 900 .
- the variable E x (r1) is the horizontal derivative calculated at the reference frame 1 using a linear filter.
- the variable E x (r2) is the horizontal derivative calculated at the reference frame 2 using a linear filter.
- the variable E y (r1) is the vertical derivative calculated at the reference frame 1 using a linear filter.
- the variable E y (r2) is the vertical derivative calculated at the reference frame 2 using a linear filter.
- FIG. 11 is a flowchart diagram of a method or process 1100 for generating an optical flow reference frame portion.
- the optical flow reference frame portion is an entire reference frame.
- the process 1100 can implement step 1006 of the process 1000 .
- the process 1100 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1100 .
- the process 1100 can be implemented using specialized hardware or firmware. As described above, multiple processors, memories, or both, may be used.
- the estimated motion vectors from the current frame to the reference frames can be used to initialize the optical flow estimation for the current frame.
- all pixels within the current frame may be assigned an initialized motion vector. They define initial motion fields that can be utilized to warp the reference frames to the current frame for a first processing level to shorten the motion lengths between reference frames.
- one or more spatial neighbors having an initialized motion vector may be used. For example, an average of the available neighboring initialized motion vectors may be used.
- reference frame 2 may be used to predict a pixel of reference frame 1 , where reference frame 1 is the last frame before the current frame being coded. That motion vector, projected on to the current frame using linear projection in a similar manner as shown in FIG. 9 , results in a motion field mv cur at the intersecting pixel location, such as the motion field 906 at the pixel location 902 .
- FIG. 11 refers to initializing the motion field for a first processing level because there are desirably multiple processing levels to the process 1100 .
- FIG. 13 is a diagram that illustrates the process 1100 of FIG. 11 (and the process 1200 of FIG. 12 discussed below).
- the following description uses the phrase motion field. This phrase is intended to collectively refer to the motion fields for respective pixels unless otherwise clear from the context. Accordingly, the phrases “motion fields” or “motion field” may be used interchangeably when referring to more than one motion field. Further, the phrase optical flow may be used interchangeably with the phrase motion field when referring to the movement of pixels.
- a pyramid, or multi-layered, structure may be used.
- the reference frames are scaled down to one or more different scales.
- the optical flow is first estimated to obtain a motion field at the highest level (the first processing level) of the pyramid, i.e., using the reference frames that are scaled the most.
- the motion field is up-scaled and used to initialize the optical flow estimation at the next level. This process of upscaling the motion field, using it to initialize the optical flow estimation of the next level, and obtaining the motion field continues until the lowest level of the pyramid is reached (i.e., until the optical flow estimation is completed for the reference frame portions at full scale).
- This process represents a regressive analysis for the optical flow estimation.
- the scheme is shown in FIG. 13 and is implemented by the process 1100 of FIG. 11 and the process 1200 of FIG. 12 .
- the Lagrangian parameter ⁇ is set for solving the Lagrangian function (1) at 1104 .
- the process 1100 uses multiple values for the Lagrangian parameter A.
- the first value at which the Lagrangian parameter ⁇ is set at 1104 may be a relatively large value, such as 100. While it is desirable that the process 1100 uses multiple values for the Lagrangian parameter ⁇ within the Lagrangian function (1), it is possible that only one value is used as described in the process 1200 described below.
- the reference frames are warped to the current frame according to the motion field for the current processing level. Warping the reference frames to the current frame may be performed using subpixel location rounding. It is worth noting that the motion field mv cur that is used at the first processing level is downscaled from its full resolution value to the resolution of the level before performing the warping. Downscaling a motion field is discussed in more detail below.
- the horizontal component U r1 and the vertical component v r1_ of the motion field mv r1 may be rounded to 1 ⁇ 8 pixel precision for the Y component and 1/16 pixel precision for the U and V component. Other values for the subpixel location rounding may be used.
- each pixel in a warped image E warped (r1) is calculated as the referenced pixel given by the motion vector mv r1 .
- Subpixel interpolation may be performed using a conventional subpixel interpolation filter.
- two warped reference frames exist.
- the two warped reference frames are used to estimate the motion field between them at 1108 .
- Estimating the motion field at 1108 can include multiple steps.
- the derivatives E x , E y , and E t are calculated using the functions (3), (4), and (5).
- the frame boundaries of a warped reference frame may be expanded by copying the nearest available pixel. In this way, pixel values (i.e., E (r1) and/or E (r2) ) may be obtained when projected positions are outside of the warped reference frame.
- the derivatives are downscaled to the current level. As shown in FIG. 13 , the reference frames are used to calculate the derivatives at the original scale to capture details. Downscaling the derivatives at each level l may be calculated by averaging within a 2 l by 2 l block. It is worth noting that, because calculating the derivatives as well as downscaling by averaging them are both linear operations, the two operations may be combined in a single linear filter to calculate the derivatives at each level l. This can lower complexity of the calculations.
- the smallest value for the Lagrangian parameter ⁇ is 25 in an example.
- This repeating processing while modifying the Lagrangian parameter may be referred to as annealing the Lagrangian parameter.
- the process 1100 advances to 1112 to determine whether there are more processing levels to process. If there are additional processing levels at 1112 , the process 1100 advances to 1114 , where the motion field is up-scaled before processing the next layer using each of the available values for the Lagrangian parameter ⁇ starting at 1104 . Upscaling the motion field may be performed using any known technique, including but not limited to the reverse of the downscaling calculations described previously.
- the optical flow is first estimated to obtain a motion field at the highest level of the pyramid. Thereafter, the motion field is upscaled and used to initialize the optical flow estimation at the next level. This process of upscaling the motion field, using it to initialize the optical flow estimation of the next level, and obtaining the motion field continues until the lowest level of the pyramid is reached (i.e., until the optical flow estimation is completed for the derivatives calculated at full scale) at 1112 .
- FIG. 14 is a diagram that illustrates object occlusion.
- the occluded part of object A shows in reference frame 1 and is hidden by object B in reference frame 2 .
- the referenced pixel from reference frame 2 is from object B.
- using only the warped pixel from the reference frame 1 is desirable. Accordingly, using a technique that detects occlusions, instead of or in addition to the above blending, may provide a better blending result, and hence a better reference frame.
- the motion vector of the occluded part of object A points to object B in reference frame 2 .
- the first situation is that the warped pixel values E warped (r1) and E warped (r2) are very different because they are from two different objects.
- the second situation is that the pixels in object B are referenced by multiple motion vectors, which are for object B in the current frame and for the occluded part of object A in the current frame.
- an occlusion can be detected in the first reference frame using the first warped reference frame and the second warped reference frame. Then, the blending of the warped reference frames can include populating pixel positions of the optical flow reference frame corresponding to the occlusion with pixel values from the second warped reference frame. Similarly, an occlusion can be detected in the second reference frame using the first warped reference frame and the second warped reference frame. Then, the blending of the warped reference frames can include populating pixel positions of the optical flow reference frame corresponding to the occlusion with pixel values from the first warped reference frame
- FIG. 12 is a flowchart diagram of a method or process 1200 for generating an optical flow reference frame portion.
- the optical flow reference frame portion is less than an entire reference frame.
- the co-located frame portions in this example are described with reference to a block, but other frame portions may be processed according to FIG. 12 .
- the process 1200 can implement step 1006 of the process 1000 .
- the process 1200 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1200 .
- the process 1200 can be implemented using specialized hardware or firmware. As described above, multiple processors, memories, or both, may be used.
- all pixels within the current frame are assigned an initialized motion vector. They define initial motion fields that can be utilized to warp the reference frames to the current frame for a first processing level to shorten the motion lengths between reference frames.
- the initialization at 1202 can be performed using the same processing as described with regard to the initialization at 1102 , so the description is not repeated here.
- the process 1200 can estimate the motion field between the two reference frames using a multi-level process similar to that described with regard to FIG. 13 . Broadly stated, the process 1200 calculates the derivatives for a level, performs an optical flow estimation using the derivatives, and upscales the resulting motion field for the next level until all levels are considered.
- the motion field mv cur for a block at the current (or first) processing level is initialized at 1206 .
- the block may be a block of the current frame selected in a scan order (e.g., a raster scan order) of the current frame.
- the motion field mv cur for the block comprises the motion field for respective pixels of the block.
- all pixels within a current block are assigned an initialized motion vector.
- the initialized motion vectors are used to warp reference blocks to the current block to shorten the lengths between the reference blocks in the reference frames.
- the motion field mv cur is downscaled from its full resolution value to the resolution of the level.
- the initialization at 1206 may comprise downscaling the motion field for respective pixels of the block from the full resolution values that were initialized at 1202 . Downscaling may be performed using any technique, such as the downscaling described above.
- the horizontal component u r1 and the vertical component u r1 of the motion field mv r1 may be rounded to 1 ⁇ 8 pixel precision for the Y component and 1/16 pixel precision for the U and V component. Other values may be used.
- each pixel in a warped block e.g., E warped (r1)
- Subpixel interpolation may be performed using a conventional subpixel interpolation filter.
- the two warped reference blocks are used to estimate the motion field between them at 1210 .
- the processing at 1210 can be similar to that described with regard to the processing at 1108 in FIG. 11 .
- pixels in neighboring portions of the warped reference frame may be used as the pixel values E (r1) and E (r2) , as applicable. If the projected pixels are outside of the frame boundaries, copying the nearest available (i.e., within bounds) pixel may still be used.
- the derivatives may be downscaled to the current level.
- the downscaled derivatives at each level l may calculated by averaging within a 2 1 by 2 1 block, as discussed previously. The complexity of the calculations may be reduced by combining the two linear operations of calculating and averaging the derivatives in a single linear filter, but this is not required.
- the current motion field for the level is updated or refined using the estimation motion field between the warped reference blocks to complete the processing at 1210 .
- the current motion field for a pixel may be updated by adding the estimated motion field for a pixel on a pixel-by-pixel basis.
- an additional loop is included to set decreasing values for the Lagrangian parameter ⁇ such that, at each level, the motion field is estimated and refined using increasingly smaller values for the Lagrangian parameter ⁇ .
- this loop is omitted. That is, in the process 1200 as shown, only one value for the Lagrangian parameter ⁇ is used to estimate the motion field at a current processing level. This can be a relatively small value, such as 25.
- Other values for the Lagrangian parameter ⁇ are possible, e.g., depending upon the smoothness of the motion, the image resolution, or other variables.
- the process 1200 can include the additional loop for varying the Lagrangian parameter ⁇ .
- the Lagrangian parameter ⁇ may be set before estimating the motion field at 1210 such that warping the reference blocks at 1208 and estimating and updating the motion field at 1210 are repeated until all values for the Lagrangian parameter ⁇ have been used as described with respect to the processing at 1104 and 1110 in the process 1100 .
- the process 1200 advances to the query of 1212 after estimating and updating the motion field at 1210 . This is done after the first and only motion field estimation and update at a level at 1210 when a single value for the Lagrangian parameter ⁇ is used. When multiple values for the Lagrangian parameter ⁇ are modified at a processing level, the process 1200 advances to the query of 1212 after estimating and updating the motion field at 1210 using the final value for the Lagrangian parameter ⁇ .
- the process 1200 advances to 1214 , where the motion field is up-scaled before processing the next layer starting at 1206 . Upscaling may be performed according to any known technique.
- the process 1200 advances to 1218 to determine whether there are further frame portions (here, blocks) for prediction. If so, the process 1200 repeats starting at 1206 for the next block. The blocks may be processed in the scan order. Once there are no further blocks to consider in response to the query at 1218 , the process 1200 ends.
- the process 1200 can implement 1006 in the process 1000 .
- the process 1200 can implement 1006 in the process 1000 .
- one or more warped reference frame portions exist.
- Performing a prediction process at an encoder can include generating a prediction block from an optical flow reference frame for a current block of the frame.
- the optical flow reference frame can be the optical flow reference frame output by the process 1100 and stored in a reference frame buffer, such as the reference frame buffer 600 .
- the optical flow reference frame can be an optical flow reference frame generated by combining the optical flow reference portions output by the process 1200 .
- Combining the optical flow reference portions may include arranging the optical flow reference portions (e.g., co-located reference blocks) according to the pixel positions of the respective current frame portions used in the generation of the each of the optical flow reference portions.
- the resulting optical flow reference frame can be stored for use in a reference frame buffer of the encoder, such as the reference frame buffer 600 of the encoder 400 .
- Generating the prediction block at an encoder can include selecting the co-located block in the optical flow reference frame as the prediction block. Generating the prediction block at an encoder can instead include performing a motion search within the optical flow reference frame to select the best matching prediction block for the current block. However the prediction block is generated at the encoder, the resulting residual can be further processed, such as using the lossy encoding process described with regard to the encoder 400 of FIG. 4 .
- the optical flow reference frame may be excluded as a reference frame in any compound reference mode. This can simplify the rate distortion loop, and little additional impact on the encoding of a block is expected because the optical flow reference frame already considers both a forward and a backward reference frame.
- a flag may be encoded into the bitstream to indicate whether or not an optical flow reference frame is available for use in encoding the current frame. The flag may be encoded when any single block within the current frame is encoded using an optical flow reference frame block in an example. Where the optical flow reference frame is available for a current frame, it is possible to include an additional flag or other indicator (e.g., at the block level) indicating whether or not the current block was encoded by inter prediction using the optical flow reference frame.
- the prediction process at 1008 may be repeated for all blocks of the current frame until the current frame is encoded.
- the same processing to produce an optical flow reference frame for use in a prediction process as part of decoding may be performed at a decoder, such as the decoder 500 , as was performed at the encoder. For example, when the flag indicates that at least one block of the current frame was encoded using an optical flow reference frame portion, an entire optical flow reference frame can be generated and stored for use in the prediction process.
- additional savings in computational power at the decoder by modifying the process 1200 to limit performance of the process 1200 where coding blocks are identified as using the co-located/optical flow reference frame as an inter-prediction reference frame. This may be described by reference to FIG. 15 , which is a diagram illustrating one technique for optimizing a decoder.
- the process 1200 may be performed at 1006 for only the blocks within the current frame that are co-located with the identified reference blocks so as to produce the co-located/optical flow estimated reference blocks. In the example of FIG. 15 , this would result in six optical flow reference frame portions.
- the decoded residual for the current block from the encoded bitstream can be combined with the prediction block to form a reconstructed block as described by example with regard to the decoder 500 of FIG. 5 .
- the prediction process at 1008 may be repeated for all blocks of the current frame that were encoded using an optical flow reference frame portion until the current frame decoded.
- a block that is not encoded using an optical flow reference frame portion can be conventionally decoded according to the prediction mode decoded for the block from the encoded bitstream.
- the complexity of solving the optical flow formulation may be represented by O(N*M), where M is the number of iterations to solve the linear equations. M is not related to the number of levels, or the number of values for the Lagrangian parameter ⁇ . Instead, M is related to the calculation precision in solving the linear equations. A larger value for M results in better precision.
- moving from frame-level to sub-frame-level (e.g., block-based) estimation provides several options for reducing the decoder complexity. First, and because the constraint of motion field smoothness is relaxed at block boundaries, it is easier to converge to a solution when solving the linear equations for a block, resulting in a smaller M for a similar precision.
- each of the processes 1000 , 1100 , and 1200 is depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a method in accordance with the disclosed subject matter.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system.
- the transmitting station 102 can be implemented on a server and the receiving station 106 can be implemented on a device separate from the server, such as a hand-held communications device.
- the transmitting station 102 can encode content using an encoder 400 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102 .
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 400 may also include a decoder 500 .
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Description
J=J data +ΔJ spatial (1)
J data=(E x u+E y v+E t) (2)
E x=(indexr2−indexcur)/(indexr2−indexr1)·E x (r1)+(indexcur−indexr1)/(indexr2−indexr1)·E x (r2) (3)
E y=(indexcur−indexr1)/(indexr2−indexr1)·E y (r1)+(indexcur−indexr1)/(indexr2−indexr1)·E y (r2) (4)
E t =E (r2) −E (r1) (5)
J spatial=(Δu)2+(Δv)2 (6)
mvcur=−mvr1+mvr2
mvcur=−mvr1·(indexr2−indexr1)/(indexcur−indexr1), or
mvcur=mvr2·(indexr2−indexr1)/(indexr2−indexcur).
mvr1=(indexcur−indexr1)/(indexr2−indexr1)·mvcur
mvr2=(indexr2−indexcur)/(indexr2−indexr1)·mvcur
E (cur) =E warped (r1)·(indexr2−indexcur)/(indexr2−indexr1)+E warped (r2)·(indexcur−indexr1)/(indexr2−indexr1)
E (cur) =E warped (r2)
mvr1=(indexcur−indexr1)/(indexr2−indexr1)·mvcur
mvr2=(indexr2−indexcur)/(indexr2−indexr1)·mvcur
Claims (16)
J=J data +λJ spatial,
Priority Applications (9)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/817,369 US10659788B2 (en) | 2017-11-20 | 2017-11-20 | Block-based optical flow estimation for motion compensated prediction in video coding |
JP2019566280A JP6905093B2 (en) | 2017-08-22 | 2018-05-10 | Optical flow estimation of motion compensation prediction in video coding |
KR1020217026758A KR102400078B1 (en) | 2017-08-22 | 2018-05-10 | Optical flow estimation for motion compensated prediction in video coding |
CN201880036783.5A CN110741640B (en) | 2017-08-22 | 2018-05-10 | Optical flow estimation for motion compensated prediction in video coding |
KR1020197035698A KR102295520B1 (en) | 2017-08-22 | 2018-05-10 | Optical Flow Estimation for Motion Compensation Prediction in Video Coding |
PCT/US2018/032054 WO2019040134A1 (en) | 2017-08-22 | 2018-05-10 | Optical flow estimation for motion compensated prediction in video coding |
EP18730489.4A EP3673655A1 (en) | 2017-08-22 | 2018-05-10 | Optical flow estimation for motion compensated prediction in video coding |
US16/866,591 US11350102B2 (en) | 2017-11-20 | 2020-05-05 | Block-based optical flow estimation for motion compensated prediction in video coding |
US17/738,105 US11876974B2 (en) | 2017-11-20 | 2022-05-06 | Block-based optical flow estimation for motion compensated prediction in video coding |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/817,369 US10659788B2 (en) | 2017-11-20 | 2017-11-20 | Block-based optical flow estimation for motion compensated prediction in video coding |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/866,591 Continuation US11350102B2 (en) | 2017-11-20 | 2020-05-05 | Block-based optical flow estimation for motion compensated prediction in video coding |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190158843A1 US20190158843A1 (en) | 2019-05-23 |
US10659788B2 true US10659788B2 (en) | 2020-05-19 |
Family
ID=66532653
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/817,369 Active 2038-01-19 US10659788B2 (en) | 2017-08-22 | 2017-11-20 | Block-based optical flow estimation for motion compensated prediction in video coding |
US16/866,591 Active US11350102B2 (en) | 2017-11-20 | 2020-05-05 | Block-based optical flow estimation for motion compensated prediction in video coding |
US17/738,105 Active US11876974B2 (en) | 2017-11-20 | 2022-05-06 | Block-based optical flow estimation for motion compensated prediction in video coding |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/866,591 Active US11350102B2 (en) | 2017-11-20 | 2020-05-05 | Block-based optical flow estimation for motion compensated prediction in video coding |
US17/738,105 Active US11876974B2 (en) | 2017-11-20 | 2022-05-06 | Block-based optical flow estimation for motion compensated prediction in video coding |
Country Status (1)
Country | Link |
---|---|
US (3) | US10659788B2 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3306922A1 (en) * | 2016-10-05 | 2018-04-11 | Thomson Licensing | Method and apparatus for encoding a picture using rate-distortion based block splitting |
SG11202109031TA (en) | 2019-03-18 | 2021-09-29 | Tencent America LLC | Method and apparatus for video coding |
US20220337842A1 (en) * | 2019-09-10 | 2022-10-20 | Lg Electronics Inc. | Image encoding/decoding method and device for performing bdof, and method for transmitting bitstream |
CN113473145A (en) * | 2020-03-31 | 2021-10-01 | 武汉Tcl集团工业研究院有限公司 | Video compression method, video decompression method, intelligent terminal and storage medium |
CN113630621B (en) * | 2020-05-08 | 2022-07-19 | 腾讯科技（深圳）有限公司 | Video processing method, related device and storage medium |
US11638025B2 (en) * | 2021-03-19 | 2023-04-25 | Qualcomm Incorporated | Multi-scale optical flow for learned video compression |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6097854A (en) | 1997-08-01 | 2000-08-01 | Microsoft Corporation | Image mosaic construction system and apparatus with patch-based alignment, global block adjustment and pair-wise motion-based local warping |
US20040252759A1 (en) | 2003-06-13 | 2004-12-16 | Microsoft Corporation | Quality control in frame interpolation with motion analysis |
USRE39279E1 (en) | 1991-11-08 | 2006-09-12 | Matsushita Electric Industrial Co., Ltd. | Method for determining motion compensation |
US20080204592A1 (en) | 2007-02-22 | 2008-08-28 | Gennum Corporation | Motion compensated frame rate conversion system and method |
US20130121416A1 (en) * | 2010-07-21 | 2013-05-16 | Dolby Laboratories Licensing Corporation | Reference Processing Using Advanced Motion Models for Video Coding |
US20140307982A1 (en) * | 2013-04-16 | 2014-10-16 | The Government Of The United States Of America, As Represented By The Secretary Of The Navy | Multi-frame super-resolution of image sequence with arbitrary motion patterns |
US20150078456A1 (en) | 2013-07-31 | 2015-03-19 | Nokia Corporation | Method and apparatus for video coding and decoding |
US20150339806A1 (en) | 2014-05-26 | 2015-11-26 | Fujitsu Limited | Image denoising method and image denoising apparatus |
US20170094305A1 (en) | 2015-09-28 | 2017-03-30 | Qualcomm Incorporated | Bi-directional optical flow for video coding |
WO2017133661A1 (en) | 2016-02-05 | 2017-08-10 | Mediatek Inc. | Method and apparatus of motion compensation based on bi-directional optical flow techniques for video coding |
Family Cites Families (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7883739B2 (en) | 2003-06-16 | 2011-02-08 | Lam Research Corporation | Method for strengthening adhesion between dielectric layers formed adjacent to metal layers |
US20060233253A1 (en) | 2005-03-10 | 2006-10-19 | Qualcomm Incorporated | Interpolated frame deblocking operation for frame rate up conversion applications |
US8953685B2 (en) | 2007-12-10 | 2015-02-10 | Qualcomm Incorporated | Resource-adaptive video interpolation or extrapolation with motion level analysis |
US8477848B1 (en) | 2008-04-22 | 2013-07-02 | Marvell International Ltd. | Picture rate conversion system architecture |
US8368771B2 (en) | 2009-12-21 | 2013-02-05 | Olympus Imaging Corp. | Generating a synthesized image from a plurality of images |
US20110249734A1 (en) | 2010-04-09 | 2011-10-13 | Segall Christopher A | Methods and Systems for Intra Prediction |
JP2011259040A (en) | 2010-06-04 | 2011-12-22 | Sony Corp | Image processing system and method |
EP2490448A1 (en) | 2011-02-18 | 2012-08-22 | Siemens Aktiengesellschaft | Encoding method and image encoding device for compressing an image sequence |
KR101792501B1 (en) | 2011-03-16 | 2017-11-21 | 한국전자통신연구원 | Method and apparatus for feature-based stereo matching |
GB2497915B (en) | 2011-10-25 | 2015-09-09 | Skype | Estimating quality of a video signal |
US10200711B2 (en) | 2015-03-27 | 2019-02-05 | Qualcomm Incorporated | Motion vector derivation in video coding |
KR102353778B1 (en) | 2016-10-11 | 2022-01-20 | 한국전자통신연구원 | Method and apparatus for encoding/decoding image and recording medium for storing bitstream |
US10904565B2 (en) * | 2017-06-23 | 2021-01-26 | Qualcomm Incorporated | Memory-bandwidth-efficient design for bi-directional optical flow (BIO) |
US11284107B2 (en) | 2017-08-22 | 2022-03-22 | Google Llc | Co-located reference frame interpolation using optical flow estimation |
-
2017
- 2017-11-20 US US15/817,369 patent/US10659788B2/en active Active
-
2020
- 2020-05-05 US US16/866,591 patent/US11350102B2/en active Active
-
2022
- 2022-05-06 US US17/738,105 patent/US11876974B2/en active Active
Patent Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
USRE39279E1 (en) | 1991-11-08 | 2006-09-12 | Matsushita Electric Industrial Co., Ltd. | Method for determining motion compensation |
US6097854A (en) | 1997-08-01 | 2000-08-01 | Microsoft Corporation | Image mosaic construction system and apparatus with patch-based alignment, global block adjustment and pair-wise motion-based local warping |
US20040252759A1 (en) | 2003-06-13 | 2004-12-16 | Microsoft Corporation | Quality control in frame interpolation with motion analysis |
US20080204592A1 (en) | 2007-02-22 | 2008-08-28 | Gennum Corporation | Motion compensated frame rate conversion system and method |
US20130121416A1 (en) * | 2010-07-21 | 2013-05-16 | Dolby Laboratories Licensing Corporation | Reference Processing Using Advanced Motion Models for Video Coding |
US20140307982A1 (en) * | 2013-04-16 | 2014-10-16 | The Government Of The United States Of America, As Represented By The Secretary Of The Navy | Multi-frame super-resolution of image sequence with arbitrary motion patterns |
US20150078456A1 (en) | 2013-07-31 | 2015-03-19 | Nokia Corporation | Method and apparatus for video coding and decoding |
US20150339806A1 (en) | 2014-05-26 | 2015-11-26 | Fujitsu Limited | Image denoising method and image denoising apparatus |
US20170094305A1 (en) | 2015-09-28 | 2017-03-30 | Qualcomm Incorporated | Bi-directional optical flow for video coding |
WO2017133661A1 (en) | 2016-02-05 | 2017-08-10 | Mediatek Inc. | Method and apparatus of motion compensation based on bi-directional optical flow techniques for video coding |
Non-Patent Citations (30)
Title |
---|
"Introduction to Video Coding Part 1: Transform Coding", Mozilla, Mar. 2012, 171 pp. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95 pp. |
"VP8 Data Format and Decoding Guide, WebM Project", Google On2, Dec. 1, 2010, 103 pp. |
A. Alshin et al., "Bi-directional optical flow for improving motion compensation", 2010 Picture Coding Symposium (PCS 2010), Nagoya, Japan, Dec. 8-10, 2010 (IEEE, Piscataway, NJ), pp. 422-425. |
Alexander Alshin et al., "Bi-directional Optical Flow for Future Video Codec", 2016 Data Compression -Conference (DCC), IEEE, Mar. 30, 2016, pp. 83-90. |
Alexander Alshin et al., "Bi-directional Optical Flow for Future Video Codec", 2016 Data Compression —Conference (DCC), IEEE, Mar. 30, 2016, pp. 83-90. |
Bankoski et al., "VP8 Data Format and Decoding Guide draft-bankoski-vp8-bitstream-02", Network Working Group, Internet-Draft, May 18, 2011, 288 pp. |
Bankoski et al., "VP8 Data Format and Decoding Guide", Independent Submission RFC 6389, Nov. 2011, 305 pp. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6 pp. |
International Search Report and Written Opinion in PCT/US2018/032054, dated Jul. 23, 2018, 14 pgs. |
J. Chen et al., "Algorithm description of Joint Exploration Test Model 7 (JEM7)", Joint Video Exploration Team (JVET) of ITU-T SG 16 WP 3 and ISO/IEC JTC1/SC29NVG11, 7th Meeting, Torino, Italy, Jul. 13-21, 2017 (url: http://phenix.int-evry.fr/jvet/, document no. JVET-G1001 (Aug. 19, 2017), 48 pgs. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Sun, Deqing et al.; "Learning Optical Flow"; ECCV 2008, Part III, LNC 5304; pp. 83-97. |
Yi Chin et al., "Dense true motion field compensation for video coding", 2013 IEEE International Conference on Image Processing, IEEE, (Sep. 15, 2013), pp. 1958-1961. |
Also Published As
Publication number | Publication date |
---|---|
US11350102B2 (en) | 2022-05-31 |
US20200267391A1 (en) | 2020-08-20 |
US11876974B2 (en) | 2024-01-16 |
US20190158843A1 (en) | 2019-05-23 |
US20220264109A1 (en) | 2022-08-18 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11284107B2 (en) | Co-located reference frame interpolation using optical flow estimation | |
KR102400078B1 (en) | Optical flow estimation for motion compensated prediction in video coding | |
US11876974B2 (en) | Block-based optical flow estimation for motion compensated prediction in video coding | |
US10986361B2 (en) | Video coding using reference motion vectors | |
US9407915B2 (en) | Lossless video coding with sub-frame level optimal quantization values | |
US11025950B2 (en) | Motion field-based reference frame rendering for motion compensated prediction in video coding | |
US10506249B2 (en) | Segmentation-based parameterized motion models | |
US20180077423A1 (en) | Dual filter type for motion compensated prediction in video coding | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
CN107205156B (en) | Motion vector prediction by scaling | |
US10694205B2 (en) | Entropy coding of motion vectors using categories of transform blocks | |
US8908767B1 (en) | Temporal motion vector prediction | |
US11917128B2 (en) | Motion field estimation based on motion trajectory derivation | |
WO2023205371A1 (en) | Motion refinement for a co-located reference frame | |
CN118055253A (en) | Optical flow estimation for motion compensated prediction in video coding | |
EP4352958A1 (en) | Reference motion vector candidate bank |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:XU, YAOWU;LI, BOHAN;HAN, JINGNING;REEL/FRAME:044444/0442Effective date: 20171117 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
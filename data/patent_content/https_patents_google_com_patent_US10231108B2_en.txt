US10231108B2 - Virtual addressing for mesh networks - Google Patents
Virtual addressing for mesh networks Download PDFInfo
- Publication number
- US10231108B2 US10231108B2 US15/232,040 US201615232040A US10231108B2 US 10231108 B2 US10231108 B2 US 10231108B2 US 201615232040 A US201615232040 A US 201615232040A US 10231108 B2 US10231108 B2 US 10231108B2
- Authority
- US
- United States
- Prior art keywords
- mesh network
- packet
- uid
- address
- network device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/80—Services using short range communication, e.g. near-field communication [NFC], radio-frequency identification [RFID] or low energy communication
-
- H04L61/2038—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/50—Address allocation
- H04L61/5038—Address allocation for local use, e.g. in LAN or USB networks, or in a controller area network [CAN]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/06—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols the encryption apparatus using shift registers or memories for block-wise or stream coding, e.g. DES systems or RC4; Hash functions; Pseudorandom sequence generators
- H04L9/0618—Block ciphers, i.e. encrypting groups of characters of a plain text message using fixed encryption transformation
- H04L9/0637—Modes of operation, e.g. cipher block chaining [CBC], electronic codebook [ECB] or Galois/counter mode [GCM]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3236—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials using cryptographic hash functions
- H04L9/3242—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials using cryptographic hash functions involving keyed hash functions, e.g. message authentication codes [MACs], CBC-MAC or HMAC
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W12/00—Security arrangements; Authentication; Protecting privacy or anonymity
- H04W12/10—Integrity
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/12—Applying verification of the received information
- H04L63/123—Applying verification of the received information received data contents, e.g. message integrity
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/12—Applying verification of the received information
- H04L63/126—Applying verification of the received information the source of the received data
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W12/00—Security arrangements; Authentication; Protecting privacy or anonymity
- H04W12/60—Context-dependent security
- H04W12/69—Identity-dependent
- H04W12/71—Hardware identity
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W84/00—Network topologies
- H04W84/18—Self-organising networks, e.g. ad-hoc networks or sensor networks
Definitions
- a mesh network device may have a number of capabilities that an application may want to access, such as receiving sensor data or controlling an actuator. Addressing in mesh networks is typically done at the device or node level. Addressing an individual capability within a mesh network device increases the amount of addressing payload in mesh network packets in order to specify an address for the capability and the node. However many devices on mesh networks are designed to operate for extended periods of time on battery power, which limits the available computing, user interface, and radio resources in the devices. Increasing the size of addresses, to address the node and a capability, in turn leads to transmitting larger packets over the mesh network, which increases power consumption and reduces network capacity.
- Virtual addressing for mesh networks generally related to addressing packets in a mesh network, is described.
- a node in the mesh network hashes a unique identifier (UID) to form a UID hash and generates a key identifier that encrypts an application key.
- the node forms a virtual address that includes a portion of the UID hash.
- the node then inserts the formed virtual address in a destination address field in a header of a packet, and transmits the packet over the mesh network.
- UID unique identifier
- a system that includes a destination node that receives a packet over a mesh network and determines from an address type indicator in the received packet that the destination address field in a header of the packet includes a virtual address.
- the destination node disambiguates the virtual address in the received packet using a known unique identifier (UID) to determine that the virtual address corresponds to the known UID.
- UID unique identifier
- the destination node authenticates a packet payload using the UID as additional data in the authentication.
- Virtual addressing for mesh networks is described.
- a source node device of a mesh network is commissioned with a unique identifier (UID) associated with an application.
- the node inserts data from the application into an application payload of a packet and generates a virtual address for the destination address of the packet, using the UID associated with the application in the generation of the virtual address.
- the source node inserts the generated virtual address into a destination address field of the header of the packet.
- the source node can then transmit the packet over the mesh network to publish the data to one or more destination nodes subscribing to the data published to the virtual address.
- FIG. 1 illustrates an example mesh network system in which various embodiments of virtual addressing for mesh networks can be implemented.
- FIG. 2 illustrates an example environment in which various embodiments of virtual addressing for mesh networks can be implemented.
- FIG. 3 illustrates a more detailed example environment in which various embodiments of virtual addressing for mesh networks can be implemented.
- FIG. 4 illustrates an example mesh network packet for various embodiments of virtual addressing for mesh networks.
- FIG. 5 illustrates an example method of virtual addressing for mesh networks in accordance with embodiments of the techniques described herein.
- FIG. 6 illustrates another example method of virtual addressing for mesh networks in accordance with embodiments of the techniques described herein.
- FIG. 7 illustrates an example method of virtual addressing for mesh networks related to publishing data and subscribing to data using virtual addresses in a mesh network in accordance with embodiments of the techniques described herein.
- FIG. 8 illustrates an example environment in which a mesh network can be implemented in accordance with embodiments of the techniques described herein.
- FIG. 9 illustrates an example mesh network device that can be implemented in a mesh network environment in accordance with one or more embodiments of the techniques described herein.
- Wireless mesh networks are communication networks having wireless nodes connected in a mesh topology that provides reliable and redundant communication paths for traffic within the mesh network.
- Wireless mesh networks use multiple radio links, or hops, to forward traffic between devices within the mesh network. This provides coverage for areas larger than the area covered by a single radio link.
- Wireless mesh networks can be based on proprietary technologies, or standards-based technologies.
- wireless mesh networks may be based on the IEEE 802.15.4 standard, which defines physical (PHY) layer and Media Access Control (MAC) layer features and services for use by applications at higher layers of a mesh networking stack.
- PHY physical
- MAC Media Access Control
- Upper-layer applications rely on these standards-defined services to support addressing and routing of packet data to support application-level communication across a mesh network and between the mesh network and external networks.
- BLE defines an application layer, a transport layer, a network layer, and a bearer layer.
- the bearer layer defines how network messages are transported between nodes of the mesh network.
- the network layer defines how messages are addressed to mesh network nodes, defines the network message format that is transported by the bearer layer, and defines how the application payload is included with the network message.
- the transport layer defines the format of the application payload and how the application payload is encrypted and authenticated.
- the application layer defines how applications use the transport layer and defines the operations and behavior of applications.
- a particular capability or a group of capabilities in a node may be included in a profile or a model for a particular function or application.
- an identifier of the profile or the profile and the capability within the profile are included in the payload of a message to the node. Including this additional information profile and capability identification increases the amount of data that is transmitted to send a command or receive data.
- a mesh network may include a node (i.e., a mesh network device) with a number of capabilities for sensing and/or actuation.
- An application running on another node may only be interested in receiving data from one of a number of sensors in the node, controlling a single actuator in the node, controlling a combination of some of the actuators in the node, or controlling any arbitrary combination of actuators in a number of nodes.
- Adding additional addressing information to a mesh network packet to facilitate sub-addressing the capabilities in the nodes increases packet length, which in turn increases transmission time for the packet, increases power consumption, and decreases network efficiency.
- a unique identifier that is unique to a capability or a sub-address of a node provides addressing that is finer grained than addressing at the node level.
- the unique identifiers are compressed to a shorter-form virtual address that is inserted in a destination address field of a header of the mesh network packet.
- Virtual addresses are also associated with capabilities in nodes that have actuator controls. For example, an application for a network-connected power strip associates a UID with each switched socket in the power strip. Any node can then send a control command to the virtual address of any socket. Also, sockets in a single power strip or multiple power strips may be grouped together and associated with a UID to let an application control the group of sockets with a single command to the virtual address associated with the UID for the group of sockets.
- FIG. 1 illustrates an example mesh network system 100 in which various embodiments of virtual addressing for mesh networks can be implemented.
- the mesh network 100 is a wireless mesh network that includes nodes 102 .
- the nodes 102 are mesh network devices, as described below with respect to FIG. 9 , which include a mesh network interface for communication over the mesh network 100 .
- the nodes 102 receive and transmit packet data over the mesh network interface.
- the nodes 102 also route, forward, and/or relay packets across the mesh network 100 .
- Each node 102 may include one or more capabilities, such as a sensor that provides readings or an actuator that can be controlled.
- the node 102 is a node with a sensor.
- the node 102 with the sensor at 104 publishes readings from the sensor to a UID (shown as UID 1 at 104 ) that is associated with the sensor and readings from the sensor.
- UID 1 at 104 a UID that is associated with the sensor and readings from the sensor.
- Other nodes 102 that have applications interested in receiving the sensor readings, subscribe to UID 1 to receive the sensor readings over the mesh network 100 .
- a different node 102 has two actuator controls, each of which is associated with a UID (UID 2 and UID 3 at 106 ).
- Any node 102 that wants to control the actuators at 106 addresses a mesh network packet to the virtual address for the UID that is associated with the specific actuator, and includes an application payload with the settings for the actuator control.
- Any node 102 may have any number and combination of sensors and/or actuator controls.
- a different node 102 includes four actuator controls at 108 (UID 4 , UID 5 , UID 6 , and UID 7 ) and a sensor reading (UID 8 ).
- the assignment of UIDs to capabilities within the nodes 102 facilitates establishing connections at the application level in the nodes 102 , where information, such as sensor readings and/or control settings, can be published to a UID and/or subscribed to using a UID.
- the publishing and subscribing of information by UID creates a software bus associated with each UID to exchange information between applications over the mesh network 100 .
- FIG. 2 illustrates an example environment 200 in which various embodiments of virtual addressing for mesh networks can be implemented.
- the environment 200 illustrates additional ways in which UIDs may be assigned across one or more of the nodes 102 in the mesh network 100 , as shown and described with reference to FIG. 1 .
- a controller node 202 (e.g., an example of a node 102 in the mesh network 100 ) can control functions in various other nodes 102 .
- the controller node 202 is implemented as a lighting controller that is designed to control lights in lighting nodes 204 , 206 , and/or 208 .
- UIDs are assigned to various lights and/or combinations of lights in one or more of the lighting nodes 204 , 206 , and/or 208 .
- Individual lights in the lighting node 204 are assigned to UID 10 , UID 11 , UID 12 , and UID 13 .
- the controller node 202 controls the individual lights in the lighting node 204 by publishing control commands in a mesh network packet that is addressed to the respective virtual address of the UID of the light(s) being controlled.
- Virtual addresses can also be used to address combinations of capabilities in a node 102 .
- the controller node 202 can control light 3 and light 4 in the lighting node 204 by publishing a command in a packet that is addressed to the virtual address for UID 14 , which is assigned to controlling the combination of light 3 and light 4 with a single command.
- Virtual addresses can also be used to address combinations of capabilities in multiple nodes 102 .
- the controller node 202 can control light 1 in the lighting node 204 , lights 7 and 8 in the lighting node 206 , and lights 10 and 11 in the lighting node 208 by publishing a command that is addressed to the virtual address for UID 15 , which is assigned to controlling this combination of lights in the lighting nodes 204 , 206 , and 208 .
- the controller node 202 sends a single mesh network packet to control the lights in the multiple lighting nodes 204 , 206 , and 208 .
- the packet is relayed across the mesh network 100 in any suitable way, such as flooding the network by relaying the packet through multiple nodes 102 (not shown in FIG. 2 for the sake of clarity) of the mesh network 100 from the controller node 202 to the lighting nodes 204 , 206 , and 208 .
- FIG. 3 illustrates an example environment 300 in which various embodiments of virtual addressing for mesh networks can be implemented.
- the environment 300 includes selected nodes 102 from the mesh network 100 to illustrate techniques of virtual addressing for mesh networks in greater detail.
- the Environment 300 illustrates two nodes 102 of the mesh network 100 , as a sensor node 302 , and an actuator node 304 .
- the sensor node 302 and the actuator node 304 are shown as including a network stack 306 that is included in all of the nodes 102 .
- the network stack 306 includes an application layer 308 , a transport layer 310 , a network layer 312 , and a bearer layer 314 .
- the network stack 306 is shown in this example with four layers, but as is well known, the network stack 306 may alternatively have fewer or more layers.
- the operations described with respect to specific layers below may alternatively be performed at other layers, partitioned between multiple layers, or combined from multiple layers to a single layer.
- the sensor node 302 and the actuator node 304 include one or more applications 316 that use the network stack 306 to communicate over the mesh network 100 .
- the application 316 is a logical grouping of related functions, which may also described as a model, a profile, a cluster, and so forth.
- the application 316 in the sensor node 302 is a sensor application that manages functions of reading a sensor, processing the data read from the sensor, and publishing sensor readings to the UID associated with the sensor reading. The sensor reading of the sensor node 302 is published to the virtual address associated with the UID.
- the application 316 in the sensor node 302 , publishes the sensor reading by passing application data that will be included in a mesh network packet to the application layer 308 of the network stack 306 .
- the application layer 308 defines how the application 316 uses the transport layer 310 .
- the application layer 308 passes the application data and configuration information to the transport layer 310 .
- the transport layer 310 defines how the application payload is encrypted and authenticated, as described in greater detail below.
- the transport layer 310 sends the application payload to the network layer 312 .
- the network layer 312 determines how the mesh network packet is addressed and how the application payload is included in the mesh network packet.
- the network layer 312 forms a destination address (DST) for the mesh network packet. If the application 316 provides a UID for the virtual address of the mesh network packet, the virtual address is generated, as described in detail below. The generated virtual address is inserted into the DST field of the packet.
- the network layer 312 sends the mesh network packet, including the virtual address and application payload, to the bearer layer 314 .
- the bearer layer 314 transmits the mesh network packet over the mesh network 100 .
- the actuator node 304 receives the mesh network packet from the mesh network 100 at the bearer layer 314 .
- the bearer layer 314 passes the received mesh network packet to the network layer 312 .
- the network layer 312 determines that the destination address is a virtual address and disambiguates the virtual address in the destination address field of the mesh network packet to determine that the UID may correspond to the virtual address. If there is a non-zero probability that the UID is a possible match for any UIDs known to (i.e., subscribed to by) the actuator node 304 , the network layer 312 sends the application payload from the packet to the transport layer 310 .
- the UID may be compared against a list of precomputed virtual addresses that are known to the actuator node 304 , by using a hash table, a binary search, a linear search, and so forth.
- the transport layer 310 performs the authentication process on the application payload, to confirm the virtual address is correctly addressing the actuator node 304 , as described in detail below. After confirming the authenticity and the validity of the application payload, the transport layer 310 sends the application payload to the application 316 at the application layer 308 in the actuator node 304 .
- FIG. 4 illustrates an example mesh network packet 400 for various embodiments of virtual addressing for mesh networks techniques.
- the example packet 400 includes a number of fields, the contents of which are determined by the various layers of the network stack 306 .
- the example packet 400 may be any type of wireless communication packet, such as a BLE advertisement packet, a ZigBee packet, an IEEE 802.15.4 packet, and so forth.
- the various fields in the packet 400 are shown for illustrative purposes and may vary in length and/or location within the packet 400 .
- a network identifier (Network ID) 402 may include various information added to the packet 400 by the bearer layer 314 and/or network layer 312 .
- the network identifier 402 field may include synchronization information, such as a preamble and/or training sequence, a network identifier value, a packet priority, a network initialization vector, and so forth.
- a Time-To-Live (TTL) 404 field includes a value that indicates the number of times the packet 400 may be forwarded across the mesh network 100 .
- a sequence number (SEQ) 406 field includes a value that is incremented in the network layer 312 for every packet transmitted by each node 102 .
- a receiving node 102 uses the sequence number 406 to reorder the packets 400 that are received out of order at the receiving node 102 .
- the SEQ 406 is also used in the generation of nonce values that are used for replay protection and security purposes in the mesh network 100 .
- a source address (SRC) 408 field includes the address of the source node 102 of the packet 400 .
- a destination address (DST) 410 field includes the destination address for the packet 400 .
- the destination address 410 may include any one of a number of different address types, such as a local address, a device address, a group address, a virtual address, a unicast address, a multicast address, a broadcast address, and so forth.
- the network identifier 402 , the TTL 404 , the SEQ 406 , the SRC 408 and the DST 410 fields may be collectively referred to as the header (or packet header) of the packet 400 .
- the packet header may include other fields as defined by any particular networking technology.
- An application payload 412 includes data defined by an application 316 at the application layer 308 .
- the application payload 412 may be encrypted using any suitable encryption techniques, such as Advanced Encryption Standard Counter with CBC-MAC (AES-CCM).
- a transport message integrity check (MIC trans ) 414 trans authenticates the application payload 412 .
- a network message integrity check (MIC net ) 416 authenticates the destination address 410 .
- the MIC trans 414 and the MIC net 416 are generated using any suitable hashing technique, such as AES-CCM.
- An identifier of an application key, used to encrypt the application payload 412 is included in a transport control field (TCF) 422 .
- TCF transport control field
- the destination address 410 may be any one of various types of addresses including the virtual address.
- the DST 410 includes an address type 418 field that indicates the type of address in the DST 410 .
- the address type 418 is a bit field of any suitable length to label the type of the address in the DST 410 .
- the address type 418 is the first two bits of the destination address 410 , where a value of “11” indicates that the destination address 410 is a group address; a value of “10” indicates that the DST 410 is the virtual address, and so forth.
- the DST 410 When the address type 418 indicates that the DST 410 is a virtual address, the DST 410 includes a UID hash 420 .
- the bit field for the UID hash 420 is fourteen bits long, resulting in 16,384 possible values for the UID hash 420 .
- the DST 410 is the concatenation of the address type 418 and the UID hash 420 , shown in binary form as “0b 10vv vvvvvvvvvvvvvvvvvvvvvvvv,” where “v” is a bit in the UID hash 420 .
- Other lengths for the address type 418 and the UID hash 420 are contemplated.
- the possible address space for nodes 102 is large enough to avoid mesh network interface address collisions between any two mesh network devices.
- the address space represented in the UID is larger than can be directly addressed in the DST 410 in the packet 400 .
- the UID is any arbitrary length, shared, unique identifier that is known to all nodes 102 and/or applications 316 using the UID.
- the UID may be a 128-bit Universally Unique Identifier (UUID), a 64-bit Extended Unique Identifier (EUI-64), a 48-bit Media Access Control address (MAC-48), a 32-bit address, a 128-bit IPv6 address, a radio interface address, a null-terminated string or label, a JPEG image, and so forth.
- UUID Universally Unique Identifier
- EUI-64 Extended Unique Identifier
- MAC-48 48-bit Media Access Control address
- 32-bit address a 128-bit IPv6 address
- radio interface address a null-terminated string or label
- JPEG image JPEG image
- Each UID is commissioned out-of-band of the mesh network 100 to the nodes 102 .
- the applications 316 and the network stack 306 in the each node 102 which publish and subscribe using the UID, have access to the UID(s) commissioned to that node 102 . Further description of commissioning techniques for the nodes 102 is out of the scope of this description.
- the UID is hashed to produce the UID hash 420 included in the DST 410 .
- the UID is elided from the DST 410 by the hashing of the UID and a virtual address cryptographic salt to produce a short-form virtual address that is inserted into the DST 410 field of the packet 400 .
- the hashing may be performed using any suitable cryptographic technique, such as Cipher-based Message Authentication Code (CMAC) and the like.
- CMAC Cipher-based Message Authentication Code
- the application payload 412 is authenticated and encrypted at the transport layer 310 before transmission using AES-CCM.
- the network initialization vector increments periodically to assure that the application nonce is guaranteed to be fresh.
- the network initialization vector is incremented to safely reset the SEQ 406 when
- the network message integrity check 416 is generated to authenticate the destination address 410 .
- the network message integrity check 416 is set by the network layer 312 at each node 102 that transmits or relays the packet 400 .
- the probability of a collision between the UID hashes 420 is one in 16,384.
- the transport layer 310 disambiguates the DST 410 , using equation (4), to compare the application key decrypted from the key identifier 420 against one or more application keys known to the receiving node 102 and using equation (1), to determine that the decrypted UID is one of one or more UIDs known to the receiving node 102 .
- the transport layer 310 uses the MIC trans 414 to authenticate that the received application payload.
- the transport layer 310 compares the MIC trans 414 in the packet 400 to a result of a calculation using equation (2). If the result of the comparison does not match, the application payload is discarded. If the comparison results in a match, then the authentication indicates that the received application payload is intended for the application associated with the known UID and the application payload has not been altered.
- the message is passed from the transport layer 310 to the application layer 308 . If there is no match to a known application key and/or UID, the received packet 400 is silently discarded.
- the combination of using the MIC trans 414 and the UID hash 420 results in a low probability of erroneous application payload information reaching the application 316 , while reducing the size of the destination address required to communicate the UID.
- This low error probability results from assigning virtual addresses based on large random numbers to dynamically pair mesh network nodes 102 , while eliminating the need to maintain a central entity in the mesh network 100 to statically assign unique addresses and ensure no duplicate addresses are assigned.
- the resulting probability of erroneous application payload reaching an application is 1 in 2 46 .
- Example methods 500 through 700 are described with reference to respective FIGS. 5-7 in accordance with one or more embodiments of virtual addressing for mesh networks.
- any of the components, modules, methods, and operations described herein can be implemented using software, firmware, hardware (e.g., fixed logic circuitry), manual processing, or any combination thereof.
- Some operations of the example methods may be described in the general context of executable instructions stored on computer-readable storage memory that is local and/or remote to a computer processing system, and implementations can include software applications, programs, functions, and the like.
- any of the functionality described herein can be performed, at least in part, by one or more hardware logic components, such as, and without limitation, Field-programmable Gate Arrays (FPGAs), Application-specific Integrated Circuits (ASICs), Application-specific Standard Products (ASSPs), System-on-a-chip systems (SoCs), Complex Programmable Logic Devices (CPLDs), and the like.
- FPGAs Field-programmable Gate Arrays
- ASICs Application-specific Integrated Circuits
- ASSPs Application-specific Standard Products
- SoCs System-on-a-chip systems
- CPLDs Complex Programmable Logic Devices
- FIG. 5 illustrates example method(s) 500 of virtual addressing for mesh networks.
- the order in which the method blocks are described are not intended to be construed as a limitation, and any number of the described method blocks can be combined in any order to implement a method, or an alternate method.
- a node generates a key identifier that identifies an encryption key associated with an application key.
- a node 102 of the mesh network 100 uses a hash function to hash an application key with the key-identifier cryptographic salt to form an intermediate hash of the application key.
- the node 102 uses the hash function to hash the intermediate hash of the application key with the virtual address key cryptographic salt to form the key identifier.
- the node hashes a unique identifier (UID) to form a UID hash.
- UID unique identifier
- the node 102 uses the hash function to hash a UID with the virtual address cryptographic salt to form a UID hash 420 .
- the node sets a value of an address type indicator to indicate that a destination address in a mesh network packet is a virtual address. For example, the node 102 sets a value of the address type 418 to indicate that the DST 410 is a virtual address.
- the node forms a virtual address that includes the address type and the UID hash. For example, the node 102 concatenates the address type 418 and the UID hash 420 to form a virtual address.
- the node inserts the virtual address into a destination address field of a header of the mesh network packet, at 512 the node inserts the key identifier into a transport control field, and at 514 , the node transmits the mesh network packet over a mesh network.
- the node 102 inserts the virtual address into the DST 410 field of the packet 400 , inserts the key identifier into the TCF 422 , and transmits the packet 400 over the mesh network 100 .
- FIG. 6 illustrates example method(s) 600 of virtual addressing for mesh networks.
- the order in which the method blocks are described are not intended to be construed as a limitation, and any number of the described method blocks can be combined in any order to implement a method, or an alternate method.
- a node receives a packet over a mesh network, and at 604 the node determines that an address type indicator indicates that the destination address field of the packet includes a virtual address. For example, a node 102 receives a packet 400 over the mesh network 100 . The node 102 determines from the value in the address type 418 included in the DST 410 that the destination address in the DST 410 is a virtual address.
- the node disambiguates the virtual address in the received packet using a unique identifier (UID).
- UID unique identifier
- the node 102 disambiguates a UID hash 420 in the DST 410 by using a UID known to the node 102 .
- the node 102 hashes the known UID and compares the result of the hash operation with the UID hash 420 in the received packet 400 to disambiguate the virtual address.
- the UID may be compared against a list of precomputed virtual addresses that are known to the actuator node 304 , by using a hash table, a binary search, a linear search, and so forth.
- the node authenticates an application payload in the received packet using the UID as additional data.
- the node 102 authenticates the application payload 412 in the packet 400 using the UID known to the node 102 .
- the node 102 hashes the application payload 412 using the known UID as additional data for the hash operation and compares the result of the hash operation with a MIC trans 414 in the received packet to authenticate the application payload 412 .
- FIG. 7 illustrates example method(s) 700 of virtual addressing for mesh networks related to publishing data and subscribing to data using virtual addresses in a mesh network.
- the order in which the method blocks are described are not intended to be construed as a limitation, and any number of the described method blocks can be combined in any order to implement a method, or an alternate method.
- a source node is commissioned with a unique identifier that is associated with an application.
- a node 102 is commissioned with a unique identifier (UID) that is associated with an application 316 .
- UID unique identifier
- the source node inserts data from the application into an application payload field of a packet.
- the application 316 provides data to the application layer 308 , which the application layer 308 inserts into the application payload 412 field of a packet 400 .
- the source node generates a virtual address, using the unique identifier associated with the application, for a destination address of the packet. For example, the node 102 generates a virtual address for the DST 410 of the packet 400 using the UID to generate the virtual address.
- the source node inserts the virtual address into a destination address field of the mesh network packet, and at block 710 , the source node publishes the packet by transmitting the packet to one or more destination nodes in the mesh network.
- the node 102 inserts the virtual address into the DST 410 field of the packet 400 and the node 102 publishes the packet by transmitting the packet 400 over the mesh network 100 .
- FIG. 8 illustrates an example environment 800 in which the mesh network 100 (as described with reference to FIG. 1 ), and embodiments of virtual addressing for mesh networks can be implemented.
- the environment 800 includes the mesh network 100 implemented as part of a smart-home or other type of structure with any number and type of mesh network devices that are configured for communication in a mesh network.
- the mesh network devices can include a thermostat 802 , hazard detectors 804 (e.g., for smoke and/or carbon monoxide), cameras 806 (e.g., indoor and outdoor), lighting units 808 (e.g., indoor and outdoor), and any other types of mesh network devices 810 that are implemented inside and/or outside of a structure 812 (e.g., in a smart-home environment).
- the mesh network devices can also include any of the previously described devices, such as a node 102 .
- any number of the mesh network devices can be implemented for wireless interconnection to wirelessly communicate and interact with each other.
- the mesh network devices are modular, intelligent, multi-sensing, network-connected devices, which can integrate seamlessly with each other and/or with a central server or a cloud-computing system to provide any of a variety of useful smart-home objectives and implementations.
- An example of a mesh network device that can be implemented as any of the devices described herein is shown and described with reference to FIG. 9 .
- the thermostat 802 may include a Nest® Learning Thermostat that detects ambient climate characteristics (e.g., temperature and/or humidity) and controls a HVAC system in the smart-home environment.
- the learning thermostat 802 and other smart devices “learn” by capturing occupant settings to the devices. For example, the thermostat learns preferred temperature set-points for mornings and evenings, and when the occupants of the structure are asleep or awake, as well as when the occupants are typically away or at home.
- a hazard detector 804 can be implemented to detect the presence of a hazardous substance or a substance indicative of a hazardous substance (e.g., smoke, fire, or carbon monoxide).
- a hazard detector 804 may detect the presence of smoke, indicating a fire in the structure, in which case the hazard detector that first detects the smoke can broadcast a low-power wake-up signal to all of the connected mesh network devices. The other hazard detectors 804 can then receive the broadcast wake-up signal and initiate a high-power state for hazard detection and to receive wireless communications of alert messages. Further, the lighting units 808 can receive the broadcast wake-up signal and activate in the region of the detected hazard to illuminate and identify the problem area.
- the lighting units 808 may activate in one illumination color to indicate a problem area or region in the structure, such as for a detected fire or break-in, and activate in a different illumination color to indicate safe regions and/or escape routes out of the structure.
- a doorbell or door monitoring system may include LEDs that flash yellow (or other color) when a presence is detected, or flash red if an alarm is activated.
- the mesh network devices 810 can include an entryway interface device that functions in coordination with a network-connected door lock system, and that detects and responds to a person's approach to or departure from a location, such as an outer door of the structure 812 .
- the entryway interface device can interact with the other mesh network devices based on whether someone has approached or entered the smart-home environment.
- An entryway interface device can control doorbell functionality, announce the approach or departure of a person via audio or visual means, and control settings on a security system, such as to activate or deactivate the security system when occupants come and go.
- the mesh network devices 810 can also include other sensors and detectors, such as to detect ambient lighting conditions, detect room-occupancy states (e.g., with an occupancy sensor), and control a power and/or dim state of one or more lights.
- the sensors and/or detectors may also control a power state or speed of a fan, such as a ceiling fan. Further, the sensors and/or detectors may detect occupancy in a room or enclosure, and control the supply of power to electrical outlets or devices, such as if a room or the structure is unoccupied.
- the mesh network devices 810 may also include connected appliances and/or controlled systems, such as refrigerators, stoves and ovens, washers, dryers, air conditioners, pool heaters, irrigation systems, security systems, and so forth, as well as other electronic and computing devices, such as televisions, entertainment systems, computers, intercom systems, garage-door openers, ceiling fans, control panels, and the like.
- appliances and/or controlled systems such as refrigerators, stoves and ovens, washers, dryers, air conditioners, pool heaters, irrigation systems, security systems, and so forth
- other electronic and computing devices such as televisions, entertainment systems, computers, intercom systems, garage-door openers, ceiling fans, control panels, and the like.
- an appliance, device, or system can announce itself to the mesh network as described above, and can be automatically integrated with the controls and devices of the mesh network, such as in the smart-home.
- the mesh network devices 810 may include devices physically located outside of the structure, but within wireless communication range, such as a device controlling a swimming pool heater or an irrigation system.
- the mesh network 100 includes a border router 814 that interfaces for communication with an external network, outside the mesh network 100 .
- the border router 814 connects to an access point 816 , which connects to a communication network 818 , such as the Internet.
- a cloud service 820 which is connected via the communication network 818 , provides services related to and/or using the devices within the mesh network 100 .
- the cloud service 820 can include applications for connecting end user devices, such as smart phones, tablets, and the like, to devices in the mesh network, processing and presenting data acquired in the mesh network 100 to end users, linking devices in one or more mesh networks 100 to user accounts of the cloud service 820 , provisioning and updating devices in the mesh network 100 , and so forth.
- a user can control the thermostat 802 and other mesh network devices in the smart-home environment using a network-connected computer or portable device, such as a mobile phone or tablet device.
- the mesh network devices can communicate information to any central server or cloud-computing system via the border router 814 and the access point 816 .
- the data communications can be carried out using any of a variety of custom or standard wireless protocols (e.g., Wi-Fi, ZigBee for low power, BLE, 6LoWPAN, etc.) and/or by using any of a variety of custom or standard wired protocols (CAT6 Ethernet, HomePlug, etc.).
- Any of the mesh network devices in the mesh network 100 can serve as low-power and communication nodes to create the mesh network 100 in the smart-home environment.
- Individual low-power nodes of the network can regularly send out messages regarding what they are sensing, and the other low-powered nodes in the environment—in addition to sending out their own messages—can repeat the messages, thereby communicating the messages from node to node (i.e., from device to device) throughout the mesh network.
- the mesh network devices can be implemented to conserve power, particularly when battery-powered, utilizing low-powered communication protocols to receive the messages, translate the messages to other communication protocols, and send the translated messages to other nodes and/or to a central server or cloud-computing system.
- an occupancy and/or ambient light sensor can detect an occupant in a room as well as measure the ambient light, and activate the light source when the ambient light sensor detects that the room is dark and when the occupancy sensor detects that someone is in the room.
- the sensor can include a low-power wireless communication chip (e.g., a ZigBee chip, a Bluetooth chip, a BLE chip, and so forth) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room.
- these messages may be sent wirelessly, using the mesh network, from node to node (i.e., smart device to smart device) within the smart-home environment as well as over the Internet to a central server or cloud-computing system.
- various ones of the mesh network devices can function as “tripwires” for an alarm system in the smart-home environment. For example, in the event a perpetrator circumvents detection by alarm sensors located at windows, doors, and other entry points of the structure or environment, the alarm could still be triggered by receiving an occupancy, motion, heat, sound, etc. message from one or more of the low-powered mesh nodes in the mesh network.
- the mesh network can be used to automatically turn on and off the lighting units 808 as a person transitions from room to room in the structure.
- the mesh network devices can detect the person's movement through the structure and communicate corresponding messages via the nodes of the mesh network.
- the mesh network can also be utilized to provide exit lighting in the event of an emergency, such as by turning on the appropriate lighting units 808 that lead to a safe exit.
- the light units 808 may also be turned-on to indicate the direction along an exit route that a person should travel to safely exit the structure.
- the various mesh network devices may also be implemented to integrate and communicate with wearable computing devices, such as may be used to identify and locate an occupant of the structure, and adjust the temperature, lighting, sound system, and the like accordingly.
- wearable computing devices such as may be used to identify and locate an occupant of the structure, and adjust the temperature, lighting, sound system, and the like accordingly.
- RFID sensing e.g., a person having an RFID bracelet, necklace, or key fob
- synthetic vision techniques e.g., video cameras and face recognition processors
- audio techniques e.g., voice, sound pattern, vibration pattern recognition
- ultrasound sensing/imaging techniques e.g., and infrared or near-field communication (NFC) techniques
- NFC near-field communication
- personal comfort-area networks, personal health-area networks, personal safety-area networks, and/or other such human-facing functionalities of service robots can be enhanced by logical integration with other mesh network devices and sensors in the environment according to rules-based inferencing techniques or artificial intelligence techniques for achieving better performance of these functionalities.
- the system can detect whether a household pet is moving toward the current location of an occupant (e.g., using any of the mesh network devices and sensors), along with rules-based inferencing and artificial intelligence techniques.
- a hazard detector service robot can be notified that the temperature and humidity levels are rising in a kitchen, and temporarily raise a hazard detection threshold, such as a smoke detection threshold, under an inference that any small increases in ambient smoke levels will most likely be due to cooking activity and not due to a genuinely hazardous condition.
- Any service robot that is configured for any type of monitoring, detecting, and/or servicing can be implemented as a mesh node device on the mesh network, conforming to the wireless interconnection protocols for communicating on the mesh network.
- the mesh network devices 810 may also include a smart alarm clock for each of the individual occupants of the structure in the smart-home environment. For example, an occupant can customize and set an alarm device for a wake time, such as for the next day or week. Artificial intelligence can be used to consider occupant responses to the alarms when they go off and make inferences about preferred sleep patterns over time. An individual occupant can then be tracked in the mesh network based on a unique signature of the person, which is determined based on data obtained from sensors located in the mesh network devices, such as sensors that include ultrasonic sensors, passive IR sensors, and the like. The unique signature of an occupant can be based on a combination of patterns of movement, voice, height, size, etc., as well as using facial recognition techniques.
- the wake time for an individual can be associated with the thermostat 802 to control the HVAC system in an efficient manner so as to pre-heat or cool the structure to desired sleeping and awake temperature settings.
- the preferred settings can be learned over time, such as by capturing the temperatures set in the thermostat before the person goes to sleep and upon waking up.
- Collected data may also include biometric indications of a person, such as breathing patterns, heart rate, movement, etc., from which inferences are made based on this data in combination with data that indicates when the person actually wakes up.
- Other mesh network devices can use the data to provide other smart-home objectives, such as adjusting the thermostat 802 so as to pre-heat or cool the environment to a desired setting, and turning-on or turning-off the lights 808 .
- the mesh network devices can also be utilized for sound, vibration, and/or motion sensing such as to detect running water and determine inferences about water usage in a smart-home environment based on algorithms and mapping of the water usage and consumption. This can be used to determine a signature or fingerprint of each water source in the home, and is also referred to as “audio fingerprinting water usage.”
- the mesh network devices can be utilized to detect the subtle sound, vibration, and/or motion of unwanted pests, such as mice and other rodents, as well as by termites, cockroaches, and other insects. The system can then notify an occupant of the suspected pests in the environment, such as with warning messages to help facilitate early detection and prevention.
- FIG. 9 illustrates an example mesh network device 900 that can be implemented as any of the mesh network devices in a mesh network in accordance with one or more embodiments of virtual addressing for mesh networks as described herein.
- the device 900 can be integrated with electronic circuitry, microprocessors, memory, input output (I/O) logic control, communication interfaces and components, as well as other hardware, firmware, and/or software to implement the device in a mesh network.
- I/O input output
- the mesh network device 900 includes a low-power microprocessor 902 and a high-power microprocessor 904 (e.g., microcontrollers or digital signal processors) that process executable instructions.
- the device also includes an input-output (I/O) logic control 906 (e.g., to include electronic circuitry).
- the microprocessors can include components of an integrated circuit, programmable logic device, a logic device formed using one or more semiconductors, and other implementations in silicon and/or hardware, such as a processor and memory system implemented as a system-on-chip (SoC).
- SoC system-on-chip
- the device can be implemented with any one or combination of software, hardware, firmware, or fixed logic circuitry that may be implemented with processing and control circuits.
- the low-power microprocessor 902 and the high-power microprocessor 904 can also support one or more different device functionalities of the device.
- the high-power microprocessor 904 may execute computationally intensive operations, whereas the low-power microprocessor 902 may manage less complex processes such as detecting a hazard or temperature from one or more sensors 908 .
- the low-power processor 902 may also wake or initialize the high-power processor 904 for computationally intensive processes.
- the one or more sensors 908 can be implemented to detect various properties such as acceleration, temperature, humidity, water, supplied power, proximity, external motion, device motion, sound signals, ultrasound signals, light signals, fire, smoke, carbon monoxide, global-positioning-satellite (GPS) signals, radio-frequency (RF), other electromagnetic signals or fields, or the like.
- the sensors 908 may include any one or a combination of temperature sensors, humidity sensors, hazard-related sensors, other environmental sensors, accelerometers, microphones, optical sensors up to and including cameras (e.g., charged coupled-device or video cameras, active or passive radiation sensors, GPS receivers, and radio frequency identification detectors.
- the mesh network device 900 may include one or more primary sensors, as well as one or more secondary sensors, such as primary sensors that sense data central to the core operation of the device (e.g., sensing a temperature in a thermostat or sensing smoke in a smoke detector), while the secondary sensors may sense other types of data (e.g., motion, light or sound), which can be used for energy-efficiency objectives or smart-operation objectives.
- primary sensors that sense data central to the core operation of the device
- the secondary sensors may sense other types of data (e.g., motion, light or sound), which can be used for energy-efficiency objectives or smart-operation objectives.
- the mesh network device 900 includes a memory device controller 910 and a memory device 912 , such as any type of a nonvolatile memory and/or other suitable electronic data storage device.
- the mesh network device 900 can also include various firmware and/or software, such as an operating system 914 that is maintained as computer executable instructions by the memory and executed by a microprocessor.
- the device software may also include an addressing application 916 that implements embodiments of virtual addressing for mesh networks.
- the mesh network device 900 also includes a device interface 918 to interface with another device or peripheral component, and includes an integrated data bus 920 that couples the various components of the mesh network device for data communication between the components.
- the data bus in the mesh network device may also be implemented as any one or a combination of different bus structures and/or bus architectures.
- the device interface 918 may receive input from a user and/or provide information to the user (e.g., as a user interface), and a received input can be used to determine a setting.
- the device interface 918 may also include mechanical or virtual components that respond to a user input. For example, the user can mechanically move a sliding or rotatable component, or the motion along a touchpad may be detected, and such motions may correspond to a setting adjustment of the device. Physical and virtual movable user-interface components can allow the user to set a setting along a portion of an apparent continuum.
- the device interface 918 may also receive inputs from any number of peripherals, such as buttons, a keypad, a switch, a microphone, and an imager (e.g., a camera device).
- the mesh network device 900 can include network interfaces 922 , such as a mesh network interface for communication with other mesh network devices in a mesh network, and an external network interface for network communication, such as via the Internet.
- the mesh network device 900 also includes wireless radio systems 924 for wireless communication with other mesh network devices via the mesh network interface and for multiple, different wireless communications systems.
- the wireless radio systems 924 may include Wi-Fi, BluetoothTM, Mobile Broadband, and/or point-to-point IEEE 802.15.4. Each of the different radio systems can include a radio device, antenna, and chipset that is implemented for a particular wireless communications technology.
- the mesh network device 900 also includes a power source 926 , such as a battery and/or to connect the device to line voltage. An AC power source may also be used to charge the battery of the device.
Abstract
Description
UID-Hash=CMAC(UID,vtad) (1)
where vtad is the virtual address cryptographic salt.
encAppData,MICtrans=AES-CCM(AppKey,application nonce,AppPayload,UID) (2)
where encAppData is the
application nonce=SEQ∥SRC∥DST∥IV Index (3)
where SEQ is the
key-identifier=CMAC(CMAC(AppKey,smat),smak) (4)
where AppKey is the application key, smat is a key-identifier cryptographic salt, and smak is a virtual address key cryptographic salt.
MICnet=AES-CCM(Encryption Key,network nonce,DST∥TransportPayload) (5)
where Encryption Key is an encryption key derived from a network key and the network nonce is:
network nonce=TTL∥SEQ∥SRC∥IV Index (6)
where TTL is
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/232,040 US10231108B2 (en) | 2015-12-11 | 2016-08-09 | Virtual addressing for mesh networks |
US16/258,194 US10667111B2 (en) | 2015-12-11 | 2019-01-25 | Virtual addressing for mesh networks |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201562266246P | 2015-12-11 | 2015-12-11 | |
US15/232,040 US10231108B2 (en) | 2015-12-11 | 2016-08-09 | Virtual addressing for mesh networks |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/258,194 Continuation US10667111B2 (en) | 2015-12-11 | 2019-01-25 | Virtual addressing for mesh networks |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170171071A1 US20170171071A1 (en) | 2017-06-15 |
US10231108B2 true US10231108B2 (en) | 2019-03-12 |
Family
ID=59019146
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/232,040 Active 2036-12-24 US10231108B2 (en) | 2015-12-11 | 2016-08-09 | Virtual addressing for mesh networks |
US16/258,194 Active 2036-09-11 US10667111B2 (en) | 2015-12-11 | 2019-01-25 | Virtual addressing for mesh networks |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/258,194 Active 2036-09-11 US10667111B2 (en) | 2015-12-11 | 2019-01-25 | Virtual addressing for mesh networks |
Country Status (1)
Country | Link |
---|---|
US (2) | US10231108B2 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109598529A (en) * | 2017-09-30 | 2019-04-09 | 北京国双科技有限公司 | A kind of recognition methods of user identifier and device |
US10667111B2 (en) | 2015-12-11 | 2020-05-26 | Google Llc | Virtual addressing for mesh networks |
Families Citing this family (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10359746B2 (en) * | 2016-04-12 | 2019-07-23 | SILVAIR Sp. z o.o. | System and method for space-driven building automation and control including actor nodes subscribed to a set of addresses including addresses that are representative of spaces within a building to be controlled |
US11606670B2 (en) * | 2016-09-13 | 2023-03-14 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods and apparatus for propagating data in a wireless cellular network |
US10666624B2 (en) | 2017-08-23 | 2020-05-26 | Qualcomm Incorporated | Systems and methods for optimized network layer message processing |
US11343312B2 (en) | 2017-09-21 | 2022-05-24 | Qualcomm Incorporated | Social mesh networks |
KR102331886B1 (en) * | 2017-12-21 | 2021-11-29 | 삼성전자주식회사 | Electronic device contrrolling node in a network and control method thereof |
US10382284B1 (en) | 2018-03-02 | 2019-08-13 | SILVAIR Sp. z o.o. | System and method for commissioning mesh network-capable devices within a building automation and control system |
CN109168150B (en) * | 2018-08-24 | 2022-02-25 | 欧普照明股份有限公司 | Bluetooth rapid networking method |
CN108954696B (en) * | 2018-09-17 | 2023-04-25 | 广州市特沃能源管理有限公司 | Air conditioner control system and method based on Thread protocol |
CN109769328B (en) * | 2018-11-13 | 2020-06-23 | 大峡谷照明系统（苏州）股份有限公司 | Method for inquiring state information of lamp and application of method in light control system |
DE102018220990A1 (en) * | 2018-12-05 | 2020-06-10 | Volkswagen Aktiengesellschaft | Method and arrangement for addressing participants in a communication between at least one participant and a back-end server |
CN111669732B (en) * | 2019-03-06 | 2021-09-07 | 乐鑫信息科技（上海）股份有限公司 | Method for filtering redundant data packets at nodes in bluetooth Mesh network |
CN110035590B (en) * | 2019-04-22 | 2021-08-17 | 深圳仙苗科技有限公司 | Low-standby-power-consumption intelligent lamp control system applying novel networking technology |
US10542610B1 (en) | 2019-08-28 | 2020-01-21 | Silvar Sp. z o.o. | Coordinated processing of published sensor values within a distributed network |
CN110891025B (en) * | 2019-10-31 | 2022-04-05 | 上海众链科技有限公司 | System and method for obtaining destination address of opposite end of application program |
WO2022046037A1 (en) * | 2020-08-25 | 2022-03-03 | Google Llc | Expressing multicast groups using weave traits |
CN115150458A (en) * | 2022-05-20 | 2022-10-04 | 阿里云计算有限公司 | Device management system and method |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050125692A1 (en) * | 2003-12-04 | 2005-06-09 | Cox Brian F. | 802.1X authentication technique for shared media |
US20060020807A1 (en) * | 2003-03-27 | 2006-01-26 | Microsoft Corporation | Non-cryptographic addressing |
US20070206535A1 (en) * | 2006-03-02 | 2007-09-06 | Kapil Sood | Mobile station and method for fast roaming with integrity protection and source authentication using a common protocol |
US20110317703A1 (en) * | 2010-06-29 | 2011-12-29 | Futurewei Technologies, Inc. | Asymmetric Network Address Encapsulation |
US9154327B1 (en) * | 2011-05-27 | 2015-10-06 | Cisco Technology, Inc. | User-configured on-demand virtual layer-2 network for infrastructure-as-a-service (IaaS) on a hybrid cloud network |
US20160183046A1 (en) * | 2014-12-17 | 2016-06-23 | Samsung Electronics Co., Ltd. | Portable apparatus and method of controlling location information of portable apparatus |
US20170289812A1 (en) * | 2012-12-26 | 2017-10-05 | Ict Research Llc | Mobility extensions to industrial-strength wireless sensor networks |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7590855B2 (en) * | 2002-04-30 | 2009-09-15 | Tippingpoint Technologies, Inc. | Steganographically authenticated packet traffic |
WO2009061973A1 (en) * | 2007-11-09 | 2009-05-14 | Blade Network Technologies, Inc. | Session-less load balancing of client traffic across servers in a server group |
US10231108B2 (en) | 2015-12-11 | 2019-03-12 | Google Llc | Virtual addressing for mesh networks |
-
2016
- 2016-08-09 US US15/232,040 patent/US10231108B2/en active Active
-
2019
- 2019-01-25 US US16/258,194 patent/US10667111B2/en active Active
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060020807A1 (en) * | 2003-03-27 | 2006-01-26 | Microsoft Corporation | Non-cryptographic addressing |
US20050125692A1 (en) * | 2003-12-04 | 2005-06-09 | Cox Brian F. | 802.1X authentication technique for shared media |
US20070206535A1 (en) * | 2006-03-02 | 2007-09-06 | Kapil Sood | Mobile station and method for fast roaming with integrity protection and source authentication using a common protocol |
US20110317703A1 (en) * | 2010-06-29 | 2011-12-29 | Futurewei Technologies, Inc. | Asymmetric Network Address Encapsulation |
US9154327B1 (en) * | 2011-05-27 | 2015-10-06 | Cisco Technology, Inc. | User-configured on-demand virtual layer-2 network for infrastructure-as-a-service (IaaS) on a hybrid cloud network |
US20170289812A1 (en) * | 2012-12-26 | 2017-10-05 | Ict Research Llc | Mobility extensions to industrial-strength wireless sensor networks |
US20160183046A1 (en) * | 2014-12-17 | 2016-06-23 | Samsung Electronics Co., Ltd. | Portable apparatus and method of controlling location information of portable apparatus |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10667111B2 (en) | 2015-12-11 | 2020-05-26 | Google Llc | Virtual addressing for mesh networks |
CN109598529A (en) * | 2017-09-30 | 2019-04-09 | 北京国双科技有限公司 | A kind of recognition methods of user identifier and device |
Also Published As
Publication number | Publication date |
---|---|
US20190159006A1 (en) | 2019-05-23 |
US20170171071A1 (en) | 2017-06-15 |
US10667111B2 (en) | 2020-05-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10667111B2 (en) | Virtual addressing for mesh networks | |
KR101729171B1 (en) | Mesh network addressing | |
US20220239622A1 (en) | Efficient Network Stack for Wireless Application Protocols | |
US10849016B2 (en) | Packet segmentation and reassembly for mesh networks | |
US10462053B2 (en) | Automatic rerouting in thread networks | |
EP4000242B1 (en) | Network filtering with private resolvable addresses | |
US11848793B2 (en) | Expressing multicast groups using weave traits | |
US11343774B2 (en) | Enhanced frame pending | |
US20230262578A1 (en) | Common Interface for Multicast Address Subscriptions | |
WO2023220596A1 (en) | Device deduplication between home networks |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:TURON, MARTIN A.;REEL/FRAME:039383/0209Effective date: 20151211 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
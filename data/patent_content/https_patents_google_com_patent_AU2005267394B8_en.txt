AU2005267394B8 - Accelerating user interfaces by predicting user actions - Google Patents
Accelerating user interfaces by predicting user actions Download PDFInfo
- Publication number
- AU2005267394B8 AU2005267394B8 AU2005267394A AU2005267394A AU2005267394B8 AU 2005267394 B8 AU2005267394 B8 AU 2005267394B8 AU 2005267394 A AU2005267394 A AU 2005267394A AU 2005267394 A AU2005267394 A AU 2005267394A AU 2005267394 B8 AU2005267394 B8 AU 2005267394B8
- Authority
- AU
- Australia
- Prior art keywords
- document
- client
- user
- currently displayed
- link
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/954—Navigation, e.g. using categorised browsing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
Abstract
A client assistant, sometimes called a browser helper, runs on a client computer. The client assistant monitors a user's browsing activities and infers one or more next documents that are most likely to be requested by the user. The client assistant attempts to locate a fresh copy of the inferred next document within a client cache. If a fresh copy of the inferred document is not found in the client cache, the client assistant submits a document download request to a document server.
Description
2005267394 03 Mar 2009
ACCELERATING USER INTERFACES BY PREDICTING USER ACTIONS
FIELD OF THE INVENTION
[0001] The present invention relates generally to client caches for web browsers and other 5 client applications that access documents from a network, and in particular, to a system and method of expediting a client applications' access to documents stored on a network by predicting a user's next document selection.
RELATED APPLICATIONS 10 [0002] This application is related to U. S . Patent Application 10/882,794, "System and
Method of Accessing a Document Efficiently Through Multi-Tier Web Caching", filed on the same date as this application, (Attorney Docket 60963 -5002-US), which is hereby incorporated by reference.
15 BACKGROUND OF THE INVENTION
[0003] People routinely download and browse various documents from the Internet through a web browser. These documents include newspaper articles, financial information, medical records, etc. Ideally, when a user clicks on a hyperlink to a document (e.g., while viewing another document using a web browser or other client application) the associated 20 document should be downloaded and rendered instantaneously. Practically, there is always a latency between the moment the user clicks on the hyperlink to a document and the moment the document is completely rendered in the web browser (or other client application). Reducing this latency, and making it almost imperceptible for many documents, would be highly desirable. 25
SUMMARY
[0004] A method of expediting a user's access to documents predicts the user's web browsing activities in a client-server based network system and significantly reduces the aforementioned latency. 30 [0004A] According to a first aspect, the present invention provides a method for expediting access to a document in a client-server network environment, comprising: at a client: monitoring a user's browsing activities within a currently displayed document having links to associated documents, including monitoring proximity of a user-controllable pointer to 1 W:\MJW\Sped\76O081 doc one or more of the links in the currently displayed document; prior to user selection of any respective link in the currently displayed document: identifying a link satisfying predefined criteria, the predefined criteria including proximity criteria with respect to the user-controllable pointer, and transmitting to a server a request for a document corresponding to the 5 identified link. 2005267394 03 Mar 2009 [0004B] According to a second aspect, the present invention provides a client computer, comprising: one or more processors; memory storing one or more programs for execution by the one or more processors; a client assistant configured to monitor a user's browsing activities 10 within a currently displayed document having links to one or more associated documents, including monitoring proximity of a user-controllable pointer to one or more of the links in the currently displayed document; the client assistant including instructions for identifying a link satisfying predefined criteria, the predefined criteria including proximity criteria with respect to the user-controllable pointer; and a communications interface coupled to the client assistant 15 for transmitting to a server, prior to user selection of any respective link, a request for a document corresponding to the identified link.
[0004C] According to a third aspect, the present invention provides a computer readable storage medium storing one or more programs for execution by one or more processors of a 20 client computer, the one or more programs including: a client assistant configured to monitor a user's browsing activities within a currently displayed document having links to one or more associated documents, including monitoring proximity of a user-controllable pointer to one or more of the links h the currently displayed document; the client assistant including instructions for identifying a link satisfying predefined criteria, the predefined criteria 25 including proximity criteria with respect to the user-controllable pointer; and a communications interface coupled to the client assistant for transmitting to a server, prior to user selection of any respective link, a request for a document corresponding to the identified link. 30 [0005] A client assistant, sometimes called a browser helper, runs on the client computer.
The client assistant monitors a user's browsing activities and infers one or more la W:\MJW\Sped\7e0M1 doc PCT/US2005/022067 WO 2006/012144 next documents that are most likely to be requested by the user. The client assistant attempts to locate a fresh copy of the inferred next document within its associated client cache. If a fresh copy of the inferred document is not found in the client cache, the client assistant submits a document download request to a document server.
[0006] In some embodiments, the client assistant, upon receiving a response to the request, stores the requested document in the client cache. In some instances, the response to the request may include a content difference between a fresh version of the requested document and a stale version of the document in the client cache. In these instances the client assistant regenerates the fresh version of the document from the content difference and the stale version of the document, and then stores the regenerated fresh version of the document in the client cache.
BRIEF DESCRIPTION OF THE DRAWINGS
[0007] The aforementioned features and advantages of the invention as well as additional features and advantages thereof will be more clearly understood hereinafter as a result of a detailed description of embodiments of the invention when taken in conjunction with the drawings.
[0008] Fig. 1 is a timeline schematically illustrating the operation of a conventional system in which a user downloads a document by clicking through an associated hyperlink in a web browser.
[0009] Fig. 2 schematically illustrates a client-server system.
[0010] Figs. 3A, 3B and 3C illustrate data structures associated with a client cache and server cache in the client-server system.
[0011] Fig. 4 is a flowchart of a method of reducing document download latency.
[0012] Fig. 5 depicts a client computer having a client assistant for reducing document download latency.
[0013] Fig. 6 depicts a server computer having a document server configured to work in conjunction with the client assistant. 2 PCT/US2005/022067 WO 2006/012144 [0014] Like reference numerals refer to corresponding parts throughout the several views of the drawings.
DESCRIPTION OF EMBODIMENTS
[0015] Fig. 1 is a timeline schematically illustrating the operation of a conventional system in which a user downloads a document by clicking on an associated hyperlink in a web browser. The timeline begins when the user starts moving a mouse towards a target hyperlink (02). In this document, whenever the term “mouse” is used, it shall be understood to mean any user-controllable pointer device, including trackball devices, touch pads, joysticks, tablets, gloves, eye movement detectors and the like. Furthermore, the term “mouse pointer” shall be understood to mean any user-controllable pointer or cursor, regardless of the type of device used to control the pointer or cursor. After the mouse reaches the proximity of the target hyperlink (04), the user presses the mouse button (06) and the browser receives a mouse-down message (08). Next, the user releases the mouse button (20) and the browser receives a mouse-up message (22). After receiving the mouse-up message, the browser may first search its local cache for the requested document. If unsuccessful, the browser then submits a document download request (24) to a web server that hosts the requested document and the requested document is subsequently returned to the browser (26).
[0016] As discussed in the background section, there is a latency from the moment a user decides to download a document to the moment the document is completely rendered in the web browser. Fig. 1 illustratively depicts that this latency can be further divided into two distinct phases: the first phase (30) begins when the user starts moving the mouse towards the target hyperlink (02) and ends right after the generation of a mouse-up message (20), i.e., after he releases the mouse button within the proximity of the hyperlink, and the second phase (50) starts when the web browser receives the mouse-up message (22) and ends when the document associated with the hyperlink has been rendered in the browser window (26).
[0017] Within the first phase, there is often a 200-400 ms “mouse hovering period” (40) that begins when the mouse is on or near the hyperlink (04) and ends right after the user releases the mouse button (20). As shown in Fig. 1, the browser typically does not take any action during this mouse hovering period, since it is not certain if the user would like to 3 PCT/US2005/022067 WO 2006/012144 download the document associated with the link until the browser receives a mouse-up message.
[0018] On the other hand, the browser is able to detect the user’s browsing activities during the mouse hovering period, e.g., the position of the mouse over the hyperlink once the mouse reaches the proximity of the hyperlink, when the user presses the mouse button, and when the user releases the mouse button. Thus, if the browser can reasonably infer that the user might want to download the associated document before the mouse hovering period is over, the second phase can be initiated earlier, the aforementioned latency will be shorter, and the user’s web browsing speed can be expedited.
[0019] In this document, the terms “clicking on” a hyperlink, and “clicking through” a hyperlink both mean pointing to a hyperlink in a document, for instance using a mouse or other user-controllable pointing device, and then both pressing and releasing a button or other actuator. The pressing of the button or actuator is sometimes called a mouse-down action, and the releasing of the button or actuator is sometimes called a mouse-up action. The mouse-up action is the final step of clicking on or clicking through a hyperlink, and in many client applications it is the position of the mouse pointer (also known as the cursor or pointer or user-controllable pointer) at the occurrence of the mouse-up action that determines which hyperlink, if any, the user has selected. A user may request a document for rendering not only by clicking on a hyperlink, but also by specifying a URL, for instance by selecting the URL from a list (e.g., a “favorites list”) or even by typing or otherwise entering the URL into the address field of a browser or other application.
[0020] Fig. 2 schematically illustrates a client-server systemlOO in accordance with one embodiment of the present invention. The system 100 comprises clients 102, document servers 120, one or more communications networks 132 (e.g., the Internet, other wide area networks, local area networks, metropolitan area networks, and so on), and hosts 134 (e.g., web servers). A client 102 includes at least a client application 104, a client assistant 106 and a client cache 108. The client cache 108 may be implemented in the client 102’s permanent storage device, e.g., hard drive, its memory or both. The client application 104 may be a web browser, a document browser, or other program capable of rendering documents and detecting user selection of hyperlinks in documents. The client assistant 106 has (or can establish) one or more communication channels to various document servers 120 and hosts 4 PCT/US2005/022067 WO 2006/012144 134 via the communications network 132. As will be explained next, the client assistant 106 plays a role in handling document download requests submitted by a user through the client application 104. The client cache 108 may be a cache that is used solely for caching documents used by the client application 104, or it may be a shared cached for caching documents used by multiple applications and/or multiple users of the client computer 102.
[0021] A document server 120 includes at least a server cache 125. In some embodiments, the document server 120 and/or the server cache 125 are deployed over multiple computers in order to provide fast access to a large number of cached documents.
For instance, the server cache 125 may be deployed over N servers, with a mapping function such as the “modulo N” being used to determine which cached documents are stored in each of the N servers. N may be an integer greater than 1, for instance an integer between 2 and 1024. For convenience of explanation, we will discuss the document server 120 as though it were a single computer. The document server 120, through its server cache 125, manages a large number of documents that have been downloaded from various hosts 134 (e.g., web servers and other hosts) over the communications network 132.
[0022] Each document in the server cache 125 has a content fingerprint that uniquely identifies a particular version of the document and a URL fingerprint (URLFP or URL fingerprint) that uniquely identifies the ultimate source of the document. In some embodiments, the content fingerprint of each version of a document is generated by applying a hash function to the content of the document so as to produce a fixed length value, herein called a content fingerprint. In some embodiments, the content fingerprint of a document is based on the content of the document, including all links and tags in the document, but excluding the content of embedded documents referenced by object tags and the like.
[0023] Figs. 3 A, 3B and 3C illustrate client cache and server cache data structures in accordance with some embodiments. In some embodiments, client cache 108 includes a table 201 including a plurality of URL fingerprints. A URL fingerprint is, for example, a 64-bit number (or a value of some other predetermined bit length) generated from the corresponding URL by first normalizing the URL text, e.g., by applying a predefined set of normalization rules to the URL text (e.g., converting web host names to lower case), and then applying a hash function to the normalized URL to produce a URL fingerprint. These URL fingerprints correspond to the documents in the client cache 108. Each entry in the URL fingerprint table 5 PCT/US2005/022067 WO 2006/012144 201 has a pointer to a corresponding entry in another table 203 that stores the content of a plurality of documents. Each entry in the table 203 includes a content fingerprint (also known as content checksum), one or more content freshness parameters and a pointer to a copy of the corresponding document (document content 205). In one embodiment, some of the content freshness parameters are derived from the HTTP header associated with the document content. For example, the Date field in the HTTP header indicates when the document was downloaded to the client, and the Expiration field in the HTTP header indicates an expiration date/time assigned to the document by the document’s host computer.
[0024] Referring to Figs. 3B and 3C, compared with the volume of documents cached in a client 102, the volume of documents cached in a document server 120 is often significantly larger, because a document server 120 often provides documents to multiple clients 102. Asa result, it may not be possible to store all server cached documents in the server’s main memory. Accordingly, in some embodiments, information about the cached documents in the server 120 is managed by two data structures, an index cache 122 that is small enough to be stored in the server’s main memory to maintain a mapping relationship between a URL fingerprint (table 211) and a content fingerprint (table 213) of a document stored in the server 120, and an object archive 128 that is stored in a secondary storage device, e.g., a hard drive. The records of the index cache 122 may contain pointers to (or disk locations for) document copies in the object archive 128. In some embodiments, one or more additional data structures may be used to map URL fingerprints to content fingerprints and to map content fingerprints do documents in the object archive 128.
[0025] In one embodiment, the index cache 122 stores a plurality of records, each record including a URL fingerprint, a content fingerprint and a set of content freshness parameters for a document cached by a document server 120. In some embodiments, the set of freshness parameters includes an expiration date, a last modification date, and an entity tag. The freshness parameters may include one or more HTTP response header fields of a cached document. An entity tag is a unique string identifying one version of an entity, e.g., an HTML document, associated with a particular resource. In some embodiments, each index cache record includes a pointer to the freshest cached version of the document associated with the URL fingerprint. The object archive 128 may also store older cached versions of the same document (i.e., having the same URL fingerprint), but the older versions are not referenced by any entries in the index cache 122. 6 PCT/US2005/022067 WO 2006/012144
Client Assistant [0026] Referring to Fig. 4, a user’s browsing activities through a client application 104 are monitored by a client assistant 106 (401). When the user’s activities with respect to a particular hyperlink meet certain predefined criteria (405), but before the user clicks through or selects a hyperlink (403), the client assistant 106 assumes that the user is likely to download the document associated with the hyperlink. Accordingly, the client assistant 106 identifies a URL corresponding to an identified hyperlink and then determines whether there are any previous requests pending for that URL (407). If a request is currently pending (407-y) then the document associated with the URL is being downloaded and client assistant returns to monitoring the user’s activities (401). The client assistant may maintain a record of any pending document requests in its client cache and may thereby determine when a current request matches a pending request If, however, a request is not pending (407-n), then the client cache 108 is searched for the document (409).
[0027] In some embodiments, the identified URL in the hyperlink is converted into a fixed length URL fingerprint (described above), which the client assistant uses to search the client cache 108. If the document is in the cache (409-n), its freshness state is examined (411). If the document is fresh (411 -y) then the client application returns to monitoring the user’s actions. If the document is not fresh (411-no) or if it had not been found in the cache (409-n), then the document is obtained from the URL identified in the hyperlink or from a document server 120 (413).
[0028] The predefined criteria mentioned above are used to make a determination that the user is likely to download the document. Stated another way, the predefined criteria are used to decide when the costs associated with prefetching and preloading one or more documents may justify the latency reduction benefits by obtaining the document(s).
[0029] In one embodiment, the predefined criteria for initiating one or more document requests is that the mouse pointer is positioned over or within a predefined proximity of a hyperlink. The predefined proximity may be a rectangular region surrounding the hyperlink, or it may be a region of any other predefined shape surrounding the hyperlink. Alternatively, the client assistant 106 can analyze a current movement of the mouse pointer to predict documents that might be downloaded or into which predefined proximity the mouse pointer is likely to enter. For example, when a user is viewing a downloaded document and 7 PCT/U S2005/022067 WO 2006/012144 wants to view another document represented by a hyperlink in the current downloaded document, the user will move the mouse pointer toward the area of the document containing the hyperlink or hyperlinks in which the user might be interested. In one embodiment, the client assistant 106 samples two or more locations at predetermined time limit intervals and fits a curve to the two or more locations using known curve fitting techniques. Hyperlinks along or within a predefined proximity of the curve are candidates for downloading. Alternatively, a spatial distance between the two or more locations could be taken into account in an attempt to eliminate or reduce the effect of off-route movements. For example, samples would not be used unless the spatial distance between the samples was above a predefined threshold value. Put another way, the route of the mouse pointer can be treated as a light beam that has certain strength and width, both of which are based on measured parameters of the mouse pointer’s positions over a period of time. In some embodiments, the client assistant 106 may go ahead preloading documents associated with the candidate hyperlinks even if the mouse has not been physically moved onto any of the hyperlinks. The predefined criteria in this embodiment may be considered aggressive because the user does not even need to position the mouse pointer over a hyperlink to initiate a document request. This embodiment launches inferred document requests very early, and reduces latency commensurately, but at the cost of launching many document requests that are not followed by user clicks on the same hyperlinks.
[0030] In a second embodiment, the predefined criteria for initiating a document request is a mouse-down action when the mouse pointer is positioned over a hyperlink. The predefined criteria in this embodiment may be considered conservative, because the inferred document requests are almost always followed by a mouse-up action on the same hyperlink. The latency reduction in this embodiment is modest, typically on the order of 200 milliseconds.
[0031] In a third embodiment, the predefined criteria for initiating a document request is that the mouse pointer is positioned over and either hovers over a hyperlink for at least a threshold period of time (e.g., a period of at least 100 milliseconds), or a mouse-down on the hyperlink occurs, which ever is first. This embodiment takes advantage of a common user behavior, which is to do a mouse hover over a hyperlink before clicking on it. In yet other embodiments, other predefined criteria may be used. For instance, the predefined criteria 8 PCT/US2005/022067 WO 2006/012144 may require a mouse hover, but the hover may be over any region within a predefined proximity of a hyperlink. Further, the predefined criteria may include multiple criteria.
[0032] A document in the client cache 108 may be deemed stale, or potentially stale, based on freshness parameters (see Fig. 3 A) stored in the client cache 108. A cached document having a host specified expiration date/time is typically determined to be stale when the current date/time is later than the document’s expiration date/time. However, many documents do not have a host specified expiration date/time, and for these documents the client assistant may employ a policy for determining which cached documents to treat as stale. For instance, in one embodiment, cached documents that have no specified expiration date/time are always be deemed stale. In another embodiment, documents that have no host specified expiration date/time and that are more than M minutes old are deemed to be stale (where M is any suitable value, such as a value between 5 and 60). In yet another embodiment, the staleness of cached documents having no host specified expiration date/time is based, at least in part, on one or more additional freshness parameters stored in the client cache. In still another embodiment, the staleness of cached documents having no host specified expiration date/time is based, at least in part, on the document type (e.g., html, doc, pdf, etc.).
[0033] In one embodiment, a persistent connection is established between the client assistant 106 and the document server 120. This persistent, dedicated connection can effectively reduce client-server communication latency. In one embodiment, the persistent connection includes at least one control stream and multiple data streams per direction.
[0034] When the document server responds to the document request (submitted in 413), the client assistant receives the response, and if the response includes a copy of the requested document, the document is stored in the client cache. In some instances, the document copy in the client cache is equivalent to the copy about to be downloaded, in which case the client assistant may update the document’s freshness parameters, but does not store a new document in the client cache.
[0035] In some embodiments, the response from the document server may include one or more documents embedded within the document identified in the request, and the client assistant stores these additional documents in the client cache as well. 9 PCT/U S2005/022067 WO 2006/012144 [0036] In some embodiments, at 413 the client assistant receives a content difference from the document server. The content difference represents a difference between a fresh version of the requested document and a stale copy of the document in the client cache. In this case the client assistant regenerates the fresh version of the document using the content difference and the stale copy of the document in the client cache, and then stores the regenerated fresh version of the document in the client cache.
[0037] When a user selects a URL for downloading, by clicking through a hyperlink or using any other URL selection mechanism, similar techniques may be used. In particular, the monitoring 401 detects a mouse-up action while the mouse pointer is positioned at or over a hyperlink (403). The monitoring 401 also detects other modes of URL selection, including selection of a URL from a list, such as a favorites list, and user entry of a URL (403). Whenever a URL selection is made, by any means, this is construed as a request to present the document corresponding to the URL. Presenting may be by any number of audio or visual means including, but not limited to, rendering the document on a display or aurally presenting the document to the user. The client assistant responds to the URL selection (403) by determining whether a request for the document is pending (415). If no request is pending (415-n), then the client cache is examined for the document (417). If the document was found (417-y), then either the prediction made earlier was correct or the document was previously requested. The document is checked for freshness (419), which may include checking for an almost-stale condition as described above. If the document is considered fresh, then it will be presented to the user as described above (421).
[0038] Returning to 415, if a previous request was pending (415-y), then a previous prediction was correct and there is an on-going process of either identifying the document in die client cache (417) or downloading it from a document server (425). The client assistant waits for the process to be completed (423) and then presents the document to the user (421). Alternatively, the document may be presented to the user as it is received without waiting for the entire document to be downloaded.
[0039] If the document was not found in the cache (417-n) or the document was found, but was not fresh (419-n), then the document is obtained from the document server or web host, as appropriate (425), and which could be in the form of a content difference as described earlier. After the document is obtained, it is presented to the user (421). 10 PCT/US2005/022067 WO 2006/012144
Alternately, prior to completion of the document download the document is progressively presented to the user as it is received at the client. After the document is presented, the user’s activities are monitored for additional actions (401).
[0040] In some embodiments, the client assistant may transmit at 423 a message to the document server asking for the previously submitted request to be accorded a high priority or high bandwidth. In these embodiments, responses to inferred document requests are given lower priority than responses to user made document requests.
[0041] In some embodiments, at 403,423 or 425, when the client assistant is responding to a user selection of a hyperlink (or user selection of a URL), if the client assistant is in the midst of receiving one or more documents other than the document corresponding to the user selected hyperlink or URL, the client assistant sends a request to the server to terminate transmission of the one or more documents. In particular, if a document is being received in response to an inferred document request which turns out to be a false prediction of which hyperlink or URL the user would select, continued transmission of the document would actually increase the latency associated with rendering the document corresponding to the user selected hyperlink or URL. Therefore the client assistant terminates the document download.
[0042] Fig. 5 depicts a client computer 500 in accordance with one embodiment of the present invention. The computer 500 includes one or more processing units (CPU’s) 502, one or more network or other communications interfaces 510, memory 512, and one or more communication buses 514 for interconnecting these components. The client computer 500 typically includes a user interface 504, which may include a display device 506 and a keyboard and/or mouse 508. Alternately, the user interface 504 may have other devices for rendering documents and enabling a user to select hyperlinks embedded in documents. Memory 512 may include high speed random access memory and may also include nonvolatile memory, such as one or more magnetic disk storage devices. The memory 512 preferably stores: • an operating system 516 that includes procedures for handling various basic system services and for performing hardware dependent tasks; 11 PCT/U S2005/022067 WO 2006/012144 • a network communication module (or instructions) 518 that is used for connecting the client computer 500 to other computers via the one or more communication network interfaces 510 (wired or wireless), and one or more communications networks; • a client application (or instructions) 104, such as a web browser, as described above; • a client assistant module (or instructions) 106, as described above; and • a client cache 108, as described above.
Document Server [0043] The above discussion focuses on the operation of the client assistant. The following is a brief description of how the document server responds to a document request. For a more complete discussion of the operation of the document server, see related U.S. Patent Application 10/???, “System and Method of Accessing a Document Efficiently Through Multi-Tier Web Caching”, filed on the same date as this application, (Attorney Docket 60963-5002-US), which is hereby incorporated by reference.
[0044] In some embodiments, upon receipt of the document request, the document server 120 first queries its associated index cache 122 for any record matching the hyperlink’s URL fingerprint. If an entry is identified in the index cache 122 and the associated document’s content in the object archive 128 is deemed fresh, the document server 120 sends the cached document to the client assistant 106. Therefore, if the user indeed clicks through the hyperlink, such a request for the associated document can be more promptly served since the associated document will have already been completely or partially cached in the client cache 108. In any case, latency will be reduced by at least the amount of time between the time the document request was sent by the client assistant 106 and the time the user clicked on the hyperlink. The latency reduction will typically average at least 0.20 seconds, and in for many users will average at least 0.4 seconds.
[0045] If no entry is found in the index cache 122 or if the cached document in the object cache 128 is deemed stale, the document server 120 submits a document download request to a web server 134 hosting the associated document. Alternately, the document server 120 may attempt to obtain a fresh copy of the document from another source, such as 12 PCT/U S2005/022067 WO 2006/012144 the repository of a search engine. In either case, if the document server locates a copy of the document that is deemed fresh, or that is fresher than the copy (if any) in the client cache, then the document server returns the located copy of the document to the client assistant.
[0046] In some embodiments, the document server sends the client assistant a content difference, representing a difference between the requested document and a stale copy of the document in the client cache. In the context of the present discussion, “sending a document from the document server to the client assistant”, can be accomplished in two or more ways, including sending the entire document, sending a content difference, or even sending a sequence of two or more content differences, where each content difference represents a difference between two versions of the requested document.
[0047] Fig. 6 depicts a server computer 600 in accordance with one embodiment of the present invention, which typically includes one or more processing units (CPU’s) 802, one or more network or other communications interfaces 610, memory 612, and one or more communication buses 614 for interconnecting these components. The server computer 800 may optionally include a user interface 604. Memory 612 may include high speed random access memory and may also include non-volatile memory, such as one or more magnetic disk storage devices. The memory 612 preferably stores: • an operating system 616 that includes procedures for handling various basic system services and for perfonning hardware dependent tasks; • a network communication module (or instructions) 618 that is used for connecting the server computer 600 to other computers, e.g., client computers 102, via the one or more communication network interfaces 610 (wired or wireless), and one or more communications networks; • a document server module (or instructions) 622 for receiving and responding to document download requests from client computers; and • a server cache 125, as described above.
[0048] The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its 13 PCT/US2005/022067 WO 2006/012144 practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. 14
Claims (26)
- THE CLAIMS DEFINING THE INVENTION ARE AS FOLLOWS:1. A method for expediting access to a document in a client-server network environment, comprising: at a client: monitoring a user's browsing activities within a currently displayed document having links to associated documents, including monitoring proximity of a user-controllable pointer to one or more of the links in the currently displayed document; prior to user selection of any respective link in the currently displayed document: identifying a link satisfying predefined criteria, the predefined criteria including proximity criteria with respect to the user-controllable pointer, and transmitting to a server a request for a document corresponding to the identified link.
- 2. The method of claim 1, wherein the transmitting includes transmitting to the server, along with the request for the document, a content fingerprint of a document stored at the client, the content fingerprint uniquely identifying a version of the document, corresponding to the identified link, that is stored at the client.
- 3. The method of claim 1, further comprising, prior to the transmitting, searching a client cache for the document corresponding to the identified link, and when the result of the search is negative, performing the transmitting.
- 4. The method of claim 1, wherein monitoring the user's browsing activities within the currently displayed document includes determining whether the user-controllable pointer is positioned over a link in the currently displayed document.
- 5. The method of claim 1, wherein monitoring the user's browsing activities within the currently displayed document includes determining whether a user-controllable pointer has hovered over a predefined region associated with a link in the currently displayed document for at least a predefined threshold amount of time.
- 6. The method of claim 1, wherein monitoring the user's browsing activities within the currently displayed document includes determining whether the user-controllable pointer has moved for a predefined period of time or a predefined distance along a trajectory that crosses over or near a link in the currently displayed document.
- 7. The method of claim 1, wherein monitoring the user's browsing activities within the currently displayed document includes sampling two or more pointer locations and fitting a curve to the two or more pointer locations; and the predefined criteria includes determining proximity of the curve to a position of one or more links in the currently displayed document.
- 8. The method of claim 1, including receiving a content difference corresponding to a difference between a fresh version of the document corresponding to the identified link and a stale version of the document in a client cache; and regenerating the fresh version of the document using the received content difference, and caching the fresh version of the document in the client cache prior to user selection of the identified link.
- 9. A client computer, comprising: one or more processors; memory storing one or more programs for execution by the one or more processors; a client assistant configured to monitor a user's browsing activities within a currently displayed document having links to one or more associated documents, including monitoring proximity of a user-controllable pointer to one or more of the links in the currently displayed document; the client assistant including instructions for identifying a link satisfying predefined criteria, the predefined criteria including proximity criteria with respect to the user-controllable pointer; and a communications interface coupled to the client assistant for transmitting to a server, prior to user selection of any respective link, a request for a document corresponding to the identified link.
- 10. The client computer of claim 9, wherein the one or more programs including instructions to transmit, along with the request for the document, a content fingerprint of a document stored at the client, the content fingerprint uniquely identifying a version of the document, corresponding to the identified link, that is stored at the client.
- 11. The client computer of claim 9, wherein the client assistant is configured to monitor the user's browsing activities within the currently displayed document using a device selected from the group consisting of: a trackball device, a touch pad, a joystick, a tablet, a glove, and an eye movement detector.
- 12. The client computer of claim 9, wherein the client assistant is further configured to search a client cache for the document corresponding to the identified link, and when the result of the searching is negative, to initiate the transmitting of the request.
- 13. The client computer of claim 9, wherein the client assistant includes instructions for determining whether a user-controllable pointer is positioned over a predefined region surrounding a link in the currently displayed document.
- 14. The client computer of claim 9, wherein the client assistant includes instructions for determining whether a user-controllable pointer has hovered over a predefined region associated with a link in the currently displayed document for at least a predefined threshold amount of time.
- 15. The client computer of claim 9, wherein the client assistant includes instructions for determining whether a user-controllable pointer has moved for a predefined period of time or a predefined distance along a trajectory that crosses over or near a link in the currently displayed document.
- 16. The client computer of claim 9, wherein monitoring the user’s browsing activities within the currently displayed document includes sampling two or more pointer locations and fitting a curve to the two or more pointer locations; and the predefined criteria includes determining proximity of the curve to a position of one or more links in the currently displayed document.
- 17. The client computer of claim 9, wherein the client assistant includes instructions for receiving a content difference corresponding to a difference between a fresh version of the document corresponding to the identified link and a stale version of the document in a client cache; and instructions for regenerating the fresh version of the document using the received content difference, and caching the fresh version of the document in the client cache prior to user selection of the identified link.
- 18. A computer readable storage medium storing one or more programs for execution by one or more processors of a client computer, the one or more programs including: a client assistant configured to monitor a user's browsing activities within a currently displayed document having links to one or more associated documents, including monitoring proximity of a user-controllable pointer to one or more of the links in the currently displayed document; the client assistant including instructions for identifying a link satisfying predefined criteria, the predefined criteria including proximity criteria with respect to the user-controllable pointer; and a communications interface coupled to the client assistant for transmitting to a server, prior to user selection of any respective link, a request for a document corresponding to the identified link.
- 19. The computer readable storage medium of claim 18, wherein the one or more programs includes instructions to transmit, along with the request for the document, a content fingerprint of a document stored at the client, the content fingerprint uniquely identifying a version of the document, corresponding to the identified link, that is stored at the client.
- 20. The computer readable storage medium of claim 18, wherein the client assistant is further configured to search a client cache for the document corresponding to the identified link, and when the result of the searching is negative, to initiate the transmitting of the request.
- 21. The computer readable storage medium of claim 18, wherein the client assistant includes instructions for determining whether a user-controllable pointer is positioned over a link in the currently displayed document.
- 22. The computer readable storage medium of claim 18, wherein the client assistant includes instructions for determining whether a user-controllable pointer is positioned over a predefined region surrounding a link in the currently displayed document.
- 23. The computer readable storage medium of claim 18, wherein the client assistant includes instructions for determining whether a user-controllable pointer has hovered over a predefined region associated with a link in the currently displayed document for at least a predefined threshold amount of time.
- 24. The computer readable storage medium of claim 18, wherein the client assistant includes instructions for determining whether a user-controllable pointer has moved for a predefined period of time or a predefined distance along a trajectory that crosses over or near a link in the currently displayed document.
- 25. The computer readable storage medium of claim 18, wherein the client assistant includes instructions for sampling two or more pointer locations and fitting a curve to the two or more pointer locations; and the predefined criteria includes determining proximity of the curve to a position of one or more links in the currently displayed document.
- 26. The computer readable storage medium of claim 18, wherein the client assistant includes instructions for receiving a content difference corresponding to a difference between a fresh version of the document corresponding to the identified link and a stale version of the document in a client cache; and instructions for regenerating the fresh version of the document using the received content difference, and caching the fresh version of the document in the client cache prior to user selection of the identified link.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/882,793 | 2004-06-30 | ||
US10/882,793 US7558822B2 (en) | 2004-06-30 | 2004-06-30 | Accelerating user interfaces by predicting user actions |
PCT/US2005/022067 WO2006012144A2 (en) | 2004-06-30 | 2005-06-17 | Accelerating user interfaces by predicting user actions |
Publications (3)
Publication Number | Publication Date |
---|---|
AU2005267394A1 AU2005267394A1 (en) | 2006-02-02 |
AU2005267394B2 AU2005267394B2 (en) | 2010-05-27 |
AU2005267394B8 true AU2005267394B8 (en) | 2017-04-06 |
Family
ID=34981605
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
AU2005267394A Active AU2005267394B8 (en) | 2004-06-30 | 2005-06-17 | Accelerating user interfaces by predicting user actions |
Country Status (5)
Country | Link |
---|---|
US (1) | US7558822B2 (en) |
EP (2) | EP2618280A1 (en) |
AU (1) | AU2005267394B8 (en) |
CA (1) | CA2572615C (en) |
WO (1) | WO2006012144A2 (en) |
Families Citing this family (177)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8756342B1 (en) * | 2000-02-07 | 2014-06-17 | Parallel Networks, Llc | Method and apparatus for content synchronization |
US20050055426A1 (en) * | 2000-06-12 | 2005-03-10 | Kim Smith | System, method and computer program product that pre-caches content to provide timely information to a user |
US7062515B1 (en) | 2001-12-28 | 2006-06-13 | Vignette Corporation | System and method for the synchronization of a file in a cache |
US10296919B2 (en) | 2002-03-07 | 2019-05-21 | Comscore, Inc. | System and method of a click event data collection platform |
US8095589B2 (en) | 2002-03-07 | 2012-01-10 | Compete, Inc. | Clickstream analysis methods and systems |
US20080189408A1 (en) | 2002-10-09 | 2008-08-07 | David Cancel | Presenting web site analytics |
US7949960B2 (en) * | 2003-09-30 | 2011-05-24 | Sap Ag | Predictive rendering of user interfaces |
US8676922B1 (en) | 2004-06-30 | 2014-03-18 | Google Inc. | Automatic proxy setting modification |
US7437364B1 (en) * | 2004-06-30 | 2008-10-14 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US8224964B1 (en) | 2004-06-30 | 2012-07-17 | Google Inc. | System and method of accessing a document efficiently through multi-tier web caching |
US7756887B1 (en) | 2004-12-30 | 2010-07-13 | Google Inc. | System and method for modulating search relevancy using pointer activity monitoring |
EP1844612B1 (en) * | 2005-02-04 | 2017-05-10 | Barco NV | Method and device for image and video transmission over low-bandwidth and high-latency transmission channels |
US20120021835A1 (en) * | 2005-02-11 | 2012-01-26 | Iprd Labs Llc | Systems and methods for server based video gaming |
JP2006260522A (en) * | 2005-02-21 | 2006-09-28 | Ricoh Co Ltd | Information processing device, information management device, information management system, information processing method, information management method, information processing program, information management program, and recording medium |
US8732234B2 (en) * | 2005-06-07 | 2014-05-20 | Yahoo! Inc. | Providing relevant non-requested content to a mobile device |
US9105028B2 (en) | 2005-08-10 | 2015-08-11 | Compete, Inc. | Monitoring clickstream behavior of viewers of online advertisements and search results |
US7747749B1 (en) * | 2006-05-05 | 2010-06-29 | Google Inc. | Systems and methods of efficiently preloading documents to client devices |
US8812651B1 (en) | 2007-02-15 | 2014-08-19 | Google Inc. | Systems and methods for client cache awareness |
US8065275B2 (en) * | 2007-02-15 | 2011-11-22 | Google Inc. | Systems and methods for cache optimization |
US20080301300A1 (en) * | 2007-06-01 | 2008-12-04 | Microsoft Corporation | Predictive asynchronous web pre-fetch |
US9195661B2 (en) * | 2007-06-07 | 2015-11-24 | Thomson Reuters Global Resources | Method and system for click-thru capability in electronic media |
US9148628B2 (en) * | 2007-08-16 | 2015-09-29 | Yahoo! Inc. | Intelligent media buffering based on input focus proximity |
US20090144654A1 (en) * | 2007-10-03 | 2009-06-04 | Robert Brouwer | Methods and apparatus for facilitating content consumption |
US8326814B2 (en) | 2007-12-05 | 2012-12-04 | Box, Inc. | Web-based file management system and service |
US20090319530A1 (en) * | 2008-06-18 | 2009-12-24 | International Business Machines Corporation | Mechanism for unequivocally referencing content in web 2.0 applications |
US20100017262A1 (en) * | 2008-07-18 | 2010-01-21 | Yahoo! Inc. | Predicting selection rates of a document using click-based translation dictionaries |
US8677018B2 (en) | 2008-08-25 | 2014-03-18 | Google Inc. | Parallel, side-effect based DNS pre-caching |
KR101562792B1 (en) * | 2009-06-10 | 2015-10-23 | 삼성전자주식회사 | Apparatus and method for providing goal predictive interface |
US20110022945A1 (en) * | 2009-07-24 | 2011-01-27 | Nokia Corporation | Method and apparatus of browsing modeling |
US9307003B1 (en) | 2010-04-18 | 2016-04-05 | Viasat, Inc. | Web hierarchy modeling |
US8799759B2 (en) * | 2010-12-13 | 2014-08-05 | International Business Machines Corporation | Pre-rendering web content |
US10554426B2 (en) | 2011-01-20 | 2020-02-04 | Box, Inc. | Real time notification of activities that occur in a web-based collaboration environment |
US20120203820A1 (en) * | 2011-02-03 | 2012-08-09 | International Business Machines Corporation | Predicting workload by per look based data |
US8788927B2 (en) * | 2011-02-24 | 2014-07-22 | Cbs Interactive Inc. | System and method for displaying web page content |
US9065793B2 (en) | 2011-02-24 | 2015-06-23 | Cbs Interactive Inc. | Rendering web content using pre-caching |
US9424357B1 (en) | 2011-03-01 | 2016-08-23 | Amazon Technologies, Inc. | Predictive page loading based on text entry and search term suggestions |
US9037638B1 (en) | 2011-04-11 | 2015-05-19 | Viasat, Inc. | Assisted browsing using hinting functionality |
US9106607B1 (en) | 2011-04-11 | 2015-08-11 | Viasat, Inc. | Browser based feedback for optimized web browsing |
US9456050B1 (en) * | 2011-04-11 | 2016-09-27 | Viasat, Inc. | Browser optimization through user history analysis |
US9912718B1 (en) * | 2011-04-11 | 2018-03-06 | Viasat, Inc. | Progressive prefetching |
US8732569B2 (en) | 2011-05-04 | 2014-05-20 | Google Inc. | Predicting user navigation events |
US9769285B2 (en) | 2011-06-14 | 2017-09-19 | Google Inc. | Access to network content |
US8788711B2 (en) | 2011-06-14 | 2014-07-22 | Google Inc. | Redacting content and inserting hypertext transfer protocol (HTTP) error codes in place thereof |
US9015601B2 (en) | 2011-06-21 | 2015-04-21 | Box, Inc. | Batch uploading of content to a web-based collaboration environment |
US9063912B2 (en) | 2011-06-22 | 2015-06-23 | Box, Inc. | Multimedia content preview rendering in a cloud content management system |
US8650139B2 (en) | 2011-07-01 | 2014-02-11 | Google Inc. | Predicting user navigation events |
US8745212B2 (en) | 2011-07-01 | 2014-06-03 | Google Inc. | Access to network content |
US9978040B2 (en) | 2011-07-08 | 2018-05-22 | Box, Inc. | Collaboration sessions in a workspace on a cloud-based content management system |
WO2013009337A2 (en) | 2011-07-08 | 2013-01-17 | Arnold Goldberg | Desktop application for access and interaction with workspaces in a cloud-based content management system and synchronization mechanisms thereof |
US8566696B1 (en) | 2011-07-14 | 2013-10-22 | Google Inc. | Predicting user navigation events |
US8744988B1 (en) | 2011-07-15 | 2014-06-03 | Google Inc. | Predicting user navigation events in an internet browser |
US9400584B2 (en) | 2011-09-09 | 2016-07-26 | Microsoft Technology Licensing, Llc | Alias selection in multiple-aliased animations |
US8600921B2 (en) | 2011-09-15 | 2013-12-03 | Google Inc. | Predicting user navigation events in a browser using directed graphs |
US8655819B1 (en) | 2011-09-15 | 2014-02-18 | Google Inc. | Predicting user navigation events based on chronological history data |
US9197718B2 (en) | 2011-09-23 | 2015-11-24 | Box, Inc. | Central management and control of user-contributed content in a web-based collaboration environment and management console thereof |
US8826153B2 (en) * | 2011-10-04 | 2014-09-02 | Google Inc. | Speculative actions based on user dwell time over selectable content |
US9104664B1 (en) | 2011-10-07 | 2015-08-11 | Google Inc. | Access to search results |
US8515902B2 (en) | 2011-10-14 | 2013-08-20 | Box, Inc. | Automatic and semi-automatic tagging features of work items in a shared workspace for metadata tracking in a cloud-based content management system with selective or optional user contribution |
US11210610B2 (en) | 2011-10-26 | 2021-12-28 | Box, Inc. | Enhanced multimedia content preview rendering in a cloud content management system |
US9098474B2 (en) * | 2011-10-26 | 2015-08-04 | Box, Inc. | Preview pre-generation based on heuristics and algorithmic prediction/assessment of predicted user behavior for enhancement of user experience |
US10115217B2 (en) | 2011-10-28 | 2018-10-30 | Microsoft Technology Licensing, Llc | Layering animation properties in higher level animations |
CN103106216A (en) * | 2011-11-15 | 2013-05-15 | 腾讯科技（深圳）有限公司 | Method and device of web page access |
US8990307B2 (en) | 2011-11-16 | 2015-03-24 | Box, Inc. | Resource effective incremental updating of a remote client with events which occurred via a cloud-enabled platform |
SG190505A1 (en) * | 2011-11-24 | 2013-06-28 | Chikka Pte Ltd | System and method for detecting broadband service and a charging mechanism for same |
GB2500152A (en) | 2011-11-29 | 2013-09-11 | Box Inc | Mobile platform file and folder selection functionalities for offline access and synchronization |
US9584579B2 (en) | 2011-12-01 | 2017-02-28 | Google Inc. | Method and system for providing page visibility information |
US9019123B2 (en) | 2011-12-22 | 2015-04-28 | Box, Inc. | Health check services for web-based collaboration environments |
GB2497935A (en) * | 2011-12-22 | 2013-07-03 | Ibm | Predicting actions input to a user interface |
US9335832B2 (en) * | 2011-12-23 | 2016-05-10 | Sap Se | Executing system actions corresponding to user inputs |
US8965933B2 (en) * | 2012-01-06 | 2015-02-24 | Apple Inc. | Multi-tiered caches in data rendering |
US8793235B2 (en) | 2012-01-19 | 2014-07-29 | Google Inc. | System and method for improving access to search results |
US9900395B2 (en) | 2012-01-27 | 2018-02-20 | Comscore, Inc. | Dynamic normalization of internet traffic |
US8954580B2 (en) | 2012-01-27 | 2015-02-10 | Compete, Inc. | Hybrid internet traffic measurement using site-centric and panel data |
US11232481B2 (en) | 2012-01-30 | 2022-01-25 | Box, Inc. | Extended applications of multimedia content previews in the cloud-based content management system |
US9965745B2 (en) | 2012-02-24 | 2018-05-08 | Box, Inc. | System and method for promoting enterprise adoption of a web-based collaboration environment |
US8521735B1 (en) | 2012-02-27 | 2013-08-27 | Google Inc. | Anonymous personalized recommendation method |
US9195636B2 (en) | 2012-03-07 | 2015-11-24 | Box, Inc. | Universal file type preview for mobile devices |
US8954524B1 (en) | 2012-03-14 | 2015-02-10 | Google Inc. | Access to network content |
US9054919B2 (en) | 2012-04-05 | 2015-06-09 | Box, Inc. | Device pinning capability for enterprise cloud service and storage accounts |
US9575981B2 (en) | 2012-04-11 | 2017-02-21 | Box, Inc. | Cloud service enabled to handle a set of files depicted to a user as a single file in a native operating system |
US9413587B2 (en) | 2012-05-02 | 2016-08-09 | Box, Inc. | System and method for a third-party application to access content within a cloud-based platform |
GB2514947B (en) | 2012-05-04 | 2015-06-17 | Box Inc | Repository redundancy implementation of a system which incrementally updates clients with events that occured via a cloud-enabled platform |
US9946792B2 (en) | 2012-05-15 | 2018-04-17 | Google Llc | Access to network content |
US9691051B2 (en) | 2012-05-21 | 2017-06-27 | Box, Inc. | Security enhancement through application access control |
US8914900B2 (en) | 2012-05-23 | 2014-12-16 | Box, Inc. | Methods, architectures and security mechanisms for a third-party application to access content in a cloud-based platform |
US9027108B2 (en) | 2012-05-23 | 2015-05-05 | Box, Inc. | Systems and methods for secure file portability between mobile applications on a mobile device |
US9483308B2 (en) | 2012-06-29 | 2016-11-01 | Intel Corporation | Performance of predicted actions |
US8990143B2 (en) | 2012-06-29 | 2015-03-24 | Intel Corporation | Application-provided context for potential action prediction |
US20140006599A1 (en) * | 2012-06-29 | 2014-01-02 | Dirk Hohndel | Probabilities of potential actions based on system observations |
US9021099B2 (en) | 2012-07-03 | 2015-04-28 | Box, Inc. | Load balancing secure FTP connections among multiple FTP servers |
US9792320B2 (en) | 2012-07-06 | 2017-10-17 | Box, Inc. | System and method for performing shard migration to support functions of a cloud-based service |
US9712510B2 (en) | 2012-07-06 | 2017-07-18 | Box, Inc. | Systems and methods for securely submitting comments among users via external messaging applications in a cloud-based platform |
GB2505072A (en) | 2012-07-06 | 2014-02-19 | Box Inc | Identifying users and collaborators as search results in a cloud-based system |
US9237170B2 (en) | 2012-07-19 | 2016-01-12 | Box, Inc. | Data loss prevention (DLP) methods and architectures by a cloud service |
US8868574B2 (en) | 2012-07-30 | 2014-10-21 | Box, Inc. | System and method for advanced search and filtering mechanisms for enterprise administrators in a cloud-based environment |
US9794256B2 (en) | 2012-07-30 | 2017-10-17 | Box, Inc. | System and method for advanced control tools for administrators in a cloud-based service |
US8887239B1 (en) | 2012-08-08 | 2014-11-11 | Google Inc. | Access to network content |
US8745267B2 (en) | 2012-08-19 | 2014-06-03 | Box, Inc. | Enhancement of upload and/or download performance based on client and/or server feedback information |
US9369520B2 (en) | 2012-08-19 | 2016-06-14 | Box, Inc. | Enhancement of upload and/or download performance based on client and/or server feedback information |
GB2513671A (en) | 2012-08-27 | 2014-11-05 | Box Inc | Server side techniques for reducing database workload in implementing selective subfolder synchronization in a cloud-based environment |
US9135462B2 (en) | 2012-08-29 | 2015-09-15 | Box, Inc. | Upload and download streaming encryption to/from a cloud-based platform |
US9311071B2 (en) | 2012-09-06 | 2016-04-12 | Box, Inc. | Force upgrade of a mobile application via a server side configuration file |
US9117087B2 (en) | 2012-09-06 | 2015-08-25 | Box, Inc. | System and method for creating a secure channel for inter-application communication based on intents |
US9195519B2 (en) | 2012-09-06 | 2015-11-24 | Box, Inc. | Disabling the self-referential appearance of a mobile application in an intent via a background registration |
US9292833B2 (en) | 2012-09-14 | 2016-03-22 | Box, Inc. | Batching notifications of activities that occur in a web-based collaboration environment |
US10200256B2 (en) | 2012-09-17 | 2019-02-05 | Box, Inc. | System and method of a manipulative handle in an interactive mobile user interface |
US9553758B2 (en) | 2012-09-18 | 2017-01-24 | Box, Inc. | Sandboxing individual applications to specific user folders in a cloud-based service |
US10915492B2 (en) | 2012-09-19 | 2021-02-09 | Box, Inc. | Cloud-based platform enabled with media content indexed for text-based searches and/or metadata extraction |
US9959420B2 (en) | 2012-10-02 | 2018-05-01 | Box, Inc. | System and method for enhanced security and management mechanisms for enterprise administrators in a cloud-based environment |
US9141722B2 (en) | 2012-10-02 | 2015-09-22 | Google Inc. | Access to network content |
US9495364B2 (en) | 2012-10-04 | 2016-11-15 | Box, Inc. | Enhanced quick search features, low-barrier commenting/interactive features in a collaboration platform |
US9705967B2 (en) | 2012-10-04 | 2017-07-11 | Box, Inc. | Corporate user discovery and identification of recommended collaborators in a cloud platform |
US9665349B2 (en) | 2012-10-05 | 2017-05-30 | Box, Inc. | System and method for generating embeddable widgets which enable access to a cloud-based collaboration platform |
GB2507191B (en) | 2012-10-17 | 2015-03-04 | Box Inc | Remote key management in a cloud-based environment |
US9756022B2 (en) | 2014-08-29 | 2017-09-05 | Box, Inc. | Enhanced remote key management for an enterprise in a cloud-based environment |
US9258353B2 (en) | 2012-10-23 | 2016-02-09 | Microsoft Technology Licensing, Llc | Multiple buffering orders for digital content item |
US9300742B2 (en) * | 2012-10-23 | 2016-03-29 | Microsoft Technology Licensing, Inc. | Buffer ordering based on content access tracking |
US9489385B1 (en) * | 2012-11-09 | 2016-11-08 | Symantec Corporation | Exact look and feel for sharepoint archived content |
US10235383B2 (en) | 2012-12-19 | 2019-03-19 | Box, Inc. | Method and apparatus for synchronization of items with read-only permissions in a cloud-based environment |
US9396245B2 (en) | 2013-01-02 | 2016-07-19 | Box, Inc. | Race condition handling in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
US9953036B2 (en) | 2013-01-09 | 2018-04-24 | Box, Inc. | File system monitoring in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
EP2755151A3 (en) | 2013-01-11 | 2014-09-24 | Box, Inc. | Functionalities, features and user interface of a synchronization client to a cloud-based environment |
EP2757491A1 (en) | 2013-01-17 | 2014-07-23 | Box, Inc. | Conflict resolution, retry condition management, and handling of problem files for the synchronization client to a cloud-based platform |
US9769030B1 (en) * | 2013-02-11 | 2017-09-19 | Amazon Technologies, Inc. | Page prefetching |
US9195432B2 (en) | 2013-02-26 | 2015-11-24 | Sonos, Inc. | Pre-caching of audio content |
US9467525B2 (en) | 2013-03-07 | 2016-10-11 | Sap Se | Shared client caching |
US8799799B1 (en) * | 2013-05-07 | 2014-08-05 | Palantir Technologies Inc. | Interactive geospatial map |
US10725968B2 (en) | 2013-05-10 | 2020-07-28 | Box, Inc. | Top down delete or unsynchronization on delete of and depiction of item synchronization with a synchronization client to a cloud-based platform |
US10846074B2 (en) | 2013-05-10 | 2020-11-24 | Box, Inc. | Identification and handling of items to be ignored for synchronization with a cloud-based platform by a synchronization client |
US9197716B2 (en) | 2013-05-30 | 2015-11-24 | Sap Se | Pre-fetching resources by predicting user actions |
US9497079B2 (en) | 2013-06-13 | 2016-11-15 | Sap Se | Method and system for establishing, by an upgrading acceleration node, a bypass link to another acceleration node |
GB2515192B (en) | 2013-06-13 | 2016-12-14 | Box Inc | Systems and methods for synchronization event building and/or collapsing by a synchronization component of a cloud-based platform |
US9805050B2 (en) | 2013-06-21 | 2017-10-31 | Box, Inc. | Maintaining and updating file system shadows on a local device by a synchronization client of a cloud-based platform |
US9285886B2 (en) * | 2013-06-24 | 2016-03-15 | Sonos, Inc. | Intelligent amplifier activation |
US10229134B2 (en) | 2013-06-25 | 2019-03-12 | Box, Inc. | Systems and methods for managing upgrades, migration of user data and improving performance of a cloud-based platform |
US10110656B2 (en) | 2013-06-25 | 2018-10-23 | Box, Inc. | Systems and methods for providing shell communication in a cloud-based platform |
US9535924B2 (en) | 2013-07-30 | 2017-01-03 | Box, Inc. | Scalability improvement in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
US9704137B2 (en) | 2013-09-13 | 2017-07-11 | Box, Inc. | Simultaneous editing/accessing of content by collaborator invitation through a web-based or mobile application to a cloud-based collaboration platform |
US10509527B2 (en) | 2013-09-13 | 2019-12-17 | Box, Inc. | Systems and methods for configuring event-based automation in cloud-based collaboration platforms |
US9213684B2 (en) | 2013-09-13 | 2015-12-15 | Box, Inc. | System and method for rendering document in web browser or mobile device regardless of third-party plug-in software |
US8892679B1 (en) | 2013-09-13 | 2014-11-18 | Box, Inc. | Mobile device, methods and user interfaces thereof in a mobile device platform featuring multifunctional access and engagement in a collaborative environment provided by a cloud-based platform |
GB2518298A (en) | 2013-09-13 | 2015-03-18 | Box Inc | High-availability architecture for a cloud-based concurrent-access collaboration platform |
US9535909B2 (en) | 2013-09-13 | 2017-01-03 | Box, Inc. | Configurable event-based automation architecture for cloud-based collaboration platforms |
US10866931B2 (en) | 2013-10-22 | 2020-12-15 | Box, Inc. | Desktop application for accessing a cloud collaboration platform |
US9898520B2 (en) | 2014-03-25 | 2018-02-20 | Open Text Sa Ulc | Systems and methods for seamless access to remotely managed documents using synchronization of locally stored documents |
GB2526152A (en) * | 2014-05-16 | 2015-11-18 | Vodafone Ip Licensing Ltd | Controlling a server |
US10530854B2 (en) | 2014-05-30 | 2020-01-07 | Box, Inc. | Synchronization of permissioned content in cloud-based environments |
US10855797B2 (en) | 2014-06-03 | 2020-12-01 | Viasat, Inc. | Server-machine-driven hint generation for improved web page loading using client-machine-driven feedback |
US9602514B2 (en) | 2014-06-16 | 2017-03-21 | Box, Inc. | Enterprise mobility management and verification of a managed application by a content provider |
US10574442B2 (en) | 2014-08-29 | 2020-02-25 | Box, Inc. | Enhanced remote key management for an enterprise in a cloud-based environment |
US10038731B2 (en) | 2014-08-29 | 2018-07-31 | Box, Inc. | Managing flow-based interactions with cloud-based shared content |
US9894119B2 (en) | 2014-08-29 | 2018-02-13 | Box, Inc. | Configurable metadata-based automation and content classification architecture for cloud-based collaboration platforms |
US10101983B2 (en) * | 2014-11-07 | 2018-10-16 | Open Text Sa Ulc | Client application with embedded server |
EP3611632A1 (en) | 2015-03-16 | 2020-02-19 | Palantir Technologies Inc. | Displaying attribute and event data along paths |
US9600146B2 (en) | 2015-08-17 | 2017-03-21 | Palantir Technologies Inc. | Interactive geospatial map |
US10706434B1 (en) | 2015-09-01 | 2020-07-07 | Palantir Technologies Inc. | Methods and systems for determining location information |
CN116610884A (en) | 2015-10-20 | 2023-08-18 | 维尔塞特公司 | Updating hint models using auto-browse clusters |
US20170212651A1 (en) * | 2016-01-27 | 2017-07-27 | Amadeus S.A.S. | Short cut links in a graphical user interface |
US10171442B2 (en) | 2016-08-16 | 2019-01-01 | International Business Machines Corporation | Predicting a need for and creating temporary access to a computer component in infrastructure information technology |
JP7100422B2 (en) | 2016-10-21 | 2022-07-13 | 富士通株式会社 | Devices, programs, and methods for recognizing data properties |
EP3312722A1 (en) | 2016-10-21 | 2018-04-25 | Fujitsu Limited | Data processing apparatus, method, and program |
US10776170B2 (en) | 2016-10-21 | 2020-09-15 | Fujitsu Limited | Software service execution apparatus, system, and method |
JP6805765B2 (en) | 2016-10-21 | 2020-12-23 | 富士通株式会社 | Systems, methods, and programs for running software services |
ES2765415T3 (en) | 2016-10-21 | 2020-06-09 | Fujitsu Ltd | Microservices-based data processing apparatus, method and program |
CN108090078B (en) | 2016-11-22 | 2021-11-30 | 北京京东尚科信息技术有限公司 | Document online preview method and device, storage medium and electronic equipment |
US11003632B2 (en) | 2016-11-28 | 2021-05-11 | Open Text Sa Ulc | System and method for content synchronization |
US10789220B2 (en) | 2017-03-28 | 2020-09-29 | Sap Se | Management of database API schema |
US11301431B2 (en) | 2017-06-02 | 2022-04-12 | Open Text Sa Ulc | System and method for selective synchronization |
US10762125B2 (en) * | 2017-11-14 | 2020-09-01 | International Business Machines Corporation | Sorting images based on learned actions |
US10949272B2 (en) | 2018-06-14 | 2021-03-16 | Microsoft Technology Licensing, Llc | Inter-application context seeding |
US11232126B2 (en) | 2018-11-21 | 2022-01-25 | Sap Se | Zero downtime upgrade of systems with database-side replication |
US10853693B2 (en) | 2018-12-04 | 2020-12-01 | Sap Se | Software logistic for learning applications |
US10891217B2 (en) | 2018-12-10 | 2021-01-12 | Sap Se | Optimizing test coverage based on actual use |
US11121943B2 (en) | 2018-12-13 | 2021-09-14 | Sap Se | Amplifying scaling elasticity of microservice meshes |
US10642609B1 (en) | 2018-12-13 | 2020-05-05 | Sap Se | Integrating preview systems for early validation and maintenance in development-to-production landscapes provisioned by continuous delivery |
US10700949B1 (en) | 2018-12-13 | 2020-06-30 | Sap Se | Stacking of tentant-aware services |
US20220318484A1 (en) * | 2021-04-02 | 2022-10-06 | Relativity Oda Llc | Systems and methods of previewing a document |
Family Cites Families (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3865775B2 (en) | 1995-04-11 | 2007-01-10 | キネテック インコーポレイテッド | Data identification in data processing systems |
US5802292A (en) * | 1995-04-28 | 1998-09-01 | Digital Equipment Corporation | Method for predictive prefetching of information over a communications network |
US6003030A (en) | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US5727129A (en) * | 1996-06-04 | 1998-03-10 | International Business Machines Corporation | Network system for profiling and actively facilitating user activities |
US6584498B2 (en) | 1996-09-13 | 2003-06-24 | Planet Web, Inc. | Dynamic preloading of web pages |
GB2317723A (en) | 1996-09-30 | 1998-04-01 | Viewinn Plc | Caching system for information retrieval |
SE507138C2 (en) | 1996-10-14 | 1998-04-06 | Mirror Image Internet Ab | Procedure and apparatus for information transmission on the Internet |
US6421726B1 (en) | 1997-03-14 | 2002-07-16 | Akamai Technologies, Inc. | System and method for selection and retrieval of diverse types of video data on a computer network |
US5835905A (en) * | 1997-04-09 | 1998-11-10 | Xerox Corporation | System for predicting documents relevant to focus documents by spreading activation through network representations of a linked collection of documents |
US5878223A (en) * | 1997-05-07 | 1999-03-02 | International Business Machines Corporation | System and method for predictive caching of information pages |
US6023726A (en) | 1998-01-20 | 2000-02-08 | Netscape Communications Corporation | User configurable prefetch control system for enabling client to prefetch documents from a network server |
US6055569A (en) * | 1998-01-27 | 2000-04-25 | Go Ahead Software Inc. | Accelerating web access by predicting user action |
US6182133B1 (en) | 1998-02-06 | 2001-01-30 | Microsoft Corporation | Method and apparatus for display of information prefetching and cache status having variable visual indication based on a period of time since prefetching |
US6292880B1 (en) * | 1998-04-15 | 2001-09-18 | Inktomi Corporation | Alias-free content-indexed object cache |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
US6338066B1 (en) * | 1998-09-25 | 2002-01-08 | International Business Machines Corporation | Surfaid predictor: web-based system for predicting surfer behavior |
US6625643B1 (en) | 1998-11-13 | 2003-09-23 | Akamai Technologies, Inc. | System and method for resource management on a data network |
US6553411B1 (en) * | 1999-05-18 | 2003-04-22 | International Business Machines Corporation | System and method for cache acceleration |
US6484143B1 (en) | 1999-11-22 | 2002-11-19 | Speedera Networks, Inc. | User device and system for traffic management and content distribution over a world wide area network |
US6405252B1 (en) | 1999-11-22 | 2002-06-11 | Speedera Networks, Inc. | Integrated point of presence server network |
US6665726B1 (en) | 2000-01-06 | 2003-12-16 | Akamai Technologies, Inc. | Method and system for fault tolerant media streaming over the internet |
KR100373486B1 (en) * | 2000-01-27 | 2003-02-25 | 링크플러스(주) | Method for processing web documents |
US20020156864A1 (en) | 2000-06-06 | 2002-10-24 | Kniest James Newton | System for wireless exchange of data with hand held devices |
US6742033B1 (en) | 2000-06-12 | 2004-05-25 | Gateway, Inc. | System, method and computer program product that pre-caches content to provide timely information to a user |
EP1182589A3 (en) | 2000-08-17 | 2002-07-24 | International Business Machines Corporation | Provision of electronic documents from cached portions |
US20020161860A1 (en) * | 2001-02-28 | 2002-10-31 | Benjamin Godlin | Method and system for differential distributed data file storage, management and access |
US6912591B2 (en) | 2001-05-02 | 2005-06-28 | Science Application International Corporation | System and method for patch enabled data transmissions |
JP2004535713A (en) | 2001-06-04 | 2004-11-25 | エヌシーティー グループ インコーポレーテッド | System and method for increasing the effective bandwidth of a communication network |
US7003566B2 (en) * | 2001-06-29 | 2006-02-21 | International Business Machines Corporation | Method and system for predictive directional data caching |
US20030101234A1 (en) * | 2001-11-28 | 2003-05-29 | International Business Machines Corporation | System and method for indicating whether a document is cached |
US7249053B2 (en) * | 2003-06-16 | 2007-07-24 | Claria Corporation | Presentation of messages to end-users in a computer network |
US20060294223A1 (en) * | 2005-06-24 | 2006-12-28 | Microsoft Corporation | Pre-fetching and DNS resolution of hyperlinked content |
-
2004
- 2004-06-30 US US10/882,793 patent/US7558822B2/en active Active
-
2005
- 2005-06-17 WO PCT/US2005/022067 patent/WO2006012144A2/en active Application Filing
- 2005-06-17 CA CA2572615A patent/CA2572615C/en active Active
- 2005-06-17 EP EP13164604.4A patent/EP2618280A1/en not_active Ceased
- 2005-06-17 AU AU2005267394A patent/AU2005267394B8/en active Active
- 2005-06-17 EP EP05761926A patent/EP1779264A2/en not_active Withdrawn
Also Published As
Publication number | Publication date |
---|---|
WO2006012144A3 (en) | 2006-04-27 |
AU2005267394B2 (en) | 2010-05-27 |
EP2618280A1 (en) | 2013-07-24 |
EP1779264A2 (en) | 2007-05-02 |
CA2572615C (en) | 2015-04-14 |
AU2005267394A1 (en) | 2006-02-02 |
US7558822B2 (en) | 2009-07-07 |
US20060047804A1 (en) | 2006-03-02 |
CA2572615A1 (en) | 2006-02-02 |
WO2006012144A2 (en) | 2006-02-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
AU2005267394B8 (en) | Accelerating user interfaces by predicting user actions | |
US8065275B2 (en) | Systems and methods for cache optimization | |
US20060294223A1 (en) | Pre-fetching and DNS resolution of hyperlinked content | |
US8996653B1 (en) | Systems and methods for client authentication | |
US7747749B1 (en) | Systems and methods of efficiently preloading documents to client devices | |
US6526479B2 (en) | Method of caching web resources | |
US7398271B1 (en) | Using network traffic logs for search enhancement | |
KR102097300B1 (en) | File handling within a cloud-based file system | |
US8825754B2 (en) | Prioritized preloading of documents to client | |
US6775743B2 (en) | Content caching with special handling of multiple identical requests for content | |
US7143143B1 (en) | System and method for distributed caching using multicast replication | |
US9380022B2 (en) | System and method for managing content variations in a content deliver cache | |
US8856454B2 (en) | Anticipatory response pre-caching | |
US20080301300A1 (en) | Predictive asynchronous web pre-fetch | |
US8719265B1 (en) | Pre-fetching information in anticipation of a user request | |
US7630970B2 (en) | Wait timer for partially formed query | |
US6553461B1 (en) | Client controlled pre-fetching of resources | |
CZ20011380A3 (en) | Multi-target links for navigating between hypertext documents and the like | |
JP2000357120A (en) | Cache managing method | |
JP3791900B2 (en) | Method and system for providing customized information in a computer processing system | |
US7222170B2 (en) | Tracking hits for network files using transmitted counter instructions | |
US7930479B2 (en) | System and method for caching and retrieving from cache transaction content elements | |
US11783002B2 (en) | Intelligent dynamic preloading | |
EP1850242B1 (en) | Method of reflecting on another device an addition to a browser cache on a handheld electronic device, and associated device | |
KR20010003611A (en) | Caching method using prefetched brand-new documents |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
CB | Opposition filed |
Opponent name: SENSIS PTY LTD |
|
CH | Opposition withdrawn |
Opponent name: SENSIS PTY LTD |
|
FGA | Letters patent sealed or granted (standard patent) | ||
TH | Corrigenda |
Free format text: IN VOL 24 , NO 21 , PAGE(S) 2414 UNDER THE HEADING APPLICATIONS ACCEPTED - NAME INDEX UNDER THE NAME GOOGLE INC., APPLICATION NO. 2005267394, UNDER INID (22) CORRECT THE DATE TO READ 17 JUNE 2005 |
|
HB | Alteration of name in register |
Owner name: GOOGLE LLCFree format text: FORMER NAME(S): GOOGLE, INC. |
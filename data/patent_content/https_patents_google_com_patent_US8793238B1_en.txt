US8793238B1 - Organization system for ad campaigns - Google Patents
Organization system for ad campaigns Download PDFInfo
- Publication number
- US8793238B1 US8793238B1 US13/759,356 US201313759356A US8793238B1 US 8793238 B1 US8793238 B1 US 8793238B1 US 201313759356 A US201313759356 A US 201313759356A US 8793238 B1 US8793238 B1 US 8793238B1
- Authority
- US
- United States
- Prior art keywords
- keywords
- selection criteria
- pairs
- keyword
- cluster
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
- G06F16/355—Class or cluster creation or modification
Definitions
- This document generally relates to information management.
- On-line advertisements allow advertisers to reach a wide range of viewers through the Internet.
- the selection of ads for presentation e.g., display), such as with search results and other information, and the ordering of those advertisements, may be achieved by various techniques.
- an initial determination is made to identify all advertisements that are a match or near match for applied search terms or other query items or information.
- the match may be made, for example, between one or more words in a query, and keywords identified by an advertiser and associated with a particular advertisement or group of advertisements, such as a campaign.
- a company selling fishing tackle may have a line of large lures, and may thus identify terms such as “lunker,” “sturgeon,” and “muskie fever” as keywords to associate with their advertisements for such large lures.
- Those advertisements may then be considered by the system for display when search results are displayed to a user who enters such terms.
- An advertisement may be selected for possible display if there is a “near” match also, for example, if a query includes terms that are known synonyms or mistypings/misspellings of the keyword terms for an advertisement.
- Some sponsors of the advertisements may associate several (e.g., dozens or hundreds) keywords with each of the advertisements.
- an automatic account organization tool to organize keywords in large ad campaigns.
- an automatic account organization tool is provided to receive an input list of keywords and output keywords that are organized into adgroups with semantically meaningful names.
- a single link hierarchical agglomerative clustering (HAC) algorithm can be applied to the list of pairs of keywords to form single link clusters where each keyword is linked to another keyword if the two keywords belong to a pair and the distance between the two keywords is less than a threshold.
- a complete link HAC algorithm can be applied to each of the single link clusters, in which the distance of all pairs within the cluster is calculated and a keyword remains in the cluster when its distance to every other keyword in that cluster is less than a threshold. Otherwise, the keyword can be removed from the original single link cluster and added to another cluster or used to start a new cluster.
- An ad group name can be generated for each cluster.
- Each of the final clusters can include semantically related keywords that can be associated with an individual ad group.
- a set of input keywords is received; semantically related pairs of keywords are identified from the set of input keywords; and hierarchical clustering is applied to the pairs of keywords to identify a set of clusters of keywords, each cluster having semantically related keywords.
- Implementations may include one or more of the following features.
- the set of input keywords can be grouped based on common classifications to form groups of keywords. Identifying semantically related pairs of keywords can include identifying semantically related pairs of keywords within each group of keywords. Duplicate pairs of keywords can be removed.
- Grouping the set of input keywords based on common classifications can include grouping the plurality of keywords based on predetermined classifications specified in a semantic database. Grouping the plurality of keywords based on predetermined classifications specified in a semantic database can include, for each of the keywords, identifying one or more classifications in the semantic database that are associated with the keyword. Grouping the plurality of keywords based on predetermined classifications can include, for each of the identified classifications, identifying keywords that are associated with the classifications.
- Applying the complete link hierarchical clustering to the keywords in the intermediate cluster can include determining a semantic distance for every pair of keywords in the intermediate cluster. Applying the complete link hierarchical clustering can include removing a keyword from an intermediate cluster if the semantic distance between the keyword and any other keyword in the intermediate cluster is above a threshold. Applying the complete link hierarchical clustering to the intermediate clusters can be performed in parallel.
- a name can be identified for each of the clusters.
- a plurality of keywords are received; semantic distances of selected pairs of keywords are determined, the selected pairs being less than all pairs of keywords; intermediate clusters of keywords are formed by clustering the keywords based on the pairing relationships of the keywords; semantic distances of all pairs of keywords within each intermediate cluster are determined; and final clusters of keywords are formed by clustering the keywords within each intermediate cluster based on the semantic distances of the keywords.
- Implementations may include one or more of the following features.
- the plurality of keywords can be grouped based on common classifications and pairs of keywords that are associated with the same group are selected. Grouping the plurality of keywords based on common classifications can include grouping the plurality of keywords based on predetermined classifications specified in a semantic database. Forming intermediate clusters of keywords by clustering the keywords based on the pairing relationships of the keywords can include applying single link hierarchical clustering to the selected pairs of keywords. Forming clusters of keywords can include applying complete link hierarchical clustering to the keywords within each intermediate cluster. A name can be identified for each of the clusters.
- a semantic database has information about common classifications of keywords; a pairing engine identifies semantically related pairs of keywords from a set of input keywords; and a hierarchical clustering engine applies hierarchical clustering to the pairs of keywords to generate a clusters of keywords.
- a semantic database server can query the semantic database to provide information about which common classifications are associated with a given keyword, and scores indicating strengths of associations between the keyword and the common classifications.
- the pairing engine can include a classifier to group the input keywords into initial groups of keywords, each initial group being associated with one of the common classifications.
- the pairing engine can include a filter to remove pairs of keywords in which the semantic distance between the keywords of each pair is greater than a threshold.
- the pairing engine can include a sorter to sort the pairs of keywords in a sequence according to semantic distances of the keyword pairs.
- the hierarchical clustering engine can include a single link hierarchical agglomerative clustering engine to cluster the keywords based on single link hierarchical agglomerative clustering.
- the hierarchical clustering engine can include a complete link hierarchical agglomerative clustering engine to cluster the keywords based on complete link hierarchical agglomerative clustering.
- a naming engine can generate a name for each cluster of keywords generated by the hierarchical clustering engine.
- an apparatus in another aspect, includes means for storing information about common classifications of keywords; means for identifying semantically related pairs of keywords from a set of input keywords; and means for applying hierarchical clustering to the pairs of keywords to generate a clusters of keywords.
- Performance of a large ad campaign can be improved by forming groups of keywords that are semantically related.
- On-line ads can be targeted more accurately based on matching between ad keywords and contents of web documents.
- Ads can be shown to people who feel that the ads are relevant to the information that they are looking for.
- Ad click-through rates and conversion rates can be improved.
- Users' on-line experiences can be improved. More ad revenue can be generated for advertisers and publishers.
- a large number of ad campaigns can be analyzed and improved efficiently.
- FIG. 2A is a block diagram of an example ad campaign organization server.
- FIG. 2B is a diagram showing processing of keywords in various stages.
- FIG. 3 is a flow diagram of an example process for clustering keywords of an ad group.
- FIG. 4 is an example table showing a relationship between keywords and topic clusters.
- FIG. 5 is a block diagram showing examples of intermediary clusters and final clusters.
- FIGS. 6 and 7 are flow diagrams of example processes for identifying clusters of keywords.
- FIG. 1 is a schematic diagram of an example information retrieval system 100 for retrieving and displaying information, such as web documents, that match search queries submitted by users 102 .
- the system 100 may deliver ads 108 along with the documents, in which the ads 108 match the content of the documents.
- the system 100 provides suggestions to advertisers 104 (sponsors of the ads) on structures of ad campaigns 106 hosted on an ad server 110 .
- an ad campaign 106 is initially associated with a group of keywords such that ads 108 of the campaign 106 are delivered when contents of documents match those keywords.
- the system 100 analyzes the group of keywords and may group them into two or more clusters each having a smaller number of keywords such that the keywords within a cluster have a higher level of semantic similarity to one another than the original larger group.
- the advertisers 104 can also set up the ad campaigns 106 such that each ad campaign 106 is initially associated with a group of keywords, and the system 100 delivers the ads 108 of the campaign 106 when search queries match those keywords.
- the system 100 delivers the ads 108 of the campaign 106 when search queries match those keywords.
- keyword can mean one or more words, such as phrases. Each phrase can include two or more words. For example, when an ad is associated with “car” and “hybrid vehicle”, each of “car” and “hybrid vehicle” is referred to as a keyword associated with the ad.
- search keyword can mean one or more words in a search query. When a user submits a search query looking for information about “pie” and “apple sauce”, each of “pie” and “apple sauce” is referred to as a search keyword in the search query.
- the ad server 110 stores information about the ad campaigns 106 .
- Each ad campaign 106 can include one or more ad groups, and each ad group can include one or more ads that are targeted to a group of keywords or websites.
- the ad campaign 106 includes metadata associated with the one or more ads.
- the metadata includes, for example, a group of keywords and information about budgets for ads, geographical locations for targeting the ads, languages for targeting the ads, web sites for targeting the ads, and end dates for the ads, etc.
- the system 100 includes an ad campaign organization server 120 that analyzes the ad campaign 106 and provides suggestions on grouping of the keywords in the ad campaign 106 .
- the ad campaign organization server 120 Upon receiving a request to optimize the ad campaign 106 , the ad campaign organization server 120 analyzes the group of keywords associated with the ad campaign 106 and, if feasible, groups the keywords into two or more clusters that are more focused than the original group.
- the ad campaign organization server 120 also provides names for each of the clusters so that it is easier for the advertisers to identify the clusters. If the ad campaign 106 is already optimized, then no further grouping of the keywords is necessary.
- the ad campaign may not perform well when on-line ads are selected based on a comparison of the ad keywords and on-line content. This is because for a large adgroup spanning multiple subjects, there may not be a good fit for any web page, so the adgroup may receive few impressions and less clicks. Larger adgroups also tend to have more general creatives that are less well targeted and have poorer performance.
- the advertisers 104 can use the information about the clusters of keywords to improve the ad campaign 106 .
- the advertiser 104 can accept the suggestions from the sever 120 regarding the clusters of keywords, upon which the server 120 automatically restructures the advertiser's ad campaign 106 to generate multiple smaller ad campaigns each associated with a smaller cluster of more closely related keywords.
- the advertiser 104 can further manually refine the grouping of keywords. Because the clusters of keywords have more focused themes than the original group, the matching of ads with documents or search queries can be improved, users 102 can receive more relevant ads, the conversion rates of the ads 108 can improve, and the advertisers 104 and publishers of web documents that include the ads 108 can receive more ad revenue.
- the network 118 can be a local area network (LAN), a wide area network (WAN), the Internet, any other type of network, or any combination of types of networks.
- LAN local area network
- WAN wide area network
- Internet any other type of network, or any combination of types of networks.
- the components of the ad campaign organization server 120 can include several elements for pairing keywords and creating clusters.
- the pairing engine 124 includes a classifier 202 , a filter 204 , and a sorter 206 .
- the hierarchical clustering engine 126 includes a single link hierarchical agglomerative clustering (HAC) engine 208 , a complete link HAC engine 210 , and a clusters database 212 .
- the server 120 also includes a naming engine 214 to generate meaningful names for the final clusters of keywords.
- the ad campaign organization server 120 identifies clusters of keywords that are semantically related.
- One method is to compute the semantic distance of every pair of keyword, then group the keywords into clusters such that the semantic distance between every two keywords in a cluster is below a threshold value. Determining the semantic distance of every pair of keyword requires a large amount of computation.
- the classifier 202 classifies keywords 220 from an ad campaign into categories based on topic clusters predefined in the semantic database 130 . All the topic clusters that are associated with any one of the keywords are identified. The ad keywords that are associated with each topic cluster are grouped together as an initial cluster 222 .
- the 1,000 keywords are divided into 3 initial clusters 222 , each having 300, 400, 500 keywords, respectively (note that some keywords may belong to more than one initial cluster 222 ).
- the total number of keywords is 249,400, which is much less than the number of keyword pairs for a group of 1,000 keywords.
- a keyword can be associated with several topic clusters, so the same keyword pair may appear in different initial clusters 222 , resulting in duplicate keyword pairs in the group of keyword pairs. For example, if keywords X1 and X2 are both associated with topic clusters 2 and 5, both the first and second initial clusters 222 have the keyword pair (X1, X2), resulting in at least two entries of keyword pair (X1, X2) in the group of keyword pairs.
- the filter 204 is used to remove such duplicate keyword pairs.
- the pairing engine 124 determines a semantic distance for each pair of keywords in the group of keyword pairs.
- the semantic distance of a pair of keywords refers to the semantic distance between the two keywords of the pair.
- the semantic distance can be determined by, for example, querying the semantic database sever 132 .
- the filter 204 removes keyword pairs that have low correlations (high semantic distances) in which the pairing is not considered to be useful. For example, keyword pairs whose semantic distances are above a threshold value are removed.
- the sorter 206 sorts the keyword pairs in the group of keyword pairs according to their semantic distances to generate a sorted list of keyword pairs 226 .
- the keyword pairs can be sorted so that the keyword pairs having smaller semantic distances are placed earlier in the list 226 than those having larger semantic distances.
- the output of the pairing engine 124 is a list of keyword pairs 226 sorted according to semantic distance. Duplicate keyword pairs have been removed by the filter 204 . Also, because the filter 204 removes keyword pairs having semantic distances above the threshold value, the output list of keyword pairs 226 are all semantically related to a certain degree.
- the single link HAC engine 208 receives the list of keyword pairs 226 that are sorted according to semantic distance and have semantic distances below a threshold.
- the first keyword pair in the list 226 has the shortest semantic distance.
- the single link HAC engine 208 can adopt a “bottom-up” approach by starting a new cluster 228 using the first keyword pair and adding related keywords to the cluster 228 .
- the first keyword pair is removed from the list 226 after the keywords of the pair are placed in a cluster 228 . For example, suppose the first keyword pair is (X1, X2), then the keywords X1 and X2 are placed in the first cluster 228 , and the keyword pair (X1, X2) is removed from the list 226 .
- the single link HAC engine 208 repeats the process above and starts a second cluster 228 using the first keyword pair from the list of keywords 226 (note that the keywords in the first cluster 228 have already been removed from the list 226 ). Additional keywords are added to the second cluster 228 if they have pairing relationships with the keywords already in the second cluster 228 . After reviewing the entire list of keyword pairs 226 , the single link HAC engine 208 repeats the process above and starts a third cluster 228 , etc., until all of the keywords have been placed into one of the clusters 228 .
- the clusters of keywords 228 formed by the single link HAC engine 208 are referred to as “intermediate clusters” because they are further processed by the complete link HAC engine 210 to form the final clusters 230 .
- the final clusters 230 are the semantic clusters generated by the ad campaign organization server 120 .
- the intermediate clusters 228 have a property such that every keyword is closely related to at least one other keyword in the intermediate cluster 228 so that the pair of keywords have a similarity above a threshold (a semantic distance below a threshold).
- each intermediate cluster 228 is established based on relationships between pairs of keywords, there may be some keywords in which the semantic distances among the keywords are higher than a threshold. For example, when keywords X1 and X2 are highly related, and keywords X2 and X5 are highly related, the keywords X1 and X5 may not necessarily be highly related.
- the complete link HAC engine 210 is used to evaluate “global” relationships among the keywords within a cluster (as opposed to pairing relationships within the cluster) and remove keywords from a cluster if the keywords are not closely related to all of the other keywords in the cluster.
- the complete link HAC engine 210 processes the intermediate clusters 228 formed by the single link HAC engine 208 . For each intermediate cluster 228 , the engine 210 determines the semantic distances of every pair of keywords in the intermediate cluster 228 . The keyword pairs are sorted according to semantic distance. The complete link HAC engine 210 examines each pair of keywords within an intermediate cluster 228 , starting from the keyword pair having smallest semantic distance. If the engine 210 finds a keyword pair whose semantic distance is above a threshold, one of the keywords in the pair is removed from the cluster (assuming the other keyword of the pair is semantically closer to the other keywords). The keyword being removed is either used to form a new final cluster 230 or placed in another final cluster 230 such that the semantic distances between that keyword and the keywords of the other final cluster 230 are all below a threshold.
- the intermediate clusters 228 formed by the single link HAC engine 208 may each be divided into two or more final clusters 230 such that no two keywords within a final cluster 230 have semantic distances above a threshold.
- every keyword in the final cluster 230 formed by the complete link HAC engine 210 is closely related (to a certain degree) to all the other keywords within the final cluster 230 .
- the clusters database 212 stores intermediate clusters 228 generated by the single link HAC engine 208 and the final clusters 230 generated by the complete link HAC engine 210 .
- the single link HAC engine 208 may store its output intermediate clusters 228 in the clusters database 212 .
- the complete link HAC engine 210 may retrieve the intermediate clusters 228 from the clusters database 212 , and, after processing, store the final clusters 230 in the clusters database 212 .
- the clusters database 212 may represent clusters of keywords using, for example, tables, linked lists, and ordered pairs, etc.
- the naming engine 214 generates a name 232 for each of the final clusters 230 .
- the names can be meaningful words or phrases that are representative of the clusters. This allows users to easily refer to the clusters 230 by their names 232 .
- an example process 300 can be used to identify semantic clusters of keywords that are associated with ad campaigns 106 .
- Each of the semantic clusters produced by the process 300 can have a smaller number of keywords that are more closely related than the original set of keywords.
- the process 300 can be implemented using the ad campaign organization server 120 .
- FIGS. 4 and 5 To illustrate how keywords are clustered according to the process 300 , an example is provided in FIGS. 4 and 5 in which 20 keywords are grouped into 6 final clusters. In this example, the keywords are associated with ten topic clusters in the semantic database 130 .
- row 408 for keyword 1 includes “x” marks in the columns corresponding to topic clusters 1, 5 and 10, indicating that keyword 1 is associated with the topic clusters 1, 5 and 10.
- row 410 for keyword 2 includes “x” marks in the columns corresponding to topic clusters 1, 3, 6 and 10, indicating that keyword 2 is associated with the topic clusters 1, 3, 6 and 10.
- Columns in the topic cluster table 402 show the keywords that are associated with a particular topic cluster 406 .
- column 414 shows that keywords 1, 2, 5 and 15 are associated with topic cluster 1.
- column 416 shows that keywords 3, 7, 10 and 17 are associated with topic cluster 2.
- the process 300 identifies the topic clusters associated with each of the keywords and the activation scores associated with the topic clusters ( 302 ).
- the topic clusters associated with each of the keywords can be identified using the classifier 202 .
- each row in table 402 shows the topic clusters 406 associated with a keyword in the left-most column of table 402 .
- keyword 1 is associated with topic clusters 1, 5, and 10.
- Each of topic clusters 1, 5, and 10 has an associated activation score (not shown in the figure) with respect to keyword 1.
- Keyword 2 is associated with topic clusters 1, 3, 6, and 10.
- Keyword 3 is associated with topic cluster 2.
- Keyword 4 is associated with topic clusters 4 and 10.
- Keyword 5 is associated with topic clusters 1 and 4.
- Keyword 6 is associated with topic cluster 4.
- Keyword 7 is associated with topic clusters 2 and 8.
- Keyword 8 is associated with topic clusters 7, 9, and 10.
- Keyword 9 is associated with topic cluster 7.
- Keyword 10 is associated with topic clusters 2 and 8. Keyword 11 is associated with topic cluster 10. Keyword 12 is associated with topic cluster 8. Keyword 13 is associated with topic cluster 9. Keyword 14 is associated with topic cluster 7. Keyword 15 is associated with topic cluster 1. Keyword 16 is associated with topic cluster 6. Keyword 17 is associated with topic cluster 2. Keyword 18 is associated with topic cluster 4. Keyword 19 is associated with topic cluster 5. Keyword 20 is associated with topic cluster 3.
- the process 300 generates a reverse mapping of the topic clusters 406 to the keywords 404 associated with each topic cluster ( 304 ).
- the reverse mapping can be performed using the classifier 202 .
- Each column in table 402 shows the keywords associated with a topic cluster 406 in the upper-most row of table 402 .
- topic cluster 1 is associated with keywords 1, 2, 5, and 15.
- Topic cluster 2 is associated with keywords 3, 7, 10, and 17.
- Topic cluster 3 is associated with keywords 2 and 20.
- Topic cluster 4 is associated with keywords 4, 5, 6, and 18.
- Topic cluster 5 is associated with keywords 1 and 19.
- Topic cluster 6 is associated with keywords 2 and 16.
- Topic cluster 7 is associated with keywords 8, 9, and 14.
- Topic cluster 8 is associated with keywords 7, 10, and 12.
- Topic cluster 9 is associated with keywords 8 and 13.
- Topic cluster 10 is associated with keywords 1, 2, 4, 8, and 11.
- the process 300 identifies all pairs of keywords within the topic cluster ( 306 ). For example, for topic cluster 1, keyword pairs (1, 2), (1, 5), (1, 15), (2, 5), (2, 15), and (5, 15) are identified. In this document, the keyword pair (keyword i, keyword j) will simply be referred to as (i, j). For topic cluster 2, keyword pairs (3, 7), (3, 10), (3, 17), (7, 10), (7, 17) and (10, 17) are identified. For topic cluster 3, keyword pair (2, 20) is identified. For topic cluster 4, keyword pairs (4, 5), (4, 6), (4, 18), (5, 6), (5, 18) and (6, 18) are identified. For topic cluster 5, keyword pair (1, 19) is identified.
- keyword pair (2, 16) is identified.
- keyword pairs (8, 9), (8, 14) and (9, 14) are identified.
- keyword pairs (7, 10), (7, 12) and (10, 12) are identified.
- keyword pair (8, 13) is identified.
- keyword pairs (1, 2), (1, 4), (1, 8), (1, 11), (2, 4), (2, 8), (2, 11), (4, 8), (4, 11) and (8, 11) are identified.
- the process 300 removes the duplicate keyword pairs ( 307 ).
- the duplicate keyword pairs can be removed using the filter 204 .
- the same pair of keywords can be associated with multiple topic clusters. This results in duplicate keyword pairs.
- the keyword pair (1, 2) is associated with both topic clusters 1 and 10, so the keyword pair (1, 2) appears twice.
- the forward mapping from keywords to topic clusters can assist in removing such duplicates.
- keyword pair (1, 2) appears in topic cluster 1. Because keyword 1 is associated with topic clusters 5 and 10, the topic clusters associated with keyword 2 are also examined to see if they include topic clusters 5 and 10. In this example, topic cluster 10 is also associated with keyword 2, so the filter 204 knows that there is a duplicate keyword pair (1, 2) associated with topic cluster 10.
- the duplicate keyword pair (1, 2) is removed from the group of keyword pairs associated with topic cluster 10.
- the process 300 determines the semantic distances of the keyword pairs, and removes keyword pairs having semantic distances larger than a threshold (thereby removing keyword pairs that are dissimilar) ( 308 ). For example, the keyword pairs having semantic distances larger than a threshold can be removed by the filter 204 . Removing duplicate keyword pairs in step 307 and removing keyword pairs having semantic distances below a threshold can reduce the number of computations required in subsequent steps.
- the semantic distance between two keywords can be determined by calculating an inverse of a dot product between the cluster vectors associated with the two keywords. For example, suppose a first keyword is associated with topic clusters A, B, and C with activation scores 0.25, 0.45, and 0.66 respectively, and a second keyword is associated with topic clusters A, B, and D with activation scores 0.3, 0.09, and 0.2 respectively.
- a similarity score of two keywords can be represented as a dot product of the cluster vectors:
- the activation scores can be made more linear by using a “squashing” process before computing the dot product so that the similarity score or the semantic distance value is not dominated by an activation score that is significantly larger than the other scores.
- the similarity score can be computed using the dot product of the cluster vectors' squashed activation scores:
- the activation scores for topic clusters 1, 5, and 10 associated with keyword 1 are 0.4, 1.2, and 0.3, respectively.
- the squashed activation scores for topic clusters 1, 5, and 10 are 0.8, 1.029, and 0.78, respectively.
- the activation scores for topic clusters 1, 3, 6, and 10 associated with keyword 2 are 0.2, 0.4, 0.25, and 1000, respectively.
- the squashed activation scores for topic clusters 1, 3, 6, and 10 are 0.6, 0.8, 0.667, and 1.2, respectively.
- the contribution of the topic cluster 1 is insignificant compared to the contribution of the topic cluster 10.
- Topic cluster 10 has a larger influence than topic cluster 1, but the influence of topic cluster 10 is not so large as to eclipse the contribution of topic cluster 1.
- equations 2, 4, and 5 can be used to calculate the semantic distances among keywords.
- a vector's squashed activation score can be subtracted from the similarity score.
- the dot product of the activation scores (or squashed activation scores) for that topic cluster will make a positive contribution to the similarity score.
- the activation score (or squashed activation score) for that topic cluster will make a negative contribution to the similarity score.
- the squashed activation scores for topic clusters 1, 5, and 10 are 0.8, 1.029, and 0.78, respectively.
- the squashed activation scores for topic clusters 1, 3, 6, and 10 are 0.6, 0.8, 0.667, and 1.2, respectively. Because topic cluster 5 is associated with keyword 1 but not with keyword 2, and topic clusters 3 and 6 are associated with keyword 2 but not with keyword 1, the squashed activation scores for the topic clusters 5, 3, and 6 can be subtracted from the similarity score.
- the process 300 removes these keyword pairs. Eliminating keyword pairs that are dissimilar can reduce the computations required for subsequent steps.
- the process 300 sorts the keyword pairs according to semantic distance ( 310 ). For example, the keyword pairs can be sorted so that the keyword pair having the shortest distance is placed first in the sequence.
- the keyword pairs can be sorted by the sorter 206 . In this example, it is assumed that the keyword pairs are sorted in a sequence:
- the process 300 applies a single link HAC algorithm to the sorted keyword pairs to form intermediate clusters ( 312 ).
- the single link HAC algorithm generates intermediate clusters based on pairing relationships between keywords. Intermediate clusters are formed by starting with the keywords in the keyword pair having the smallest distance.
- a keyword Xi is added to the intermediate cluster if the keyword Xi and at least one other keyword Xj already in the intermediate cluster have previously been identified as a keyword pair (Xi, Xj).
- a distance threshold e.g., semantic distance
- semantic distance can be used so that for a new keyword to be added to the intermediate cluster, the semantic distance of the new keyword and its paired keyword has to be below a threshold.
- the process 300 After all the keywords have been examined, and no additional keywords can be added to the first intermediate cluster 502 , the process 300 generates a new intermediate cluster 504 by using a pair of keywords having the smallest semantic distance that have not already been placed in previous intermediate clusters (e.g., 502 ), and repeats the process described above.
- the process 300 by clustering keywords that have pairing relationships, the process 300 generates a first intermediate cluster 502 and a second intermediate cluster 504 :
- First intermediate cluster 502 ⁇ 1, 2, 4, 5, 6, 15, 16, 18, 19, 20 ⁇ .
- Second intermediate cluster 504 ⁇ 3, 7, 8, 9, 10, 11, 12, 13, 14, 17 ⁇ .
- the single link HAC engine 208 can be used to apply the single link HAC algorithm to the sorted sequence of keyword pairs.
- the output of the single link HAC engine 208 can include intermediate cluster IDs and a set of keywords associated with each intermediate cluster.
- the intermediate clusters can each include keywords that are more semantically related than the original set of keywords associated with the ad campaign.
- the process 300 applies a complete link HAC algorithm to the intermediate clusters ( 314 ). For each intermediate cluster, the semantic distances for all pairs within the intermediate cluster are calculated. For a keyword to remain in the cluster, the distance between the keyword and every other keyword in the cluster has to be less than a specified threshold.
- the complete link HAC engine 210 can be used to apply the complete link HAC algorithm to the keywords in the intermediate clusters to generate the final clusters.
- Each final cluster includes keywords that can be more semantically related than the keywords in the intermediate clusters.
- the complete link HAC algorithm can be applied in parallel to various intermediate clusters (e.g., intermediate clusters 502 and 504 ).
- intermediate clusters 502 and 504 When there is a large number of keywords, parallel processing can significantly reduce the amount of computation time for clustering the keywords.
- the process 300 generates an ad group name for each cluster that is output by the complete link HAC algorithm ( 316 ). This allows users to refer to the final clusters of keywords with semantically meaningful names. For example, rather than saying “keywords in ad group 001” or “keywords in ad group 002”, a user can say “keywords in ad group ‘home insurance’ and keywords in ad group “auto insurance’”, etc.
- the ad group name for a particular cluster can be based on one or more of the keywords that are included in the particular cluster.
- two or more ad group can have similar names that include different numbers appended to identical keywords (e.g., “home insurance 1” and “home insurance 2”).
- naming ad groups can involve the use of a classifier that, for a given keyword, returns a vector of classes and associated confidence scores.
- the classes can be hierarchical so that a more general class (e.g., “electronics”) can include more specific sub-classes (e.g., “digital cameras”).
- Classes can be constructed using a combination of automated and manual processes. For example, an operator who is familiar with a large ad group may make manual changes to classes, such as to change the hierarchies of classes, or to add and remove classes.
- a keyword “pixel resolution” can be associated with classes “consumer products”, “electronics”, “cameras”, “digital cameras”, “point-and-shoot digital cameras”, etc.
- the classes associated with the keywords are taken into account when determining a general classification, and keywords associated with the general classification can be used as the adgroup name.
- the ad campaign organization server 120 allows users to manually adjust the final clusters determined by the server and the names assigned to each adgroup.
- the following describes an example process for classifying a set of keywords of a large adgroup into of smaller clusters each having keywords that are more semantically related than the original set of keywords.
- the process 600 identifies semantically related pairs of keywords from the set of input keywords ( 604 ).
- the pairing of keywords can be performed by the pairing engine 124 .
- the pairing of keywords can rely on semantic relationships that are defined using, for example, the semantic database 130 .
- identifying semantically related pairs of keywords can include grouping the input keywords based on common classifications, resulting in several groups of keywords in which each group includes keywords associated with a particular common classification ( 606 ).
- the common classifications can be the topic clusters predefined in the semantic database 130 .
- the grouping can be performed by the classifier 202 , which can access the semantic database 130 to obtain the common classifications used for categorizing keywords.
- Semantically related pairs of keywords can be identified within each group of keywords ( 608 ). For example, all the pairs of keywords within each group identified in step 606 are identified. Duplicate pairs of keywords can be removed ( 610 ). For example, the filter 204 can remove duplicate keyword pairs.
- the process 600 determines a semantic distance for each pair of keywords, and the pairs of keywords are sorted according to the semantic distances ( 612 ). For example, semantic distance of two keywords can be determined using a dot product of cluster vectors associated with the keywords. The cluster vectors can be obtained by querying the semantic database 130 . The sorter 206 can be used to sort the keyword pairs.
- the process 600 applies hierarchical clustering to the pairs of keywords to identify a set of clusters of keywords, each cluster having semantically related keywords ( 614 ).
- the clustering can be performed by the hierarchical clustering engine 126 to cluster keyword pairs produced by the pairing engine 124 .
- a complete link hierarchical clustering can be applied to the keywords in each of the intermediate clusters to generate one or more clusters of keywords for each intermediate cluster ( 618 ).
- the complete link HAC engine 210 can generate final clusters 506 a to 506 c from the first intermediate cluster 502 , and generate final clusters 508 a to 508 c from the second intermediate cluster 504 .
- the process 600 identifies a name for each of the final clusters ( 620 ).
- the naming engine 214 can be used to identify a semantically meaningful name for each final cluster produced by the complete link HAC engine 210 .
- the following describes an example process for identifying clusters of keywords from an input set of keywords.
- an example cluster identification process 700 can form clusters of keywords from an input set of keywords so that each cluster includes keywords that have higher semantic similarity than the original set of keywords. Initially, a plurality of keywords is received ( 702 ).
- the process 700 determines semantic distances of selected pairs of keywords, the selected pairs being less than all pairs of keywords. Keywords are grouped based on common classifications, and pairs of keywords that are associated with the same group are selected ( 704 ). For example, the keywords can be grouped based on predetermined classifications specified in a semantic database ( 708 ). Two keywords that do not belong to the same classification are not identified as a pair, so the selected keyword pairs identified in step 704 can be less than all pairs of keywords.
- the process 700 forms intermediate clusters of keywords by clustering the keywords based on the pairing relationships of the keywords ( 710 ).
- the single link HAC engine 208 can apply a single link HAC algorithm to the selected pairs of keywords to form intermediate clusters of keywords ( 712 ).
- the intermediate clusters can be the intermediate clusters 502 and 504 of FIG. 5 .
- the process 700 determines the semantic distances of all pairs of keywords within each intermediate cluster ( 714 ).
- the process 700 forms final clusters of keywords by clustering the keywords within each intermediate cluster based on the semantic distances of the keywords ( 716 ).
- the complete link HAC engine 210 can apply a complete link HAC algorithm to each intermediate cluster of keywords to form final clusters ( 718 ).
- the final clusters can be the final clusters 506 a to 506 c and 508 a to 508 c of FIG. 5 .
- FIG. 8 shows an example of a list of ad keywords 730 that are associated with an ad campaign.
- FIG. 9 shows an example of final clusters 740 of the keywords generated by using the ad campaign organization server 120 .
- one of the processes 300 , 600 , and 700 can be used in forming the clusters.
- FIG. 10 is a schematic representation of a general computing system 800 that can be used to implement the system 100 or components of the system 100 .
- Computing device 800 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 800 includes a processor 802 , memory 804 , a storage device 806 , a high-speed interface 808 connecting to memory 804 and high-speed expansion ports 810 , and a low speed interface 812 connecting to low speed bus 814 and storage device 806 .
- Each of the components 802 , 804 , 806 , 808 , 810 , and 812 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 802 can process instructions for execution within the computing device 800 , including instructions stored in the memory 804 or on the storage device 806 to display graphical information for a GUI on an external input/output device, such as display 816 coupled to high speed interface 808 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 800 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the storage device 806 is capable of providing mass storage for the computing device 800 .
- the storage device 806 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 804 , the storage device 806 , memory on processor 802 , or a propagated signal.
- the high speed controller 808 manages bandwidth-intensive operations for the computing device 800 , while the low speed controller 812 manages lower bandwidth-intensive operations.
- the high-speed controller 808 is coupled to memory 804 , display 816 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 810 , which may accept various expansion cards (not shown).
- low-speed controller 812 is coupled to storage device 806 and low-speed expansion port 814 .
- the computing device 800 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 820 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 824 . In addition, it may be implemented in a personal computer such as a laptop computer 822 . Each of such devices (e.g., standard server, rack server system, personal computer, laptop computer) may contain one or more of computing device 800 , and an entire system may be made up of multiple computing devices 800 communicating with each other.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse, trackball, touch-sensitive screen, or iDrive-like component) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse, trackball, touch-sensitive screen, or iDrive-like component
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- various methods can be used to categorize keywords into the topic clusters in the semantic database 130 .
- the pairing engine 124 can use methods other than those described above.
- keywords that correspond to products or services that share common qualities, concepts or other attributes can be categorized in the same topic cluster.
- Different types of categorization groupings can be used, such as type, attribute/schema, broad concept, genre/style, etc.
- “Function/need” grouping can group items by function or need to generate some of the topic clusters. For example, items in a “cameras” group may allow a person to take photographs, and items in a “dental care” group may provide for tooth and dental hygiene needs. Function/need grouping can provide useful grouping, for instance, for online shopping and browsing.
- attribute/schema grouping items by attributes can further categorize items within in a particular category by using quantitative attributes to generate some of the topic clusters. For example, attribute/schema grouping in a “cars” category can sub-categorize the cars by make, model, year and environmental scores (e.g., hybrids, fuel efficiency, etc.). By comparison, attribute/schema grouping in a “digital cameras” category can sub-categorize the cameras by price, mega-pixels or other quantitative features. Attributes can also be used to group things in other ways, such as a “fan merchandise” category with attributes such as league, team, and city.
- “Broad concept” grouping can group items by concept to generate some of the topic clusters. For example, all items within a particular category can be conceptually related, even though they may not share any attributes, satisfy the same needs, or be used at the same time.
- a “home and garden” category can contain a broad spectrum of products for use in the home
- a “football” category can contain all kinds of football-related paraphernalia.
- Other broad concepts can include: “collectible”, “non-collectible”, “new”, “used”, “B2B”, “consumer”, “accessory”, “product”, “bargains”, “gifts”, etc.
- “Genre/style” grouping can group items by genre or style to generate some of the topic clusters. Such grouping can be used, for example, in media categories where few other high-level qualities are available to distinguish between items. Items within a category can be recognized objectively as being similar in style. For example, genres in a “books” category can include mystery, horror, science fiction, young adult, food, environmental, etc. Genres can also apply to other categories, such as in a “furniture” category (e.g., modern, traditional, etc.).
Abstract
Description
similarity score=g1·g2=c·(0.25·0.3+0.45·0.16)=c·0.147,
where c is a normalization value.
semantic distance=(similarity score)−1=(g1·g2).
where v is a cluster vector associated with the first keyword, w is a cluster vector associated with the second keyword, vi represents the score of topic cluster i associated with the keyword v, and wi represents the score of topic cluster i associated with the keyword w. If two keywords are associated with the same topic cluster i, viwi will have a non-zero contribution to the dot product. A higher v·w means that the keywords v and w are both associated with similar topic clusters, so the two keywords are more similar to each other.
a=1.2*a/(0.2+a). (Equ. 1)
The similarity score can be computed using the dot product of the cluster vectors' squashed activation scores:
where a is a cluster vector associated with the first keyword, b is a cluster vector associated with the second keyword. The similarity score can be further squashed to make the distance metric more linear by using the formula:
similarity score=similarity score/(0.2+similarity score). (Equ. 3)
a=0.2*a/(0.2+a). (Equ. 4)
The semantic distance can be calculated as follows:
semantic distance=1.1−similarity score. (Equ. 5)
In this example,
Claims (17)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/759,356 US8793238B1 (en) | 2007-12-20 | 2013-02-05 | Organization system for ad campaigns |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/962,021 US8180760B1 (en) | 2007-12-20 | 2007-12-20 | Organization system for ad campaigns |
US13/466,344 US8392396B1 (en) | 2007-12-20 | 2012-05-08 | Organization system for ad campaigns |
US13/759,356 US8793238B1 (en) | 2007-12-20 | 2013-02-05 | Organization system for ad campaigns |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/466,344 Continuation US8392396B1 (en) | 2007-12-20 | 2012-05-08 | Organization system for ad campaigns |
Publications (1)
Publication Number | Publication Date |
---|---|
US8793238B1 true US8793238B1 (en) | 2014-07-29 |
Family
ID=46033305
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/962,021 Expired - Fee Related US8180760B1 (en) | 2007-12-20 | 2007-12-20 | Organization system for ad campaigns |
US13/466,344 Active US8392396B1 (en) | 2007-12-20 | 2012-05-08 | Organization system for ad campaigns |
US13/759,356 Active US8793238B1 (en) | 2007-12-20 | 2013-02-05 | Organization system for ad campaigns |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/962,021 Expired - Fee Related US8180760B1 (en) | 2007-12-20 | 2007-12-20 | Organization system for ad campaigns |
US13/466,344 Active US8392396B1 (en) | 2007-12-20 | 2012-05-08 | Organization system for ad campaigns |
Country Status (1)
Country | Link |
---|---|
US (3) | US8180760B1 (en) |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160103916A1 (en) * | 2014-10-10 | 2016-04-14 | Salesforce.Com, Inc. | Systems and methods of de-duplicating similar news feed items |
US10592841B2 (en) | 2014-10-10 | 2020-03-17 | Salesforce.Com, Inc. | Automatic clustering by topic and prioritizing online feed items |
US20200142930A1 (en) * | 2018-11-01 | 2020-05-07 | Google Llc | Machine learning based automatic audience segment in ad targeting |
US20210191995A1 (en) * | 2019-12-23 | 2021-06-24 | 97th Floor | Generating and implementing keyword clusters |
US11941367B2 (en) | 2021-05-29 | 2024-03-26 | International Business Machines Corporation | Question generation by intent prediction |
Families Citing this family (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8707312B1 (en) | 2003-07-03 | 2014-04-22 | Google Inc. | Document reuse in a search engine crawler |
US7725452B1 (en) | 2003-07-03 | 2010-05-25 | Google Inc. | Scheduler for search engine crawler |
US7987172B1 (en) * | 2004-08-30 | 2011-07-26 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US20090248736A1 (en) * | 2008-03-26 | 2009-10-01 | The Go Daddy Group, Inc. | Displaying concept-based targeted advertising |
FR2930061B1 (en) * | 2008-04-10 | 2011-09-30 | Meetgourmet Ltd | METHOD AND DEVICE FOR DISPLAYING A INFORMATION ASSOCIATED WITH ONE OR MORE KEY WORDS ON A COMPUTER SCREEN |
US8671011B1 (en) * | 2008-05-29 | 2014-03-11 | Yodle, Inc. | Methods and apparatus for generating an online marketing campaign |
KR101042901B1 (en) * | 2008-10-09 | 2011-06-21 | 엔에이치엔비즈니스플랫폼 주식회사 | Method, system and computer-readable recording medium for creating keyword pairs for search advertisement based on keyword purchase history |
US8539359B2 (en) | 2009-02-11 | 2013-09-17 | Jeffrey A. Rapaport | Social network driven indexing system for instantly clustering people with concurrent focus on same topic into on-topic chat rooms and/or for generating on-topic search results tailored to user preferences regarding topic |
US8768930B2 (en) * | 2009-10-10 | 2014-07-01 | Oracle International Corporation | Product classification in procurement systems |
US8176067B1 (en) | 2010-02-24 | 2012-05-08 | A9.Com, Inc. | Fixed phrase detection for search |
US8402032B1 (en) | 2010-03-25 | 2013-03-19 | Google Inc. | Generating context-based spell corrections of entity names |
US8719207B2 (en) | 2010-07-27 | 2014-05-06 | Oracle International Corporation | Method and system for providing decision making based on sense and respond |
US20120042263A1 (en) | 2010-08-10 | 2012-02-16 | Seymour Rapaport | Social-topical adaptive networking (stan) system allowing for cooperative inter-coupling with external social networking systems and other content sources |
US8676937B2 (en) * | 2011-05-12 | 2014-03-18 | Jeffrey Alan Rapaport | Social-topical adaptive networking (STAN) system allowing for group based contextual transaction offers and acceptances and hot topic watchdogging |
US8650198B2 (en) * | 2011-08-15 | 2014-02-11 | Lockheed Martin Corporation | Systems and methods for facilitating the gathering of open source intelligence |
US8572107B2 (en) * | 2011-12-09 | 2013-10-29 | International Business Machines Corporation | Identifying inconsistencies in object similarities from multiple information sources |
US9111218B1 (en) | 2011-12-27 | 2015-08-18 | Google Inc. | Method and system for remediating topic drift in near-real-time classification of customer feedback |
CN103020141B (en) * | 2012-11-21 | 2016-06-08 | 北京百度网讯科技有限公司 | It is a kind of for the method and apparatus of Search Results is provided |
US10192238B2 (en) * | 2012-12-21 | 2019-01-29 | Walmart Apollo, Llc | Real-time bidding and advertising content generation |
CN103064947A (en) * | 2012-12-27 | 2013-04-24 | 深圳先进技术研究院 | Object-oriented web page advertisement insertion method and system |
US20140280178A1 (en) * | 2013-03-15 | 2014-09-18 | Citizennet Inc. | Systems and Methods for Labeling Sets of Objects |
US9305307B2 (en) | 2013-07-15 | 2016-04-05 | Google Inc. | Selecting content associated with a collection of entities |
US9454602B2 (en) * | 2013-08-29 | 2016-09-27 | Accenture Global Services Limited | Grouping semantically related natural language specifications of system requirements into clusters |
US9378204B2 (en) * | 2014-05-22 | 2016-06-28 | International Business Machines Corporation | Context based synonym filtering for natural language processing systems |
US10496713B2 (en) | 2017-02-01 | 2019-12-03 | Google Llc | Gain adjustment component for computer network routing infrastructure |
US10789229B2 (en) * | 2017-06-13 | 2020-09-29 | Microsoft Technology Licensing, Llc | Determining a hierarchical concept tree using a large corpus of table values |
US11062142B2 (en) * | 2017-06-29 | 2021-07-13 | Accenture Gobal Solutions Limited | Natural language unification based robotic agent control |
CN107480229B (en) * | 2017-08-03 | 2020-10-30 | 太原学院 | Distributed computer database system for object retrieval and retrieval method thereof |
TWI718374B (en) * | 2018-05-10 | 2021-02-11 | 和碩聯合科技股份有限公司 | Method and system for establishing hierarchy chart of electronic text |
JP2022050011A (en) * | 2020-09-17 | 2022-03-30 | 富士フイルムビジネスイノベーション株式会社 | Information processing device and program |
Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO1997021183A1 (en) | 1995-12-08 | 1997-06-12 | Bell Communications Research, Inc. | Method and system for placing advertisements in a computer network |
US5724521A (en) | 1994-11-03 | 1998-03-03 | Intel Corporation | Method and apparatus for providing electronic advertisements to end users in a consumer best-fit pricing manner |
US5740549A (en) | 1995-06-12 | 1998-04-14 | Pointcast, Inc. | Information and advertising distribution system and method |
US5848397A (en) | 1996-04-19 | 1998-12-08 | Juno Online Services, L.P. | Method and apparatus for scheduling the presentation of messages to computer users |
US5948061A (en) | 1996-10-29 | 1999-09-07 | Double Click, Inc. | Method of delivery, targeting, and measuring advertising over networks |
US6026368A (en) | 1995-07-17 | 2000-02-15 | 24/7 Media, Inc. | On-line interactive system and method for providing content and advertising information to a targeted set of viewers |
US6044376A (en) | 1997-04-24 | 2000-03-28 | Imgis, Inc. | Content stream analysis |
US6078914A (en) | 1996-12-09 | 2000-06-20 | Open Text Corporation | Natural language meta-search system and method |
US6144944A (en) | 1997-04-24 | 2000-11-07 | Imgis, Inc. | Computer system for efficiently selecting and providing information |
US6167382A (en) | 1998-06-01 | 2000-12-26 | F.A.C. Services Group, L.P. | Design and production of print advertising and commercial display materials over the Internet |
US6269361B1 (en) | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
US6401075B1 (en) | 2000-02-14 | 2002-06-04 | Global Network, Inc. | Methods of placing, purchasing and monitoring internet advertising |
US20020152201A1 (en) | 2001-04-17 | 2002-10-17 | International Business Machines Corporation | Mining of generalised disjunctive association rules |
US6523026B1 (en) | 1999-02-08 | 2003-02-18 | Huntsman International Llc | Method for retrieving semantically distant analogies |
US20040186920A1 (en) | 1999-09-28 | 2004-09-23 | Birdwell John D. | Parallel data processing architecture |
US6985882B1 (en) | 1999-02-05 | 2006-01-10 | Directrep, Llc | Method and system for selling and purchasing media advertising over a distributed communication network |
US7039599B2 (en) | 1997-06-16 | 2006-05-02 | Doubleclick Inc. | Method and apparatus for automatic placement of advertising |
US7136875B2 (en) | 2002-09-24 | 2006-11-14 | Google, Inc. | Serving advertisements based on content |
US20070271226A1 (en) | 2006-05-19 | 2007-11-22 | Microsoft Corporation | Annotation by Search |
US20080288328A1 (en) | 2007-05-17 | 2008-11-20 | Bryan Michael Minor | Content advertising performance optimization system and method |
-
2007
- 2007-12-20 US US11/962,021 patent/US8180760B1/en not_active Expired - Fee Related
-
2012
- 2012-05-08 US US13/466,344 patent/US8392396B1/en active Active
-
2013
- 2013-02-05 US US13/759,356 patent/US8793238B1/en active Active
Patent Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5724521A (en) | 1994-11-03 | 1998-03-03 | Intel Corporation | Method and apparatus for providing electronic advertisements to end users in a consumer best-fit pricing manner |
US5740549A (en) | 1995-06-12 | 1998-04-14 | Pointcast, Inc. | Information and advertising distribution system and method |
US6026368A (en) | 1995-07-17 | 2000-02-15 | 24/7 Media, Inc. | On-line interactive system and method for providing content and advertising information to a targeted set of viewers |
WO1997021183A1 (en) | 1995-12-08 | 1997-06-12 | Bell Communications Research, Inc. | Method and system for placing advertisements in a computer network |
US5848397A (en) | 1996-04-19 | 1998-12-08 | Juno Online Services, L.P. | Method and apparatus for scheduling the presentation of messages to computer users |
US5948061A (en) | 1996-10-29 | 1999-09-07 | Double Click, Inc. | Method of delivery, targeting, and measuring advertising over networks |
US6078914A (en) | 1996-12-09 | 2000-06-20 | Open Text Corporation | Natural language meta-search system and method |
US6044376A (en) | 1997-04-24 | 2000-03-28 | Imgis, Inc. | Content stream analysis |
US6144944A (en) | 1997-04-24 | 2000-11-07 | Imgis, Inc. | Computer system for efficiently selecting and providing information |
US7039599B2 (en) | 1997-06-16 | 2006-05-02 | Doubleclick Inc. | Method and apparatus for automatic placement of advertising |
US6167382A (en) | 1998-06-01 | 2000-12-26 | F.A.C. Services Group, L.P. | Design and production of print advertising and commercial display materials over the Internet |
US6985882B1 (en) | 1999-02-05 | 2006-01-10 | Directrep, Llc | Method and system for selling and purchasing media advertising over a distributed communication network |
US6523026B1 (en) | 1999-02-08 | 2003-02-18 | Huntsman International Llc | Method for retrieving semantically distant analogies |
US6269361B1 (en) | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
US20040186920A1 (en) | 1999-09-28 | 2004-09-23 | Birdwell John D. | Parallel data processing architecture |
US6401075B1 (en) | 2000-02-14 | 2002-06-04 | Global Network, Inc. | Methods of placing, purchasing and monitoring internet advertising |
US20020152201A1 (en) | 2001-04-17 | 2002-10-17 | International Business Machines Corporation | Mining of generalised disjunctive association rules |
US7136875B2 (en) | 2002-09-24 | 2006-11-14 | Google, Inc. | Serving advertisements based on content |
US20070271226A1 (en) | 2006-05-19 | 2007-11-22 | Microsoft Corporation | Annotation by Search |
US20080288328A1 (en) | 2007-05-17 | 2008-11-20 | Bryan Michael Minor | Content advertising performance optimization system and method |
Non-Patent Citations (21)
Title |
---|
AdForce, Inc., A Complete Guide to AdForce, Version 2.6, 1998. |
AdForce, Inc., S-1/A SEC Filing, May 6, 1999. |
AdKnowledge Campaign Manager: Reviewer's Guide, AdKnowledge, Aug. 1998. |
AdKnowledge Market Match Planner: Reviewer's Guide, AdKnowledge, May 1998. |
Ad-Star.com website archive from www. Archive.org, Apr. 12, 1997 and Feb. 1, 1997. |
Baseview Products, Inc., AdManagerPro Administration Manual v. 2.0, Dec. 1998. |
Baseview Products, Inc., ClassManagerPro Administration Manual v. 1.0.5, Feb. 1, 1997. |
Business Wire, "Global Network, Inc. Enters Into Agreement in Principle With Major Advertising Agency," Oct. 4, 1999. |
Data complexity in Pattern Recognition, Mitra Basu, 2006, Spring.com-Verlag London, Chapter (11.4.3, pp. 1-3). |
Dedrick, R., A Consumption Model for Targeted Electronic Advertising, Intel Architecture Labs, IEEE, 1995. |
Dedrick, R., Interactive Electronic Advertising, IEEE, 1994. |
Information Access Technologies, Inc., Aaddzz brochure, "The Best Way to Buy and Sell Web Advertising Space," © 1997. |
Information Access Technologies, Inc., Aaddzz.com website archive from www. Archive.org, archived on Jan. 30, 1998. |
McCallum et al. "Efficient Clustering of High-Dimensional Data Sets with Application to Reference Matching" [online] retrieved on Aug. 16, 2011 Retrieved from the Internet electronic mail: http://www.kamalnigam.com/papers/canopy-kdd00.pdf. |
Mitra Basu, Data Complexity in Pattern Recognition, 2006, pp. 223-224. * |
Request for Reexamination of U.S. Patent No. 6,446,045 B1, Control No. 95/001,061. |
Request for Reexamination of U.S. Patent No. 6,829,587 B2, Control No. 95/001,068. |
Request for Reexamination of U.S. Patent No. 7,240,025 B2, Control No. 95/001,073. |
Request for Reexamination of U.S. Patent No. 7,249,059 B2, Control No. 95/001,069. |
The Data Mining and Knowledge Discovery handbook, Oded Maimom, 2005, Springer Science+Business Media, Inc., pp. 330-333). |
Zeff, R. et al., Advertising on the Internet, 2nd Ed., John Wiley & Sons, 1999. |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160103916A1 (en) * | 2014-10-10 | 2016-04-14 | Salesforce.Com, Inc. | Systems and methods of de-duplicating similar news feed items |
US9984166B2 (en) * | 2014-10-10 | 2018-05-29 | Salesforce.Com, Inc. | Systems and methods of de-duplicating similar news feed items |
US10592841B2 (en) | 2014-10-10 | 2020-03-17 | Salesforce.Com, Inc. | Automatic clustering by topic and prioritizing online feed items |
US10783200B2 (en) | 2014-10-10 | 2020-09-22 | Salesforce.Com, Inc. | Systems and methods of de-duplicating similar news feed items |
US20200142930A1 (en) * | 2018-11-01 | 2020-05-07 | Google Llc | Machine learning based automatic audience segment in ad targeting |
US11580170B2 (en) * | 2018-11-01 | 2023-02-14 | Google Llc | Machine learning based automatic audience segment in ad targeting |
US20210191995A1 (en) * | 2019-12-23 | 2021-06-24 | 97th Floor | Generating and implementing keyword clusters |
US11941073B2 (en) * | 2019-12-23 | 2024-03-26 | 97th Floor | Generating and implementing keyword clusters |
US11941367B2 (en) | 2021-05-29 | 2024-03-26 | International Business Machines Corporation | Question generation by intent prediction |
Also Published As
Publication number | Publication date |
---|---|
US8180760B1 (en) | 2012-05-15 |
US8392396B1 (en) | 2013-03-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8793238B1 (en) | Organization system for ad campaigns | |
US9002857B2 (en) | Methods for searching with semantic similarity scores in one or more ontologies | |
US7225184B2 (en) | Disambiguation of search phrases using interpretation clusters | |
US7966225B2 (en) | Method, system, and medium for cluster-based categorization and presentation of item recommendations | |
US9195942B2 (en) | Method and system for mining information based on relationships | |
US8515937B1 (en) | Automated identification and assessment of keywords capable of driving traffic to particular sites | |
US8335753B2 (en) | Domain knowledge-assisted information processing | |
US8560545B2 (en) | Item recommendation system which considers user ratings of item clusters | |
JP4861961B2 (en) | Relevance weighted navigation in information access and retrieval | |
US7483894B2 (en) | Methods and apparatus for entity search | |
US20150310528A1 (en) | Distinguishing accessories from products for ranking search results | |
US8271476B2 (en) | Method of searching text to find user community changes of interest and drug side effect upsurges, and presenting advertisements to users | |
JP5021663B2 (en) | Classify and manage keywords across multiple campaigns | |
US20070214133A1 (en) | Methods for filtering data and filling in missing data using nonlinear inference | |
US20060004732A1 (en) | Search engine methods and systems for generating relevant search results and advertisements | |
US20100235343A1 (en) | Predicting Interestingness of Questions in Community Question Answering | |
US20100094879A1 (en) | Method of detecting and responding to changes in the online community's interests in real time | |
US20090198671A1 (en) | System and method for generating subphrase queries | |
US20090313227A1 (en) | Searching Using Patterns of Usage | |
JP5859606B2 (en) | Ad source and keyword set adaptation in online commerce platforms | |
Xu et al. | Web content mining | |
Leite Dantas Bezerra et al. | Symbolic data analysis tools for recommendation systems | |
Nandi et al. | HAMSTER: using search clicklogs for schema and taxonomy matching | |
Khah et al. | An enhanced Ad event-prediction method based on feature engineering | |
Dakka et al. | Efficient summarization-aware search for online news articles |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CARVER, ANTON;ASHTON, WILL;JAKOBI, NICK;SIGNING DATES FROM 20080128 TO 20080317;REEL/FRAME:030159/0479 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
CN115550304A - Method, apparatus, and storage medium for determining a set of activity instances for a group of users - Google Patents
Method, apparatus, and storage medium for determining a set of activity instances for a group of users Download PDFInfo
- Publication number
- CN115550304A CN115550304A CN202211137479.4A CN202211137479A CN115550304A CN 115550304 A CN115550304 A CN 115550304A CN 202211137479 A CN202211137479 A CN 202211137479A CN 115550304 A CN115550304 A CN 115550304A
- Authority
- CN
- China
- Prior art keywords
- activity
- instances
- users
- instance
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000000694 effects Effects 0.000 title claims abstract description 581
- 238000000034 method Methods 0.000 title claims abstract description 64
- 230000004044 response Effects 0.000 claims abstract description 32
- 238000004891 communication Methods 0.000 claims description 65
- 230000002123 temporal effect Effects 0.000 claims description 12
- 238000012545 processing Methods 0.000 claims description 11
- 238000013518 transcription Methods 0.000 claims description 8
- 230000035897 transcription Effects 0.000 claims description 8
- 230000015654 memory Effects 0.000 claims description 6
- 230000002730 additional effect Effects 0.000 claims description 5
- 230000000875 corresponding effect Effects 0.000 claims 8
- 238000010200 validation analysis Methods 0.000 claims 1
- 238000010801 machine learning Methods 0.000 abstract description 27
- 238000012549 training Methods 0.000 description 28
- 230000008569 process Effects 0.000 description 6
- 238000010586 diagram Methods 0.000 description 5
- 239000000463 material Substances 0.000 description 5
- 235000021168 barbecue Nutrition 0.000 description 4
- 235000012054 meals Nutrition 0.000 description 4
- 238000003062 neural network model Methods 0.000 description 4
- 235000013305 food Nutrition 0.000 description 3
- 238000013475 authorization Methods 0.000 description 2
- 235000014510 cooky Nutrition 0.000 description 2
- 238000001914 filtration Methods 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 235000012184 tortilla Nutrition 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 108010068370 Glutens Proteins 0.000 description 1
- 235000004348 Perilla frutescens Nutrition 0.000 description 1
- 244000124853 Perilla frutescens Species 0.000 description 1
- 238000013528 artificial neural network Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000015572 biosynthetic process Effects 0.000 description 1
- 238000012790 confirmation Methods 0.000 description 1
- 230000001351 cycling effect Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000001552 evening effect Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 235000021312 gluten Nutrition 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000003058 natural language processing Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000000306 recurrent effect Effects 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 235000014102 seafood Nutrition 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/101—Collaborative creation, e.g. joint development of products or services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/07—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail characterised by the inclusion of specific contents
- H04L51/18—Commands or executable codes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
- G06F9/452—Remote windowing, e.g. X-Window System, desktop virtualisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G06Q50/40—
-
- G06Q50/50—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/216—Handling conversation history, e.g. grouping of messages in sessions or threads
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/52—Network services specially adapted for the location of the user terminal
Abstract
The present disclosure relates to a method, apparatus, and storage medium for determining a set of activity instances for a group of users. In the event that input from a group of users is reduced (or absent), a set of activity instances that the group of users is interested in performing is automatically determined. A representation of the set of activity instances can be presented for consideration by the group, and the set of activity instances can be determined even when only a limited criterion is specified. Optionally, in response to a positive user interface input involving the presented representation of the set of activity instances, one or more activity instances of the set may be confirmed by limited input by one or more users of the group. Further, the automatic determination of the set of activity instances is optionally performed using one or more trained machine learning models trained to optimize a likelihood that a group of users will be satisfied with the set.
Description
Description of the cases
The application belongs to divisional application of Chinese invention patent application 201880094615.1, which has application date of 2018, 8, month and 22.
Technical Field
The present disclosure relates to a method, apparatus, and storage medium for determining a set of activity instances for a group of users.
Background
A group of users may utilize an ongoing communication thread (thread) to determine a set of activities that the group will collaboratively engage in. For example, a group of users may exchange electronic messages (e.g., chat messages, email, and/or text messages) with respective mobile devices for coordinating a night out that includes three activities: wine before meal, dinner and movies. Coordinating these activities requires exchanging large numbers of electronic messages via communication contexts in order to resolve different interests of the users of the group, resolve pre-existing time conflicts of the users, and so forth. Such message exchanges consume network resources (e.g., through transmission of messages) and client device resources (e.g., by preparing to send messages and/or by presenting received messages). Further, one or more users of the group will typically utilize a search engine, browse web pages, and/or utilize other resources to determine the set of activities. Such utilization of resources to determine the active set may also consume network resources and/or client device resources.
As more users are included in the communication context, the amount of user input increases, as does the amount of client device and network resource usage. For example, in a communication topic that includes the user and additional users, the user may provide a first message related to a set of activities (e.g., "let's do drivers, diner, and movie on friend. The first message may cause one or more additional users to submit search queries, utilize applications, etc., to attempt to determine a set of locations for the set of activities, a time for the set of activities, etc. Additionally or alternatively, one or more users may prepare and send a response to the first user message, which will result in additional messages being transmitted and presented. Further, such additional messages may result in further searches, further application utilization, and the like. In general, such actions utilize a large amount of network resources as well as a large amount of resources (e.g., computing resources, battery resources) of the user's client device that are involved in the message exchange context.
Disclosure of Invention
Embodiments described herein automatically determine a set of activity instances that a group of users is interested in performing, and determine the set of activity instances with reduced (or no) input from the users of the group. For example, some embodiments may automatically determine a limited number (e.g., only one, three, or fewer, etc.) of sets of activity instances to be presented for consideration by the group, and do so even if only limited criteria (e.g., activity type, time (temporal) constraints) are provided through user interface input by users of the group. Representations of a limited number of sets of activity instances can be presented in a communication session for group consideration. Optionally, in response to a positive user interface input involving the presented set of activity instances, one or more activity instances of the set may be confirmed by limited input by one or more users of the group. Further, the automatic determination of the set of activity instances is optionally performed using one or more trained machine learning models trained to optimize the likelihood that the group of users is satisfied with a limited number of sets. Such automatic determination of a limited number of satisfaction sets results in reduced input by users of the group when coordinating the set of activity instances, thereby conserving client device resources and/or network resources. Additionally or alternatively, a reduction in user input may be beneficial to users with limited flexibility.
In some implementations, the two or more sets of activity types are determined based on user input from one or more users in a group of users. Further, one or more activity instances are then selected for each activity type. Still further, a plurality of activity instance sets are then generated, wherein each activity instance set includes a corresponding one of the activity instances for each activity type. Still further, a subset of the set of activity instances is selected, and in response to selecting the subset, a representation of the set of subsets is caused to be presented to users of the user group. In some of those implementations, in response to receiving one or more positive user interface inputs directed to one of the presented representations, the client devices of the users of the group may be caused to present an interface element that, when selected, causes the respective one of the client devices to interact with the remote computer system to confirm the one or more active instances of the set of one of the presented representations. In various embodiments, selecting a subset of the set of activity instances comprises: one or more of the set of activity instances are selected for inclusion in the subset based on the respective generated feasibility scores. In some of those various implementations, the feasibility scores for the given set of activity instances are determined based on processing respective features of the given set of activity instances using a trained machine learning model.
Additional description of these and other embodiments is set forth below. In this description, an "activity type" refers to a category of activities that has multiple instances of the activity as members of the category, where the instances of the activity all have one or more common characteristics. The activity types may be defined with different levels of granularity (e.g., more general "movies" or more specifically "horror movies"). Non-limiting examples of activity types include "movie", "comedy movie", "horror movie", "dinner at a food bar", "lunch", "biking", "mountain biking", "hiking", "hard hiking", "walking", "attending a sporting event", "attending a football match", "watching a sporting event", and the like. Further, in this description, an "activity instance" refers to a single member of a plurality of members involved in an activity type. A given activity instance of an activity type has one or more characteristics that distinguish the activity instance from other activity instances of the activity type. These characteristics may include, among other things, a name (or other identifier) characteristic, a location characteristic, a time (e.g., time and/or date) characteristic, and so forth. As one example, an activity instance of "dinner" may be a particular restaurant, such as "Hypothertical Caf". As another example, an activity instance for "dinner" may be more precisely defined, such as "Hypothetical Caf" at 7 PM. As yet another example, an active instance of a "movie" may be a particular movie, such as a "diaphetic movie", a particular movie of a particular movie theater (e.g., "diaphetic movie" of "diaphetic movie theater"), a particular movie theater, and a particular movie at a particular time (e.g., "diaphetic movie" of "diaphetic movie theater" of 7 pm).
In some implementations, the set of activity types is determined based on one or more electronic messages of an ongoing multi-user communication session involving a group of users (via their respective client devices). For example, the activity types for "movie" and "dinner" may be determined based on natural language processing of one or more electronic messages that include an ongoing message exchange topic for a group of users. For example, the activity types of "movie" and "dinner" may be determined based on the electronic message "let's do diner and a movie Wednesday night (we eat dinner and watch movie bar on Wednesday evening)". In some implementations, the specific activity instance may additionally be determined based on the messages of the communication session and one or more activity types. For example, the message "Let's go to Joe's Steakhouse, the go se a movie" can be processed to determine the activity instance of "Joe's steak" and the activity type of "movie". In other implementations, the collection of activity types may be determined based on other user interface inputs of users of the group of users, such as user interface inputs provided outside of any multi-user communication session (e.g., inputs provided via a graphical interface dedicated to the group activity plan).
Regardless of the manner in which the activity type (and optionally the activity instances) is determined, one or more activity instances may be selected for each activity type. For example, for the activity types of "movie" and "dinner," multiple activity instances of "movie" and multiple activity instances of "dinner" may be selected.
In some implementations, selecting an activity instance can include: an activity instance is selected based on one or more preference metrics of one or more users of the group. This may include: the activity instances are filtered based on the preference metrics (e.g., "hard" preference metrics) and/or by scoring the activity instances based on the preference metrics and selecting the activity instances according to the scores. For example, an initial group of "dinner" activity instances may be selected by filtering based on location, time constraints, and/or "hard" preference metrics of users of the group. For example, the initial set of "dinner" activity instances may be selected based on filtering such that only locations within 10 miles of all users of the set are selected, such that only locations that are open and/or available for a specified period of time (e.g., when a particular date and/or time is specified) are selected and/or only locations that provide gluten-free selection are selected (based on the user's "hard" preference metrics).
Continuing with the example, a refined group of "dinner" activity instances may be selected from the initial group based on scoring the initial group of activity instances according to the preference metrics of the users of the group. For example, based on a preference metric for each user, a score may be generated for each activity instance, and the scores for each activity instance (where each score is specific to the respective user) may be combined (e.g., averaged) to generate an overall score for each entity instance. Also, for example, based on a combined preference index representing all users, a score may be generated for each activity instance, and the score for each activity instance may be utilized as the total score for each activity instance. The total score for the activity instance may then be utilized to select an activity instance for the "dinner" activity type.
Once the activity instances for each activity type are selected, multiple activity instance sets are generated. Each set includes one activity instance for each determined activity type. In various embodiments, the set of activity instances may be an ordered set of activity instances (i.e., ordered by time). As an example, assume that the activity types of "movie", "dinner", and "museum" are determined from the communication session, and that multiple activity instances are determined for each activity type. Each set of activity instances may include one instance of each activity type. For example, the first set may include "movie instance 1", "dinner instance 1", and "museum instance 1"; the second set may include "museum instance 1", "dinner instance 1" and "movie instance 1"; the third set may include "movie instance 2", "dinner instance 2", and "museum instance 2"; the fourth set may include "movie instance 1", "dinner instance 2", and "museum instance 1"; and so on. In various implementations, the set of activity instances may be generated based on determining that temporal characteristics of the activity instances of the set do not overlap (e.g., the duration of the "movie" instance does not overlap with the start time of the "dinner" instance) and/or based on considering the proximity of the location characteristics of the activity instances (e.g., ensuring that the activity instances are within 10 miles of each other (or other distance threshold) and/or within 20 minutes of each other (or other travel threshold) of formation time).
The activity instances may then be scored, and based on the scores, a subset of the set of activity instances is selected as a final set of activities. In various embodiments, each set of activity instances is scored based on processing features of the set of activity instances using a trained machine learning model. For example, the features of each set may be processed using a machine learning model to generate a respective feasibility score for each set. Each feasibility score indicates a likelihood that the respective set of activity instances will be performed by the group and/or considered satisfactory by the group. Based on the feasibility scores, one or more sets are selected as final active sets.
Various features of the aggregated activity instance can be processed using a machine learning model. Some non-limiting examples of features of an activity instance that may be processed include: defining characteristics of an activity type of an activity instance; features defining a score for an activity instance (the above-mentioned score based on preference indicators for all users of the group); location features that define features of the geographic location of the activity instance (e.g., distance and/or travel time relative to other activity instances, distance and/or travel time relative to a home or other location of users of the group); defining temporal characteristics of one or more times of an activity instance (e.g., an absolute time, a time difference relative to the start of a subsequent activity instance of the set, a time difference relative to the end of a previous activity instance of the set); global quality features defining reviews, popularity, and/or other global quality indicators for activity instances among a plurality of users (including users other than those of the group); defining characteristics of one or more hard constraints/requirements of user engagement activities (e.g., restaurant with or without gluten selection, location reachable by wheelchair); and so on.
In various embodiments, the machine learning model used to generate the feasibility scores for the set of activity instances is a neural network model. In some versions of those embodiments, the neural network model is a feed-forward neural network model, and the features of all activity instances of the set being considered are processed as simultaneous inputs to the model (e.g., the input dimensions of the model are configured to accept the features of all activity instances of the set). For example, the input dimensions of the model may be configured to accept features of up to N activity instances in the set. In the case where a given set scored using the model has fewer than N activity instances, the pad value may be used for features of the activity instances that are not considered. In some other versions of those embodiments, the neural network model is a Recurrent Neural Network (RNN) model, and the features of the activity instances of the set are processed in accordance with the activity instances on a basis of the activity instances. For example, a model may be used to process a feature of a first activity instance of an ordered set, followed by a feature of a second activity instance of the ordered set, and so on. The output generated by processing the final activity instance of the collection may then be used as a feasibility score.
In various implementations, a machine learning model used to generate the feasibility score is trained based on supervised training examples and/or semi-supervised training examples. Each training example may include features of the respective set of activity instances as training example inputs and may include a tag feasibility score as a training example output, the tag feasibility score indicating a likelihood that the respective set of activity instances will be performed by and/or considered satisfactory by the set. A set of activity instances based on corresponding training example inputs are reviewed and assigned labels, some labels of some training example outputs may be generated. Some labels of some sequence example outputs may additionally or alternatively be generated based on actual behavior and/or feedback of users of respective groups of recommendations of activity instance sets that accept corresponding training example inputs. For example, the given training example output for the given training example may be based on whether a user receiving a recommendation for a set of activity instances corresponding to the training example input for the given training example actually involved the set of activity instances. For example, if no users are involved in an activity instance, a relatively "negative" training example output label, such as "0" or "0.1," may be assigned, while if one or more (e.g., all) users are involved in an activity instance, a relatively "positive" training example output label, such as "1" or "0.9," may be assigned. Such a decision may be made based on the user's response to the request feedback and/or based on consideration of location signals and/or other signals from the responding user's client device, with appropriate permission by the respective user. As another example, the given training example output of the given training example may be based on feedback provided by a user (e.g., in response to a prompt presented to the user by the respective client device) that received a recommendation for a set of activity instances corresponding to the training example output of the given training example. For example, a prompt "is the group like the set of activities? "and" not "," somewhat liked "," mostly liked ", and" very liked ", etc. selectable options may be presented to one of the users. If "no" is selected, a training example output label, such as "0", may be assigned if "somewhat like" is selected, such as "0.3", if "mostly like" is selected, a label, such as "0.6", may be selected, and if "very like" is selected, a label, such as "1", may be assigned.
As described above, one or more final activity instance sets are selected based on the respective feasibility scores. The final set may be a subset of the considered set of activity instances. In response to selecting the subset, a representation of the final set is caused to be presented to users of the group of users. For example, the representation may be presented in an ongoing multi-user communication session involving the user. For example, the representation may be presented to one or more users as a selectable element and, if selected by one or more users via a positive user interface input, may be incorporated into a transcription of the multi-user communication session. In some of those implementations, in response to receiving one or more positive user interface inputs relating to one of the presented representations, the client devices of the users of the group may be caused to present an interface element that, when selected, causes the respective one of the client devices to interact with the remote computer system to confirm the one or more activity instances of the set of one of the presented representations. For example, in response to receiving one or more positive user interface inputs relating to one of the presented representations, the client devices of the users of the group may be caused to present an interface element that, when selected, causes a respective one of the client devices to interact with the remote computer system to obtain an electronic movie ticket for the "movie" event instance. A respective one of the client devices may interact with the remote computer system in a manner that is customized to the client device. For example, a given client device may obtain an electronic movie ticket using address information, payment information, and/or other information of a user of the given client device.
Provided above is an overview of some embodiments disclosed herein. Further description of these and other embodiments is provided below.
In some implementations, there is provided a method performed by one or more processors, the method comprising: a set of activity types is determined based on user interface inputs of one or more users in a group of users. The collection of activity types includes at least a first activity type and a second activity type. The method further comprises the following steps: one or more activity instances are selected for each activity type in the set of activity types. The selection of one or more activity instances for each of the set of activity types is based on a preference metric for each of the users, and the activity instances include a plurality of activity instances of a first activity type and a plurality of activity instances of a second activity type. The method further comprises the following steps: a plurality of sets of activity instances are generated, wherein each of the sets of activity instances includes a corresponding one of the activity instances for each of the activity types. For each set of activity instances in the set of activity instances, the method further comprises: the respective features of the set of activity instances are processed using the trained machine learning model to generate respective feasibility scores for the set of activity instances. The method further comprises the following steps: a subset of the set of activity instances is selected based on the feasibility score, wherein the subset includes at least a given set of activity instances. The method further comprises the following steps: in response to the selection, at least one client device of the at least one user is caused to present a representation of the given set of activity instances.
These and other implementations of the techniques may optionally include one or more of the following features.
In some implementations, the user interface input is provided as part of an ongoing communication session between a group of users. In some of those implementations, causing the at least one client device to present the representation of the given set of activity instances occurs without presenting the representation in a transcription in the ongoing communication session. In some versions of those embodiments, the method further comprises: receiving a positive user interface input in response to the presented representation; and in response to receiving a positive user interface input in response to the presented representation: a representation of a given set of activity instances or additional representations are incorporated into a transcription of an ongoing communication session.
In some embodiments, the respective features of the activity instance of at least one of the activity types processed using the trained machine learning model include: a location feature defining a geographic location of the activity instance and a time feature defining one or more times of the activity instance.
In some embodiments, the method further comprises: a location indicator of at least one of the users is identified, and respective features of each of the ordered set of activity instances and the location indicator are processed using a trained machine learning model to generate a feasibility score.
In some embodiments, the method further comprises: the method further includes determining a supervised feasibility score for the given set of activity instances, and further training the machine learning model using training examples that include training example inputs that conform to respective features of the given ordered set and that include training example outputs that conform to the supervised feasibility score. In some of those embodiments, determining the supervised feasibility is based on one or both of: (1) Whether at least one of the users performed the given set of activity instances, and (2) feedback provided by at least one of the users in response to presentation of a prompt asking for feedback regarding the given set of activity instances.
In some implementations, a method implemented by one or more processors is provided, the method comprising: one or more messages of an ongoing multi-user communication session are determined to relate to a collection of activity types. Such a determination is based on processing content of one or more messages of an ongoing multi-user communication session, the plurality of users participating in the multi-user communication session via respective client devices, and the set of activity types includes at least a first activity type and a second activity type. The method further comprises the following steps: one or more activity instances are selected for each activity type in the set of activity types. The selection of one or more activity instances for each of the set of activity types is based on a preference metric for each of the users, and the activity instances include a plurality of activity instances of a first activity type and a plurality of activity instances of a second activity type. The method further comprises the following steps: a plurality of ordered sets of activity instances are generated, wherein each ordered set of activity instances includes a corresponding one of the activity instances for each of the activity types. For each ordered set of activity instances in the ordered set of activity instances, the method further comprises: the respective features of the ordered set of activity instances are processed using a trained machine learning model to generate respective feasibility scores for the ordered set of ordered activity instances. The method further comprises the following steps: a subset of the ordered set of activity instances is selected based on the feasibility scores, wherein the subset includes at least the given ordered set of activity instances. The method further comprises the following steps: in response to the selection, a representation of the given ordered set of activity instances is caused to be presented at the client device as part of the multi-user communication session. The method further comprises the following steps: in response to receiving at least one instance of a positive user interface input in response to the presented representation: causing each of the client devices to present a respective interface element that, when selected, causes a respective one of the client devices to interact with at least one remote computer system to confirm at least one activity instance of the given ordered set of activity instances. A respective one of the client devices interacts with the remote computer system in a manner formulated for the respective one of the client devices to confirm at least one activity instance of a respective user of the one of the client devices.
These and other implementations of the technology disclosed herein may optionally include one or more of the following features.
In some embodiments, the respective features of the activity instances of the at least one activity type processed using the trained machine learning model include: a location feature defining a geographic location of the activity instance; and/or temporal characteristics defining one or more times of the activity instance.
In some embodiments, the method further comprises: a location indicator of at least one of the users is identified, and respective features of each of the ordered set of activity instances and the location indicator are processed using a trained machine learning model to generate a feasibility score. In some of those embodiments, each of the activity instances defines a respective activity and respective temporal information for the respective activity, and selecting one or more activity instances for each of the activity types includes: identifying a time constraint for each of the users; and excluding the conflicting activity instance from the selected activity instances based on the time constraint matching the respective time information of the conflicting activity instance.
In some implementations, when selected, a respective interface element presented by one of the client devices causes each of the client devices to launch with a parameter of at least one of the activity instances, an application installed on each of the client devices. When launched, the application interacts with the at least one remote computer system using the parameters to validate at least one of the activity instances in the given ordered set of activity instances.
In some embodiments, the method further comprises: the method further includes determining a supervised feasibility score for the given ordered set of activity instances, and further training the machine learning model using training examples that include training example inputs that conform to respective features of the given ordered set and that include training example outputs that conform to the supervised feasibility score. In some of those embodiments, determining the supervised feasibility is based on one or both of: (1) Whether at least one of the users performed the given ordered set of activity instances, and (2) feedback provided by at least one of the users in response to presentation of a prompt that solicits feedback regarding the given ordered set of activity instances. In some versions of those embodiments, determining the supervised feasibility score is based on whether at least one of the users performed a given ordered set of activity instances, and the method further comprises: a determination is made based on the location information of at least one of the users whether at least one of the users performed the given ordered set of activity instances.
In some embodiments, the method further comprises: identifying an indication of a specified activity in a communication topic; and determining additional activity types for the specified activities, wherein selecting one or more activity instances for each of the activity types of the collection comprises: one or more activity instances are selected for the additional activity types. In some of those embodiments, the activity instance comprises a specified activity.
In some embodiments, selecting one or more activity instances for each of the activity types of the collection comprises: generating a plurality of first candidate activity instances based on a first activity type of the activity types of the collection; processing, using a second machine learning model, the one or more respective features of each of the candidate activity instances and the preference metrics of the users, generating a respective approval score for each of the candidate activity instances, wherein the respective approval score for a given candidate activity instance is indicative of an overall approval of the given candidate activity instance by the plurality of users based on the preference metrics of the users; and selecting one or more candidate activity instances based on the respective approval scores.
Additionally, some embodiments include one or more processors (e.g., central Processing Units (CPUs)), graphics Processing Units (GPUs), and/or Tensor Processing Units (TPUs) of one or more computing devices, wherein the one or more processors are operable to execute instructions stored in an associated memory, and wherein the instructions are configured to perform any of the foregoing methods. Some embodiments also include one or more non-transitory computer-readable storage media storing computer instructions executable by one or more processors to perform any of the methods described above.
It should be appreciated that all combinations of the foregoing concepts and additional concepts described in greater detail herein are considered to be part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are considered part of the subject matter disclosed herein.
Drawings
FIG. 1 is a block diagram of an example environment in which embodiments disclosed herein may be implemented.
FIG. 2 illustrates an example of generating an activity instance set.
FIG. 3 illustrates an example graphical user interface of an ongoing multi-user communication session that may be provided to a client device of a user according to embodiments described herein.
Fig. 4 illustrates another example graphical user interface of an ongoing messaging flow and an activity instance suggestion set that may be provided to a client device of a user according to embodiments described herein.
FIG. 5 illustrates a flow diagram of an example method of determining a set of activity instances in accordance with embodiments described herein.
Fig. 6 illustrates an example architecture of a computing device.
Detailed Description
With reference to FIG. 1, a block diagram of an example environment is illustrated in which embodiments disclosed herein may be implemented. The example environment includes a plurality of client devices 105 and a group campaign engine 110. For example, client device 105 may include one or more of the following: a standalone voice-activated speaker device, a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a computing device of a user's vehicle, and/or a wearable apparatus of a user that includes a computing device (e.g., a watch of a user with a computing device, glasses of a user with a computing device, a virtual or augmented reality computing device). Additional and/or alternative client devices may be provided.
The client device 105 and the group campaign engine 110 may communicate via one or more networks, such as the internet, a local area network, a wide area network, and/or one or more other communication networks. In some implementations, the client device 105 and/or the group campaign engine 110 may communicate via one or more additional components. For example, one of the client devices 105 may communicate with the second client device 105 via a remote server that facilitates communication between one or more components of the first and second client devices 105.
The client devices 105 may each include a corresponding messaging application 106. The messaging application 106 allows users to participate in an ongoing multi-user communication session. For example, the communication session may be a multi-user text messaging (e.g., SMS) communication session, a multi-user chat communication session, a multi-user email exchange communication session, and/or one or more alternative communication sessions that allow multiple users to provide text and/or other input that may be received by other members of the session in real-time or near real-time. For example, referring to FIG. 3, an example Graphical User Interface (GUI) of an ongoing multi-user communication session is illustrated. Dialog box 305 includes messages from three users labeled "Alice," Bob, "and" Chris. When "Alice" submits a first message via the messaging application 106, the users "Bob" and "Chris" receive the message via the messaging application 106 executing on each of the other users' respective client devices 105. Subsequently, one or more other users (i.e., users "Bob" and "Chris") may reply to the first message, which is then provided to each user via messaging application 106. Thus, an ongoing multi-user communication session allows users of a group to communicate within the group.
Referring again to fig. 1, in some implementations, the group activity 110 may be a component of the messaging application 106 or otherwise interact with the messaging application 106. For example, when a user engages in a communication session via the messaging application 106, messages of the session may be provided to one or more components of the group campaign engine 110. In some implementations, the group campaign engine 110 may execute on a remote server, and the messaging application 106 may provide the messages of the communication session to one or more components of the group campaign engine 110 via a communication network, as described above.
The message parser 115 may further include a natural language processor that may process free-form natural language output and generate annotated output based on the natural language output. For example, the natural language processor may process natural language free form input provided by one or more users in a conversational context. The generated annotated output may include one or more annotations and optionally one or more (e.g., all) terms of the natural language input.
In some implementations, the natural language processor may be configured to identify and annotate various types of grammar information in the natural language input. For example, the natural language processor of the message parser 115 may include portions of a part-of-speech tagger (not shown) configured to annotate terms with their grammatical roles. Also, for example, in some embodiments, the natural language processor may additionally and/or alternatively include a dependency analyzer (not shown) configured to determine syntactic relationships between terms in the natural language input.
In some implementations, the message analyzer 115 can additionally and/or alternatively include an entity annotator (not shown) configured to annotate entity references in one or more segments, such as references to people (including, for example, literary characters, celebrities, public characters, etc.), organizations, locations (real and fictional), activities, and/or types of activities, and so forth. The entity annotator can annotate references to entities as high levels of granularity (e.g., to enable identification of all references to a class of entities, such as a type of activity) and/or low levels of granularity (e.g., to enable identification of all references to a particular entity, such as a particular restaurant). The entity labeler can rely on the content of the natural language input to resolve a particular entity, and/or can optionally communicate with a knowledge graph or other entity database to resolve a particular entity.
In some implementations, the message analyzer 115 can optionally and/or alternatively include a co-fingered parser (not shown) configured to group or "aggregate" the fingerings for the same entity based on one or more context hints. For example, a coreference parser may be used to parse the term "there" into "underlying Caf" in the natural language input "I liked underlying Caf last time we ate there (I like underlying Caf well, where we last eaten). Referring to fig. 2, an example is provided that illustrates generating an ordered set of activity instances from a communication session 205. The communication session 205 may share one or more characteristics with the messages shown in the dialog box 305 of fig. 3. The communication session is provided to the message analyzer 115. In some implementations, the communication session 205 can be provided to the message analyzer 115 periodically, such as once a necessary number of messages have been submitted to the communication session. For example, a user may submit a message to a communication session, and once three messages have been submitted to the session, the messages may be provided to the message analyzer 115. Also, for example, when a message is submitted to a communication session, the message may be provided to the message analyzer 115.
The message analyzer 115 determines the activity type based on the messages of the communication session 305. Referring again to FIG. 3, the message types for "dinner" 210 and "movie" 215 are identified from a message communication, such as communication session 305 of FIG. 3. The identified activity type is provided to the activity selection engine 120 of the group activity engine 110. The campaign selection engine 120 provides one or more campaign instances for each offered campaign type. For example, referring again to FIG. 3, activity selection engine 120 selects a set of dinner activities 220 based on dinner activity type 210 and a set of movie activity instances 225 based on movie activity type 215. In some implementations, the activity instance can be selected based on temporal information described herein (e.g., selecting the movie activity instance 225 based on movies played on a certain date and/or in a certain time window, which are indicated in the message as temporal constraints) and/or one or more preference metrics of the user. For example, user preferences may be identified from one or more databases of user preferences, and the preferences may be used to identify candidate activity preferences for respective activity types. Referring again to fig. 2, the dinner activity instance is selected for a group of users of communication session 205. As shown, dinner activity instances of "Joe's steamboat," "Mexico tortilla," and "Texas barbecue" have been selected by the activity selection engine 120. The activity instances may be selected based on, for example, a food type for each activity instance and one or more user preferences for a dish type for each activity type. For example, the user preferences of the user of the session may indicate that the user is interested in having meals at a steak house (i.e., joe's steak house), having meals at a mexican restaurant (i.e., mexican tortillas), and/or having meals at a barbecue store (i.e., texas barbecue). User preferences may be identified based on, for example, one or more previous visits by the user to the location, searches submitted by one or more users, and/or one or more other indications of the user's preferences.
As an example, each user of the group may be associated with a set of preference metrics that are unique to that user. Each preference metric may indicate a user's interest in one or more characteristics of an activity instance. For example, for an activity type of "dinner," individual activity instances may be identified, each of which is associated with a dish type (e.g., italy, mexico, steak). In some implementations, the preference indicators of the one or more users may include an indicator indicating a degree of interest in a particular dish. For example, a user may be associated with a preference index that indicates a ranking of many types of dishes and/or a rating of each of a plurality of dishes. In some embodiments, the user may be associated with a subset of "favorite" dishes and a set of "dislike" dishes. For example, a user may be associated with a subset of dishes of favorite dishes that include "italian" and "seafood" and a subset of dishes of disliked dishes that include "barbeque".
In some implementations, the message analyzer 115 may identify messages from one or more users, where the messages indicate an interest in performing one or more activities, but do not specify a particular activity. For example, the message analyzer 115 may identify a message from the user that includes "Let's do so metering on Friday" rather than an indication of a particular activity to be performed. Based on the message, message analyzer 115 may determine that the set is interested in performing one or more activities (e.g., based on "Let's do so"), and may optionally determine a date of the one or more activities (e.g., based on "friday"). Further, message analyzer 115 may cause a prompt to be presented to one or more users (e.g., a user indicating "let us do something on friday") to solicit further messages regarding the set of activities that may be of interest to perform. For example, message analyzer 115 may provide an interface to allow a user to select one or more activity types, one or more activities, and/or otherwise allow a user to provide additional details regarding one or more activities of interest. In some implementations, the message analyzer 115 may additionally or alternatively proactively provide recommendations for one or more activities, such as recommendations for activities selected based on preference metrics of the users of the group. For example, the message analyzer 115 may provide recommendations for popular events that are geographically close to the group of users and that match one or more preference metrics of the group of users. For example, the recommendation may be provided as a selectable recommendation to be presented as part of the previously mentioned interface. For example, in response to "letting us do something on fridays," message analyzer 115 may provide one or more selectable recommendations to the interface that, when selected, add the recommendation as a fixed activity instance. The interface may optionally include elements to enable the user to provide additional details regarding other activity instances and/or activity types.
Referring again to FIG. 2, a plurality of movie entity instances 225 of a movie are selected for a group of users. A movie activity instance for activity instance 225 may be identified based on, for example, identifying movies previously attended by the user, movie tickets purchased by the user from one or more applications executing on client device 105, identifying users appearing at movie theater locations consistent with the movie duration for the location, and/or one or more other indications that the user appears in a particular category of movies.
In some implementations, the activity selection engine 120 may generate multiple candidate activity instances for each activity type and provide each candidate activity instance to the machine learning model to determine an approval score for each activity instance. For example, the machine learning model may receive as input a preference index for each user of the group and a plurality of generated activity instances, each associated with one or more features (e.g., location, category, dish, subject). The activity selection engine 120 processes each activity instance of the candidate set using a machine learning model to determine an approval score based on the preference index, the approval score indicating an overall approval of the given activity instance by the group of users. Based on the approval scores, the campaign selection engine 120 selects one or more candidate campaign instances to sort into an ordered set of campaign instances.
For example, referring again to fig. 2, activity selection engine 120 may select a candidate dinner activity instance 220. As shown, three activity instances are selected: joe's steak museum, which may be associated with a "steak dish" feature; mexican cookies, which may be associated with a "mexican dish" feature; and texas barbecue, which may be associated with a "barbeque dish" feature. Each user of the group may be associated with a preference indicator, and for one or more users, the one or more indicators may indicate the user's interest and/or preference in one or more dishes. The campaign selection engine 120 may process the preference metrics and candidate campaign instances to generate an approval score for each campaign instance and select a subset for each campaign type. Thus, while all dinner activity instances 220 are used to generate the ordered set of activity instances in FIG. 2, the activity selection engine 120 may select additional candidate activity instances, score the additional instances, and select only the three shown in FIG. 2.
In some implementations, a score may be generated for each activity instance based on a preference metric for each user, and the scores for each activity instance (where each score is specific to the respective user) may be combined (e.g., averaged) to generate a total score for each entity instance. Also, for example, a score may be generated for each activity instance based on a combined preference index representing all users (based on a preference index combining all users), and the score for each activity instance may be utilized as the overall score for each activity instance. The total score for the activity instance may then be utilized to select an activity instance for the "dinner" activity type, for example.
In some implementations, the generated score for each activity instance may additionally or alternatively be based on metrics identified from one or more other sources. For example, the score for an activity instance may be based at least in part on one or more of: a rating of an activity instance provided by another group of users (e.g., a star rating, a number, and/or other rating provided as feedback by a user population that includes users other than the users of the group of activity plans), a frequency of mentioning the activity instance in recent media, a location data-based indicator indicating how popular the activity instance is among the user population, and/or other indications of popularity of a particular activity instance.
In some implementations, the generated score for the activity instance may additionally or alternatively be based on identifying one or more other users associated with the group of users and determining that the one or more other users have performed the activity. For example, "Bob," which is a member of a message topic, may be associated with "Dave" (a user who is not part of the message topic), either by the same application as the message topic application or by an alternative application. The score for the activity instance may be based on identifying that "Dave" has performed the activity via a post on the social media, a photograph tagged with the activity instance location, and/or other indication that "Dave" has performed the activity instance. Alternatively, the score may be based on "Dave" having performed the activity and "Bob" having indicated an interest in "Dave's" performing the activity (e.g., by viewing the posts and/or photos, a positive like of the posts and/or photos, etc.).
Once an activity instance is selected for each activity type, a set of activity instances is generated. In some embodiments, the sets may be ordered in order such that, for a given set, the first activity instance of the set will be executed by the group first, followed by each subsequent activity instance. In some implementations, the set of activity instances may not be ordered, and the activity instances may be executed in any order. Each set includes one activity instance of each type identified by the activity selection engine 120. For example, activity selection 120 may identify a dinner activity type and a movie activity type. The event engine 120 may select one or more dinner event instances 220 and one or more movie event instances 225, as shown in fig. 2.
As shown in FIG. 2, a set of activity instances is generated. The generated ordered set includes activity instances for each activity type identified by the activity selection engine 120. In some implementations, the first ordered set can include activity instances in a different order than the second ordered set. For example, one or more of the set of activity instances may include a movie activity type followed by a dinner type, and one or more of the ordered activity instances may include a dinner activity type followed by a movie activity type.
As shown in FIG. 2, three ordered sets of activity instances are illustrated. The set 230 and the set 235 include an evening activity instance followed by a movie activity instance. Set 240 includes an instance of a movie followed by an instance of dinner. Each ordered set includes a movie instance and a dinner instance and is provided to the activity scoring engine 125.
As previously described, the activity scoring engine 125 processes the set of activity instances using a machine learning model that receives the activity instances as input. Each sorted set is processed using a machine learning model, and a feasibility score is determined for each sorted set. One or more sets are selected as a subset of the set of activity instances based on the feasibility scores for each set. For example, referring again to fig. 2, three ordered sets of activity instances are provided to the activity scoring engine 125. The activity scoring engine 125 may score each sorted set 230, 235, 240 and select one or more sorted sets based on the generated feasibility scores.
In some implementations, one or more features of an activity instance of a collection can be used to generate a feasibility score for the collection. For example, one or more activity instances may include one or more location features that indicate a location of an activity. The location information may include a street address, a GPS location, a path of the activity, which may include a start location and an end location of the non-localized activity (e.g., a cycling activity). In some implementations, one or more activity instances may be associated with one or more times of the activity instance. For example, dinner activity instances may be associated with appointment times, movie activity instances may be associated with movie start and end times, bicycle riding activity instances may be associated with approximate completion times, and/or museum activity instances may be associated with museum open and close times or expected durations of visits. Thus, the distance between locations and/or the time difference between activity instances may be provided to the machine learning model as input and used to generate a feasibility score for the set.
In some implementations, one or more users may be associated with a location indicator that may be provided as input when processing the ordered set to determine the feasibility score. For example, each user may be associated with a "home" location, and a feasibility score for a set of one or more activity instances may be generated based on the distance of the user from the one or more activity instances. As an example, an ordered set starting with an activity instance indicating a location feature of one of the users that is driving long may have a feasibility score generated indicating that the group is less interested than an ordered set including activity instances closer to all users.
In some implementations, one or more users may be associated with one or more temporal constraints that may prevent a given user from engaging in one or more activity instances of a collection. For example, a user may have a calendar entry that indicates a previous appointment from 4 pm to 5 pm. The campaign selection engine 120 may exclude any campaigns having a time characteristic that conflicts with a period of time that is not available to the user. Also, for example, during a communication session, one or more users may indicate one or more times when the user is unavailable, and activity selection 120 may exclude any activity instances that conflict with this time.
Upon selecting one or more sets as subsets to provide to the user, representations of the set of activity instances are provided to the user's client device for presentation by an application, such as the secondary application 107 of FIG. 1. Each activity instance of the set is associated with one or more ordered sets identified by the activity selection engine 120. In some implementations, each activity instance of the set is associated with one of the activity types selected by the activity selection engine 120. For example, the ordered set of activity instances 230 includes an activity instance of the activity type "dinner" (i.e., "mexican cookies") and a selected activity type of "movies" (i.e., "horror movies"). In some implementations, one or more activity instances of a collection may be associated with multiple activity types. For example, the ordered set may include an activity instance of "museum 1", which is the activity type "museum", but additionally has an exhibit about a bicycle. Thus, the activity instance of "museum 1" may be selected as the activity instance of the ordered set, which is both the "museum" activity type and the "bicycle" activity type.
In some embodiments, one or more ordered sets are presented as part of a multi-user communication session. For example, messaging application 106 can present a representation of a given ordered set of activity instances. Referring again to FIG. 3, a representation 310 of an ordered set of activity instances is illustrated. Representation 310 includes two activity instances: movies (horror movie 1) and dinner (beefsteak in Joe). Further, representation 310 includes characteristics of the activity instance. For example, for a movie activity instance, representation 310 includes the time of the movie and the movie theater location. In some implementations, additional and/or alternative features may be provided for the activity type, such as a theme, a physical address, a special event related to the activity instance (e.g., a special exhibit at a museum), and/or any other additional feature that may help the user decide whether to execute the activity instance or reject the ordered set of activity instances.
Additionally, representation 310 includes a selector to allow the user to indicate an interest in performing additional actions. As shown, representation 310 includes a prompt asking the user whether the user should purchase movie tickets for the movie event instance. If the user indicates an interest in purchasing movie tickets, the application engine 130 interacts with one or more remote computer systems in a manner customized for the user's client device to confirm purchase of movie tickets for the movie indicated by the movie activity instance of the representation 310. For example, the application engine 130 may interact with a remote computer associated with a cinema ticket selling entity, and when she indicates an interest in purchasing cinema tickets on her client device "Alice," the cinema tickets are purchased exclusively for "Alice," and when "Bob" indicates an interest in purchasing cinema tickets, but is customized for "Bob" (e.g., ordering movie tickets using payment information for "Bob," booking movie tickets under the name of "Bob," purchasing a certain number of movie tickets based on preferences for "Bob"), the application engine 130 may interact with the same remote computer. In some implementations, the application engine 130 may not be present and the client device may interact directly with the remote computer.
In some implementations, after providing the representation of the one or more activity sets to a group of users, the activity sets may be updated based on feedback provided by the one or more users via additional messages and/or other user interface input. For example, a set of activity instances may be provided that include a particular movie, dinner of italian restaurants, and visits to a museum, as described herein. The set of activity instances may be provided via the interface shown in FIG. 3, and after providing the set of activity instances, the user may submit the message "I'd like to see that movie, but not Italian food". Based on the user feedback, the activity selection engine 120 may determine additional and/or alternative activity sets that do not include dinner activity instances for dish types having "italian". For example, the activity selection engine 120 may keep visits to a museum and a particular movie fixed, but suggest alternative restaurants (i.e., restaurants without the dish type of "italy"). As another example, after providing the set of activity instances via the interface, the user may interact with the interface to remove one or more activity instances of the set, cause a replacement of one or more activity instances of the set to be presented, and so forth. For example, the user may select one of the activity instances of the collection to view a replacement of the selected one of the activity instances.
In some implementations, as described above, a supervised feasibility score may be provided for one or more activity instances provided to a group of users. The provided supervised feasibility score of the ordered set indicates the actual feasibility of the ordered set based on feedback from one or more users. In some implementations, the supervised feasibility score may be based on whether at least one user performed an ordered set of activity instances. For example, a client device of one or more users may provide location information of the user, and one or more components of the group campaign engine 110 may identify that the user is not near an ordered set of campaign instances (e.g., not near a movie theater during the showing of the ordered set of movie campaign instances) for the time associated with the campaign instances. In some implementations, one or more users can indicate in the communication context that the user is unable to or is not interested in executing one or more activity instances of the ordered set. For example, referring again to FIG. 3, in communication block 320, "Chris" indicates that he is unable to participate in the provided ordered set of movie activity instances. Thus, a supervised feasibility score may be determined for the provided ordered set, the supervised feasibility score indicating that the provided ordered set does not fully satisfy the group. In some implementations, via the messaging application 106 or another application, one or more users can be prompted to rate or characterize the suitability of the provided ordered set of activity instances. The responses of one or more users may be used to determine a supervised feasibility score for the provided ordered set.
Once the supervised feasibility score is determined for the provided ordered set, the activity instances of the set and the supervised feasibility score may be used for further training of the machine learning model. For example, the sorted set may have initially had a feasibility score of 0.9, as determined by the active set scoring engine 125. However, based on feedback from one or more users, a supervised feasibility score of 0.6 is determined (e.g., one or more users did not engage in an activity instance, indicating one or more users are not acceptable for the ordered set). The machine learning model may then be further trained with the supervised feasibility scores and the sorted sets, so that the resulting selected sorted sets are more likely to be accepted by one or more groups for subsequent sorted sets.
Fig. 4 illustrates another example graphical user interface of an ongoing messaging flow and an activity instance suggestion set that may be provided to a client device of a user according to the methods described herein. The graphical interface includes a dialog box 405 that may share one or more characteristics with the dialog box 305 of fig. 3. In dialog 405, "Alice" suggests taking the movie and eating dinner, but does not specify the date and/or time of the event. Based on the message analyzer identifying that an activity has been suggested, a prompt 410 is provided to one or more users to allow the users to indicate an interest in the provided set of activity instances. Further, message analyzer 115 may identify that an activity has been applied in a conversation topic, but that additional details of the activity may be needed to provide groups to the set of activity instances. Thus, once one of the users indicates an interest in the provided set of activity instances, a time input box 415 is provided to one or more users to provide additional information about the time at which the user is interested in performing the indicated activity. In some implementations, the input box 415 may include additional and/or alternative fields to allow the user to provide additional information, such as a field to indicate a location. Once the additional information is provided, one or more ordered sets of activity instances 420 are provided to the user, as described with respect to fig. 3.
In some implementations, the dialog box 405 may not exist and one or more of the additional features of fig. 4 may be implemented via a standalone application. For example, a user may indicate interest in the provided set of activity instances by opening an application executing on the client device 105. Via the application, the user may indicate a time frame of the activity, one or more activity types, one or more additional users likely to be involved in the activity, and/or additional information that may be used by one or more components of the group activity engine 130 to provide one or more sets of activity instances.
FIG. 5 illustrates a flow diagram of an example method of determining an ordered set of activity instances in accordance with embodiments described herein. The steps of fig. 5 may be performed by one or more processors, such as one or more processors of a client device. Other embodiments may include additional steps beyond those shown in fig. 5, may perform the steps of fig. 5 in a different order and/or in parallel, and/or may omit one or more of the steps of fig. 5.
In step 505, references to collections of activity types are determined from messages of a multi-user communication topic. The referral may be determined by a component that shares one or more characteristics with the message analyzer 115. In some implementations, the one or more activity instances can be determined based on an indication in one or more messages. For example, the type of activity (e.g., "dinner") may be referred to in the message and/or a particular restaurant may be referred to in one or more messages.
In step 510, one or more activity instances are selected for each of the indicated activity types. An activity instance may be selected by a component that shares one or more characteristics with the activity selection engine 120. In some implementations, the activity selection engine 120 can utilize a machine learning model to select one or more activity instances based on the preference metrics of the group of users. For example, for an activity type of "dinner," one or more restaurants may be selected based on the user's dish preferences, one or more restaurants visited in the past, and/or one or more other indications of user preferences in the restaurants.
In step 515, a set of activity instances is generated. The set of activity instances may optionally be ordered based on, for example, a time associated with each activity instance, a location of the activity instance, and/or one or more other characteristics of the activity instance. Each set includes one activity instance for each activity type referred to in the message of the communication topic. For example, references to "dinner," "movie," and "hiking" may refer in the communication context, and each collection may include one movie activity instance, one dinner activity instance, and one hiking activity instance.
In step 520, the sets are separately processed to generate a feasibility score for each set. The feasibility scores may be generated by components that share one or more characteristics with the active set scoring engine 125. The activity set scoring engine 125 can utilize a machine learning model to generate a feasibility score based on, for example, one or more characteristics of the activity instance of the set. For example, one or more activity instances of the collection may be associated with a temporal feature, a location feature, and/or an approval score (as generated by the activity selection engine 120) indicative of user approval of the activity instance. In some implementations, one or more user preference indicators can be used to generate the feasibility score. For example, the feasibility score for the set of activity instances may be based on a distance between the user's "home" location and the one or more activity instances and/or the availability of the one or more users and the temporal characteristics of the one or more activity instances.
In step 525, a subset of the set of activity instances is selected based on the feasibility scores of each set. For example, a subset may be selected that includes the set having the feasibility scores that satisfy the threshold, a predetermined number of sets, and/or a single set having the highest feasibility score.
In step 530, a representation of a subset of the set is presented at the user's client device. The representation may include one or more characteristics of the activity instance of the collection. For example, the representation of the collection may include a name (or other identifier) of each activity instance, a time, a location, and/or other information about the activity instance. In some implementations, one or more users can be prompted to select whether to provide one or more collections before providing the collections to the users, e.g., as shown in FIG. 4.
In step 535, an interface is presented by each client device that allows each user to interact with the remote computer in a manner tailored to the particular user. For example, each user may be prompted to purchase a movie ticket for a movie that is an activity instance of one of a set of activity entities presented by the client device. Each user may choose to purchase the movie ticket via a remote computer associated with the ticket vendor and, upon confirmation, purchase the movie ticket using the user's payment information.
FIG. 6 is a block diagram of an example computing device 610 that may optionally be used to perform one or more aspects of the techniques described herein. Computing device 610 typically includes at least one processor 614, which communicates with a number of peripheral devices via a bus subsystem 612. These peripheral devices may include, for example, a storage subsystem 624 including a memory subsystem 625 and a file storage subsystem 626, user interface output devices 620, user interface input devices 622, and a network interface subsystem 616. The input devices and output devices allow a user to interact with the computing device 610. Network interface subsystem 616 provides an interface to an external network and couples to corresponding interface devices in other computing devices.
User interface input devices 622 may include a keyboard, a pointing device such as a mouse, trackball, touch pad, or graphics tablet, a scanner, a touch screen incorporated into a display, an audio input device such as a voice recognition system, microphone, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computing device 610 or onto a communication network.
User interface output devices 620 may include a display subsystem, a printer, a facsimile machine, or a non-visual display, such as an audio output device. The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or some other mechanism for creating a visible image. The display subsystem may also provide a non-visual display, such as via an audio output device. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computing device 610 to a user or another machine or computing device.
These software modules are typically executed by processor 614 alone or in combination with other processors. Memory 625 for storage subsystem 624 may include a number of memories, including a main Random Access Memory (RAM) 630 for storing instructions and data during program execution and a Read Only Memory (ROM) 632 that stores fixed instructions. File storage subsystem 626 may provide permanent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical disk drive, or removable media cartridges. Modules that implement the functionality of certain embodiments may be stored by file storage subsystem 624 in storage subsystem 824 or other machines accessible by processor 614.
The computing device 610 may be of various types including a workstation, a server, a computing cluster, a blade server, a server farm, or any other data processing system or computing device. Because the nature of computers and networks vary, the description of computing device 610 depicted in FIG. 6 is intended only as a specific example for purposes of illustrating some embodiments. Many other configurations of computing device 610 are possible with more or fewer components than the computing device depicted in fig. 6.
Certain embodiments discussed herein may provide a user with one or more opportunities to control whether information is collected, stored, used, and how information about the user is collected, stored, and used in the context of collecting or using personal information about the user (e.g., user data extracted from other electronic communications, information about the user's social network, the user's location, the user's time, the user's biometric information, and the user's activities and demographic information, relationships between users, etc.). That is, the systems and methods discussed herein collect, store, and/or use user personal information only upon receiving explicit authorization from the relevant user to do so.
For example, the user is provided with control over whether the program or feature collects user information about that particular user or other users related to the program or feature. Each user whose personal information is to be collected is presented with one or more options to allow control over the collection of information related to that user to provide permission or authorization as to whether information is collected and as to which portions of the information are to be collected. For example, one or more such control options may be provided to the user over a communications network. In addition, certain data may be processed in one or more ways before it is stored or used, thereby deleting personally identifiable information. As one example, the identity of the user may be processed such that personally identifiable information cannot be determined. As another example, the user's geographic location may be generalized to a larger area such that the user's specific location cannot be determined.
Although various embodiments have been described and illustrated herein, various other means and/or structures for performing the function and/or obtaining the result and/or one or more of the advantages described herein may be utilized and each of such variations and/or modifications is considered to be within the scope of the embodiments described herein. More generally, all parameters, dimensions, materials, and configurations described herein are meant to be exemplary, and the actual parameters, dimensions, materials, and/or configurations will depend upon the specific application or applications for which the teaching(s) is/are used. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation, many equivalents to the specific embodiments described herein. It is, therefore, to be understood that the foregoing embodiments are presented by way of example only and that, within the scope of the appended claims and equivalents thereto, embodiments other than those specifically described and claimed may be practiced. Embodiments of the present disclosure are directed to various individual features, systems, articles, materials, kits, and/or methods described herein. In addition, any combination of two or more such features, systems, articles, materials, kits, and/or methods, if such features, systems, articles, materials, kits, and/or methods are not mutually inconsistent, is included within the scope of the present disclosure.
Claims (20)
1. A method implemented by one or more processors, the method comprising:
determining that the user input of the user refers to a plurality of activity types,
wherein the determination is based on processing of the content of the user input, an
Wherein the plurality of activity types includes a first activity type and a second activity type;
selecting one or more activity instances of the first activity type and the second activity type based on a preference metric of the user;
generating a plurality of ordered sets of the activity instances, wherein each of the plurality of ordered sets of the activity instances comprises a corresponding one of the activity instances of each of the first activity type and the second activity type;
for each of the active instances in the plurality of ordered sets of active instances:
determining a feasibility score based on features associated with each of the activity instances;
selecting a subset of the plurality of sorted sets based on the feasibility scores, the subset comprising at least a given sorted set of the activity instances;
causing representations of at least the given sorted set to be presented at the client device in response to the selection; and
in response to receiving a selection of a given sorted set of the subset:
causing the client device to interact with at least one remote computer system upon validation of at least the corresponding first activity instance and the corresponding second activity instance of the given ordered set.
2. The method of claim 1, wherein the respective characteristics of the activity instance for at least one of the plurality of activity types include location characteristics defining a geographic location of the activity instance, and wherein determining the feasibility score for each of the plurality of ordered sets of the activity instance includes determining the feasibility score for a respective ordered set based on the location characteristics of the corresponding activity instance.
3. The method of claim 2, further comprising:
identifying a location indicator for at least one of the users, wherein determining the feasibility score for each of the plurality of ordered sets of activity instances comprises determining the feasibility score for a respective ordered set based on a proximity of the user to the geographic location of at least one of the respective activity instances.
4. The method of claim 1, wherein the respective characteristic of the activity instance of at least one of the plurality of activity types includes a temporal characteristic defining a time of the activity instance, and wherein determining the feasibility score for each of the plurality of ordered sets of the activity instance includes determining a feasibility of executing the activity instance of a respective ordered set based on the temporal characteristic of the corresponding activity instance.
5. The method of claim 4, further comprising:
identifying a time constraint indicator for at least one of the users, wherein determining the feasibility score for each of the plurality of ordered sets of activity instances comprises determining the feasibility of the user executing the activity instance in the respective ordered set based on the time constraint indicator for at least one of the users.
6. The method of claim 5, wherein the time constraint indicator for the one of the users is identified from an electronic calendar of the one of the users.
7. The method of claim 1, further comprising:
identifying an indication of a specified activity in the communication topic; and
determining additional activity types for the specified activity, wherein selecting one or more activity instances for each of the plurality of activity types comprises: one or more activity instances are selected for the additional activity type.
8. The method of claim 7, wherein the activity instance comprises the specified activity.
9. The method of claim 1, wherein the user input is provided as part of an ongoing communication session between a group of users.
10. The method of claim 9, wherein causing the at least one client device to present the representation of the given set of activity instances occurs without presenting the representation in a transcription in the ongoing communication session.
11. A method implemented by one or more processors, the method comprising:
determining a collection of activity types based on user interface inputs of one or more users of a group of users, wherein the collection of activity types includes at least a first activity type and a second activity type;
selecting one or more activity instances for each activity type in the collection, wherein the selecting the one or more activity instances for each activity type in the collection is based on a preference metric for each of the users, and wherein the activity instances include a plurality of activity instances of the first activity type and a plurality of activity instances of the second activity type;
generating a plurality of sets of the activity instances, wherein each of the plurality of sets of activity instances comprises a corresponding one of the activity instances for each activity type in the set;
for each of the active instances in the plurality of sets of active instances:
generating a feasibility score based on features associated with each of the activity instances;
selecting a subset of the plurality of sets of the activity instances based on the feasibility scores, the subset including at least a given set of the activity instances; and
causing at least one client device of at least one of the users to present representations of the given set of the activity instances in response to the selection.
12. The method of claim 11, wherein the user interface input is provided as part of an ongoing communication session between the group of users.
13. The method of claim 12, wherein causing the at least one client device to present the representation of the given set of the activity instances occurs without presenting the representation in a transcription in the ongoing communication session.
14. The method of claim 11, further comprising:
receiving a positive user interface input in response to the presented representation; and
in response to receiving a positive user interface input in response to the representation being presented:
incorporating the representation or additional representations of the given set of activity instances into a transcription of the ongoing communication session.
15. The method of claim 11, wherein the respective characteristics of the activity instances of at least one activity type in the set comprise location characteristics defining geographic locations of the activity instances, and wherein determining the feasibility score for each of the plurality of sets of the activity instances comprises determining the feasibility scores for respective ordered sets based on the location characteristics of the corresponding activity instance.
16. The method of claim 15, further comprising:
identifying a location indicator of at least one of the users, wherein determining the feasibility score for each of the plurality of sets of activity instances comprises determining the feasibility scores for a respective set based on a proximity of the user to the geographic location of at least one of the respective activity instances.
17. A system comprising one or more processors and memory storing instructions that, in response to execution of the instructions by the one or more processors, cause the one or more processors to:
determining a collection of activity types based on user interface inputs of one or more users of a group of users, wherein the collection of activity types includes at least a first activity type and a second activity type;
selecting one or more activity instances for each activity type in the collection, wherein the selecting the one or more activity instances for each activity type in the collection is based on a preference metric for each of the users, and wherein the activity instances comprise a plurality of activity instances of the first activity type and a plurality of activity instances of the second activity type;
generating a plurality of sets of the activity instances, wherein each of the plurality of sets of the activity instances comprises a corresponding one of the activity instances for each activity type in the set;
for each of the active instances in the plurality of sets of active instances:
generating a feasibility score based on features associated with each of the activity instances;
selecting a subset of the plurality of sets of the activity instances based on the feasibility scores, the subset including at least the given set of the activity instances; and
causing at least one client device of at least one of the users to present a representation of the given set of the activity instances in response to the selection.
18. The system of claim 17, wherein the user interface input is provided as part of an ongoing communication session between the group of users.
19. The system of claim 18, wherein causing the at least one client device to present the representation of the given set of the activity instances occurs without presenting the representation in a transcription in the ongoing communication session.
20. The system of claim 17, wherein the instructions further comprise instructions to:
receiving a positive user interface input in response to the presented representation; and
in response to receiving a positive user interface input in response to the representation being presented:
incorporating the representation or additional representations of the given set of activity instances into a transcription of the ongoing communication session.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202211137479.4A CN115550304B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus and storage medium for determining a set of active instances for a group of users |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN201880094615.1A CN112335205B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus, and storage medium for determining a set of activity instances for a group of users |
CN202211137479.4A CN115550304B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus and storage medium for determining a set of active instances for a group of users |
PCT/US2018/047616 WO2020040762A1 (en) | 2018-08-22 | 2018-08-22 | Automatically resolving, with reduced user inputs, a set of activity instances for a group of users |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880094615.1A Division CN112335205B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus, and storage medium for determining a set of activity instances for a group of users |
Publications (2)
Publication Number | Publication Date |
---|---|
CN115550304A true CN115550304A (en) | 2022-12-30 |
CN115550304B CN115550304B (en) | 2023-10-10 |
Family
ID=69591213
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202211137479.4A Active CN115550304B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus and storage medium for determining a set of active instances for a group of users |
CN201880094615.1A Active CN112335205B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus, and storage medium for determining a set of activity instances for a group of users |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880094615.1A Active CN112335205B (en) | 2018-08-22 | 2018-08-22 | Method, apparatus, and storage medium for determining a set of activity instances for a group of users |
Country Status (4)
Country | Link |
---|---|
US (4) | US11108889B2 (en) |
KR (2) | KR102576179B1 (en) |
CN (2) | CN115550304B (en) |
WO (1) | WO2020040762A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102576179B1 (en) | 2018-08-22 | 2023-09-07 | 구글 엘엘씨 | Automatically resolving, with reduced user inputs, a set of activity instances for a group of users |
WO2020131138A1 (en) * | 2018-12-20 | 2020-06-25 | Google Llc | Map search recommendation system based on image content analysis driven geo-semantic index |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060224938A1 (en) * | 2005-03-31 | 2006-10-05 | Google, Inc. | Systems and methods for providing a graphical display of search activity |
US20100223212A1 (en) * | 2009-02-27 | 2010-09-02 | Microsoft Corporation | Task-related electronic coaching |
WO2011088053A2 (en) * | 2010-01-18 | 2011-07-21 | Apple Inc. | Intelligent automated assistant |
CN106716472A (en) * | 2014-07-23 | 2017-05-24 | 通讯数字频道集团私人有限公司 | Computer-implemented method of and system for running a marketing campaign |
US20170180294A1 (en) * | 2015-12-21 | 2017-06-22 | Google Inc. | Automatic suggestions for message exchange threads |
CN107430724A (en) * | 2015-05-11 | 2017-12-01 | 谷歌公司 | Activity-triggered |
Family Cites Families (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060242232A1 (en) * | 2005-03-31 | 2006-10-26 | International Business Machines Corporation | Automatically limiting requests for additional chat sessions received by a particula user |
US20100223341A1 (en) | 2009-02-27 | 2010-09-02 | Microsoft Corporation | Electronic messaging tailored to user interest |
US8843834B2 (en) * | 2009-08-28 | 2014-09-23 | Apple Inc. | Method and apparatus for initiating and managing chat sessions |
US9203796B2 (en) * | 2010-11-12 | 2015-12-01 | Facebook, Inc. | Messaging system with multiple messaging channels |
US9122757B1 (en) * | 2011-06-19 | 2015-09-01 | Mr. Buzz, Inc. | Personal concierge plan and itinerary generator |
US20140031060A1 (en) * | 2012-07-25 | 2014-01-30 | Aro, Inc. | Creating Context Slices of a Storyline from Mobile Device Data |
US20160321560A1 (en) * | 2015-04-30 | 2016-11-03 | Microsoft Technology Licensing, Llc | Opportunity surfacing machine learning framework |
US20160358065A1 (en) * | 2015-06-05 | 2016-12-08 | Microsoft Technology Licensing, Llc | Personally Impactful Changes To Events of Users |
CN105205133A (en) * | 2015-09-15 | 2015-12-30 | 小米科技有限责任公司 | Information collection method and device |
US10769189B2 (en) * | 2015-11-13 | 2020-09-08 | Microsoft Technology Licensing, Llc | Computer speech recognition and semantic understanding from activity patterns |
US11429883B2 (en) * | 2015-11-13 | 2022-08-30 | Microsoft Technology Licensing, Llc | Enhanced computer experience from activity prediction |
US10331221B2 (en) * | 2016-03-29 | 2019-06-25 | SessionCam Limited | Methods for analysing user interactions with a user interface |
CN106302996B (en) * | 2016-07-29 | 2020-01-31 | 腾讯科技（深圳）有限公司 | Message display method and device |
CN107809372A (en) * | 2016-09-08 | 2018-03-16 | 阿里巴巴集团控股有限公司 | The generation method of activity reminder message, movable based reminding method and device |
US11113721B2 (en) * | 2017-07-25 | 2021-09-07 | Adobe Inc. | Dynamic sentiment-based mapping of user journeys |
KR102576179B1 (en) * | 2018-08-22 | 2023-09-07 | 구글 엘엘씨 | Automatically resolving, with reduced user inputs, a set of activity instances for a group of users |
-
2018
- 2018-08-22 KR KR1020227034735A patent/KR102576179B1/en active IP Right Grant
- 2018-08-22 CN CN202211137479.4A patent/CN115550304B/en active Active
- 2018-08-22 WO PCT/US2018/047616 patent/WO2020040762A1/en active Application Filing
- 2018-08-22 US US16/617,367 patent/US11108889B2/en active Active
- 2018-08-22 CN CN201880094615.1A patent/CN112335205B/en active Active
- 2018-08-22 KR KR1020207035648A patent/KR102453798B1/en active IP Right Grant
-
2021
- 2021-08-30 US US17/461,384 patent/US11575729B2/en active Active
-
2023
- 2023-02-03 US US18/105,696 patent/US11843655B2/en active Active
- 2023-10-20 US US18/382,362 patent/US20240048606A1/en active Pending
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060224938A1 (en) * | 2005-03-31 | 2006-10-05 | Google, Inc. | Systems and methods for providing a graphical display of search activity |
US20100223212A1 (en) * | 2009-02-27 | 2010-09-02 | Microsoft Corporation | Task-related electronic coaching |
WO2011088053A2 (en) * | 2010-01-18 | 2011-07-21 | Apple Inc. | Intelligent automated assistant |
CN106716472A (en) * | 2014-07-23 | 2017-05-24 | 通讯数字频道集团私人有限公司 | Computer-implemented method of and system for running a marketing campaign |
CN107430724A (en) * | 2015-05-11 | 2017-12-01 | 谷歌公司 | Activity-triggered |
US20170180294A1 (en) * | 2015-12-21 | 2017-06-22 | Google Inc. | Automatic suggestions for message exchange threads |
Non-Patent Citations (1)
Title |
---|
侯君;刘魁;李千目;: "基于ESSVM的分类推荐", 数据分析与知识发现, no. 03 * |
Also Published As
Publication number | Publication date |
---|---|
KR20220139464A (en) | 2022-10-14 |
WO2020040762A1 (en) | 2020-02-27 |
US20200344327A1 (en) | 2020-10-29 |
CN112335205B (en) | 2022-10-11 |
KR102576179B1 (en) | 2023-09-07 |
US20240048606A1 (en) | 2024-02-08 |
US11108889B2 (en) | 2021-08-31 |
US20230188592A1 (en) | 2023-06-15 |
CN112335205A (en) | 2021-02-05 |
CN115550304B (en) | 2023-10-10 |
KR20200142111A (en) | 2020-12-21 |
US11575729B2 (en) | 2023-02-07 |
US20210392205A1 (en) | 2021-12-16 |
US11843655B2 (en) | 2023-12-12 |
KR102453798B1 (en) | 2022-10-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP6780001B2 (en) | Automatic suggestions and other content for messaging applications | |
US20200092243A1 (en) | Automatic suggestions for message exchange threads | |
US20170093967A1 (en) | Systems and methods for managing group activities over a data network | |
US20170308866A1 (en) | Meeting Scheduling Resource Efficiency | |
US10469275B1 (en) | Clustering of discussion group participants | |
EP2916273A1 (en) | System and method providing expert audience targeting | |
US20160063560A1 (en) | Accelerating engagement of potential buyers based on big data analytics | |
US20140067544A1 (en) | Providing offer(s) to users in a social networking system based on compatibility of the users with the offer(s) | |
WO2013177280A1 (en) | A system for and method of analyzing and responding to user generated content | |
US11843655B2 (en) | Automatically resolving, with reduced user inputs, a set of activity instances for a group of users | |
EP3107060A1 (en) | Identifying service providers for electronically received service requests and using stored account data to connect the requester with providers | |
US20150058148A1 (en) | Systems and methods for automatically adjusting pricing for group activities over a data network | |
US20170098180A1 (en) | Method and system for automatically generating and completing a task | |
US20230063603A1 (en) | Generating tasks from chat stream data | |
US20210312000A1 (en) | Live bi-directional video/audio feed generation between a consumer and a service provider | |
US10877784B1 (en) | Determining and servicing user intent with a virtual assistant | |
WO2020033117A1 (en) | Dynamic and continous onboarding of service providers in an online expert marketplace | |
JP2020126392A (en) | Selection device, selection method, and selection program | |
Zhao et al. | Association rules analysis between brand post characteristics and consumer engagement on social media | |
US20220245158A1 (en) | Recommendation and prediction engines for virtual and hybrid events | |
US11836204B1 (en) | Social collaboration platform for facilitating recommendations | |
US20230386459A1 (en) | Apparatus, platform, method and medium for intention importance inference | |
US20230342726A1 (en) | Method for scheduling live call with unavailable service provider |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
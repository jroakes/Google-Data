US10096114B1 - Determining multiple camera positions from multiple videos - Google Patents
Determining multiple camera positions from multiple videos Download PDFInfo
- Publication number
- US10096114B1 US10096114B1 US14/092,413 US201314092413A US10096114B1 US 10096114 B1 US10096114 B1 US 10096114B1 US 201314092413 A US201314092413 A US 201314092413A US 10096114 B1 US10096114 B1 US 10096114B1
- Authority
- US
- United States
- Prior art keywords
- frames
- frame
- camera
- video
- selecting
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/20—Analysis of motion
- G06T7/246—Analysis of motion using feature-based methods, e.g. the tracking of corners or segments
-
- G06T7/0042—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T7/00—Image analysis
- G06T7/70—Determining position or orientation of objects or cameras
- G06T7/73—Determining position or orientation of objects or cameras using feature-based methods
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N17/00—Diagnosis, testing or measuring for television systems or their details
- H04N17/002—Diagnosis, testing or measuring for television systems or their details for television cameras
Definitions
- Video sharing is increasingly popular and many video delivery systems and social networks explicitly provide a video sharing function.
- a video delivery system may allow individuals to upload videos of a specific event, such as a concert or sporting event.
- many such event-related videos may be uploaded.
- the videos may be taken by non-professional videographers operating consumer-grade video recorders. While the videos may all relate to a specific event, the amateur nature of the videos may make subsequent viewing of the videos difficult.
- a method for determining the position of multiple cameras relative to each other includes at a processor, receiving video data from at least one video recording taken by each camera; selecting a subset of frames of each video recording, including determining relative blurriness of each frame of each video recording, selecting frames having a lowest relative blurriness, counting features points in each of the lowest relative blurriness frames, and selecting for further analysis, lowest relative blurriness frames having a highest count of feature points; and processing each selected subset of frames from each video recording to estimate the location and orientation of each camera.
- FIG. 1 illustrates an example environment in which positions of multiple cameras are estimated based on video clips recorded by multiple cameras
- FIGS. 2A-2C illustrate an example system for estimating positions of multiple cameras based on video clips recorded by multiple cameras
- FIGS. 3A-3C illustrate an example camera location estimation
- FIGS. 4-8 are flowcharts illustrating example methods for estimating positions of multiple cameras.
- a video delivery system may allow individuals to upload and share videos. Many individuals may upload videos for the same event, such as a concert or a sporting event. The individuals may record the event from widely varying locations (in two- or three-dimensions). Thus, multiple video cameras, each having unique, and sometimes widely varying, x, y, z, coordinates, may record the same event over an identical or similar period.
- Amateur videos represent a significant proportion of videos available on many online video delivery systems. For example, at a popular sporting event, dozens or hundreds of audience members may make video recordings using non-professional equipment such as smart phones or dedicated, but consumer-grade, video cameras. Many of these amateur videos may be uploaded to a video delivery system. However, the video delivery system may not be able to relate these many videos in a manner that allows a video delivery system user to efficiently and easily browse the videos. For example, when the videos are available online, a search may reveal all videos for an event, but picking which video(s) to watch may be an error-prone process. Presenting some geometric interpretation of the position from which the videos were recorded may be a useful interface to allow viewers to have a more informed choice as to which videos to view.
- the systems and methods for estimating the position of multiple cameras used to record multiple videos.
- One aspect of the systems and methods is that the multiple videos may have a common time reference, such as a same wall clock start time.
- the systems and method do not require time synchronization between and among the multiple videos in order to estimate positions of the multiple cameras.
- the camera position estimates then may be used to relate videos of an event to each other. For example, a video clip of a walk off home run in a championship baseball game may be recorded by an individual behind home plate, an individual in left field, and an individual in right field.
- the positions of each of the three cameras may be estimated using the herein disclosed systems and methods.
- positions of the cameras may be used to relate each of the three video clips in a two- or three-dimensional space. Subsequently, a video delivery system user may be able to browse and view the three related videos of the winning home run based on data related to the estimated positions.
- a video includes a video clip, a video sequence, or any arrangement of video frames. Videos may be long (e.g., two hours) or short (e.g., seconds); many videos have a duration of about five minutes. A person, viewer, visitor, subscriber, or individual may access a video delivery system or other Web site to search for and view these videos.
- the herein disclosed systems and methods address a challenge presented by the (usually) poor quality of typical consumer videos.
- the systems use multiple frames in each video clip to improve the accuracy of camera position estimates. More specifically, the systems estimate (at least to within a few meters) camera locations, given unsynchronized video clips plausibly containing the same scene. The video clips likely will be recorded by nonprofessional camera operators without an intrinsic calibration of the camera's optical system.
- the video metadata may not be as complete as that commonly included in files made by digital still cameras (digital still camera data files typically record camera model, image sensor dimensions, and focal length, for example).
- the herein disclosed systems may infer some or all necessary information from the video clip itself, while also addressing camera motion-blur and low quality optics, to produce improved quality camera position estimates.
- the improved camera position estimates then may enable an event-based video browser, which may allow viewers to see not only what other people were watching but also where the other people were when they were recording the event.
- a video delivery system may use the improved estimated camera positions to provide an enhanced browsing experience for baseball fans.
- the systems may use rotation of the video camera (e.g., the camera is panned (yawed, or pivoted) around its vertical axis (In reality, the camera also may be subject to pitch and roll effects, in addition to yaw, or panning)) to find the camera's location through, for example, a triangulation process.
- a location determination may be an assumption that the camera is not zoomed; that is, the camera lens remains at a fixed focal length.
- the systems may detect, and then compensate for, camera zoom. In a situation where no camera zoom is detected or assumed, the location of the camera may be estimated using a triangulation process. These two factors of rotation and zoom are referred to herein as orientation and scale.
- a first aspect of a method for estimating camera positions begins by selecting a subset of frames of each of the multiple video clips on the basis of (1) sharpness, and (2) a number of feature points appearing in the sharp frames. This results in the selection of the most informative frames without invoking complicated multi-frame matching algorithms. Using the feature points as a further fitter of the sharp frames is advantageous because the feature points themselves may be used for subsequent analysis in the methods. Furthermore, this aspect of the method exploits an assumption that if the video clips contain enough static background objects (e.g., concert walls, stadium buildings) then time synchronization of the videos is not necessary to extract position information.
- static background objects e.g., concert walls, stadium buildings
- a second aspect of the method determines matches between all frames of all video clips identified in the first aspect.
- each frame of a video clip is compared to each frame of that video clip and to each of the frames from each of the other video clips.
- the comparison results may be displayed in a histogram. Frames belonging to a modal scale and orientation bin of the histogram then may be selected for further processing in the method.
- the method solves for focal lengths of each of the multiple cameras using a self, or internal, calibration based on rotations of the cameras.
- FIG. 1 illustrates an example environment in which positions for multiple cameras are estimated based on video clips provided by multiple video cameras.
- environment 10 shows a concert setting with rock star 0 initially positioned at point A between towers 2 and 3 and backed by structure 4 .
- Rock star 0 subsequently moves to position B.
- Attendees 5 , 6 , and 7 operate, respectively, video cameras C 5 , C 6 , and C 7 .
- the attendees 5 and 7 pivot (by angle ⁇ ) their respective cameras C 5 and C 7 to follow the movement of rock star 0 from point A to point B.
- the cameras C 5 and C 7 are shown pivoting without translation (that is, the z-axis center points of the cameras remain at their initial x, y locations).
- the herein disclosed systems may provide camera position estimates even with some camera translation.
- Camera C 6 is operated without rotation (being focused on rock star 0 ).
- panning of the cameras C 5 and C 7 exposes the cameras to differing features points.
- tower 2 comes within the view of the camera C 7 and the perspective of structure 4 changes.
- Rotation of the cameras C 5 and C 7 provides an opportunity to determine their x, y locations.
- the location of camera C 6 may be unknown or undeterminable based only on operation of the camera C 6 .
- the camera C 6 could be in position 6 or position 6 ′.
- the ambiguity may result from the fact that during the recording, camera C 6 may be at position 6 ′ and zoomed, or at position 6 without zoom.
- the systems may estimate the position of camera C 6 without any rotation by the camera. For example camera zooming will change the observed spacing between and among features points from frame to frame.
- the video clips from cameras C 5 and C 7 may be processed by the herein disclosed systems generally as follows.
- Video camera position estimation system 100 receives as inputs, data for video clips v 5 and v 7 (from cameras C 5 and C 7 , respectively).
- the video clips v 5 and v 7 may have a common time reference, such as a common wall clock start time.
- the system 100 selects the sharpest frames in every time interval of a specified length, such as two seconds; identifies, for each sharp frame so selected, the number of feature points in that frame (using a feature point detection process such as a gradient change of a threshold amount); and selects a specified number of frames (e.g., 10 frames) having the most feature points (In FIG. 1 , examples of feature points include edges of towers 2 and 3 , and structure 4 ).
- the system 100 calculates feature point matches between all selected frames in clips v 5 and all selected frames in v 7 .
- the system 100 selects frame p having the most number of filtered feature matches with any other frame in clip v 7 . This step allows the system 100 to use data from frames most likely to produce the best estimate of camera position.
- the system 100 selects another frame q within a specified time (e.g., within two seconds, plus or minus) of frame p in the video clip v 5 frame q having the properties of a) low blurriness according to a blurriness threshold; b) high number of feature matches (according to the filtered feature matches above); c) a non-zero apparent rotation (i.e., ⁇ >0 according to a rotation threshold); and d) no apparent scale change (zoom) between the two frames p and q, according to a scale threshold.
- a specified time e.g., within two seconds, plus or minus
- the system 100 uses frames p and q for each clip v 5 and v 7 , and the filtered feature matches between the frames, to estimate camera focal parameters such as focal length.
- the system 100 estimates the absolute location and orientation of the cameras C 5 and C 7 and the positions relative to each other.
- the thus-estimated camera location and orientation data then may be used as an input to an event-based browser to guide viewers to video clips related to the same event.
- FIGS. 2A-2C illustrate an example system for estimating locations and orientations of multiple cameras based on video clips recorded by the cameras.
- system 20 includes processor 22 , memory 24 , input/output 26 and data store 30 , all of which are coupled by data and communications bus 28 .
- the data store 30 includes database 32 and system 100 , which may be implemented on a non-transitory computer-readable storage medium.
- the system 100 includes instructions that when executed by processor 22 provides for estimating locations and orientations of multiple cameras based on video clips provided by the cameras.
- the video clip data may be stored in the database 32 .
- FIG. 2B illustrates example components of system 100 .
- system 100 includes video intake module 110 , video frame identifier 120 , sharp frame selector 130 , feature point module 140 , feature point extractor 150 , feature point match module 160 , feature match filter 170 , camera focal parameter estimator 180 , and camera location and orientation estimator 190 .
- Video intake module 110 receives raw video data for the video clips to be analyzed and performs initial processing of the data; in an aspect, the module 110 defines a common time reference and extracts any camera metadata that may be recorded with the video clips.
- the video metadata may include length of the recording and frame rate.
- Video frame identifier 120 identifies frames of the video clips to be used in the camera position estimates.
- the video frame identifier 120 may be used to set threshold values for other components of the system 100 .
- the sharp frame selector 130 performs a filtering process over the frames of a video clips.
- user-generated recordings of popular events tend to be unstable, with camera-shake and low-cost sensor hardware leading to many blurry frames. Such blurry frames may not be useful for accurate extraction of feature points.
- sharp frame selector 130 selects the sharpest frame (or frames) in time intervals of a specified length. At a frame rate of 30 frames per second, a five minute video clip will have 9000 frames. With a 1920 ⁇ 1280 pixel resolution, exhaustive processing would have to consider 22 billion pixels. For reasons of computational tractability, the sharp frame selector 130 culls a video clip to produce a manageable collection of frames.
- the frame selector 130 uses a relative blurriness measure that compares blurriness between frames of video clip video clip.
- the sharp frame selector 130 may perform this comparison using a sliding window approach. The sliding window may be set to two seconds, for example.
- Selection of the sliding window size involves a tradeoff between ensuring that brief changes in the video scenes are not lost and excessive repetition of barely changing scenes.
- An operator may select the window size based on the dynamic characteristics of the video clips.
- the window size may have a default setting (two seconds) or may be determined by the sharp frame selector 130 using an algorithm that considers the subject matter of the video dips, for example.
- Feature point module 140 identifies, for each selected sharp frame, the number of feature points in the selected sharp frame (using a feature point detection process such as a gradient change of a threshold amount). The feature point extractor 140 then selects a specified number of frames (e.g., 10 sharp frames) having the most feature points (in FIG. 1 , examples of feature points include edges of towers 2 and 3 and structure 4 ). The number of frames to be selected may be the function of the length of the video clip and the nature, or subject of the video clip.
- a feature point detection process such as a gradient change of a threshold amount
- the net result of processing the video clips by the frame selector 130 and the feature point module 140 is a small size, filtered set of frames for each video clip for subsequent analysis by components of the system 100 .
- the filtered set of frames (e.g., 10 per video clip) should have as little blur as possible and as many feature points as possible.
- the feature point extractor 150 processes all of the highest scoring frames with an algorithm that obtains a set of key feature point descriptors and respective location information for the descriptors for each frame.
- Feature point match module 160 processes the filtered sets of frames (that is, the highest scoring frames in terms of sharpness and feature points) from each video clip and matches each frame of each set against each frame of every other set. Matches may be determined from fixed background structures such as the key feature point descriptors.
- the feature match filter 170 selects the matches having the highest count to use in computing a modal scale and orientation estimate for each camera. That is, matching frames falling within the histogram bin having the highest count are used for subsequent processing.
- an output of the feature match module 160 and the feature match filter 170 is a set of histograms of scale and orientation considering all matches determined by the module 160 .
- Camera parameter estimator 180 estimates video camera parameters such as camera focal length.
- the cameral parameter estimator 180 exploits the fact that if two image-planes formed from two frames are related by some rotation, the camera must lie at the point where the plane normals intersect, thus resolving any camera depth ambiguity, as can be seen with reference to FIGS. 3A-3C . Furthermore, detection of zooming in a video clip may be possible by monitoring changing spacing of common feature points between frames.
- the estimator 180 constructs an intrinsic camera matrix as:
- ⁇ x and ⁇ y express the optical focal length in pixels in the x and y directions, respectively, ⁇ is the pixel skewness coefficient, and u 0 and v 0 are coordinates of a principal point—where the camera's optical axis cuts the image plane. See FIG. 2C .
- the values for ⁇ x and ⁇ y may be estimated using a pair of suitably-chosen frames, as in FIGS. 3A-3C , so long as some camera rotation (in the x-y plane) occurs between frames.
- Candidate frame-pairs may be selected by ensuring a reasonable pixel coordinate displacement of key feature points from one frame to another. The selected frames need not be sequential.
- the system 100 may estimate the values from the frames whose features will be used in three-dimensional reconstruction. Values of ⁇ estimated at a different zoom level may lead to poor reconstruction otherwise.
- the frame that has the greatest number of filtered feature matches with another frame in a different video is selected as the frame used in reconstruction, and hence is one of the pair used in the ⁇ estimation.
- the second frame of the pair is chosen by referring back to the blurriness measure, in the chosen time window about the reconstruction frame, and applying the above described matching and filtering processes of techniques described above to those frames with a low relative blurriness.
- the frame having the greatest number of feature matches, some two-dimension key feature point displacement, and no apparent inter-key feature point scaling (which is indicative of zooming) is selected.
- the focal length estimation is sensitive to rotations between the frames used in the reconstruction, and reliable independent estimation of ⁇ x and ⁇ y depends on having some rotation of the camera. If no such rotation is apparent from two-dimensional key feature point displacement, the system 100 may select one of the other top ten frames, and find for the frame, a frame pair that does have some small axial rotation.
- Camera position and orientation estimator 190 provides an estimate of the camera's location and orientation. Equipped with internally calibrated cameras, and mostly correct feature matches between video sequences, the estimator 190 performs an extrinsic calibration, estimating the rotations and translations between each of the video cameras. Following this processing, the estimator 190 provides estimates of relative camera locations and orientations of all cameras used for recording the video clips.
- FIGS. 3A-3C illustrate an aspect of an example camera location and orientation estimation process.
- Having internal calibration data for the camera(s) may improve the accuracy of a three-dimensional reconstruction of feature points in a camera view into a real world space.
- apparent camera position e.g., camera C 6 of FIG. 1
- camera zoom may be affected by camera zoom; that is, the camera parameters may make a camera located away from a real world object appear much closer than the camera actually is.
- Contemporary video formats do not include metadata such as may be found, for example, in a JPEG file. Accordingly, the system 100 may exploit a video sequence in a different way. A series of frames close in time may capture almost the same scene and the camera's optical system is unlikely to vary during this time. Should the video camera rotate during this time, camera self-calibration may be possible, assuming negligible translation of the camera, relative to the distance to the real world objects. If two image-planes formed from two frames are related by some rotation, the camera that recorded the frames must lie at the point where the plane normals intersect, thus resolving any camera depth ambiguity, as can be seen with reference to FIGS. 3A-3C . Furthermore, detection of zooming in a video clip may be possible by monitoring changing spacing of common feature points between frames.
- FIG. 3A illustrates a frame 301 from a video clip of a sporting event taken by a consumer-grade video camera. As shown, the camera view includes the first base line and a runner rounding second base.
- FIG. 3B illustrates a subsequent frame 302 of the same video clip with the camera panned left to center on center field.
- FIG. 3C shows the relationship of frames 301 and 302 .
- the optical axis represented by lines 311 and 312 intersect at point D.
- point D represents an estimate of the location of the camera.
- FIGS. 4-8 are flowcharts illustrating example methods for estimating positions of multiple video cameras.
- FIG. 4 illustrates an overall method 400 for determining relative positions of video cameras recording an event.
- system 100 receives as an input, video data for two or more video clips, each of the video clips being recorded by a different video camera.
- the system 100 creates a frame index, assigns each frame of the video clips a sequential number, and stores the frame index and the video data for subsequent processing by other components of the system 100 .
- the system 100 finds non-blurry frames with many feature points from each video clip.
- the system 100 extracts and matches feature points, with a high degree of confidence, from one frame to another frame, both between frames from one video clip, and between frames from differing video clips.
- the system 100 estimates the camera parameters (scale and orientation), inferring parameters of each camera's optical system (that is, the system 100 performs an internal calibration for each camera), such as focal length and pixel aspect ratio.
- the system 100 performs a three-dimensional reconstruction, using the internal calibration parameters and matched feature point sets, calculating camera pose (extrinsic calibration) and three-dimensional scene coordinates.
- FIG. 5 is a flow chart of example frame selection process 500 .
- the system 100 accesses stored data from each of the video clips, along with the frame index.
- the system 100 begins a frame-to-frame comparison process to identify frames having low relative blurriness.
- the system 100 applies x- and y-direction filters to evaluate the relative blurriness of each frame of the video clip. Relative blurriness represents how much of a high frequency component of the video signal in a frame compares to that of neighboring frames.
- the system 100 may use an inverse of the sum of squared gradient measure to evaluate the relative blurriness.
- the blurriness measure yields relative image blurriness among similar images when compared to the blurriness of other images.
- the process of block 510 therefore, may be applied to a specific frame and a limited number of neighboring frames where significant scene change is not detected. Significant scene change may occur, for example, if the video camera is panned.
- the system 100 selects frames having a relatively low blurriness among all frames in the video clip.
- the process of block 515 is completed over a sliding window of time.
- the sliding window time may be set at two seconds.
- the system 100 may select one or more frames having the least blurriness out of all 120 frames in a two-second period.
- the system 100 applies a second filtering process to the sharp frames identified in block 515 .
- the processing of block 520 begins when the system 100 applies a feature detector to each of the sharp frames.
- the system 100 then counts the number of features in each sharp frame.
- the system 100 selects a specified number of sharp frames having a highest count of features. In an embodiment, the system, in block 525 , selects ten frames for a video clip of about five minutes. For longer duration video clips, the system 100 may select more than ten frames.
- the method 500 moves to the processing of block 605 .
- FIG. 6 is a flow chart of example feature matching method 600 .
- method 600 begins in block 605 when the system 100 receives the identities of the (ten) sharp frames with high feature counts as a determined by the processing of method 500 .
- the system 100 processes the identified frames for each video clip to identify key feature points and determine location information for each such key feature point.
- key feature points are suitable for matching differing images of an object or scene.
- the key feature points may be invariant to scale and rotation, and partially invariant to changes in illumination and camera viewpoint.
- the system 100 searches over all scales and image locations to identify potential key feature points that do not vary in scale and orientation.
- a difference-of-Gaussian function may be used.
- the key feature points are localized in the frame to determine their location and scale.
- the key feature point orientations may be established.
- local image gradients are measured at the selected scale in the region around each key feature point.
- This process of block 610 transforms the video data into scale-Invariant coordinates relative to key feature points.
- this process generates large numbers of features that can be extracted from a frame.
- the key feature points may be highly distinctive, which allows a single key feature point to be correctly matched with high probability against a large number of other key feature points.
- a matching process of the system 100 compares every frame of a video clip to every other frame in the video clip, and to every frame from every other video clip.
- the process of block 615 occurs in two stages.
- the best candidate match for each key feature point is found by identifying its nearest neighbor in the selected frames.
- the nearest neighbor may be defined as a frame having a key feature point with minimum distance from the key feature point being analyzed. Some features in a frame may not have any correct match in another frame because they arise from background clutter or were not detected in the other frames.
- a more effective measure may be obtained by considering a ratio of the distance of the closest neighbor to that of the second-closest neighbor, and using a high threshold value for the ratio. This measure performs well because correct matches need to have the closest neighbor significantly closer than the closest incorrect match to achieve reliable matching.
- the matches from block 617 are filtered to retain good matches and discard poor matches.
- the system 100 evaluates scale and orientation to distinguish good matches from poor matches.
- the scale and orientation frame-to-frame need not be identical, but should be related. Scale may be related by an approximately constant factor and orientation by an approximately constant difference.
- the system 100 produces a histogram of scaling factors and orientation differences over all matches found to be good in block 619 .
- the thus-constructed histogram may have bins of a predetermined width and a number of matches per bin.
- the system 100 identifies histogram bins having a highest number of matches and in block 630 , selects frames from these highest count bins. Following block 630 , the method 600 moves to processing in block 705 .
- FIG. 7 is a flow chart of example camera focus parameter estimation method 700 .
- the system 100 accesses the filtered frames selected in method 600 .
- the system 100 in the absence of sufficient video camera metadata, begins execution of an internal calibration for each video camera from which a video clip was received.
- the estimator 180 beginning construction of an intrinsic camera matrix of camera focal lengths, pixel skewness and principal point coordinates. See FIG. 2C .
- the estimator 180 identifies candidate frames by determining frame pairs that show some two-dimensional displacement of key feature points, which is indicative of some x-y plane camera rotation.
- the estimator 180 estimates values for focal lengths (expressed in x and y directions) using the pair of frames indicative of some camera rotation in the x-y plane.
- the frame that has the greatest number of filtered feature matches to another frame in a different video is selected as the frame used in reconstruction.
- the estimator 180 determines if some zooming has occurred for the frames that may be used for three-dimensional reconstruction.
- the system 100 may estimate the values from the frames whose features will be used in three-dimensional reconstruction. Values of a estimated at a different zoom level may lead to poor reconstruction otherwise.
- the frame that has the greatest number of filtered feature matches to another frame in a different video is selected as the frame used in reconstruction, and hence is one of the pair used in the ⁇ estimation.
- the second frame of the pair is chosen by referring back to the blurriness measure, in the chosen time window about the reconstruction frame, and applying the above described matching and filtering processes of techniques described above to those frames with a low relative blurriness.
- the frame with the greatest number of feature matches, some two-dimension key feature point displacement, and no apparent inter-key feature point scaling (which is indicative of zooming) is selected.
- the focal length estimation is sensitive to rotations between the frames used in the reconstruction, and reliable independent estimation of ⁇ x and ⁇ y depends on having some rotation of the camera. If no such rotation is apparent from two-dimensional key feature point displacement, the system 100 may select one of the other top ten frames, and find for it a paired frame that does have some small axial rotation.
- FIG. 8 is a flow chart illustrating an example three-dimensional reconstruction process 800 .
- the system 100 begins a process of extrinsic camera calibration, which may involve estimating the rotations and translations of each video camera.
- the method 800 then proceeds, in block 810 , with an estimate of the camera external parameters by using observed pixel coordinates od a number of real world objects observed by the video cameras as seen in the video clips (e.g., the world point X in FIG. 2C ).
- the system 100 estimates the image coordinates of the real world objects using the observed pixel coordinates and the rotations determined by method 700 .
- the system 100 may apply an optimization process, such as a sum of squares process to improve the estimates. Further refinements may be applied.
- the result is, in block 825 , a reconstructed estimate of the world points X. Following this process, all camera positions, are known, as desired.
- the by-product information of relative camera rotations and reconstructed 3D world points may be used then, in block 830 , as an input to an event based browser system, and the process 800 ends.
- the methods and processes disclosed herein are executed using certain components of a computing system (see, for example, FIG. 2A ).
- the computing system includes a processor (CPU) and a system bus that couples various system components including a system memory such as read only memory (ROM) and random access memory (RAM), to the processor. Other system memory may be available for use as well.
- the computing system may include more than one processor or a group or cluster of computing system networked together to provide greater processing capability.
- the system bus may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures.
- a basic input/output (BIOS) stored in the ROM or the like may provide basic routines that help to transfer information between elements within the computing system, such as during start-up.
- the computing system further includes data stores, which maintain a database according to known database management systems.
- the data stores may be embodied in many forms, such as a hard disk drive, a magnetic disk drive, an optical disk drive, tape drive, or another type of computer readable media which can store data that are accessible by the processor, such as magnetic cassettes, flash memory cards, digital versatile disks, cartridges, random access memories (RAM) and, read only memory (ROM).
- the data stores may be connected to the system bus by a drive interface.
- the data stores provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the computing system.
- the computing system may include an input device, such as a microphone for speech and audio, a touch sensitive screen for gesture or graphical input, keyboard, mouse, motion input, and so forth.
- An output device can include one or more of a number of output mechanisms.
- multimodal systems enable a user to provide multiple types of input to communicate with the computing system.
- a communications interface generally enables the computing device system to communicate with one or more other computing devices using various communication and network protocols.
- FIGS. 4-8 are for illustration purposes only and the described or similar steps may be performed at any appropriate time, including concurrently, individually, or in combination.
- many of the steps in the flow chart may take place simultaneously and/or in different orders than as shown and described.
- the disclosed systems may use processes and methods with additional, fewer, and/or different steps.
- Embodiments disclosed herein can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the herein disclosed structures and their equivalents. Some embodiments can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by one or more processors.
- a computer storage medium can be, or can be included in, a computer-readable storage device, a computer-readable storage substrate, or a random or serial access memory.
- the computer storage medium can also be, or can be included in, one or more separate physical components or media such as multiple CDs, disks, or other storage devices.
- the computer readable storage medium does not include a transitory signal.
- the herein disclosed methods can be implemented as operations performed by a processor on data stored on one or more computer-readable storage devices or received from other sources.
- a computer program (also known as a program, module, engine, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
Abstract
A method for determining the position of multiple cameras relative to each other includes at a processor, receiving video data from at least one video recording taken by each camera; selecting a subset of frames of each video recording, including determining relative blurriness of each frame of each video recording, selecting frames having a lowest relative blurriness, counting features points in each of the lowest relative blurriness frames, and selecting for further analysis, lowest relative blurriness frames having a highest count of feature points; and processing each selected subset of frames from each video recording to estimate the location and orientation of each camera.
Description
Video sharing is increasingly popular and many video delivery systems and social networks explicitly provide a video sharing function. For example, a video delivery system may allow individuals to upload videos of a specific event, such as a concert or sporting event. In some situations, many such event-related videos may be uploaded. The videos may be taken by non-professional videographers operating consumer-grade video recorders. While the videos may all relate to a specific event, the amateur nature of the videos may make subsequent viewing of the videos difficult.
A method for determining the position of multiple cameras relative to each other includes at a processor, receiving video data from at least one video recording taken by each camera; selecting a subset of frames of each video recording, including determining relative blurriness of each frame of each video recording, selecting frames having a lowest relative blurriness, counting features points in each of the lowest relative blurriness frames, and selecting for further analysis, lowest relative blurriness frames having a highest count of feature points; and processing each selected subset of frames from each video recording to estimate the location and orientation of each camera.
The detailed description refers to the following figures in which like numerals refer to like items, and in which:
A video delivery system may allow individuals to upload and share videos. Many individuals may upload videos for the same event, such as a concert or a sporting event. The individuals may record the event from widely varying locations (in two- or three-dimensions). Thus, multiple video cameras, each having unique, and sometimes widely varying, x, y, z, coordinates, may record the same event over an identical or similar period.
Amateur videos (i.e., those taken with consumer grade video cameras) represent a significant proportion of videos available on many online video delivery systems. For example, at a popular sporting event, dozens or hundreds of audience members may make video recordings using non-professional equipment such as smart phones or dedicated, but consumer-grade, video cameras. Many of these amateur videos may be uploaded to a video delivery system. However, the video delivery system may not be able to relate these many videos in a manner that allows a video delivery system user to efficiently and easily browse the videos. For example, when the videos are available online, a search may reveal all videos for an event, but picking which video(s) to watch may be an error-prone process. Presenting some geometric interpretation of the position from which the videos were recorded may be a useful interface to allow viewers to have a more informed choice as to which videos to view.
To improve an individual's video browsing experience, disclosed herein are systems and methods for estimating the position of multiple cameras used to record multiple videos. One aspect of the systems and methods is that the multiple videos may have a common time reference, such as a same wall clock start time. However, the systems and method do not require time synchronization between and among the multiple videos in order to estimate positions of the multiple cameras. The camera position estimates then may be used to relate videos of an event to each other. For example, a video clip of a walk off home run in a championship baseball game may be recorded by an individual behind home plate, an individual in left field, and an individual in right field. The positions of each of the three cameras may be estimated using the herein disclosed systems and methods. Furthermore, positions of the cameras may be used to relate each of the three video clips in a two- or three-dimensional space. Subsequently, a video delivery system user may be able to browse and view the three related videos of the winning home run based on data related to the estimated positions.
As used herein, a video includes a video clip, a video sequence, or any arrangement of video frames. Videos may be long (e.g., two hours) or short (e.g., seconds); many videos have a duration of about five minutes. A person, viewer, visitor, subscriber, or individual may access a video delivery system or other Web site to search for and view these videos.
As part of the position estimation process, the herein disclosed systems and methods address a challenge presented by the (usually) poor quality of typical consumer videos. In an embodiment, the systems use multiple frames in each video clip to improve the accuracy of camera position estimates. More specifically, the systems estimate (at least to within a few meters) camera locations, given unsynchronized video clips plausibly containing the same scene. The video clips likely will be recorded by nonprofessional camera operators without an intrinsic calibration of the camera's optical system. In addition, while a video clip may contain some metadata, the video metadata may not be as complete as that commonly included in files made by digital still cameras (digital still camera data files typically record camera model, image sensor dimensions, and focal length, for example). As a result, the herein disclosed systems may infer some or all necessary information from the video clip itself, while also addressing camera motion-blur and low quality optics, to produce improved quality camera position estimates.
The improved camera position estimates then may enable an event-based video browser, which may allow viewers to see not only what other people were watching but also where the other people were when they were recording the event. In the home run example cited above, a video delivery system may use the improved estimated camera positions to provide an enhanced browsing experience for baseball fans.
In an embodiment, the systems may use rotation of the video camera (e.g., the camera is panned (yawed, or pivoted) around its vertical axis (In reality, the camera also may be subject to pitch and roll effects, in addition to yaw, or panning)) to find the camera's location through, for example, a triangulation process. One aspect of such a location determination may be an assumption that the camera is not zoomed; that is, the camera lens remains at a fixed focal length. However, the systems may detect, and then compensate for, camera zoom. In a situation where no camera zoom is detected or assumed, the location of the camera may be estimated using a triangulation process. These two factors of rotation and zoom are referred to herein as orientation and scale.
The description that follows addresses camera position determination by estimating camera rotation in the x, y plane. However, the same or similar systems and methods may be used to estimate camera position based on rotation in any plane.
In an embodiment, a first aspect of a method for estimating camera positions begins by selecting a subset of frames of each of the multiple video clips on the basis of (1) sharpness, and (2) a number of feature points appearing in the sharp frames. This results in the selection of the most informative frames without invoking complicated multi-frame matching algorithms. Using the feature points as a further fitter of the sharp frames is advantageous because the feature points themselves may be used for subsequent analysis in the methods. Furthermore, this aspect of the method exploits an assumption that if the video clips contain enough static background objects (e.g., concert walls, stadium buildings) then time synchronization of the videos is not necessary to extract position information.
A second aspect of the method determines matches between all frames of all video clips identified in the first aspect. In this second aspect, each frame of a video clip is compared to each frame of that video clip and to each of the frames from each of the other video clips. The comparison results may be displayed in a histogram. Frames belonging to a modal scale and orientation bin of the histogram then may be selected for further processing in the method.
In a third aspect, the method solves for focal lengths of each of the multiple cameras using a self, or internal, calibration based on rotations of the cameras.
Camera C6 is operated without rotation (being focused on rock star 0).
As can be seen in FIG. 1 , panning of the cameras C5 and C7 exposes the cameras to differing features points. For example, as camera C7 pans counter-clockwise, tower 2 comes within the view of the camera C7 and the perspective of structure 4 changes.
Rotation of the cameras C5 and C7 provides an opportunity to determine their x, y locations. The location of camera C6 may be unknown or undeterminable based only on operation of the camera C6. For example, the camera C6 could be in position 6 or position 6′. The ambiguity may result from the fact that during the recording, camera C6 may be at position 6′ and zoomed, or at position 6 without zoom. However, the systems may estimate the position of camera C6 without any rotation by the camera. For example camera zooming will change the observed spacing between and among features points from frame to frame.
To estimate camera location, the video clips from cameras C5 and C7 may be processed by the herein disclosed systems generally as follows.
Video camera position estimation system 100 (see FIGS. 2A and 2B ), receives as inputs, data for video clips v5 and v7 (from cameras C5 and C7, respectively). The video clips v5 and v7 may have a common time reference, such as a common wall clock start time.
For each video clip v5 and v7, the system 100 selects the sharpest frames in every time interval of a specified length, such as two seconds; identifies, for each sharp frame so selected, the number of feature points in that frame (using a feature point detection process such as a gradient change of a threshold amount); and selects a specified number of frames (e.g., 10 frames) having the most feature points (In FIG. 1 , examples of feature points include edges of towers 2 and 3, and structure 4).
The system 100 then calculates feature point matches between all selected frames in clips v5 and all selected frames in v7. In an embodiment, the system 100 calculates matches between each of the 10N (in the example of FIG. 1 , N=2) frames, filters the matches based on histograms of scale and orientation, and selects matches belonging to a modal scale and orientation to create filtered feature matches.
Then, for clip v5, the system 100 selects frame p having the most number of filtered feature matches with any other frame in clip v7. This step allows the system 100 to use data from frames most likely to produce the best estimate of camera position.
Next, the system 100 selects another frame q within a specified time (e.g., within two seconds, plus or minus) of frame p in the video clip v5 frame q having the properties of a) low blurriness according to a blurriness threshold; b) high number of feature matches (according to the filtered feature matches above); c) a non-zero apparent rotation (i.e., α>0 according to a rotation threshold); and d) no apparent scale change (zoom) between the two frames p and q, according to a scale threshold.
The system 100 uses frames p and q for each clip v5 and v7, and the filtered feature matches between the frames, to estimate camera focal parameters such as focal length.
Having estimated the camera focal parameters for each camera C5 and C7, the system 100 estimates the absolute location and orientation of the cameras C5 and C7 and the positions relative to each other.
The thus-estimated camera location and orientation data then may be used as an input to an event-based browser to guide viewers to video clips related to the same event.
The sharp frame selector 130 performs a filtering process over the frames of a video clips. As noted above, user-generated recordings of popular events tend to be unstable, with camera-shake and low-cost sensor hardware leading to many blurry frames. Such blurry frames may not be useful for accurate extraction of feature points.
In a first filtering process, sharp frame selector 130 selects the sharpest frame (or frames) in time intervals of a specified length. At a frame rate of 30 frames per second, a five minute video clip will have 9000 frames. With a 1920×1280 pixel resolution, exhaustive processing would have to consider 22 billion pixels. For reasons of computational tractability, the sharp frame selector 130 culls a video clip to produce a manageable collection of frames. The frame selector 130 uses a relative blurriness measure that compares blurriness between frames of video clip video clip. The sharp frame selector 130 may perform this comparison using a sliding window approach. The sliding window may be set to two seconds, for example. Selection of the sliding window size involves a tradeoff between ensuring that brief changes in the video scenes are not lost and excessive repetition of barely changing scenes. An operator (human) may select the window size based on the dynamic characteristics of the video clips. Alternately, the window size may have a default setting (two seconds) or may be determined by the sharp frame selector 130 using an algorithm that considers the subject matter of the video dips, for example.
The net result of processing the video clips by the frame selector 130 and the feature point module 140 is a small size, filtered set of frames for each video clip for subsequent analysis by components of the system 100. The filtered set of frames (e.g., 10 per video clip) should have as little blur as possible and as many feature points as possible.
The feature point extractor 150 processes all of the highest scoring frames with an algorithm that obtains a set of key feature point descriptors and respective location information for the descriptors for each frame.
Feature point match module 160 processes the filtered sets of frames (that is, the highest scoring frames in terms of sharpness and feature points) from each video clip and matches each frame of each set against each frame of every other set. Matches may be determined from fixed background structures such as the key feature point descriptors.
The feature match filter 170 then selects the matches having the highest count to use in computing a modal scale and orientation estimate for each camera. That is, matching frames falling within the histogram bin having the highest count are used for subsequent processing. In an embodiment, an output of the feature match module 160 and the feature match filter 170 is a set of histograms of scale and orientation considering all matches determined by the module 160.
In an embodiment, the estimator 180 constructs an intrinsic camera matrix as:
where αx and αy express the optical focal length in pixels in the x and y directions, respectively, γ is the pixel skewness coefficient, and u0 and v0 are coordinates of a principal point—where the camera's optical axis cuts the image plane. See
Since the values of α can change over time, if a change of zoom level occurs, the system 100 may estimate the values from the frames whose features will be used in three-dimensional reconstruction. Values of α estimated at a different zoom level may lead to poor reconstruction otherwise. In system 100, the frame that has the greatest number of filtered feature matches with another frame in a different video is selected as the frame used in reconstruction, and hence is one of the pair used in the α estimation. The second frame of the pair is chosen by referring back to the blurriness measure, in the chosen time window about the reconstruction frame, and applying the above described matching and filtering processes of techniques described above to those frames with a low relative blurriness. The frame having the greatest number of feature matches, some two-dimension key feature point displacement, and no apparent inter-key feature point scaling (which is indicative of zooming) is selected.
The focal length estimation is sensitive to rotations between the frames used in the reconstruction, and reliable independent estimation of αx and αy depends on having some rotation of the camera. If no such rotation is apparent from two-dimensional key feature point displacement, the system 100 may select one of the other top ten frames, and find for the frame, a frame pair that does have some small axial rotation.
Camera position and orientation estimator 190 provides an estimate of the camera's location and orientation. Equipped with internally calibrated cameras, and mostly correct feature matches between video sequences, the estimator 190 performs an extrinsic calibration, estimating the rotations and translations between each of the video cameras. Following this processing, the estimator 190 provides estimates of relative camera locations and orientations of all cameras used for recording the video clips.
Contemporary video formats do not include metadata such as may be found, for example, in a JPEG file. Accordingly, the system 100 may exploit a video sequence in a different way. A series of frames close in time may capture almost the same scene and the camera's optical system is unlikely to vary during this time. Should the video camera rotate during this time, camera self-calibration may be possible, assuming negligible translation of the camera, relative to the distance to the real world objects. If two image-planes formed from two frames are related by some rotation, the camera that recorded the frames must lie at the point where the plane normals intersect, thus resolving any camera depth ambiguity, as can be seen with reference to FIGS. 3A-3C . Furthermore, detection of zooming in a video clip may be possible by monitoring changing spacing of common feature points between frames.
In block 500, the system 100 finds non-blurry frames with many feature points from each video clip. In block 600, the system 100 extracts and matches feature points, with a high degree of confidence, from one frame to another frame, both between frames from one video clip, and between frames from differing video clips. In block 700, the system 100 estimates the camera parameters (scale and orientation), inferring parameters of each camera's optical system (that is, the system 100 performs an internal calibration for each camera), such as focal length and pixel aspect ratio. In block 800, the system 100 performs a three-dimensional reconstruction, using the internal calibration parameters and matched feature point sets, calculating camera pose (extrinsic calibration) and three-dimensional scene coordinates.
In block 515, the system 100 selects frames having a relatively low blurriness among all frames in the video clip. In an embodiment, the process of block 515 is completed over a sliding window of time. In an aspect the sliding window time may be set at two seconds. Thus, the system 100 may select one or more frames having the least blurriness out of all 120 frames in a two-second period.
In block 520, the system 100 applies a second filtering process to the sharp frames identified in block 515. The processing of block 520 begins when the system 100 applies a feature detector to each of the sharp frames. The system 100 then counts the number of features in each sharp frame. In block 525, the system 100 selects a specified number of sharp frames having a highest count of features. In an embodiment, the system, in block 525, selects ten frames for a video clip of about five minutes. For longer duration video clips, the system 100 may select more than ten frames. Following the processing of block 525, the method 500 moves to the processing of block 605.
In a first stage of block 610, the system 100 searches over all scales and image locations to identify potential key feature points that do not vary in scale and orientation. In an example, a difference-of-Gaussian function may be used. Next, the key feature points are localized in the frame to determine their location and scale. Following, the key feature point orientations may be established. Finally, for each key feature point, local image gradients are measured at the selected scale in the region around each key feature point.
This process of block 610 transforms the video data into scale-Invariant coordinates relative to key feature points. In an aspect, this process generates large numbers of features that can be extracted from a frame. In addition, the key feature points may be highly distinctive, which allows a single key feature point to be correctly matched with high probability against a large number of other key feature points.
In block 615, a matching process of the system 100 compares every frame of a video clip to every other frame in the video clip, and to every frame from every other video clip. The process of block 615 occurs in two stages. In block 817, the best candidate match for each key feature point is found by identifying its nearest neighbor in the selected frames. In an aspect, the nearest neighbor may be defined as a frame having a key feature point with minimum distance from the key feature point being analyzed. Some features in a frame may not have any correct match in another frame because they arise from background clutter or were not detected in the other frames. In an aspect, a more effective measure may be obtained by considering a ratio of the distance of the closest neighbor to that of the second-closest neighbor, and using a high threshold value for the ratio. This measure performs well because correct matches need to have the closest neighbor significantly closer than the closest incorrect match to achieve reliable matching.
In block 619, the matches from block 617 are filtered to retain good matches and discard poor matches. In an aspect, in block 619, the system 100 evaluates scale and orientation to distinguish good matches from poor matches. For good frame matches, the scale and orientation frame-to-frame need not be identical, but should be related. Scale may be related by an approximately constant factor and orientation by an approximately constant difference.
In block 621, the system 100 produces a histogram of scaling factors and orientation differences over all matches found to be good in block 619. The thus-constructed histogram may have bins of a predetermined width and a number of matches per bin.
In block 625, the system 100 identifies histogram bins having a highest number of matches and in block 630, selects frames from these highest count bins. Following block 630, the method 600 moves to processing in block 705.
In an embodiment, in block 715, the estimator 180 beginning construction of an intrinsic camera matrix of camera focal lengths, pixel skewness and principal point coordinates. See FIG. 2C . In block 720, the estimator 180 identifies candidate frames by determining frame pairs that show some two-dimensional displacement of key feature points, which is indicative of some x-y plane camera rotation. In block 725, the estimator 180 estimates values for focal lengths (expressed in x and y directions) using the pair of frames indicative of some camera rotation in the x-y plane.
In system 100, the frame that has the greatest number of filtered feature matches to another frame in a different video is selected as the frame used in reconstruction. In block 730, the estimator 180 determines if some zooming has occurred for the frames that may be used for three-dimensional reconstruction.
Since the values of a can change over time, if a change of zoom level occurs, the system 100 may estimate the values from the frames whose features will be used in three-dimensional reconstruction. Values of a estimated at a different zoom level may lead to poor reconstruction otherwise. In system 100, the frame that has the greatest number of filtered feature matches to another frame in a different video is selected as the frame used in reconstruction, and hence is one of the pair used in the α estimation. The second frame of the pair is chosen by referring back to the blurriness measure, in the chosen time window about the reconstruction frame, and applying the above described matching and filtering processes of techniques described above to those frames with a low relative blurriness. The frame with the greatest number of feature matches, some two-dimension key feature point displacement, and no apparent inter-key feature point scaling (which is indicative of zooming) is selected.
The focal length estimation is sensitive to rotations between the frames used in the reconstruction, and reliable independent estimation of αx and αy depends on having some rotation of the camera. If no such rotation is apparent from two-dimensional key feature point displacement, the system 100 may select one of the other top ten frames, and find for it a paired frame that does have some small axial rotation.
To enable human (and in some instances, machine) user interaction, the computing system may include an input device, such as a microphone for speech and audio, a touch sensitive screen for gesture or graphical input, keyboard, mouse, motion input, and so forth. An output device can include one or more of a number of output mechanisms. In some instances, multimodal systems enable a user to provide multiple types of input to communicate with the computing system. A communications interface generally enables the computing device system to communicate with one or more other computing devices using various communication and network protocols.
The preceding disclosure refers to flow charts and accompanying description to illustrate the embodiments represented in FIGS. 4-8 . The disclosed devices, components, and systems contemplate using or implementing any suitable technique for performing the steps illustrated. Thus, FIGS. 4-8 are for illustration purposes only and the described or similar steps may be performed at any appropriate time, including concurrently, individually, or in combination. In addition, many of the steps in the flow chart may take place simultaneously and/or in different orders than as shown and described. Moreover, the disclosed systems may use processes and methods with additional, fewer, and/or different steps.
Embodiments disclosed herein can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the herein disclosed structures and their equivalents. Some embodiments can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by one or more processors. A computer storage medium can be, or can be included in, a computer-readable storage device, a computer-readable storage substrate, or a random or serial access memory. The computer storage medium can also be, or can be included in, one or more separate physical components or media such as multiple CDs, disks, or other storage devices. The computer readable storage medium does not include a transitory signal.
The herein disclosed methods can be implemented as operations performed by a processor on data stored on one or more computer-readable storage devices or received from other sources.
A computer program (also known as a program, module, engine, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
Claims (20)
1. A method for determining the position of multiple cameras relative to each other, comprising:
at a processor, receiving video data from at least one video recording taken by each camera;
selecting a subset of frames of each video recording, comprising:
determining relative blurriness of each frame of each video recording,
selecting frames having a lowest relative blurriness,
counting feature points in each of the lowest relative blurriness frames, and
selecting for further analysis, lowest relative blurriness frames having a highest count of feature points; and
processing each selected subset of frames from each video recording to estimate the location and orientation of each camera.
2. The method of claim 1 , wherein determining relative blurriness comprises determining how much of a high frequency component of a video signal in a frame compares to high frequency components of video signals in neighboring frames.
3. The method of claim 2 , comprising selecting neighboring frames according a pre-set time difference between the frame and the neighboring frames.
4. The method of claim 3 , further comprising selecting a neighboring frame having a low blurriness, a high feature point count, and a non-zero rotation with respect to the frame.
5. The method of claim 1 , wherein the processing, comprises:
feature mapping;
camera internal calibration; and
camera external calibration.
6. The method of claim 5 , wherein the feature mapping comprises:
identifying key feature points that do not vary in scale and orientation beyond a threshold amount in each of frame in the selected subset of frames;
determining orientations of each identified key feature point;
comparing each framed in the selected subset of frames from each video recording to each frame in a selected subset of frames from all other video recordings being analyzed;
determining matching frames by identifying, for each frame, a neighboring frame having one or more of the same key feature points;
selecting matched frames having similar scale and orientation;
sorting the selected matched frames into bins; and
finally selecting frames from bins having a highest count of sorted frames.
7. The method of claim 6 , wherein the camera internal calibration, comprises:
identifying as candidate frame pairs, finally selected frames showing two-dimensional displacement of key feature points according to a threshold; and
estimating focal length using the candidate frame pairs comprising:
determining an intersection point of normals from image planes corresponding to the frames of the candidate frame pairs, and
measuring focal length as a distance between the intersection point and a point one of the image planes.
8. The method of claim 7 , wherein identifying the candidate frame pairs comprises:
selecting as a first frame in a candidate frame pair, a frame in a first video recording having a greatest number of matching key feature matches with a frame in a second video recording; and
selecting as a second frame in the candidate frame pair, a frame having a lowest blurriness.
9. The method of claim 7 , wherein external camera calibration comprises:
estimating real-world image coordinates; and
providing reconstructed estimates of world points.
10. A system for estimating positions of multiple cameras from video recordings from each of the multiple cameras, comprising:
a processor, and
a computer-readable storage medium having instructions that when executed by the processor, cause the processor to:
select a subset of frames of each video recording, wherein the processor:
determines relative blurriness of each frame of each video recording,
selects frames having a lowest relative blurriness,
counts feature points in each of the lowest relative blurriness frames, and
selects for further analysis, lowest relative blurriness frames having a highest count of feature points; and
processes each selected subset of frames from each video recording to estimate the location and orientation of each camera.
11. The system of claim 10 , wherein to determine relative blurriness, the processor determines how a high frequency component of a video signal in a frame compares to high frequency components of video signals in neighboring frames.
12. The system of claim 11 , wherein the processor selects neighboring frames according a pre-set time difference between the frame and the neighboring frames.
13. The system of claim 12 , wherein the processor selects a neighboring frame having a low blurriness, a high feature point count, and a non-zero rotation with respect to the frame.
14. The system of claim 10 , wherein the processor, in executing the processing executes a feature mapping, wherein the processor:
identifies key feature points that do not vary in scale and orientation beyond a threshold amount in each of frame in the selected subset of frames;
determines orientations of each identified key feature point;
compares each framed in the selected subset of frames from each video recording to each frame in a selected subset of frames from all other video recordings being analyzed;
determines matching frames by identifying, for each frame, a neighboring frame having one or more of the same key feature points;
selects matched frames having similar scale and orientation;
sorts the selected matched frames into bins; and
selects final frames from bins having a highest count of sorted frames.
15. The system of claim 14 , wherein the processor determines camera location by:
identifying as candidate frame pairs, finally selected frames showing two-dimensional displacement of key feature points according to a threshold; and
estimating focal length using the candidate frame pairs comprising:
determining an intersection point of normals from image planes corresponding to the frames of the candidate frame pairs, and
measuring focal length as a distance between the intersection point and a point one of the image planes.
16. A method for estimating positions of each of a plurality of cameras, comprising:
at a processor:
receiving video data from at least one video recording taken by each camera;
selecting a subset of frames of each video recording, comprising:
determining relative blurriness of each frame of each video recording,
selecting frames having a lowest relative blurriness,
counting feature points in each of the lowest relative blurriness frames, and
selecting for each video recording, a subset of frames with a lowest relative blurriness and a highest count of feature points;
mapping the feature points, comprising:
identifying key feature points that do not vary in scale and orientation beyond a threshold amount in each of frame in the selected subset of frames;
determining orientations of each identified key feature point;
comparing each framed in the selected subset of frames from each video recording to each frame in a selected subset of frames from all other video recordings being analyzed;
determining matching frames by identifying, for each frame, a neighboring frame having one or more of the same key feature points;
selecting matched frames having similar scale and orientation;
sorting the selected matched frames into bins; and
finally selecting frames from bins having a highest count of sorted frames;
identifying as candidate frame pairs, finally selected frames showing two-dimensional displacement of key feature points according to a threshold; and
estimating focal length using the candidate frame pairs comprising:
determining an intersection point of normals from image planes corresponding to the frames of the candidate frame pairs, and
measuring focal length as a distance between the intersection point and a point one of the image planes.
17. The method of claim 16 , comprising selecting neighboring frames according a pre-set time difference between the frame and the neighboring frames.
18. The method of claim 17 , further comprising selecting a neighboring frame having a low blurriness, a high feature point count, and a non-zero rotation with respect to the frame.
19. The method of claim 16 , wherein identifying the candidate frame pairs comprises:
selecting as a first frame in a candidate frame pair, a frame in a first video recording having a greatest number of matching key feature matches with a frame in a second video recording; and
selecting as a second frame in the candidate frame pair, a frame having a lowest blurriness.
20. The method of claim 16 , further comprising performing an external camera calibration, comprising:
estimating real-world image coordinates; and
providing reconstructed estimates of world points.
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/092,413 US10096114B1 (en) | 2013-11-27 | 2013-11-27 | Determining multiple camera positions from multiple videos |
US16/149,691 US11042991B2 (en) | 2013-11-27 | 2018-10-02 | Determining multiple camera positions from multiple videos |
US17/353,686 US11636610B2 (en) | 2013-11-27 | 2021-06-21 | Determining multiple camera positions from multiple videos |
US18/306,175 US20230267623A1 (en) | 2013-11-27 | 2023-04-24 | Determining multiple camera positions from multiple videos |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/092,413 US10096114B1 (en) | 2013-11-27 | 2013-11-27 | Determining multiple camera positions from multiple videos |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/149,691 Continuation US11042991B2 (en) | 2013-11-27 | 2018-10-02 | Determining multiple camera positions from multiple videos |
Publications (1)
Publication Number | Publication Date |
---|---|
US10096114B1 true US10096114B1 (en) | 2018-10-09 |
Family
ID=63685128
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/092,413 Active 2036-11-09 US10096114B1 (en) | 2013-11-27 | 2013-11-27 | Determining multiple camera positions from multiple videos |
US16/149,691 Active US11042991B2 (en) | 2013-11-27 | 2018-10-02 | Determining multiple camera positions from multiple videos |
US17/353,686 Active 2034-01-28 US11636610B2 (en) | 2013-11-27 | 2021-06-21 | Determining multiple camera positions from multiple videos |
US18/306,175 Pending US20230267623A1 (en) | 2013-11-27 | 2023-04-24 | Determining multiple camera positions from multiple videos |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/149,691 Active US11042991B2 (en) | 2013-11-27 | 2018-10-02 | Determining multiple camera positions from multiple videos |
US17/353,686 Active 2034-01-28 US11636610B2 (en) | 2013-11-27 | 2021-06-21 | Determining multiple camera positions from multiple videos |
US18/306,175 Pending US20230267623A1 (en) | 2013-11-27 | 2023-04-24 | Determining multiple camera positions from multiple videos |
Country Status (1)
Country | Link |
---|---|
US (4) | US10096114B1 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190051036A1 (en) * | 2016-04-22 | 2019-02-14 | Panasonic Intellectual Property Management Co., Ltd. | Three-dimensional reconstruction method |
US10339656B1 (en) * | 2016-09-29 | 2019-07-02 | Amazon Technologies, Inc. | Inferring count of items using image |
US10395341B2 (en) * | 2015-06-30 | 2019-08-27 | Baidu Online Network Technology (Beijing) Co., Ltd. | Panoramic image generation method and apparatus for user terminal |
US20200025570A1 (en) * | 2017-03-29 | 2020-01-23 | Agency For Science, Technology And Research | Real time robust localization via visual inertial odometry |
US20200112684A1 (en) * | 2018-10-09 | 2020-04-09 | The Boeing Company | Adaptive Camera Control and Calibration For Dynamic Focus |
US10776902B2 (en) * | 2016-11-30 | 2020-09-15 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Image processing device and method for producing in real-time a digital composite image from a sequence of digital images |
CN114140365A (en) * | 2022-01-27 | 2022-03-04 | 荣耀终端有限公司 | Event frame-based feature point matching method and electronic equipment |
US20220343110A1 (en) * | 2019-02-28 | 2022-10-27 | Stats Llc | System and Method for Generating Trackable Video Frames from Broadcast Video |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2021043486A (en) * | 2019-09-06 | 2021-03-18 | 株式会社東芝 | Position estimating device |
Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030095711A1 (en) * | 2001-11-16 | 2003-05-22 | Stmicroelectronics, Inc. | Scalable architecture for corresponding multiple video streams at frame rate |
US6856708B1 (en) * | 1999-03-04 | 2005-02-15 | Ricoh Co., Limited | Method and system for composing universally focused image from multiple images |
US20060257042A1 (en) * | 2005-05-13 | 2006-11-16 | Microsoft Corporation | Video enhancement |
US20100002070A1 (en) * | 2004-04-30 | 2010-01-07 | Grandeye Ltd. | Method and System of Simultaneously Displaying Multiple Views for Video Surveillance |
US20100321246A1 (en) * | 2007-12-21 | 2010-12-23 | Amedo Smart Tracking Solutions Gmbh | Method for detecting motion |
US20110205022A1 (en) * | 2010-02-24 | 2011-08-25 | Cavallaro Richard H | Tracking system |
US20110292219A1 (en) * | 2010-05-25 | 2011-12-01 | Nelson Liang An Chang | Apparatus and methods for imaging system calibration |
US20130148851A1 (en) * | 2011-12-12 | 2013-06-13 | Canon Kabushiki Kaisha | Key-frame selection for parallel tracking and mapping |
US20130215221A1 (en) * | 2012-02-21 | 2013-08-22 | Sen Wang | Key video frame selection method |
US20130215233A1 (en) * | 2012-02-21 | 2013-08-22 | Sen Wang | 3d scene model from collection of images |
US20140270537A1 (en) * | 2011-08-02 | 2014-09-18 | Viewsiq Inc. | Apparatus and method for digital microscopy imaging |
US20140285619A1 (en) * | 2012-06-25 | 2014-09-25 | Adobe Systems Incorporated | Camera tracker target user interface for plane detection and object creation |
US20140285624A1 (en) * | 2012-06-25 | 2014-09-25 | Adobe Systems Incorporated | 3d tracked point visualization using color and perspective size |
US8861884B1 (en) * | 2011-11-21 | 2014-10-14 | Google Inc. | Training classifiers for deblurring images |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6198485B1 (en) * | 1998-07-29 | 2001-03-06 | Intel Corporation | Method and apparatus for three-dimensional input entry |
US7224357B2 (en) * | 2000-05-03 | 2007-05-29 | University Of Southern California | Three-dimensional modeling based on photographic images |
US7006707B2 (en) * | 2001-05-03 | 2006-02-28 | Adobe Systems Incorporated | Projecting images onto a surface |
JP2004062980A (en) * | 2002-07-29 | 2004-02-26 | Toyota Gakuen | Magnetic alloy, magnetic recording medium, and magnetic recording and reproducing device |
US8175379B2 (en) * | 2008-08-22 | 2012-05-08 | Adobe Systems Incorporated | Automatic video image segmentation |
US8939842B2 (en) * | 2009-01-13 | 2015-01-27 | Meimadtek Ltd. | Method and system for operating a self-propelled vehicle according to scene images |
WO2011074049A1 (en) * | 2009-12-18 | 2011-06-23 | 富士通株式会社 | Image selection device and image selection method |
US20120035799A1 (en) * | 2010-01-13 | 2012-02-09 | Meimadtek Ltd. | Method and system for operating a self-propelled vehicle according to scene images |
US8532421B2 (en) * | 2010-11-12 | 2013-09-10 | Adobe Systems Incorporated | Methods and apparatus for de-blurring images using lucky frames |
KR102172992B1 (en) * | 2014-07-31 | 2020-11-02 | 삼성전자주식회사 | Image photographig apparatus and method for photographing image |
-
2013
- 2013-11-27 US US14/092,413 patent/US10096114B1/en active Active
-
2018
- 2018-10-02 US US16/149,691 patent/US11042991B2/en active Active
-
2021
- 2021-06-21 US US17/353,686 patent/US11636610B2/en active Active
-
2023
- 2023-04-24 US US18/306,175 patent/US20230267623A1/en active Pending
Patent Citations (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6856708B1 (en) * | 1999-03-04 | 2005-02-15 | Ricoh Co., Limited | Method and system for composing universally focused image from multiple images |
US20050105823A1 (en) * | 1999-03-04 | 2005-05-19 | Shin Aoki | Method and system for composing universally focused image from multiple images |
US7379621B2 (en) * | 1999-03-04 | 2008-05-27 | Ricoh Company, Ltd. | Method and system for composing universally focused image from multiple images |
US20030095711A1 (en) * | 2001-11-16 | 2003-05-22 | Stmicroelectronics, Inc. | Scalable architecture for corresponding multiple video streams at frame rate |
US20130021434A1 (en) * | 2003-05-02 | 2013-01-24 | Grandeye Ltd. | Method and System of Simultaneously Displaying Multiple Views for Video Surveillance |
US20100002070A1 (en) * | 2004-04-30 | 2010-01-07 | Grandeye Ltd. | Method and System of Simultaneously Displaying Multiple Views for Video Surveillance |
US20060257042A1 (en) * | 2005-05-13 | 2006-11-16 | Microsoft Corporation | Video enhancement |
US20100321246A1 (en) * | 2007-12-21 | 2010-12-23 | Amedo Smart Tracking Solutions Gmbh | Method for detecting motion |
US20110205077A1 (en) * | 2010-02-24 | 2011-08-25 | Cavallaro Richard H | Tracking system using proximity and/or presence |
US20110205022A1 (en) * | 2010-02-24 | 2011-08-25 | Cavallaro Richard H | Tracking system |
US20150021481A1 (en) * | 2010-02-24 | 2015-01-22 | Sportvision, Inc. | Tracking system |
US8884741B2 (en) * | 2010-02-24 | 2014-11-11 | Sportvision, Inc. | Tracking system |
US8786415B2 (en) * | 2010-02-24 | 2014-07-22 | Sportvision, Inc. | Tracking system using proximity and/or presence |
US20110292219A1 (en) * | 2010-05-25 | 2011-12-01 | Nelson Liang An Chang | Apparatus and methods for imaging system calibration |
US9224063B2 (en) * | 2011-08-02 | 2015-12-29 | Viewsiq Inc. | Apparatus and method for digital microscopy imaging |
US20140270537A1 (en) * | 2011-08-02 | 2014-09-18 | Viewsiq Inc. | Apparatus and method for digital microscopy imaging |
US8861884B1 (en) * | 2011-11-21 | 2014-10-14 | Google Inc. | Training classifiers for deblurring images |
US20150030239A1 (en) * | 2011-11-21 | 2015-01-29 | Google Inc. | Training classifiers for deblurring images |
US9036905B2 (en) * | 2011-11-21 | 2015-05-19 | Google Inc. | Training classifiers for deblurring images |
US9076059B2 (en) * | 2011-12-12 | 2015-07-07 | Canon Kabushiki Kaisha | Key-frame selection for parallel tracking and mapping |
US20130148851A1 (en) * | 2011-12-12 | 2013-06-13 | Canon Kabushiki Kaisha | Key-frame selection for parallel tracking and mapping |
US20130215233A1 (en) * | 2012-02-21 | 2013-08-22 | Sen Wang | 3d scene model from collection of images |
US20130215221A1 (en) * | 2012-02-21 | 2013-08-22 | Sen Wang | Key video frame selection method |
US20140285624A1 (en) * | 2012-06-25 | 2014-09-25 | Adobe Systems Incorporated | 3d tracked point visualization using color and perspective size |
US20140285619A1 (en) * | 2012-06-25 | 2014-09-25 | Adobe Systems Incorporated | Camera tracker target user interface for plane detection and object creation |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10395341B2 (en) * | 2015-06-30 | 2019-08-27 | Baidu Online Network Technology (Beijing) Co., Ltd. | Panoramic image generation method and apparatus for user terminal |
US10789765B2 (en) * | 2016-04-22 | 2020-09-29 | Panasonic Intellectual Property Management Co., Ltd. | Three-dimensional reconstruction method |
US20190051036A1 (en) * | 2016-04-22 | 2019-02-14 | Panasonic Intellectual Property Management Co., Ltd. | Three-dimensional reconstruction method |
US11373320B1 (en) * | 2016-09-29 | 2022-06-28 | Amazon Technologies, Inc. | Detecting inventory changes by comparing image data |
US10339656B1 (en) * | 2016-09-29 | 2019-07-02 | Amazon Technologies, Inc. | Inferring count of items using image |
US10713803B1 (en) * | 2016-09-29 | 2020-07-14 | Amazon Technologies, Inc. | Testing validity of items using image data analysis |
US10776902B2 (en) * | 2016-11-30 | 2020-09-15 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Image processing device and method for producing in real-time a digital composite image from a sequence of digital images |
US20200025570A1 (en) * | 2017-03-29 | 2020-01-23 | Agency For Science, Technology And Research | Real time robust localization via visual inertial odometry |
US11747144B2 (en) * | 2017-03-29 | 2023-09-05 | Agency For Science, Technology And Research | Real time robust localization via visual inertial odometry |
US10951809B2 (en) * | 2018-10-09 | 2021-03-16 | The Boeing Company | Adaptive camera control and calibration for dynamic focus |
US20200112684A1 (en) * | 2018-10-09 | 2020-04-09 | The Boeing Company | Adaptive Camera Control and Calibration For Dynamic Focus |
US20220343110A1 (en) * | 2019-02-28 | 2022-10-27 | Stats Llc | System and Method for Generating Trackable Video Frames from Broadcast Video |
US11830202B2 (en) | 2019-02-28 | 2023-11-28 | Stats Llc | System and method for generating player tracking data from broadcast video |
US11861848B2 (en) * | 2019-02-28 | 2024-01-02 | Stats Llc | System and method for generating trackable video frames from broadcast video |
US11861850B2 (en) | 2019-02-28 | 2024-01-02 | Stats Llc | System and method for player reidentification in broadcast video |
US11935247B2 (en) | 2019-02-28 | 2024-03-19 | Stats Llc | System and method for calibrating moving cameras capturing broadcast video |
CN114140365A (en) * | 2022-01-27 | 2022-03-04 | 荣耀终端有限公司 | Event frame-based feature point matching method and electronic equipment |
CN114140365B (en) * | 2022-01-27 | 2022-07-22 | 荣耀终端有限公司 | Event frame-based feature point matching method and electronic equipment |
Also Published As
Publication number | Publication date |
---|---|
US20230267623A1 (en) | 2023-08-24 |
US20210312641A1 (en) | 2021-10-07 |
US11636610B2 (en) | 2023-04-25 |
US20190035090A1 (en) | 2019-01-31 |
US11042991B2 (en) | 2021-06-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11636610B2 (en) | Determining multiple camera positions from multiple videos | |
US20230077355A1 (en) | Tracker assisted image capture | |
US8879894B2 (en) | Pixel analysis and frame alignment for background frames | |
US20120127276A1 (en) | Image retrieval system and method and computer product thereof | |
EP3532797A1 (en) | Curated photogrammetry | |
CN109842811B (en) | Method and device for implanting push information into video and electronic equipment | |
CN111241872B (en) | Video image shielding method and device | |
Resch et al. | Scalable structure from motion for densely sampled videos | |
JP2014215926A (en) | Image processing apparatus, image processing method, program, and recording medium | |
JP2011133984A (en) | Motion feature extraction device and motion feature extraction method | |
CN110245609A (en) | Pedestrian track generation method, device and readable storage medium storing program for executing | |
CN110675425B (en) | Video frame identification method, device, equipment and medium | |
US8218823B2 (en) | Determining main objects using range information | |
CN109785439B (en) | Face sketch image generation method and related products | |
US8885952B1 (en) | Method and system for presenting similar photos based on homographies | |
CN114022531A (en) | Image processing method, electronic device, and storage medium | |
US10924637B2 (en) | Playback method, playback device and computer-readable storage medium | |
KR101982258B1 (en) | Method for detecting object and object detecting apparatus | |
Xu et al. | Fast and accurate object detection using image Cropping/Resizing in multi-view 4K sports videos | |
CN109886996B (en) | Visual tracking optimization method | |
CN109284707A (en) | Moving target detection method and device | |
CN112991419B (en) | Parallax data generation method, parallax data generation device, computer equipment and storage medium | |
Morerio et al. | Optimizing superpixel clustering for real-time egocentric-vision applications | |
CN108062741B (en) | Binocular image processing method, imaging device and electronic equipment | |
Yeh | Selecting interesting image regions to automatically create cinemagraphs |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
US8234285B1 - Context-dependent similarity measurements - Google Patents
Context-dependent similarity measurements Download PDFInfo
- Publication number
- US8234285B1 US8234285B1 US12/506,685 US50668509A US8234285B1 US 8234285 B1 US8234285 B1 US 8234285B1 US 50668509 A US50668509 A US 50668509A US 8234285 B1 US8234285 B1 US 8234285B1
- Authority
- US
- United States
- Prior art keywords
- context
- feature
- value
- dataset
- values
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 230000001419 dependent effect Effects 0.000 title description 15
- 238000005259 measurement Methods 0.000 title description 5
- 238000000034 method Methods 0.000 claims abstract description 84
- 238000004590 computer program Methods 0.000 claims abstract description 15
- 238000012545 processing Methods 0.000 claims description 40
- 239000013598 vector Substances 0.000 claims description 36
- 238000004891 communication Methods 0.000 claims description 11
- 238000009499 grossing Methods 0.000 claims description 10
- 238000013500 data storage Methods 0.000 claims 2
- 238000011524 similarity measure Methods 0.000 abstract description 16
- 230000008569 process Effects 0.000 description 60
- 238000010586 diagram Methods 0.000 description 14
- 230000006870 function Effects 0.000 description 5
- 241000219109 Citrullus Species 0.000 description 3
- 235000012828 Citrullus lanatus var citroides Nutrition 0.000 description 3
- 239000000470 constituent Substances 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 238000004364 calculation method Methods 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000007476 Maximum Likelihood Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 238000013523 data management Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
Definitions
- This specification relates to measuring the similarity of objects stored in datasets.
- Heterogeneous datasets are datasets from several sources, each storing data representing objects.
- Each dataset includes an object identifier that identifies an object, a context value that identifies a context of the object, and a set of feature values that identify features of the object.
- the number of features and values often differ between each dataset, and within a dataset. Examples of such datasets are inventory catalog data from merchants, patient record data from hospitals, and technical paper data from publishers.
- an object identifier identifies a particular merchandise item
- a context identifier identifies a particular vendor
- the set of feature values are words and numbers that describe the merchandise item.
- Heterogeneous datasets are often integrated for data management, searching, and archiving operations.
- a common step in integrating heterogeneous datasets is determining a mapping between objects from one dataset and objects from another dataset. This step is often referred to as record linkage, matching, and/or de-duping.
- One useful matching strategy is to use a threshold similarity function that generates a similarity score from the feature values and identifies objects as identical if the similarity score exceeds a threshold value.
- TF-IDF term frequency-inverse document frequency
- a similarity measure for any two objects that include a common feature f is based, in part, on the likelihood that the two object representations in the dataset that both include the feature f will be associated with distinct contexts, and the likelihood that the two objects in the dataset that both include the feature f will be associated with the same context.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of selecting, by a data processing apparatus, object representations from a dataset storing a plurality of object representations, each object representation being an association of a object identifier that identifies an object instance in the dataset and corresponds to an object, a context value that identifies a context of the object, and a set of feature values that identify features of the object, and wherein each object identifier is unique in the dataset, and each context value is associated with one or more object identifiers; for each feature value, determining an inter-context score that is proportional to the number of different context values in the dataset that are associated with the feature value and determining an intra-context score that proportional to the number of times the feature value is associated with each context value; and for a selected pair of object representations, determining a similarity score based on an inter-context score and an intra-context score of a matching feature value in the set of features for the pair of object representations
- Another innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions of selecting, by a data processing apparatus, object representations from a dataset storing a plurality of object representations, each object representation being an association of, a object identifier that identifies an object instance in the dataset and corresponds to an object; a context value that identifies a context of the object, and a set of feature values that identify features of the object, wherein each object identifier is unique in the dataset, and each context value is associated with one or more object identifiers; and generating feature weights and associating the feature weights with the feature values in the sets of features in the dataset, each feature weight for a feature value being proportional to the frequency of co-occurrence of the feature value with different context values in the dataset.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
- FIG. 1 is a block diagram of an example system for generating context-dependent similarity metrics.
- FIG. 2 is a flow diagram of an example process for generating context-dependent feature weights.
- FIG. 3 is a flow diagram of an example process for generating a context-dependent similarity measure from feature weight vectors.
- FIG. 4 is a block diagram illustrating an example process for generating context histograms.
- FIG. 5 is a flow diagram of an example process for generating context-dependent similarity measures from context histograms.
- FIG. 6 is a flow diagram of an example process for generating context-dependent similarity measures with empirical priors.
- FIG. 7 is a block diagram of a programmable processing system.
- FIG. 1 is a block diagram of an example system 100 for generating context-dependent similarity metrics.
- the system 100 can, for example, be in data communication with a computer network 102 , such as a local area network (LAN), wide area network (WAN), the Internet, or a combination thereof.
- Data providers 104 - 1 . . . n can provide constituent datasets 105 - 1 . . . n to an aggregator 110 .
- Example constituent datasets include inventory catalog data from merchants, patient record data from hospitals, and technical paper data from publishers, to name just a few.
- the aggregator 110 stores the received constituent datasets in a consolidated dataset 120 . For clarity, the consolidated dataset will simply be referred to as dataset 120 .
- the datasets 105 can be web-based resources, and the data providers 104 can be web sites.
- Each web site 104 is one or more resources 105 associated with a domain name, and one or more servers host each web site, and each resource 105 is any data that can be provided by the web site 104 over the network 102 and that is associated with a resource address.
- Examples of resources include HTML pages, word processing documents, portable document format (PDF) documents, images, video, and feed sources, to name just a few.
- the aggregator 110 can crawl the websites and store the received resources in the dataset 120 .
- the dataset 120 is a collection of object representations x i .
- Each object representation x i represents some object, e.g., a book, a merchandise item, a technical paper.
- Each object identifier is unique in the dataset, and each context value is associated with one or more object identifiers.
- the object identifiers ID 1 and ID 2 are associated with the context c 1 .
- the object identifiers ID 1 and ID 2 correspond to two different products, and the context c 1 is a merchant name, then the two objects represented by the first and second object instances are provided by the same merchant.
- the set of features might be the words in the name of the product and copy describing the product.
- a contextual similarity engine 112 accesses the dataset 120 and generates similarity data 122 that include similarity scores sim m,n .
- Each similarity score sim m,n is a measure of the similarity of two object representations in a pair of object representations.
- the contextual similarity engine 112 uses a modified TF-IDF process that accounts for the contexts of the object instances in the dataset 120 .
- V D be the vocabulary associated with the dataset 120 , i.e.,
- V D ⁇ ⁇ x i ⁇ D ⁇ F ⁇ ( x i )
- the elements of V D are all features f 1 , . . . f
- the contextual similarity engine 112 generates the feature vectors v, and uses the feature vectors to determine the document frequency of the feature values f k with respect to the dataset 120 .
- D being the dataset 120 of object instances x 1 , . . . x n
- the document frequency of a feature value f with respect to the dataset 120 (“D”) is defined as the number of object instances that include the feature f, i.e., DF D ( f ) ⁇ x i ⁇ D:f ⁇ F ( x i ) ⁇
- IDF D ⁇ ( f ) ⁇ log ⁇ ( ⁇ D ⁇ DF D ⁇ ( f ) )
- contextual similarity engine 112 determines a context similarity value CX(f k ), the details of which are described below.
- where the k-th component d k Z i is b k ⁇ CX(f k ) a k ⁇ IDF D (f k ) ⁇ CX(f k ).
- the characteristics of the context similarity value are such that the magnitude is of the context similarity value is approximately proportional to the ratio of an estimated probability that two object instances in the dataset 120 that both include a feature value f k will be associated with distinct context values to the estimated probability that the two objects in the dataset 120 will be associated with the same context values.
- the contextual similarity engine 112 can select any two object representations and determine a similarity score for the object representations from the context-dependent inverse frequency weighted vectors.
- the similarity score is cosine similarity score (also referred to as a TF-IDF similarity score), and is generated according to the equation:
- the contextual similarity engine 112 associates the similarity scores for the pairs of object representations in similarity data 122 .
- the similarity data 122 can be used, for example, by another application engine 130 to perform one or more data processing operations.
- the application engine 130 can be a clustering engine that can generate cluster data representing object clusters.
- the application engine 130 can be a search engine that ranks object representations stored in the dataset 120 by relevance scores that measure the relevance of the object representations to a search query.
- the search engine can use the similarity data to, for example, identify duplicate object representations, web pages, etc., and either promote or demote the identified duplicates according to one or more search processing algorithms.
- Many other data processing operations that operate on the dataset 120 can also use the similarity data 122 as input.
- the context-dependent similarity measurement is substantially proportional to the frequency of co-occurrence of the feature value with different context values in the dataset 120 , and can be further inversely proportional to the frequency of occurrence of the feature value for each context value.
- the context-dependent similarity measurements are based on an inter-context score and an intra-context score associated with each feature value.
- the contextual similarity engine 112 determines, for each feature value, an inter-context score that is proportional to the number of different context values in the dataset that are associated with the feature value, and an intra-context score that proportional to the number of times the feature value is associated with each context value.
- the inter-context score is a probability, Pr INTER , that a random pair of object representations that each include a particular feature value are each associated with different context values, i.e., the probability that two object representations selected uniformly at random and that include the feature f are associated with different context values.
- the intra-context score is a probability, Pr INTRA , that a random pair of object representations that each include the particular feature value are each associated with the same context value, i.e., the probability that two object representations selected uniformly at random and that include the feature f are associated with same context value.
- the contextual similarity engine 112 determines the inter-context scores and the intra-context scores for each feature according to the following formulas:
- the contextual similarity engine 112 determines the context similarity value according to the following formula:
- the contextual similarity engine 112 implements one or more smoothing or bounding operations when determining the inter-context and intra-context scores.
- each object representation (row) corresponds to a product, and is identified by an identifier id i .
- the feature set F i includes words in the name of the product and description of the product, and the context value c i identifies a merchant offering the product.
- any two object representations for the same context are unlikely to be identical, as this would indicate a duplication of a product listing within a single merchant's dataset. Such duplications have been found to be unlikely.
- many of the weights of Table 2 correlate to the intuitive notion of “importance” of the IDF function. For example, the features “from”, “lego” and “bionicle” have relative low feature weights, as they are shared by many pairs of object representations. Conversely, the features “IIIx”, “x14” and “x37” have higher weights, and appear in object representations that represent the same item offered by different merchants.
- the feature weight for ToyCoUS is larger than the feature weights of IIIx, x14 and x37.
- the features IIIx, x14 and x37 co-occur with each context ToyCoUS, ToyCoBB, and ToyCoCC, and occur only once for each context.
- the feature ToyCoUS occurs twice in the context of ToyCoUS, and does not occur in any other context.
- the context similarity values CX(ToyCoUS), CX(IIIx), CX(x14) and CX(x37) result in the feature weight of the feature ToyCoUS being less than the feature weights of the features IIIx, x14 and x37.
- Table 3 lists the similarity measures for some of the pairs of object representations in the dataset of Table 1.
- the pairs that are below the line refer to different products, while the pairs that are above the line refer to the same product.
- the similarity measures in the column sim IDF (x i , x j ) are calculated using the inverse frequency weighted vector w.
- the similarity measures in the column sim CX ⁇ IDF (x i , x j ) are calculated using the inverse frequency weighted vector z that, in turn, is calculated from the vector w and smoothed values of CX(f).
- FIG. 2 is a flow diagram of an example process 200 for generating context-dependent feature weights.
- the process 200 can be implemented in the contextual similarity engine 112 .
- the process 200 selects a dataset storing object representations ( 202 ).
- the contextual similarity engine 112 can select the dataset 120 .
- the dataset 120 includes a plurality of object representations, each object representation being an association of an object identifier that identifies an object instance in a dataset and corresponds to an object, a context value that identifies a context of the object, and a set of feature values that identify features of the object.
- the process 200 determines a frequency of co-occurrence of the feature value with different context values in the dataset ( 204 ).
- the contextual similarity engine 112 can determine the number of context values with which a feature value is associated.
- the process 200 determines a frequency of occurrence of the feature value for each context value ( 206 ).
- the contextual similarity engine 112 can determine, for each context value, the number of object representations that include the frequency value.
- the process 200 determines a feature weight based on the frequency of co-occurrence and the frequency of occurrence ( 208 ).
- the contextual similarity engine 112 can multiply an inverse frequency value for the feature value by another value that is proportional to the ratio of the frequency of co-occurrence to the frequency of occurrence.
- FIG. 3 is a flow diagram of an example process 300 for generating a context-dependent similarity measure from feature weight vectors.
- the process 300 can be implemented in the contextual similarity engine 112 .
- the process 300 determines a probability that a random pair of object representations that each include a feature value f are each associated with different context values ( 302 ).
- the contextual similarity engine 112 can determine the value Pr INTER (f).
- the process 300 determines a probability that a random pair of object representations that each include the feature value are each associated with the same context value ( 304 ).
- the contextual similarity engine 112 can determine the value Pr INTRA (f).
- the process 300 generates a weighted vector including the feature weights for corresponding feature values, the feature weights being proportional to a ratio of the inter-context score of the feature value to the intra-context score of the feature value ( 306 ).
- the contextual similarity engine 112 can generate the vector w and multiply the feature weights of the vector by corresponding context similarity values CX to generate the vector z.
- the process 300 determines a cosine similarity value from the weighted vectors.
- the contextual similarity engine 112 can determine the value sim CX ⁇ IDF (x i , x j ).
- FIG. 4 is a block diagram illustrating an example process 400 for generating context histograms.
- the process 400 facilitates parallelization among multiple computers in a data processing apparatus, e.g., distributing processing of the contextual similarity engine 112 over multiple computers.
- the process 400 performs an initial pass over the dataset 120 to determine the frequencies of contexts (n c ) in the dataset 120 ( 402 ).
- n c the frequencies of contexts
- the process 400 generates feature value and context value vector pairs ( 404 ).
- the feature value and context value vector pairs are of the form ( f, c 1 , . . . , c n ) where f is a feature and c 1 , . . . , c n is a sorted list of all context values that co-occur with that feature.
- the process 400 then generates context histograms for each feature f ( 406 ).
- the context histograms are of the form ( f , ( c 1 ,n f,c 1 ), . . . , ( c n ,n f,c n ) ) where the pair (c i , n f,ci ) contains a context and the number of times the context was duplicated for that feature. Because the feature weight CX(f) ⁇ IDF(f) for a feature f depends only on the context histogram off, the process 400 can be readily parallelized.
- a first processor can be tasked with determining the feature weights for a particular context histogram for a first feature f 1
- a second processor can be tasked with determining the feature weights for a particular context histogram for a second feature f 2 .
- FIG. 5 is a flow diagram of an example process 500 for generating context-dependent similarity measures from context histograms.
- the process 500 can be implemented by the contextual similarity engine 112 operating in a parallelized environment.
- the process 500 counts frequencies of context (n c ) in a dataset ( 502 ).
- the contextual similarity engine 112 can, for each context c, initialize a context counter n c to 0, and set another context independent counter n to 0.
- a context counter corresponding to the context value of the object representation is incremented.
- the counter n is incremented for each object representation in the dataset.
- the process 500 initializes a map list ( 504 ), and for each feature value in each object representation, adds a feature value and context value pair to the map list ( 506 ).
- the contextual similarity engine 112 can initialize the map list and append the feature value and context value pairs (f, c i ) to the map list.
- the process 500 sorts the map list ( 508 ).
- the contextual similarity engine 112 can sort the map list lexicographically.
- the process 500 collects sequences of adjacent feature and context value pairs with the same feature value and replaces them with a feature value and context value vector pair ( 510 ).
- the contextual similarity engine 112 can collect sequences of adjacent pairs (f, c 1 ) . . . (f, c n ) with the same feature and replace them with a feature value and context value vector pair (f, ⁇ c 1 , . . . c n >).
- the process 500 determines the number of object representations that include the feature value (n f ) and, for each context value, determines the number of object representations that include the feature value and are associated with the context value (n c,f ) ( 512 ).
- the contextual similarity engine 112 can, from the list ⁇ c 1 , . . . c n >, computer the feature value n f and the context value n c,f for each feature.
- the process 500 determines, for each feature value, a context similarity value using n f and n c,f ( 514 ).
- the contextual similarity engine 112 can determine the values CX(f) using equations (1)-(3) above.
- the contextual similarity engine 112 can determine the values CX(f) using equation (3) above and equations (4) and (5) below.
- the process 500 determines, for each feature value, an inverse frequency value of the feature value with respect to the dataset ( 516 ).
- the contextual similarity engine 112 can determine the values of IDF(f), e.g., log(n/n f ).
- the process 500 generates, for each feature value, a feature value and feature weight pair (f, FW) and adds the feature value and feature weight pair to a feature weight list ( 518 ).
- the contextual similarity engine 112 can generate the pair of values (f, CX(f) ⁇ IDF(f)) for each feature f and add the pair to a feature weight list.
- the process 500 generates, for each feature value, a feature value and context similarity value pair (f, CX(f)) and adds the feature value and context similarity value pair to a context similarity list.
- the contextual similarity engine 112 can generate the feature value and context similarity value pair (f, CX(f)) and add each pair to the context similarity list.
- the data generated by the process 500 can be stored as the similarity data 122 and associated with the dataset 120 .
- Pr INTRA (f) and Pr INTER (f) are maximum likelihood estimates, and it is possible for Pr INTRA (f) to have a value of 0, resulting in an indeterminate value for CX(f). If the system has prior knowledge of the importance of a feature f, this prior knowledge can be incorporated by smoothing the estimate toward these values. In general, if a quantity is estimated to be p 1 based on m 1 examples and the system is provided two values p 0 , m 0 representing a prior probability p 0 and a “strength” (expressed in number of equivalent examples) m 0 , then a Dirichlet-smoothed estimate of the following form can be used:
- p 0 is set to 0.5 and m 0 is set to 1.
- the feature values of the dataset 120 are divided into disjoint sets V 1 . . . V m .
- Each disjoint set includes different types of features that are expected to have different levels of importance. For example, for a dataset related to movies, a first disjoint set of features can be from movie titles; a second disjoint set of features can be from director names; a third disjoint set of features can be from cast names; and a fourth disjoint set of features can be from movie summaries.
- the CX(f) values are computed for each feature using the default priors, over each subset of features belonging to each disjoint set V l , and the mean ⁇ 1 and standard deviation ⁇ 1 for the values of CX(f) are determined. From these mean and standard deviation values, a prior value p 1 and a strength value m 1 are determined. In some implementations, the prior p 1 , m 1 for features f that are in the disjoint set V l are set as:
- p 0 , m 0 are initial values (e.g., 0.5 and 1) and:
- Pr INTER (f) and Pr INTRA (f) are smoothed towards p 0 and m 0 :
- the values of p 0 and m 0 are set to 0.5 and 1.0 and are not adjusted, i.e., the values of Pr INTER and Pr INTRA are calculated using these initial values of p 0 and m 0 .
- This variant is also referred to as a “Laplace-corrected” variant, and the resulting values of CX(f) are minimally smoothed away from extreme values.
- the CX(f) values are calculated using the Laplace-corrected variant, and then process 600 of FIG. 6 is used to calculate empirical priors.
- the equations (4) and (5) above are then adjusted for the empirical priors and the adjusted equations (4) and (5) are used for generating the smoothed CX(f) values.
- the similarity function sim CX ⁇ IDF can be bounded away from unity. This is accomplished by adding to every set of feature values a unique feature value that is included only in that set of feature values.
- the unique feature value has an associated feature weight ⁇ in a corresponding weighted vector that causes the resulting similarity score (e.g., cosine similarity value) to be less than one.
- the definition of the inner product and ⁇ v ⁇ can be modified to implement the bounding by the unique feature ⁇ . Let z i,f be the component of z i that corresponds to the feature f, and similarly for z j,f . Then:
- ⁇ can vary. In some implementations, the values can range from 0 (no bounding) to 10.
- FIG. 6 is a flow diagram of an example process for generating context-dependent similarity measures with empirical priors.
- the process 600 can be implemented in the contextual similarity engine 112 .
- the process initializes counters a, b and c ( 602 ).
- the contextual similarity engine 112 can initialize counters for each disjoint set of feature values. If there are no disjoint sets, i.e., the same smoothing values are used for all features, then only one set of counters are initialized.
- the process 600 increments counter a by CX, increments counter b by CX 2 , and increments counter c by 1 ( 604 ).
- the contextual similarity engine 112 can increment the counters for each (f, CX) pair.
- the process 600 determines prior adjustments p′ 1 and m′ 1 to priors p 0 and m 0 ( 606 )
- the process 600 determines the priors p i and m i from the prior adjustments ( 608 ).
- the contextual similarity engine 112 can perform the following calculations:
- m l m 0 + m l ′
- p l p l ′ ⁇ m l ′ + p 0 ⁇ m 0 m 0 + m l ′
- the process 600 generates new feature weights for the feature values for the features of type l using the priors p l and m l ( 610 ).
- the contextual similarity engine 112 can re-execute the process 400 using equation (3) and the Dirichlet-smoothed versions of equations (1) and (2) (i.e., equations (4) and (5)) wherein the priors are m l and p 1 , and where l is the type of feature f.
- a variant of CX context similarity values can be used for classification instead of similarity matching. Assuming that each class is represented by a different c. The inverse frequency weighted vector w i can be divided dividing the CX(f) weights, rather than multiplying it by the CX(f) weights. The CX(f) context similarity values increase the importance of features that are distributed across many contexts, and decrease the importance of features that are concentrated in a single context. Thus, for classification, the reverse can be accomplished by dividing the vector w i by corresponding CX(f) weights.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and an apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- special purpose logic circuitry e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data and receiving user input from a user interacting with the client device).
- Data generated at the client device e.g., a result of the user interaction
- FIG. 7 shows a block diagram of a programmable processing system (system).
- system 700 that can be utilized to implement the systems and methods described herein.
- the architecture of the system 700 can, for example, be used to implement a computer client, a computer server, or some other computer device.
- the system 700 includes a processor 710 , a memory 720 , a storage device 730 , and an input/output device 740 .
- Each of the components 710 , 720 , 730 , and 740 can, for example, be interconnected using a system bus 750 .
- the processor 710 is capable of processing instructions for execution within the system 700 .
- the processor 710 is a single-threaded processor.
- the processor 710 is a multi-threaded processor.
- the processor 710 is capable of processing instructions stored in the memory 720 or on the storage device 730 .
- the memory 720 stores information within the system 700 .
- the memory 720 is a computer-readable medium.
- the memory 720 is a volatile memory unit.
- the memory 720 is a non-volatile memory unit.
- the storage device 730 is capable of providing mass storage for the system 700 .
- the storage device 730 is a computer-readable medium.
- the storage device 730 can, for example, include a hard disk device, an optical disk device, or some other large capacity storage device.
- the input/output device 740 provides input/output operations for the system 700 .
- the input/output device 740 can include one or more of a network interface device, e.g., an Ethernet card, a serial communication device, e.g., and RS-232 port, and/or a wireless interface device, e.g., an 802.11 card.
- the input/output device can include driver devices configured to receive input data and send output data to other input/output devices, e.g., keyboard, printer and display devices 760 .
Abstract
Description
The elements of VD are all features f1, . . . f|
v i=
where the k-th component ak is 1 if fk is in the set of feature values Fi, and 0 if fk is not within the set of feature values Fi.
DF D(f){x i εD:fεF(x i)}|
and the inverse frequency of the feature with respect to the
The inverse frequency values of the feature values are used to generate an inverse frequency weighted vector wi, i.e.,
w(x i)=
where the k-th component bk of wi is ak·IDFD(fk).
z(x i)=
where the k-th component dk Zi is bk·CX(fk)=ak·IDFD(fk)·CX(fk). In some implementations, the characteristics of the context similarity value are such that the magnitude is of the context similarity value is approximately proportional to the ratio of an estimated probability that two object instances in the
where the numerator is the inner product of the two vectors zi and zj.
where:
n is the number of object representations in the
n≡|D|
CD is the set of contexts in the dataset, i.e.,
C D ≡{c(x i):x i εD}
nc is the number of object representations in the dataset associated with the context value c, i.e.,
n c ≡|{x i εD:c i =c}|
nf is the number of object representations in the dataset that include the feature value f, i.e.,
n f ≡DF D(f)≡{x i εD:fεF i}|
nc,f is the number of instances in the dataset that include the feature value f and are associated with the context value c, i.e.,
n c,f ≡|{x i εD:fεF i and c i=c}|
Df is the instances in the dataset 120 (D) that include the feature f, i.e.,
D f ≡{x i εD:fεF i}
and x˜Df denotes selecting the object representation x uniformly from Df.
TABLE 1 | ||
idi | Ci | Fi |
us:gh1 | ToyCoUS | guitar, hero, IIIx, controller, from, ToyCoUS |
us:gh2 | ToyCoUS | guitar, hero, for, gameboy, from, ToyCoUS |
us:b14 | ToyCoUS | lego, bionicle, kit, x14, from, lego |
us:b23 | ToyCoUS | lego, bionicle, kit, x23, from, lego |
us:b37 | ToyCoUS | lego, bionicle, model, x37, from, lego |
bb:gh2 | ToyCoBB | guitar, hero, IIIx, for, gameboy |
bb:b14 | ToyCoBB | lego, bionicle, x14, truck, kit |
bb:b23 | ToyCoBB | lego, bionicle, x23, zombie, kit |
bb:b37 | ToyCoBB | lego, bionicle, x37, watermelon, kit |
cc:gh2 | ToyCoCC | guitar, hero, IIIx, for, gameboy |
cc:b14 | ToyCoCC | lego, bionicle, x14, truck, kit |
cc:b23 | ToyCoCC | lego, bionicle, x23, zombie, kit |
cc:b37 | ToyCoCC | lego, bionicle, x37, watermelon, kit |
TABLE 2 | |||
Feature f | IDFD(f) | ||
IIIx | 1.466 | ||
bionicle | 0.368 | ||
controller | 2.565 | ||
for | 1.467 | ||
from | 0.956 | ||
gameboy | 1.467 | ||
guitar | 1.179 | ||
hero | 1.179 | ||
kit | 0.486 | ||
lego | 0.368 | ||
model | 2.565 | ||
ToyCoUS | 1.872 | ||
truck | 1.872 | ||
watermelon | 1.872 | ||
x14 | 1.467 | ||
x23 | 1.467 | ||
x37 | 1.467 | ||
zombie | 1.872 | ||
TABLE 3 | ||||
Pair idi, idj | simIDF(xi, xj) | simCX.IDF(xi, xj) | ||
bb:b14, cc:b14 | 1.00 | 1.00 | ||
bb:b23, cc:b23 | 1.00 | 1.00 | ||
bb:b37, cc:b37 | 1.00 | 1.00 | ||
bb:gh2, cc:gh2 | 1.00 | 1.00 | ||
bb:b23, us:b23 | 0.86 | 0.99 | ||
cc:b23, us:b23 | 0.86 | 0.99 | ||
bb:gh2, us:gh2 | 0.82 | 0.84 | ||
cc:gh2, us:gh2 | 0.82 | 0.84 | ||
cc:b14, us:b14 | 0.57 | 0.88 | ||
bb:b14, us:b14 | 0.57 | 0.88 | ||
bb:b37, us:b37 | 0.31 | 0.85 | ||
cc:b37, us:b37 | 0.31 | 0.85 | ||
us:gh1, us:gh2 | 0.53 | 0.19 | ||
bb:gh2, us:gh1 | 0.46 | 0.62 | ||
cc:gh2, us:gh1 | 0.46 | 0.62 | ||
(f,
where f is a feature and c1, . . . , cn is a sorted list of all context values that co-occur with that feature.
(f,
where the pair (ci, nf,ci) contains a context and the number of times the context was duplicated for that feature. Because the feature weight CX(f)·IDF(f) for a feature f depends only on the context histogram off, the
where p0, m0 are initial values (e.g., 0.5 and 1) and:
p′ l =a l /c l
σ′l=√{square root over (b l/cl−(p′—l)2)}
m′ l=(p′ l(1−p′ l)σ2)
The
Claims (18)
(nc,f*(nf−nc,f))/(nf*(nf−1)); and
(nc,f*(nf−1))/(nf*(nf−1)).
((n c,f +p*m)*(n f −n c,f +p*m))/((n f +m)*(n f−1+m)); and
((n c,f +p*m)*(n f−1+p*m))/((n f +m)*(n f−1+m)).
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/506,685 US8234285B1 (en) | 2009-07-10 | 2009-07-21 | Context-dependent similarity measurements |
US13/532,972 US8538972B1 (en) | 2009-07-10 | 2012-06-26 | Context-dependent similarity measurements |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US22475709P | 2009-07-10 | 2009-07-10 | |
US12/506,685 US8234285B1 (en) | 2009-07-10 | 2009-07-21 | Context-dependent similarity measurements |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/532,972 Continuation US8538972B1 (en) | 2009-07-10 | 2012-06-26 | Context-dependent similarity measurements |
Publications (1)
Publication Number | Publication Date |
---|---|
US8234285B1 true US8234285B1 (en) | 2012-07-31 |
Family
ID=46547702
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/506,685 Active 2031-02-05 US8234285B1 (en) | 2009-07-10 | 2009-07-21 | Context-dependent similarity measurements |
US13/532,972 Expired - Fee Related US8538972B1 (en) | 2009-07-10 | 2012-06-26 | Context-dependent similarity measurements |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/532,972 Expired - Fee Related US8538972B1 (en) | 2009-07-10 | 2012-06-26 | Context-dependent similarity measurements |
Country Status (1)
Country | Link |
---|---|
US (2) | US8234285B1 (en) |
Cited By (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130124624A1 (en) * | 2011-11-11 | 2013-05-16 | Robert William Cathcart | Enabling preference portability for users of a social networking system |
US20130173585A1 (en) * | 2012-01-03 | 2013-07-04 | International Business Machines Corporation | Optimizing map/reduce searches by using synthetic events |
CN103279478A (en) * | 2013-04-19 | 2013-09-04 | 国家电网公司 | Method for extracting features based on distributed mutual information documents |
US8620958B1 (en) | 2012-09-11 | 2013-12-31 | International Business Machines Corporation | Dimensionally constrained synthetic context objects database |
US8676857B1 (en) | 2012-08-23 | 2014-03-18 | International Business Machines Corporation | Context-based search for a data store related to a graph node |
US20140164057A1 (en) * | 2012-12-07 | 2014-06-12 | Capital One Financial Corporation | Systems and methods for determining consumer purchasing behavior |
US8782777B2 (en) | 2012-09-27 | 2014-07-15 | International Business Machines Corporation | Use of synthetic context-based objects to secure data stores |
US8856946B2 (en) | 2013-01-31 | 2014-10-07 | International Business Machines Corporation | Security filter for context-based data gravity wells |
US8898165B2 (en) | 2012-07-02 | 2014-11-25 | International Business Machines Corporation | Identification of null sets in a context-based electronic document search |
US8903813B2 (en) | 2012-07-02 | 2014-12-02 | International Business Machines Corporation | Context-based electronic document search using a synthetic event |
US8914413B2 (en) | 2013-01-02 | 2014-12-16 | International Business Machines Corporation | Context-based data gravity wells |
US8931109B2 (en) | 2012-11-19 | 2015-01-06 | International Business Machines Corporation | Context-based security screening for accessing data |
US8959119B2 (en) | 2012-08-27 | 2015-02-17 | International Business Machines Corporation | Context-based graph-relational intersect derived database |
US8983981B2 (en) | 2013-01-02 | 2015-03-17 | International Business Machines Corporation | Conformed dimensional and context-based data gravity wells |
US9053102B2 (en) | 2013-01-31 | 2015-06-09 | International Business Machines Corporation | Generation of synthetic context frameworks for dimensionally constrained hierarchical synthetic context-based objects |
US9069752B2 (en) | 2013-01-31 | 2015-06-30 | International Business Machines Corporation | Measuring and displaying facets in context-based conformed dimensional data gravity wells |
US9070087B2 (en) * | 2011-10-11 | 2015-06-30 | Hamid Hatami-Hanza | Methods and systems for investigation of compositions of ontological subjects |
US20150227559A1 (en) * | 2007-07-26 | 2015-08-13 | Dr. Hamid Hatami-Hanza | Methods and systems for investigation of compositions of ontological subjects |
US9110722B2 (en) | 2013-02-28 | 2015-08-18 | International Business Machines Corporation | Data processing work allocation |
US9195608B2 (en) | 2013-05-17 | 2015-11-24 | International Business Machines Corporation | Stored data analysis |
US9223846B2 (en) | 2012-09-18 | 2015-12-29 | International Business Machines Corporation | Context-based navigation through a database |
US9229932B2 (en) | 2013-01-02 | 2016-01-05 | International Business Machines Corporation | Conformed dimensional data gravity wells |
US9251237B2 (en) | 2012-09-11 | 2016-02-02 | International Business Machines Corporation | User-specific synthetic context object matching |
US9262499B2 (en) | 2012-08-08 | 2016-02-16 | International Business Machines Corporation | Context-based graphical database |
US9286391B1 (en) * | 2012-03-19 | 2016-03-15 | Amazon Technologies, Inc. | Clustering and recommending items based upon keyword analysis |
US9292506B2 (en) | 2013-02-28 | 2016-03-22 | International Business Machines Corporation | Dynamic generation of demonstrative aids for a meeting |
US20160092557A1 (en) * | 2014-09-26 | 2016-03-31 | Oracle International Corporation | Techniques for similarity analysis and data enrichment using knowledge sources |
US9348794B2 (en) | 2013-05-17 | 2016-05-24 | International Business Machines Corporation | Population of context-based data gravity wells |
US9460200B2 (en) | 2012-07-02 | 2016-10-04 | International Business Machines Corporation | Activity recommendation based on a context-based electronic files search |
US9619580B2 (en) | 2012-09-11 | 2017-04-11 | International Business Machines Corporation | Generation of synthetic context objects |
US9741138B2 (en) | 2012-10-10 | 2017-08-22 | International Business Machines Corporation | Node cluster relationships in a graph database |
US10152526B2 (en) | 2013-04-11 | 2018-12-11 | International Business Machines Corporation | Generation of synthetic context objects using bounded context objects |
US10296192B2 (en) | 2014-09-26 | 2019-05-21 | Oracle International Corporation | Dynamic visual profiling and visualization of high volume datasets and real-time smart sampling and statistical profiling of extremely large datasets |
US10402426B2 (en) * | 2012-09-26 | 2019-09-03 | Facebook, Inc. | Generating event suggestions for users from social information |
US10496716B2 (en) | 2015-08-31 | 2019-12-03 | Microsoft Technology Licensing, Llc | Discovery of network based data sources for ingestion and recommendations |
US10540381B1 (en) | 2019-08-09 | 2020-01-21 | Capital One Services, Llc | Techniques and components to find new instances of text documents and identify known response templates |
US10601761B2 (en) | 2012-08-13 | 2020-03-24 | Facebook, Inc. | Generating guest suggestions for events in a social networking system |
CN111061870A (en) * | 2019-11-25 | 2020-04-24 | 三角兽（北京）科技有限公司 | Article quality evaluation method and device |
CN111625468A (en) * | 2020-06-05 | 2020-09-04 | 中国银行股份有限公司 | Test case duplicate removal method and device |
US10810472B2 (en) | 2017-05-26 | 2020-10-20 | Oracle International Corporation | Techniques for sentiment analysis of data using a convolutional neural network and a co-occurrence network |
US10885056B2 (en) | 2017-09-29 | 2021-01-05 | Oracle International Corporation | Data standardization techniques |
US10891272B2 (en) | 2014-09-26 | 2021-01-12 | Oracle International Corporation | Declarative language and visualization system for recommended data transformations and repairs |
US10936599B2 (en) | 2017-09-29 | 2021-03-02 | Oracle International Corporation | Adaptive recommendations |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104951666A (en) * | 2015-07-24 | 2015-09-30 | 苏州大学张家港工业技术研究院 | Disease diagnosis method and device |
CN108121882A (en) * | 2018-01-15 | 2018-06-05 | 中国人民解放军陆军装甲兵学院 | Demand matter-element structure match method based on the degree of correlation |
CN108917677B (en) * | 2018-07-19 | 2020-03-17 | 福建天晴数码有限公司 | Cubic room internal dimension measuring method and storage medium |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6738759B1 (en) * | 2000-07-07 | 2004-05-18 | Infoglide Corporation, Inc. | System and method for performing similarity searching using pointer optimization |
US7890514B1 (en) * | 2001-05-07 | 2011-02-15 | Ixreveal, Inc. | Concept-based searching of unstructured objects |
US20110087680A1 (en) * | 2007-10-29 | 2011-04-14 | Vanessa Murdock | Method for Selecting Electronic Advertisements Using Machine Translation Techniques |
US20110106821A1 (en) * | 2009-10-30 | 2011-05-05 | International Business Machines Corporation | Semantic-Aware Record Matching |
-
2009
- 2009-07-21 US US12/506,685 patent/US8234285B1/en active Active
-
2012
- 2012-06-26 US US13/532,972 patent/US8538972B1/en not_active Expired - Fee Related
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6738759B1 (en) * | 2000-07-07 | 2004-05-18 | Infoglide Corporation, Inc. | System and method for performing similarity searching using pointer optimization |
US7890514B1 (en) * | 2001-05-07 | 2011-02-15 | Ixreveal, Inc. | Concept-based searching of unstructured objects |
US20110087680A1 (en) * | 2007-10-29 | 2011-04-14 | Vanessa Murdock | Method for Selecting Electronic Advertisements Using Machine Translation Techniques |
US20110106821A1 (en) * | 2009-10-30 | 2011-05-05 | International Business Machines Corporation | Semantic-Aware Record Matching |
Non-Patent Citations (13)
Title |
---|
Aizawa, "An Information-Theoretic Perspective of TF-IDF Measures", Information Processing and Management vol. 39, pp. 45-65, 2003, Elsevier Science Ltd. * |
Basu et al., "Constrained Clustering: Advances in Algorithms, Theory, and Applications." Chapman & Hall/CRC Press, pp. 1-462, 2008. |
Bilenko et al., "Adaptive Name Matching in Information Integration." IEEE Intelligent Systems, 18(5): 16-23, Sep./Oct. 2003. |
Cohen and Hirsh, "Joins that Generalize: Text Classification Using WHIRL." in Proceedings of the Fourth International Conference on Knowledge Discovery and Data Minings, pp. 169-173, 1998. |
Cohen et al., "A Comparison of String Distance Metrics for Name-Matching Tasks," in Proceedings of the IJACI-2003 Workshop on Information Integration on the Web (IIWeb-03), 2003 (6 pages). |
Cohen, "Data Integration Using Similarity Joins and a Word-Based Information Representation Language." ACM Transactions on Information Systems, 18(3):288-321, Jul. 2000. |
Dean & Ghemawat, "MapReduce: Simplified Data Processing on Large Clusters." in OSDI'04: Sixth Symposium on Operating System Design and Implementation, pp. 1-13, 2004. |
Hernandez et al., "Modeling Context Through Domain Ontologies", Inf Retrieval vol. 10, pp. 143-172, 2007, Springer. * |
Li et al., "Video Search in Concept Subspace: A Text-Like Paradigm", CIVR'07, pp. 603-610, 2007, ACM. * |
Oyama and Tanaka, "Distance Metric Learning from Cannot-be-Linked Example Pairs, With Application to Name Disambiguation." in Constrained Clustering: Advances in Algorithms, Theory, and Applications, Chapman & Hall/CRC Press, pp. 357-374 2008. |
Salton, "Automatic Text Processing." Addison Welsley, pp. 1-563, 1989. |
Wagstaff and Cardie, "Clustering With Instance-Level Constraints." in Proceedings of the International Conference on Machine Learning (ICML), pp. 1103-1110, 2000. |
Yang et al., "ContextSeer: Context Search and Tecommendation at Query Time for Shared Consumer Products", MM'08, pp. 199-208, 2008, ACM. * |
Cited By (70)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9684678B2 (en) * | 2007-07-26 | 2017-06-20 | Hamid Hatami-Hanza | Methods and system for investigation of compositions of ontological subjects |
US20150227559A1 (en) * | 2007-07-26 | 2015-08-13 | Dr. Hamid Hatami-Hanza | Methods and systems for investigation of compositions of ontological subjects |
US9070087B2 (en) * | 2011-10-11 | 2015-06-30 | Hamid Hatami-Hanza | Methods and systems for investigation of compositions of ontological subjects |
US20130124624A1 (en) * | 2011-11-11 | 2013-05-16 | Robert William Cathcart | Enabling preference portability for users of a social networking system |
US10210465B2 (en) * | 2011-11-11 | 2019-02-19 | Facebook, Inc. | Enabling preference portability for users of a social networking system |
US8799269B2 (en) * | 2012-01-03 | 2014-08-05 | International Business Machines Corporation | Optimizing map/reduce searches by using synthetic events |
US20130173585A1 (en) * | 2012-01-03 | 2013-07-04 | International Business Machines Corporation | Optimizing map/reduce searches by using synthetic events |
US10095771B1 (en) | 2012-03-19 | 2018-10-09 | Amazon Technologies, Inc. | Clustering and recommending items based upon keyword analysis |
US9286391B1 (en) * | 2012-03-19 | 2016-03-15 | Amazon Technologies, Inc. | Clustering and recommending items based upon keyword analysis |
US8898165B2 (en) | 2012-07-02 | 2014-11-25 | International Business Machines Corporation | Identification of null sets in a context-based electronic document search |
US8903813B2 (en) | 2012-07-02 | 2014-12-02 | International Business Machines Corporation | Context-based electronic document search using a synthetic event |
US9460200B2 (en) | 2012-07-02 | 2016-10-04 | International Business Machines Corporation | Activity recommendation based on a context-based electronic files search |
US9262499B2 (en) | 2012-08-08 | 2016-02-16 | International Business Machines Corporation | Context-based graphical database |
US10601761B2 (en) | 2012-08-13 | 2020-03-24 | Facebook, Inc. | Generating guest suggestions for events in a social networking system |
US8676857B1 (en) | 2012-08-23 | 2014-03-18 | International Business Machines Corporation | Context-based search for a data store related to a graph node |
US8959119B2 (en) | 2012-08-27 | 2015-02-17 | International Business Machines Corporation | Context-based graph-relational intersect derived database |
US8620958B1 (en) | 2012-09-11 | 2013-12-31 | International Business Machines Corporation | Dimensionally constrained synthetic context objects database |
US9286358B2 (en) | 2012-09-11 | 2016-03-15 | International Business Machines Corporation | Dimensionally constrained synthetic context objects database |
US9069838B2 (en) | 2012-09-11 | 2015-06-30 | International Business Machines Corporation | Dimensionally constrained synthetic context objects database |
US9251237B2 (en) | 2012-09-11 | 2016-02-02 | International Business Machines Corporation | User-specific synthetic context object matching |
US9619580B2 (en) | 2012-09-11 | 2017-04-11 | International Business Machines Corporation | Generation of synthetic context objects |
US9223846B2 (en) | 2012-09-18 | 2015-12-29 | International Business Machines Corporation | Context-based navigation through a database |
US11226988B1 (en) * | 2012-09-26 | 2022-01-18 | Meta Platforms, Inc. | Generating event suggestions for users from social information |
US10402426B2 (en) * | 2012-09-26 | 2019-09-03 | Facebook, Inc. | Generating event suggestions for users from social information |
US8782777B2 (en) | 2012-09-27 | 2014-07-15 | International Business Machines Corporation | Use of synthetic context-based objects to secure data stores |
US9741138B2 (en) | 2012-10-10 | 2017-08-22 | International Business Machines Corporation | Node cluster relationships in a graph database |
US9811683B2 (en) | 2012-11-19 | 2017-11-07 | International Business Machines Corporation | Context-based security screening for accessing data |
US9477844B2 (en) | 2012-11-19 | 2016-10-25 | International Business Machines Corporation | Context-based security screening for accessing data |
US8931109B2 (en) | 2012-11-19 | 2015-01-06 | International Business Machines Corporation | Context-based security screening for accessing data |
US20140164057A1 (en) * | 2012-12-07 | 2014-06-12 | Capital One Financial Corporation | Systems and methods for determining consumer purchasing behavior |
US8914413B2 (en) | 2013-01-02 | 2014-12-16 | International Business Machines Corporation | Context-based data gravity wells |
US9251246B2 (en) | 2013-01-02 | 2016-02-02 | International Business Machines Corporation | Conformed dimensional and context-based data gravity wells |
US9229932B2 (en) | 2013-01-02 | 2016-01-05 | International Business Machines Corporation | Conformed dimensional data gravity wells |
US8983981B2 (en) | 2013-01-02 | 2015-03-17 | International Business Machines Corporation | Conformed dimensional and context-based data gravity wells |
US9449073B2 (en) | 2013-01-31 | 2016-09-20 | International Business Machines Corporation | Measuring and displaying facets in context-based conformed dimensional data gravity wells |
US10127303B2 (en) | 2013-01-31 | 2018-11-13 | International Business Machines Corporation | Measuring and displaying facets in context-based conformed dimensional data gravity wells |
US9069752B2 (en) | 2013-01-31 | 2015-06-30 | International Business Machines Corporation | Measuring and displaying facets in context-based conformed dimensional data gravity wells |
US9607048B2 (en) | 2013-01-31 | 2017-03-28 | International Business Machines Corporation | Generation of synthetic context frameworks for dimensionally constrained hierarchical synthetic context-based objects |
US9619468B2 (en) | 2013-01-31 | 2017-04-11 | International Business Machines Coporation | Generation of synthetic context frameworks for dimensionally constrained hierarchical synthetic context-based objects |
US9053102B2 (en) | 2013-01-31 | 2015-06-09 | International Business Machines Corporation | Generation of synthetic context frameworks for dimensionally constrained hierarchical synthetic context-based objects |
US8856946B2 (en) | 2013-01-31 | 2014-10-07 | International Business Machines Corporation | Security filter for context-based data gravity wells |
US9292506B2 (en) | 2013-02-28 | 2016-03-22 | International Business Machines Corporation | Dynamic generation of demonstrative aids for a meeting |
US9110722B2 (en) | 2013-02-28 | 2015-08-18 | International Business Machines Corporation | Data processing work allocation |
US9372732B2 (en) | 2013-02-28 | 2016-06-21 | International Business Machines Corporation | Data processing work allocation |
US11151154B2 (en) | 2013-04-11 | 2021-10-19 | International Business Machines Corporation | Generation of synthetic context objects using bounded context objects |
US10152526B2 (en) | 2013-04-11 | 2018-12-11 | International Business Machines Corporation | Generation of synthetic context objects using bounded context objects |
CN103279478A (en) * | 2013-04-19 | 2013-09-04 | 国家电网公司 | Method for extracting features based on distributed mutual information documents |
CN103279478B (en) * | 2013-04-19 | 2016-08-10 | 国家电网公司 | A kind of based on distributed mutual information file characteristics extracting method |
US10521434B2 (en) | 2013-05-17 | 2019-12-31 | International Business Machines Corporation | Population of context-based data gravity wells |
US9195608B2 (en) | 2013-05-17 | 2015-11-24 | International Business Machines Corporation | Stored data analysis |
US9348794B2 (en) | 2013-05-17 | 2016-05-24 | International Business Machines Corporation | Population of context-based data gravity wells |
US11379506B2 (en) | 2014-09-26 | 2022-07-05 | Oracle International Corporation | Techniques for similarity analysis and data enrichment using knowledge sources |
US10976907B2 (en) | 2014-09-26 | 2021-04-13 | Oracle International Corporation | Declarative external data source importation, exportation, and metadata reflection utilizing http and HDFS protocols |
US10210246B2 (en) * | 2014-09-26 | 2019-02-19 | Oracle International Corporation | Techniques for similarity analysis and data enrichment using knowledge sources |
US11693549B2 (en) | 2014-09-26 | 2023-07-04 | Oracle International Corporation | Declarative external data source importation, exportation, and metadata reflection utilizing HTTP and HDFS protocols |
US10296192B2 (en) | 2014-09-26 | 2019-05-21 | Oracle International Corporation | Dynamic visual profiling and visualization of high volume datasets and real-time smart sampling and statistical profiling of extremely large datasets |
US20160092557A1 (en) * | 2014-09-26 | 2016-03-31 | Oracle International Corporation | Techniques for similarity analysis and data enrichment using knowledge sources |
US10891272B2 (en) | 2014-09-26 | 2021-01-12 | Oracle International Corporation | Declarative language and visualization system for recommended data transformations and repairs |
US10915233B2 (en) | 2014-09-26 | 2021-02-09 | Oracle International Corporation | Automated entity correlation and classification across heterogeneous datasets |
US10496716B2 (en) | 2015-08-31 | 2019-12-03 | Microsoft Technology Licensing, Llc | Discovery of network based data sources for ingestion and recommendations |
US10810472B2 (en) | 2017-05-26 | 2020-10-20 | Oracle International Corporation | Techniques for sentiment analysis of data using a convolutional neural network and a co-occurrence network |
US11417131B2 (en) | 2017-05-26 | 2022-08-16 | Oracle International Corporation | Techniques for sentiment analysis of data using a convolutional neural network and a co-occurrence network |
US10936599B2 (en) | 2017-09-29 | 2021-03-02 | Oracle International Corporation | Adaptive recommendations |
US10885056B2 (en) | 2017-09-29 | 2021-01-05 | Oracle International Corporation | Data standardization techniques |
US11500880B2 (en) | 2017-09-29 | 2022-11-15 | Oracle International Corporation | Adaptive recommendations |
US10540381B1 (en) | 2019-08-09 | 2020-01-21 | Capital One Services, Llc | Techniques and components to find new instances of text documents and identify known response templates |
CN111061870B (en) * | 2019-11-25 | 2023-06-06 | 腾讯科技（深圳）有限公司 | Article quality evaluation method and device |
CN111061870A (en) * | 2019-11-25 | 2020-04-24 | 三角兽（北京）科技有限公司 | Article quality evaluation method and device |
CN111625468A (en) * | 2020-06-05 | 2020-09-04 | 中国银行股份有限公司 | Test case duplicate removal method and device |
CN111625468B (en) * | 2020-06-05 | 2024-04-16 | 中国银行股份有限公司 | Test case duplicate removal method and device |
Also Published As
Publication number | Publication date |
---|---|
US8538972B1 (en) | 2013-09-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8234285B1 (en) | Context-dependent similarity measurements | |
US10394878B2 (en) | Associating still images and videos | |
US9171081B2 (en) | Entity augmentation service from latent relational data | |
US9792304B1 (en) | Query by image | |
US9026518B2 (en) | System and method for clustering content according to similarity | |
US8438178B2 (en) | Interactions among online digital identities | |
US9275310B2 (en) | Evaluating image similarity | |
US9436707B2 (en) | Content-based image ranking | |
US10019442B2 (en) | Method and system for peer detection | |
US8484225B1 (en) | Predicting object identity using an ensemble of predictors | |
US9569499B2 (en) | Method and apparatus for recommending content on the internet by evaluating users having similar preference tendencies | |
Caicedo et al. | Multimodal representation, indexing, automated annotation and retrieval of image collections via non-negative matrix factorization | |
US8909625B1 (en) | Image search | |
US9390165B2 (en) | Summarization of short comments | |
Chan et al. | A recommender system based on historical usage data for web service discovery | |
US20120317088A1 (en) | Associating Search Queries and Entities | |
US9183312B2 (en) | Image display within web search results | |
US8458194B1 (en) | System and method for content-based document organization and filing | |
US9424337B2 (en) | Number of clusters estimation | |
Vandic et al. | Facet selection algorithms for web product search | |
JP6767342B2 (en) | Search device, search method and search program | |
US20180052933A1 (en) | Control of Document Similarity Determinations by Respective Nodes of a Plurality of Computing Devices | |
US20190095400A1 (en) | Analytic system to incrementally update a support vector data description for outlier identification | |
US9424338B2 (en) | Clustering queries for image search | |
US8468163B2 (en) | Ontology system providing enhanced search capability with ranking of results |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:COHEN, WILLIAM W.;REEL/FRAME:023096/0879Effective date: 20090721 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
US20120222128A1 - Distribution of content document with security, customization and scalability - Google Patents
Distribution of content document with security, customization and scalability Download PDFInfo
- Publication number
- US20120222128A1 US20120222128A1 US13/468,350 US201213468350A US2012222128A1 US 20120222128 A1 US20120222128 A1 US 20120222128A1 US 201213468350 A US201213468350 A US 201213468350A US 2012222128 A1 US2012222128 A1 US 2012222128A1
- Authority
- US
- United States
- Prior art keywords
- user
- container document
- user group
- content
- container
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
Definitions
- Embodiments of the present invention relate to digital data processing for serving content over a network.
- Portals enable users to personalize content on the portal. Portals are offered from a portal developer directly to an end user, and do not provide a means for a third party to add value. Portals cannot be easily mass-produced in a customizable way for large numbers of portal providers. Moreover, the content that a portal permits an end user to incorporate is usually limited and specified by the portal provider.
- Embodiments feature methods, systems, apparatus, including computer program product apparatus.
- various exemplary embodiments of the present inventions may be directed to a method that includes providing a customizable content document associated with a first entity, enabling a second entity to specify content to be included for users associated with the entity in the customizable content document, and delivering the customized content document incorporating the specified content in a secure manner to users associated with the second entity.
- Various exemplary embodiments may also be directed to a method that includes receiving one or more selections associated with a user group, and serving a user a container document.
- the one or more selections identify content to be served to users associated with the user group for one or more container documents and the container document includes content identified by the one or more selections for the user group with which a user is associated. Also, the content is incorporated securely into the container document.
- Various exemplary embodiments may also be directed to a method that includes receiving one or more selections associated with a user group, and transmitting the selections to a container server system that serves a container document to users of the user group based on a request for the content.
- the one or more selections identify content to be served to users associated with the user group for one or more container documents.
- Various exemplary embodiments may also be directed to a system that serves content in a container document.
- the system includes a server to receive a request for a container document, determine whether the request is for a container document associated with a user group, request configuration information from a configuration server based on a determination that the request is for a container document associated with a user group, receive the configuration information from the configuration server, and serve the requested container document using the configuration information.
- the configuration server enables configuration of at least a portion of a container document and the container document is associated with a user group.
- Various exemplary embodiments may also be directed to a method that includes receiving a request for a container document, determining whether the request is for a container document associated with a user group, requesting configuration information based on a determination that the request is for a container document associated with a user group, receiving the configuration information, and serving the container document using the configuration information.
- the configuration information defines at least a portion of the container document associated with the user group.
- Various exemplary embodiments may also be directed to a method that includes receiving a request for a container document, determining whether the request is for a container document associated with a user group, determining whether a requestor of the request is associated with a level of status within the user group among a plurality of levels of status within the user group, determining the level of status of the requestor based on a determination that the requestor is associated with a level of status within the user group, requesting configuration information based on a determination that the container document is associated with a user group and the level of status, receiving the configuration information, and serving the container document using the configuration information.
- Various exemplary embodiments may also be directed to a method that includes receiving a request for a container document, determining whether the request is for a container document associated with a user group, determining a location associated with the request, requesting configuration information based on a determination that the container document is associated with a user group and the location, receiving the configuration information, and serving the container document using the configuration information.
- Various exemplary embodiments may also be directed to a system that serves content in a container document.
- This system includes a server to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine whether a requestor of the request is associated with a level of status within the user group among a plurality of levels of status within the user group, determine the level of status of the requestor based on a determination that the requestor is associated with a level of status within the user group, request configuration information from a configuration server based on a determination that the request is for a container document associated with a user group and the level of status, receive the configuration information from the configuration server, and serve the requested container document using the configuration information.
- the configuration server enables configuration of at least a portion of a container document, and the container document is associated with a user group.
- Various exemplary embodiments may also be directed to a system that serves content in a container document.
- This system includes a server to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine a location associated with the request, request configuration information from a configuration server based on a determination that the request is for a container document associated with a user group and the location, receive the configuration information from the configuration server, and serve the requested container document using the configuration information.
- the configuration server enables configuration of at least a portion of a container document and the container document is associated with a user group.
- Various exemplary embodiments may also be directed to a computer-accessible medium encoded with computer program code.
- the computer program code is effective to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine whether a requestor of the request is associated with a level of status within the user group among a plurality of levels of status within the user group, determine the level of status of the requestor based on a determination that the requestor is associated with a level of status within the user group, request configuration information based on a determination that the container document is associated with a user group and the level of status, receive the configuration information, and serve the container document using the configuration information.
- Various exemplary embodiments may also be directed to a computer-accessible medium encoded with computer program code.
- the computer program code is effective to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine a location associated with the request, request configuration information based on a determination that the container document is associated with a user group and the location, receive the configuration information, and serve the container document using the configuration information.
- Various exemplary embodiments may also be directed to a method that includes authenticating a user based on the user's association with a user group, providing the user with an application, receiving input from the user regarding configuring the container document associated with the user group, providing an actual representation of the container document to the user based on the received input, and publishing the container document.
- the application enables the user to configure a container document associated with the user group.
- Various exemplary embodiments may also be directed to a method that includes registering components of a user interface, registering events regarding configuration of a container document, associating registered components with registered events, receiving information associated with registered event that has occurred for one of the registered components, and providing the information associated with registered event to all other associated components.
- the user interface is associated with configuring a container document of behalf of a user group.
- Various exemplary embodiments may also be directed to a system that includes a device to register components of a user interface, register events regarding configuration of a container document, associate registered components with registered events, receive information associated with registered event that has occurred for one of the registered components from the user interface, and provide the information associated with registered event to all other associated components.
- FIG. 1( a ) depicts an overview of participating entities in a system and method provided according to various embodiments of the present invention.
- FIG. 1( b ) depicts an illustrative process for obtaining customizations from users and user groups according to various embodiments of the present invention.
- FIG. 1( c ) depicts an overall system architecture according to various embodiments of the present invention.
- FIG. 2 depicts an illustrative container document according to various embodiments of the present invention.
- FIG. 3 depicts an illustrative configuration server according to various embodiments of the present invention.
- FIG. 4 depicts an illustrative process for determining a validator according to various embodiments of the present invention.
- FIG. 5 depicts an illustrative process for configuring a personalized container document according to various embodiments of the present invention.
- FIG. 6 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 7 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 8 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 9 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 10 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 11 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 12 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 13 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 14 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 15 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 16 depicts an illustrative process for serving a personalized container document according to various embodiments of the present invention.
- FIG. 17 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 18 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 19 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 20 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 21 depicts an illustrative application interface according to various embodiments of the present invention.
- FIG. 22 depicts an illustrative process for serving a personalized container document according to various embodiments of the present invention.
- One embodiment of the present invention involves a third party service of securely serving arbitrarily selectable and dynamic content to users on a scalable basis.
- the one embodiment involves four kinds of entities: (1) a hosted server system (e.g., Google's Personalized Home Page Server) that distributes a highly configurable, dynamic and secure container document (e.g., a portal page such as Google's Personalized Home Page) to partners or other user groups; (2) partners, wherein each partner provides configuration through selection of arbitrary and dynamic content that it wants its users to see in the container document and enables its end users to further customize the content; (3) end users associated with a partner that may select further customizations including additional arbitrary and dynamic content; and (4) content providers.
- These parties interact with the host server system in a secure and scalable way.
- the end users then receive from the scalable hosted server system a container document that has been configured according to the multiple levels of configuration and that includes the arbitrarily selected content (including both dynamic and static content) incorporated in a secure manner.
- Some of the features of this service and system include third party servicing, security, arbitrary selectability, dynamic content, scalability, multiple levels of configurability, and dynamic provision of container documents.
- the service may be considered a “third party service” in that a hosted server system (e.g., Google) acts as a third party with respect to (i) end users being served content (ii) an entity which specifies the content available to the end users, and (iii) content providers.
- entity specifying content is typically a user group, such as a partner.
- partner When the term partner is used in the instant specification, it should be understood to apply equally to other user groups and when the term user group is used, it should be understood to apply to a partner as one example.
- a company and its customers are examples of the partner entity and end users, respectively.
- a university and its students are also examples of the partner entity and its end users.
- a company can provide a configured home page experience for its users and select the content it wants its users to see on that configured home page. It does so by leveraging the hosted server system's service of the container document. In other words, the partner may provide this service without providing the technology to output the configured home page that is provided by the hosted server system.
- the term content provider refers to a source of information. Examples of a content provider include but are not limited to a provider of a module, a news feed, a source of traffic information, a source of financial information, and/or a source of entertainment information.
- the container document may be secure despite the arbitrarily selectable and dynamic content (i.e., the hosted server system does not limit the initial selections made by the third party or users).
- a partner may select a module created by an entity unknown to the hosted server system.
- the hosted server system may render a container document that includes the unknown entity's module by implementing security features to avoid having to approve each module ahead of its selection.
- Security may be implemented by compartmentalization, encapsulation (e.g., through the use of IFRAME techniques as described in more detail below) and/or input filtering (e.g., blacklisting, whitelisting, etc. of content).
- compartmentalization involves limiting the impact of an attack by a malicious or vulnerable (e.g., unsafe) partner or end user to the customized container documents associated with the partner or end user and not other compartments or accounts available from the system associated with the same login or identity used to access the customized container document.
- a malicious or vulnerable (e.g., unsafe) partner or end user to the customized container documents associated with the partner or end user and not other compartments or accounts available from the system associated with the same login or identity used to access the customized container document.
- Compartmentalization is a key component of the security because the security of the third party is not compromised despite the fact that the content is arbitrarily selectable and dynamic. If the user authentication is compromised, e.g. by a malicious partner or due to a partner vulnerability (XSS, etc.), then only the user's personalized page is compromised. The attacker can't gain access to the user's search history or email messages or other “compartments,” even after a successful attack.
- the security features implemented enable the partner and its users to configure their experience while leveraging the hosted server system's platform.
- the security features described enable the system to permit arbitrary selection of content.
- the partner entity and associated users may select, from any content provider (e.g., sources including the hosted server system, the third party and/or other sources of content) content to be made available for serving to users associated with the partner entity.
- a partner may choose to limit the selections available to its end users or not.
- the system may avoid use of a pre-approved list of content providers in this way.
- Content may be of a wide variety of input types as well, as detailed below.
- Dynamic Content The content selected may be dynamic content, static content or both.
- the content may also be programmatic.
- the hosted server system provides this service from a scalable platform achieved, for example, through segmenting data for use with a non-relational database server.
- This solution balances scale and ease of data coherency.
- Certain types of non-relational data storage systems allow massively scalable write operations. For example, a database that does not provide transaction or locking support while storing time-series data with entries is not considered a relational database because an entry for the relation (Column1Value, Column2Value, . . . ) is not unique, but rather a time series. By using such a non-relational database, the system may become massively scalable.
- a simple non-relational storage system as described above enables a system and service for distributing configurable container documents to perform well on a massive scale.
- Such a system and service involves centralized writing and decentralized reads, high throughput (scalability and simplicity) and high availability (supporting failover).
- the database structure described enables implementation at much lower cost (fewer servers needed at a given scale) than other alternatives such as the highly-replicated relational database example.
- the content served may be configured by the partner/user group, which configuration can specify constraints under which end users associated with the entity may further configure the content.
- Partner/user groups may select a uniquely indexed partner domain that may be stored in a dynamic table by the hosted server system. By storing this uniquely indexed partner domain, the hosted server system may dynamically provide container documents associated with a partner/user group in a highly scalable manner.
- an entity e.g., partner or user group
- entity such as a corporation, university club, merchant, service provider, etc.
- the service also provides the entity with a mechanism to offer a unique content offering to their the users associated with the entity.
- the entity using this service converts a cost center into a profit center.
- An entity such as a corporation, usually pays to have content served to its customers.
- the corporation turns a profit by including content that generates revenue, such as content that serves advertisements that pay those who serve the advertisements on various payment bases.
- the service is easy to use through an intuitive and easy-to-use interface by which a human operator associated with the partner entity (e.g., a representative) configures content, at either the entity level or the end user level.
- a human operator associated with the partner entity e.g., a representative
- FIG. 1( a ) depicts an overview of various entities involved in this system and service.
- the service and system described may be implemented using a hosted server system 10 providing service to a partner system 40 over a network 26 (e.g., the Internet) in cooperation with one or more content providers 31 .
- Partner system 40 may, through the use of partner admin users 17 , provide selections and configurations to hosted server system 10 indicating a domain associated with the partner system, the authentication method for one or more partner end users, and the content to be provided in a container document served by hosted server system 10 to one or more partner end users 11 .
- the hosted server system 10 may operate with a distribution server 13 to distribute the service to one or more partner systems.
- a data storage system 20 may be provided that stores container data, user data, and partner data. That data may be used by hosted server system 10 to configure the container document for users based on configurations set up by the partner and, if provided, each partner end user 11 .
- partner admin users 17 have administrative rights whereas partner end users 11 do not.
- Partner admin users 17 can, for example, control the authentication methods for authenticating partner end users 11 and which content provider would be available for selection by partner end users 11 and, furthermore, the degree of configurability.
- FIG. 1( b ) provides a diagram illustrating actions that may be involved in this service.
- a partner or user group establishes a relationship with the hosted server system.
- the partner may be a company, university, club or other organization that desires to provide a customized experience for its users.
- a partner admin user may then configure the container document, such as an Internet portal page or personalized home page in a number of ways, all detailed below.
- Customization can include, for example, the partner's specification of constraints that one of its end users is subject to for selecting content and/or for configuring a personal Web page. Note that the partner can specify different constraints for different end users.
- the system may then make the configured container document available to users associated with the partner.
- partner end users may be identified by the partner to the host system in some way.
- Partner end users may include employees of a company, students of a university or other school, members of a club, subscribers to a service, etc.
- a partner end user may be served a default partner-configured container document.
- This default partner-configured container document includes a first level of content and/or configurations that is selected by the partner to be served to its users.
- an end user may provide configurations for the configured container document.
- This configured container document includes an additional level of content selections and/or configurations that are based on the end user's desires.
- implementation features that may be included in this system and service including multiple levels of configuration, content freezing, incorporation of multiple types of modules, multiple channels of access to the configured container document, use of preferences and user identification to change content modules and content within modules, incorporation of search or other revenue generating modules, internationalization of modules, data driven container document implementations, use of subscription-based modules, modification of a default container document on the fly according to partner configurations, live preview of customizations and live updates to generated configured container documents.
- a partner may set one level of configuration and/or preference, including what modules are to be included in the default partner configured container document (e.g., the partner wants a weather module, a traffic module, a stock module and a calculator module), any values for inputs to the modules (providing a zip code for the weather and traffic or a list of stocks for the stock module), color, skin style, positioning of modules and many others as shown in the illustrative pages below, and what, if any, modules may be frozen.
- a partner makes any changes to its configurations, they may automatically apply to all configured container documents for all end users associated with the partner.
- the manner of a partner providing configuration/customization information is detailed below. End users may then specify a second level of configuration/customization, with such end user configurations and partner configurations being applied to the partner-configured container document for that end user.
- One specific type of partner configuration may be a content freeze.
- the service provides techniques that the partner may use to disable configurability of all or only a portion of content served to end users.
- the content chosen for disabling is, in essence, frozen in that it cannot be further configured by a partner end user.
- content freeze can but does not necessarily freeze dynamic content, which can be still implemented in a frozen portion of a personalized Web page, for example. (That is, freezing a portion of the page prevents further configuration of the portion but allows the portion to include dynamic content.)
- a column of otherwise configurable content of a personalized web page may be thus frozen, for example.
- This feature can be implemented by CGI parameters and authentication techniques. For example, a page request specifying that the user is a partner admin user may provide authentication values through cookies, enabling certain query parameters, so that the hosted server system provides an unfrozen page, whereas end users associated with the partner may receive a version with frozen content.
- the service also allows the partner administrator to view the page as if the administrator were an unprivileged user. As noted above, the partner admin user may view the frozen content in an unfrozen context. However, if the partner is to preview the page to determine whether it is properly configured, the partner may also be able to view the page in a frozen context.
- the service enables correct context-dependent behavior using authentication tokens that are not only used to authenticate access to the page, but also to authenticate access to the query parameters used to enable the context dependent behavior.
- End users may have relationships with both the partner and the hosted server system.
- the hosted server system may enable the user to access a partner container document using authentication values associated with an account provided by the hosted server system and/or an account provided by the partner.
- the hosted server system is Google
- a user may be able to access a partner-specific personalized home page through use of a Google login and password.
- a user may be able to access a partner-specific personalized home page through use of a login and password associated with the partner.
- Either user identification may be used to receive the partner-specific container document.
- the partner admin user may select an authentication method for authenticating end users from a list of predetermined authentication methods that the system may employ.
- the partner admin may choose only one of the three.
- the partner admin may allow more than one authentication method.
- the system then authenticates based on the method selected by the admin user. For example, the partner admin user may choose to have all partner end users authenticate via an account provided by the hosted server system. That authentication may be used even if the user also has an account with the partner.
- the partner admin user may chose to have all partner end users authenticate via an account provided by the partner. That authentication may be used instead of an account provided by the hosted server system.
- Other authentication schemes such as, e.g., anonymous authentication methods that rely only on a cookie, may be selected.
- Controlled experience based on registration Some modules may be modified based on registrations or other forms of authentication.
- a partner that is a computer manufacturer may incorporate a help module on its partner-customized home page.
- the content in the help module may vary depending on registration levels of the user (e.g., whether the user signed up for ongoing customer support, what level of support they requested, etc.).
- the controlled experience may enable the partner to monetize the partner container document.
- a user may be charged a subscription fee by the partner to access certain modules or content within the modules.
- the partner may offer a music module.
- a subscription to the partner's music module may enable the user to choose certain selections of music to hear based on subscriptions.
- the partner may offer different subscriptions. For example, one subscription may permit an end user to listen to music, while another may permit the user to listen to and download music.
- Search box module One of the modules that a partner may select may be a search module that leads to a hosted search page that serves advertisements (e.g., linked to an existing AdSense for Search). The display of advertisements in association with the search module provides another way for the partner to monetize the partner container document.
- the search box module may be a required module of a container document.
- the container document may internationalize the container document based on configurations/customizations provided by the partner or its users.
- the container document for a partner may be designed to generate a common template with different content based on data input to the system (e.g., WiFi detection is used to have the partner container document modified depending on location).
- the system may also provide different localized partner container documents.
- Modification of a default container document The system may provide a default container document that the partner then configures.
- the container document server and/or hosted server system then cooperates with an interface provided to ensure that the content provided meets the partner configuration selections in a safe manner.
- a partner admin user interacting with the configuration interface may view a live version of the container document based on configuration information being input and what the user sees is the container document that includes the actual content and modules from the hosted server system (e.g., not just a mock-up).
- the system may further allow editing of a module from within the preview page.
- Live updates to container documents and live preview Use of a central repository of events with associated interested parties enables the system to update live previews and live container documents based on changes related to those items.
- the repository may track what user interfaces or modules are to be notified of events that alter their performance and then may notify them immediately.
- the background automatically changes (rather than requiring the user to say “Apply” for example) for a real, live preview.
- One implementation feature for this service and system relates to multiple levels of configurability of the content of a container document.
- An example container document is next described along with an example system that may be used to enable a partner and end users to provide configuration information.
- a container document is a personalized portal page that is associated with a user of a partner or other user group.
- a portion of the content on the personalized portal page may be predefined by the partner/user group, and a portion of the personalized portal page may be configured and customized by the end user.
- the container document “contains” one or more modules. Any number of the modules or other content “contained” within a container document may be predefined by a representative of a user group.
- the term “container document” or “container” should be understood to include a personalized homepage of a website, a portal page associated with a user group, a sidebar, toolbar element that incorporates one or more such modules, a page hosted by a site, a document capable of rendering modules (e.g., any document capable of rendering HTML code or XML code) in the format of the module (e.g., XML).
- the container document may be a website of another entity that incorporates modules provided to the website from a syndication system.
- module may be understood to refer to a piece of software and/or hardware that renders data for use in a container document. Modules may be personalized to user preferences, preferences of the container, preferences of the environment or other inputs, including preferences defined by the user group, for example.
- a module specification may be understood to include a set of instructions used to render data for the container document using elements that have been predefined.
- FIG. 2 depicts a container page 200 with a plurality of modules that have been incorporated into the container document using IFRAME and inline HTML techniques. These IFRAMES may allow the hosted server system to encapsulate the arbitrarily selected content defined by the user group.
- modules may also be served in the container document with or without an encapsulation layer. Encapsulation layers may provide useful functions in many types of systems, (e.g., serving a module within an IFRAME in an HTML document provides a security enhancing barrier). Other applications may prefer to serve module content without such an encapsulating layer (e.g., for improved performance or ease of layout or content management).
- FIG. 2 depicts a plurality of modules and other content within container document 200 including a header 201 , a logo 202 , a search box 203 , user group content 204 , an “add content” element 205 , a user-selected module 206 , a remote module 207 , a remote module 208 , and a remote module 209 .
- Different formats for the various modules may exist depending upon, for example, the specification of the creator of the module and/or the definition of the module by a representative of the user group. As depicted, some modules may provide scroll bars, and others may not. Some modules may have different sizes or shapes compared to other modules.
- modules may offer the opportunity for the user to edit the display preferences and/or per-use data associated with the module. (See, for example, modules 206 , 208 , and 209 that provide an edit link.) For example, if the module relates to a weather module, the user may be provided the opportunity to edit the city or zip code for which the weather is displayed in that module.
- a portion of the content on the container page 200 may be created and/or predefined by a user group and/or a representative of a user group.
- the header 201 may contain links 201 a that are associated with the user group.
- logo 202 may also be a logo that is associated with the user group.
- User group content 204 may be created and/or defined by the user group and optionally locked or frozen (described below) so that users of the personalized container document cannot remove, edit or add user group content.
- Header 201 may comprise HTML and/or XML code to create, for example, a banner on container page 200 .
- Header 201 may include links 201 a that may be associated with the user group.
- links 201 a may include links to particular services provided by the computer hardware provider (e.g., service and support) and links to particular goods provided by the computer hardware provider (e.g., desktops, laptops, peripherals, and/or printers).
- links 201 a may include links to email, content driven pages provided by the ISP (e.g., sports, finance, shopping, etc.), customer service, and the like.
- Search box 203 may include a text field 203 a and a search button 203 b , where a user can enter text into text field 203 a , and activate (e.g., click on) search button 203 b which initiates a search engine that may be associated with container page 200 to search for the text entered into text field 203 a .
- search engine associated with the container document may track any follow-on action performed by the user as will be described in greater detail below.
- Container page 200 may contain user group content 204 .
- User group content 204 may include user group modules 204 a - 204 c .
- User group content and user group modules 204 a - 204 c may be created and/or defined by the user group.
- Modules 204 a - 204 c may be modules that are specifically associated with the user group and/or any other unrelated module that may be selected for inclusion into user group content 204 .
- a representative associated with the user group may be granted administrative privileges to create and/or define user group content 204 .
- One of the functions provided with this example container document 200 is the opportunity for the user to add content to the container page through selecting the “add content” element 205 .
- the content that may be available to be added to container page 200 (e.g., the taxonomy) may be defined and/or restricted by the user group. For example, a user group may restrict a user from adding modules of a competitor or any other modules that may be deemed to be undesirable by the user group.
- the system may offer an end user the opportunity to interactively indicate an additional module to be included in the container page based on the taxonomy defined by the user group, for example.
- Various forms of an interface to receive that input may be provided.
- User-selected module 206 , and remote modules 207 - 209 may be a result of adding content.
- the content added by the user may be placed within container page 200 in accordance with the preferences of the user. However, the user may be restricted or prevented from placing, moving, or modifying some content defined by the user group. In other words, certain portions of the partner/user group defined container document may be frozen to the user.
- the resulting container page 200 may include a portion of the container page that is defined by the user group in accordance with preferences established by the user group and a portion of the container page that is defined by the user in accordance with preferences of the user. For example, a column of modules or row of modules may be frozen so that the user may not eliminate, move, alter or change their position and/or content.
- certain blank spaces on a partner container page may be frozen to prevent a user from adding a module to that blank space.
- the hosted server system 10 may serve a container document to end users of the partner based on partner-specified configurations and end-user specified configurations.
- partner-specified configurations and end-user specified configurations may be used.
- FIG. 1( c ) depicts an overall system diagram that provides a number of systems operating with hosted server system 10 . Details of an example host system taken from the '930 Application are provided later in this document.
- the partner/user group may enable one or more partner admin users to interact with a configuration server system that communicates with or is part of hosted server system 10 .
- a configuration server system that communicates with or is part of hosted server system 10 .
- An example of such a system is shown as element 40 in FIG. 1( c ).
- Configuration server system 40 may have a configuration server 41 , authorization/authentication unit 42 , and a data server 43 .
- one or more user group database systems 44 may operate in conjunction with the various units of configuration server system 40 .
- Configuration server system 40 may connect over network 26 (e.g., the Internet) to hosted server system 10 .
- configuration server 40 may be hosted.
- a configuration server 41 may be provided to allow representatives of a user group to create and/or define a container document, or a part of a container document (e.g., a set of modules) to be associated with the user group and to enable a partner end user to select/identify an authentication method or methods to be applied for container documents.
- Configuration server 41 may also communicate with hosted server system 10 to serve a container document to users of the user group.
- An authorization/authentication unit 42 may be provided to authenticate the representative of the user group that may be charged with creating and/or defining the container document associated with the user group.
- a data server 43 may be provided to serve the data that may be displayed on a container document.
- Data server 43 may store and serve images and/or any other data that may be used in a container document, for example.
- Data server 43 may also store HTML code for modules that may be designed specifically for users of the user group, for example.
- FIG. 1( c ) While one configuration is shown in FIG. 1( c ), it should be appreciated by one of ordinary skill in the art that other configurations of these various units may also be possible.
- the various units depicted within hosted server system 10 may be disposed at various locations around network 26 or at various points on several networks.
- the various units depicted within configuration server system 40 may also be disposed around various locations around network 26 , including within, for example, hosted server system 10 .
- a single hosted server system 10 and a single configuration server system 40 are depicted, it should be appreciated that any number of each of the units depicted on FIG. 1 may be provided including network 26 .
- FIG. 3 depicts an exemplary embodiment of a configuration server 300 .
- Configuration server 300 may be a tool for representatives of the user groups to create and/or define one or more container documents for users of the user group and establish an authentication method for users of the user group.
- configuration server 300 may include a servlet layer 301 , a validation layer 302 , an action layer 303 , and a backend layer 304 .
- Configuration server 300 may serve a web application to user systems of representatives of the user group (e.g., partner admin user 17 ) to enable those representatives to create and/or define one or more personalized container documents for users of the user group.
- Configuration server 300 may also be a local application run by a user.
- a partner may provide the local, standalone application to the representatives for installation on their user systems, for example.
- the representatives may be identified as having administrative privileges for the user group. These privileges may enable the representative to receive the web application (or install the local application) to create and/or define one or more personalized container documents for users of the user group.
- the web application received (or local application installed) by the representative may include a HTML editor to enable the representative to edit a container document, for example.
- Configuration server 300 allows representatives and/or privileged users to define, for example, an optional banner and/or header across the top of a container document, optionally lock one or more column of modules contained within the container document, configure a default set of modules to appear on a container document, configure a set of available modules that may be included on a user's personalized container document (e.g., the taxonomy), configure default options for the modules that appear on a user's personalized container document, and/or define and/or configure the container document in any other manner possible.
- Configuration server 300 also allows representatives and/or privileged users to select a uniquely-indexed partner domain that may be used to dynamically provide the container document to users and select an authentication scheme for authenticating the users.
- Servlet layer 301 may execute three exemplary servlets in cooperation with the application executing on a representative's user system, for example.
- a servlet may include any program, such as a Web server, a servlet engine, a CGI script, or a non-Web-based remote configuration program.
- a first servlet may be executed to serve a user interface to an authorized user of the configuration server.
- the first servlet may accept no-parameter HTTP GET requests and may serve an initial HTML interface and a JavaScript client to an authorized user, such as a representative of the user group, for example.
- the first servlet may retrieve data from a backend interface (e.g., a list of pages available for update by the authorized user) and present such data to the user.
- a second servlet may be executed to receive updates to one of the container documents, for example. Inputs and outputs may be received and transmitted, respectively, by this servlet in JavaScript Object Notation (JSON) format.
- JSON JavaScript Object Notation
- An input parameter may be associated with an “action” and the value may be a JSON representation of a batch of “action” objects.
- This servlet may deserialize (e.g., convert the “action” object into a JAVA file) the JSON representation and pass the deserialized parameter to other layers within the configuration server.
- this servlet may generally convert configuration information from its user input format (e.g., JSON) into HTML, XML, Microsoft Word macros, or the like.
- a third servlet may be executed to handle data uploads, for example.
- Data including, but not limited to, images may be received as “mulitpart/form-data,” and may need to be extracted in a manner different than extracting GET/POST parameters. Once extracted, the request to upload the data may be passed to other layers within the configuration server.
- the servlets described above may be accessible only by those representatives of a user group that are authorized.
- a user may initially issue a request to the first servlet, be authorized by an authentication/authorization unit, be served a user interface, and then indirectly issue other requests to other servlets through the user interface.
- the partner/user group may provide the application on disk or make it available for download by the user. The user may then install the application and run the application to indirectly issue other requests to other servlets through the user interface.
- Validation layer 302 may verify the data that is received by the servlets and convert the data for use by other layers of the configuration server. For example, servlet layer 301 may accept external requests, and because this data is external, it may need to be verified as being secure. Further, servlet layer 301 may receive parameters as strings. When parameters are received as strings, those parameters may need to be converted into, for example, typed parameters.
- Validation layer 302 may accept “action” objects from the servlet layer 301 .
- the “action” objects may provide the requested “action” and a string-string name-value map of parameters required to execute the “action.”
- validation layer 302 may determine from another layer within the configuration server, what types of parameters are required to execute the “action.” Based on this determination, validation layer 302 may validate the input strings and convert the input strings to the appropriate type of parameters.
- the types of parameters may be represented as “action parameter types.”
- action parameter types standard Java-types may be superseded. For example, a uniform resource locator (URL) and a block of HTML may be represented in Java as strings.
- URL uniform resource locator
- HTML may be scrubbed such that it may not contain JavaScript, that may open security holes.
- validation layer 302 may run different “action parameter types” through different validators.
- FIG. 4 depicts an exemplary embodiment of a flow chart 400 for automatically selecting which validator may address a specific “action.”
- the “action” may be determined from the “action” input.
- the types of parameters that are required to execute the “action” may be determined. This determination may be accomplished by another layer within the configuration server.
- the “action parameter types” For each parameter type required to execute the “action,” in block 403 , the “action parameter types” may be received. In block 404 , the validator for the “action parameter type” may be determined. In block 405 , the string-value of the parameter from the “action” input may be determined. In block 406 , the string-value may be passed through the validator. In block 407 , the validator may output a valid Java-type value for the corresponding string-value. In block 408 , the Java-type value may be saved.
- One or more methods for validation may be used. For example, simple parameters (e.g., Boolean expressions) may be parsed using a Boolean filter, while complex parameters (e.g., objects) may be deserialized into a Java object.
- Validation layer 302 may pass validated parameters to action layer 303 for action.
- Action layer 303 may execute an “action.” Action layer 303 may receive requests from validation layer 302 and interact with backend layer 304 to execute the “action.”
- Actions may be registered with an “action manager” so that the “actions” may be executed.
- an “action info” object indicating, for example, the java-class and public method containing the logic and the parameters required to execute the “action,” may be specified.
- the “action manager” may be queried for the parameters required to execute the “action,” and action layer 303 can then request execution of the “action” and pass those parameters.
- action layer 303 may interface with backend layer 304 to execute an “action.”
- action layer 303 may cache data received from backend layer 304 .
- action layer may store multiple updates, for example, before passing the updates to backend layer 304 .
- Backend layer 304 may provide an interface with backend units in the system.
- Backend units in the system may store and provide access to data associated with the user groups and container documents for the user groups.
- data may include, for example, preferences of the user group (e.g., default preferences for a container document), data to map user groups to the respective preferences of the user group, login authentication and authorization data (including data about authorized representatives of the user groups), images, content for a portion of a page that may be defined and/or personalized by a user group, and/or any other data related to user groups, representatives of the user groups, or users of the user groups.
- Container documents may be initially configured by a representative of a user group. Also, container documents may initially be configured as a result of group voting or meta-group requirements (e.g., groups within a group). The content may also be initially determined as a result of collaborative filtering. As described above, personalized container documents may include a portion of content that may be created and/or designed and/or configured for the user group and a portion of content that may be configured by users of the user group. The configurations by the users of the user group may be limited by the configuration and/or design presented by the user group.
- FIG. 5 depicts an exemplary flow chart 500 which illustrates an exemplary method for designing and configuring a container document.
- a relationship with a user group may be established.
- a user group may establish a relationship with a host of the container document, for example.
- a user group may identify itself and one or more representatives that may be authorized to design and/or configure a container document on behalf of the user group.
- the user group may also establish an account with the host.
- the account may be a Google AdSense account or any other account that may be used to store any data about the user group.
- the user group may indicate as such and the system may associate the user group with the preexisting account.
- an identifier associated with the user group may be stored in a database system associated with the configuration server.
- the domain name may also be included in a map file, for example, that may map the user group to data associated with the container documents for the user group.
- the domain name may be selected by the user group.
- the user group may select a domain name such as, e.g., “start.usergroup.net.”
- This user group-selected domain name may then be mapped to, for example, a more explicit path such as “partnerpage.host.com/usergroup.net” and this masking/aliasing information may be stored by the host server system in a dynamic table of uniquely-indexed partner domains.
- a representative of the user group may login to a configuration server system.
- a representative may include a corporate representative of the user group, a web master of the user group, a agent of the user group selected by the user group, or any other person or group of people selected to represent the user group for purposes of configuring a container document.
- An authorization/authentication unit may receive a login request including, for example, a user name and password associated with the representative, determine whether the representative has administrative privileges for the user group, and grant access to the configuration server system based on a determination that the representative has administrative privileges for the user group.
- the configuration server system may serve a web application to the representative.
- a representative may be operating a client device and/or user system capable of providing inputs to the web application (or standalone application) to configure a container document or personalized container document.
- a servlet associated with a configuration server may serve the web application to the client device and/or user system.
- the client device may receive the web application and execute the web application on the client device.
- the standalone application may be installed and executed on the client device.
- the web application (or standalone application) may include, for example, an editor for editing the header and/or other portions of the container document and other tools for configuring and/or designing a personalized container document.
- Such other tools may include, for example, an action bar, for receiving actions to be executed; a tab set, including a layout tab, a colors tab, a color code editor, and other modules; an available content tab to create custom modules and/or define the module taxonomy; a live preview pane; a module picker; a header and footer tab; and a URL editor tab.
- the action bar may include, for example, icons or buttons, that when activated, may trigger the execution of an action.
- Such actions may include save, delete, edit, open file, open blank container document, change format of the container document, display live preview, insert object or module, and any other like action.
- the layout tab may include a selection of predefined layouts that, for example, enable the user to freeze (or lock) a certain portion of the container document or permit a user to control all content on the container document.
- FIG. 6 depicts an example application interface 600 including a layout tab 601 in accordance with an exemplary embodiment.
- application 600 may also include an action bar 602 having a “Save Now” button 602 a and a “Preview” element 602 b .
- application 600 may also include a locking portion that allows the representative to select whether to freeze (or lock) a portion of the container document.
- the representative may activate the radio button 604 associated with freezing (or locking) the content.
- the representative may select radio button 605 associated with unlocking the content.
- the representative may select which container document to be configured in block 504 . If the user group has not previously configured a container document, the representative may initialize a container document to be configured. If the user group has configured one or more instances of container documents, the representative may be presented with an interface that enables the representative to select from among the container documents to configure.
- a layout may be selected.
- the representative may select whether to optionally freeze (or lock) one or more columns on the container document or allow the user to control all of the content on the page.
- FIG. 6 shows a layout tab 601 for enabling a representative to select a layout for the container document.
- colors for the container document may be selected.
- FIG. 7 depicts an exemplary embodiment of an application interface 700 including a colors tab 701 to enable a representative, for example, to select colors for various sections of a container document.
- colors tab 701 may include an element selection portion 702 , a color palette 703 , a text box 704 , a preview pane 705 , and a reset button 706 .
- Element selection portion 702 may enable a representative to select the portion of the container document that is being changed. For example, as depicted, a user may select to change the container document's header, background, title, etc.
- Color palette 703 may enable a user to select a color from those colors presented on the palette for the selected portion of the container document.
- Text box 704 may enable a representative to directly enter a known color code into text box 704 to select a color for the selected portion of the container document.
- Preview pane 705 may display a mock-up of the colors selected for the container document.
- FIG. 8 depicts another embodiment of an application interface 800 to illustrate the colors selected for a container document.
- Reset button 706 may allow the representative to return all colors to grey, for example.
- each portion of the container document is identified and a color square indicating the selected color for that portion may be placed adjacent to the identified portion.
- the “Title Bar” with a frozen (or locked) column includes a white color square adjacent to the “Title Bar” text.
- FIG. 9 depicts an exemplary embodiment of an application interface 900 including a header and footer tab 901 to enable a representative to customize the header and footer of a container document.
- header and footer tab 901 may include a header portion 902 that may enable the representative to define a header to appear at the top of a container document.
- header portion 902 may include a toolbar 908 that enables the representative to add an image to the header, add a link to the header, customize the font for the header, and/or edit the HTML code comprising the header.
- header portion 902 may display a mock-up of the header that may appear on the container document.
- FIGS. 17 and 18 also illustrate exemplary application interfaces that may enable a representative to customize the header and footer of a container document.
- Header and footer tab 901 may also include a footer portion 903 that may enable the representative to define a footer to appear at the bottom of a container document, for example.
- a footer may include a link 904 associated with a privacy page, a link 905 associated with a terms of service page, a link 906 associated with a contact us page, and a link 907 associated with a service agreement page.
- Header and footer tab may also include an “add a link to the footer” element 909 that may enable the representative to add custom links to the footer of the container document, for example.
- footer portion 903 may display a mock-up of the header that may appear on the container document.
- content for the container document may be selected.
- the representative may select from, for example, remote modules, or other modules (e.g., RSS, API-based modules, etc.) that may be included in the container document or create a custom module to be included in the container document.
- FIGS. 10-14 depict various example application interfaces for defining the content for a container document using remote modules and/or custom modules.
- FIGS. 19-21 also depict various example application interfaces for defining the content for a container document using remote modules and/or custom modules.
- the container document may be published.
- publishing the container document may include any manner of making the container document available to users, including, but not limited to, saving the container document and indicating to the hosted server system that the container document is to be available to its users.
- FIG. 15 depicts an exemplary embodiment of an application interface 1500 including a publish tab 1501 to enable the representative to publish the container document. The representative may select the publish button 1503 to publish the page. In such an embodiment, the URL 1502 of the container document may be displayed.
- Publish tab 1501 may also include an unpublish button 1504 which may enable the representative to remove the published container document.
- users of the user group may access a container document that has been configured by the user group, for example.
- an exemplary URL for a container document may be, for example, “http://www.host.com/ig/p/usergroupname/instancename,” where “www.host.com” may represent the domain of the hosted server system, “usergroupname” may represent the user group, and “instancename” may represent a particular container document.
- a user may also access the container document using, for example, the destination IP address of the “host.”
- a user group may have multiple instances of container documents for the users of the user group.
- the “/p/” in the URL may indicate that the particular URL is associated with a container document associated with the user group.
- FIG. 16 depicts an exemplary embodiment of a flow chart 1600 , which illustrates a method for serving a container document and/or a personalized container document to a user of the user group according to an exemplary embodiment.
- a request for a page may be received.
- the request may be a URL request or a request using the destination IP address (if known by the user) of the container document.
- the request may be received by the hosted server system, for example.
- the hosted server system may determine whether the request is for a container document.
- the URL for a container document may be, for example, “http://www.host.com/ig/p/usergroupname/instancename” and the “/p/” may indicate that the URL is associated with a container document associated with a partner/user group.
- the user group may choose to hide this URL from the users by setting, for example, its own domain (e.g., www.usergroupname.com) to point to this URL via CNAME.
- the hosted server system may parse the URL to determine whether the “/p/’ is present in the URL. If the “/p/” is present, then the hosted server system may proceed with serving the container document.
- the hosted server system may serve another page associated with the URL request.
- the URL for a container document may be “http://www.host.com/ig/usergroupname/instancename” and the “/usergroupname/instancename” may indicate that the URL is associated with a container document associated with a partner/user group.
- a user may request a URL selected by the user group such as “start.usergroup.net.”
- the hosted server system may determine a true path (e.g., “partnerpage.host.com/usergroup.net”) associated with this request and decode the true path to determine the domain name.
- the hosted server system may then look up the domain name in a dynamic table or other dynamic storage module that is uniquely indexed by partner domain to determine how to function, for example.
- information may be extracted from the URL.
- the identity of the user group and the particular instance of the container document may be extracted from the URL. For example, if the URL has a known format as described above, the hosted server system may parse the URL to extract the “usergroupname” and “instancename” strings from the URL. This information may then be used to look-up user group preferences and/or the personalized container document as will be explained in greater detail below.
- the hosted server system may determine whether the user is recognized.
- the system provided may provide for multiple points of entry, meaning that multiple different accounts may be used to enable a user to access a personalized partner container document.
- the user group e.g., an admin user that sets up the user group container document
- This authentication method may also be stored by the hosted server system in the dynamic table or other storage module that is uniquely indexed by partner domain.
- the authentication method also may be determined.
- the system may determine whether the user is recognized based on the domain name and the authentication method(s) associated with the domain name.
- a user may have an account with the hosted server system (e.g., Google) that is used for various activities on that hosted server system (e.g., email, data storage, personalized home page, etc.).
- the same user may have an account with the partner whose container document the user is requesting (e.g., the user may be a customer of the partners). Therefore, if the authentication method to be used is associated with a particular account, the hosted server system may check to determine whether it has a record of the user associated with that particular account.
- the hosted server system e.g., Google
- the hosted server system may check to determine whether it has a record of the user associated with that particular account.
- an account with the hosted server system may be used to authenticate a user with more than one user group
- the hosted server system may determine whether the user is recognized by a particular user group using the domain name and information associated with the hosted server system account to authenticate the hosted server system account to that particular domain name.
- the hosted server system also may examine one or more cookies, for example, on the user's system to determine whether the user is recognized as having an account with the hosted server system if an anonymous/cookie-based authentication method is indicated in the dynamic table that is uniquely indexed by partner domain. If the user is not recognized or not logged in according to the user group selected authentication method for the container document, for example, flow chart 1600 may proceed to block 1605 . If the user is recognized or logged in, flow chart 1600 may proceed to block 1607 .
- the hosted server system may issue a request to the configuration server, for example, to retrieve the preferences of the user group container document.
- the request may include an identification of the user group, other information about the user group, and the instance name of the container document that has been requested.
- the hosted server system may convert the “usergroupname” into a unique identifier that may be associated with an account of the user group.
- the hosted server system may look up that user group's identifier in a local map file, for example. Other information associated with the user group may be retrieved using similar look-up techniques.
- the configuration server may receive this request and then look up further user group information.
- the hosted server system may serve a default container document.
- the hosted server system may receive information regarding the default container document into a user group data packet and a display preference data packet, for example.
- the user group data packet may specify the layout (e.g., header or no header, fixed column or no fixed columns, etc.), skinning preferences (e.g., colors), and the taxonomy, for example.
- the display preference data packet may specify default settings for each container document, for example.
- the hosted server system may then use this information to serve the default container document to the user.
- the resulting container document may contain the content configured by the user group and the default settings configured by the user group for any of the content that may be configured by the user.
- the hosted server system may determine whether the user has personalized the container document in accordance with the user's personal preferences. To do so, it may identify the user through the user group-selected authentication method mentioned above. Specifically, it may enable the user to log-in using the partner account information, the hosted server system account information or some other information as selected by the user group. To enable this to occur, the account log-ins valid for a user to receive a partner container document may be stored at the hosted server system in association with the partner container document data.
- the user should be able to access the Computers4Sale Google Personalized Home Page by logging in to Google using a Google account (if the selected authentication method authenticates users via an account with the hosted server system), or by logging into Computers4Sale using a Computers4Sale account that Google has stored in its list of users for the Computers4Sale Google Personalized Home Page (if the selected authentication method authenticates users via an account with the partner).
- a user may personalize (e.g., select which modules may be included in the personalized container document, apply personal preferences to those modules, determine the location of those modules within the container page, etc.) the container document associated with the user group.
- a user may personalize the container document without logging in to Google, for example.
- the user may customize a container document in an “offline” environment (e.g., the user is not logged-in). The customizations may be stored in a cookie, for example, so that when the user does log in for the first time (or the first time after making “offline” customizations), the cookie-based preferences may be transferred to the server.
- the user's personal settings may be applied to the container document.
- the hosted server system may determine whether the user is recognized and whether the user has personalized the container document simultaneously. If the user has not personalized the container document, flow chart 1600 may proceed to block 1605 .
- the hosted server system may request the user's personal preferences. These personal preferences may be stored in a database system that is associated with the hosted server system.
- the hosted server system may serve a personalized partner container document.
- the hosted server system may receive information regarding the container document in a user group data packet and a display preference data packet, for example.
- the user group data packet may specify the layout (e.g., header or no header, fixed column or no fixed columns, etc.), skinning preferences (e.g., colors), and the taxonomy, for example.
- the user may also add additional non-group content if the user group has configured the container document in a manner that permits the user to do so.
- the display preference data packet may specify a user's personal settings for each container document, for example.
- the hosted server system may then use this information to serve the personalized container document to the user.
- the resulting personalized container document may contain the content configured by the user group and the personalized settings configured by the user, for example.
- FIG. 22 also depicts an exemplary embodiment of a flow chart 2200 , which illustrates a method for serving a container document and/or a personalized container document to a user of the user group blocks 2201 - 2203 operating as described above for blocks 1601 - 1603 .
- blocks 2204 and 2205 may operate in parallel.
- user information may be retrieved.
- the user group may select an authentication method for authenticating users of the user group.
- the hosted server system may the system may check for information the account identified by the authentication method.
- a user may have an account with the hosted server system (e.g., Google) that is used for various activities on that hosted server system (e.g., email, data storage, personalized home page, etc.).
- the same user may have an account with the partner whose container document the user is requesting (e.g., the user may be a customer of the partners).
- the hosted server system may check to determine whether it has a record of the user being logged in with the account identified with the authentication method. If the user group has selected an anonymous/cookie-based authentication method, the hosted server system may examine one or more cookies, for example, on the user's system to determine whether the user is recognized.
- default portal data may be requested.
- the hosted server system may issue a request to the configuration server, for example, to retrieve the preferences of the user group container document.
- the hosted server system may determine whether the user is recognized and whether the user has a personalized container document. To do so, it may identify the user through one or more of the multiple points of entry mentioned above. Specifically, it may enable the user to log-in using the partner account information, the hosted server system account information or some other information.
- the hosted server system may, for example, examine user cookies to determine whether the user has personalized the container document.
- the hosted server system may determine whether the user is recognized and whether the user has personalized the container document simultaneously. If the user has personalized the container document, flow chart 2200 may proceed to block 2207 . If the user has not personalized the container document, flow chart 2200 may proceed to block 2208 .
- user information may be overlaid onto the container document.
- the content selected by the partner/user group for example, may be combined with the user's customizations to form the container document.
- the data for the container document may be rendered and the container document may be served to the user.
- a user group may have multiple container documents associated with the user group.
- each portal page may be a separate instance.
- the URL for each personalized container document is “http://www.host.com/ig/p/usergroupname/instancename”
- each instance may be uniquely identified by a different “instancename,” for example.
- the URL request is start.mydomain.net/instancename
- each instance may also be identified by a different “instancename.”
- a user may specifically request an instance or the hosted server system and/or configuration server system may determine which instance to serve to the user by examining cookies on the user system or other information about the user, for example.
- the hosted server system may determine which instance to serve based on an IP address, geocoded information, or other external information, such as information known to the user group but not to the hosted server system. Selecting instances in this manner enables a partner to use its knowledge of its end users to determine which of several pages to serve the end user by default, for example.
- One or more instances may be based on varying the content that is presented to different users.
- the user group may vary the content presented to its users based on a variety of data inputs, including geographic location, user demographics, time of day, time of year, etc.
- geographic location users on the East coast of the United States may receive an instance associated with the East coast of the United States, while users on the West coast of the United States may receive a different instance that is associated with the West coast of the United States.
- the content may be varied based on the specific city in which the user is located.
- the hosted server system may determine the location of the user by determining whether the user has access to a wireless access point (e.g., WIFI or some other wireless protocol).
- WIFI wireless access point
- the hosted server system may determine the city in which the wireless access point is located and serve the user an instance associated with that city.
- Content in that instance may include, for example, a travel module that shows flights available from the airport nearest to that city.
- the content may also include, for example a weather module that shows the current weather for that city.
- Content may be varied based on, for example, levels of user service.
- the user group may have users of varying status (e.g., silver, gold, platinum)
- the user group may vary the content presented to its users based on those status levels.
- the hosted server system and/or configuration server system may determine which instance to serve to the user by examining cookies on the user system or other information about the user, for example.
- the user group may be associated with an airline, for example. In such an embodiment, the airline may have a frequent flier program and users may be enrolled in that program. If a user has status within that program, the hosted server system may serve the user a container document associated with that status level.
- the instance associated with silver status may include a module with information on how to obtain a higher status level.
- the instance associated with platinum status may include a module that allows the user to automatically upgrade to first class on an upcoming flight.
- a service provider may have users with various levels of service agreements. For example, some users within the user group may have an “at-home” service agreement while other users within the user group may have a “basic” service agreement that requires the user to send the item in for repairs.
- the instance associated with the “at-home” service agreement may include a module for setting up an at-home service call.
- the instance associated with the “basic” service agreement may include a module that provides instructions on where to send the item for repairs based on the user's geographic region, for example.
- Partner/user groups may also vary content based on subscriptions. For example, some user may subscribe to “premium” content. Those users that subscribe to the “premium” content may be served an instance containing a module including the “premium” content. Also, users may subscribe to content-based modules. For example, the partner may offer a music module and a subscription to the partner's music module may enable the user to choose certain selections of music to hear based on subscriptions. Also, within the music module, the partner may offer different subscriptions. For example, one subscription may permit an end user to listen to music, while another may permit the user to listen to and download music. In these examples, the partner may charge the user a fee for the subscription, thus enabling the partner to monetize modules within the container document.
- Instances of a partner container document may be associated with different languages.
- the hosted server system and/or the configuration server system may, for example, determine the location of the user as described above and serve an instance of a container document that is in a language associated with the location of the user. For example, users in the United States may be served an instance of container document that is in American English, users in the United Kingdom may be served an instance of a container document that is in British English, and users in France may be served an instance of a container document that is in French.
- partner or user profiles may identify a language preference and such preferences may be used to internationalization the container document based on such content. Different versions of the container document may be provided for the different languages as well.
- the multiple instances for a user group may be based on a common template.
- each instance of the container document may include the module showing flights, with the content within the module varying based on the geographic location.
- the multiple instances may not be based on a common template, with each instance being unique.
- a representative associated with the user group may configure the container documents for the users of the user group through a web application.
- Such an application may include a user interface for configuring and/or defining the container document may be interactive.
- Such an interface would permit the representative to view a fully-functional preview of the actual content that is not yet published.
- the interface may also permit the representative to edit the content within the fully-functional preview.
- the components may observe each other to recognize the changes and update accordingly.
- the source of the change e.g., the page content tab
- the source of the change may “push” the change to all observers. For example, if a checkbox for a module is unchecked in a module taxonomy selection portion on the available content tab, the module should disappear in the module taxonomy selection portion on the selected modules tab. In such an example, the checkbox may “push” the change to the selected modules tab.
- Observers may also actively poll the sources of changes for changes to the interface.
- the components of the user interface may periodically poll the backend layer to determine whether any of the files associated with the user group have changed. If so, the changes may be updated immediately in the other components of the interface.
- the following examples may be considered.
- all of the components of the colors tab may be registered with a central party (i.e., an event registrar) for an interest in an event to “synchronize color.”
- an event registrar i.e., a central party
- the component may notify the event registrar, which may, in turn, notify all of the components registered for the “synchronize color” event.
- a container document may include a search box.
- a search box may be associated with a host of the container document.
- search results may be returned to the user.
- the search results may include links associated with advertisements. If the user subsequently click on one of the links associated with an advertisement, the host of the container document may compensate the user group. The host may credit an account of the user group, for example.
- the manner of revenue sharing between the host and user group may involve a percentage of revenue, a flat fee arrangement (e.g., a specific amount per click), or other arrangements known in this field.
- a hosted server system 10 includes a plurality of units which may include a container server 12 , a module server 14 , a specification server 16 , a back end server 18 , an analysis unit 28 , a module creation server 32 , a syndication server 34 , an advertisement server 36 , a geocode server 37 and/or a map server 39 .
- Other systems connected to network 26 may comprise one or more user systems 22 , one or more remote source systems 24 , one or more module developer systems 30 , one or more content providers, and one or more syndication recipient servers 38 .
- one or more database systems 20 may operate in conjunction with the various units of hosted server system 10 .
- Container server 12 may serve the container document to user systems 22 over network 26 .
- Container server 12 may take data and/or instructions and may formulate a container for transmission over the network to the user system 22 .
- Module server 14 may provide data from modules to container server 12 for incorporation into a container document. It should be appreciated that in one embodiment, container server 12 and module server 14 may comprise a single unit performing both functions. Module server 14 may provide data for the container document by interpreting and/or parsing instructions in the module specification associated with the module. According to one embodiment, module server 14 may serve the module content to the container document through the use of a browser IFRAME. An IFRAME may be generally understood to be an independently operated browser window instance inside the container document.
- IFRAME is protects the container document from the IFRAME's content and vice versa, e.g., JavaScript on the container document may not be permitted to access any JavaScript code in the inner IFRAME (same for CSS, DOM, or cookie objects).
- modules may be displayed inline within the container document.
- Inline display may be understood as referring to display with other document elements.
- One example is a display generated from code for HTML in the body according to HTML standards.
- module server 14 or some other component may determine whether the module is deemed trusted prior to including it in the container document inline due to the risks of various security issues an inline module could create.
- the module may incorporate an indicia of approval (e.g., digital certificate) issued by the container module or an entity associated with the container module as described in detail below. If the indocile of approval is present, module server 14 may render the data from a module for inline presentation in the container document.
- Specification server 16 provides the module specification file to module server 14 .
- the module specification may be cached and stored in a database accessible to the module server 14 and/or specification server 16 or may be retrieved from a location associated with the specification as detailed later.
- specification server 16 may reside on a remote source system 24 .
- specification server 16 may be connected to module server over a network with the module specification located at another location on the network accessible to specification server 16 .
- Backend server 18 may be provided for interacting with one or more databases (e.g., large or dynamic databases of information). For example, for a news module that obtains frequent updates and demands a flow of data, (e.g., from an RSS feed), backend server 18 may format the data into HTML for the container.
- databases e.g., large or dynamic databases of information.
- backend server 18 may format the data into HTML for the container.
- a person may create a module (e.g., a maps module), such as one that uses an application program interface (API) to an existing mapping program to create a module to display a map of downtown Mountain View, Calif.
- the module may comprise an XML specification file or module specification file stored on a specification server.
- the specification server may comprise any server, including one on the site from which the container page is hosted or any other site.
- the user or another person may then include this new module on a personalized homepage (container document).
- the server that serves the container document may operate as the module server and the server that generates the mapping data through an inquiry from its API may be considered to be the backend server.
- analysis unit 28 may analyze modules at various times (e.g., when the module is first selected by a user, each time the module is called by a container for inclusion or at any other time determined to be advantageous for safety and security and other times). Analysis unit 28 may perform a number of actions, including comparing the module with a list of disapproved or dangerous modules or a list of approved modules. The comparison may involve exact or substring (e.g., prefixes, suffixes and regular expressions) matching by name or location (e.g., URL), contents of the specification, contents of the location where the specification resides, or information that may be ascertainable about the module.
- exact or substring e.g., prefixes, suffixes and regular expressions
- Analysis unit 28 may take one or more actions in response to a determination that the module is disapproved or dangerous, including, for example, silently blocking the request, (i.e., providing a generic error), blocking the request with an error that explains the reason it was blocked or redirecting the request to a different module specification that has been determined to be safe and related to the disapproved module (e.g., another module that relates to maps, if the first one was a disapproved mapping site or a module that includes the keyword “basketball” if the disapproved module was a basketball module).
- the URL of the original module may be passed to the “safe” module.
- the safe module may then use a proxy server, as described below, to retrieve the original URL's content.
- analysis unit 28 may parse the module content to determine whether it is safe, such as by compiling JavaScript or other scripts contained in the module to try to identify unsafe or undesired actions the module may perform.
- One or more content providers 31 may be provided.
- Content providers 31 may provide the content to be served in modules and/or may provide modules to be served to end users. Examples of a content provider include but are not limited to a provider of a module, a news feed, a source of traffic information, a source of financial information, a source of entertainment information.
- module creation servers 32 may be provided. This server may operate as a “wizard” to enable module creators to create a module through an interactive process controlled by module creation server 32 .
- module creation server 32 may provide a series of user interfaces that enable the module creator to provide inputs that are then used by the module creator to automatically generate a module specification.
- various module specification templates may be provided with corresponding inputs.
- Module creation server 32 may then take inputs supplied by a module creator, insert them into the template and then generate the module specification for the module.
- a preview, testing and debugging function may also be offered as part of this “wizard.”
- This web tool and/or downloadable application may be downloadable as well so it may be installed and operated at any node on the network.
- the module creator may be a representative associated with a user group. Also, the module creator may be an example of a content provider.
- a syndication server 34 may prepare data for transmission to one or more syndication recipient servers 38 related to modules.
- Syndication server 34 may receive a request for a module and/or module content and deliver that module or content to a syndication recipient server 38 over network 26 .
- Syndication server 34 may reside at hosted server system 10 or at another location on the network. For example, if an operator of a sports web site (an example of a syndication recipient system 38 ) desired to include a maps module created by a remote source system 24 , it may do so through a request to syndication server 34 .
- Syndication server 34 may then cooperate with module server 14 to generate data for the container document (here the sports web site page of the syndication recipient system 38 ).
- Syndication server 34 may thus syndicate modules accessible to it. It may do so based on requests for specific modules or other criteria it determines (e.g., content matches, keyword matches, monetary values associated with modules and/or syndication requestors, etc.)
- Ad server 36 may provide advertisements associated with modules to containers. For example, an advertisement may be incorporated with module data when data is delivered to a container document. Ad server 36 may operate with syndication server 34 to deliver advertisements to syndication recipient servers 38 based on a syndication request for a module. The advertisements may be selected by ad server 36 based on a wide variety of criteria, including, but not limited to, the relationship between the content of or information about the container, module, other modules in the container, syndication recipient server information, monetary elements/relationships related to any of the foregoing and/or combinations thereof. Ad server 36 may comprise the Google AdSense system, according to one embodiment of the present invention. Ad server 36 may operate as described in one or more of the following patent applications.
- a geocode server 37 may be provided to generate geocode information from location descriptions as is known in the art.
- a geocode server 37 may generate latitude and longitude numeric values from geographic locations.
- a map server 39 may generate map output. Mapping systems, such as Google Maps and Google Earth, may be used to generate this data.
- One or more database systems 20 may be provided that store, in any number of ways, container information, module specifications and/or related information, formatting data, per-user and per-module preference data, remote module ID data, remote module location reference data, advertisement data, advertiser data, content/monetary data, syndication recipient data, templates for modules, inputs for modules, lists of trusted and untrusted modules, approval criteria and related information and/or any other information used by the modules to operate as described herein. While a single database structure is shown for database system 20 , it is well understood that the data may be stored at a number of locations and in one or more systems.
- user system 22 may also operate as a remote source system 24 and/or a module developer system 30 .
- one computer system may operate in different capacities: as a user system, as a remote source system, as a syndication server, as a target content server, and/or a module developer system.
- each of the modules depicted within hosted server system 10 may also be disposed at a user system 22 , a remote source system 24 , or a module developer system 30 .
- databases 20 may be associated with each of the modules depicted within FIG. 1( c ) depending upon the configuration desired.
Abstract
Description
- This application claims the benefit of U.S. Provisional Application Ser. No. 60/835,861, filed Aug. 7, 2006 and U.S. Provisional Application Ser. No. 60/863,600 filed Oct. 31, 2006.
- Embodiments of the present invention relate to digital data processing for serving content over a network.
- Portals enable users to personalize content on the portal. Portals are offered from a portal developer directly to an end user, and do not provide a means for a third party to add value. Portals cannot be easily mass-produced in a customizable way for large numbers of portal providers. Moreover, the content that a portal permits an end user to incorporate is usually limited and specified by the portal provider.
- These and other drawbacks exist with current systems.
- The present specification discloses various embodiments of technologies for a third-party service of securely serving arbitrarily selectable and dynamic content to users on a scalable basis. Embodiments feature methods, systems, apparatus, including computer program product apparatus.
- Accordingly, various exemplary embodiments of the present inventions may be directed to a method that includes providing a customizable content document associated with a first entity, enabling a second entity to specify content to be included for users associated with the entity in the customizable content document, and delivering the customized content document incorporating the specified content in a secure manner to users associated with the second entity.
- Various exemplary embodiments may also be directed to a method that includes receiving one or more selections associated with a user group, and serving a user a container document. In these embodiments, the one or more selections identify content to be served to users associated with the user group for one or more container documents and the container document includes content identified by the one or more selections for the user group with which a user is associated. Also, the content is incorporated securely into the container document.
- Various exemplary embodiments may also be directed to a method that includes receiving one or more selections associated with a user group, and transmitting the selections to a container server system that serves a container document to users of the user group based on a request for the content. In these embodiments, the one or more selections identify content to be served to users associated with the user group for one or more container documents.
- Various exemplary embodiments may also be directed to a system that serves content in a container document. The system includes a server to receive a request for a container document, determine whether the request is for a container document associated with a user group, request configuration information from a configuration server based on a determination that the request is for a container document associated with a user group, receive the configuration information from the configuration server, and serve the requested container document using the configuration information. In these embodiments, the configuration server enables configuration of at least a portion of a container document and the container document is associated with a user group.
- Various exemplary embodiments may also be directed to a method that includes receiving a request for a container document, determining whether the request is for a container document associated with a user group, requesting configuration information based on a determination that the request is for a container document associated with a user group, receiving the configuration information, and serving the container document using the configuration information. In these embodiments, the configuration information defines at least a portion of the container document associated with the user group.
- Various exemplary embodiments may also be directed to a method that includes receiving a request for a container document, determining whether the request is for a container document associated with a user group, determining whether a requestor of the request is associated with a level of status within the user group among a plurality of levels of status within the user group, determining the level of status of the requestor based on a determination that the requestor is associated with a level of status within the user group, requesting configuration information based on a determination that the container document is associated with a user group and the level of status, receiving the configuration information, and serving the container document using the configuration information.
- Various exemplary embodiments may also be directed to a method that includes receiving a request for a container document, determining whether the request is for a container document associated with a user group, determining a location associated with the request, requesting configuration information based on a determination that the container document is associated with a user group and the location, receiving the configuration information, and serving the container document using the configuration information.
- Various exemplary embodiments may also be directed to a system that serves content in a container document. This system includes a server to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine whether a requestor of the request is associated with a level of status within the user group among a plurality of levels of status within the user group, determine the level of status of the requestor based on a determination that the requestor is associated with a level of status within the user group, request configuration information from a configuration server based on a determination that the request is for a container document associated with a user group and the level of status, receive the configuration information from the configuration server, and serve the requested container document using the configuration information. In these embodiments, the configuration server enables configuration of at least a portion of a container document, and the container document is associated with a user group.
- Various exemplary embodiments may also be directed to a system that serves content in a container document. This system includes a server to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine a location associated with the request, request configuration information from a configuration server based on a determination that the request is for a container document associated with a user group and the location, receive the configuration information from the configuration server, and serve the requested container document using the configuration information. In these embodiments, the configuration server enables configuration of at least a portion of a container document and the container document is associated with a user group.
- Various exemplary embodiments may also be directed to a computer-accessible medium encoded with computer program code. The computer program code is effective to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine whether a requestor of the request is associated with a level of status within the user group among a plurality of levels of status within the user group, determine the level of status of the requestor based on a determination that the requestor is associated with a level of status within the user group, request configuration information based on a determination that the container document is associated with a user group and the level of status, receive the configuration information, and serve the container document using the configuration information.
- Various exemplary embodiments may also be directed to a computer-accessible medium encoded with computer program code. The computer program code is effective to receive a request for a container document, determine whether the request is for a container document associated with a user group, determine a location associated with the request, request configuration information based on a determination that the container document is associated with a user group and the location, receive the configuration information, and serve the container document using the configuration information.
- Various exemplary embodiments may also be directed to a method that includes authenticating a user based on the user's association with a user group, providing the user with an application, receiving input from the user regarding configuring the container document associated with the user group, providing an actual representation of the container document to the user based on the received input, and publishing the container document. In these embodiments, the application enables the user to configure a container document associated with the user group.
- Various exemplary embodiments may also be directed to a method that includes registering components of a user interface, registering events regarding configuration of a container document, associating registered components with registered events, receiving information associated with registered event that has occurred for one of the registered components, and providing the information associated with registered event to all other associated components. In these examples, the user interface is associated with configuring a container document of behalf of a user group.
- Various exemplary embodiments may also be directed to a system that includes a device to register components of a user interface, register events regarding configuration of a container document, associate registered components with registered events, receive information associated with registered event that has occurred for one of the registered components from the user interface, and provide the information associated with registered event to all other associated components.
- Other embodiments may be considered.
-
FIG. 1( a) depicts an overview of participating entities in a system and method provided according to various embodiments of the present invention. -
FIG. 1( b) depicts an illustrative process for obtaining customizations from users and user groups according to various embodiments of the present invention. -
FIG. 1( c) depicts an overall system architecture according to various embodiments of the present invention. -
FIG. 2 depicts an illustrative container document according to various embodiments of the present invention. -
FIG. 3 depicts an illustrative configuration server according to various embodiments of the present invention. -
FIG. 4 depicts an illustrative process for determining a validator according to various embodiments of the present invention. -
FIG. 5 depicts an illustrative process for configuring a personalized container document according to various embodiments of the present invention. -
FIG. 6 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 7 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 8 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 9 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 10 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 11 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 12 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 13 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 14 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 15 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 16 depicts an illustrative process for serving a personalized container document according to various embodiments of the present invention. -
FIG. 17 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 18 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 19 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 20 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 21 depicts an illustrative application interface according to various embodiments of the present invention. -
FIG. 22 depicts an illustrative process for serving a personalized container document according to various embodiments of the present invention. - Overview of the Third Party Service
- One embodiment of the present invention involves a third party service of securely serving arbitrarily selectable and dynamic content to users on a scalable basis. For example, the one embodiment involves four kinds of entities: (1) a hosted server system (e.g., Google's Personalized Home Page Server) that distributes a highly configurable, dynamic and secure container document (e.g., a portal page such as Google's Personalized Home Page) to partners or other user groups; (2) partners, wherein each partner provides configuration through selection of arbitrary and dynamic content that it wants its users to see in the container document and enables its end users to further customize the content; (3) end users associated with a partner that may select further customizations including additional arbitrary and dynamic content; and (4) content providers. These parties interact with the host server system in a secure and scalable way. The end users then receive from the scalable hosted server system a container document that has been configured according to the multiple levels of configuration and that includes the arbitrarily selected content (including both dynamic and static content) incorporated in a secure manner.
- Features of the Service
- Some of the features of this service and system include third party servicing, security, arbitrary selectability, dynamic content, scalability, multiple levels of configurability, and dynamic provision of container documents.
- Third Party Servicing: The service may be considered a “third party service” in that a hosted server system (e.g., Google) acts as a third party with respect to (i) end users being served content (ii) an entity which specifies the content available to the end users, and (iii) content providers. The entity specifying content is typically a user group, such as a partner. When the term partner is used in the instant specification, it should be understood to apply equally to other user groups and when the term user group is used, it should be understood to apply to a partner as one example. A company and its customers are examples of the partner entity and end users, respectively. A university and its students are also examples of the partner entity and its end users. So, a company can provide a configured home page experience for its users and select the content it wants its users to see on that configured home page. It does so by leveraging the hosted server system's service of the container document. In other words, the partner may provide this service without providing the technology to output the configured home page that is provided by the hosted server system. As used in the instant specification, the term content provider refers to a source of information. Examples of a content provider include but are not limited to a provider of a module, a news feed, a source of traffic information, a source of financial information, and/or a source of entertainment information.
- Security: The container document may be secure despite the arbitrarily selectable and dynamic content (i.e., the hosted server system does not limit the initial selections made by the third party or users). For example, a partner may select a module created by an entity unknown to the hosted server system. The hosted server system may render a container document that includes the unknown entity's module by implementing security features to avoid having to approve each module ahead of its selection. Security may be implemented by compartmentalization, encapsulation (e.g., through the use of IFRAME techniques as described in more detail below) and/or input filtering (e.g., blacklisting, whitelisting, etc. of content). In this context, compartmentalization involves limiting the impact of an attack by a malicious or vulnerable (e.g., unsafe) partner or end user to the customized container documents associated with the partner or end user and not other compartments or accounts available from the system associated with the same login or identity used to access the customized container document.
- Compartmentalization is a key component of the security because the security of the third party is not compromised despite the fact that the content is arbitrarily selectable and dynamic. If the user authentication is compromised, e.g. by a malicious partner or due to a partner vulnerability (XSS, etc.), then only the user's personalized page is compromised. The attacker can't gain access to the user's search history or email messages or other “compartments,” even after a successful attack. The security features implemented enable the partner and its users to configure their experience while leveraging the hosted server system's platform.
- Arbitrary Selectability: The security features described enable the system to permit arbitrary selection of content. The partner entity and associated users may select, from any content provider (e.g., sources including the hosted server system, the third party and/or other sources of content) content to be made available for serving to users associated with the partner entity. A partner may choose to limit the selections available to its end users or not. The system may avoid use of a pre-approved list of content providers in this way. Content may be of a wide variety of input types as well, as detailed below.
- Dynamic Content: The content selected may be dynamic content, static content or both. The content may also be programmatic.
- Scalability: The hosted server system provides this service from a scalable platform achieved, for example, through segmenting data for use with a non-relational database server. This solution balances scale and ease of data coherency. Certain types of non-relational data storage systems allow massively scalable write operations. For example, a database that does not provide transaction or locking support while storing time-series data with entries is not considered a relational database because an entry for the relation (Column1Value, Column2Value, . . . ) is not unique, but rather a time series. By using such a non-relational database, the system may become massively scalable. Most write operations to shared data are initiated from a small set of users (one or a few partner administrators), while read operations are initiated widely (e.g., each time an end-users requests a page, the template for an associated container document may be loaded). Scalability may also be achieved using a traditional relational database, highly replicated for scalable read operations, with master failover to enable high availability. Using this approach may increase overhead and add complexity and latency to the system.
- Nevertheless, a simple non-relational storage system as described above enables a system and service for distributing configurable container documents to perform well on a massive scale. Such a system and service involves centralized writing and decentralized reads, high throughput (scalability and simplicity) and high availability (supporting failover). The database structure described enables implementation at much lower cost (fewer servers needed at a given scale) than other alternatives such as the highly-replicated relational database example.
- Multiple Levels of Configurability: The content served may be configured by the partner/user group, which configuration can specify constraints under which end users associated with the entity may further configure the content.
- Dynamic Provision of Container Documents: Partner/user groups may select a uniquely indexed partner domain that may be stored in a dynamic table by the hosted server system. By storing this uniquely indexed partner domain, the hosted server system may dynamically provide container documents associated with a partner/user group in a highly scalable manner.
- Exemplary embodiments of the invention are discussed in detail below. While specific exemplary embodiments are discussed, it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configuration can be used without departing from the spirit and scope of the invention.
- Advantages of the Service
- Some of the advantages this service provides include that an entity (e.g., partner or user group) such as a corporation, university club, merchant, service provider, etc. may effect its branding scheme using the service while not having to serve the content. It provides tremendous flexibility in what content is served to users associated with the entity. The service also provides the entity with a mechanism to offer a unique content offering to their the users associated with the entity.
- Also, the entity using this service converts a cost center into a profit center. An entity, such as a corporation, usually pays to have content served to its customers. With the above-described service, the corporation turns a profit by including content that generates revenue, such as content that serves advertisements that pay those who serve the advertisements on various payment bases.
- Also, the service is easy to use through an intuitive and easy-to-use interface by which a human operator associated with the partner entity (e.g., a representative) configures content, at either the entity level or the end user level.
- Overview of a System and Its Operation
-
FIG. 1( a) depicts an overview of various entities involved in this system and service. The service and system described may be implemented using a hostedserver system 10 providing service to apartner system 40 over a network 26 (e.g., the Internet) in cooperation with one ormore content providers 31.Partner system 40 may, through the use ofpartner admin users 17, provide selections and configurations to hostedserver system 10 indicating a domain associated with the partner system, the authentication method for one or more partner end users, and the content to be provided in a container document served by hostedserver system 10 to one or morepartner end users 11. - The hosted
server system 10 may operate with adistribution server 13 to distribute the service to one or more partner systems. Adata storage system 20 may be provided that stores container data, user data, and partner data. That data may be used by hostedserver system 10 to configure the container document for users based on configurations set up by the partner and, if provided, eachpartner end user 11. In general,partner admin users 17 have administrative rights whereaspartner end users 11 do not.Partner admin users 17, can, for example, control the authentication methods for authenticatingpartner end users 11 and which content provider would be available for selection bypartner end users 11 and, furthermore, the degree of configurability. -
FIG. 1( b) provides a diagram illustrating actions that may be involved in this service. Inblock 102, a partner or user group establishes a relationship with the hosted server system. The partner may be a company, university, club or other organization that desires to provide a customized experience for its users. Inblock 104, a partner admin user may then configure the container document, such as an Internet portal page or personalized home page in a number of ways, all detailed below. Customization can include, for example, the partner's specification of constraints that one of its end users is subject to for selecting content and/or for configuring a personal Web page. Note that the partner can specify different constraints for different end users. The system may then make the configured container document available to users associated with the partner. - In
block 106, partner end users may be identified by the partner to the host system in some way. Partner end users may include employees of a company, students of a university or other school, members of a club, subscribers to a service, etc. Inblock 108, a partner end user may be served a default partner-configured container document. This default partner-configured container document includes a first level of content and/or configurations that is selected by the partner to be served to its users. Inblock 110, an end user may provide configurations for the configured container document. This configured container document includes an additional level of content selections and/or configurations that are based on the end user's desires. - Specific Implementation Features
- With the overall general framework in mind, there are a number of implementation features that may be included in this system and service including multiple levels of configuration, content freezing, incorporation of multiple types of modules, multiple channels of access to the configured container document, use of preferences and user identification to change content modules and content within modules, incorporation of search or other revenue generating modules, internationalization of modules, data driven container document implementations, use of subscription-based modules, modification of a default container document on the fly according to partner configurations, live preview of customizations and live updates to generated configured container documents. Each implementation feature is described below and in the more detailed explanations later in the document.
- Multiple levels of configurations control the user experience: a partner may set one level of configuration and/or preference, including what modules are to be included in the default partner configured container document (e.g., the partner wants a weather module, a traffic module, a stock module and a calculator module), any values for inputs to the modules (providing a zip code for the weather and traffic or a list of stocks for the stock module), color, skin style, positioning of modules and many others as shown in the illustrative pages below, and what, if any, modules may be frozen. If a partner makes any changes to its configurations, they may automatically apply to all configured container documents for all end users associated with the partner. The manner of a partner providing configuration/customization information is detailed below. End users may then specify a second level of configuration/customization, with such end user configurations and partner configurations being applied to the partner-configured container document for that end user.
- Content Freeze: One specific type of partner configuration may be a content freeze. The service provides techniques that the partner may use to disable configurability of all or only a portion of content served to end users. The content chosen for disabling is, in essence, frozen in that it cannot be further configured by a partner end user. Note that content freeze can but does not necessarily freeze dynamic content, which can be still implemented in a frozen portion of a personalized Web page, for example. (That is, freezing a portion of the page prevents further configuration of the portion but allows the portion to include dynamic content.) A column of otherwise configurable content of a personalized web page may be thus frozen, for example. When the partner is in the process of configuring the container document, however, that disabled content may not be frozen to the partner administrative user entity. This feature can be implemented by CGI parameters and authentication techniques. For example, a page request specifying that the user is a partner admin user may provide authentication values through cookies, enabling certain query parameters, so that the hosted server system provides an unfrozen page, whereas end users associated with the partner may receive a version with frozen content.
- The service also allows the partner administrator to view the page as if the administrator were an unprivileged user. As noted above, the partner admin user may view the frozen content in an unfrozen context. However, if the partner is to preview the page to determine whether it is properly configured, the partner may also be able to view the page in a frozen context. The service enables correct context-dependent behavior using authentication tokens that are not only used to authenticate access to the page, but also to authenticate access to the query parameters used to enable the context dependent behavior.
- Incorporation of multiple types of modules: The system enables partners and end users to designate a wide variety of modules for incorporation, including RSS modules, remote modules, API-based modules for personalized homepages, such as Google Gadget API modules and others. The ability to incorporate these modules is described in greater detail in the attached patent application.
- Multiple points of entry into the system: End users may have relationships with both the partner and the hosted server system. Accordingly, the hosted server system may enable the user to access a partner container document using authentication values associated with an account provided by the hosted server system and/or an account provided by the partner. For example, if the hosted server system is Google, a user may be able to access a partner-specific personalized home page through use of a Google login and password. Also, a user may be able to access a partner-specific personalized home page through use of a login and password associated with the partner. Either user identification may be used to receive the partner-specific container document. Also, during configuration of partner container documents, the partner admin user may select an authentication method for authenticating end users from a list of predetermined authentication methods that the system may employ. In one implementation, for example, if the system permits three authentication methods, the partner admin may choose only one of the three. Alternatively, the partner admin may allow more than one authentication method. The system then authenticates based on the method selected by the admin user. For example, the partner admin user may choose to have all partner end users authenticate via an account provided by the hosted server system. That authentication may be used even if the user also has an account with the partner. In another example, the partner admin user may chose to have all partner end users authenticate via an account provided by the partner. That authentication may be used instead of an account provided by the hosted server system. Other authentication schemes such as, e.g., anonymous authentication methods that rely only on a cookie, may be selected.
- Controlled experience based on registration: Some modules may be modified based on registrations or other forms of authentication. For example, a partner that is a computer manufacturer may incorporate a help module on its partner-customized home page. The content in the help module may vary depending on registration levels of the user (e.g., whether the user signed up for ongoing customer support, what level of support they requested, etc.).
- Commerce in the modules: The controlled experience may enable the partner to monetize the partner container document. A user may be charged a subscription fee by the partner to access certain modules or content within the modules. For example, the partner may offer a music module. A subscription to the partner's music module may enable the user to choose certain selections of music to hear based on subscriptions. Also, within the music module, the partner may offer different subscriptions. For example, one subscription may permit an end user to listen to music, while another may permit the user to listen to and download music.
- Search box module: One of the modules that a partner may select may be a search module that leads to a hosted search page that serves advertisements (e.g., linked to an existing AdSense for Search). The display of advertisements in association with the search module provides another way for the partner to monetize the partner container document. In one example, the search box module may be a required module of a container document.
- Selective and automatic internationalization: The container document may internationalize the container document based on configurations/customizations provided by the partner or its users.
- Data-driven container documents: The container document for a partner may be designed to generate a common template with different content based on data input to the system (e.g., WiFi detection is used to have the partner container document modified depending on location). The system may also provide different localized partner container documents.
- Modification of a default container document: The system may provide a default container document that the partner then configures. The container document server and/or hosted server system then cooperates with an interface provided to ensure that the content provided meets the partner configuration selections in a safe manner.
- Fully-functional preview: A partner admin user interacting with the configuration interface may view a live version of the container document based on configuration information being input and what the user sees is the container document that includes the actual content and modules from the hosted server system (e.g., not just a mock-up). The system may further allow editing of a module from within the preview page.
- Live updates to container documents and live preview: Use of a central repository of events with associated interested parties enables the system to update live previews and live container documents based on changes related to those items. The repository may track what user interfaces or modules are to be notified of events that alter their performance and then may notify them immediately. As an example, if a partner admin user is requesting a change to the background color of the partner customized container document, as soon as that partner admin user selects a color swatch, the background automatically changes (rather than requiring the user to say “Apply” for example) for a real, live preview.
- Each of these features will be understood in greater detail in the context of the following systems, methods and example pages discussed below.
- Multiple Levels of Configurability and Content Freezing
- One implementation feature for this service and system relates to multiple levels of configurability of the content of a container document. An example container document is next described along with an example system that may be used to enable a partner and end users to provide configuration information.
- One example of a container document is a personalized portal page that is associated with a user of a partner or other user group. A portion of the content on the personalized portal page may be predefined by the partner/user group, and a portion of the personalized portal page may be configured and customized by the end user.
- The container document “contains” one or more modules. Any number of the modules or other content “contained” within a container document may be predefined by a representative of a user group. As used herein, the term “container document” or “container” should be understood to include a personalized homepage of a website, a portal page associated with a user group, a sidebar, toolbar element that incorporates one or more such modules, a page hosted by a site, a document capable of rendering modules (e.g., any document capable of rendering HTML code or XML code) in the format of the module (e.g., XML). Also, the container document may be a website of another entity that incorporates modules provided to the website from a syndication system.
- As used herein, the term “module” may be understood to refer to a piece of software and/or hardware that renders data for use in a container document. Modules may be personalized to user preferences, preferences of the container, preferences of the environment or other inputs, including preferences defined by the user group, for example. A module specification may be understood to include a set of instructions used to render data for the container document using elements that have been predefined.
- It should be appreciated that various forms of the container document may exist but one such illustrative example is depicted in
FIG. 2 .FIG. 2 depicts acontainer page 200 with a plurality of modules that have been incorporated into the container document using IFRAME and inline HTML techniques. These IFRAMES may allow the hosted server system to encapsulate the arbitrarily selected content defined by the user group. In one example, modules may also be served in the container document with or without an encapsulation layer. Encapsulation layers may provide useful functions in many types of systems, (e.g., serving a module within an IFRAME in an HTML document provides a security enhancing barrier). Other applications may prefer to serve module content without such an encapsulating layer (e.g., for improved performance or ease of layout or content management). -
FIG. 2 depicts a plurality of modules and other content withincontainer document 200 including aheader 201, alogo 202, asearch box 203,user group content 204, an “add content”element 205, a user-selectedmodule 206, aremote module 207, aremote module 208, and aremote module 209. Different formats for the various modules may exist depending upon, for example, the specification of the creator of the module and/or the definition of the module by a representative of the user group. As depicted, some modules may provide scroll bars, and others may not. Some modules may have different sizes or shapes compared to other modules. In addition, some modules may offer the opportunity for the user to edit the display preferences and/or per-use data associated with the module. (See, for example,modules - A portion of the content on the
container page 200 may be created and/or predefined by a user group and/or a representative of a user group. For example, theheader 201 may containlinks 201 a that are associated with the user group.Logo 202 may also be a logo that is associated with the user group.User group content 204 may be created and/or defined by the user group and optionally locked or frozen (described below) so that users of the personalized container document cannot remove, edit or add user group content. -
Header 201 may comprise HTML and/or XML code to create, for example, a banner oncontainer page 200.Header 201 may includelinks 201 a that may be associated with the user group. For example, where a user group is associated with computer hardware provider,links 201 a may include links to particular services provided by the computer hardware provider (e.g., service and support) and links to particular goods provided by the computer hardware provider (e.g., desktops, laptops, peripherals, and/or printers). Where a user group is associated with an Internet Service Provider (ISP),links 201 a may include links to email, content driven pages provided by the ISP (e.g., sports, finance, shopping, etc.), customer service, and the like. -
Search box 203 may include atext field 203 a and asearch button 203 b, where a user can enter text intotext field 203 a, and activate (e.g., click on)search button 203 b which initiates a search engine that may be associated withcontainer page 200 to search for the text entered intotext field 203 a. When search results are returned, a search engine associated with the container document may track any follow-on action performed by the user as will be described in greater detail below. -
Container page 200 may containuser group content 204.User group content 204 may includeuser group modules 204 a-204 c. User group content anduser group modules 204 a-204 c may be created and/or defined by the user group.Modules 204 a-204 c may be modules that are specifically associated with the user group and/or any other unrelated module that may be selected for inclusion intouser group content 204. A representative associated with the user group may be granted administrative privileges to create and/or defineuser group content 204. - One of the functions provided with this
example container document 200 is the opportunity for the user to add content to the container page through selecting the “add content”element 205. The content that may be available to be added to container page 200 (e.g., the taxonomy) may be defined and/or restricted by the user group. For example, a user group may restrict a user from adding modules of a competitor or any other modules that may be deemed to be undesirable by the user group. - Upon selecting the “add content” element, the system may offer an end user the opportunity to interactively indicate an additional module to be included in the container page based on the taxonomy defined by the user group, for example. Various forms of an interface to receive that input may be provided.
- User-selected
module 206, and remote modules 207-209 may be a result of adding content. - Content Freezing
- The content added by the user may be placed within
container page 200 in accordance with the preferences of the user. However, the user may be restricted or prevented from placing, moving, or modifying some content defined by the user group. In other words, certain portions of the partner/user group defined container document may be frozen to the user. Thus, the resultingcontainer page 200 may include a portion of the container page that is defined by the user group in accordance with preferences established by the user group and a portion of the container page that is defined by the user in accordance with preferences of the user. For example, a column of modules or row of modules may be frozen so that the user may not eliminate, move, alter or change their position and/or content. In addition, certain blank spaces on a partner container page may be frozen to prevent a user from adding a module to that blank space. - Interaction with Container Server System
- As described above, the hosted
server system 10 may serve a container document to end users of the partner based on partner-specified configurations and end-user specified configurations. To actually generate a container document with content, a variety of platforms may be used. - One such platform may be the Remote Module system and the associated Personalized Google Homepage system, which is described in detail in co-pending U.S. patent application Ser. No. 11/298,930, filed on Dec. 12, 2005, entitled “Remote Module Incorporation Into A Container Document,” the contents of which is attached hereto as Appendix A. (Note that in the event of an inconsistency between the present disclosure and Appendix A, the present disclosure controls with regard to each embodiment separately. In the event that the present disclosure and Appendix A are consistent, but of differing scope, the disclosure of greater breadth controls with regard to each embodiment separately.) That application details an example hosted
server system 10.FIG. 1( c) depicts an overall system diagram that provides a number of systems operating with hostedserver system 10. Details of an example host system taken from the '930 Application are provided later in this document. - To facilitate a partner being able to take advantage of the service, the partner/user group may enable one or more partner admin users to interact with a configuration server system that communicates with or is part of hosted
server system 10. An example of such a system is shown aselement 40 inFIG. 1( c).Configuration server system 40 may have aconfiguration server 41, authorization/authentication unit 42, and adata server 43. In addition, one or more usergroup database systems 44 may operate in conjunction with the various units ofconfiguration server system 40.Configuration server system 40 may connect over network 26 (e.g., the Internet) to hostedserver system 10. In one example,configuration server 40 may be hosted. - With regard to
configuration server system 40, aconfiguration server 41 may be provided to allow representatives of a user group to create and/or define a container document, or a part of a container document (e.g., a set of modules) to be associated with the user group and to enable a partner end user to select/identify an authentication method or methods to be applied for container documents.Configuration server 41 may also communicate with hostedserver system 10 to serve a container document to users of the user group. - An authorization/
authentication unit 42 may be provided to authenticate the representative of the user group that may be charged with creating and/or defining the container document associated with the user group. - A
data server 43 may be provided to serve the data that may be displayed on a container document.Data server 43 may store and serve images and/or any other data that may be used in a container document, for example.Data server 43 may also store HTML code for modules that may be designed specifically for users of the user group, for example. - While one configuration is shown in
FIG. 1( c), it should be appreciated by one of ordinary skill in the art that other configurations of these various units may also be possible. For example, the various units depicted within hostedserver system 10 may be disposed at various locations aroundnetwork 26 or at various points on several networks. Similarly, the various units depicted withinconfiguration server system 40 may also be disposed around various locations aroundnetwork 26, including within, for example, hostedserver system 10. In addition, whereas a single hostedserver system 10 and a singleconfiguration server system 40 are depicted, it should be appreciated that any number of each of the units depicted onFIG. 1 may be provided includingnetwork 26. - Illustrative Configuration Server
-
FIG. 3 depicts an exemplary embodiment of a configuration server 300. Configuration server 300 may be a tool for representatives of the user groups to create and/or define one or more container documents for users of the user group and establish an authentication method for users of the user group. As shown inFIG. 3 , configuration server 300 may include aservlet layer 301, avalidation layer 302, anaction layer 303, and abackend layer 304. - Configuration server 300 may serve a web application to user systems of representatives of the user group (e.g., partner admin user 17) to enable those representatives to create and/or define one or more personalized container documents for users of the user group. Configuration server 300 may also be a local application run by a user. For security reasons, or to restrict the number of users that have access to the application, a partner may provide the local, standalone application to the representatives for installation on their user systems, for example. The representatives may be identified as having administrative privileges for the user group. These privileges may enable the representative to receive the web application (or install the local application) to create and/or define one or more personalized container documents for users of the user group. The web application received (or local application installed) by the representative may include a HTML editor to enable the representative to edit a container document, for example.
- Configuration server 300 allows representatives and/or privileged users to define, for example, an optional banner and/or header across the top of a container document, optionally lock one or more column of modules contained within the container document, configure a default set of modules to appear on a container document, configure a set of available modules that may be included on a user's personalized container document (e.g., the taxonomy), configure default options for the modules that appear on a user's personalized container document, and/or define and/or configure the container document in any other manner possible. Configuration server 300 also allows representatives and/or privileged users to select a uniquely-indexed partner domain that may be used to dynamically provide the container document to users and select an authentication scheme for authenticating the users.
-
Servlet layer 301 may execute three exemplary servlets in cooperation with the application executing on a representative's user system, for example. In such an embodiment, as will be understood, a servlet may include any program, such as a Web server, a servlet engine, a CGI script, or a non-Web-based remote configuration program. For example, a first servlet may be executed to serve a user interface to an authorized user of the configuration server. The first servlet may accept no-parameter HTTP GET requests and may serve an initial HTML interface and a JavaScript client to an authorized user, such as a representative of the user group, for example. Also, the first servlet may retrieve data from a backend interface (e.g., a list of pages available for update by the authorized user) and present such data to the user. - A second servlet may be executed to receive updates to one of the container documents, for example. Inputs and outputs may be received and transmitted, respectively, by this servlet in JavaScript Object Notation (JSON) format. An input parameter may be associated with an “action” and the value may be a JSON representation of a batch of “action” objects. This servlet may deserialize (e.g., convert the “action” object into a JAVA file) the JSON representation and pass the deserialized parameter to other layers within the configuration server. Also, this servlet may generally convert configuration information from its user input format (e.g., JSON) into HTML, XML, Microsoft Word macros, or the like.
- A third servlet may be executed to handle data uploads, for example. Data including, but not limited to, images may be received as “mulitpart/form-data,” and may need to be extracted in a manner different than extracting GET/POST parameters. Once extracted, the request to upload the data may be passed to other layers within the configuration server.
- The servlets described above may be accessible only by those representatives of a user group that are authorized. To receive the web application, a user may initially issue a request to the first servlet, be authorized by an authentication/authorization unit, be served a user interface, and then indirectly issue other requests to other servlets through the user interface. Also, to receive the local standalone application, the partner/user group may provide the application on disk or make it available for download by the user. The user may then install the application and run the application to indirectly issue other requests to other servlets through the user interface.
-
Validation layer 302 may verify the data that is received by the servlets and convert the data for use by other layers of the configuration server. For example,servlet layer 301 may accept external requests, and because this data is external, it may need to be verified as being secure. Further,servlet layer 301 may receive parameters as strings. When parameters are received as strings, those parameters may need to be converted into, for example, typed parameters. -
Validation layer 302 may accept “action” objects from theservlet layer 301. The “action” objects may provide the requested “action” and a string-string name-value map of parameters required to execute the “action.” Given the “action,”validation layer 302 may determine from another layer within the configuration server, what types of parameters are required to execute the “action.” Based on this determination,validation layer 302 may validate the input strings and convert the input strings to the appropriate type of parameters. - The types of parameters may be represented as “action parameter types.” By representing the types of parameters as “action parameter types,” standard Java-types may be superseded. For example, a uniform resource locator (URL) and a block of HTML may be represented in Java as strings. Different validation rules may be applied to these different parameters (e.g., a URL may be well-formed with a recognized scheme and only contain valid characters, while HTML may be scrubbed such that it may not contain JavaScript, that may open security holes). To apply different validation rules to different types of parameters,
validation layer 302 may run different “action parameter types” through different validators. - Mapping each “action” to a list of “action parameter types,” may also allow
validation layer 302 to automatically select which validator is required for each “action.”FIG. 4 depicts an exemplary embodiment of aflow chart 400 for automatically selecting which validator may address a specific “action.” Inblock 401, the “action” may be determined from the “action” input. Inblock 402, the types of parameters that are required to execute the “action” may be determined. This determination may be accomplished by another layer within the configuration server. - For each parameter type required to execute the “action,” in
block 403, the “action parameter types” may be received. Inblock 404, the validator for the “action parameter type” may be determined. Inblock 405, the string-value of the parameter from the “action” input may be determined. Inblock 406, the string-value may be passed through the validator. Inblock 407, the validator may output a valid Java-type value for the corresponding string-value. Inblock 408, the Java-type value may be saved. - One or more methods for validation may be used. For example, simple parameters (e.g., Boolean expressions) may be parsed using a Boolean filter, while complex parameters (e.g., objects) may be deserialized into a Java object.
Validation layer 302 may pass validated parameters toaction layer 303 for action. -
Action layer 303 may execute an “action.”Action layer 303 may receive requests fromvalidation layer 302 and interact withbackend layer 304 to execute the “action.” - “Actions” may be registered with an “action manager” so that the “actions” may be executed. In such an embodiment, to register an “action” with the “action manager,” an “action info” object indicating, for example, the java-class and public method containing the logic and the parameters required to execute the “action,” may be specified. When an “action” is registered, the “action manager” may be queried for the parameters required to execute the “action,” and
action layer 303 can then request execution of the “action” and pass those parameters. - As noted above,
action layer 303 may interface withbackend layer 304 to execute an “action.” In such an embodiment, when interfacing withbackend layer 304,action layer 303 may cache data received frombackend layer 304. Similarly, action layer may store multiple updates, for example, before passing the updates tobackend layer 304. -
Backend layer 304 may provide an interface with backend units in the system. Backend units in the system may store and provide access to data associated with the user groups and container documents for the user groups. Such data may include, for example, preferences of the user group (e.g., default preferences for a container document), data to map user groups to the respective preferences of the user group, login authentication and authorization data (including data about authorized representatives of the user groups), images, content for a portion of a page that may be defined and/or personalized by a user group, and/or any other data related to user groups, representatives of the user groups, or users of the user groups. - Illustrative Process for Configuring A Container Document
- Container documents (e.g., portal pages or personalized portal pages) may be initially configured by a representative of a user group. Also, container documents may initially be configured as a result of group voting or meta-group requirements (e.g., groups within a group). The content may also be initially determined as a result of collaborative filtering. As described above, personalized container documents may include a portion of content that may be created and/or designed and/or configured for the user group and a portion of content that may be configured by users of the user group. The configurations by the users of the user group may be limited by the configuration and/or design presented by the user group.
-
FIG. 5 depicts anexemplary flow chart 500 which illustrates an exemplary method for designing and configuring a container document. Inblock 501, a relationship with a user group may be established. A user group may establish a relationship with a host of the container document, for example. To establish a relationship with a host, a user group may identify itself and one or more representatives that may be authorized to design and/or configure a container document on behalf of the user group. In one example, the user group may also establish an account with the host. The account may be a Google AdSense account or any other account that may be used to store any data about the user group. - Where the user group has a preexisting account with the host, the user group may indicate as such and the system may associate the user group with the preexisting account. When the user group has been identified, an identifier associated with the user group may be stored in a database system associated with the configuration server. The domain name may also be included in a map file, for example, that may map the user group to data associated with the container documents for the user group.
- In one example, the domain name may be selected by the user group. For example, the user group may select a domain name such as, e.g., “start.usergroup.net.” This user group-selected domain name may then be mapped to, for example, a more explicit path such as “partnerpage.host.com/usergroup.net” and this masking/aliasing information may be stored by the host server system in a dynamic table of uniquely-indexed partner domains.
- To begin the configuration process, in
block 502, a representative of the user group may login to a configuration server system. For example, a representative may include a corporate representative of the user group, a web master of the user group, a agent of the user group selected by the user group, or any other person or group of people selected to represent the user group for purposes of configuring a container document. An authorization/authentication unit may receive a login request including, for example, a user name and password associated with the representative, determine whether the representative has administrative privileges for the user group, and grant access to the configuration server system based on a determination that the representative has administrative privileges for the user group. - In
block 503, the configuration server system may serve a web application to the representative. A representative may be operating a client device and/or user system capable of providing inputs to the web application (or standalone application) to configure a container document or personalized container document. A servlet associated with a configuration server may serve the web application to the client device and/or user system. The client device may receive the web application and execute the web application on the client device. Where the application is a standalone application, the standalone application may be installed and executed on the client device. The web application (or standalone application) may include, for example, an editor for editing the header and/or other portions of the container document and other tools for configuring and/or designing a personalized container document. Such other tools may include, for example, an action bar, for receiving actions to be executed; a tab set, including a layout tab, a colors tab, a color code editor, and other modules; an available content tab to create custom modules and/or define the module taxonomy; a live preview pane; a module picker; a header and footer tab; and a URL editor tab. - The action bar may include, for example, icons or buttons, that when activated, may trigger the execution of an action. Such actions may include save, delete, edit, open file, open blank container document, change format of the container document, display live preview, insert object or module, and any other like action. The layout tab may include a selection of predefined layouts that, for example, enable the user to freeze (or lock) a certain portion of the container document or permit a user to control all content on the container document.
FIG. 6 depicts anexample application interface 600 including alayout tab 601 in accordance with an exemplary embodiment. As shown inFIG. 6 ,application 600 may also include anaction bar 602 having a “Save Now”button 602 a and a “Preview”element 602 b. As shown inFIG. 6 ,application 600 may also include a locking portion that allows the representative to select whether to freeze (or lock) a portion of the container document. To select the freeze (or lock) option, the representative may activate theradio button 604 associated with freezing (or locking) the content. To allow users to fully customize the container document, the representative may selectradio button 605 associated with unlocking the content. - Upon receiving the application, the representative may select which container document to be configured in
block 504. If the user group has not previously configured a container document, the representative may initialize a container document to be configured. If the user group has configured one or more instances of container documents, the representative may be presented with an interface that enables the representative to select from among the container documents to configure. - In
block 506, a layout may be selected. The representative may select whether to optionally freeze (or lock) one or more columns on the container document or allow the user to control all of the content on the page. For example,FIG. 6 shows alayout tab 601 for enabling a representative to select a layout for the container document. - In
block 506, colors for the container document may be selected.FIG. 7 depicts an exemplary embodiment of anapplication interface 700 including acolors tab 701 to enable a representative, for example, to select colors for various sections of a container document. As shown inFIG. 7 ,colors tab 701 may include anelement selection portion 702, acolor palette 703, atext box 704, apreview pane 705, and areset button 706.Element selection portion 702 may enable a representative to select the portion of the container document that is being changed. For example, as depicted, a user may select to change the container document's header, background, title, etc.Color palette 703 may enable a user to select a color from those colors presented on the palette for the selected portion of the container document.Text box 704 may enable a representative to directly enter a known color code intotext box 704 to select a color for the selected portion of the container document.Preview pane 705 may display a mock-up of the colors selected for the container document.FIG. 8 depicts another embodiment of anapplication interface 800 to illustrate the colors selected for a container document.Reset button 706 may allow the representative to return all colors to grey, for example. As shown inFIG. 8 , each portion of the container document is identified and a color square indicating the selected color for that portion may be placed adjacent to the identified portion. For example, as shown inFIG. 8 , the “Title Bar” with a frozen (or locked) column includes a white color square adjacent to the “Title Bar” text. - In
block 507, a header and footer for the container document may be customized.FIG. 9 depicts an exemplary embodiment of anapplication interface 900 including a header andfooter tab 901 to enable a representative to customize the header and footer of a container document. As shown inFIG. 9 , header andfooter tab 901 may include aheader portion 902 that may enable the representative to define a header to appear at the top of a container document. As shown inFIG. 9 ,header portion 902 may include atoolbar 908 that enables the representative to add an image to the header, add a link to the header, customize the font for the header, and/or edit the HTML code comprising the header. As depicted,header portion 902 may display a mock-up of the header that may appear on the container document.FIGS. 17 and 18 also illustrate exemplary application interfaces that may enable a representative to customize the header and footer of a container document. - Header and
footer tab 901 may also include afooter portion 903 that may enable the representative to define a footer to appear at the bottom of a container document, for example. A footer may include alink 904 associated with a privacy page, alink 905 associated with a terms of service page, alink 906 associated with a contact us page, and alink 907 associated with a service agreement page. Header and footer tab may also include an “add a link to the footer”element 909 that may enable the representative to add custom links to the footer of the container document, for example. As shown inFIG. 9 ,footer portion 903 may display a mock-up of the header that may appear on the container document. - In
block 508, content for the container document may be selected. In an exemplary embodiment, the representative may select from, for example, remote modules, or other modules (e.g., RSS, API-based modules, etc.) that may be included in the container document or create a custom module to be included in the container document.FIGS. 10-14 depict various example application interfaces for defining the content for a container document using remote modules and/or custom modules.FIGS. 19-21 also depict various example application interfaces for defining the content for a container document using remote modules and/or custom modules. - In
block 509, the container document may be published. As referred to herein, publishing the container document may include any manner of making the container document available to users, including, but not limited to, saving the container document and indicating to the hosted server system that the container document is to be available to its users.FIG. 15 depicts an exemplary embodiment of anapplication interface 1500 including a publishtab 1501 to enable the representative to publish the container document. The representative may select the publishbutton 1503 to publish the page. In such an embodiment, theURL 1502 of the container document may be displayed. Publishtab 1501 may also include anunpublish button 1504 which may enable the representative to remove the published container document. - Illustrative Process for Accessing Personalized Container Document
- In an exemplary embodiment, users of the user group may access a container document that has been configured by the user group, for example. As shown in
FIG. 15 , an exemplary URL for a container document may be, for example, “http://www.host.com/ig/p/usergroupname/instancename,” where “www.host.com” may represent the domain of the hosted server system, “usergroupname” may represent the user group, and “instancename” may represent a particular container document. A user may also access the container document using, for example, the destination IP address of the “host.” As will be described in greater detail below, a user group may have multiple instances of container documents for the users of the user group. In an exemplary embodiment, the “/p/” in the URL, for example, may indicate that the particular URL is associated with a container document associated with the user group. -
FIG. 16 depicts an exemplary embodiment of aflow chart 1600, which illustrates a method for serving a container document and/or a personalized container document to a user of the user group according to an exemplary embodiment. Inblock 1601, a request for a page may be received. As noted above, the request may be a URL request or a request using the destination IP address (if known by the user) of the container document. The request may be received by the hosted server system, for example. - In
block 1602, the hosted server system may determine whether the request is for a container document. As described above, the URL for a container document may be, for example, “http://www.host.com/ig/p/usergroupname/instancename” and the “/p/” may indicate that the URL is associated with a container document associated with a partner/user group. In one example, the user group may choose to hide this URL from the users by setting, for example, its own domain (e.g., www.usergroupname.com) to point to this URL via CNAME. The hosted server system may parse the URL to determine whether the “/p/’ is present in the URL. If the “/p/” is present, then the hosted server system may proceed with serving the container document. If the “/p/” is not present, then the hosted server system may serve another page associated with the URL request. It is to be understood that other indicators and techniques for recognizing that the URL request is for a container document associated with a partner/user group may be used. For example, in one example, the URL for a container document may be “http://www.host.com/ig/usergroupname/instancename” and the “/usergroupname/instancename” may indicate that the URL is associated with a container document associated with a partner/user group. - In another example, a user may request a URL selected by the user group such as “start.usergroup.net.” Upon receipt of this request, the hosted server system may determine a true path (e.g., “partnerpage.host.com/usergroup.net”) associated with this request and decode the true path to determine the domain name. The hosted server system may then look up the domain name in a dynamic table or other dynamic storage module that is uniquely indexed by partner domain to determine how to function, for example.
- In
block 1603, information may be extracted from the URL. The identity of the user group and the particular instance of the container document may be extracted from the URL. For example, if the URL has a known format as described above, the hosted server system may parse the URL to extract the “usergroupname” and “instancename” strings from the URL. This information may then be used to look-up user group preferences and/or the personalized container document as will be explained in greater detail below. - Multiple Points of Entry
- In
block 1604, the hosted server system may determine whether the user is recognized. The system provided may provide for multiple points of entry, meaning that multiple different accounts may be used to enable a user to access a personalized partner container document. The user group (e.g., an admin user that sets up the user group container document) may select which authentication method(s) (i.e., point of entry) may be used to authenticate users of the user group. This authentication method may also be stored by the hosted server system in the dynamic table or other storage module that is uniquely indexed by partner domain. When the user makes a request for the container document and the domain name is looked up in this table, the authentication method also may be determined. Thus, the system may determine whether the user is recognized based on the domain name and the authentication method(s) associated with the domain name. - For example, a user may have an account with the hosted server system (e.g., Google) that is used for various activities on that hosted server system (e.g., email, data storage, personalized home page, etc.). Also, the same user may have an account with the partner whose container document the user is requesting (e.g., the user may be a customer of the partners). Therefore, if the authentication method to be used is associated with a particular account, the hosted server system may check to determine whether it has a record of the user associated with that particular account. Where, for example, an account with the hosted server system may be used to authenticate a user with more than one user group, the hosted server system may determine whether the user is recognized by a particular user group using the domain name and information associated with the hosted server system account to authenticate the hosted server system account to that particular domain name. The hosted server system also may examine one or more cookies, for example, on the user's system to determine whether the user is recognized as having an account with the hosted server system if an anonymous/cookie-based authentication method is indicated in the dynamic table that is uniquely indexed by partner domain. If the user is not recognized or not logged in according to the user group selected authentication method for the container document, for example,
flow chart 1600 may proceed to block 1605. If the user is recognized or logged in,flow chart 1600 may proceed to block 1607. - In
block 1605, the hosted server system may issue a request to the configuration server, for example, to retrieve the preferences of the user group container document. In an exemplary embodiment, the request may include an identification of the user group, other information about the user group, and the instance name of the container document that has been requested. To determine the identification of the user group, the hosted server system may convert the “usergroupname” into a unique identifier that may be associated with an account of the user group. To convert the “usergroupname,” the hosted server system may look up that user group's identifier in a local map file, for example. Other information associated with the user group may be retrieved using similar look-up techniques. The configuration server may receive this request and then look up further user group information. - In
block 1606, the hosted server system may serve a default container document. The hosted server system may receive information regarding the default container document into a user group data packet and a display preference data packet, for example. The user group data packet may specify the layout (e.g., header or no header, fixed column or no fixed columns, etc.), skinning preferences (e.g., colors), and the taxonomy, for example. The display preference data packet may specify default settings for each container document, for example. The hosted server system may then use this information to serve the default container document to the user. The resulting container document may contain the content configured by the user group and the default settings configured by the user group for any of the content that may be configured by the user. - In
block 1607, the hosted server system may determine whether the user has personalized the container document in accordance with the user's personal preferences. To do so, it may identify the user through the user group-selected authentication method mentioned above. Specifically, it may enable the user to log-in using the partner account information, the hosted server system account information or some other information as selected by the user group. To enable this to occur, the account log-ins valid for a user to receive a partner container document may be stored at the hosted server system in association with the partner container document data. So, for example, if the partner is a computer company, Computers4Sale, and they have a partner container document that is a partner-based Google Personalized Home Page, the user should be able to access the Computers4Sale Google Personalized Home Page by logging in to Google using a Google account (if the selected authentication method authenticates users via an account with the hosted server system), or by logging into Computers4Sale using a Computers4Sale account that Google has stored in its list of users for the Computers4Sale Google Personalized Home Page (if the selected authentication method authenticates users via an account with the partner). - As described above, based on the taxonomy defined by the user group, a user may personalize (e.g., select which modules may be included in the personalized container document, apply personal preferences to those modules, determine the location of those modules within the container page, etc.) the container document associated with the user group. In one example, a user may personalize the container document without logging in to Google, for example. In this example, the user may customize a container document in an “offline” environment (e.g., the user is not logged-in). The customizations may be stored in a cookie, for example, so that when the user does log in for the first time (or the first time after making “offline” customizations), the cookie-based preferences may be transferred to the server.
- If the user has personalized the partner container document, in
block 1607, instead of the default settings being applied to the partner container document, the user's personal settings may be applied to the container document. The hosted server system may determine whether the user is recognized and whether the user has personalized the container document simultaneously. If the user has not personalized the container document,flow chart 1600 may proceed to block 1605. - In
block 1608, the hosted server system may request the user's personal preferences. These personal preferences may be stored in a database system that is associated with the hosted server system. - In
block 1609, the hosted server system may serve a personalized partner container document. The hosted server system may receive information regarding the container document in a user group data packet and a display preference data packet, for example. The user group data packet may specify the layout (e.g., header or no header, fixed column or no fixed columns, etc.), skinning preferences (e.g., colors), and the taxonomy, for example. The user may also add additional non-group content if the user group has configured the container document in a manner that permits the user to do so. The display preference data packet may specify a user's personal settings for each container document, for example. The hosted server system may then use this information to serve the personalized container document to the user. The resulting personalized container document may contain the content configured by the user group and the personalized settings configured by the user, for example. -
FIG. 22 also depicts an exemplary embodiment of aflow chart 2200, which illustrates a method for serving a container document and/or a personalized container document to a user of the user group blocks 2201-2203 operating as described above for blocks 1601-1603. - In the example shown in
FIG. 22 , blocks 2204 and 2205 may operate in parallel. Inblock 2204, user information may be retrieved. The user group may select an authentication method for authenticating users of the user group. Thus, to retrieve user information, the hosted server system, for example, may the system may check for information the account identified by the authentication method. For example, a user may have an account with the hosted server system (e.g., Google) that is used for various activities on that hosted server system (e.g., email, data storage, personalized home page, etc.). Also, the same user may have an account with the partner whose container document the user is requesting (e.g., the user may be a customer of the partners). Therefore, based on the authentication method, the hosted server system may check to determine whether it has a record of the user being logged in with the account identified with the authentication method. If the user group has selected an anonymous/cookie-based authentication method, the hosted server system may examine one or more cookies, for example, on the user's system to determine whether the user is recognized. - In
block 2205, default portal data may be requested. To request portal date, the hosted server system may issue a request to the configuration server, for example, to retrieve the preferences of the user group container document. - In
block 2206, the hosted server system may determine whether the user is recognized and whether the user has a personalized container document. To do so, it may identify the user through one or more of the multiple points of entry mentioned above. Specifically, it may enable the user to log-in using the partner account information, the hosted server system account information or some other information. The hosted server system may, for example, examine user cookies to determine whether the user has personalized the container document. The hosted server system may determine whether the user is recognized and whether the user has personalized the container document simultaneously. If the user has personalized the container document,flow chart 2200 may proceed to block 2207. If the user has not personalized the container document,flow chart 2200 may proceed to block 2208. - In
block 2207, user information may be overlaid onto the container document. To overlay information onto the container document, the content selected by the partner/user group, for example, may be combined with the user's customizations to form the container document. - In
block 2208, the data for the container document may be rendered and the container document may be served to the user. - Data Driven Design
- A user group may have multiple container documents associated with the user group. In that case, each portal page may be a separate instance. Where, as described above, the URL for each personalized container document is “http://www.host.com/ig/p/usergroupname/instancename,” each instance may be uniquely identified by a different “instancename,” for example. In an example where the URL request is start.mydomain.net/instancename, each instance may also be identified by a different “instancename.” A user may specifically request an instance or the hosted server system and/or configuration server system may determine which instance to serve to the user by examining cookies on the user system or other information about the user, for example. Also, the hosted server system may determine which instance to serve based on an IP address, geocoded information, or other external information, such as information known to the user group but not to the hosted server system. Selecting instances in this manner enables a partner to use its knowledge of its end users to determine which of several pages to serve the end user by default, for example.
- Varying Content Based on Geographic Location
- One or more instances may be based on varying the content that is presented to different users. For example, the user group may vary the content presented to its users based on a variety of data inputs, including geographic location, user demographics, time of day, time of year, etc. In the geographic location example, users on the East coast of the United States may receive an instance associated with the East coast of the United States, while users on the West coast of the United States may receive a different instance that is associated with the West coast of the United States. In another example, the content may be varied based on the specific city in which the user is located. In such an example, the hosted server system may determine the location of the user by determining whether the user has access to a wireless access point (e.g., WIFI or some other wireless protocol). From that determination, the hosted server system may determine the city in which the wireless access point is located and serve the user an instance associated with that city. Content in that instance may include, for example, a travel module that shows flights available from the airport nearest to that city. The content may also include, for example a weather module that shows the current weather for that city.
- Varying Content Based on Levels of Service
- Content may be varied based on, for example, levels of user service. For example, where the user group may have users of varying status (e.g., silver, gold, platinum), the user group may vary the content presented to its users based on those status levels. In such an example, the hosted server system and/or configuration server system may determine which instance to serve to the user by examining cookies on the user system or other information about the user, for example. In one exemplary embodiment, the user group may be associated with an airline, for example. In such an embodiment, the airline may have a frequent flier program and users may be enrolled in that program. If a user has status within that program, the hosted server system may serve the user a container document associated with that status level. For example, if a user has silver status, the instance associated with silver status may include a module with information on how to obtain a higher status level. If the user has platinum status, for example, the instance associated with platinum status may include a module that allows the user to automatically upgrade to first class on an upcoming flight.
- A service provider may have users with various levels of service agreements. For example, some users within the user group may have an “at-home” service agreement while other users within the user group may have a “basic” service agreement that requires the user to send the item in for repairs. In such an example, the instance associated with the “at-home” service agreement may include a module for setting up an at-home service call. The instance associated with the “basic” service agreement may include a module that provides instructions on where to send the item for repairs based on the user's geographic region, for example.
- Subscription Based Content
- Partner/user groups may also vary content based on subscriptions. For example, some user may subscribe to “premium” content. Those users that subscribe to the “premium” content may be served an instance containing a module including the “premium” content. Also, users may subscribe to content-based modules. For example, the partner may offer a music module and a subscription to the partner's music module may enable the user to choose certain selections of music to hear based on subscriptions. Also, within the music module, the partner may offer different subscriptions. For example, one subscription may permit an end user to listen to music, while another may permit the user to listen to and download music. In these examples, the partner may charge the user a fee for the subscription, thus enabling the partner to monetize modules within the container document.
- Selective Internationalization
- Instances of a partner container document may be associated with different languages. In such an embodiment, the hosted server system and/or the configuration server system may, for example, determine the location of the user as described above and serve an instance of a container document that is in a language associated with the location of the user. For example, users in the United States may be served an instance of container document that is in American English, users in the United Kingdom may be served an instance of a container document that is in British English, and users in France may be served an instance of a container document that is in French. Also, partner or user profiles may identify a language preference and such preferences may be used to internationalization the container document based on such content. Different versions of the container document may be provided for the different languages as well.
- The multiple instances for a user group may be based on a common template. For example, in the example described above regarding the airline module, each instance of the container document may include the module showing flights, with the content within the module varying based on the geographic location. In another embodiment, the multiple instances may not be based on a common template, with each instance being unique.
- Illustrative Configuration User Interface
- As described above, a representative associated with the user group may configure the container documents for the users of the user group through a web application. Such an application may include a user interface for configuring and/or defining the container document may be interactive. Such an interface would permit the representative to view a fully-functional preview of the actual content that is not yet published. The interface may also permit the representative to edit the content within the fully-functional preview.
- Live Container Document Preview
- There may also be many interconnected components of the user interface. When changes are made using one of the components, the other components may need to be synchronized. To synchronize the components of a user interface, the components may observe each other to recognize the changes and update accordingly. The source of the change (e.g., the page content tab) may “push” the change to all observers. For example, if a checkbox for a module is unchecked in a module taxonomy selection portion on the available content tab, the module should disappear in the module taxonomy selection portion on the selected modules tab. In such an example, the checkbox may “push” the change to the selected modules tab.
- Observers may also actively poll the sources of changes for changes to the interface. For example, the components of the user interface may periodically poll the backend layer to determine whether any of the files associated with the user group have changed. If so, the changes may be updated immediately in the other components of the interface. The following examples may be considered. In one example, when a user is editing the colors of the container document using the colors tab described above, all of the components of the colors tab may be registered with a central party (i.e., an event registrar) for an interest in an event to “synchronize color.” When one of the components in the colors tab reflects a change, the component may notify the event registrar, which may, in turn, notify all of the components registered for the “synchronize color” event.
- Search Box Within Container Document
- As described above with regard to
FIG. 2 , in various exemplary embodiments, a container document may include a search box. In such embodiments, a search box may be associated with a host of the container document. When a user of the container document enters text into a text field and executes a search, search results may be returned to the user. In some instances, the search results may include links associated with advertisements. If the user subsequently click on one of the links associated with an advertisement, the host of the container document may compensate the user group. The host may credit an account of the user group, for example. The manner of revenue sharing between the host and user group may involve a percentage of revenue, a flat fee arrangement (e.g., a specific amount per click), or other arrangements known in this field. - Example Hosted server system For Serving Container Documents
- The operation of a hosted server system may involve a number of tasks and units as described in the attached patent application. For background, a brief description of units that may be used to serve the container document is provided relative to
FIG. 1( c). There, a hostedserver system 10 includes a plurality of units which may include acontainer server 12, amodule server 14, aspecification server 16, aback end server 18, ananalysis unit 28, amodule creation server 32, asyndication server 34, anadvertisement server 36, ageocode server 37 and/or amap server 39. - Other systems connected to network 26 may comprise one or
more user systems 22, one or moreremote source systems 24, one or moremodule developer systems 30, one or more content providers, and one or moresyndication recipient servers 38. In addition, one ormore database systems 20 may operate in conjunction with the various units of hostedserver system 10. - Container server 12 (e.g., a web server) may serve the container document to
user systems 22 overnetwork 26.Container server 12 may take data and/or instructions and may formulate a container for transmission over the network to theuser system 22. -
Module server 14 may provide data from modules tocontainer server 12 for incorporation into a container document. It should be appreciated that in one embodiment,container server 12 andmodule server 14 may comprise a single unit performing both functions.Module server 14 may provide data for the container document by interpreting and/or parsing instructions in the module specification associated with the module. According to one embodiment,module server 14 may serve the module content to the container document through the use of a browser IFRAME. An IFRAME may be generally understood to be an independently operated browser window instance inside the container document. One advantage of an IFRAME is that is protects the container document from the IFRAME's content and vice versa, e.g., JavaScript on the container document may not be permitted to access any JavaScript code in the inner IFRAME (same for CSS, DOM, or cookie objects). - Multiple Choices of Module Formats
- To expedite display of container documents, modules may be displayed inline within the container document. Inline display may be understood as referring to display with other document elements. One example is a display generated from code for HTML in the body according to HTML standards. In one embodiment,
module server 14 or some other component may determine whether the module is deemed trusted prior to including it in the container document inline due to the risks of various security issues an inline module could create. According to one embodiment, the module may incorporate an indicia of approval (e.g., digital certificate) issued by the container module or an entity associated with the container module as described in detail below. If the indocile of approval is present,module server 14 may render the data from a module for inline presentation in the container document. -
Specification server 16 provides the module specification file tomodule server 14. The module specification may be cached and stored in a database accessible to themodule server 14 and/orspecification server 16 or may be retrieved from a location associated with the specification as detailed later. For example,specification server 16 may reside on aremote source system 24. In addition,specification server 16 may be connected to module server over a network with the module specification located at another location on the network accessible tospecification server 16. -
Backend server 18 may be provided for interacting with one or more databases (e.g., large or dynamic databases of information). For example, for a news module that obtains frequent updates and demands a flow of data, (e.g., from an RSS feed),backend server 18 may format the data into HTML for the container. - In one specific example, a person may create a module (e.g., a maps module), such as one that uses an application program interface (API) to an existing mapping program to create a module to display a map of downtown Mountain View, Calif. The module may comprise an XML specification file or module specification file stored on a specification server. The specification server may comprise any server, including one on the site from which the container page is hosted or any other site. The user or another person may then include this new module on a personalized homepage (container document). The server that serves the container document may operate as the module server and the server that generates the mapping data through an inquiry from its API may be considered to be the backend server.
- According to one embodiment of the present invention,
analysis unit 28 may analyze modules at various times (e.g., when the module is first selected by a user, each time the module is called by a container for inclusion or at any other time determined to be advantageous for safety and security and other times).Analysis unit 28 may perform a number of actions, including comparing the module with a list of disapproved or dangerous modules or a list of approved modules. The comparison may involve exact or substring (e.g., prefixes, suffixes and regular expressions) matching by name or location (e.g., URL), contents of the specification, contents of the location where the specification resides, or information that may be ascertainable about the module.Analysis unit 28 may take one or more actions in response to a determination that the module is disapproved or dangerous, including, for example, silently blocking the request, (i.e., providing a generic error), blocking the request with an error that explains the reason it was blocked or redirecting the request to a different module specification that has been determined to be safe and related to the disapproved module (e.g., another module that relates to maps, if the first one was a disapproved mapping site or a module that includes the keyword “basketball” if the disapproved module was a basketball module). For example, through redirection, the URL of the original module may be passed to the “safe” module. The safe module may then use a proxy server, as described below, to retrieve the original URL's content. Developers may then replace the error handler to fix small bugs in the original module to be able to display the content of the original module. In another embodiment,analysis unit 28 may parse the module content to determine whether it is safe, such as by compiling JavaScript or other scripts contained in the module to try to identify unsafe or undesired actions the module may perform. - One or
more content providers 31 may be provided.Content providers 31 may provide the content to be served in modules and/or may provide modules to be served to end users. Examples of a content provider include but are not limited to a provider of a module, a news feed, a source of traffic information, a source of financial information, a source of entertainment information. - One or more
module creation servers 32 may be provided. This server may operate as a “wizard” to enable module creators to create a module through an interactive process controlled bymodule creation server 32. For example,module creation server 32 may provide a series of user interfaces that enable the module creator to provide inputs that are then used by the module creator to automatically generate a module specification. For example, various module specification templates may be provided with corresponding inputs.Module creation server 32 may then take inputs supplied by a module creator, insert them into the template and then generate the module specification for the module. A preview, testing and debugging function may also be offered as part of this “wizard.” This web tool and/or downloadable application may be downloadable as well so it may be installed and operated at any node on the network. In various embodiments of the invention, the module creator may be a representative associated with a user group. Also, the module creator may be an example of a content provider. - A
syndication server 34 may prepare data for transmission to one or moresyndication recipient servers 38 related to modules.Syndication server 34 may receive a request for a module and/or module content and deliver that module or content to asyndication recipient server 38 overnetwork 26.Syndication server 34 may reside at hostedserver system 10 or at another location on the network. For example, if an operator of a sports web site (an example of a syndication recipient system 38) desired to include a maps module created by aremote source system 24, it may do so through a request tosyndication server 34.Syndication server 34 may then cooperate withmodule server 14 to generate data for the container document (here the sports web site page of the syndication recipient system 38). That may involve retrieving the module specification fromremote source system 24, supplying preferences received from the syndication recipient server 38 (e.g., city information for the sports team of a page being displayed) and/or generating data for the container. It is also possible that the data may be rendered atsyndication recipient server 38 into its container document in either an IFRAME or inline.Syndication server 34 may thus syndicate modules accessible to it. It may do so based on requests for specific modules or other criteria it determines (e.g., content matches, keyword matches, monetary values associated with modules and/or syndication requestors, etc.) -
Ad server 36 may provide advertisements associated with modules to containers. For example, an advertisement may be incorporated with module data when data is delivered to a container document.Ad server 36 may operate withsyndication server 34 to deliver advertisements tosyndication recipient servers 38 based on a syndication request for a module. The advertisements may be selected byad server 36 based on a wide variety of criteria, including, but not limited to, the relationship between the content of or information about the container, module, other modules in the container, syndication recipient server information, monetary elements/relationships related to any of the foregoing and/or combinations thereof.Ad server 36 may comprise the Google AdSense system, according to one embodiment of the present invention.Ad server 36 may operate as described in one or more of the following patent applications. - A
geocode server 37 may be provided to generate geocode information from location descriptions as is known in the art. Ageocode server 37 may generate latitude and longitude numeric values from geographic locations. - A
map server 39 may generate map output. Mapping systems, such as Google Maps and Google Earth, may be used to generate this data. - One or
more database systems 20 may be provided that store, in any number of ways, container information, module specifications and/or related information, formatting data, per-user and per-module preference data, remote module ID data, remote module location reference data, advertisement data, advertiser data, content/monetary data, syndication recipient data, templates for modules, inputs for modules, lists of trusted and untrusted modules, approval criteria and related information and/or any other information used by the modules to operate as described herein. While a single database structure is shown fordatabase system 20, it is well understood that the data may be stored at a number of locations and in one or more systems. - In addition, what is shown as
user system 22 may also operate as aremote source system 24 and/or amodule developer system 30. In other words, one computer system may operate in different capacities: as a user system, as a remote source system, as a syndication server, as a target content server, and/or a module developer system. In addition, as explained in greater detail below, each of the modules depicted within hostedserver system 10 may also be disposed at auser system 22, aremote source system 24, or amodule developer system 30. Similarly,databases 20 may be associated with each of the modules depicted withinFIG. 1( c) depending upon the configuration desired. - The present disclosure is not to be limited in scope by the specific embodiments described herein. Indeed, other various embodiments of and modifications to the present disclosure, in addition to those described herein, will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus, such other embodiments and modifications are intended to fall within the scope of the present disclosure. Further, although the present disclosure has been described herein in the context of a particular implementation in a particular environment for a particular purpose, those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present disclosure may be beneficially implemented in any number of environments for any number of purposes. Accordingly, the claims set forth below should be construed in view of the full breadth and spirit of the present disclosure as described herein.
Claims (39)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/468,350 US9754040B2 (en) | 2006-08-07 | 2012-05-10 | Configuring a content document for users and user groups |
US15/694,133 US20180089208A1 (en) | 2006-08-07 | 2017-09-01 | Configuring a content document for users and use groups |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US83586106P | 2006-08-07 | 2006-08-07 | |
US86360006P | 2006-10-31 | 2006-10-31 | |
US11/756,852 US8185830B2 (en) | 2006-08-07 | 2007-06-01 | Configuring a content document for users and user groups |
US13/468,350 US9754040B2 (en) | 2006-08-07 | 2012-05-10 | Configuring a content document for users and user groups |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/756,852 Continuation US8185830B2 (en) | 2006-08-07 | 2007-06-01 | Configuring a content document for users and user groups |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/694,133 Continuation US20180089208A1 (en) | 2006-08-07 | 2017-09-01 | Configuring a content document for users and use groups |
Publications (2)
Publication Number | Publication Date |
---|---|
US20120222128A1 true US20120222128A1 (en) | 2012-08-30 |
US9754040B2 US9754040B2 (en) | 2017-09-05 |
Family
ID=39030791
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/756,852 Active 2029-06-14 US8185830B2 (en) | 2006-08-07 | 2007-06-01 | Configuring a content document for users and user groups |
US13/468,350 Active 2029-11-03 US9754040B2 (en) | 2006-08-07 | 2012-05-10 | Configuring a content document for users and user groups |
US15/694,133 Abandoned US20180089208A1 (en) | 2006-08-07 | 2017-09-01 | Configuring a content document for users and use groups |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/756,852 Active 2029-06-14 US8185830B2 (en) | 2006-08-07 | 2007-06-01 | Configuring a content document for users and user groups |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/694,133 Abandoned US20180089208A1 (en) | 2006-08-07 | 2017-09-01 | Configuring a content document for users and use groups |
Country Status (2)
Country | Link |
---|---|
US (3) | US8185830B2 (en) |
WO (1) | WO2008021060A2 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8832151B2 (en) | 2006-08-07 | 2014-09-09 | Google Inc. | Distribution of content document to varying users with security, customization and scalability |
US8918713B2 (en) | 2005-12-12 | 2014-12-23 | Google Inc. | Module specification for a module to be incorporated into a container document |
US8954861B1 (en) | 2006-08-07 | 2015-02-10 | Google Inc. | Administrator configurable gadget directory for personalized start pages |
US20210312009A1 (en) * | 2020-04-02 | 2021-10-07 | Xchange Mall, Inc. | Content aggregation and data streaming through unified application functionalities |
Families Citing this family (117)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7904595B2 (en) | 2001-01-18 | 2011-03-08 | Sdl International America Incorporated | Globalization management system and method therefor |
US20100100442A1 (en) * | 2003-12-03 | 2010-04-22 | Cbs Interactive, Inc. | Methods and Systems for Programmably Generating Electronic Aggregate Creatives for Display on an Electronic Network |
US20070136201A1 (en) * | 2005-12-12 | 2007-06-14 | Google Inc. | Customized container document modules using preferences |
US20090006996A1 (en) * | 2006-08-07 | 2009-01-01 | Shoumen Saha | Updating Content Within A Container Document For User Groups |
US8185830B2 (en) | 2006-08-07 | 2012-05-22 | Google Inc. | Configuring a content document for users and user groups |
US9058608B2 (en) | 2007-09-12 | 2015-06-16 | Google Inc. | Placement attribute targeting |
EP2304584A4 (en) * | 2008-05-13 | 2011-11-09 | Cyandia Inc | Apparatus and methods for interacting with multiple information forms across multiple types of computing devices |
CN101662460B (en) | 2008-08-25 | 2015-07-15 | 阿里巴巴集团控股有限公司 | Method, system and device for cross-domain communication |
US8793398B2 (en) * | 2008-08-29 | 2014-07-29 | Red Hat, Inc. | Facilitating client server interaction |
US8793339B2 (en) * | 2008-08-29 | 2014-07-29 | Red Hat, Inc. | Facilitating client server interaction |
US8112470B2 (en) | 2008-09-09 | 2012-02-07 | Microsoft Corporation | Virtual javascript object notation |
US8407212B2 (en) * | 2009-05-20 | 2013-03-26 | Genieo Innovation Ltd. | System and method for generation of a customized web page based on user identifiers |
US9390188B2 (en) * | 2010-04-12 | 2016-07-12 | Flow Search Corp. | Methods and devices for information exchange and routing |
US8904277B2 (en) | 2010-08-31 | 2014-12-02 | Cbs Interactive Inc. | Platform for serving online content |
US9558289B2 (en) * | 2010-09-30 | 2017-01-31 | Microsoft Technology Licensing, Llc | Securely rendering online ads in a host page |
US20130227394A1 (en) * | 2010-10-10 | 2013-08-29 | Victor Sazhin Group Ltd. | Method, system and computer program product for replacing banners with widgets |
US8819726B2 (en) | 2010-10-14 | 2014-08-26 | Cyandia, Inc. | Methods, apparatus, and systems for presenting television programming and related information |
US9342665B2 (en) * | 2011-01-07 | 2016-05-17 | D2L Corporation | Systems, methods, and apparatus for facilitating client-side digital rights compliance |
US10657540B2 (en) | 2011-01-29 | 2020-05-19 | Sdl Netherlands B.V. | Systems, methods, and media for web content management |
US9547626B2 (en) | 2011-01-29 | 2017-01-17 | Sdl Plc | Systems, methods, and media for managing ambient adaptability of web applications and web services |
US10580015B2 (en) | 2011-02-25 | 2020-03-03 | Sdl Netherlands B.V. | Systems, methods, and media for executing and optimizing online marketing initiatives |
US20120278743A1 (en) * | 2011-04-29 | 2012-11-01 | Microsoft Corporation | Common interface for multiple network services |
US9015577B2 (en) * | 2011-05-06 | 2015-04-21 | Microsoft Technology Licensing, Llc | Content flow through containers |
US9015601B2 (en) | 2011-06-21 | 2015-04-21 | Box, Inc. | Batch uploading of content to a web-based collaboration environment |
US9978040B2 (en) | 2011-07-08 | 2018-05-22 | Box, Inc. | Collaboration sessions in a workspace on a cloud-based content management system |
WO2013009337A2 (en) | 2011-07-08 | 2013-01-17 | Arnold Goldberg | Desktop application for access and interaction with workspaces in a cloud-based content management system and synchronization mechanisms thereof |
US9197718B2 (en) * | 2011-09-23 | 2015-11-24 | Box, Inc. | Central management and control of user-contributed content in a web-based collaboration environment and management console thereof |
US20130091266A1 (en) | 2011-10-05 | 2013-04-11 | Ajit Bhave | System for organizing and fast searching of massive amounts of data |
US8515902B2 (en) | 2011-10-14 | 2013-08-20 | Box, Inc. | Automatic and semi-automatic tagging features of work items in a shared workspace for metadata tracking in a cloud-based content management system with selective or optional user contribution |
US9098474B2 (en) | 2011-10-26 | 2015-08-04 | Box, Inc. | Preview pre-generation based on heuristics and algorithmic prediction/assessment of predicted user behavior for enhancement of user experience |
US8990307B2 (en) | 2011-11-16 | 2015-03-24 | Box, Inc. | Resource effective incremental updating of a remote client with events which occurred via a cloud-enabled platform |
GB2500152A (en) | 2011-11-29 | 2013-09-11 | Box Inc | Mobile platform file and folder selection functionalities for offline access and synchronization |
US9019123B2 (en) | 2011-12-22 | 2015-04-28 | Box, Inc. | Health check services for web-based collaboration environments |
US9904435B2 (en) | 2012-01-06 | 2018-02-27 | Box, Inc. | System and method for actionable event generation for task delegation and management via a discussion forum in a web-based collaboration environment |
US11232481B2 (en) | 2012-01-30 | 2022-01-25 | Box, Inc. | Extended applications of multimedia content previews in the cloud-based content management system |
US9965745B2 (en) | 2012-02-24 | 2018-05-08 | Box, Inc. | System and method for promoting enterprise adoption of a web-based collaboration environment |
US9195636B2 (en) | 2012-03-07 | 2015-11-24 | Box, Inc. | Universal file type preview for mobile devices |
US9430449B2 (en) * | 2012-03-30 | 2016-08-30 | Sdl Plc | Systems, methods, and media for managing editable previews of webpages |
US9054919B2 (en) | 2012-04-05 | 2015-06-09 | Box, Inc. | Device pinning capability for enterprise cloud service and storage accounts |
US9575981B2 (en) | 2012-04-11 | 2017-02-21 | Box, Inc. | Cloud service enabled to handle a set of files depicted to a user as a single file in a native operating system |
US9413587B2 (en) | 2012-05-02 | 2016-08-09 | Box, Inc. | System and method for a third-party application to access content within a cloud-based platform |
GB2514947B (en) | 2012-05-04 | 2015-06-17 | Box Inc | Repository redundancy implementation of a system which incrementally updates clients with events that occured via a cloud-enabled platform |
US9773270B2 (en) | 2012-05-11 | 2017-09-26 | Fredhopper B.V. | Method and system for recommending products based on a ranking cocktail |
US9691051B2 (en) | 2012-05-21 | 2017-06-27 | Box, Inc. | Security enhancement through application access control |
US8914900B2 (en) | 2012-05-23 | 2014-12-16 | Box, Inc. | Methods, architectures and security mechanisms for a third-party application to access content in a cloud-based platform |
US9027108B2 (en) | 2012-05-23 | 2015-05-05 | Box, Inc. | Systems and methods for secure file portability between mobile applications on a mobile device |
US9021099B2 (en) | 2012-07-03 | 2015-04-28 | Box, Inc. | Load balancing secure FTP connections among multiple FTP servers |
US9792320B2 (en) | 2012-07-06 | 2017-10-17 | Box, Inc. | System and method for performing shard migration to support functions of a cloud-based service |
US9712510B2 (en) | 2012-07-06 | 2017-07-18 | Box, Inc. | Systems and methods for securely submitting comments among users via external messaging applications in a cloud-based platform |
GB2505072A (en) | 2012-07-06 | 2014-02-19 | Box Inc | Identifying users and collaborators as search results in a cloud-based system |
US9237170B2 (en) | 2012-07-19 | 2016-01-12 | Box, Inc. | Data loss prevention (DLP) methods and architectures by a cloud service |
US8868574B2 (en) | 2012-07-30 | 2014-10-21 | Box, Inc. | System and method for advanced search and filtering mechanisms for enterprise administrators in a cloud-based environment |
US9794256B2 (en) | 2012-07-30 | 2017-10-17 | Box, Inc. | System and method for advanced control tools for administrators in a cloud-based service |
US9369520B2 (en) | 2012-08-19 | 2016-06-14 | Box, Inc. | Enhancement of upload and/or download performance based on client and/or server feedback information |
US8745267B2 (en) | 2012-08-19 | 2014-06-03 | Box, Inc. | Enhancement of upload and/or download performance based on client and/or server feedback information |
GB2513671A (en) | 2012-08-27 | 2014-11-05 | Box Inc | Server side techniques for reducing database workload in implementing selective subfolder synchronization in a cloud-based environment |
US9135462B2 (en) | 2012-08-29 | 2015-09-15 | Box, Inc. | Upload and download streaming encryption to/from a cloud-based platform |
US9117087B2 (en) | 2012-09-06 | 2015-08-25 | Box, Inc. | System and method for creating a secure channel for inter-application communication based on intents |
US9311071B2 (en) | 2012-09-06 | 2016-04-12 | Box, Inc. | Force upgrade of a mobile application via a server side configuration file |
US9195519B2 (en) | 2012-09-06 | 2015-11-24 | Box, Inc. | Disabling the self-referential appearance of a mobile application in an intent via a background registration |
US11308528B2 (en) | 2012-09-14 | 2022-04-19 | Sdl Netherlands B.V. | Blueprinting of multimedia assets |
US10452740B2 (en) | 2012-09-14 | 2019-10-22 | Sdl Netherlands B.V. | External content libraries |
US11386186B2 (en) | 2012-09-14 | 2022-07-12 | Sdl Netherlands B.V. | External content library connector systems and methods |
US9292833B2 (en) | 2012-09-14 | 2016-03-22 | Box, Inc. | Batching notifications of activities that occur in a web-based collaboration environment |
US10200256B2 (en) | 2012-09-17 | 2019-02-05 | Box, Inc. | System and method of a manipulative handle in an interactive mobile user interface |
US9553758B2 (en) | 2012-09-18 | 2017-01-24 | Box, Inc. | Sandboxing individual applications to specific user folders in a cloud-based service |
US10915492B2 (en) | 2012-09-19 | 2021-02-09 | Box, Inc. | Cloud-based platform enabled with media content indexed for text-based searches and/or metadata extraction |
US9959420B2 (en) | 2012-10-02 | 2018-05-01 | Box, Inc. | System and method for enhanced security and management mechanisms for enterprise administrators in a cloud-based environment |
US9705967B2 (en) | 2012-10-04 | 2017-07-11 | Box, Inc. | Corporate user discovery and identification of recommended collaborators in a cloud platform |
US9495364B2 (en) | 2012-10-04 | 2016-11-15 | Box, Inc. | Enhanced quick search features, low-barrier commenting/interactive features in a collaboration platform |
US9665349B2 (en) | 2012-10-05 | 2017-05-30 | Box, Inc. | System and method for generating embeddable widgets which enable access to a cloud-based collaboration platform |
GB2507191B (en) | 2012-10-17 | 2015-03-04 | Box Inc | Remote key management in a cloud-based environment |
US9756022B2 (en) | 2014-08-29 | 2017-09-05 | Box, Inc. | Enhanced remote key management for an enterprise in a cloud-based environment |
US10235383B2 (en) | 2012-12-19 | 2019-03-19 | Box, Inc. | Method and apparatus for synchronization of items with read-only permissions in a cloud-based environment |
US9396245B2 (en) | 2013-01-02 | 2016-07-19 | Box, Inc. | Race condition handling in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
US20150237400A1 (en) * | 2013-01-05 | 2015-08-20 | Benedict Ow | Secured file distribution system and method |
US9953036B2 (en) | 2013-01-09 | 2018-04-24 | Box, Inc. | File system monitoring in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
EP2755151A3 (en) | 2013-01-11 | 2014-09-24 | Box, Inc. | Functionalities, features and user interface of a synchronization client to a cloud-based environment |
EP2757491A1 (en) | 2013-01-17 | 2014-07-23 | Box, Inc. | Conflict resolution, retry condition management, and handling of problem files for the synchronization client to a cloud-based platform |
US9158534B2 (en) | 2013-03-15 | 2015-10-13 | Wolters Kluwer United States Inc. | Smart endpoint architecture |
US10725968B2 (en) | 2013-05-10 | 2020-07-28 | Box, Inc. | Top down delete or unsynchronization on delete of and depiction of item synchronization with a synchronization client to a cloud-based platform |
US10846074B2 (en) | 2013-05-10 | 2020-11-24 | Box, Inc. | Identification and handling of items to be ignored for synchronization with a cloud-based platform by a synchronization client |
GB2515192B (en) | 2013-06-13 | 2016-12-14 | Box Inc | Systems and methods for synchronization event building and/or collapsing by a synchronization component of a cloud-based platform |
US9805050B2 (en) | 2013-06-21 | 2017-10-31 | Box, Inc. | Maintaining and updating file system shadows on a local device by a synchronization client of a cloud-based platform |
US10110656B2 (en) | 2013-06-25 | 2018-10-23 | Box, Inc. | Systems and methods for providing shell communication in a cloud-based platform |
US10229134B2 (en) | 2013-06-25 | 2019-03-12 | Box, Inc. | Systems and methods for managing upgrades, migration of user data and improving performance of a cloud-based platform |
US9330066B2 (en) * | 2013-06-25 | 2016-05-03 | Konica Minolta Laboratory U.S.A., Inc. | Dynamic display method of multi-layered PDF documents |
US9535924B2 (en) | 2013-07-30 | 2017-01-03 | Box, Inc. | Scalability improvement in a system which incrementally updates clients with events that occurred in a cloud-based collaboration platform |
US10509527B2 (en) | 2013-09-13 | 2019-12-17 | Box, Inc. | Systems and methods for configuring event-based automation in cloud-based collaboration platforms |
US9535909B2 (en) | 2013-09-13 | 2017-01-03 | Box, Inc. | Configurable event-based automation architecture for cloud-based collaboration platforms |
US9704137B2 (en) | 2013-09-13 | 2017-07-11 | Box, Inc. | Simultaneous editing/accessing of content by collaborator invitation through a web-based or mobile application to a cloud-based collaboration platform |
GB2518298A (en) | 2013-09-13 | 2015-03-18 | Box Inc | High-availability architecture for a cloud-based concurrent-access collaboration platform |
US9213684B2 (en) | 2013-09-13 | 2015-12-15 | Box, Inc. | System and method for rendering document in web browser or mobile device regardless of third-party plug-in software |
US8892679B1 (en) | 2013-09-13 | 2014-11-18 | Box, Inc. | Mobile device, methods and user interfaces thereof in a mobile device platform featuring multifunctional access and engagement in a collaborative environment provided by a cloud-based platform |
US10866931B2 (en) | 2013-10-22 | 2020-12-15 | Box, Inc. | Desktop application for accessing a cloud collaboration platform |
US9286274B2 (en) * | 2014-01-28 | 2016-03-15 | Moboom Ltd. | Adaptive content management |
US10530854B2 (en) | 2014-05-30 | 2020-01-07 | Box, Inc. | Synchronization of permissioned content in cloud-based environments |
US9602514B2 (en) | 2014-06-16 | 2017-03-21 | Box, Inc. | Enterprise mobility management and verification of a managed application by a content provider |
US9894119B2 (en) | 2014-08-29 | 2018-02-13 | Box, Inc. | Configurable metadata-based automation and content classification architecture for cloud-based collaboration platforms |
US10038731B2 (en) | 2014-08-29 | 2018-07-31 | Box, Inc. | Managing flow-based interactions with cloud-based shared content |
US10574442B2 (en) | 2014-08-29 | 2020-02-25 | Box, Inc. | Enhanced remote key management for an enterprise in a cloud-based environment |
US20160188545A1 (en) * | 2014-12-30 | 2016-06-30 | Domenic Santangelo | Reusable content units |
US20160292077A1 (en) * | 2015-03-30 | 2016-10-06 | Ca, Inc. | Low-latency lossy processing of machine data |
US10742627B2 (en) * | 2015-04-22 | 2020-08-11 | DatingSphere Inc. | System and method for dynamic network data validation |
US10089120B2 (en) * | 2015-09-25 | 2018-10-02 | Entit Software Llc | Widgets in digital dashboards |
US10614167B2 (en) | 2015-10-30 | 2020-04-07 | Sdl Plc | Translation review workflow systems and methods |
CN106888233B (en) * | 2015-12-15 | 2019-12-24 | 北京新媒传信科技有限公司 | Data updating system and method |
US11174288B2 (en) | 2016-12-06 | 2021-11-16 | Northeastern University | Heparin-binding cationic peptide self-assembling peptide amphiphiles useful against drug-resistant bacteria |
US10142454B2 (en) | 2017-02-24 | 2018-11-27 | Motorola Solutions, Inc. | Method for providing a customized user interface for group communication at a communication device |
US10437917B2 (en) * | 2017-04-28 | 2019-10-08 | Microsoft Technology Licensing, Llc | Web page nonintrusive content protection on user device |
US10872062B2 (en) * | 2017-10-27 | 2020-12-22 | Dropbox, Inc. | Moderated collaborative editing in collaborative content items |
US11599369B1 (en) * | 2018-03-08 | 2023-03-07 | Palantir Technologies Inc. | Graphical user interface configuration system |
CN108984786A (en) * | 2018-07-28 | 2018-12-11 | 阔地教育科技有限公司 | Data-updating method and system based on Education Resource Gateway |
US10922372B1 (en) | 2020-03-17 | 2021-02-16 | Capital One Services, Llc | Methods and systems for generating custom content using universal deep linking across web and mobile applications |
US11106754B1 (en) * | 2020-03-17 | 2021-08-31 | Capital One Services, Llc | Methods and systems for hyperlinking user-specific content on a website or mobile applications |
US20240104608A1 (en) * | 2022-09-23 | 2024-03-28 | Apple Inc. | Techniques for syndicating customizable content to recipient entities |
WO2024063854A1 (en) * | 2022-09-23 | 2024-03-28 | Apple Inc. | Techniques for syndicating customizable content to recipient entities |
Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5991807A (en) * | 1996-06-24 | 1999-11-23 | Nortel Networks Corporation | System for controlling users access to a distributive network in accordance with constraints present in common access distributive network interface separate from a server |
US6205476B1 (en) * | 1998-05-05 | 2001-03-20 | International Business Machines Corporation | Client—server system with central application management allowing an administrator to configure end user applications by executing them in the context of users and groups |
US20020083073A1 (en) * | 2000-12-22 | 2002-06-27 | Vaidya Neelam N. | Managing a layered hierarchical data set |
US20020147746A1 (en) * | 2000-12-22 | 2002-10-10 | Lee Michele C. | Delivering output XML with dynamically selectable processing |
US20020161667A1 (en) * | 2001-01-23 | 2002-10-31 | Felkey Mark A. | Method and system for procuring telecommunications services on-line |
US20030005297A1 (en) * | 2001-06-29 | 2003-01-02 | International Business Machines Corporation | Method and system to integrate existing user and group definitions in a database server with heterogeneous application servers |
US20030050986A1 (en) * | 2001-09-13 | 2003-03-13 | Matthews Charles R. | System and method for community interfaces |
US20030069868A1 (en) * | 2001-06-29 | 2003-04-10 | Vos Jules Jakob | Distributed decision processing system |
US20030115292A1 (en) * | 2001-10-24 | 2003-06-19 | Griffin Philip B. | System and method for delegated administration |
US6609123B1 (en) * | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US20040054569A1 (en) * | 2002-07-31 | 2004-03-18 | Alvaro Pombo | Contextual computing system |
US20040098275A1 (en) * | 2002-11-15 | 2004-05-20 | Pauline Hubert | System and method for providing targeted discussion group meeting information and related items for sale |
US20050015710A1 (en) * | 2003-07-18 | 2005-01-20 | Williams Lori Beth | Family website system |
US20050159970A1 (en) * | 2004-01-21 | 2005-07-21 | Orkut Buyukkokten | Methods and systems for the display and navigation of a social network |
US20060117016A1 (en) * | 2004-10-21 | 2006-06-01 | International Business Machines Corporation | Method and apparatus for efficient electronic document management |
US20060174277A1 (en) * | 2004-03-04 | 2006-08-03 | Sezan M I | Networked video devices |
US20070002057A1 (en) * | 2004-10-12 | 2007-01-04 | Matt Danzig | Computer-implemented system and method for home page customization and e-commerce support |
US20070282877A1 (en) * | 2006-05-31 | 2007-12-06 | Red. Hat, Inc. | Open overlay for social networks and online services |
US7330967B1 (en) * | 2004-12-03 | 2008-02-12 | Symantec Operating Corporation | System and method for injecting drivers and setup information into pre-created images for image-based provisioning |
Family Cites Families (209)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5179657A (en) | 1988-03-17 | 1993-01-12 | International Business Machines Corporation | Panel definition language for computer display |
JP3181592B2 (en) * | 1992-12-01 | 2001-07-03 | マイクロソフト コーポレイション | Method and system for in-place interaction with embedded objects |
US5812862A (en) * | 1993-05-10 | 1998-09-22 | Apple Computer, Inc. | Computer-human interface system for compound documents |
AU6826794A (en) * | 1993-05-10 | 1994-12-12 | Apple Computer, Inc. | Computer-human interface system which manipulates parts between a desktop and a document |
US5537526A (en) * | 1993-11-12 | 1996-07-16 | Taugent, Inc. | Method and apparatus for processing a display document utilizing a system level document framework |
US5470233A (en) * | 1994-03-17 | 1995-11-28 | Arkenstone, Inc. | System and method for tracking a pedestrian |
US5636346A (en) | 1994-05-09 | 1997-06-03 | The Electronic Address, Inc. | Method and system for selectively targeting advertisements and programming |
DE4427351C1 (en) * | 1994-08-02 | 1996-03-28 | Siemens Ag | Signal processing method and arrangement for block coded speech signals of a message system |
US5724521A (en) | 1994-11-03 | 1998-03-03 | Intel Corporation | Method and apparatus for providing electronic advertisements to end users in a consumer best-fit pricing manner |
US5682468A (en) * | 1995-01-23 | 1997-10-28 | Intergraph Corporation | OLE for design and modeling |
SE504085C2 (en) | 1995-02-01 | 1996-11-04 | Greg Benson | Methods and systems for managing data objects in accordance with predetermined conditions for users |
US5845265A (en) | 1995-04-26 | 1998-12-01 | Mercexchange, L.L.C. | Consignment nodes |
US6026368A (en) | 1995-07-17 | 2000-02-15 | 24/7 Media, Inc. | On-line interactive system and method for providing content and advertising information to a targeted set of viewers |
US5640579A (en) * | 1995-07-24 | 1997-06-17 | Microsoft Corporation | Method and system for logically partitioning a view of a document object from a frame in which the document object is displayed |
US20040019610A1 (en) * | 1996-02-27 | 2004-01-29 | Burns Kevin S. | Portal information delivery system for personal computers and SOHO computer systems |
US5920854A (en) | 1996-08-14 | 1999-07-06 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US20040139049A1 (en) | 1996-08-22 | 2004-07-15 | Wgrs Licensing Company, Llc | Unified geographic database and method of creating, maintaining and using the same |
US6185427B1 (en) * | 1996-09-06 | 2001-02-06 | Snaptrack, Inc. | Distributed satellite position system processing and application network |
US5905492A (en) | 1996-12-06 | 1999-05-18 | Microsoft Corporation | Dynamically updating themes for an operating system shell |
US5931901A (en) | 1996-12-09 | 1999-08-03 | Robert L. Wolfe | Programmed music on demand from the internet |
US6285987B1 (en) | 1997-01-22 | 2001-09-04 | Engage, Inc. | Internet advertising system |
AU729891B2 (en) | 1997-02-07 | 2001-02-15 | About.Com Inc. | Collaborative internet data mining system |
US6750881B1 (en) * | 1997-02-24 | 2004-06-15 | America Online, Inc. | User definable on-line co-user lists |
US6247009B1 (en) | 1997-03-10 | 2001-06-12 | Canon Kabushiki Kaisha | Image processing with searching of image data |
US6223163B1 (en) | 1997-03-21 | 2001-04-24 | Walker Digital, Llc | Method and apparatus for controlling offers that are provided at a point-of-sale terminal |
US5974398A (en) | 1997-04-11 | 1999-10-26 | At&T Corp. | Method and apparatus enabling valuation of user access of advertising carried by interactive information and entertainment services |
US6061659A (en) | 1997-06-03 | 2000-05-09 | Digital Marketing Communications, Inc. | System and method for integrating a message into a graphical environment |
US6384849B1 (en) | 1997-07-14 | 2002-05-07 | Microsoft Corporation | Method for displaying controls in a system using a graphical user interface |
US6253189B1 (en) | 1997-09-15 | 2001-06-26 | At&T Corp. | System and method for completing advertising time slot transactions |
US6134552A (en) | 1997-10-07 | 2000-10-17 | Sap Aktiengesellschaft | Knowledge provider with logical hyperlinks |
US6009442A (en) | 1997-10-08 | 1999-12-28 | Caere Corporation | Computer-based document management system |
US6067570A (en) | 1997-10-20 | 2000-05-23 | The Delfin Project, Inc. | Method and system for displaying and interacting with an informational message based on an information processing system event |
US7257604B1 (en) * | 1997-11-17 | 2007-08-14 | Wolfe Mark A | System and method for communicating information relating to a network resource |
US6610105B1 (en) * | 1997-12-09 | 2003-08-26 | Openwave Systems Inc. | Method and system for providing resource access in a mobile environment |
US6526426B1 (en) * | 1998-02-23 | 2003-02-25 | David Lakritz | Translation management system |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US6044375A (en) | 1998-04-30 | 2000-03-28 | Hewlett-Packard Company | Automatic extraction of metadata using a neural network |
US6473800B1 (en) | 1998-07-15 | 2002-10-29 | Microsoft Corporation | Declarative permission requests in a computer system |
US7110984B1 (en) | 1998-08-13 | 2006-09-19 | International Business Machines Corporation | Updating usage conditions in lieu of download digital rights management protected content |
US6493749B2 (en) * | 1998-08-17 | 2002-12-10 | International Business Machines Corporation | System and method for an administration server |
US6397231B1 (en) | 1998-08-31 | 2002-05-28 | Xerox Corporation | Virtual documents generated via combined documents or portions of documents retrieved from data repositories |
US6078866A (en) | 1998-09-14 | 2000-06-20 | Searchup, Inc. | Internet site searching and listing service based on monetary ranking of site listings |
US6324519B1 (en) | 1999-03-12 | 2001-11-27 | Expanse Networks, Inc. | Advertisement auction system |
US6298348B1 (en) | 1998-12-03 | 2001-10-02 | Expanse Networks, Inc. | Consumer profiling system |
US8069407B1 (en) | 1998-12-08 | 2011-11-29 | Yodlee.Com, Inc. | Method and apparatus for detecting changes in websites and reporting results to web developers for navigation template repair purposes |
US6813640B1 (en) | 1998-12-08 | 2004-11-02 | Macrovision Corporation | System and method for controlling the editing by user action of digital objects created in a document server application |
US6396515B1 (en) * | 1998-12-15 | 2002-05-28 | International Business Machines Corporation | Method, system and computer program product for dynamic language switching in user interface menus, help text, and dialogs |
EP1159684A1 (en) | 1998-12-18 | 2001-12-05 | Flycast Communications Corp. | Optimized internet advertising using history to select sites |
US11109114B2 (en) | 2001-04-18 | 2021-08-31 | Grass Valley Canada | Advertisement management method, system, and computer program product |
US6681371B1 (en) * | 1998-12-21 | 2004-01-20 | At&T Corp. | System and method for using container documents as multi-user domain clients |
US6430688B1 (en) * | 1998-12-22 | 2002-08-06 | International Business Machines Corporation | Architecture for web-based on-line-off-line digital certificate authority |
JP3396177B2 (en) | 1999-01-26 | 2003-04-14 | インターナショナル・ビジネス・マシーンズ・コーポレーション | Web page customization system |
US6985882B1 (en) | 1999-02-05 | 2006-01-10 | Directrep, Llc | Method and system for selling and purchasing media advertising over a distributed communication network |
US6269361B1 (en) | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
WO2000075840A2 (en) | 1999-06-08 | 2000-12-14 | Scientific Learning Corporation | Method for deducing level of interest in information structures via annotations |
US7908602B2 (en) | 1999-06-30 | 2011-03-15 | Blackboard Inc. | Internet-based education support system, method and medium providing security attributes in modular, extensible components |
US7159192B2 (en) * | 1999-08-13 | 2007-01-02 | Hotbar.Com, Inc. | System and method for customizing electronic messages |
AU6229000A (en) | 1999-07-26 | 2001-02-13 | Iprivacy Llc | Electronic purchase of goods over a communication network including physical delivery while securing private and personal information |
US6976210B1 (en) * | 1999-08-31 | 2005-12-13 | Lucent Technologies Inc. | Method and apparatus for web-site-independent personalization from multiple sites having user-determined extraction functionality |
US7028264B2 (en) | 1999-10-29 | 2006-04-11 | Surfcast, Inc. | System and method for simultaneous display of multiple information sources |
US6697825B1 (en) | 1999-11-05 | 2004-02-24 | Decentrix Inc. | Method and apparatus for generating and modifying multiple instances of element of a web site |
AU2598001A (en) | 1999-12-22 | 2001-07-03 | Accenture Llp | A method for a graphical user interface search filter generator |
EP1117050A1 (en) | 2000-01-14 | 2001-07-18 | Sun Microsystems, Inc. | Individual data representation |
US6434747B1 (en) | 2000-01-19 | 2002-08-13 | Individual Network, Inc. | Method and system for providing a customized media list |
US8813123B2 (en) | 2000-01-19 | 2014-08-19 | Interad Technologies, Llc | Content with customized advertisement |
US20010047297A1 (en) | 2000-02-16 | 2001-11-29 | Albert Wen | Advertisement brokering with remote ad generation system and method in a distributed computer network |
US20020026359A1 (en) | 2000-02-22 | 2002-02-28 | Long Kenneth W. | Targeted advertising method and system |
US6865593B1 (en) | 2000-04-12 | 2005-03-08 | Webcollege, Inc. | Dynamic integration of web sites |
US6832263B2 (en) | 2000-04-27 | 2004-12-14 | Hyperion Solutions Corporation | Method and apparatus for implementing a dynamically updated portal page in an enterprise-wide computer system |
US20020046104A1 (en) | 2000-05-09 | 2002-04-18 | Geomicro, Inc. | Method and apparatus for generating targeted impressions to internet clients |
US20010051911A1 (en) | 2000-05-09 | 2001-12-13 | Marks Michael B. | Bidding method for internet/wireless advertising and priority ranking in search results |
US6327628B1 (en) | 2000-05-19 | 2001-12-04 | Epicentric, Inc. | Portal server that provides a customizable user Interface for access to computer networks |
US6912532B2 (en) * | 2000-05-22 | 2005-06-28 | Benjamin H. Andersen | Multi-level multiplexor system for networked browser |
AU2001263341A1 (en) * | 2000-05-22 | 2001-12-03 | Sap Portals Inc. | Snippet selection |
US20020165773A1 (en) | 2000-05-31 | 2002-11-07 | Takeshi Natsuno | Method and system for distributing advertisements over network |
US7496637B2 (en) | 2000-05-31 | 2009-02-24 | Oracle International Corp. | Web service syndication system |
US20020091736A1 (en) | 2000-06-23 | 2002-07-11 | Decis E-Direct, Inc. | Component models |
JP3514704B2 (en) * | 2000-06-28 | 2004-03-31 | 株式会社昭文社 | Map information distribution system, map information distribution method, server for distributing map information, and server for providing services |
US20020002509A1 (en) | 2000-06-30 | 2002-01-03 | Wagorn Paul E. | Custom advertising and trade facilitation system for internet or e-mail implementation |
JP2002015217A (en) | 2000-06-30 | 2002-01-18 | Fujitsu Ltd | Digital content advertisement display system using auction |
US20020031230A1 (en) | 2000-08-15 | 2002-03-14 | Sweet William B. | Method and apparatus for a web-based application service model for security management |
US7599851B2 (en) | 2000-09-05 | 2009-10-06 | Renee Frengut | Method for providing customized user interface and targeted marketing forum |
US7861174B2 (en) | 2000-09-08 | 2010-12-28 | Oracle International Corporation | Method and system for assembling concurrently-generated content |
US7624051B2 (en) | 2000-09-18 | 2009-11-24 | Icon One, Inc. | Method and system for forming a list-based value discovery network |
US7461024B2 (en) | 2000-09-27 | 2008-12-02 | Montgomery Rob R | Bidder-side auction dynamic pricing agent, system, method and computer program product |
US20020046245A1 (en) | 2000-09-29 | 2002-04-18 | Hillar Christopher J. | System and method for creating customized web pages |
US7054924B1 (en) * | 2000-09-29 | 2006-05-30 | Cisco Technology, Inc. | Method and apparatus for provisioning network devices using instructions in extensible markup language |
US7000107B2 (en) * | 2000-09-30 | 2006-02-14 | Microsoft Corporation | System and method for using dynamic web components to remotely control the security state of web pages |
US20020099605A1 (en) | 2000-10-06 | 2002-07-25 | Searchcactus, Llc | Search engine with demographic-based advertising |
AU2002251680A1 (en) | 2000-11-01 | 2002-08-19 | Real Media, Inc. | System and method for delivering plural advertisement information on a data network |
KR100398711B1 (en) * | 2000-11-08 | 2003-09-19 | 주식회사 와이즈엔진 | Content publication system for supporting real-time integration and processing of multimedia contents including dynamic data and method thereof |
US20020077891A1 (en) | 2000-12-15 | 2002-06-20 | Castle Daniel C. | Method and apparatus to maximize advertising revenue |
JP2002216017A (en) | 2001-01-22 | 2002-08-02 | Sony Corp | Auction method for advertisement frame and its device and recording medium |
US7739590B2 (en) * | 2001-03-01 | 2010-06-15 | Accenture Llp | Automatic generation of personal homepages for a sales force |
US8001118B2 (en) | 2001-03-02 | 2011-08-16 | Google Inc. | Methods and apparatus for employing usage statistics in document retrieval |
US20020152114A1 (en) * | 2001-04-12 | 2002-10-17 | Shumaker Lance C. | System and method for updating an intranet portal |
US20020194062A1 (en) | 2001-04-19 | 2002-12-19 | Leif Linde | Method and system for simulating the distribution of targeted advertising |
US7167903B2 (en) * | 2001-04-25 | 2007-01-23 | Teacherweb, Inc. | System and method for user updateable web sites and web pages |
JP2002358455A (en) | 2001-05-31 | 2002-12-13 | Matsushita Electric Ind Co Ltd | Advertisement information distributing apparatus and charging apparatus |
US7346667B2 (en) * | 2001-05-31 | 2008-03-18 | Ubs Ag | System for delivering dynamic content |
WO2002101587A1 (en) | 2001-06-06 | 2002-12-19 | Sony Corporation | Advertisement selection apparatus, advertisement selection method, and storage medium |
US20040054589A1 (en) | 2001-06-14 | 2004-03-18 | Nicholas Frank C. | Method and system for providing network based target advertising and encapsulation |
JP2003006085A (en) | 2001-06-20 | 2003-01-10 | Nec Corp | Contents distribution system, its method and contents distribution program |
US20030126136A1 (en) | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US8285701B2 (en) | 2001-08-03 | 2012-10-09 | Comcast Ip Holdings I, Llc | Video and digital multimedia aggregator remote content crawler |
US20040205554A1 (en) | 2001-08-22 | 2004-10-14 | Goswami Kumar K. | Systems and methods for accessing multiple internal information sources of a business from a composite web document |
US6985939B2 (en) | 2001-09-19 | 2006-01-10 | International Business Machines Corporation | Building distributed software services as aggregations of other services |
US7343428B2 (en) | 2001-09-19 | 2008-03-11 | International Business Machines Corporation | Dynamic, real-time integration of software resources through services of a content framework |
US20030067497A1 (en) * | 2001-10-09 | 2003-04-10 | Pichon Olivier Francis | Method and device for modifying a pre-existing graphical user interface |
US7594182B2 (en) * | 2001-10-12 | 2009-09-22 | National Insturments Corporation | Dynamic and user-defined events for a graphical program |
US7559032B2 (en) * | 2001-10-12 | 2009-07-07 | National Instruments Corporation | System and method for enabling a graphical program to respond to user interface events |
US20030081017A1 (en) * | 2001-10-18 | 2003-05-01 | Hossein Shenassa | System and method for dynamically managing language changes |
US20030083937A1 (en) | 2001-11-01 | 2003-05-01 | Masayuki Hasegawa | Advertisement delivery systems, advertising content and advertisement delivery apparatus, and advertisement delivery methods |
US6826572B2 (en) * | 2001-11-13 | 2004-11-30 | Overture Services, Inc. | System and method allowing advertisers to manage search listings in a pay for placement search system using grouping |
WO2003050744A1 (en) | 2001-12-07 | 2003-06-19 | Sofcast, Inc. | Delivering content and advertisement |
US20030149618A1 (en) | 2002-02-01 | 2003-08-07 | Microsoft Corporation | Flexible dynamic advertising |
CN1307805C (en) | 2002-02-04 | 2007-03-28 | 松下电器产业株式会社 | Advertisement program providing system |
AU2003221486A1 (en) * | 2002-03-28 | 2003-10-13 | International Business Machines Corporation | System and method for hierarchical layout specialization |
US9235849B2 (en) | 2003-12-31 | 2016-01-12 | Google Inc. | Generating user information for use in targeted advertising |
US7716161B2 (en) | 2002-09-24 | 2010-05-11 | Google, Inc, | Methods and apparatus for serving relevant advertisements |
US7136875B2 (en) | 2002-09-24 | 2006-11-14 | Google, Inc. | Serving advertisements based on content |
US7103642B1 (en) | 2002-04-30 | 2006-09-05 | Sprint Communications Company L.P. | System and method for personalizing a home page |
US7725560B2 (en) * | 2002-05-01 | 2010-05-25 | Bea Systems Inc. | Web service-enabled portlet wizard |
JP4007060B2 (en) | 2002-05-20 | 2007-11-14 | 日産自動車株式会社 | Advertisement distribution processing system, advertisement distribution processing apparatus and method, communication terminal, and advertisement presentation method |
US20030227482A1 (en) | 2002-06-05 | 2003-12-11 | Thomas Bach | User interface builder |
US20030236729A1 (en) | 2002-06-21 | 2003-12-25 | Kenneth Epstein | Systems and methods of directing, customizing, exchanging, negotiating, trading and provisioning of information, goods and services to information users |
US7752072B2 (en) | 2002-07-16 | 2010-07-06 | Google Inc. | Method and system for providing advertising through content specific nodes over the internet |
US8050970B2 (en) | 2002-07-25 | 2011-11-01 | Google Inc. | Method and system for providing filtered and/or masked advertisements over the internet |
US20040044571A1 (en) | 2002-08-27 | 2004-03-04 | Bronnimann Eric Robert | Method and system for providing advertising listing variance in distribution feeds over the internet to maximize revenue to the advertising distributor |
US20040083202A1 (en) | 2002-08-30 | 2004-04-29 | Arkivio, Inc. | Techniques to control recalls in storage management applications |
JP4270992B2 (en) * | 2002-09-20 | 2009-06-03 | 株式会社リコー | Information processing apparatus, information processing method, information processing program, service providing apparatus, service providing method, service providing program, and recording medium |
US8086559B2 (en) | 2002-09-24 | 2011-12-27 | Google, Inc. | Serving content-relevant advertisements with client-side device support |
US20040059712A1 (en) | 2002-09-24 | 2004-03-25 | Dean Jeffrey A. | Serving advertisements using information associated with e-mail |
US7523174B2 (en) * | 2002-10-15 | 2009-04-21 | International Business Machines Corporation | Dynamic portal assembly |
US8311890B2 (en) | 2002-11-01 | 2012-11-13 | Google Inc. | Method and system for dynamic textual ad distribution via email |
US7089248B1 (en) * | 2002-11-04 | 2006-08-08 | Adobe Systems Incorporated | Group file delivery including user-defined metadata |
US7237204B2 (en) * | 2002-11-21 | 2007-06-26 | Adc Dsl Systems, Inc. | Change detection in a graphical user interface |
US20040119740A1 (en) | 2002-12-24 | 2004-06-24 | Google, Inc., A Corporation Of The State Of California | Methods and apparatus for displaying and replying to electronic messages |
US7000184B2 (en) | 2003-01-24 | 2006-02-14 | The Cobalt Group, Inc. | Remote web site editing in a standard web browser without external software |
US7890877B2 (en) * | 2003-02-27 | 2011-02-15 | Oracle International Corporation | Systems and methods for improved portal development |
US7694000B2 (en) * | 2003-04-22 | 2010-04-06 | International Business Machines Corporation | Context sensitive portlets |
US7386783B2 (en) | 2003-04-28 | 2008-06-10 | International Business Machines Corporation | Method, system and program product for controlling web content usage |
US8438154B2 (en) | 2003-06-30 | 2013-05-07 | Google Inc. | Generating information for online advertisements from internet data and traditional media data |
US8200775B2 (en) * | 2005-02-01 | 2012-06-12 | Newsilike Media Group, Inc | Enhanced syndication |
US20050050021A1 (en) * | 2003-08-25 | 2005-03-03 | Sybase, Inc. | Information Messaging and Collaboration System |
US7290006B2 (en) * | 2003-09-30 | 2007-10-30 | Microsoft Corporation | Document representation for scalable structure |
US8041601B2 (en) | 2003-09-30 | 2011-10-18 | Google, Inc. | System and method for automatically targeting web-based advertisements |
US20050222989A1 (en) | 2003-09-30 | 2005-10-06 | Taher Haveliwala | Results based personalization of advertisements in a search engine |
US20050080898A1 (en) | 2003-10-08 | 2005-04-14 | Block Jerald J. | System and method for managing computer usage |
US20050086073A1 (en) | 2003-10-15 | 2005-04-21 | Rodes Theodore Jr. | System and method for storing and retrieving medical directives |
US20050101311A1 (en) | 2003-10-15 | 2005-05-12 | Vernon Weitzman | Data driven engine and system for wireless communications |
US7224963B2 (en) | 2003-10-17 | 2007-05-29 | Sony Ericsson Mobile Communications Ab | System method and computer program product for managing themes in a mobile phone |
US20050097180A1 (en) * | 2003-10-31 | 2005-05-05 | Aaron Abdelhak | System and method for improved customized portal web pages |
US7930206B2 (en) | 2003-11-03 | 2011-04-19 | Google Inc. | System and method for enabling an advertisement to follow the user to additional web pages |
US20050108574A1 (en) | 2003-11-18 | 2005-05-19 | International Business Machines Corporation | Method and system for communication between a multi-modal device and a web application |
US7873536B2 (en) | 2003-12-11 | 2011-01-18 | Google Inc. | Systems and methods for providing advertisements in a communications network |
US7421707B2 (en) * | 2003-12-22 | 2008-09-02 | Sun Microsystems, Inc. | System and method for inducing asynchronous behavioral changes in a managed application process |
US20050144069A1 (en) | 2003-12-23 | 2005-06-30 | Wiseman Leora R. | Method and system for providing targeted graphical advertisements |
US20050216823A1 (en) | 2003-12-30 | 2005-09-29 | Microsoft Corporation | Assigning textual ads based on article history |
JP2005202483A (en) | 2004-01-13 | 2005-07-28 | Sony Corp | Information processor, information processing method and program |
US7689578B2 (en) | 2004-01-15 | 2010-03-30 | International Business Machines Corporation | Dealing with annotation versioning through multiple versioning policies and management thereof |
US7266806B2 (en) * | 2004-03-02 | 2007-09-04 | International Business Machines Corporation | Portlet template based on a state design pattern |
US20050216335A1 (en) | 2004-03-24 | 2005-09-29 | Andrew Fikes | System and method for providing on-line user-assisted Web-based advertising |
US7533090B2 (en) | 2004-03-30 | 2009-05-12 | Google Inc. | System and method for rating electronic documents |
US20050222900A1 (en) | 2004-03-30 | 2005-10-06 | Prashant Fuloria | Selectively delivering advertisements based at least in part on trademark issues |
US20050222903A1 (en) | 2004-03-31 | 2005-10-06 | Paul Buchheit | Rendering content-targeted ads with e-mail |
US7406510B1 (en) * | 2004-05-21 | 2008-07-29 | Sap Portals Israel Ltd. | Techniques for accessing portal components |
US7490295B2 (en) * | 2004-06-25 | 2009-02-10 | Apple Inc. | Layer for accessing user interface elements |
US20060015817A1 (en) * | 2004-07-15 | 2006-01-19 | Giuseppe Fioretti | Method to dynamically customize a web user interface |
CA2512945A1 (en) | 2004-07-23 | 2006-01-23 | Genesis Group Inc. | System and method for estimating user ratings from user behavior and providing recommendations |
US7840707B2 (en) | 2004-08-18 | 2010-11-23 | International Business Machines Corporation | Reverse proxy portlet with rule-based, instance level configuration |
US20060048068A1 (en) * | 2004-08-31 | 2006-03-02 | Michael Danninger | Method and system to facilitate access to a user interface element on a user interface |
US7664751B2 (en) | 2004-09-30 | 2010-02-16 | Google Inc. | Variable user interface based on document access privileges |
CN100465955C (en) | 2004-10-12 | 2009-03-04 | 国际商业机器公司 | Method, system, and computer program product for caching web content |
US7653721B1 (en) * | 2004-10-29 | 2010-01-26 | Sun Microsystems, Inc. | Mechanism for capturing high level events on user interface components |
US7502853B2 (en) | 2004-11-22 | 2009-03-10 | Bea Systems, Inc. | System and method for improved remote portlet communications |
US20060129935A1 (en) * | 2004-12-15 | 2006-06-15 | Honeywell International, Inc. | Integrated information management system and method |
US7693863B2 (en) | 2004-12-20 | 2010-04-06 | Claria Corporation | Method and device for publishing cross-network user behavioral data |
US7441185B2 (en) * | 2005-01-25 | 2008-10-21 | Microsoft Corporation | Method and system for binary serialization of documents |
US20060218133A1 (en) * | 2005-03-24 | 2006-09-28 | Atkin Steven E | Constructing dynamic multilingual pages in a Web portal |
JP4208858B2 (en) * | 2005-05-11 | 2009-01-14 | キヤノン株式会社 | Layout processing method, layout processing apparatus, and layout processing program |
US20070006069A1 (en) * | 2005-06-27 | 2007-01-04 | Bea Systems, Inc. | System and method for improved web portal design through control tree file utilization |
US8881065B2 (en) | 2005-07-14 | 2014-11-04 | Red Hat, Inc. | Presentation mode/full-screen mode interrupting action prevention |
US7673017B2 (en) * | 2005-09-06 | 2010-03-02 | Interpolls Network Inc. | Systems and methods for integrating XML syndication feeds into online advertisement |
US20070083670A1 (en) | 2005-10-11 | 2007-04-12 | International Business Machines Corporation | Method and system for protecting an internet user from fraudulent ip addresses on a dns server |
US7882440B2 (en) | 2005-10-28 | 2011-02-01 | Sap Ag | System and method of switching appearance of a graphical user interface |
US7542951B1 (en) | 2005-10-31 | 2009-06-02 | Amazon Technologies, Inc. | Strategies for providing diverse recommendations |
US20070106803A1 (en) | 2005-11-07 | 2007-05-10 | Pixelpass Llc | Web site subscription management system |
US20070192700A1 (en) * | 2005-11-29 | 2007-08-16 | International Business Machines Corporation | Support of remote software applications |
US20070130203A1 (en) * | 2005-12-07 | 2007-06-07 | Ask Jeeves, Inc. | Method and system to provide targeted advertising with search results |
US8185819B2 (en) | 2005-12-12 | 2012-05-22 | Google Inc. | Module specification for a module to be incorporated into a container document |
US7730082B2 (en) * | 2005-12-12 | 2010-06-01 | Google Inc. | Remote module incorporation into a container document |
US7730109B2 (en) * | 2005-12-12 | 2010-06-01 | Google, Inc. | Message catalogs for remote modules |
US7725530B2 (en) * | 2005-12-12 | 2010-05-25 | Google Inc. | Proxy server collection of data for module incorporation into a container document |
US20070204010A1 (en) * | 2005-12-12 | 2007-08-30 | Steven Goldberg | Remote Module Syndication System and Method |
US20070136201A1 (en) * | 2005-12-12 | 2007-06-14 | Google Inc. | Customized container document modules using preferences |
US20070162845A1 (en) * | 2006-01-09 | 2007-07-12 | Apple Computer, Inc. | User interface for webpage creation/editing |
US20070162842A1 (en) * | 2006-01-09 | 2007-07-12 | Apple Computer, Inc. | Selective content imaging for web pages |
US8051385B1 (en) | 2006-03-29 | 2011-11-01 | Amazon Technologies, Inc. | Content selection and aggregated search results presentation on a handheld electronic device |
US20070233672A1 (en) * | 2006-03-30 | 2007-10-04 | Coveo Inc. | Personalizing search results from search engines |
US20080010387A1 (en) | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Method for defining a Wiki page layout using a Wiki page |
US20080010345A1 (en) | 2006-07-07 | 2008-01-10 | Bryce Allen Curtis | Method and apparatus for data hub objects |
US20080034309A1 (en) * | 2006-08-01 | 2008-02-07 | Louch John O | Multimedia center including widgets |
US8185830B2 (en) | 2006-08-07 | 2012-05-22 | Google Inc. | Configuring a content document for users and user groups |
US8407250B2 (en) * | 2006-08-07 | 2013-03-26 | Google Inc. | Distribution of content document to varying users with security customization and scalability |
US20090006996A1 (en) * | 2006-08-07 | 2009-01-01 | Shoumen Saha | Updating Content Within A Container Document For User Groups |
US8612847B2 (en) * | 2006-10-03 | 2013-12-17 | Adobe Systems Incorporated | Embedding rendering interface |
US8281390B1 (en) | 2007-11-26 | 2012-10-02 | Adobe Systems Incorporated | Remotely defining security data for authorization of local application activity |
US8291390B2 (en) | 2008-07-30 | 2012-10-16 | National Instruments Corporation | Testing a graphical program intended for a programmable hardware element |
-
2007
- 2007-06-01 US US11/756,852 patent/US8185830B2/en active Active
- 2007-08-07 WO PCT/US2007/017503 patent/WO2008021060A2/en active Application Filing
-
2012
- 2012-05-10 US US13/468,350 patent/US9754040B2/en active Active
-
2017
- 2017-09-01 US US15/694,133 patent/US20180089208A1/en not_active Abandoned
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5991807A (en) * | 1996-06-24 | 1999-11-23 | Nortel Networks Corporation | System for controlling users access to a distributive network in accordance with constraints present in common access distributive network interface separate from a server |
US6205476B1 (en) * | 1998-05-05 | 2001-03-20 | International Business Machines Corporation | Client—server system with central application management allowing an administrator to configure end user applications by executing them in the context of users and groups |
US6609123B1 (en) * | 1999-09-03 | 2003-08-19 | Cognos Incorporated | Query engine and method for querying data using metadata model |
US20020083073A1 (en) * | 2000-12-22 | 2002-06-27 | Vaidya Neelam N. | Managing a layered hierarchical data set |
US20020147746A1 (en) * | 2000-12-22 | 2002-10-10 | Lee Michele C. | Delivering output XML with dynamically selectable processing |
US20020161667A1 (en) * | 2001-01-23 | 2002-10-31 | Felkey Mark A. | Method and system for procuring telecommunications services on-line |
US20030005297A1 (en) * | 2001-06-29 | 2003-01-02 | International Business Machines Corporation | Method and system to integrate existing user and group definitions in a database server with heterogeneous application servers |
US20030069868A1 (en) * | 2001-06-29 | 2003-04-10 | Vos Jules Jakob | Distributed decision processing system |
US20030050986A1 (en) * | 2001-09-13 | 2003-03-13 | Matthews Charles R. | System and method for community interfaces |
US20030115292A1 (en) * | 2001-10-24 | 2003-06-19 | Griffin Philip B. | System and method for delegated administration |
US20040054569A1 (en) * | 2002-07-31 | 2004-03-18 | Alvaro Pombo | Contextual computing system |
US20040098275A1 (en) * | 2002-11-15 | 2004-05-20 | Pauline Hubert | System and method for providing targeted discussion group meeting information and related items for sale |
US20050015710A1 (en) * | 2003-07-18 | 2005-01-20 | Williams Lori Beth | Family website system |
US20050159970A1 (en) * | 2004-01-21 | 2005-07-21 | Orkut Buyukkokten | Methods and systems for the display and navigation of a social network |
US20060174277A1 (en) * | 2004-03-04 | 2006-08-03 | Sezan M I | Networked video devices |
US20070002057A1 (en) * | 2004-10-12 | 2007-01-04 | Matt Danzig | Computer-implemented system and method for home page customization and e-commerce support |
US20060117016A1 (en) * | 2004-10-21 | 2006-06-01 | International Business Machines Corporation | Method and apparatus for efficient electronic document management |
US7330967B1 (en) * | 2004-12-03 | 2008-02-12 | Symantec Operating Corporation | System and method for injecting drivers and setup information into pre-created images for image-based provisioning |
US20070282877A1 (en) * | 2006-05-31 | 2007-12-06 | Red. Hat, Inc. | Open overlay for social networks and online services |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8918713B2 (en) | 2005-12-12 | 2014-12-23 | Google Inc. | Module specification for a module to be incorporated into a container document |
US9916293B2 (en) | 2005-12-12 | 2018-03-13 | Google Llc | Module specification for a module to be incorporated into a container document |
US8832151B2 (en) | 2006-08-07 | 2014-09-09 | Google Inc. | Distribution of content document to varying users with security, customization and scalability |
US8954861B1 (en) | 2006-08-07 | 2015-02-10 | Google Inc. | Administrator configurable gadget directory for personalized start pages |
US20210312009A1 (en) * | 2020-04-02 | 2021-10-07 | Xchange Mall, Inc. | Content aggregation and data streaming through unified application functionalities |
Also Published As
Publication number | Publication date |
---|---|
US20180089208A1 (en) | 2018-03-29 |
US20080034441A1 (en) | 2008-02-07 |
WO2008021060A3 (en) | 2008-11-20 |
WO2008021060A2 (en) | 2008-02-21 |
US8185830B2 (en) | 2012-05-22 |
US9754040B2 (en) | 2017-09-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20180089208A1 (en) | Configuring a content document for users and use groups | |
US8832151B2 (en) | Distribution of content document to varying users with security, customization and scalability | |
US20090006996A1 (en) | Updating Content Within A Container Document For User Groups | |
KR101444389B1 (en) | Message catalogs for remote modules | |
US7730082B2 (en) | Remote module incorporation into a container document | |
US7725530B2 (en) | Proxy server collection of data for module incorporation into a container document | |
US8185819B2 (en) | Module specification for a module to be incorporated into a container document | |
US8635536B2 (en) | Third-party-secured zones on web pages | |
US8719366B2 (en) | Profile and consent accrual | |
US7950055B2 (en) | Cross-domain authentication | |
US20070136201A1 (en) | Customized container document modules using preferences | |
JP6506762B2 (en) | System and method for collecting third party application activity data | |
Bouras et al. | Application on demand system over the Internet | |
Correia et al. | A Micro-interaction Tool for Online Text Analysis | |
Selkäinaho | Web Portal for Home Buyer’s Selections |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SAHA, SHOUMEN;YANG, JUN;SHIEH, JESSE;AND OTHERS;SIGNING DATES FROM 20080527 TO 20080804;REEL/FRAME:034100/0522 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044097/0658Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
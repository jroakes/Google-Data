US8122022B1 - Abbreviation detection for common synonym generation - Google Patents
Abbreviation detection for common synonym generation Download PDFInfo
- Publication number
- US8122022B1 US8122022B1 US12/187,162 US18716208A US8122022B1 US 8122022 B1 US8122022 B1 US 8122022B1 US 18716208 A US18716208 A US 18716208A US 8122022 B1 US8122022 B1 US 8122022B1
- Authority
- US
- United States
- Prior art keywords
- term
- constituent
- determining
- comparison
- abbreviation
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
- G06F16/313—Selection or weighting of terms for indexing
Definitions
- Embodiments of the present invention generally relate to the field of information retrieval, and more specifically to the task of identifying valid synonyms for query terms to facilitate retrieving documents which relate to the query terms.
- a user may enter the query [Web hosting+fort wayne] when the city of Fort Wayne is usually referred to as Ft. Wayne.
- a user may also enter [free loops for flash movie] when most relevant pages use the term “music” rather than “loops” and the term “animation” rather than “movie.”
- documents that satisfy a user's informational needs may use different terms than the specific query terms chosen by the user. This problem is further aggravated as the number of terms in a query increases. For queries longer than three or four terms, there is a strong likelihood that at least one of the terms is not the best term to describe the user's intended search. It is therefore desirable for a search engine to automatically modify and/or expand user queries to include synonyms for query terms, so that retrieved documents can better meet the user's informational needs.
- One embodiment of the present invention provides a system for determining an abbreviation for a term.
- the system receives a candidate abbreviation for the term. If the term is a compound term comprised of a number of constituent terms, the system then determines if the candidate abbreviation is substantially equal to at least one of the constituent terms. If so, the system determines that the candidate abbreviation is not an abbreviation for the term.
- the system decompounds the term into the corresponding constituent terms prior to determining if the candidate abbreviation is substantially equal to at least one of the constituent terms.
- the system determines whether the candidate abbreviation is substantially equal to at least one of the constituent terms by receiving a list of candidate synonyms for the term, and for each candidate synonym in the list: (1) determining if the candidate synonym is comprised of multiple terms; (2) if so, determining if the candidate abbreviation is substantially equal to at least one of the terms that comprise the candidate synonym; and (3) if so, determining that the candidate abbreviation is substantially equal to at least one of the constituent terms.
- the system further determines whether the candidate abbreviation is substantially equal to at least one of the constituent terms by receiving a list of candidate synonyms for the term, and for each candidate synonym in the list: (1) concatenating the candidate abbreviation with the candidate synonym to produce a possible compound term; (2) determining if the possible compound term is substantially equal to the term; and (3) if so, determining that the candidate abbreviation is substantially equal to at least one of the constituent terms.
- the system concatenates the candidate abbreviation with the candidate synonym by: placing the candidate abbreviation before the candidate synonym; or placing the candidate abbreviation after the candidate synonym.
- the system determines whether the candidate abbreviation is substantially equal to at least one of the constituent terms by considering lexical relationships between the candidate abbreviation and each of the constituent terms.
- the system determines that the candidate abbreviation is not synonymous with the term if the candidate abbreviation is not an abbreviation for the term.
- FIG. 1 illustrates the crawling, ranking, and searching processes in accordance with an embodiment of the present invention.
- FIG. 2A presents a flowchart illustrating a method for producing altered queries in accordance with one embodiment of the present invention.
- FIG. 2B presents a flowchart illustrating a process for determining one or more synonymous terms in the context of a query in accordance with one embodiment of the present invention.
- FIG. 3 illustrates an exemplary method for determining candidate synonyms for search query terms in accordance with one embodiment of the present invention.
- FIG. 4 presents a table illustrating several tests that may be used to evaluate the quality or strength of synonym candidates in accordance with one embodiment of the present invention.
- FIG. 5 presents a flowchart illustrating the process of detecting abbreviation in accordance with one embodiment of the present invention.
- FIG. 6 presents a flowchart illustrating the process of determining an abbreviation for a term in accordance with an embodiment of the present invention.
- FIG. 7A presents a flowchart illustrating a process of determining whether the candidate abbreviation is substantially equal to a constituent term in accordance with an embodiment of the present invention.
- FIG. 7B presents a flowchart illustrating another process for determining whether the candidate abbreviation is substantially equal to a constituent term in accordance with an embodiment of the present invention.
- a computer-readable storage medium which may be any device or medium that can store code and/or data for use by a computer system.
- FIG. 1 illustrates the crawling, ranking and searching processes in accordance with an embodiment of the present invention.
- a Web crawler 104 crawls or otherwise searches through websites on Web 102 to select Web pages to be stored in indexed form in data center 108 .
- the selected Web pages are then compressed, indexed and ranked in module 105 (using the ranking process described above) before being stored in data center 108 .
- a search engine 112 receives a query 113 from a user 111 through a Web browser 114 .
- This query 113 specifies a number of terms to be searched for in the set of documents.
- search engine 112 uses search terms specified in the query as well as synonyms for search terms to identify highly-ranked documents that satisfy the query.
- Search engine 112 then returns a response 115 through Web browser 114 , wherein the response 115 contains matching pages along with ranking information and references to the identified documents.
- Some embodiments of the present invention do not require Web crawling.
- the techniques described herein can also work with other document search and retrieval systems based on manually-controlled system such as human-maintained Web portals, directories, and paid inclusion.
- FIG. 2A is a flowchart illustrating a method for altering queries to incorporate synonyms in accordance with an embodiment of the present invention.
- a front-end server After receiving a search query from a client, a front-end server provides the query to the search engine, which evaluates the query (operation 210 ).
- the front-end server and/or search engine can maintain log files or lookup tables for storing each received query and other information. For example, each query can be stored with a user identifier that identifies the browser and/or computer used by the user, a timestamp, and a list of some search results, such as the top ten document IDs that correspond to the search. Other information related to user context or the search itself may also be stored.
- a list of search results for the search query is identified (operation 220 ).
- the search engine evaluates the query to retrieve a set of search results for the search query and returns the results to the front-end server.
- the search engine communicates with one or more content servers to select documents relevant to the search query.
- a content server stores a large number of indexed documents, which are indexed and/or retrieved from different websites.
- the content server can store an index of documents stored on various websites. “Documents” are understood here to be any form of indexable content, including textual documents, images, video, audio, multimedia, presentations, and so forth.
- each indexed document is assigned a page rank according to the document's link structure.
- This page rank serves as a query-independent measure of the document's importance.
- An exemplary form of page rank is described in U.S. Pat. No. 6,285,999, which is incorporated by reference herein.
- the search engine assigns a score to each document based on the document's page rank (and/or other query-independent measure of the document's importance), as well as one or more query-dependent signals of the document's importance (e.g., the location and frequency of search terms in the document).
- FIG. 2B is a flowchart illustrating a process for determining one or more synonymous terms in the context of a search query according to one embodiment of the present invention.
- query pairs are identified (operation 240 ). (An example of this process is further described in conjunction with FIG. 3 below.) In one embodiment, this is accomplished by analyzing user query logs and lookup tables. The set of all queries received over some period are reviewed and all original and altered query pairs are identified. An altered query is a query obtained by replacing a phrase in the original query with a candidate synonym.
- a “phrase,” in the context of the present invention, is one or more individual words or terms.
- an original query might be [free loops for flash movie], and the altered query might be [free music for flash movie].
- certain queries may be eliminated as having insufficient context.
- queries used in the analysis may be required to have at least three terms.
- possible query fragments, or “pseudo-queries” are formed by removing phrases from the query and replacing each phrase with a token (e.g., “:”) that acts as a variable. Then, queries that vary only by the phrase marked with the token are identified as query pairs.
- information about the query pairs is analyzed (operation 250 ). For each query pair, additional information to suggest that the phrase in the original query and altered query are synonymous is identified.
- the evidence may include the frequency with which both queries in the pair are entered by the same user within a short time interval, or the number of top results that the original query and altered query share.
- one or more additional tests can be used.
- One such test is to determine whether for every query containing a phrase A, a corresponding altered query with a phrase B substituted for A has a moderately high probability of occurrence in the stored data. In one embodiment of the present invention, the required probability is 1%.
- a second test is that, for every query containing A, the corresponding query with B substituted for A has a minimum probability of being entered by the same user in a short time interval.
- the interval is an hour and the probability is 0.1% or greater.
- a third test is that, for every query containing A, if the corresponding query with B substituted for A occurs, the two queries have a minimum probability of having a number of the top results in common. In one embodiment, the probability is 60-70% and the number of results in common is 1-3.
- the statistics used for the above tests can be gathered for each of the most common contexts in which the phrase occurs.
- the query would be reflected in statistics for all occurrences of “free” in the general context (:); for only occurrences of “free” following “whale” in the context (whale :); for only occurrences of “free” preceding “photos” in the context (: photos); and for only occurrences of “free” between “whale” and “photos” in the context (whale: photos). Because many queries containing the phrase “free” are processed, statistics will be obtained for many contexts in which “free” has occurred, quite possibly many thousands of different contexts.
- the above tests are performed for the overall context, to determine whether the substitution is generally a good one. For example, it may be determined that “download” is not a good synonym for “free” in the general context, is a good synonym in the context (: photos), and is not a good synonym in the context (: press). The conclusion in this example is that the context (: photos) is an exception to the general rule that “download” is not a good synonym for “free.”
- a subset is selected (operation 260 ) including phrases with candidate synonyms that meet certain criteria.
- the criteria are some or all of the tests discussed above in the general context.
- a number of top candidate synonyms are selected for the subset of query pairs.
- a synonym can be considered more significant than other synonyms, for example, if it is used in an altered query more often within user sessions, or if its altered query yields more search results in common with the original query.
- candidate synonyms are ranked (operation 270 ), or qualified, using the criteria discussed above.
- the system applies a set of threshold conditions, using the data gathered above as is discussed in greater detail in conjunction with FIG. 4 .
- the conditions may specify that, for at least 65% of the original-altered query pairs, there is at least one search result in common and that the frequency with which the altered query follows (e.g., occurs within five sequential queries) the original query within a user session is at least 1 in 2000.
- the statistics from operation 250 are evaluated using a float scale function to determine a score for each qualified synonym, as discussed in greater detail in conjunction with FIG. 3 . This score is a measure of the confidence in a qualified synonym. Depending on the application, greater or lesser confidence or strength will be required. Consequently, whether a qualified synonym is declared a useful synonym depends on the threshold value of evidence that is sufficient for the application.
- one or more altered queries are derived (operation 280 ).
- One such method is disclosed in U.S. patent application Ser. No. 10/629,479, filed on Jul. 28, 2003, entitled “System and Method for Providing a User Interface with Search Query Broadening,” which is incorporated herein by reference.
- alternative queries are suggested that include the synonym, either as a substitution in or an addition to the query.
- a number of alternative queries can be provided to the user, along with the search results for the original query according to various methods.
- the synonym is treated as equivalent to the original phrase automatically for purposes of document retrieval.
- the original query can be modified by replacing the phrase with a synonym or a disjunction of the original phrase and a synonym when producing search results for the query.
- a list of altered search results for the altered query is identified (operation 290 ).
- this list may include a maximum number of results.
- FIG. 3 depicts an exemplary method for determining candidate synonyms for search query terms according to one embodiment of the invention.
- the system sorts all queries received over a period of time, such as a week, by user ID (e.g., by cookie) and then by time (operation 310 ).
- This operation organizes the queries into individual user sessions, where a session is defined as queries from an individual client device (or user) occurring within a given time interval, for example one hour (though longer or shorter definitions of a session may be used, as desired). Assume that within a one-hour window from one user, the following queries were logged from an individual client device:
- the system first eliminates certain queries as having insufficient context.
- queries used in the analysis have at least three terms.
- the query [gm cars] is eliminated.
- all possible query fragments, or pseudo-queries are formed by replacing a sequence of one or more terms with a marker or token (e.g., “:”), while leaving at least two words in the pseudo-queries (operation 320 ).
- a marker or token e.g., “:”
- the generation of pseudo-queries may be described as iteratively replacing each term (or sequence of consecutive terms) of a query with a universal token.
- the term (or sequence of terms) that is replaced is called a “phrase.”
- Each pseudo-query record is keyed by its pseudo-query, the original query from which it was derived, and the phrase that was replaced by the token to produce the pseudo-query.
- the keying of the pseudo-query records in this manner allows for multiple different sorts and aggregations of the pseudo-query records as further described below.
- Operation 330 also optionally annotates a pseudo-query record with the first ten resultant document IDs (indicated below as “url#”) returned by the search engine in response to the query, either extracted from the log files (if available), or indirectly with a pointer or other reference to an external store of the results. According to one embodiment, fewer or no document IDs may be annotated, to reduce the required storage space.
- url# the first ten resultant document IDs
- top_results ⁇ url370293847, url123985709, . . . >
- top_results ⁇ url370293847, url123985709, . . . >
- top_results ⁇ url123985709, url093475987, . . . >
- top_results ⁇ url370293847, url123985709, . . . >
- Generating pseudo-queries operates specifies the range of potential contexts of each phrase implicit within each query.
- the records corresponding to an individual pseudo-query reflect what is known (i.e., across all user queries in the logs) about one set of queries that differ in only one phrase.
- the system then analyzes records for each pseudo-query to generate a new set of records that reflect how well each phrase can function as a synonym for some other phrase, if it occurs in the given pseudo-query (operation 340 ).
- Pseudo-query records are sorted by pseudo-query such that all records with the same pseudo-query are grouped together. For example, assume that the records for the pseudo-query [: used car prices] include the two examples from above, plus two more, all of which are shown below:
- top_results ⁇ url370293847, url123985709, . . . >
- top_results ⁇ url370293847, url123985709, . . . >
- top_results ⁇ url283923887, url739572390, . . . >
- top_results ⁇ url370293847, url123985709, . . . >
- Operation 340 generates a single record for each phrase that is identified in a pseudo-query. In other words, all records with the same pseudo-query are grouped together and a new record is created for each phrase covered by the group, reflecting how that phrase relates to the other phrases of the group for that pseudo-query. Continuing the present example, operation 340 creates a record for each of the phrases “gm,” “general motors” and “ford.” Each record includes candidate synonyms for the respective phrases.
- each record output by operation 340 identifies the ten most significant potential synonyms for each phrase.
- the significance of synonyms is determined at this stage independently of context according to a hierarchy of tests. First, a synonym that occurs in more related queries within sessions is considered more significant than one that appears in fewer related queries. Second, if two synonyms occur in the same number of related queries within sessions (as is likely to be the case, because relatively few sessions have related queries), a synonym is considered more significant than another if the results returned for a search query that includes the first synonym have more results in common with the results returned for a query with the phrase. Finally, if two synonyms still evaluate as equally significant, one is considered more significant if it occurs more often within the queries corresponding to the respective pseudo-query.
- operation 340 would output:
- operation 340 passes on the session information from operation 330 .
- the data record above reflects the session queries “gm used car prices,” “general motors used car prices,” and “ford used car prices.”
- the original and altered queries may occur in different sessions, yet not occur together in a single session.
- Operation 340 also compares the search results (using, e.g., the document IDs) for each original and altered query if they were recorded, and tracks how many were in common.
- [gm used car prices] and [general motors used car prices] had 5 documents in common among their respective top ten, while the results for [gm used car prices] had no documents in common with those for [ford used car prices].
- the records produced by this operation are sorted by phrase, gathering together all records produced by operation 340 for each phrase.
- operation 350 For each phrase, operation 350 computes statistics that reflect how well each candidate synonym functions as a synonym in general (i.e., in the general context, “:”), as well as in specific contexts. In the examples at this level of the analysis, candidate synonyms are selected from the observed “related phrases.” Continuing the present example, assume that for the phrase “gm,” operation 350 receives the above record, plus two more:
- Operation 350 determines how many queries contained a particular phrase and computes statistics for each candidate synonym of the phrase. In one embodiment, this operation includes determining the number of queries for which the corresponding query with the synonym:
- operation 350 also gathers statistics for each context in which the phrase occurs frequently. For example, statistics can be gathered for the 10,000 contexts for which the most queries exist. In this example, the contexts would be (:), (: used), (: used car), (: new), (: new car), (of :), (nutrition of :), (: food), and (of : food). Only one of the queries discussed in the above example (original queries [gm used car prices], [gm new car prices], and [nutrition of gm food]) belongs to each of these specialized contexts, except the general context, (:), which subsumes all three queries. Realistically, however, some contexts will include data from many queries. Operation 350 evaluates the above statistics for each context, retaining, for each context, only the 20 most common candidate synonyms.
- Operation 360 further qualifies candidate synonyms using various tests.
- FIG. 4 is a table illustrating several tests that may be used to quantify the quality or strength or confidence of a candidate synonym according to one embodiment of the present invention.
- the tests 410 apply to statistics gathered in operation 350 .
- the process begins by confirming that two preliminary conditions are satisfied.
- the first preliminary condition is that for at least 65% of the original-altered query pairs, there is at least one search result (e.g., a URL) in common.
- the 65% parameter is empirically derived, and other thresholds can be used as well, depending on the corpus of documents.
- the second preliminary condition is that for at least 1 in 2000 of the query pairs, a user in a session enters the original query followed by the altered query within, e.g., five queries.
- the threshold values used in this particular embodiment are also for illustrative purposes only, and other values can be used as well.
- operation 360 evaluates a number of the statistics from operation 350 as a group and accords weight to each statistic.
- the evaluation can be based on the following function Scale( ):
- score 420 ratio the test determines
- base 430 target value
- high 440 scaling factor
- the value of base 430 reflects a desired value for the given test.
- the individual tests are defined as follows.
- frequently_alterable 450 provides a measure of whether, for each query with the phrase of interest, the corresponding altered query occurs frequently enough (preferably more than 1%) to suggest that the candidate synonym makes sense in context.
- the result of this test is computed as the result (i) from operation 350 (queries in log) over the total number of distinct queries including the phrase (TDQ).
- frequently_much_in_common 460 evaluates whether the original queries and altered queries typically exhibit enough results in common to suggest that the meanings of the phrase and candidate synonym are similar. Preferably, at least 60% of altered queries have at least 3 search results in common with the original user query. The result of this test is computed as result (iv) from operation 350 (had at least one result in common) over result (ii) of operation 350 (result data existed for both original and altered queries).
- frequently_altered 470 evaluates whether users occasionally try the substitution. Preferably, for every 2000 user queries, there is a corresponding altered query within the same session. The result of this test is computed as result (v) from operation 350 (appeared earlier within a session) over TDQ.
- high_altering_ratio 480 measures whether users do not preferentially substitute in the opposite direction, i.e., substitute the phrase for the candidate synonym, which would suggest that the original phrase is much better than the candidate synonym.
- exp( ) is the natural exponential function
- soft_and reflects the totality of the test metrics.
- the above formula is only one possible embodiment of the present invention. Other formulae are also possible for computing the confidence level of a synonym candidate.
- the value of evidence is a measure of the strength of or confidence in a synonym. An evidence value approaching 1.0 indicates very high confidence, while a value of 0.6 reflects good confidence. Depending on the application, greater or lesser confidence or strength can be required. Consequently, whether a candidate synonym is declared a validated synonym depends on the threshold value of evidence that is sufficient for the application. It has been empirically determined that for many applications, for example, a candidate synonym can be validated, e.g., considered equivalent to a phrase, if the value of evidence is greater than 0.6. Again, other thresholds and variations of the Scale function, and its subordinate functions may also be used.
- a set of validated synonyms and the corresponding contexts in which they are effective can be utilized in several ways.
- a conservative approach is to suggest to the user alternative queries into which the synonym has been substituted. For example, when a user enters a given query, a number of alternative queries can be provided to the user, along with the search results for the original query. Each of the alternative queries can be linked to its associated search results, so that the user does not have to manually re-enter the alternative query.
- An aspect of the present invention includes a computer-implemented method to determine synonyms to serve as substitutions for phrases within an information search query.
- Candidate substitutions may be suggested to the user or automatically included in addition to or in place of the original query.
- the candidate substitution may be used solely to modify the score associated with the retrieved documents.
- a formula may be used to assess the strength or quality of candidate synonyms, and the strength or quality may be compared to a threshold that is determined according to the application of interest.
- One technique for detecting synonyms that differ from the original word only by punctuation or spacing is to run through the original word and the synonym, and remove all punctuation and spaces (both defined according to an accepted standard of character sets, e.g., UTF8). The system then compares the results, and if they are equal, the synonym falls into this class.
- These types of synonyms tend to be prevalent in Germanic languages. An example in English is woodshed->“wood shed.” Stripping out the spaces from both, we get “woodshed” and “woodshed” which are identical.
- An example of a punctuation difference is albertson's->albertsons. After punctuation removal, “albertson's” and “albertsons” become the same.
- the system can run an edit-distance procedure to align the original word and the phrase. (“Edit distance” refers to the number of edits required to change one word to another word.)
- Edit distance refers to the number of edits required to change one word to another word.
- the system detects this word as an acronym.
- the system collects the first characters of all the words in the phrase and runs the edit-distance procedure again against the single word. If they are sufficiently similar within a predetermined number of edits, the system deems the single word an acronym.
- the system checks that all characters in the word align with the first character of each word in the phrase.
- Standard stemming as a conventional synonym-generation technique can often be overly conservative, because in the past it has been used to identify stems without the help of any additional signals.
- Embodiments of the present invention use standard stemming as just one signal in a system that produces high-quality synonyms and stems.
- embodiments of the present invention use “pseudostemming,” a technique that is more inclusive than conventional stemmers.
- the system concludes that the candidate synonym is a pseudostem. Otherwise, the system uses a sequence of tests: First the system computes the length of the common prefix the two words share. In one embodiment of the present invention, the system determines whether the number of characters of the matching prefix divided by the maximum length of either string is greater than a given threshold. For example, for “shuttler” and “shuttling,” the common prefix is “shuttl,” with a length of six. The maximum length is nine; therefore, the ratio is 6/9, which is 0.67. An empirically determined threshold can be 0.5, hence this first test passes. Note that in one embodiment one edit is defined as one character change to make two corresponding characters in two terms identical. An “edit distance” is defined as the total number of edits required to make two terms identical.
- the system examines the leftover strings of both words after the common prefix, which in the above example would be “er” from “shuttler” and “ing” from “shuttling.”
- the system calculates the edit distance between the leftover strings, which is an edit distance of three in this example (using a character mismatch cost of one).
- the system can also require this edit distance of the leftover strings to be less than a fraction of the maximum length of both strings.
- An edit distance of three is less than 3.6, hence in this case, the leftover edits would also pass this test. Because the two words in this example pass both tests, the system declares them to be pseudostems.
- the system can remove these marks with both language-specific and universal de-accenting. If the words are substantially similar after accent removal, they classify as lexical variants. In addition to removing accents in the original words, the system can further input the deaccented words to any of the above techniques. This additional operation allows the system to capture the case where, for example, a character may be accented in the phrase for an acronym, but is not accented in the acronym itself. In one embodiment, comparing an accented to an unaccented character does not count as an edit in pseudo-stemming or other techniques.
- the system can use linguistic rules specific to each language and develop a classifier that detects a word to be a “conservative” stemming variant of another word.
- abbreviations or shorthand for words For example, “hours” can be written as “hrs” or “people” as “ppl.”
- the system can detect abbreviations by removing vowels from both words and measure the edit distance. The system then determines whether the edit distance between the two shortened words is sufficiently small compared with the maximum length of both words. For example, removing the vowels from “hours” produces “hrs.” The system computes the edit distance between “hrs” and “hrs,” which is 0. The maximum length in this example is three characters, hence the ratio is 0/3, or 0.0. This ratio is less than an acceptable edit-distance threshold, which is empirically determined.
- the above-listed techniques are not exhaustive.
- the system can use the above techniques in addition to standard stemming techniques to identify trusted lexical synonyms.
- the system can use the Lovins and Porter stemmers.
- Other stemmers can also be suitable replacements.
- One embodiment of the present invention provides a system that performs improved abbreviation detection.
- the previously described approach detects a term's abbreviation by removing the vowels from the term and comparing the remaining character string with a second, shorter term. This approach often results in mis-identifications or mis-disqualifications, because an abbreviation can sometimes contain vowels or omit consonants from the original term.
- the system first determines which term is the shorter one. The system then compares the first character of the two terms, and determines whether the first characters are based on the same language symbol. Note that the system does not require an exact match between the first characters of the two terms. For example, an uppercase character “P” is considered to be a match to the corresponding lowercase character “p.” In other cases, a character is considered to be a match to a corresponding character with a different accent. In general, if both term's first characters are based on the same language symbol, the system considers the two characters to be a match.
- the system After matching the first characters, the system further iterates through every character in the shorter term to determine if there is a corresponding character in the longer term in the same order. For example, the system receives two terms, “people” and “PPL.” The system first considers the first characters of both terms, and determines “P” to be a match to “p.” The system then iterates through the rest of the remaining characters in the shorter term “PPL.” After identifying the matching characters for both “P” and “L” in the longer term “people,” the system determines that the order of the characters in the shorter term is preserved by the corresponding characters “p,” “p,” and “1” in the longer term. The system then reaches a conclusion that the two terms are synonyms.
- FIG. 5 presents a flow chart illustrating the process of detecting abbreviations in accordance with one embodiment of the present invention.
- the system receives two terms (operation 502 ).
- the system determines which term is shorter (operation 504 ) and determines whether both terms begin with the same character (operation 506 ). If so, the system sets a character index for the shorter term to 1 in preparation for the iteration (operation 508 ). Otherwise, the system determines that the shorter term is not an abbreviation of the longer term and exits.
- the system determines whether the current character corresponding to the character index in the shorter term is matched by a character in the longer term, and whether the order of the shorter-term characters is preserved by the corresponding characters in the longer term (operation 510 ). If this condition is not met, the system determines that the shorter term is not an abbreviation of the longer term and exits. If this condition is met, the system further determines whether the current indexed character is the last character in the shorter term (operation 512 ). If so, the system identifies the shorter term as an abbreviation for the longer term (operation 514 ) and exits. Otherwise, the system increments the character index and proceeds to the next character in the shorter term (operation 516 ).
- the abbreviation detection technique illustrated in FIG. 5 can detect abbreviations that are not real abbreviations in some special cases.
- mis-identifications can occur when an original term is a compound term comprised of a number of constituent terms.
- breakfast which is comprised of two constituent terms “break” and “fast.”
- a candidate abbreviation “break” meets all criteria specified in FIG. 5 (i.e., it begins with the same character and preserves the ordering), and hence is identified as an abbreviation for “breakfast” by the technique illustrated in FIG. 5 .
- this is a false abbreviation.
- breakfast is a valid abbreviation for “breakfast.”
- Another example illustrating the same problem in the technique of FIG. 5 is the compound term “showtimes” and the corresponding candidate abbreviation “shows.”
- Germanic languages include a large number of compound words which are formed by compounding multiple words.
- feldmaus means “field mouse” in English, which is comprised of the constituent terms “feld” and “maus.”
- feld is not an abbreviation for the term “feldmaus,” even though it meets the all the conditions specified in FIG. 5 .
- a system is configured to identify a candidate abbreviation as a “partial compound” of an original term (i.e., the longer term), wherein a partial compound of a compound term is defined as a term that is substantially equal to a constituent term in the compound term.
- a partial compound of a compound term is defined as a term that is substantially equal to a constituent term in the compound term.
- break is a partial compound of “breakfast” because “breakfast” is a compound term which includes the constituent “break.”
- feld is a partial compound of “feldmaus” because “feldmaus” is a compound term that contains the constituent “feld.” Note that if a shorter term is a partial compound of a longer term, the short term is highly unlikely to be an abbreviation for the long term.
- FIG. 6 presents a flowchart illustrating the process of determining an abbreviation for a term in accordance with an embodiment of the present invention.
- the system receives a term and a candidate abbreviation for the term (step 602 ).
- the system determines whether the term is a compound term which is comprised of a number of constituent terms (step 604 ).
- the system determines if the term is a compound term by applying a “decompounding technique” to the term. Note that any decompounding technique now known or later developed can be used for this purpose.
- the system if the system receives a term that is known to be a compound term, the system does not need to perform step 604 .
- the system next determines whether the candidate abbreviation is substantially equal to at least one of the constituent terms that comprise the term (step 606 ). If so, the system determines that the candidate abbreviation is a partial compound of the term, and is therefore not an abbreviation for the term (step 608 ).
- breakfast matches the first constituent term in “breakfast.” Therefore, “breakfast” and “break” are substantially equal, and hence “break” is a partial compound and not an abbreviation of “breakfast.”
- the system does not require the candidate abbreviation to be exactly equal to a constituent of the compound term to be regarded as a partial compound.
- the candidate abbreviation only has to be “substantially equal” to the constituent.
- one embodiment of the present invention considers possible lexical relationships between the candidate abbreviation and each constituent term. These lexical relationships can include, but are not limited to: sharing the same stem, differing in punctuation, spacing, and/or accents, and differing by a small edit-distance.
- FIG. 7A presents a flowchart illustrating the process of determining whether a candidate abbreviation is substantially equal to a constituent term in accordance with an embodiment of the present invention.
- the system receives a list of candidate synonyms for the original term (step 702 ).
- the list of candidate synonyms is produced by aforementioned candidate synonyms identification techniques.
- the synonym list can include terms that are lexically related to the original term, such as terms that share the same stem, terms that differ from the original term in punctuation, spacing, and/or accents, and terms that are sufficiently similar according to an edit-distance.
- the system determines if the candidate synonym comprises multiple terms (step 704 ). If so, the system determines whether the candidate abbreviation is substantially equal to at least one of the terms that comprise the candidate synonym (step 706 ). If so, the system determines that the candidate abbreviation is substantially equal to at least one of the constituent terms in the term (step 708 ). If not, the system proceeds to examine the next candidate synonym in the list.
- the system while performing step 706 , the system considers possible lexical relationships between the candidate abbreviation and a constituent term in the candidate synonym.
- These lexical relationships can include, but are not limited to: two terms sharing the same stem, two terms differing in punctuation or spacing, two terms differing in accents, and two terms which are sufficiently similar according to an edit-distance.
- the compound term “broadcast” can have the candidate synonym “broad casting” in its synonym list.
- the system determines that the candidate abbreviation “cast” is a partial compound of “broadcast” because “cast” is substantially equal to the term “casting” in the candidate synonym “broad casting.”
- step 706 when the system has positively identified a candidate synonym for the candidate abbreviation in step 706 , the system can forgo examining the rest of the candidate synonyms in the list that have not been processed.
- FIG. 7B presents a flowchart illustrating another process for determining whether a candidate abbreviation is substantially equal to a constituent term in accordance with an embodiment of the present invention.
- the system receives a list of candidate synonyms for the term (step 712 ).
- the list of candidate synonyms is produced by aforementioned candidate synonyms identification techniques.
- the synonym list can include terms that are lexically related to the original term, such as terms that share the same stem, terms that differ from the original term in punctuation, spacing, and/or accents, and terms that are sufficiently similar according to a predetermined edit-distance.
- the system concatenates the candidate abbreviation with the candidate synonym to produce a new compound term (step 714 ).
- the system while concatenating the two terms, the system produces two new compound terms by either placing the candidate abbreviation before the candidate synonym or placing the candidate abbreviation after the candidate synonym.
- the system determines if the new compound term is substantially equal to the original term (step 716 ). If so, the system determines that the candidate abbreviation is substantially equal to at least one of the constituent terms in the term (step 718 ).
- the system while performing step 716 , the system considers lexical relationships between the new compound word and the original term. These lexical relationships can include, but are not limited to: two terms sharing the same stem, two terms differing in punctuation or spacing, two terms differing in accents, and two terms which are sufficiently similar according to an edit-distance. For example, consider the compound term “broadcast” which has a candidate abbreviation “broad” and a candidate synonym “cast.” In this example, the system concatenates the terms “broad” and “cast” to form two new compound terms “broadcast” and “castbroad.” The system subsequently compares the original term “broadcast” with each of the new compound terms. In this case, the system determines that the candidate abbreviation “broad” is a partial compound for “broadcast” because the system concatenates “broad” with “cast” to form “broadcast.”
- step 716 the system can forgo examining the rest of the candidate synonyms in the list that have not been processed.
- the system determines that the candidate abbreviation is not an abbreviation for the term, the system determines that the candidate abbreviation is not synonymous with the original term.
Abstract
Description
-
- before: no, after:yes}>
-
- before: no, after: yes}>
-
- before: no, after: yes},
{phrase: ford, common_urls: 0, before:no, after: no}>
}
- before: no, after: yes},
-
- {phrase: ford, common_urls: 0, before:no, after: no}>
}
{phrase: gm,
- {phrase: ford, common_urls: 0, before:no, after: no}>
-
- {phrase: 2005, common_urls: 0, before:no, after: no},
- {phrase: best, common_urls: 1, before:no, after: no}>
}
{phrase: gm,
-
- before: no, after: yes},
- {phrase: macdonalds, common_urls: 0, before: no, after: no}>
}
-
- float x=(score−base)/(high−base);
- float y=(x−sqrt(x*x+4.0))/2.0;
- return 1.0+y;
Claims (21)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/187,162 US8122022B1 (en) | 2007-08-10 | 2008-08-06 | Abbreviation detection for common synonym generation |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US95512807P | 2007-08-10 | 2007-08-10 | |
US12/187,162 US8122022B1 (en) | 2007-08-10 | 2008-08-06 | Abbreviation detection for common synonym generation |
Publications (1)
Publication Number | Publication Date |
---|---|
US8122022B1 true US8122022B1 (en) | 2012-02-21 |
Family
ID=45572104
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/187,162 Active 2029-11-30 US8122022B1 (en) | 2007-08-10 | 2008-08-06 | Abbreviation detection for common synonym generation |
Country Status (1)
Country | Link |
---|---|
US (1) | US8122022B1 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090182554A1 (en) * | 2008-01-15 | 2009-07-16 | International Business Machines Corporation | Text analysis method |
US20120078926A1 (en) * | 2010-09-24 | 2012-03-29 | International Business Machines Corporation | Efficient passage retrieval using document metadata |
US8756241B1 (en) * | 2012-08-06 | 2014-06-17 | Google Inc. | Determining rewrite similarity scores |
US20140207790A1 (en) * | 2013-01-22 | 2014-07-24 | International Business Machines Corporation | Mapping and boosting of terms in a format independent data retrieval query |
US20150149499A1 (en) * | 2009-03-05 | 2015-05-28 | Ebay Inc. | System and method to provide query linguistic service |
US20160063095A1 (en) * | 2014-08-27 | 2016-03-03 | International Business Machines Corporation | Unstructured data guided query modification |
US9355084B2 (en) | 2013-11-14 | 2016-05-31 | Elsevier B.V. | Systems, computer-program products and methods for annotating documents by expanding abbreviated text |
US9361362B1 (en) * | 2009-08-15 | 2016-06-07 | Google Inc. | Synonym generation using online decompounding and transitivity |
WO2018023481A1 (en) * | 2016-08-03 | 2018-02-08 | 王晓光 | Method and system for applying synonym in big data search |
US10380247B2 (en) | 2016-10-28 | 2019-08-13 | Microsoft Technology Licensing, Llc | Language-based acronym generation for strings |
US20190340233A1 (en) * | 2016-10-31 | 2019-11-07 | Beijing Sogou Technology Development Co., Ltd. | Input method, input device and apparatus for input |
US10636083B1 (en) * | 2011-07-27 | 2020-04-28 | Intuit Inc. | Systems methods and articles of manufacture for analyzing on-line banking account data using hybrid edit distance |
US20200201898A1 (en) * | 2018-12-21 | 2020-06-25 | Atlassian Pty Ltd | Machine resolution of multi-context acronyms |
Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5261091A (en) * | 1989-09-29 | 1993-11-09 | Casio Computer Co., Ltd. | Slip processing apparatus for outputting arbitrary field data from a memory as input data |
US5331556A (en) | 1993-06-28 | 1994-07-19 | General Electric Company | Method for natural language data processing using morphological and part-of-speech information |
US5594641A (en) | 1992-07-20 | 1997-01-14 | Xerox Corporation | Finite-state transduction of related word forms for text indexing and retrieval |
US5832474A (en) | 1996-02-26 | 1998-11-03 | Matsushita Electric Industrial Co., Ltd. | Document search and retrieval system with partial match searching of user-drawn annotations |
US6385629B1 (en) * | 1999-11-15 | 2002-05-07 | International Business Machine Corporation | System and method for the automatic mining of acronym-expansion pairs patterns and formation rules |
US6438543B1 (en) * | 1999-06-17 | 2002-08-20 | International Business Machines Corporation | System and method for cross-document coreference |
US6466901B1 (en) | 1998-11-30 | 2002-10-15 | Apple Computer, Inc. | Multi-language document search and retrieval system |
US20030061122A1 (en) | 2001-08-08 | 2003-03-27 | Berkowitz Gary Charles | Knowledge-based e-catalog procurement system and method |
US6671670B2 (en) * | 2001-06-27 | 2003-12-30 | Telelogue, Inc. | System and method for pre-processing information used by an automated attendant |
US20040181512A1 (en) * | 2003-03-11 | 2004-09-16 | Lockheed Martin Corporation | System for dynamically building extended dictionaries for a data cleansing application |
US20050114130A1 (en) * | 2003-11-20 | 2005-05-26 | Nec Laboratories America, Inc. | Systems and methods for improving feature ranking using phrasal compensation and acronym detection |
US20060047637A1 (en) * | 2004-09-02 | 2006-03-02 | Microsoft Corporation | System and method for managing information by answering a predetermined number of predefined questions |
US20060088276A1 (en) * | 2004-10-21 | 2006-04-27 | Microsoft Corporation | Interlinking sports and television program listing metadata |
US7155427B1 (en) | 2002-10-30 | 2006-12-26 | Oracle International Corporation | Configurable search tool for finding and scoring non-exact matches in a relational database |
US7237123B2 (en) * | 2000-09-22 | 2007-06-26 | Ecd Systems, Inc. | Systems and methods for preventing unauthorized use of digital content |
US7254773B2 (en) * | 2000-12-29 | 2007-08-07 | International Business Machines Corporation | Automated spell analysis |
US20070185846A1 (en) * | 2006-01-31 | 2007-08-09 | Intellext, Inc. | Methods and apparatus for organizing search results |
US20090006359A1 (en) * | 2007-06-28 | 2009-01-01 | Oracle International Corporation | Automatically finding acronyms and synonyms in a corpus |
US7747598B2 (en) * | 2006-01-27 | 2010-06-29 | Google Inc. | Geographic coding for location search queries |
-
2008
- 2008-08-06 US US12/187,162 patent/US8122022B1/en active Active
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5261091A (en) * | 1989-09-29 | 1993-11-09 | Casio Computer Co., Ltd. | Slip processing apparatus for outputting arbitrary field data from a memory as input data |
US5594641A (en) | 1992-07-20 | 1997-01-14 | Xerox Corporation | Finite-state transduction of related word forms for text indexing and retrieval |
US5331556A (en) | 1993-06-28 | 1994-07-19 | General Electric Company | Method for natural language data processing using morphological and part-of-speech information |
US5832474A (en) | 1996-02-26 | 1998-11-03 | Matsushita Electric Industrial Co., Ltd. | Document search and retrieval system with partial match searching of user-drawn annotations |
US6466901B1 (en) | 1998-11-30 | 2002-10-15 | Apple Computer, Inc. | Multi-language document search and retrieval system |
US6438543B1 (en) * | 1999-06-17 | 2002-08-20 | International Business Machines Corporation | System and method for cross-document coreference |
US6385629B1 (en) * | 1999-11-15 | 2002-05-07 | International Business Machine Corporation | System and method for the automatic mining of acronym-expansion pairs patterns and formation rules |
US7237123B2 (en) * | 2000-09-22 | 2007-06-26 | Ecd Systems, Inc. | Systems and methods for preventing unauthorized use of digital content |
US7254773B2 (en) * | 2000-12-29 | 2007-08-07 | International Business Machines Corporation | Automated spell analysis |
US6671670B2 (en) * | 2001-06-27 | 2003-12-30 | Telelogue, Inc. | System and method for pre-processing information used by an automated attendant |
US20030061122A1 (en) | 2001-08-08 | 2003-03-27 | Berkowitz Gary Charles | Knowledge-based e-catalog procurement system and method |
US7155427B1 (en) | 2002-10-30 | 2006-12-26 | Oracle International Corporation | Configurable search tool for finding and scoring non-exact matches in a relational database |
US20040181512A1 (en) * | 2003-03-11 | 2004-09-16 | Lockheed Martin Corporation | System for dynamically building extended dictionaries for a data cleansing application |
US20050114130A1 (en) * | 2003-11-20 | 2005-05-26 | Nec Laboratories America, Inc. | Systems and methods for improving feature ranking using phrasal compensation and acronym detection |
US20060047637A1 (en) * | 2004-09-02 | 2006-03-02 | Microsoft Corporation | System and method for managing information by answering a predetermined number of predefined questions |
US20060088276A1 (en) * | 2004-10-21 | 2006-04-27 | Microsoft Corporation | Interlinking sports and television program listing metadata |
US7747598B2 (en) * | 2006-01-27 | 2010-06-29 | Google Inc. | Geographic coding for location search queries |
US20070185846A1 (en) * | 2006-01-31 | 2007-08-09 | Intellext, Inc. | Methods and apparatus for organizing search results |
US20090006359A1 (en) * | 2007-06-28 | 2009-01-01 | Oracle International Corporation | Automatically finding acronyms and synonyms in a corpus |
Non-Patent Citations (3)
Title |
---|
Office Action for related case (U.S. Appl. No. 11/582,767), mailed from USPTO on Sep. 15, 2008. |
The Gain of Failures: Using Side-Effects of Anaphora Resolution for Term Consistency Checks, by Galia Angelova et al., AIMSA'98, LNAI 1480, pp. 1-13, 1998. * |
Y. Park, and R.J. Byrd, "Hybrid Text Mining for Finding Abbreviations and Their Definitions" Proceedings of the 2001 Conference on Empirical Methods in Natural Language Processing, Pittsburgh, PA, Jun. 2001: 126-133. * |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8364470B2 (en) * | 2008-01-15 | 2013-01-29 | International Business Machines Corporation | Text analysis method for finding acronyms |
US20090182554A1 (en) * | 2008-01-15 | 2009-07-16 | International Business Machines Corporation | Text analysis method |
US20150149499A1 (en) * | 2009-03-05 | 2015-05-28 | Ebay Inc. | System and method to provide query linguistic service |
US9727638B2 (en) * | 2009-03-05 | 2017-08-08 | Paypal, Inc. | System and method to provide query linguistic service |
US9361362B1 (en) * | 2009-08-15 | 2016-06-07 | Google Inc. | Synonym generation using online decompounding and transitivity |
US20120078926A1 (en) * | 2010-09-24 | 2012-03-29 | International Business Machines Corporation | Efficient passage retrieval using document metadata |
US20120331003A1 (en) * | 2010-09-24 | 2012-12-27 | International Business Machines Corporation | Efficient passage retrieval using document metadata |
US10636083B1 (en) * | 2011-07-27 | 2020-04-28 | Intuit Inc. | Systems methods and articles of manufacture for analyzing on-line banking account data using hybrid edit distance |
US8756241B1 (en) * | 2012-08-06 | 2014-06-17 | Google Inc. | Determining rewrite similarity scores |
US20140207790A1 (en) * | 2013-01-22 | 2014-07-24 | International Business Machines Corporation | Mapping and boosting of terms in a format independent data retrieval query |
US9069882B2 (en) * | 2013-01-22 | 2015-06-30 | International Business Machines Corporation | Mapping and boosting of terms in a format independent data retrieval query |
US9355084B2 (en) | 2013-11-14 | 2016-05-31 | Elsevier B.V. | Systems, computer-program products and methods for annotating documents by expanding abbreviated text |
US20160063095A1 (en) * | 2014-08-27 | 2016-03-03 | International Business Machines Corporation | Unstructured data guided query modification |
WO2018023481A1 (en) * | 2016-08-03 | 2018-02-08 | 王晓光 | Method and system for applying synonym in big data search |
US10380247B2 (en) | 2016-10-28 | 2019-08-13 | Microsoft Technology Licensing, Llc | Language-based acronym generation for strings |
US20190340233A1 (en) * | 2016-10-31 | 2019-11-07 | Beijing Sogou Technology Development Co., Ltd. | Input method, input device and apparatus for input |
US11640503B2 (en) * | 2016-10-31 | 2023-05-02 | Beijing Sogou Technology Development Co., Ltd. | Input method, input device and apparatus for input |
US20200201898A1 (en) * | 2018-12-21 | 2020-06-25 | Atlassian Pty Ltd | Machine resolution of multi-context acronyms |
US11640422B2 (en) * | 2018-12-21 | 2023-05-02 | Atlassian Pty Ltd. | Machine resolution of multi-context acronyms |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8122022B1 (en) | Abbreviation detection for common synonym generation | |
US8001136B1 (en) | Longest-common-subsequence detection for common synonyms | |
US8392441B1 (en) | Synonym generation using online decompounding and transitivity | |
US8661012B1 (en) | Ensuring that a synonym for a query phrase does not drop information present in the query phrase | |
US8321201B1 (en) | Identifying a synonym with N-gram agreement for a query phrase | |
US8326866B1 (en) | Using geographic data to identify correlated geographic synonyms | |
US9239823B1 (en) | Identifying common co-occurring elements in lists | |
US7636714B1 (en) | Determining query term synonyms within query context | |
US20180300315A1 (en) | Systems and methods for document processing using machine learning | |
US7783476B2 (en) | Word extraction method and system for use in word-breaking using statistical information | |
US7890521B1 (en) | Document-based synonym generation | |
US7424421B2 (en) | Word collection method and system for use in word-breaking | |
US7769751B1 (en) | Method and apparatus for classifying documents based on user inputs | |
JP4726528B2 (en) | Suggested related terms for multisense queries | |
US7617205B2 (en) | Estimating confidence for query revision models | |
US9639609B2 (en) | Enterprise search method and system | |
US20150006563A1 (en) | Transitive Synonym Creation | |
US20150339288A1 (en) | Systems and Methods for Generating Summaries of Documents | |
CN102662936B (en) | Chinese-English unknown words translating method blending Web excavation, multi-feature and supervised learning | |
KR20060045786A (en) | Verifying relevance between keywords and web site contents | |
JP2005539283A (en) | System, method, and software for hyperlinking names | |
US8798988B1 (en) | Identifying related terms in different languages | |
US9183297B1 (en) | Method and apparatus for generating lexical synonyms for query terms | |
Moreau et al. | Automatic morphological query expansion using analogy-based machine learning | |
Vallet et al. | Exploiting external knowledge to improve video retrieval |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BAKER, STEVEN D.;REEL/FRAME:021537/0913Effective date: 20080806 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
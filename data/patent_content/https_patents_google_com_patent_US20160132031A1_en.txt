US20160132031A1 - Data Processing Systems and Methods for Smart Hub Devices - Google Patents
Data Processing Systems and Methods for Smart Hub Devices Download PDFInfo
- Publication number
- US20160132031A1 US20160132031A1 US14/938,806 US201514938806A US2016132031A1 US 20160132031 A1 US20160132031 A1 US 20160132031A1 US 201514938806 A US201514938806 A US 201514938806A US 2016132031 A1 US2016132031 A1 US 2016132031A1
- Authority
- US
- United States
- Prior art keywords
- sub
- functionality
- commands
- constituent
- devices
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05B—CONTROL OR REGULATING SYSTEMS IN GENERAL; FUNCTIONAL ELEMENTS OF SUCH SYSTEMS; MONITORING OR TESTING ARRANGEMENTS FOR SUCH SYSTEMS OR ELEMENTS
- G05B15/00—Systems controlled by a computer
- G05B15/02—Systems controlled by a computer electric
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
- H04L12/2803—Home automation networks
- H04L12/2816—Controlling appliance services of a home automation network by calling their functionalities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
- H04L12/2803—Home automation networks
- H04L12/283—Processing of data at an internetworking point of a home automation network
- H04L12/2832—Interconnection of the control functionalities between home networks
Definitions
- This relates generally to computer technology, including but not limited to methods and systems for provisioning an electronic device by associating a user account with the electronic device and establishing a secure network connection for the electronic device.
- Smart home automation devices are being developed and fielded at such a rapid pace that new devices appear on the market practically every day. Because of the proliferation of low-power wireless network and smart phone technologies, it is not uncommon to find home and business owners in possession of smart home devices such as wireless lights, music systems, door locks, thermostats and alarm systems. And wireless white goods are just over the horizon. Based on current trends, it is expected that the average consumer will own as many as five to ten smart home devices in just a few years.
- a method is performed at a first device (e.g., a hub device) with one or more processors and memory storing instructions for execution by the one or more processors.
- the method includes receiving a first command for performing a first functionality on at least a second device, the first functionality comprising a plurality of constituent functionalities, wherein the second device is not configured to execute the first command.
- the first command is translated into a plurality of sub-commands for execution by respective devices.
- Each of the plurality of sub-commands when executed, performs a respective constituent functionality of the plurality of constituent functionalities, and execution of any one of the sub-commands individually does not perform the entire first functionality.
- the first device manages execution of the plurality of sub-commands by the respective devices, wherein execution of the plurality of sub-commands by the respective devices emulates performance of the first functionality on at least the second device.
- a first device e.g., a hub device
- the one or more programs are stored in the memory and configured to be executed by the one or more processors.
- the one or more programs include instructions for performing the operations of the method described above.
- a non-transitory computer-readable storage medium has stored therein instructions that, when executed by the first device, cause the electronic device to perform the operations of the method described above.
- a device includes means for performing the operations of the method described above.
- a first functionality to be performed on a first device is identified, the first functionality comprising a plurality of constituent functionalities. Respective sets of functionalities are obtained for a plurality of devices including the first device. Two or more devices, of the plurality of devices and including the first device, having respective sets of functionalities that together include the plurality of constituent functionalities are then identified. Furthermore, a plurality of sub-commands is generated, each of the plurality of sub-commands for execution by a corresponding device of the two or more devices. Execution of a respective one of the plurality of sub-commands enables performance of a respective one of the plurality of constituent functionalities, and execution of the plurality of sub-commands emulates performance of the first functionality on at least the first device.
- Devices are therefore provided with the ability to emulate advanced functionalities, thereby increasing the effectiveness and user satisfaction with such devices.
- FIG. 1 is an exemplary smart home environment in accordance with some implementations.
- FIG. 2 is a block diagram illustrating an exemplary network architecture that includes a smart home network in accordance with some implementations.
- FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of FIG. 1 is integrated, in accordance with some implementations.
- FIG. 4 illustrates an abstracted functional view of the extensible devices and services platform of FIG. 3 , with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations.
- FIG. 5 is a representative operating environment in which a hub server system interacts with client devices and hubs communicatively coupled to local smart devices in accordance with some implementations.
- FIG. 6 is a block diagram illustrating a representative hub device in accordance with some implementations.
- FIG. 7 is a block diagram illustrating server system in accordance with some implementations.
- FIG. 8 is a block diagram illustrating a representative client device associated with a user account in accordance with some implementations.
- FIG. 9A is a flow diagram of a virtual device system in accordance with some implementations.
- FIG. 9B is a flow diagram of a virtual device system for a garage door system in accordance with some implementations.
- FIGS. 10A-10H are flow diagrams illustrating methods for emulating advanced functionality on devices in accordance with some implementations.
- FIG. 11 is a flow diagram illustrating a method for emulating advanced functionality on devices in accordance with some implementations.
- first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another.
- a first type of request could be termed a second type of request, and, similarly, a second type of request could be termed a first type of request, without departing from the scope of the various described implementations.
- the first type of request and the second type of request are both types of requests, but they are not the same type of request.
- the term “if” is, optionally, construed to mean “when” or “upon” or “in response to determining” or “in response to detecting” or “in accordance with a determination that,” depending on the context.
- the phrase “if it is determined” or “if [a stated condition or event] is detected” is, optionally, construed to mean “upon determining” or “in response to determining” or “upon detecting [the stated condition or event]” or “in response to detecting [the stated condition or event]” or “in accordance with a determination that [a stated condition or event] is detected,” depending on the context.
- “smart home environments” may refer to smart environments for homes such as a single-family house, but the scope of the present teachings is not so limited.
- the present teachings are also applicable, without limitation, to duplexes, townhomes, multi-unit apartment buildings, hotels, retail stores, office buildings, industrial buildings, and more generally any living space or work space.
- the customer may be the landlord with respect to purchasing the unit
- the installer may be a local apartment supervisor
- a first user may be the tenant
- a second user may again be the landlord with respect to remote control functionality.
- identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
- FIG. 1 is an exemplary smart home environment 100 in accordance with some implementations.
- Smart home environment 100 includes a structure 150 (e.g., a house, office building, garage, or mobile home) with various integrated devices. It will be appreciated that devices may also be integrated into a smart home environment 100 that does not include an entire structure 150 , such as an apartment, condominium, or office space. Further, the smart home environment 100 may control and/or be coupled to devices outside of the actual structure 150 . Indeed, several devices in the smart home environment 100 need not be physically within the structure 150 . For example, a device controlling a pool heater 114 or irrigation system 116 may be located outside of the structure 150 .
- a pool heater 114 or irrigation system 116 may be located outside of the structure 150 .
- the depicted structure 150 includes a plurality of rooms 152 , separated at least partly from each other via walls 154 .
- the walls 154 may include interior walls or exterior walls.
- Each room may further include a floor 156 and a ceiling 158 .
- Devices may be mounted on, integrated with and/or supported by a wall 154 , floor 156 or ceiling 158 .
- the integrated devices of the smart home environment 100 include intelligent, multi-sensing, network-connected devices that integrate seamlessly with each other in a smart home network (e.g., 202 FIG. 2 ) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions.
- a smart home network e.g., 202 FIG. 2
- a central server or a cloud-computing system to provide a variety of useful smart home functions.
- the smart home environment 100 may include one or more intelligent, multi-sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102 ”), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104 ”), and one or more intelligent, multi-sensing, network-connected entryway interface devices 106 (hereinafter referred to as “smart doorbells 106 ”).
- the one or more smart thermostats 102 detect ambient climate characteristics (e.g., temperature and/or humidity) and control a HVAC system 103 accordingly.
- a respective smart thermostat 102 includes an ambient temperature sensor.
- the one or more smart hazard detectors 104 may include thermal radiation sensors directed at respective heat sources (e.g., a stove, oven, other appliances, a fireplace, etc.).
- a smart hazard detector 104 in a kitchen 153 includes a thermal radiation sensor directed at a stove/oven (e.g., a smart appliance 112 ).
- a thermal radiation sensor may determine the temperature of the respective heat source (or a portion thereof) at which it is directed and may provide corresponding blackbody radiation data as output.
- the smart doorbell 106 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell functionality, announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come).
- a location e.g., an outer door
- control doorbell functionality e.g., announce a person's approach or departure via audio or visual means
- control settings on a security system e.g., to activate or deactivate the security system when occupants go and come.
- the smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as “smart wall switches 108 ”), along with one or more intelligent, multi-sensing, network-connected wall plug interfaces 110 (hereinafter referred to as “smart wall plugs 110 ”).
- the smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan.
- the smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home).
- the smart home environment 100 of FIG. 1 includes a plurality of intelligent, multi-sensing, network-connected appliances 112 (hereinafter referred to as “smart appliances 112 ”), such as refrigerators, stoves, ovens, televisions, washers, dryers, lights, stereos, intercom systems, garage-door openers, floor fans, ceiling fans, wall air conditioners, pool heaters, irrigation systems, security systems, space heaters, window AC units, motorized duct vents, and so forth.
- an appliance may announce itself to the smart home network, such as by indicating what type of appliance it is, and it may automatically integrate with the controls of the smart home.
- the smart home may also include a variety of non-communicating legacy appliances 140 , such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110 .
- the smart home environment 100 may further include a variety of partially communicating legacy appliances 142 , such as infrared (“IR”) controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by the smart hazard detectors 104 or the smart wall switches 108 .
- IR infrared
- the smart home environment 100 includes one or more network-connected cameras 118 that are configured to provide video monitoring and security in the smart home environment 100 .
- the cameras 118 may be used to determine occupancy of the structure 150 and/or particular rooms 152 in the structure 150 , and thus may act as occupancy sensors.
- video captured by the cameras 118 may be processed to identify the presence of an occupant in the structure 150 (e.g., in a particular room 152 ).
- Specific individuals may be identified based, for example, on their appearance (e.g., height, face) and/or movement (e.g., their walk/gate).
- the smart home environment 100 may additionally or alternatively include one or more other occupancy sensors (e.g., the smart doorbell 106 , smart doorlocks, touch screens, IR sensors, microphones, ambient light sensors, motion detectors, smart nightlights 170 , etc.).
- the smart home environment 100 includes radio-frequency identification (RFID) readers (e.g., in each room 152 or a portion thereof) that determine occupancy based on RFID tags located on or embedded in occupants.
- RFID readers may be integrated into the smart hazard detectors 104 .
- the smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home.
- the smart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within the smart home environment 100 and/or receives commands for controlling the pool temperature.
- the smart home environment 100 may include an irrigation monitor 116 that communicates information regarding irrigation systems within the smart home environment 100 and/or receives control information for controlling such irrigation systems.
- one or more of the smart home devices of FIG. 1 may further allow a user to interact with the device even if the user is not proximate to the device.
- a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device (e.g., a mobile phone, such as a smart phone) 166 .
- a webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user.
- the user may view a current set point temperature for a device (e.g., a stove) and adjust it using a computer.
- the user may be in the structure during this remote communication or outside the structure.
- users may control smart devices in the smart home environment 100 using a network-connected computer or portable electronic device 166 .
- some or all of the occupants e.g., individuals who live in the home
- Such registration may be made at a central server to authenticate the occupant and/or the device as being associated with the home and to give permission to the occupant to use the device to control the smart devices in the home.
- An occupant may use their registered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation.
- the occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home.
- the smart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and which devices 166 are associated with those individuals. As such, the smart home environment may “learn” who is an occupant and permit the devices 166 associated with those individuals to control the smart devices of the home.
- devices 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 and/or 118 are capable of data communications and information sharing with other smart devices, a central server or cloud-computing system, and/or other devices that are network-connected.
- Data communications may be carried out using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- the smart devices serve as wireless or wired repeaters.
- a first one of the smart devices communicates with a second one of the smart devices via a wireless router.
- the smart devices may further communicate with each other via a connection (e.g., network interface 160 ) to a network, such as the Internet 162 .
- a network such as the Internet 162 .
- the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein).
- the smart home provider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device(s).
- a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer.
- software updates are automatically sent from the smart home provider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals).
- the network interface 160 includes a conventional network device (e.g., a router), and the smart home environment 100 of FIG. 1 includes a hub device 180 that is communicatively coupled to the network(s) 162 directly or via the network interface 160 .
- the hub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connected thermostats 102 , hazard detectors 104 , doorbell 106 , wall switches 108 , wall plugs 110 , appliances 112 , cameras 118 and the like.
- Each of these smart devices optionally communicates with the hub device 180 using one or more radio communication networks available at least in the smart home environment 100 (e.g., ZigBee, Z-Wave, Insteon, Bluetooth, Wi-Fi and other radio communication networks).
- the hub device 180 and devices coupled with/to the hub device can be controlled and/or interacted with via an application running on a smart phone, household controller, laptop, tablet computer, game console or similar electronic device.
- a user of such controller application can view status of the hub device or coupled smart devices, configure the hub to interoperate with smart devices newly introduced to the home network, commission new smart devices, and adjust or view settings of connected smart devices, etc.
- the hub device extends capabilities of low capability smart device to match capabilities of the highly capable smart devices of the same type, integrates functionality of multiple different device types—even across different communication protocols, and is configured to streamline adding of new devices and commissioning of the hub.
- the network interface 160 includes a conventional network device (e.g., a router), and the smart home environment 100 of FIG. 1 includes a hub device 180 that is communicatively coupled to the network(s) 162 directly or via the network interface 160 .
- the hub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connected thermostats 102 , hazard detectors 104 , doorbell 106 , wall switches 108 , wall plugs 110 , appliances 112 , cameras 118 and the like.
- Each of these smart devices optionally communicates with the hub device 180 using a radio communication network available at least in the smart home environment 100 .
- FIG. 2 is a block diagram illustrating an exemplary network architecture 200 that includes a smart home network 202 in accordance with some implementations.
- the smart devices 204 in the smart home environment 100 e.g., devices 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 and/or 118
- hub device 180 to create a mesh network in smart home network 202 .
- one or more smart devices 204 in the smart home network 202 operate as a smart home controller.
- hub device 180 operates as the smart home controller.
- a smart home controller has more computing power than other smart devices.
- a smart home controller processes inputs (e.g., from smart devices 204 , electronic device 166 , and/or smart home provider server system 164 ) and sends commands (e.g., to smart devices 204 in the smart home network 202 ) to control operation of the smart home environment 100 .
- some of the smart devices 204 in the smart home network 202 e.g., in the mesh network
- are “spokesman” nodes e.g., 204 - 1
- others are “low-powered” nodes (e.g., 204 - 9 ).
- Some of the smart devices in the smart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind the walls 154 of the smart home environment.
- the smart devices that have a regular and reliable power source are referred to as “spokesman” nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in the smart home environment 100 , as well as with the smart home provider server system 164 .
- one or more “spokesman” nodes operate as a smart home controller.
- the devices that are battery powered are the “low-power” nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6LoWPAN, etc.
- some low-power nodes are incapable of bidirectional communication. These low-power nodes send messages, but they are unable to “listen”. Thus, other devices in the smart home environment 100 , such as the spokesman nodes, cannot send information to these low-power nodes.
- some low-power nodes are capable of only a limited bidirectional communication. For example, other devices are able to communicate with the low-power nodes only during a certain time period.
- the smart devices serve as low-power and spokesman nodes to create a mesh network in the smart home environment 100 .
- individual low-power nodes in the smart home environment regularly send out messages regarding what they are sensing, and the other low-powered nodes in the smart home environment—in addition to sending out their own messages—forward the messages, thereby causing the messages to travel from node to node (i.e., device to device) throughout the smart home network 202 .
- the spokesman nodes in the smart home network 202 which are able to communicate using a relatively high-power communication protocol, such as IEEE 802.11, are able to switch to a relatively low-power communication protocol, such as IEEE 802.15.4, to receive these messages, translate the messages to other communication protocols, and send the translated messages to other spokesman nodes and/or the smart home provider server system 164 (using, e.g., the relatively high-power communication protocol).
- a relatively high-power communication protocol such as IEEE 802.11
- a relatively low-power communication protocol such as IEEE 802.15.4
- the mesh network enables the smart home provider server system 164 to regularly receive data from most or all of the smart devices in the home, make inferences based on the data, facilitate state synchronization across devices within and outside of the smart home network 202 , and send commands back to one or more of the smart devices to perform tasks in the smart home environment.
- the spokesman nodes and some of the low-powered nodes are capable of “listening.” Accordingly, users, other devices, and/or the smart home provider server system 164 may communicate control commands to the low-powered nodes.
- a user may use the electronic device 166 (e.g., a smart phone) to send commands over the Internet to the smart home provider server system 164 , which then relays the commands to one or more spokesman nodes in the smart home network 202 .
- the spokesman nodes may use a low-power protocol to communicate the commands to the low-power nodes throughout the smart home network 202 , as well as to other spokesman nodes that did not receive the commands directly from the smart home provider server system 164 .
- a smart nightlight 170 ( FIG. 1 ), which is an example of a smart device 204 , is a low-power node.
- the smart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room.
- the smart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room. In other implementations, the smart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark.
- the smart nightlight 170 includes a low-power wireless communication chip (e.g., a ZigBee chip) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room.
- these messages may be sent wirelessly (e.g., using the mesh network) from node to node (i.e., smart device to smart device) within the smart home network 202 as well as over the Internet 162 to the smart home provider server system 164 .
- low-power nodes include battery-operated versions of the smart hazard detectors 104 .
- These smart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors (e.g., thermal radiation sensors), carbon monoxide/dioxide sensors, occupancy/motion sensors, ambient light sensors, ambient temperature sensors, humidity sensors, and the like.
- smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the smart home provider server system 164 , such as by using the mesh network as described above.
- Examples of spokesman nodes include smart doorbells 106 , smart thermostats 102 , smart wall switches 108 , and smart wall plugs 110 . These devices 102 , 106 , 108 , and 110 are often located near and connected to a reliable power source, and therefore may include more power-consuming components, such as one or more communication chips capable of bidirectional communication in a variety of protocols.
- the smart home environment 100 includes service robots 168 ( FIG. 1 ) that are configured to carry out, in an autonomous manner, any of a variety of household tasks.
- the smart home environment 100 of FIG. 1 includes a hub device 180 that is communicatively coupled to the network(s) 162 directly or via the network interface 160 .
- the hub device 180 is further communicatively coupled to one or more of the smart devices using a radio communication network that is available at least in the smart home environment 100 .
- Communication protocols used by the radio communication network include, but are not limited to, ZigBee, Z-Wave, Insteon, EuOcean, Thread, OSIAN, Bluetooth Low Energy and the like.
- the hub device 180 not only converts the data received from each smart device to meet the data format requirements of the network interface 160 or the network(s) 162 , but also converts information received from the network interface 160 or the network(s) 162 to meet the data format requirements of the respective communication protocol associated with a targeted smart device. In some implementations, in addition to data format conversion, the hub device 180 further processes the data received from the smart devices or information received from the network interface 160 or the network(s) 162 preliminary. It is also noted that in some implementations, the network interface 160 and the hub device 180 are integrated to one network device.
- Functionality described herein is representative of particular implementations of smart devices, control application(s) running on representative electronic device(s) (such as a smart phone), hub device(s) 180 , and server(s) coupled to hub device(s) via the Internet or other Wide Area Network. All or a portion of this functionality and associated operations can be performed by any elements of the described system—for example, all or a portion of the functionality described herein as being performed by an implementation of the hub device can be performed, in different system implementations, in whole or in part on the server, one or more connected smart devices and/or the control application, or different combinations thereof.
- FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of FIG. 1 is integrated, in accordance with some implementations.
- the extensible devices and services platform 300 includes smart home provider server system 164 .
- Each of the intelligent, network-connected devices described with reference to FIG. 1 e.g., 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 and 118 , identified simply as “devices” in FIGS. 2-4 ) may communicate with the smart home provider server system 164 .
- a connection to the Internet 162 may be established either directly (for example, using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub, or an intelligent, dedicated whole-home controller node), or through any combination thereof.
- a network interface 160 e.g., a router, switch, gateway, hub, or an intelligent, dedicated whole-home controller node
- the devices and services platform 300 communicates with and collects data from the smart devices of the smart home environment 100 .
- the devices and services platform 300 communicates with and collects data from a plurality of smart home environments across the world.
- the smart home provider server system 164 collects home data 302 from the devices of one or more smart home environments 100 , where the devices may routinely transmit home data or may transmit home data in specific instances (e.g., when a device queries the home data 302 ).
- Exemplary collected home data 302 includes, without limitation, power consumption data, blackbody radiation data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc.
- the smart home provider server system 164 provides one or more services 304 to smart homes and/or third parties.
- Exemplary services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on collected home data 302 ) to improve performance, reduce utility cost, increase safety, etc.
- data associated with the services 304 is stored at the smart home provider server system 164 , and the smart home provider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.).
- the extensible devices and services platform 300 includes a processing engine 306 , which may be concentrated at a single server or distributed among several different computing entities without limitation.
- the processing engine 306 includes engines configured to receive data from the devices of smart home environments 100 (e.g., via the Internet 162 and/or a network interface 160 ), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis.
- the analyzed data is stored as derived home data 308 .
- Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a webpage to a user of the device, or to other non-smart device entities.
- use statistics, use statistics relative to use of other devices, use patterns, and/or statistics summarizing sensor readings are generated by the processing engine 306 and transmitted.
- the results or statistics may be provided via the Internet 162 .
- the processing engine 306 may be configured and programmed to derive a variety of useful information from the home data 302 .
- a single server may include one or more processing engines.
- the derived home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes.
- processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics).
- the devices and services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such as charities 314 , governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data), utility companies 324 , and other third parties.
- the APIs 310 are coupled to and permit third-party systems to communicate with the smart home provider server system 164 , including the services 304 , the processing engine 306 , the home data 302 , and the derived home data 308 .
- the APIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart home provider server system 164 , as well as to receive dynamic updates to the home data 302 and the derived home data 308 .
- third parties may develop programs and/or applications, such as web applications or mobile applications, that integrate with the smart home provider server system 164 to provide services and information to users.
- programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks.
- FIG. 4 illustrates an abstracted functional view 400 of the extensible devices and services platform 300 of FIG. 3 , with reference to a processing engine 306 as well as devices of the smart home environment, in accordance with some implementations.
- the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS).
- DC data consumer 402
- DS data source 404
- SC services consumer 406
- SS services source 408
- the extensible devices and services platform 300 may also be configured to use the large amount of data that is generated by these devices.
- the extensible devices and services platform 300 may be directed to “repurpose” that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality).
- FIG. 4 shows processing engine 306 as including a number of processing paradigms 410 .
- processing engine 306 includes a managed services paradigm 410 a that monitors and manages primary or secondary device functions.
- the device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, providing a heat-source alert, and/or alerting a user of a current or predicted future event or characteristic.
- processing engine 306 includes an advertising/communication paradigm 410 b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user.
- processing engine 306 includes a social paradigm 410 c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to their smart thermostat 102 to reduce their power bills.
- characteristics e.g., demographic information
- processing engine 306 includes a social paradigm 410 c that uses
- processing engine 306 includes a challenges/rules/compliance/rewards paradigm 410 d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned.
- the challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing the occurrence of heat-source alerts) (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc.
- one challenge may involve participants turning down their thermostat by one degree for one week.
- Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc.
- an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms.
- the devices in the room having occupancy sensors may send updates to the owner when the room is accessed.
- processing engine 306 integrates or otherwise uses extrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.
- Extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth.
- entities e.g., public-service entities such as an emergency-response team, the police or a hospital
- FIG. 5 illustrates a representative operating environment 500 in which a hub server system 508 provides data processing for monitoring and facilitating review of motion events in video streams captured by video cameras 118 .
- the hub server system 508 receives video data from video sources 522 (including cameras 118 ) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or the smart home environments 100 of FIG. 1 ).
- Each video source 522 may be bound to one or more reviewer accounts, and the hub server system 508 provides video monitoring data for the video source 522 to client devices 504 associated with the reviewer accounts.
- the portable electronic device 166 is an example of the client device 504 .
- the smart home provider server system 164 or a component thereof serves as the hub server system 508 .
- the hub server system 508 is a dedicated video processing server that provides video processing services to video sources and client devices 504 independent of other services provided by the hub server system 508 .
- each of the video sources 522 includes one or more video cameras 118 that capture video and send the captured video to the hub server system 508 substantially in real-time.
- each of the video sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one or more cameras 118 and the hub server system 508 .
- the controller device receives the video data from the one or more cameras 118 , optionally, performs some preliminary processing on the video data, and sends the video data to the hub server system 508 on behalf of the one or more cameras 118 substantially in real-time.
- each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or the hub server system 508 .
- each of the client devices 504 includes a client-side module 502 .
- the client-side module 502 communicates with a server-side module 506 executed on the hub server system 508 through the one or more networks 162 .
- the client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the server-side module 506 .
- the server-side module 506 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on a respective client device 504 .
- the server-side module 506 also provides server-side functionalities for video processing and camera control for any number of the video sources 522 , including any number of control devices and the cameras 118 .
- the server-side module 506 includes one or more processors 512 , a video storage database 514 , device and account databases 516 , an I/O interface to one or more client devices 518 , and an I/O interface to one or more video sources 520 .
- the I/O interface to one or more clients 518 facilitates the client-facing input and output processing for the server-side module 506 .
- the databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account.
- the I/O interface to one or more video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one or more cameras 118 and associated controller devices).
- the video storage database 514 stores raw video data received from the video sources 522 , as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account.
- Examples of a representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices.
- PDA personal digital assistant
- EGPS enhanced general packet radio service
- POS point-of-sale
- Examples of the one or more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet.
- the one or more networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol.
- USB Universal Serial Bus
- FIREWIRE Long Term Evolution
- LTE Long Term Evolution
- GSM Global System for Mobile Communications
- EDGE Enhanced Data GSM Environment
- CDMA code division multiple access
- TDMA time division multiple access
- Bluetooth Wi-Fi
- Wi-Fi voice over Internet Protocol
- Wi-MAX wireless wide area network
- the hub server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, the hub server system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of the hub server system 508 . In some implementations, the hub server system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices.
- third party service providers e.g., third-party cloud service providers
- the server-client environment 500 shown in FIG. 1 includes both a client-side portion (e.g., the client-side module 502 ) and a server-side portion (e.g., the server-side module 506 ).
- the division of functionalities between the client and server portions of operating environment 500 can vary in different implementations.
- the division of functionalities between the video source 522 and the hub server system 508 can vary in different implementations.
- client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the hub server system 508 ).
- a respective one of the video sources 522 is a simple video capturing device that continuously captures and streams video data to the hub server system 508 without no or limited local preliminary processing on the video data.
- the corresponding actions performed by the client device 504 and/or the video sources 522 would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be performed by the hub server system 508 , the client device 504 , and the video sources 522 cooperatively.
- operating environment 500 that involves the hub server system 508 , the video sources 522 and the video cameras 118 is merely an example. Many aspects of operating environment 500 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like).
- smart thermostats 102 e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like.
- the electronic devices, the client devices or the server system communicate with each other using the one or more communication networks 162 .
- two or more devices e.g., the network interface device 160 , the hub device 180 , and the client devices 504 - m
- the Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology.
- This smart home environment further includes one or more other radio communication networks 162 B via which at least some of the electronic devices 522 - m exchange data with the hub device 160 .
- some of the electronic devices 522 - m communicate with the network interface device 160 directly via the same sub-network 162 A that couples devices 160 , 180 and 504 - m .
- both the client device 504 - m and the electronic devices 522 - n communicate directly via the network(s) 162 without passing the network interface device 160 or the hub device 180 .
- the network interface device 160 and the hub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device 522 - n .
- the network interface device 160 and the hub device 180 optionally communicate with each other via a sub-network 162 A.
- a provisioning process is required to establish the communication between the network interface device 160 and the hub device 180 via the sub-network 162 A.
- a new hub device 180 has to receive a network identification and a network password associated with the sub-network 162 A, such that the hub device 180 could communicate device information of the hub device 180 to the server 508 and allow the server 508 to associate the hub device 180 with one or more user accounts.
- At least an optical link is formed between the client device 504 - m and the hub device 180 .
- the client device 504 - m is configured to generate optical data (e.g., light flashes) coded with network information and user account information.
- the hub device 180 includes a light sensor that captures the optical data and recovers the network and user account information. Then, the hub device 180 uses the recovered network and user account information to access the sub-network 162 A, the network(s) 162 and the server 508 and associate with a user account on the server 508 .
- FIG. 6 is a block diagram illustrating a representative hub device 180 in accordance with some implementations.
- the hub device 180 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 602 , one or more communication interfaces 604 , memory 606 , radios 640 , light sensor 650 , and one or more communication buses 508 for interconnecting these components (sometimes called a chipset).
- the electronic device 602 includes one or more input devices 610 such as one or more buttons for receiving input.
- the electronic device 602 includes one or more output devices 612 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, etc. Furthermore, some the electronic device 602 uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, the electronic device 602 includes a location detection device 614 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the electronic device 602 .
- GPS global positioning satellite
- the radios 640 enables one or more radio communication networks in the smart home environments, and allows a hub device to communicate with smart devices.
- the radios 640 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- the light sensor 650 senses light flashes from a device that is placed in proximity to the light sensor 650 .
- Communication interfaces 604 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 606 or alternatively the non-volatile memory within memory 606 , includes a non-transitory computer readable storage medium.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices (e.g., the memory of any of the smart devices in smart home environment 100 , FIG. 1 ), and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 606 optionally, stores a subset of the modules and data structures identified above.
- memory 606 optionally, stores additional modules and data structures not described above.
- FIG. 7 is a block diagram illustrating the server system 508 in accordance with some implementations.
- the server system 508 typically, includes one or more processing units (CPUs) 702 , one or more network interfaces 704 (e.g., including I/O interface to one or more clients 86 and I/O interface to one or more the electronic devices), memory 706 , and one or more communication buses 708 for interconnecting these components (sometimes called a chipset).
- Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 706 optionally, includes one or more storage devices remotely located from one or more processing units 702 .
- Memory 706 or alternatively the non-volatile memory within memory 706 , includes a non-transitory computer readable storage medium.
- memory 706 or the non-transitory computer readable storage medium of memory 706 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 706 optionally, stores a subset of the modules and data structures identified above.
- memory 706 optionally, stores additional modules and data structures not described above.
- FIG. 8 is a block diagram illustrating a representative client device 504 associated with a user account in accordance with some implementations.
- the client device 604 typically, includes one or more processing units (CPUs) 802 , one or more network interfaces 804 , memory 806 , and one or more communication buses 808 for interconnecting these components (sometimes called a chipset).
- the client device also includes a user interface 810 , a flash light 880 , and one or more built-in sensors 890 (e.g., accelerometer and gyroscope).
- User interface 810 includes one or more output devices 812 that enable presentation of media content, including one or more speakers and/or one or more visual displays.
- output devices 812 e.g., a visual display
- User interface 810 also includes one or more input devices 814 , including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- input devices 814 including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- the client devices use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the client device includes one or more cameras, scanners, or photo sensor units for capturing images, for example, of graphic series codes printed on the electronic devices.
- the client device includes a location detection device 815 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the client device.
- Memory 806 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 806 optionally, includes one or more storage devices remotely located from one or more processing units 802 .
- Memory 806 or alternatively the non-volatile memory within memory 806 , includes a non-transitory computer readable storage medium.
- memory 806 or the non-transitory computer readable storage medium of memory 806 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 806 optionally, stores a subset of the modules and data structures identified above.
- memory 806 optionally, stores additional modules and data structures not described above.
- At least some of the functions of the server system 508 are performed by the client device 604 , and the corresponding sub-modules of these functions may be located within the client device rather than server system 508 . In some implementations, at least some of the functions of the client device are performed by the server system 508 , and the corresponding sub-modules of these functions may be located within the server system 508 rather than client device 604 .
- the client device 604 and the server system 508 shown in FIGS. 7 and 8 , respectively, are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations.
- thermostat type may only enable adjustments to temperature
- other types may include advanced features such as device scheduling (e.g., running HVAC system at a particular time each day).
- device scheduling e.g., running HVAC system at a particular time each day.
- Some implementations enable the capabilities of less capable devices to be extended to match or even exceed those of more capable devices of the same type through the use smart programming in the hub device 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) to which the connected device is coupled and controlled.
- a hub device (or remote servers/cloud computers, other devices in the smart home environment, etc.) intercepts advanced commands and emulates the advanced capability, using a combination of simple capabilities, to provide advanced functionality from/to less sophisticated devices.
- the hub presents, to a mobile device (e.g., a user controller electronic device 166 , FIG. 1 ), an interface for a given device type that contains the capabilities of the most capable particular device of that type (even if the actual device provides less than the full set of those capabilities).
- a mobile device e.g., a user controller electronic device 166 , FIG. 1
- an interface for a given device type that contains the capabilities of the most capable particular device of that type (even if the actual device provides less than the full set of those capabilities).
- a device description maintained in the hub 180 is abstracted to the lowest common denominator of capabilities of available devices within its category.
- a fully capable device interface is presented by the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) and, in some implementations, reflected in a user interface of a user controller electronic device 166 ( FIG. 1 ) regardless of its actual capability.
- a hub or remote servers/cloud computers, other devices in the smart home environment, etc. provides extra logic to perform and emulate the same task. As described below, this is accomplished through device configurations that include fully emulated functionality, but which can be overridden to call the device directly when it supports the capability. For example, as shown in FIG.
- memory 606 of hub device 180 includes several modules for emulating advanced functionality (e.g., high-level sensor feature module 626 and its sub-modules, which in some implementations work in combination with other modules of memory 606 , such as hub communication module 618 and/or radio communication module 619 , to send commands to connected devices).
- the server system shown in FIG. 7 also includes analogous modules for emulating advanced functionality (e.g., high-level device feature module 7262 , FIG. 7 ).
- thermostats with no scheduling capabilities are provided by the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) with the ability to run on a schedule.
- the hub or remote servers/cloud computers, other devices in the smart home environment, etc. intercepts an advanced command from a user device (e.g., electronic device 166 , FIG. 1 ).
- the advanced command includes setting a schedule for a thermostat, such as instructions for turning the air conditioner on during weekdays only.
- the hub emulates the advanced functionality by translating the advanced command into a series of basic commands for adjusting the thermostat, but doing so in accordance with a schedule (where the schedule is stored and maintained in the hub, remote servers/cloud computers, or other devices in the smart home environment).
- the hub maintains the schedule determined by the advanced command, and sends commands for turning the thermostat on or off on the appropriate days.
- the hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) therefore emulates the advanced functionality of the advanced command by utilizing logic for parsing the advanced command, and sending a series of basic instructions to the less sophisticated thermostat device.
- This example is described in detail with respect to the method 1000 -A in FIGS. 10A-10B .
- certain dimmer switches have an advanced functionality for continuously brightening/diming a light source, useful, for example, when a holding a button on a remote.
- the hub or remote servers/cloud computers, other devices in the smart home environment, etc. implements a timer to manually increment the dim value over time to emulate the advanced functionality. This example is described in detail with respect to the method 1000 -B in FIG. 10C .
- Example logic for implementing such functionality of advanced dimmers is provided below.
- the advanced capability as implemented in the hub 180 commands a light source to continuously brighten until it receives a command to stop (e.g., to be used while a user holds a “brighten” button on a remote).
- the top trait/interface describes the device methods which must be defined by the physical device mappings (note here that only setLevel must be implemented). It includes full implementations of the adjust capability. Also shown are two physical implementations: the first for a capable device which maps the complex capability to the physical devices capability, and the second for physically implementing setLevel and using the internal implementation to create the same capability.
- Example code (e.g., representing source code for a main processor on the hub (e.g., CPU(s) 602 of hub device 180 ) and written in Scala programming language):
- location and time information are used to calculate day/night hours and enable lights to run only during nighttime hours. More specifically, location and time are obtained by the hub (e.g., sunrise/sunset dependent device control module 6264 , FIG. 6 ) (or remote servers/cloud computers, other devices in the smart home environment, etc.), which the hub then uses to calculate corresponding day/night hours. The hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) then sends commands according to the calculations such that a light device (e.g., connected to smart wall plug 110 ) is run only during night time hours, thereby achieving advanced functionality that the light device does not otherwise have.
- a light device e.g., connected to smart wall plug 110
- a device type profile contains minimum functionalities required of the various simple devices. If the minimum requirements are met, a composite virtual device emulates the functionality of the complex device using the various simple capabilities.
- a garage door minimally requires: (i) a mechanism to determine the current position of the door (e.g., mechanism for determining whether the door closed) and (ii) a temporary contact relay to activate the door.
- a mechanism to determine the current position of the door e.g., mechanism for determining whether the door closed
- a temporary contact relay to activate the door.
- a user mounts a simple thermostat conveniently in a hallway, but also wants to use the temperature from a different room to run it.
- a temperature sensor may be used in the room with the desired temperature, while still allowing the thermostat unit to be positioned in the hallway as desired. This example is described in detail with respect to the method 1000 -D in FIG. 10F .
- FIG. 9A is a flow diagram of a virtual device system in accordance with some implementations.
- the virtual device system implementation in FIG. 9A enables advanced functionalities using one or a combination end devices (e.g., simple end devices 926 - 1 , 926 - 2 , . . . 926 -N, basic end device 922 , mid-level end device 924 , high-level end device 904 , etc.) having varying degrees of capabilities and functionalities.
- end devices e.g., simple end devices 926 - 1 , 926 - 2 , . . . 926 -N, basic end device 922 , mid-level end device 924 , high-level end device 904 , etc.
- a device interface 900 (“Device Complete Interface Definition”) contains the complete fully functional interface definition of a particular device type (e.g., garage door system, thermostat, light system, etc.) (e.g., stored and managed by high-level device feature module 626 or a sub-module thereof, FIG. 6 ). If a fully high-level end device 904 is added, it implements a thin interface 902 mapping all of the complete capabilities from the device interface 900 to the physical high-level end device 904 (e.g., garage door system that tracks progress of open/close door operation, thermostat with advanced scheduling capabilities, a light dimmer, etc.).
- a fully high-level end device 904 implements a thin interface 902 mapping all of the complete capabilities from the device interface 900 to the physical high-level end device 904 (e.g., garage door system that tracks progress of open/close door operation, thermostat with advanced scheduling capabilities, a light dimmer, etc.).
- a less capable, basic device 922 is added, an implementation of the complex capabilities (e.g., implemented interface 906 ) mapped to simpler capabilities is inserted below the device interface 900 , and the basic device 922 is mapped to device interface 900 instead using a thin interface 916 (e.g., a basic thermostat with temperature setting controls, light having an on/off switch, etc.).
- a device with some complex capabilities e.g., mid-level end device 924
- an additional virtual device layer 908 (“Virtual Device Definition”) is added below the implemented interface 906 to map functions to the various independent components.
- Multiple device layers 920 - 1 , 920 - 2 , . . . 920 -N can be added for corresponding simple end devices 926 - 1 , 926 - 2 , . . . 926 -N using respective thin interfaces 920 - 1 , 920 - 2 , . . . 920 -N for the end devices.
- this is realized through an object oriented hierarchy using inheritance and traits/mix-ins.
- FIG. 9B is a flow diagram of a virtual device system specifically for a garage door system in accordance with some implementations.
- a device interface 950 (“Garage Door Complete Interface Definition”) contains the complete fully functional interface definition of a particular device type (e.g., stored and managed by high-level device feature module 626 or a sub-module thereof, FIG. 6 ). If a fully capable end device is added, it implements a thin interface 952 mapping all of the complete capabilities from the device interface 950 to the physical capable end device 954 (e.g., a high-end garage door opener system). If a less capable, basic device 974 is added, an implementation of the complex capabilities (e.g., implemented interface 956 ) mapped to simpler capabilities is inserted below the device interface 950 , and the basic device 974 is mapped to device interface 950 instead using a thin interface 964 .
- the complex capabilities e.g., implemented interface 956
- a device with some complex capabilities can selectively implement interfaces of both the top level interface definition (e.g., device interface 950 ) and the implemented interface 956 using a thin interface 968 .
- an additional virtual device layer 958 (“Garage Door Virtual Device Definition”) is added below the implemented interface 956 to map functions to the various independent components.
- a device layer 960 for a relay maps functions to the relay using a thin interface 970
- a device layer 962 for an open/close sensor maps functions to the open/close sensor using a thin interface 972 .
- This example is described in detail with respect to the method 1000 -C in FIGS. 10D-10E .
- FIGS. 10A-10H are flow diagrams illustrating methods 1000 -A through 1000 -F for emulating advanced functionality on devices, in accordance with some implementations.
- the various implementations of the methods 1000 -A through 1000 -F correspond to the various techniques for enabling high-level features to devices with lower levels of functionality described above.
- the methods are performed by one or more electronic devices of one or more systems (e.g., devices of a smart home environment 100 , FIG. 1 ; smart devices 204 and/or hub device 180 of smart home network 202 , FIG. 2 ; client devices 504 , FIG. 5 ; etc.), a server system (e.g., smart home provider server system 164 of FIGS. 1 and 2 , hub server system 508 of FIG.
- a server system e.g., smart home provider server system 164 of FIGS. 1 and 2 , hub server system 508 of FIG.
- FIGS. 10A-10H correspond to instructions stored in a computer memory or other computer-readable storage medium (e.g., memory 606 of the hub device 180 ).
- the first device includes ( 1002 ) one or more processors and memory storing one or more programs for execution by one or more processors.
- the first device is ( 1004 ) a hub device (e.g., hub device 180 ) communicably coupled to at least a second device (e.g., thermostat 102 , FIG. 1 ).
- the first device is ( 1006 ) a remote server (e.g., smart home provider server system 164 ) distinct from the second device.
- the first device receives ( 1008 ) (e.g., from a client device displaying a user interface for controlling smart devices in a smart home environment) a first command for performing a first functionality on at least the second device, the first functionality comprising a plurality of constituent functionalities.
- the second device is not configured to execute the first command.
- the first functionality is an advanced feature for scheduling operation of a thermostat for different times and days of the week, the second device being a basic thermostat that does not provide the advanced scheduling functionality and can only perform basic temperature setting capabilities. Different functionalities and the devices on which such functionalities are emulated are described in greater detail below.
- the second device is ( 1010 ) a smart plug device (e.g., smart wall plug 110 ) that provides power to a coupled device.
- the second device is ( 1012 ) a thermostat device (e.g., thermostat 102 ).
- the second device is ( 1014 ) a lock device (e.g., a smart doorlock).
- the first functionality is ( 1016 ) for operating the second device in accordance with a predefined schedule (e.g., scheduling operation of a thermostat for different times and days of the week).
- a predefined schedule e.g., scheduling operation of a thermostat for different times and days of the week.
- the predefined schedule is specified with respect to days of the week. Additionally and/or alternatively, the predefined schedule is specified with respect to hours for each day of the week.
- the first functionality is for operating the second device in accordance with detection of a sunrise or sunset condition in a local area in which the second device is situated (e.g., closing a smart curtain in response to detecting the sun setting).
- the first device translates ( 1018 ) the first command into a plurality of sub-commands, the plurality of sub-commands for execution by respective devices including at least the second device.
- Each of the plurality of sub-commands when executed, performs a respective constituent functionality of the plurality of constituent functionalities. Execution of any one of the plurality of sub-commands individually does not perform the entire first functionality.
- the plurality of constituent functionalities for the first functionality includes ( 1020 ) a first constituent functionality for enabling or disabling an operation of the second device. Execution of a first one of the plurality of sub-commands by the second device performs the first constituent functionality. For example, in some implementations, enabling or disabling the operation includes ( 1022 ) turning on or off the cooling or heating functionality of the thermostat device. Furthermore, in some implementations, enabling or disabling the operation includes ( 1024 ) permitting or denying the locking or unlocking of the lock device. In some implementations, the first sub-command, when executed, causes the lock device to replace an existing list of valid access codes with a new list of valid access codes.
- the plurality of constituent functionalities includes ( 1026 ) a second constituent functionality for sending commands, including the first sub-command, in accordance with the predefined schedule.
- Execution of a second one of the plurality of sub-commands by the first device performs the second constituent functionality, the first device being configured with scheduling capabilities.
- execution of the second sub-command results in the first sub-command (e.g., command for turning on/off a cooling functionality of a thermostat device) being sent to a device based on a schedule.
- the plurality of constituent functionalities further includes a third constituent functionality for detecting the sunrise or sunset conditions, wherein execution of a third one of the plurality of sub-commands performs the third constituent functionality.
- the second constituent functionality is for sending the commands, including the first sub-command, in accordance with detection of the sunrise or sunset conditions.
- the first device manages ( 1028 ) execution of the plurality of sub-commands by the respective devices, wherein execution of the plurality of sub-commands by the respective devices emulates performance of the first functionality on at least the second device.
- managing execution includes ( 1030 ) executing the second sub-command on the first device, including ( 1032 ) sending the first sub-command to the second device in accordance with the predefined schedule.
- a first device is a hub device that includes scheduling capabilities (e.g., sending commands based on a predefined schedule)
- execution of the second sub-command by the hub device results in the first sub-command (e.g., command for turning on/off a cooling functionality of a thermostat device) being sent to a thermostat device in accordance with a schedule.
- the thermostat device in this example does not itself have scheduling functionalities built-in, managing execution of the first and second sub-commands effectively emulates such functionality on the thermostat device.
- executing the second sub-command further includes ( 1034 ) sending the first sub-command to the second device upon detection of the sunrise or sunset conditions (e.g., sending a command to a smart device to automatically close window blinds at sunset).
- the first device receives ( 1008 ) a first command, translates ( 1018 ) the first command into a plurality of sub-commands, and manages ( 1028 ) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000 -A through 1000 -F in FIGS. 10A-10H .
- the second device is ( 1036 ) a lamp device.
- the first functionality is ( 1038 ) for continuously dimming or brightening the lamp device.
- the plurality of constituent functionalities includes ( 1040 ) a first constituent functionality for setting a dim value of the lamp device.
- the first constituent functionality corresponds to a plurality of first sub-commands, of the plurality of sub-commands, to be executed by the lamp device.
- Each of the plurality of first sub-commands corresponds to a respective dim value, of a range of dim values for the lamp device, that is set upon execution of a respective first-subcommand.
- each of the first sub-commands corresponds to a different brightness/dim value, and the lamp device is capable of executing the sub-commands (and therefore setting a brightness or dim value) one at a time.
- the plurality of constituent functionalities includes ( 1042 ) a second constituent functionality for incrementally sending commands, including the plurality of first sub-commands, in accordance with a timer.
- Execution of a second one of the plurality of sub-commands by the first device performs the second constituent functionality.
- execution of the second sub-command results in the plurality of first sub-command (e.g., commands for setting a lamp device at different specified dim values) being sent to a device based on a timer (e.g., a different first sub-command being sent every 0.2 ms).
- managing (step 1028 ) execution of the plurality of sub-commands by the respective devices includes ( 1044 ) executing the second sub-command on the first device, which includes sending the plurality of first sub-commands one at a time based on the timer, in order of either decreasing dim value for continuously dimming the lamp device, or increasing dim value for continuously brightening the lamp device.
- a first device is a remote server with timing capabilities (e.g., sending sub-commands at specified intervals of time)
- execution of the second sub-command by the remote server results in the plurality of first sub-commands (e.g., for setting a lamp device at different specified dim values) being sent to the lamp device either in order of decreasing or increasing dim value to emulate the functionality of a light dimmer.
- the lamp device in this example does not itself have dimming capabilities built-in, managing execution of the plurality of first sub-commands and the second sub-command effectively emulates such functionality on the lamp device.
- the first device receives ( 1008 ) a first command, translates ( 1018 ) the first command into a plurality of sub-commands, and manages ( 1028 ) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000 -A through 1000 -F in FIGS. 10A-10H .
- the second device is ( 1046 ) a garage door opener coupled to a garage door.
- the first functionality is ( 1048 ) for providing an indication of a percentage by which a garage door operation is complete (e.g., displaying a progress indicator on a client device user interface), wherein a garage door operation for opening the garage door is associated with a first completion time for opening the garage door, and a garage door operation for closing the garage door is associated with a second completion time for closing the garage door.
- the plurality of constituent functionalities includes ( 1050 ) a first constituent functionality for opening or closing the garage door.
- Execution of a first one of the plurality of sub-commands by the garage door opener performs the first constituent functionality.
- execution of the first sub-command by the garage door opener e.g., a motor
- the plurality of constituent functionalities includes ( 1052 ) a second constituent functionality for identifying an elapsed time since commencing a garage door operation.
- Execution of a second one of the plurality of sub-commands by a timer device performs the second constituent functionality.
- execution of the second sub-command by the timer device causes the timer device to output (e.g., and send back to the device that transmitted the second sub-command to the timer device) a reading that indicates an elapsed time since beginning a current garage door operation.
- the plurality of constituent functionalities includes ( 1054 ) a third constituent functionality for determining whether the garage door is fully opened or fully closed.
- Execution of a third one of the plurality of sub-commands by a sensor device performs the third constituent functionality.
- execution of the third sub-command by the sensor device causes the sensor to output (e.g., and send back to the device that transmitted the third sub-command to the sensor device) a reading that indicates whether the garage door is partially/fully open or closed.
- managing (step 1028 ) execution of the plurality of sub-commands by the respective devices includes, for a garage door operation for opening the garage door, and until receiving a determination that the garage door is fully open ( 1056 ): determining ( 1058 ) the percentage by which the garage door operation is complete by dividing the elapsed time by the first completion time; and providing ( 1060 ) the indication of the determined percentage.
- the first sub-command for opening a garage door is first sent to the garage door opener.
- the elapsed time is obtained by continuously sending (e.g., at predefined intervals) the second sub-command to the timer device thereafter until the garage door is fully opened, which is determined by continuously sending (e.g., at predefined intervals) the third sub-command to the sensor device until an indication that the garage door is fully open is returned.
- the elapsed time readings obtained from the timer device are used in conjunction with the first completion time (e.g., for opening the garage door) to determine the percentage by which a garage door operation is complete.
- managing (step 1028 ) execution of the plurality of sub-commands by the respective devices includes, for a garage door operation for closing the garage door, and until receiving a determination that the garage door is fully closed ( 1062 ): determining ( 1064 ) the percentage by which the garage door operation is complete by dividing the elapsed time by the second completion time; and providing ( 1066 ) the indication of the determined percentage.
- the first sub-command for closing a garage door is first sent to the garage door opener.
- the elapsed time is obtained by continuously sending (e.g., at predefined intervals) the second sub-command to the timer device thereafter until the garage door is fully closed, which is determined by continuously sending (e.g., at predefined intervals) the third sub-command to the sensor device until an indication that the garage door is fully open is returned.
- the elapsed time readings obtained from the timer device is used in conjunction with the second completion time (e.g., for closing the garage door) to determine the percentage by which a garage door operation is complete.
- the first device receives ( 1008 ) a first command, translates ( 1018 ) the first command into a plurality of sub-commands, and manages ( 1028 ) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000 -A through 1000 -F in FIGS. 10A-10H .
- the second device is ( 1068 ) a thermostat device.
- the first functionality is ( 1070 ) for operating the thermostat device in accordance with temperature readings obtained from a distinct sensor device located remotely from the thermostat device.
- the distinct sensor device may be a device equipped with temperature sensors (e.g., a hazard detector 104 ) that is located in a different room from the thermostat.
- the plurality of constituent functionalities includes ( 1072 ) a first constituent functionality for turning the thermostat device on or off (e.g., command for turning on/off a cooling/heating functionality of a thermostat device). Execution of a first one of the plurality of sub-commands by the thermostat device performs the first constituent functionality.
- the plurality of constituent functionalities includes ( 1074 ) a second constituent functionality for obtaining temperature readings. Execution of a second one of the plurality of sub-commands by the sensor device (e.g., hazard detector 104 ) performs the second constituent functionality.
- the sensor device e.g., hazard detector 104
- managing (step 1028 ) execution of the plurality of sub-commands by the respective devices includes ( 1076 ) the execution of the first sub-command by the thermostat device in accordance with the temperature readings obtained by the sensor device.
- execution of the second sub-command by the sensor device causes the sensor to output (e.g., and send back to the device that transmitted the second sub-command to the sensor device) a temperature reading of the room in which the sensor device is located.
- This temperature reading obtained from the sensor device is then used by the thermostat device in performing its basic operations of turning on/off its cooling or heating functionality.
- a temperature sensor may be used in a room with the desired temperature, while allowing a thermostat unit to be positioned in a different room as desired.
- the first device receives ( 1008 ) a first command, translates ( 1018 ) the first command into a plurality of sub-commands, and manages ( 1028 ) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000 -A through 1000 -F in FIGS. 10A-10H .
- the first functionality is ( 1078 ) for operating the second device (e.g., a thermostat) in accordance with an occupancy model developed by presence detection readings obtained from a plurality of sensor devices.
- devices may be used to determine occupancy of the structure 150 and/or particular rooms 152 in the structure 150 , where the smart home environment 100 may additionally or alternatively include one or more occupancy sensors (e.g., cameras 118 , the smart doorbell 106 , smart doorlocks, touch screens, IR sensors, microphones, ambient light sensors, motion detectors, smart nightlights 170 , etc.).
- the plurality of sensor devices includes ( 1080 ) IR sensors.
- the plurality of constituent functionalities includes ( 1082 ) a first constituent functionality for enabling or disabling an operation of the second device (e.g., turning device on/off). Execution of a first one of the plurality of sub-commands by the second device performs the first constituent functionality.
- the plurality of constituent functionalities includes ( 1084 ) a second constituent functionality for obtaining presence detection readings.
- Execution of a second one of the plurality of sub-commands by the plurality of sensor devices performs the second constituent functionality.
- execution of the second sub-command by one or more sensor devices causes the devices to output (e.g., and send back to the device that transmitted the second sub-command to the sensor devices) a reading that indicates a current occupancy of a specified area.
- managing (step 1028 ) execution of the plurality of sub-commands by the respective devices includes ( 1086 ) execution of the first sub-command by the second device in accordance with the occupancy model developed by presence detection readings obtained from the plurality of sensor devices.
- a camera device may be turned on (e.g., by executing the first sub-command) in response to detecting an unexpected occupancy within a household, based on an occupancy model developed by multiple sensor devices within the household that execute the second sub-commands.
- some devices do not have built-in presence sensors and are not operated based on an occupancy they detect, such functionality is emulated by managing execution of the sub-commands across the respective devices.
- the first device receives ( 1008 ) a first command, translates ( 1018 ) the first command into a plurality of sub-commands, and manages ( 1028 ) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000 -A through 1000 -F in FIGS. 10A-10H .
- the second device is ( 1088 ) a sound system for playing audio from multiple sources (e.g., a home theater system).
- the first functionality is ( 1090 ) for operating the sound system in response to detecting activation of a push button.
- the push button may be a doorbell device (or other electronic device having a button) configured to transmit signals to other devices either wirelessly or using a wired connection.
- the sound system and the push button are located remotely from each other (e.g., in different regions of a premises).
- the first functionality is further for operating a camera device in response to detecting activation of the push button (e.g., capture surveillance image in response to detecting a trigger signal from activating the push button).
- the plurality of constituent functionalities includes ( 1092 ) a first constituent functionality for playing audio (e.g., a sound effect) on the sound system. Execution of a first one of the plurality of sub-commands by the sound system performs the first constituent functionality.
- the audio played back is stored as a file in the sound system.
- the plurality of constituent functionalities includes ( 1094 ) a second constituent functionality for transmitting a trigger signal to one or more remote devices, including the sound system, in response to detecting activation of the push button. Execution of a second one of the plurality of sub-commands by the push button performs the second constituent functionality.
- the trigger signal may be a simple command that causes playback of a pre-configured audio file or sound effect.
- the plurality of constituent functionalities includes a third constituent functionality for capturing an image, wherein execution of a third one of the plurality of sub-commands by the camera device performs the third constituent functionality.
- managing (step 1028 ) execution of the plurality of sub-commands by the respective devices includes ( 1096 ) execution of the first sub-command by the sound system is in response to the sound system receiving the trigger signal from the push button, the push button transmitting the trigger signal in response to detecting activation of the push button.
- a trigger signal is sent (e.g., wirelessly) to a sound system, and the sound system plays audio in response to receiving the trigger signal.
- a doorbell may typically be limited to outputting sound in a particular region (e.g., front region of household)
- the advanced functionality of using an existing sound system to operate concurrently with a doorbell is emulated by managing execution of the sub-commands across the respective devices.
- execution of the third sub-command by the camera device is in response to the camera device receiving the trigger signal from the push button, the push button transmitting the trigger signal in response to detecting activation of the push button.
- the trigger signal is additionally transmitted to a surveillance camera (e.g., positioned at the front door) and causes the camera to capture an image.
- FIG. 11 is a flow diagram illustrating a method 1100 for emulating advanced functionality on devices, in accordance with some implementations.
- the various implementations of the method 1100 correspond to the various techniques for enabling high-level features to devices with lower levels of functionality described above.
- the method is performed by one or more electronic devices of one or more systems (e.g., devices of a smart home environment 100 , FIG. 1 ; smart devices 204 and/or hub device 180 of smart home network 202 , FIG. 2 ), a server system (e.g., smart home provider server system 164 of FIGS. 1 and 2 , hub server system 508 of FIG. 5 ), or any combination thereof.
- a server system e.g., smart home provider server system 164 of FIGS. 1 and 2 , hub server system 508 of FIG. 5
- the operations of the method 1100 described herein are entirely interchangeable, and respective operations of the method are performed by any of the aforementioned devices, systems, or combination of devices and/or systems.
- a first device e.g., server system 508 , FIG. 7
- FIG. 11 corresponds to instructions stored in a computer memory or other computer-readable storage medium (e.g., memory 706 of the server system 508 ).
- the first device identifies ( 1102 ) a first functionality to be performed on a first device, the first functionality comprising a plurality of constituent functionalities (various functionalities and respective constituent functionalities are described above with respect to FIGS. 10A-10H ).
- the first device obtains ( 1104 ) respective sets of functionalities for a plurality of devices including the first device.
- the respective sets of functionalities correspond to various device capabilities, functionalities, and features of a particular device.
- a thermostat device 102 FIG. 1
- a hub device 180 is equipped with scheduling capabilities.
- the first device identifies ( 1106 ) two or more devices, of the plurality of devices and including the first device, having respective sets of functionalities that together include the plurality of constituent functionalities.
- constituent functionalities include functionality for (1) operating a thermostat device (e.g., turning cooling/heating functions on/off), and (2) sending commands to the thermostat device in accordance with a predefined schedule (e.g., during specific hours in a day).
- a thermostat device e.g., turning cooling/heating functions on/off
- a predefined schedule e.g., during specific hours in a day.
- both the thermostat device e.g., cooling/heating functionality
- the hub device e.g., scheduling capabilities
- a plurality of sub-commands is generated ( 1108 ), each of the plurality of sub-commands for execution by a corresponding device of the two or more devices. Execution of a respective one of the plurality of sub-commands enables performance of a respective one of the plurality of constituent functionalities, and execution of the plurality of sub-commands emulates performance of the first functionality on at least the first device.
- a first sub-command (or set of first sub-commands) is generated for the thermostat device 102 for activating or deactivating the cooling/heating functionality
- a second sub-command (or set of second sub-commands) is generated for the hub device 180 to enable the sending of the first sub-command to the thermostat in accordance with a predefined schedule.
- the first functionality for operating a thermostat in accordance with a predefined schedule is enabled for the thermostat, although neither the thermostat nor the hub device itself has such capabilities.
- 11 may be performed additionally and/or alternatively to one another, and may be performed in accordance with any implementations described with respect to one another.
- any of the functionalities and constituent functionalities described may be combined with one another, and may be executed by any combination of devices.
- the users may be provided with an opportunity to opt in/out of programs or features that may collect personal information (e.g., information about a user's preferences or usage of a smart device).
- personal information e.g., information about a user's preferences or usage of a smart device.
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be anonymized so that the personally identifiable information cannot be determined for or associated with the user, and so that user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
Abstract
Description
- This application claims priority to U.S. Provisional Patent Application No. 62/078,912, filed Nov. 12, 2014, which is hereby incorporated by reference in its entirety.
- This application is related to U.S. patent application Ser. No. ______ (Attorney Docket No. 104248-5037-US), filed ______, entitled “______,” U.S. patent application Ser. No. ______ (Attorney Docket No. 104248-5039-US), filed ______, entitled “______,” U.S. patent application Ser. No. ______ (Attorney Docket No. 104248-5040-US), filed ______, entitled “______,” and U.S. patent application Ser. No. ______ (Attorney Docket No. 104248-5040-US01), filed ______, entitled “______,” which are hereby incorporated by reference in their entirety.
- This relates generally to computer technology, including but not limited to methods and systems for provisioning an electronic device by associating a user account with the electronic device and establishing a secure network connection for the electronic device.
- Smart home automation devices are being developed and fielded at such a rapid pace that new devices appear on the market practically every day. Because of the proliferation of low-power wireless network and smart phone technologies, it is not uncommon to find home and business owners in possession of smart home devices such as wireless lights, music systems, door locks, thermostats and alarm systems. And wireless white goods are just over the horizon. Based on current trends, it is expected that the average consumer will own as many as five to ten smart home devices in just a few years.
- One issue with this proliferation of devices is that many such smart home devices use different communication protocols (e.g., Z-Wave, ZigBee or Insteon) so devices that use different protocols cannot interoperate seamlessly out of the box. In addition, many such devices are configured with different set-up procedures (sometimes called commissioning or provisioning procedures) depending on one or more of: the type of the device, capabilities of the device (e.g., degree of smartness of the device) and/or the particular communication protocol employed by that device. As a result, owners of these devices often face a confusing experience every time they attempt to configure and/or commission a new device. Furthermore, different devices of the same type (e.g., thermostats) can have different capabilities, so users might not have access to expected or desirable product features for a particular type of device depending on the specific device they purchased.
- Therefore, it would be desirable to develop user-friendly solutions to address the above-recited issues associated with smart home devices.
- Accordingly, there is a need for methods, systems, devices, and interfaces for emulating advanced functionality on devices. By translating a command for an advanced functionality into sub-commands that, when executed, perform respective constituent functionalities, execution of sub-commands by respective devices can be managed such that the advanced functionality is emulated on a device that does not individually have such capabilities. Advantageously, devices—despite their inherent capability—can emulate advanced functionalities by coordinating and using the capabilities of multiple devices.
- In one aspect, in accordance with some implementations, a method is performed at a first device (e.g., a hub device) with one or more processors and memory storing instructions for execution by the one or more processors. The method includes receiving a first command for performing a first functionality on at least a second device, the first functionality comprising a plurality of constituent functionalities, wherein the second device is not configured to execute the first command. The first command is translated into a plurality of sub-commands for execution by respective devices. Each of the plurality of sub-commands, when executed, performs a respective constituent functionality of the plurality of constituent functionalities, and execution of any one of the sub-commands individually does not perform the entire first functionality. The first device manages execution of the plurality of sub-commands by the respective devices, wherein execution of the plurality of sub-commands by the respective devices emulates performance of the first functionality on at least the second device.
- In accordance with some implementations, a first device (e.g., a hub device) includes one or more processors, memory, and one or more programs; the one or more programs are stored in the memory and configured to be executed by the one or more processors. The one or more programs include instructions for performing the operations of the method described above. In accordance with some implementations, a non-transitory computer-readable storage medium has stored therein instructions that, when executed by the first device, cause the electronic device to perform the operations of the method described above. In accordance with some implementations, a device includes means for performing the operations of the method described above.
- In another aspect, in accordance with some implementations, a first functionality to be performed on a first device is identified, the first functionality comprising a plurality of constituent functionalities. Respective sets of functionalities are obtained for a plurality of devices including the first device. Two or more devices, of the plurality of devices and including the first device, having respective sets of functionalities that together include the plurality of constituent functionalities are then identified. Furthermore, a plurality of sub-commands is generated, each of the plurality of sub-commands for execution by a corresponding device of the two or more devices. Execution of a respective one of the plurality of sub-commands enables performance of a respective one of the plurality of constituent functionalities, and execution of the plurality of sub-commands emulates performance of the first functionality on at least the first device.
- Devices are therefore provided with the ability to emulate advanced functionalities, thereby increasing the effectiveness and user satisfaction with such devices.
- For a better understanding of the various described implementations, reference should be made to the Description of Implementations below, in conjunction with the following drawings in which like reference numerals refer to corresponding parts throughout the figures.
-
FIG. 1 is an exemplary smart home environment in accordance with some implementations. -
FIG. 2 is a block diagram illustrating an exemplary network architecture that includes a smart home network in accordance with some implementations. -
FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment ofFIG. 1 is integrated, in accordance with some implementations. -
FIG. 4 illustrates an abstracted functional view of the extensible devices and services platform ofFIG. 3 , with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations. -
FIG. 5 is a representative operating environment in which a hub server system interacts with client devices and hubs communicatively coupled to local smart devices in accordance with some implementations. -
FIG. 6 is a block diagram illustrating a representative hub device in accordance with some implementations. -
FIG. 7 is a block diagram illustrating server system in accordance with some implementations. -
FIG. 8 is a block diagram illustrating a representative client device associated with a user account in accordance with some implementations. -
FIG. 9A is a flow diagram of a virtual device system in accordance with some implementations. -
FIG. 9B is a flow diagram of a virtual device system for a garage door system in accordance with some implementations. -
FIGS. 10A-10H are flow diagrams illustrating methods for emulating advanced functionality on devices in accordance with some implementations. -
FIG. 11 is a flow diagram illustrating a method for emulating advanced functionality on devices in accordance with some implementations. - Like reference numerals refer to corresponding parts throughout the several views of the drawings.
- Reference will now be made in detail to implementations, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the various described implementations. However, it will be apparent to one of ordinary skill in the art that the various described implementations may be practiced without these specific details. In other instances, well-known methods, procedures, components, circuits, and networks have not been described in detail so as not to unnecessarily obscure aspects of the implementations.
- It will also be understood that, although the terms first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first type of request could be termed a second type of request, and, similarly, a second type of request could be termed a first type of request, without departing from the scope of the various described implementations. The first type of request and the second type of request are both types of requests, but they are not the same type of request.
- The terminology used in the description of the various described implementations herein is for the purpose of describing particular implementations only and is not intended to be limiting. As used in the description of the various described implementations and the appended claims, the singular forms “a”, “an” and “the” are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will also be understood that the term “and/or” as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms “includes,” “including,” “comprises,” and/or “comprising,” when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.
- As used herein, the term “if” is, optionally, construed to mean “when” or “upon” or “in response to determining” or “in response to detecting” or “in accordance with a determination that,” depending on the context. Similarly, the phrase “if it is determined” or “if [a stated condition or event] is detected” is, optionally, construed to mean “upon determining” or “in response to determining” or “upon detecting [the stated condition or event]” or “in response to detecting [the stated condition or event]” or “in accordance with a determination that [a stated condition or event] is detected,” depending on the context.
- It is to be appreciated that “smart home environments” may refer to smart environments for homes such as a single-family house, but the scope of the present teachings is not so limited. The present teachings are also applicable, without limitation, to duplexes, townhomes, multi-unit apartment buildings, hotels, retail stores, office buildings, industrial buildings, and more generally any living space or work space.
- It is also to be appreciated that while the terms user, customer, installer, homeowner, occupant, guest, tenant, landlord, repair person, and the like may be used to refer to the person or persons acting in the context of some particularly situations described herein, these references do not limit the scope of the present teachings with respect to the person or persons who are performing such actions. Thus, for example, the terms user, customer, purchaser, installer, subscriber, and homeowner may often refer to the same person in the case of a single-family residential dwelling, because the head of the household is often the person who makes the purchasing decision, buys the unit, and installs and configures the unit, and is also one of the users of the unit. However, in other scenarios, such as a landlord-tenant environment, the customer may be the landlord with respect to purchasing the unit, the installer may be a local apartment supervisor, a first user may be the tenant, and a second user may again be the landlord with respect to remote control functionality. Importantly, while the identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
-
FIG. 1 is an exemplarysmart home environment 100 in accordance with some implementations.Smart home environment 100 includes a structure 150 (e.g., a house, office building, garage, or mobile home) with various integrated devices. It will be appreciated that devices may also be integrated into asmart home environment 100 that does not include anentire structure 150, such as an apartment, condominium, or office space. Further, thesmart home environment 100 may control and/or be coupled to devices outside of theactual structure 150. Indeed, several devices in thesmart home environment 100 need not be physically within thestructure 150. For example, a device controlling apool heater 114 orirrigation system 116 may be located outside of thestructure 150. - The depicted
structure 150 includes a plurality ofrooms 152, separated at least partly from each other viawalls 154. Thewalls 154 may include interior walls or exterior walls. Each room may further include afloor 156 and aceiling 158. Devices may be mounted on, integrated with and/or supported by awall 154,floor 156 orceiling 158. - In some implementations, the integrated devices of the
smart home environment 100 include intelligent, multi-sensing, network-connected devices that integrate seamlessly with each other in a smart home network (e.g., 202FIG. 2 ) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions. Thesmart home environment 100 may include one or more intelligent, multi-sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102”), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104”), and one or more intelligent, multi-sensing, network-connected entryway interface devices 106 (hereinafter referred to as “smart doorbells 106”). - In some implementations, the one or more
smart thermostats 102 detect ambient climate characteristics (e.g., temperature and/or humidity) and control aHVAC system 103 accordingly. For example, a respectivesmart thermostat 102 includes an ambient temperature sensor. - The one or more
smart hazard detectors 104 may include thermal radiation sensors directed at respective heat sources (e.g., a stove, oven, other appliances, a fireplace, etc.). For example, asmart hazard detector 104 in a kitchen 153 includes a thermal radiation sensor directed at a stove/oven (e.g., a smart appliance 112). A thermal radiation sensor may determine the temperature of the respective heat source (or a portion thereof) at which it is directed and may provide corresponding blackbody radiation data as output. - The
smart doorbell 106 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell functionality, announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come). - In some implementations, the
smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as “smart wall switches 108”), along with one or more intelligent, multi-sensing, network-connected wall plug interfaces 110 (hereinafter referred to as “smart wall plugs 110”). The smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan. The smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home). - In some implementations, the
smart home environment 100 ofFIG. 1 includes a plurality of intelligent, multi-sensing, network-connected appliances 112 (hereinafter referred to as “smart appliances 112”), such as refrigerators, stoves, ovens, televisions, washers, dryers, lights, stereos, intercom systems, garage-door openers, floor fans, ceiling fans, wall air conditioners, pool heaters, irrigation systems, security systems, space heaters, window AC units, motorized duct vents, and so forth. In some implementations, when plugged in, an appliance may announce itself to the smart home network, such as by indicating what type of appliance it is, and it may automatically integrate with the controls of the smart home. Such communication by the appliance to the smart home may be facilitated by either a wired or wireless communication protocol. The smart home may also include a variety ofnon-communicating legacy appliances 140, such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110. Thesmart home environment 100 may further include a variety of partially communicatinglegacy appliances 142, such as infrared (“IR”) controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by thesmart hazard detectors 104 or the smart wall switches 108. - In some implementations, the
smart home environment 100 includes one or more network-connectedcameras 118 that are configured to provide video monitoring and security in thesmart home environment 100. Thecameras 118 may be used to determine occupancy of thestructure 150 and/orparticular rooms 152 in thestructure 150, and thus may act as occupancy sensors. For example, video captured by thecameras 118 may be processed to identify the presence of an occupant in the structure 150 (e.g., in a particular room 152). Specific individuals may be identified based, for example, on their appearance (e.g., height, face) and/or movement (e.g., their walk/gate). Thesmart home environment 100 may additionally or alternatively include one or more other occupancy sensors (e.g., thesmart doorbell 106, smart doorlocks, touch screens, IR sensors, microphones, ambient light sensors, motion detectors,smart nightlights 170, etc.). In some implementations, thesmart home environment 100 includes radio-frequency identification (RFID) readers (e.g., in eachroom 152 or a portion thereof) that determine occupancy based on RFID tags located on or embedded in occupants. For example, RFID readers may be integrated into thesmart hazard detectors 104. - The
smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home. For example, thesmart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within thesmart home environment 100 and/or receives commands for controlling the pool temperature. Similarly, thesmart home environment 100 may include anirrigation monitor 116 that communicates information regarding irrigation systems within thesmart home environment 100 and/or receives control information for controlling such irrigation systems. - By virtue of network connectivity, one or more of the smart home devices of
FIG. 1 may further allow a user to interact with the device even if the user is not proximate to the device. For example, a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device (e.g., a mobile phone, such as a smart phone) 166. A webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user. For example, the user may view a current set point temperature for a device (e.g., a stove) and adjust it using a computer. The user may be in the structure during this remote communication or outside the structure. - As discussed above, users may control smart devices in the
smart home environment 100 using a network-connected computer or portableelectronic device 166. In some examples, some or all of the occupants (e.g., individuals who live in the home) may register theirdevice 166 with thesmart home environment 100. Such registration may be made at a central server to authenticate the occupant and/or the device as being associated with the home and to give permission to the occupant to use the device to control the smart devices in the home. An occupant may use theirregistered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation. The occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home. It should be appreciated that instead of or in addition to registeringdevices 166, thesmart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and whichdevices 166 are associated with those individuals. As such, the smart home environment may “learn” who is an occupant and permit thedevices 166 associated with those individuals to control the smart devices of the home. - In some implementations, in addition to containing processing and sensing capabilities,
devices - In some implementations, the smart devices serve as wireless or wired repeaters. In some implementations, a first one of the smart devices communicates with a second one of the smart devices via a wireless router. The smart devices may further communicate with each other via a connection (e.g., network interface 160) to a network, such as the
Internet 162. Through theInternet 162, the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein). The smart homeprovider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device(s). In some implementations, a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer. In some implementations, software updates are automatically sent from the smart homeprovider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals). - In some implementations, the
network interface 160 includes a conventional network device (e.g., a router), and thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connectedthermostats 102,hazard detectors 104,doorbell 106, wall switches 108, wall plugs 110,appliances 112,cameras 118 and the like. Each of these smart devices optionally communicates with thehub device 180 using one or more radio communication networks available at least in the smart home environment 100 (e.g., ZigBee, Z-Wave, Insteon, Bluetooth, Wi-Fi and other radio communication networks). In some implementations, thehub device 180 and devices coupled with/to the hub device can be controlled and/or interacted with via an application running on a smart phone, household controller, laptop, tablet computer, game console or similar electronic device. In some implementations, a user of such controller application can view status of the hub device or coupled smart devices, configure the hub to interoperate with smart devices newly introduced to the home network, commission new smart devices, and adjust or view settings of connected smart devices, etc. In some implementations the hub device extends capabilities of low capability smart device to match capabilities of the highly capable smart devices of the same type, integrates functionality of multiple different device types—even across different communication protocols, and is configured to streamline adding of new devices and commissioning of the hub. - Generally, in some implementations, the
network interface 160 includes a conventional network device (e.g., a router), and thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connectedthermostats 102,hazard detectors 104,doorbell 106, wall switches 108, wall plugs 110,appliances 112,cameras 118 and the like. Each of these smart devices optionally communicates with thehub device 180 using a radio communication network available at least in thesmart home environment 100. -
FIG. 2 is a block diagram illustrating anexemplary network architecture 200 that includes asmart home network 202 in accordance with some implementations. In some implementations, thesmart devices 204 in the smart home environment 100 (e.g.,devices hub device 180 to create a mesh network insmart home network 202. In some implementations, one or moresmart devices 204 in thesmart home network 202 operate as a smart home controller. Additionally and/or alternatively,hub device 180 operates as the smart home controller. In some implementations, a smart home controller has more computing power than other smart devices. In some implementations, a smart home controller processes inputs (e.g., fromsmart devices 204,electronic device 166, and/or smart home provider server system 164) and sends commands (e.g., tosmart devices 204 in the smart home network 202) to control operation of thesmart home environment 100. In some implementations, some of thesmart devices 204 in the smart home network 202 (e.g., in the mesh network) are “spokesman” nodes (e.g., 204-1) and others are “low-powered” nodes (e.g., 204-9). Some of the smart devices in thesmart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind thewalls 154 of the smart home environment. The smart devices that have a regular and reliable power source are referred to as “spokesman” nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in thesmart home environment 100, as well as with the smart homeprovider server system 164. In some implementations, one or more “spokesman” nodes operate as a smart home controller. On the other hand, the devices that are battery powered are the “low-power” nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6LoWPAN, etc. - In some implementations, some low-power nodes are incapable of bidirectional communication. These low-power nodes send messages, but they are unable to “listen”. Thus, other devices in the
smart home environment 100, such as the spokesman nodes, cannot send information to these low-power nodes. - In some implementations, some low-power nodes are capable of only a limited bidirectional communication. For example, other devices are able to communicate with the low-power nodes only during a certain time period.
- As described, in some implementations, the smart devices serve as low-power and spokesman nodes to create a mesh network in the
smart home environment 100. In some implementations, individual low-power nodes in the smart home environment regularly send out messages regarding what they are sensing, and the other low-powered nodes in the smart home environment—in addition to sending out their own messages—forward the messages, thereby causing the messages to travel from node to node (i.e., device to device) throughout thesmart home network 202. In some implementations, the spokesman nodes in thesmart home network 202, which are able to communicate using a relatively high-power communication protocol, such as IEEE 802.11, are able to switch to a relatively low-power communication protocol, such as IEEE 802.15.4, to receive these messages, translate the messages to other communication protocols, and send the translated messages to other spokesman nodes and/or the smart home provider server system 164 (using, e.g., the relatively high-power communication protocol). Thus, the low-powered nodes using low-power communication protocols are able to send and/or receive messages across the entiresmart home network 202, as well as over theInternet 162 to the smart homeprovider server system 164. In some implementations, the mesh network enables the smart homeprovider server system 164 to regularly receive data from most or all of the smart devices in the home, make inferences based on the data, facilitate state synchronization across devices within and outside of thesmart home network 202, and send commands back to one or more of the smart devices to perform tasks in the smart home environment. - As described, the spokesman nodes and some of the low-powered nodes are capable of “listening.” Accordingly, users, other devices, and/or the smart home
provider server system 164 may communicate control commands to the low-powered nodes. For example, a user may use the electronic device 166 (e.g., a smart phone) to send commands over the Internet to the smart homeprovider server system 164, which then relays the commands to one or more spokesman nodes in thesmart home network 202. The spokesman nodes may use a low-power protocol to communicate the commands to the low-power nodes throughout thesmart home network 202, as well as to other spokesman nodes that did not receive the commands directly from the smart homeprovider server system 164. - In some implementations, a smart nightlight 170 (
FIG. 1 ), which is an example of asmart device 204, is a low-power node. In addition to housing a light source, thesmart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room. In some implementations, thesmart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room. In other implementations, thesmart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark. Further, in some implementations, thesmart nightlight 170 includes a low-power wireless communication chip (e.g., a ZigBee chip) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room. As mentioned above, these messages may be sent wirelessly (e.g., using the mesh network) from node to node (i.e., smart device to smart device) within thesmart home network 202 as well as over theInternet 162 to the smart homeprovider server system 164. - Other examples of low-power nodes include battery-operated versions of the
smart hazard detectors 104. Thesesmart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors (e.g., thermal radiation sensors), carbon monoxide/dioxide sensors, occupancy/motion sensors, ambient light sensors, ambient temperature sensors, humidity sensors, and the like. Furthermore,smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the smart homeprovider server system 164, such as by using the mesh network as described above. - Examples of spokesman nodes include
smart doorbells 106,smart thermostats 102, smart wall switches 108, and smart wall plugs 110. Thesedevices - In some implementations, the
smart home environment 100 includes service robots 168 (FIG. 1 ) that are configured to carry out, in an autonomous manner, any of a variety of household tasks. - As explained above with reference to
FIG. 1 , in some implementations, thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the smart devices using a radio communication network that is available at least in thesmart home environment 100. Communication protocols used by the radio communication network include, but are not limited to, ZigBee, Z-Wave, Insteon, EuOcean, Thread, OSIAN, Bluetooth Low Energy and the like. Thehub device 180 not only converts the data received from each smart device to meet the data format requirements of thenetwork interface 160 or the network(s) 162, but also converts information received from thenetwork interface 160 or the network(s) 162 to meet the data format requirements of the respective communication protocol associated with a targeted smart device. In some implementations, in addition to data format conversion, thehub device 180 further processes the data received from the smart devices or information received from thenetwork interface 160 or the network(s) 162 preliminary. It is also noted that in some implementations, thenetwork interface 160 and thehub device 180 are integrated to one network device. Functionality described herein is representative of particular implementations of smart devices, control application(s) running on representative electronic device(s) (such as a smart phone), hub device(s) 180, and server(s) coupled to hub device(s) via the Internet or other Wide Area Network. All or a portion of this functionality and associated operations can be performed by any elements of the described system—for example, all or a portion of the functionality described herein as being performed by an implementation of the hub device can be performed, in different system implementations, in whole or in part on the server, one or more connected smart devices and/or the control application, or different combinations thereof. -
FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment ofFIG. 1 is integrated, in accordance with some implementations. The extensible devices andservices platform 300 includes smart homeprovider server system 164. Each of the intelligent, network-connected devices described with reference toFIG. 1 (e.g., 102, 104, 106, 108, 110, 112, 114, 116 and 118, identified simply as “devices” inFIGS. 2-4 ) may communicate with the smart homeprovider server system 164. For example, a connection to theInternet 162 may be established either directly (for example, using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub, or an intelligent, dedicated whole-home controller node), or through any combination thereof. - In some implementations, the devices and
services platform 300 communicates with and collects data from the smart devices of thesmart home environment 100. In addition, in some implementations, the devices andservices platform 300 communicates with and collects data from a plurality of smart home environments across the world. For example, the smart homeprovider server system 164 collectshome data 302 from the devices of one or moresmart home environments 100, where the devices may routinely transmit home data or may transmit home data in specific instances (e.g., when a device queries the home data 302). Exemplarycollected home data 302 includes, without limitation, power consumption data, blackbody radiation data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc. - In some implementations, the smart home
provider server system 164 provides one ormore services 304 to smart homes and/or third parties.Exemplary services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on collected home data 302) to improve performance, reduce utility cost, increase safety, etc. In some implementations, data associated with theservices 304 is stored at the smart homeprovider server system 164, and the smart homeprovider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.). - In some implementations, the extensible devices and
services platform 300 includes aprocessing engine 306, which may be concentrated at a single server or distributed among several different computing entities without limitation. In some implementations, theprocessing engine 306 includes engines configured to receive data from the devices of smart home environments 100 (e.g., via theInternet 162 and/or a network interface 160), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis. In some implementations, the analyzed data is stored as derived home data 308. - Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a webpage to a user of the device, or to other non-smart device entities. In some implementations, use statistics, use statistics relative to use of other devices, use patterns, and/or statistics summarizing sensor readings are generated by the
processing engine 306 and transmitted. The results or statistics may be provided via theInternet 162. In this manner, theprocessing engine 306 may be configured and programmed to derive a variety of useful information from thehome data 302. A single server may include one or more processing engines. - The derived home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes. For example,
processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics). - In some implementations, to encourage innovation and research and to increase products and services available to users, the devices and
services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such ascharities 314, governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data),utility companies 324, and other third parties. TheAPIs 310 are coupled to and permit third-party systems to communicate with the smart homeprovider server system 164, including theservices 304, theprocessing engine 306, thehome data 302, and the derived home data 308. In some implementations, theAPIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart homeprovider server system 164, as well as to receive dynamic updates to thehome data 302 and the derived home data 308. - For example, third parties may develop programs and/or applications, such as web applications or mobile applications, that integrate with the smart home
provider server system 164 to provide services and information to users. Such programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks. -
FIG. 4 illustrates an abstractedfunctional view 400 of the extensible devices andservices platform 300 ofFIG. 3 , with reference to aprocessing engine 306 as well as devices of the smart home environment, in accordance with some implementations. Even though devices situated in smart home environments will have a wide variety of different individual capabilities and limitations, the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS). Advantageously, in addition to providing control information used by the devices to achieve their local and immediate objectives, the extensible devices andservices platform 300 may also be configured to use the large amount of data that is generated by these devices. In addition to enhancing or optimizing the actual operation of the devices themselves with respect to their immediate functions, the extensible devices andservices platform 300 may be directed to “repurpose” that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality). -
FIG. 4 showsprocessing engine 306 as including a number of processing paradigms 410. In some implementations,processing engine 306 includes a managedservices paradigm 410 a that monitors and manages primary or secondary device functions. The device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, providing a heat-source alert, and/or alerting a user of a current or predicted future event or characteristic. In some implementations,processing engine 306 includes an advertising/communication paradigm 410 b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user. In some implementations,processing engine 306 includes asocial paradigm 410 c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to theirsmart thermostat 102 to reduce their power bills. - In some implementations,
processing engine 306 includes a challenges/rules/compliance/rewards paradigm 410 d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned. The challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing the occurrence of heat-source alerts) (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc. For example, one challenge may involve participants turning down their thermostat by one degree for one week. Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc. Regarding compliance, an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms. The devices in the room having occupancy sensors may send updates to the owner when the room is accessed. - In some implementations,
processing engine 306 integrates or otherwise usesextrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.Extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth. -
FIG. 5 illustrates arepresentative operating environment 500 in which ahub server system 508 provides data processing for monitoring and facilitating review of motion events in video streams captured byvideo cameras 118. As shown inFIG. 5 , thehub server system 508 receives video data from video sources 522 (including cameras 118) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or thesmart home environments 100 ofFIG. 1 ). Eachvideo source 522 may be bound to one or more reviewer accounts, and thehub server system 508 provides video monitoring data for thevideo source 522 toclient devices 504 associated with the reviewer accounts. For example, the portableelectronic device 166 is an example of theclient device 504. - In some implementations, the smart home
provider server system 164 or a component thereof serves as thehub server system 508. In some implementations, thehub server system 508 is a dedicated video processing server that provides video processing services to video sources andclient devices 504 independent of other services provided by thehub server system 508. - In some implementations, each of the
video sources 522 includes one ormore video cameras 118 that capture video and send the captured video to thehub server system 508 substantially in real-time. In some implementations, each of thevideo sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one ormore cameras 118 and thehub server system 508. The controller device receives the video data from the one ormore cameras 118, optionally, performs some preliminary processing on the video data, and sends the video data to thehub server system 508 on behalf of the one ormore cameras 118 substantially in real-time. In some implementations, each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or thehub server system 508. - As shown in
FIG. 5 , in accordance with some implementations, each of theclient devices 504 includes a client-side module 502. The client-side module 502 communicates with a server-side module 506 executed on thehub server system 508 through the one ormore networks 162. The client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the server-side module 506. The server-side module 506 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on arespective client device 504. The server-side module 506 also provides server-side functionalities for video processing and camera control for any number of thevideo sources 522, including any number of control devices and thecameras 118. - In some implementations, the server-side module 506 includes one or
more processors 512, avideo storage database 514, device and account databases 516, an I/O interface to one ormore client devices 518, and an I/O interface to one ormore video sources 520. The I/O interface to one ormore clients 518 facilitates the client-facing input and output processing for the server-side module 506. The databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account. The I/O interface to one ormore video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one ormore cameras 118 and associated controller devices). Thevideo storage database 514 stores raw video data received from thevideo sources 522, as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account. - Examples of a
representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices. - Examples of the one or
more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet. The one ormore networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol. - In some implementations, the
hub server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, thehub server system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of thehub server system 508. In some implementations, thehub server system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices. - The server-
client environment 500 shown inFIG. 1 includes both a client-side portion (e.g., the client-side module 502) and a server-side portion (e.g., the server-side module 506). The division of functionalities between the client and server portions of operatingenvironment 500 can vary in different implementations. Similarly, the division of functionalities between thevideo source 522 and thehub server system 508 can vary in different implementations. For example, in some implementations, client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the hub server system 508). Similarly, in some implementations, a respective one of thevideo sources 522 is a simple video capturing device that continuously captures and streams video data to thehub server system 508 without no or limited local preliminary processing on the video data. Although many aspects of the present technology are described from the perspective of thehub server system 508, the corresponding actions performed by theclient device 504 and/or thevideo sources 522 would be apparent to ones skilled in the art without any creative efforts. Similarly, some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts. Furthermore, some aspects of the present technology may be performed by thehub server system 508, theclient device 504, and thevideo sources 522 cooperatively. - It should be understood that operating
environment 500 that involves thehub server system 508, thevideo sources 522 and thevideo cameras 118 is merely an example. Many aspects of operatingenvironment 500 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g.,smart thermostats 102,smart hazard detectors 104,smart doorbells 106, smart wall plugs 110,appliances 112 and the like). - The electronic devices, the client devices or the server system communicate with each other using the one or
more communication networks 162. In an exemplary smart home environment, two or more devices (e.g., thenetwork interface device 160, thehub device 180, and the client devices 504-m) are located in close proximity to each other, such that they could be communicatively coupled in thesame sub-network 162A via wired connections, a WLAN or a Bluetooth Personal Area Network (PAN). The Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology. This smart home environment further includes one or more otherradio communication networks 162B via which at least some of the electronic devices 522-m exchange data with thehub device 160. Alternatively, in some situations, some of the electronic devices 522-m communicate with thenetwork interface device 160 directly via thesame sub-network 162A that couplesdevices network 162C), both the client device 504-m and the electronic devices 522-n communicate directly via the network(s) 162 without passing thenetwork interface device 160 or thehub device 180. - In some implementations, during normal operation, the
network interface device 160 and thehub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device 522-n. As explained above, thenetwork interface device 160 and thehub device 180 optionally communicate with each other via asub-network 162A. However, a provisioning process is required to establish the communication between thenetwork interface device 160 and thehub device 180 via thesub-network 162A. Specifically, anew hub device 180 has to receive a network identification and a network password associated with thesub-network 162A, such that thehub device 180 could communicate device information of thehub device 180 to theserver 508 and allow theserver 508 to associate thehub device 180 with one or more user accounts. - In some implementations, at least an optical link is formed between the client device 504-m and the
hub device 180. The client device 504-m is configured to generate optical data (e.g., light flashes) coded with network information and user account information. Thehub device 180 includes a light sensor that captures the optical data and recovers the network and user account information. Then, thehub device 180 uses the recovered network and user account information to access thesub-network 162A, the network(s) 162 and theserver 508 and associate with a user account on theserver 508. -
FIG. 6 is a block diagram illustrating arepresentative hub device 180 in accordance with some implementations. In some implementations, thehub device 180 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 602, one ormore communication interfaces 604,memory 606,radios 640,light sensor 650, and one ormore communication buses 508 for interconnecting these components (sometimes called a chipset). In some implementations, theelectronic device 602 includes one ormore input devices 610 such as one or more buttons for receiving input. In some implementations, theelectronic device 602 includes one ormore output devices 612 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, etc. Furthermore, some theelectronic device 602 uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, theelectronic device 602 includes alocation detection device 614, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of theelectronic device 602. - The
radios 640 enables one or more radio communication networks in the smart home environments, and allows a hub device to communicate with smart devices. In some implementations, theradios 640 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document. Thelight sensor 650 senses light flashes from a device that is placed in proximity to thelight sensor 650. - Communication interfaces 604 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
-
Memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 606, or alternatively the non-volatile memory withinmemory 606, includes a non-transitory computer readable storage medium. In some implementations,memory 606, or the non-transitory computer readable storage medium ofmemory 606, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating logic 616 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Hub communication module 618 for connecting to and communicating with other network devices (e.g.,network interface 160, such as a router that provides Internet connectivity, networked storage devices, network routing devices,server system 508, etc.) connected to one ormore networks 162 via one or more communication interfaces 604 (wired or wireless); -
Radio Communication Module 619 for connecting thehub device 180 to other client devices (e.g., controller devices,smart devices 204 in smart home environment 100) via one or more radio communication devices (e.g., radios 640) -
Hub provisioning module 620 for provisioning the hub and electronic devices, which optionally includes: an account hub device link module (not shown) for associating one or moreelectronic devices 522 orhub 180 with a corresponding user account, and a secure network setup module (not shown) for setting up secure network connections for both the hub and the electronic devices; -
Device addition module 622 for adding a new electronic device (e.g., smart device 204-1 insmart home environment 100,FIG. 1 ) after a hub has been properly set up; - User interface module 624, including but not limited to:
-
Hub provisioning interface 6242 for providing and displaying a user interface during the device provisioning process (e.g., performed by hub provisioning module 620); - Sensor addition interface 6244 for providing and displaying a user interface when a new device is being added (e.g., performed by device addition module 622); and
- Sensor control interfaces 6246 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more sensor devices (e.g., light sensor 650) can be modified and/or viewed;
-
- High-level
device feature module 626, including but not limited to:- Temperature
profile control module 6262 for creating and maintaining temperature profiles of one or more devices (e.g., one or more smart devices in smart home environment 100), wherein temperature profiles include operations settings (e.g., scheduling) for manipulating the temperature of the one or more devices; - Sunrise/sunset dependent sensor control module 6264 for computing (e.g., based on information retrieved from geo-information dependent sensor control module 6266, and/or location dependent sensor control module 6268) sunrise and/or sunset times, and accordingly adjusting operations settings for one or more devices (e.g., dimming a light, closing a smart curtain, adjusting a thermostat, etc.);
- Geo-information dependent sensor control module 6266 for detecting surrounding environmental characteristics of
hub device 180, such as information of surrounding terrain (e.g., mountain ranges, desert, etc.) and/or nearby obstructions (e.g., tall buildings, trees, etc.); - Location dependent sensor control module 6268 for detecting a location of hub device 180 (e.g., GPS coordinates); and
- Optional modules for executing commands and/or sub-commands for performing one or more functionalities, such as a timer module for identifying an elapsed time (e.g., since commencing a garage door operation);
- Temperature
- Sensor
communication management module 628, including but not limited to:-
Queue filtering module 6281 for manipulating and processing commands received from one or more devices (e.g., splitting commands into commands for specific devices, translating commands in accordance with protocols of corresponding devices, etc.) - Queue ordering module 6282 for determining an order of commands (e.g., received and processed by queue filtering module 6281) in a command queue of
hub device 180; - Adaptive polling module 6283 for storing device information (e.g., device type, protocol, application state, changes to device state, time of last poll, etc. of smart devices in
smart home environment 100,FIG. 1 ), configuring polling modes (e.g., frequency of polling), and sending polling commands to the one or more devices; - Wi-Fi Status monitoring module 6284 for determining a status of one or more communication interfaces 604 (e.g., Wi-Fi);
- Synchronization module 6285 for receiving messages from, and transmitting messages to, one or more devices (e.g., smart devices in
smart home environment 100,FIG. 1 ), wherein messages include control requests (e.g., a command to adjust thermostat), responses, and state information (e.g., information conveying changes in device state); and
-
-
Hub database 630, including but not limited to:-
Sensor information 632 for storing and managing data received, detected, and/or transmitted by one or more sensors (e.g., light sensor 650) ofhub device 180; and - Sensor
communication protocol information 634 for storing and managing protocol information for one or more protocols (e.g., standard wireless protocols, such as ZigBee, Z-Wave, etc., and/or custom or standard wired protocols, such as Ethernet).
-
-
- Each of the above identified elements (e.g., modules stored in memory 206 of hub device 180) may be stored in one or more of the previously mentioned memory devices (e.g., the memory of any of the smart devices in
smart home environment 100,FIG. 1 ), and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,memory 606, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 606, optionally, stores additional modules and data structures not described above. -
FIG. 7 is a block diagram illustrating theserver system 508 in accordance with some implementations. Theserver system 508, typically, includes one or more processing units (CPUs) 702, one or more network interfaces 704 (e.g., including I/O interface to one or more clients 86 and I/O interface to one or more the electronic devices),memory 706, and one ormore communication buses 708 for interconnecting these components (sometimes called a chipset).Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 706, optionally, includes one or more storage devices remotely located from one ormore processing units 702.Memory 706, or alternatively the non-volatile memory withinmemory 706, includes a non-transitory computer readable storage medium. In some implementations,memory 706, or the non-transitory computer readable storage medium ofmemory 706, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 710 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 712 for connecting theserver system 508 to other client devices (e.g., the client devices and the electronic devices (including e.g., cameras) connected to one ormore networks 162 via one or more network interfaces 704 (wired or wireless); - Server-
side module 713, which provides server-side functionalities for account management, device provision, device control, data processing and data review, including but not limited to:-
Account administration module 714 for creating user accounts, and providing account login-services to client devices; - Hub and
device provisioning module 716 for provisioning hubs and electronic devices (sometimes in cooperation with the account registration module 714), which optionally includes: an account hub device link module (not shown) for associating one or moreelectronic devices 522 orhub 180 with a corresponding user account, a secure network setup module (not shown) for setting up secure network connections for both the hub and the electronic devices, and a device addition module (not shown) for adding a new smart electronic device after a hub has been properly set up; -
Data receiving module 722 for receiving data (e.g., video data) from electronic devices via the hub device, and preparing the received data for further processing and long-term storage in thedata storage database 120; - Hub and
device control module 724 for generating and sending server-initiated control commands to modify operation modes of the electronic devices, and/or receiving and forwarding user-initiated control commands to modify operation modes of the electronic devices, wherein the hub and device control module 86 at least includes a devicecommunication management module 7242; -
Data processing module 726 for processing the data provided by the electronic devices such that the processed data could be forwarded to a client device and reviewed by a user who logs onto a corresponding user account on the specific client device, wherein in some implementations, thedata processing module 726 includes a high-leveldevice feature module 7262; and
-
- server data 736 storing data for use in account management, hub provision and control, device provision and control, data processing and data review, including but not limited to:
-
Data storage database 120 for storing data associated with each electronic device 802 (e.g., each camera) of each user account, as well as data processing models, processed data results, and other relevant metadata (e.g., names of data results, location ofelectronic device 802, creation time, duration, settings of theelectronic device 802, etc.) associated with the data, wherein (optionally) all or a portion of the data and/or processing associated with thehub 180 or smart devices stored securely; - Account database 516-1 for storing account information for user accounts, including user account information, information for linked hubs and electronic devices (e.g., hub identifications), hub specific secrets, relevant user and hardware characteristics (e.g., service tier, device model, storage capacity, processing capabilities, etc.), user interface settings, data review preferences, etc., where the information for associated electronic devices includes, but is not limited to, one or more device identifiers (e.g., MAC address and UUID), device specific secrets, and displayed titles; and
- Device Information Database 516-2 for storing device information related to one or more hub devices, e.g., device identifiers and hub specific secrets, independently of whether the corresponding hub devices have been associated with any user account.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 706, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 706, optionally, stores additional modules and data structures not described above. -
FIG. 8 is a block diagram illustrating arepresentative client device 504 associated with a user account in accordance with some implementations. Theclient device 604, typically, includes one or more processing units (CPUs) 802, one ormore network interfaces 804,memory 806, and one ormore communication buses 808 for interconnecting these components (sometimes called a chipset). The client device also includes a user interface 810, aflash light 880, and one or more built-in sensors 890 (e.g., accelerometer and gyroscope). User interface 810 includes one ormore output devices 812 that enable presentation of media content, including one or more speakers and/or one or more visual displays. Optionally, output devices 812 (e.g., a visual display) is used for sending signals (e.g., tolight sensor 650 of hub 180) during a provisioning/commissioning process. User interface 810 also includes one ormore input devices 814, including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls. Furthermore, some the client devices use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, the client device includes one or more cameras, scanners, or photo sensor units for capturing images, for example, of graphic series codes printed on the electronic devices. Optionally, the client device includes alocation detection device 815, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the client device. -
Memory 806 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 806, optionally, includes one or more storage devices remotely located from one ormore processing units 802.Memory 806, or alternatively the non-volatile memory withinmemory 806, includes a non-transitory computer readable storage medium. In some implementations,memory 806, or the non-transitory computer readable storage medium ofmemory 806, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 816 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 818 for connecting the client device to other client devices (e.g.,server system 508 and the electronic devices) connected to one ormore networks 162 via one or more network interfaces 804 (wired or wireless); - Flash
light module 820 for producing flashes of light (e.g., for detection bylight sensor 650 of hub 180) as signals during a provisioning/commissioning process; -
Input processing module 822 for detecting one or more user inputs or interactions from one of the one ormore input devices 814 and interpreting the detected input or interaction; - Phone
orientation sensing module 824 for determining the orientation of theclient device 504 based on data sensed by the built-insensors 890; - One or
more applications 826 for execution by the client device (e.g., games, social network applications, smart home applications, and/or other web or non-web based applications) for controlling hubs and electronic devices (e.g., sending commands, configuring settings, etc.) and for reviewing data captured by the electronic devices (e.g., device status and settings, captured data, or other information regarding the hub or other connected devices); - Client-
side module 827, which provides client-side functionalities for device provisioning, device control, data processing and data review, including but not limited to:-
Account registration module 828 for establishing a user account; - Hub and device provisioning module 830 that provisions hubs and electronic devices (sometimes in cooperation with the account registration module 828) and includes an account hub device link module 834 for associating one or more
electronic devices 522 orhub 180 with a corresponding user account, a secure network setup module 836 for setting up secure network connections for both the hub and the electronic devices, and a device addition module 832 for adding a new smart electronic device after a hub has been properly set up; - Hub and
device control module 838 for generating control commands for modifying an operating mode of the hub or the electronic devices in accordance with user input; and -
Data review module 840 for providing user interfaces for reviewing the data that are processed byserver system 508 and displayed on the display of the client device; and
-
-
client data 860 storing data associated with the user account and electronic devices, including, but is not limited to:-
Account data 862 storing information related with both user accounts loaded on theclient device 604 andelectronic devices 522 associated with the user accounts, wherein such information includes cached login credentials, hub identifiers (e.g., MAC addresses and UUIDs), electronic device identifiers (e.g., MAC addresses and UUIDs), user interface settings, display preferences, authentication tokens and tags, password keys, etc.; and - Local
data storage database 864 for selectively storing raw or processed data associated with electronic devices 522 (e.g., a camera) that has been linked to the user accounts.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, modules or data structures, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 806, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 806, optionally, stores additional modules and data structures not described above. - In some implementations, at least some of the functions of the
server system 508 are performed by theclient device 604, and the corresponding sub-modules of these functions may be located within the client device rather thanserver system 508. In some implementations, at least some of the functions of the client device are performed by theserver system 508, and the corresponding sub-modules of these functions may be located within theserver system 508 rather thanclient device 604. Theclient device 604 and theserver system 508 shown inFIGS. 7 and 8 , respectively, are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations. - Enabling High-Level Features to Devices with Lower Levels of Functionality
- Connected devices of the same fundamental type come with a variety of actual capabilities or functionalities. For example, one thermostat type may only enable adjustments to temperature, while other types may include advanced features such as device scheduling (e.g., running HVAC system at a particular time each day). Some implementations enable the capabilities of less capable devices to be extended to match or even exceed those of more capable devices of the same type through the use smart programming in the hub device 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) to which the connected device is coupled and controlled.
- The techniques and methods described below enable the following extensions to the capabilities of various connected devices:
- (1) Through advanced learning capabilities and other techniques, a hub device (or remote servers/cloud computers, other devices in the smart home environment, etc.) intercepts advanced commands and emulates the advanced capability, using a combination of simple capabilities, to provide advanced functionality from/to less sophisticated devices.
- (2) The hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) presents, to a mobile device (e.g., a user controller
electronic device 166,FIG. 1 ), an interface for a given device type that contains the capabilities of the most capable particular device of that type (even if the actual device provides less than the full set of those capabilities). - (3) Multiple simple devices can be combined into a single “virtual device” with the capability of a more complex device type. (For example, separate single-purpose weather sensing devices such as a connected thermometer, barometer and wind gauge can be represented by and controlled from the
hub 180 device as if they were a more sophisticated connected home weather station). - In many cases, a device description maintained in the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) is abstracted to the lowest common denominator of capabilities of available devices within its category. In some implementations, a fully capable device interface is presented by the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) and, in some implementations, reflected in a user interface of a user controller electronic device 166 (
FIG. 1 ) regardless of its actual capability. - On devices where a particular advanced capability exists (e.g., scheduling a thermostat for different times and days of the week), respective advances commands are sent directly to the device. In other cases in which devices do not have the particular advanced capability by default, however, a hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) provides extra logic to perform and emulate the same task. As described below, this is accomplished through device configurations that include fully emulated functionality, but which can be overridden to call the device directly when it supports the capability. For example, as shown in
FIG. 6 ,memory 606 ofhub device 180 includes several modules for emulating advanced functionality (e.g., high-levelsensor feature module 626 and its sub-modules, which in some implementations work in combination with other modules ofmemory 606, such ashub communication module 618 and/orradio communication module 619, to send commands to connected devices). Similarly, the server system shown inFIG. 7 also includes analogous modules for emulating advanced functionality (e.g., high-leveldevice feature module 7262,FIG. 7 ). As many device manufacturers include various pieces of advanced capabilities in their devices as differentiators from their competition, the solution described below makes such differentiators moot, since most devices can be operated under control of the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) in a similar fashion. Examples are provided below. - In one example, thermostats with no scheduling capabilities are provided by the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) with the ability to run on a schedule. As described above, in some implementations the hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) intercepts an advanced command from a user device (e.g.,
electronic device 166,FIG. 1 ). Here, for example, the advanced command includes setting a schedule for a thermostat, such as instructions for turning the air conditioner on during weekdays only. Because the advanced command is intended for a less sophisticated device (e.g., a thermostat without scheduling capabilities, but which includes the basic functionality of adjusting temperature controls), the hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) emulates the advanced functionality by translating the advanced command into a series of basic commands for adjusting the thermostat, but doing so in accordance with a schedule (where the schedule is stored and maintained in the hub, remote servers/cloud computers, or other devices in the smart home environment). Thus, in this example, the hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) maintains the schedule determined by the advanced command, and sends commands for turning the thermostat on or off on the appropriate days. In effect, the hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) therefore emulates the advanced functionality of the advanced command by utilizing logic for parsing the advanced command, and sending a series of basic instructions to the less sophisticated thermostat device. This example is described in detail with respect to the method 1000-A inFIGS. 10A-10B . - In another example, certain dimmer switches have an advanced functionality for continuously brightening/diming a light source, useful, for example, when a holding a button on a remote. For dimmers without this capability, the hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) implements a timer to manually increment the dim value over time to emulate the advanced functionality. This example is described in detail with respect to the method 1000-B in
FIG. 10C . - Example logic for implementing such functionality of advanced dimmers is provided below. In this example, the advanced capability as implemented in the hub 180 (or remote servers/cloud computers, other devices in the smart home environment, etc.) commands a light source to continuously brighten until it receives a command to stop (e.g., to be used while a user holds a “brighten” button on a remote). The top trait/interface describes the device methods which must be defined by the physical device mappings (note here that only setLevel must be implemented). It includes full implementations of the adjust capability. Also shown are two physical implementations: the first for a capable device which maps the complex capability to the physical devices capability, and the second for physically implementing setLevel and using the internal implementation to create the same capability.
- Example code (e.g., representing source code for a main processor on the hub (e.g., CPU(s) 602 of hub device 180) and written in Scala programming language):
-
// Device level trait Dimmer extends Outlet { // All implementations must implement setLevel, as well as setOn and getOn from Outlet def setLevel(level: Double) // Default implementation of startAdjustLevel, if device doesn't support def startAdjustLevel(up: Boolean, timeToFull: Int = 0) { if (adjustLevelTimer == null) { val finalTimeToFull = if (timeToFull == 0) adjustTotalTime else timeToFull // Use a timer to periodically adjust the level of the device until stop is called adjustLevelTimer = Timer.scheduleValueAdjustByTime(getLevel( ), 1.0, 0.0, up, finalTimeToFull, incrementValueTime, ( ) => setLevel(value)) } } // Default implementation of stopAdjustLevel, if device doesn't support def stopAdjustLevel( ) { if (adjustLevelTimer != null) { adjustLevelTimer.cancel( ) adjustLevelTimer = null } } } // This particular physical device has continuous adjustment capabilities class CapableDimmer extends Outlet with Dimmer { override def setLevel(level: Double) { queueMessage(command, 0x21, doubleToByte(level)) } // Map directly to this device's startAdjustLevel override def startAdjustLevel(up: Boolean, timeToFull: Int = 0} { queueMessage(command, 0x17, if (up) 0x01 else 0x00) } // Map directly to this device's stopAdjustLevel override def stopAdjustLevel(command: DeviceCommand) { queueMessage(command, 0x18, 0x00) } } // This physical device only has setLevel, so the advanced capabilities are emulated class BasicDimmer extends Outlet with Dimmer { override def setLevel(level: Double) { queueMessage(command, 0x21, doubleToByte(level)) } } - In yet another example, location and time information are used to calculate day/night hours and enable lights to run only during nighttime hours. More specifically, location and time are obtained by the hub (e.g., sunrise/sunset dependent device control module 6264,
FIG. 6 ) (or remote servers/cloud computers, other devices in the smart home environment, etc.), which the hub then uses to calculate corresponding day/night hours. The hub (or remote servers/cloud computers, other devices in the smart home environment, etc.) then sends commands according to the calculations such that a light device (e.g., connected to smart wall plug 110) is run only during night time hours, thereby achieving advanced functionality that the light device does not otherwise have. This example is described in detail with respect to the method 1000-A inFIGS. 10A-10B . - For virtual devices composed of multiple simple devices, a device type profile contains minimum functionalities required of the various simple devices. If the minimum requirements are met, a composite virtual device emulates the functionality of the complex device using the various simple capabilities. One example includes using a relay switch and an open/close sensor to emulate a garage door opener. In particular, a garage door minimally requires: (i) a mechanism to determine the current position of the door (e.g., mechanism for determining whether the door closed) and (ii) a temporary contact relay to activate the door. Thus, if the user positions a sensor detecting the closed position of the door, and a smart relay connected to the manual button of the garage door opener, the devices could be operated remotely and show the door's current position, allowing a user to open or close it. Failures to close or open can similarly be reported.
- Other example includes a simple pushbutton, camera, and a music system combined to create a whole-house doorbell. Here, the music system is not purposed solely to the doorbell setup. This example is described in detail with respect to the method 1000-F in Figure H.
- As another example, a user mounts a simple thermostat conveniently in a hallway, but also wants to use the temperature from a different room to run it. By using the techniques discussed above, a temperature sensor may be used in the room with the desired temperature, while still allowing the thermostat unit to be positioned in the hallway as desired. This example is described in detail with respect to the method 1000-D in
FIG. 10F . -
FIG. 9A is a flow diagram of a virtual device system in accordance with some implementations. The virtual device system implementation inFIG. 9A enables advanced functionalities using one or a combination end devices (e.g., simple end devices 926-1, 926-2, . . . 926-N,basic end device 922,mid-level end device 924, high-level end device 904, etc.) having varying degrees of capabilities and functionalities. - At the top, a device interface 900 (“Device Complete Interface Definition”) contains the complete fully functional interface definition of a particular device type (e.g., garage door system, thermostat, light system, etc.) (e.g., stored and managed by high-level
device feature module 626 or a sub-module thereof,FIG. 6 ). If a fully high-level end device 904 is added, it implements athin interface 902 mapping all of the complete capabilities from thedevice interface 900 to the physical high-level end device 904 (e.g., garage door system that tracks progress of open/close door operation, thermostat with advanced scheduling capabilities, a light dimmer, etc.). If a less capable,basic device 922 is added, an implementation of the complex capabilities (e.g., implemented interface 906) mapped to simpler capabilities is inserted below thedevice interface 900, and thebasic device 922 is mapped todevice interface 900 instead using a thin interface 916 (e.g., a basic thermostat with temperature setting controls, light having an on/off switch, etc.). A device with some complex capabilities (e.g., mid-level end device 924) can selectively implement interfaces of both the top level interface definition (e.g., device interface 900) and the implementedinterface 906 using a thin interface 918 (e.g., thermostat with some scheduling capabilities, such as setting schedule on a daily, but not hourly, schedule). Finally, if simple components are combined to create this functionality, an additional virtual device layer 908 (“Virtual Device Definition”) is added below the implementedinterface 906 to map functions to the various independent components. Multiple device layers 920-1, 920-2, . . . 920-N can be added for corresponding simple end devices 926-1, 926-2, . . . 926-N using respective thin interfaces 920-1, 920-2, . . . 920-N for the end devices. Programmatically, this is realized through an object oriented hierarchy using inheritance and traits/mix-ins. The end result is that all of these variously capable device configurations operate identically and in a fully functional way as accessed through the top level interface definition. Examples of simple end devices, their functionalities, and how they can be combined to create an advanced functionality are described above and with respect toFIGS. 10A-10H and 11 . -
FIG. 9B is a flow diagram of a virtual device system specifically for a garage door system in accordance with some implementations. - At the top, a device interface 950 (“Garage Door Complete Interface Definition”) contains the complete fully functional interface definition of a particular device type (e.g., stored and managed by high-level
device feature module 626 or a sub-module thereof,FIG. 6 ). If a fully capable end device is added, it implements athin interface 952 mapping all of the complete capabilities from thedevice interface 950 to the physical capable end device 954 (e.g., a high-end garage door opener system). If a less capable,basic device 974 is added, an implementation of the complex capabilities (e.g., implemented interface 956) mapped to simpler capabilities is inserted below thedevice interface 950, and thebasic device 974 is mapped todevice interface 950 instead using athin interface 964. A device with some complex capabilities (e.g., mid-level end device 976) can selectively implement interfaces of both the top level interface definition (e.g., device interface 950) and the implementedinterface 956 using athin interface 968. Finally, if simple components are combined to create this functionality, an additional virtual device layer 958 (“Garage Door Virtual Device Definition”) is added below the implementedinterface 956 to map functions to the various independent components. In this example, adevice layer 960 for a relay (e.g., “Relay Device Interface Definition” for simple end device 978) maps functions to the relay using athin interface 970, while adevice layer 962 for an open/close sensor (e.g., “Open/Close Device Interface Definition” for simple end device 980) maps functions to the open/close sensor using athin interface 972. This example is described in detail with respect to the method 1000-C inFIGS. 10D-10E . -
FIGS. 10A-10H are flow diagrams illustrating methods 1000-A through 1000-F for emulating advanced functionality on devices, in accordance with some implementations. The various implementations of the methods 1000-A through 1000-F correspond to the various techniques for enabling high-level features to devices with lower levels of functionality described above. In some implementations, the methods are performed by one or more electronic devices of one or more systems (e.g., devices of asmart home environment 100,FIG. 1 ;smart devices 204 and/orhub device 180 ofsmart home network 202,FIG. 2 ;client devices 504,FIG. 5 ; etc.), a server system (e.g., smart homeprovider server system 164 ofFIGS. 1 and 2 ,hub server system 508 ofFIG. 5 ), or any combination thereof. Thus, in some implementations, the operations of the methods described herein are entirely interchangeable, and respective operations of the method are performed by any of the aforementioned devices, systems, or combination of devices and/or systems. For ease of reference, the methods herein will be described as being performed by a first device (e.g., ahub device 180,FIG. 2 ).FIGS. 10A-10H correspond to instructions stored in a computer memory or other computer-readable storage medium (e.g.,memory 606 of the hub device 180). - Referring to
FIG. 10A , with respect to the method 1000-A, the first device includes (1002) one or more processors and memory storing one or more programs for execution by one or more processors. In some implementations, the first device is (1004) a hub device (e.g., hub device 180) communicably coupled to at least a second device (e.g.,thermostat 102,FIG. 1 ). In some implementations, the first device is (1006) a remote server (e.g., smart home provider server system 164) distinct from the second device. - The first device receives (1008) (e.g., from a client device displaying a user interface for controlling smart devices in a smart home environment) a first command for performing a first functionality on at least the second device, the first functionality comprising a plurality of constituent functionalities. The second device is not configured to execute the first command. For example, the first functionality is an advanced feature for scheduling operation of a thermostat for different times and days of the week, the second device being a basic thermostat that does not provide the advanced scheduling functionality and can only perform basic temperature setting capabilities. Different functionalities and the devices on which such functionalities are emulated are described in greater detail below.
- In some implementations, the second device is (1010) a smart plug device (e.g., smart wall plug 110) that provides power to a coupled device. In some implementations, the second device is (1012) a thermostat device (e.g., thermostat 102). In some implementations, the second device is (1014) a lock device (e.g., a smart doorlock).
- In some implementations, the first functionality is (1016) for operating the second device in accordance with a predefined schedule (e.g., scheduling operation of a thermostat for different times and days of the week). In some implementations, the predefined schedule is specified with respect to days of the week. Additionally and/or alternatively, the predefined schedule is specified with respect to hours for each day of the week. In some implementations, the first functionality is for operating the second device in accordance with detection of a sunrise or sunset condition in a local area in which the second device is situated (e.g., closing a smart curtain in response to detecting the sun setting).
- Referring now to
FIG. 10B , the first device translates (1018) the first command into a plurality of sub-commands, the plurality of sub-commands for execution by respective devices including at least the second device. Each of the plurality of sub-commands, when executed, performs a respective constituent functionality of the plurality of constituent functionalities. Execution of any one of the plurality of sub-commands individually does not perform the entire first functionality. - In some implementations, the plurality of constituent functionalities for the first functionality includes (1020) a first constituent functionality for enabling or disabling an operation of the second device. Execution of a first one of the plurality of sub-commands by the second device performs the first constituent functionality. For example, in some implementations, enabling or disabling the operation includes (1022) turning on or off the cooling or heating functionality of the thermostat device. Furthermore, in some implementations, enabling or disabling the operation includes (1024) permitting or denying the locking or unlocking of the lock device. In some implementations, the first sub-command, when executed, causes the lock device to replace an existing list of valid access codes with a new list of valid access codes.
- In some implementations, the plurality of constituent functionalities includes (1026) a second constituent functionality for sending commands, including the first sub-command, in accordance with the predefined schedule. Execution of a second one of the plurality of sub-commands by the first device performs the second constituent functionality, the first device being configured with scheduling capabilities. For example, execution of the second sub-command results in the first sub-command (e.g., command for turning on/off a cooling functionality of a thermostat device) being sent to a device based on a schedule.
- In some implementations, the plurality of constituent functionalities further includes a third constituent functionality for detecting the sunrise or sunset conditions, wherein execution of a third one of the plurality of sub-commands performs the third constituent functionality. Furthermore, in some implementations, the second constituent functionality is for sending the commands, including the first sub-command, in accordance with detection of the sunrise or sunset conditions.
- The first device manages (1028) execution of the plurality of sub-commands by the respective devices, wherein execution of the plurality of sub-commands by the respective devices emulates performance of the first functionality on at least the second device. In some implementations, managing execution includes (1030) executing the second sub-command on the first device, including (1032) sending the first sub-command to the second device in accordance with the predefined schedule. Referring to the example above, if a first device is a hub device that includes scheduling capabilities (e.g., sending commands based on a predefined schedule), execution of the second sub-command by the hub device results in the first sub-command (e.g., command for turning on/off a cooling functionality of a thermostat device) being sent to a thermostat device in accordance with a schedule. Thus, while the thermostat device in this example does not itself have scheduling functionalities built-in, managing execution of the first and second sub-commands effectively emulates such functionality on the thermostat device. In some implementations, executing the second sub-command further includes (1034) sending the first sub-command to the second device upon detection of the sunrise or sunset conditions (e.g., sending a command to a smart device to automatically close window blinds at sunset).
- Referring to
FIG. 10C , with respect to the method 1000-B, the first device receives (1008) a first command, translates (1018) the first command into a plurality of sub-commands, and manages (1028) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000-A through 1000-F inFIGS. 10A-10H . - In some implementations, the second device is (1036) a lamp device. Furthermore, in some implementations, the first functionality is (1038) for continuously dimming or brightening the lamp device.
- In some implementations, the plurality of constituent functionalities includes (1040) a first constituent functionality for setting a dim value of the lamp device. The first constituent functionality corresponds to a plurality of first sub-commands, of the plurality of sub-commands, to be executed by the lamp device. Each of the plurality of first sub-commands corresponds to a respective dim value, of a range of dim values for the lamp device, that is set upon execution of a respective first-subcommand. For example, each of the first sub-commands corresponds to a different brightness/dim value, and the lamp device is capable of executing the sub-commands (and therefore setting a brightness or dim value) one at a time.
- In some implementations, the plurality of constituent functionalities includes (1042) a second constituent functionality for incrementally sending commands, including the plurality of first sub-commands, in accordance with a timer. Execution of a second one of the plurality of sub-commands by the first device performs the second constituent functionality. For example, execution of the second sub-command results in the plurality of first sub-command (e.g., commands for setting a lamp device at different specified dim values) being sent to a device based on a timer (e.g., a different first sub-command being sent every 0.2 ms).
- In some implementations, managing (step 1028) execution of the plurality of sub-commands by the respective devices includes (1044) executing the second sub-command on the first device, which includes sending the plurality of first sub-commands one at a time based on the timer, in order of either decreasing dim value for continuously dimming the lamp device, or increasing dim value for continuously brightening the lamp device. Referring to the example above, if a first device is a remote server with timing capabilities (e.g., sending sub-commands at specified intervals of time), execution of the second sub-command by the remote server results in the plurality of first sub-commands (e.g., for setting a lamp device at different specified dim values) being sent to the lamp device either in order of decreasing or increasing dim value to emulate the functionality of a light dimmer. Thus, while the lamp device in this example does not itself have dimming capabilities built-in, managing execution of the plurality of first sub-commands and the second sub-command effectively emulates such functionality on the lamp device.
- Referring to
FIG. 10D , with respect to the method 1000-C, the first device receives (1008) a first command, translates (1018) the first command into a plurality of sub-commands, and manages (1028) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000-A through 1000-F inFIGS. 10A-10H . - In some implementations, the second device is (1046) a garage door opener coupled to a garage door. Furthermore, in some implementations, the first functionality is (1048) for providing an indication of a percentage by which a garage door operation is complete (e.g., displaying a progress indicator on a client device user interface), wherein a garage door operation for opening the garage door is associated with a first completion time for opening the garage door, and a garage door operation for closing the garage door is associated with a second completion time for closing the garage door.
- In some implementations, the plurality of constituent functionalities includes (1050) a first constituent functionality for opening or closing the garage door. Execution of a first one of the plurality of sub-commands by the garage door opener performs the first constituent functionality. For example, execution of the first sub-command by the garage door opener (e.g., a motor) results in the coupled garage door to either physically open or close.
- In some implementations, the plurality of constituent functionalities includes (1052) a second constituent functionality for identifying an elapsed time since commencing a garage door operation. Execution of a second one of the plurality of sub-commands by a timer device (e.g., a component or module of a hub device 180) performs the second constituent functionality. For example, execution of the second sub-command by the timer device causes the timer device to output (e.g., and send back to the device that transmitted the second sub-command to the timer device) a reading that indicates an elapsed time since beginning a current garage door operation.
- In some implementations, the plurality of constituent functionalities includes (1054) a third constituent functionality for determining whether the garage door is fully opened or fully closed. Execution of a third one of the plurality of sub-commands by a sensor device (e.g., separate from the garage door opener and positioned in line-of-sight of the garage door) performs the third constituent functionality. For example, execution of the third sub-command by the sensor device causes the sensor to output (e.g., and send back to the device that transmitted the third sub-command to the sensor device) a reading that indicates whether the garage door is partially/fully open or closed.
- In some implementations, managing (step 1028) execution of the plurality of sub-commands by the respective devices includes, for a garage door operation for opening the garage door, and until receiving a determination that the garage door is fully open (1056): determining (1058) the percentage by which the garage door operation is complete by dividing the elapsed time by the first completion time; and providing (1060) the indication of the determined percentage. For example, the first sub-command for opening a garage door is first sent to the garage door opener. Once the garage door open operation commences, the elapsed time is obtained by continuously sending (e.g., at predefined intervals) the second sub-command to the timer device thereafter until the garage door is fully opened, which is determined by continuously sending (e.g., at predefined intervals) the third sub-command to the sensor device until an indication that the garage door is fully open is returned. Until the garage door is fully opened, the elapsed time readings obtained from the timer device are used in conjunction with the first completion time (e.g., for opening the garage door) to determine the percentage by which a garage door operation is complete.
- In some implementations, managing (step 1028) execution of the plurality of sub-commands by the respective devices includes, for a garage door operation for closing the garage door, and until receiving a determination that the garage door is fully closed (1062): determining (1064) the percentage by which the garage door operation is complete by dividing the elapsed time by the second completion time; and providing (1066) the indication of the determined percentage. For example, the first sub-command for closing a garage door is first sent to the garage door opener. Once the garage door closing operation commences, the elapsed time is obtained by continuously sending (e.g., at predefined intervals) the second sub-command to the timer device thereafter until the garage door is fully closed, which is determined by continuously sending (e.g., at predefined intervals) the third sub-command to the sensor device until an indication that the garage door is fully open is returned. Until the garage door is fully opened, the elapsed time readings obtained from the timer device is used in conjunction with the second completion time (e.g., for closing the garage door) to determine the percentage by which a garage door operation is complete. Thus, while none of the devices in this example are individually capable of determining a real-time progress of a garage door operation, managing execution of the sub-commands across the respective devices effectively emulates such functionality.
- Referring to
FIG. 10F , with respect to the method 1000-D, the first device receives (1008) a first command, translates (1018) the first command into a plurality of sub-commands, and manages (1028) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000-A through 1000-F inFIGS. 10A-10H . - In some implementations, the second device is (1068) a thermostat device. Furthermore, in some implementations, the first functionality is (1070) for operating the thermostat device in accordance with temperature readings obtained from a distinct sensor device located remotely from the thermostat device. For example, the distinct sensor device may be a device equipped with temperature sensors (e.g., a hazard detector 104) that is located in a different room from the thermostat.
- In some implementations, the plurality of constituent functionalities includes (1072) a first constituent functionality for turning the thermostat device on or off (e.g., command for turning on/off a cooling/heating functionality of a thermostat device). Execution of a first one of the plurality of sub-commands by the thermostat device performs the first constituent functionality.
- In some implementations, the plurality of constituent functionalities includes (1074) a second constituent functionality for obtaining temperature readings. Execution of a second one of the plurality of sub-commands by the sensor device (e.g., hazard detector 104) performs the second constituent functionality.
- In some implementations, managing (step 1028) execution of the plurality of sub-commands by the respective devices includes (1076) the execution of the first sub-command by the thermostat device in accordance with the temperature readings obtained by the sensor device. For example, execution of the second sub-command by the sensor device causes the sensor to output (e.g., and send back to the device that transmitted the second sub-command to the sensor device) a temperature reading of the room in which the sensor device is located. This temperature reading obtained from the sensor device is then used by the thermostat device in performing its basic operations of turning on/off its cooling or heating functionality. Advantageously, a temperature sensor may be used in a room with the desired temperature, while allowing a thermostat unit to be positioned in a different room as desired.
- Referring to
FIG. 10G , with respect to the method 1000-E, the first device receives (1008) a first command, translates (1018) the first command into a plurality of sub-commands, and manages (1028) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000-A through 1000-F inFIGS. 10A-10H . - In some implementations, the first functionality is (1078) for operating the second device (e.g., a thermostat) in accordance with an occupancy model developed by presence detection readings obtained from a plurality of sensor devices. As described with respect to
FIG. 1 , devices may be used to determine occupancy of thestructure 150 and/orparticular rooms 152 in thestructure 150, where thesmart home environment 100 may additionally or alternatively include one or more occupancy sensors (e.g.,cameras 118, thesmart doorbell 106, smart doorlocks, touch screens, IR sensors, microphones, ambient light sensors, motion detectors,smart nightlights 170, etc.). In some implementations, the plurality of sensor devices includes (1080) IR sensors. - In some implementations, the plurality of constituent functionalities includes (1082) a first constituent functionality for enabling or disabling an operation of the second device (e.g., turning device on/off). Execution of a first one of the plurality of sub-commands by the second device performs the first constituent functionality.
- In some implementations, the plurality of constituent functionalities includes (1084) a second constituent functionality for obtaining presence detection readings. Execution of a second one of the plurality of sub-commands by the plurality of sensor devices performs the second constituent functionality. For example, execution of the second sub-command by one or more sensor devices causes the devices to output (e.g., and send back to the device that transmitted the second sub-command to the sensor devices) a reading that indicates a current occupancy of a specified area.
- In some implementations, managing (step 1028) execution of the plurality of sub-commands by the respective devices includes (1086) execution of the first sub-command by the second device in accordance with the occupancy model developed by presence detection readings obtained from the plurality of sensor devices. In one example, a camera device may be turned on (e.g., by executing the first sub-command) in response to detecting an unexpected occupancy within a household, based on an occupancy model developed by multiple sensor devices within the household that execute the second sub-commands. Thus, although some devices do not have built-in presence sensors and are not operated based on an occupancy they detect, such functionality is emulated by managing execution of the sub-commands across the respective devices.
- Referring to
FIG. 10H , with respect to the method 1000-F, the first device receives (1008) a first command, translates (1018) the first command into a plurality of sub-commands, and manages (1028) execution of the plurality of sub-commands by the respective devices, in accordance with any of the implementations described with respect the methods 1000-A through 1000-F inFIGS. 10A-10H . - In some implementations, the second device is (1088) a sound system for playing audio from multiple sources (e.g., a home theater system). Furthermore, in some implementations, the first functionality is (1090) for operating the sound system in response to detecting activation of a push button. For example, the push button may be a doorbell device (or other electronic device having a button) configured to transmit signals to other devices either wirelessly or using a wired connection. In some implementations, the sound system and the push button are located remotely from each other (e.g., in different regions of a premises). Additionally and/or alternatively, the first functionality is further for operating a camera device in response to detecting activation of the push button (e.g., capture surveillance image in response to detecting a trigger signal from activating the push button).
- In some implementations, the plurality of constituent functionalities includes (1092) a first constituent functionality for playing audio (e.g., a sound effect) on the sound system. Execution of a first one of the plurality of sub-commands by the sound system performs the first constituent functionality. In some implementations, the audio played back is stored as a file in the sound system.
- In some implementations, the plurality of constituent functionalities includes (1094) a second constituent functionality for transmitting a trigger signal to one or more remote devices, including the sound system, in response to detecting activation of the push button. Execution of a second one of the plurality of sub-commands by the push button performs the second constituent functionality. The trigger signal may be a simple command that causes playback of a pre-configured audio file or sound effect.
- In some implementations, the plurality of constituent functionalities includes a third constituent functionality for capturing an image, wherein execution of a third one of the plurality of sub-commands by the camera device performs the third constituent functionality.
- In some implementations, managing (step 1028) execution of the plurality of sub-commands by the respective devices includes (1096) execution of the first sub-command by the sound system is in response to the sound system receiving the trigger signal from the push button, the push button transmitting the trigger signal in response to detecting activation of the push button. As an example, if a doorbell button is activated in response to a user pressing the button, a trigger signal is sent (e.g., wirelessly) to a sound system, and the sound system plays audio in response to receiving the trigger signal. In effect, while a doorbell may typically be limited to outputting sound in a particular region (e.g., front region of household), the advanced functionality of using an existing sound system to operate concurrently with a doorbell is emulated by managing execution of the sub-commands across the respective devices. Furthermore, in some implementations, execution of the third sub-command by the camera device is in response to the camera device receiving the trigger signal from the push button, the push button transmitting the trigger signal in response to detecting activation of the push button. Thus, in addition to playing a sound effect on the sound system, the trigger signal is additionally transmitted to a surveillance camera (e.g., positioned at the front door) and causes the camera to capture an image.
-
FIG. 11 is a flow diagram illustrating amethod 1100 for emulating advanced functionality on devices, in accordance with some implementations. The various implementations of themethod 1100 correspond to the various techniques for enabling high-level features to devices with lower levels of functionality described above. In some implementations, the method is performed by one or more electronic devices of one or more systems (e.g., devices of asmart home environment 100,FIG. 1 ;smart devices 204 and/orhub device 180 ofsmart home network 202,FIG. 2 ), a server system (e.g., smart homeprovider server system 164 ofFIGS. 1 and 2 ,hub server system 508 ofFIG. 5 ), or any combination thereof. Thus, in some implementations, the operations of themethod 1100 described herein are entirely interchangeable, and respective operations of the method are performed by any of the aforementioned devices, systems, or combination of devices and/or systems. For ease of reference, the methods herein will be described as being performed by a first device (e.g.,server system 508,FIG. 7 ).FIG. 11 corresponds to instructions stored in a computer memory or other computer-readable storage medium (e.g.,memory 706 of the server system 508). - The first device identifies (1102) a first functionality to be performed on a first device, the first functionality comprising a plurality of constituent functionalities (various functionalities and respective constituent functionalities are described above with respect to
FIGS. 10A-10H ). - Furthermore, the first device obtains (1104) respective sets of functionalities for a plurality of devices including the first device. The respective sets of functionalities correspond to various device capabilities, functionalities, and features of a particular device. For example, a thermostat device 102 (
FIG. 1 ) may be equipped with a set of functionalities that includes cooling/heating functionality and presence detection, while ahub device 180 is equipped with scheduling capabilities. - The first device then identifies (1106) two or more devices, of the plurality of devices and including the first device, having respective sets of functionalities that together include the plurality of constituent functionalities. For example, given a first functionality for operating a thermostat in accordance with a predefined schedule, constituent functionalities include functionality for (1) operating a thermostat device (e.g., turning cooling/heating functions on/off), and (2) sending commands to the thermostat device in accordance with a predefined schedule (e.g., during specific hours in a day). Continuing the example above, both the thermostat device (e.g., cooling/heating functionality) and the hub device (e.g., scheduling capabilities) are therefore identified and selected as having sets of functionalities that together include the required constituent functionalities.
- After identifying the two or more devices, a plurality of sub-commands is generated (1108), each of the plurality of sub-commands for execution by a corresponding device of the two or more devices. Execution of a respective one of the plurality of sub-commands enables performance of a respective one of the plurality of constituent functionalities, and execution of the plurality of sub-commands emulates performance of the first functionality on at least the first device. Referring to the example above, a first sub-command (or set of first sub-commands) is generated for the
thermostat device 102 for activating or deactivating the cooling/heating functionality, while a second sub-command (or set of second sub-commands) is generated for thehub device 180 to enable the sending of the first sub-command to the thermostat in accordance with a predefined schedule. In doing so, the first functionality for operating a thermostat in accordance with a predefined schedule is enabled for the thermostat, although neither the thermostat nor the hub device itself has such capabilities. Stages of methods 1000-A through 1000-F (FIGS. 10A-10H ) and the method 1100 (FIG. 11 ) may be performed additionally and/or alternatively to one another, and may be performed in accordance with any implementations described with respect to one another. For example, any of the functionalities and constituent functionalities described may be combined with one another, and may be executed by any combination of devices. - For situations in which the systems discussed above collect information about users, the users may be provided with an opportunity to opt in/out of programs or features that may collect personal information (e.g., information about a user's preferences or usage of a smart device). In addition, in some implementations, certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be anonymized so that the personally identifiable information cannot be determined for or associated with the user, and so that user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- Although some of various drawings illustrate a number of logical stages in a particular order, stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
- The foregoing description, for purpose of explanation, has been described with reference to specific implementations. However, the illustrative discussions above are not intended to be exhaustive or to limit the scope of the claims to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The implementations were chosen in order to best explain the principles underlying the claims and their practical applications, to thereby enable others skilled in the art to best use the implementations with various modifications as are suited to the particular uses contemplated.
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/938,806 US10601604B2 (en) | 2014-11-12 | 2015-11-11 | Data processing systems and methods for smart hub devices |
PCT/US2015/060405 WO2016077598A1 (en) | 2014-11-12 | 2015-11-12 | Data processing systems and methods for smart hub devices |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462078912P | 2014-11-12 | 2014-11-12 | |
US14/938,806 US10601604B2 (en) | 2014-11-12 | 2015-11-11 | Data processing systems and methods for smart hub devices |
Publications (2)
Publication Number | Publication Date |
---|---|
US20160132031A1 true US20160132031A1 (en) | 2016-05-12 |
US10601604B2 US10601604B2 (en) | 2020-03-24 |
Family
ID=55912174
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/938,806 Active 2035-11-14 US10601604B2 (en) | 2014-11-12 | 2015-11-11 | Data processing systems and methods for smart hub devices |
Country Status (2)
Country | Link |
---|---|
US (1) | US10601604B2 (en) |
WO (1) | WO2016077598A1 (en) |
Cited By (44)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160381475A1 (en) * | 2015-05-29 | 2016-12-29 | Sound United, LLC | System and method for integrating a home media system and other home systems |
US9922580B2 (en) | 2013-04-30 | 2018-03-20 | Google Llc | Apparatus and method for the virtual demonstration of a smart phone controlled smart home using a website |
US9924021B2 (en) * | 2016-03-11 | 2018-03-20 | Distech Controls Inc. | Environment controllers capable of controlling a plurality of smart light fixtures |
US20180139728A1 (en) * | 2016-11-14 | 2018-05-17 | Google Llc | Distributed Resource Model |
US9998325B2 (en) | 2012-04-11 | 2018-06-12 | Google Llc | Apparatus and method for seamless commissioning of wireless devices |
US20180176448A1 (en) * | 2016-12-20 | 2018-06-21 | Shanghai Xiaoyi Technology Co., Ltd. | Apparatus and method for controlling imaging devices |
US10063641B2 (en) * | 2016-09-29 | 2018-08-28 | Echostar Technologies International Corporation | Systems and methods for finding wireless signals sufficient for installation of wireless home automation devices |
US10075334B1 (en) | 2012-04-11 | 2018-09-11 | Google Llc | Systems and methods for commissioning a smart hub device |
US20180262497A1 (en) * | 2017-03-13 | 2018-09-13 | Amazon Technologies, Inc. | Batch registration and configuration of devices |
US10088818B1 (en) | 2013-12-23 | 2018-10-02 | Google Llc | Systems and methods for programming and controlling devices with sensor data and learning |
WO2018213844A1 (en) * | 2017-05-19 | 2018-11-22 | Six Curtis Wayne | Smart hub system |
US10142122B1 (en) | 2012-04-11 | 2018-11-27 | Google Llc | User interfaces, systems and methods for configuring smart devices for interoperability with a smart hub device |
US20190045043A1 (en) * | 2016-02-03 | 2019-02-07 | Samsung Electronics Co., Ltd. | Method and electronic device for controlling external electronic device |
US10217346B1 (en) | 2017-11-07 | 2019-02-26 | Amazon Technologies, Inc. | Presence detection with neural networks |
US10242168B2 (en) * | 2015-12-29 | 2019-03-26 | Xiaomi Inc. | Methods and apparatuses for controlling smart device |
USD844593S1 (en) | 2017-02-06 | 2019-04-02 | Hunter Douglas, Inc. | Automation gateway |
US10262210B2 (en) | 2014-09-30 | 2019-04-16 | Google Llc | Method and system for encrypting network credentials using password provided by remote server to provisioning device |
US20190130707A1 (en) * | 2017-10-31 | 2019-05-02 | Ecolink Intelligent Technology, Inc. | Event notification using an intelligent digital assistant |
US10285248B2 (en) * | 2014-11-04 | 2019-05-07 | Signify Holding B.V. | Transmitter comprising a transmission queue and corresponding source device |
US20190140856A1 (en) * | 2017-11-06 | 2019-05-09 | Computime, Ltd. | Scalable Smart Environment Using a Gateway Thermostat |
USD848405S1 (en) | 2017-02-06 | 2019-05-14 | Hunter Douglas Inc. | Wireless repeater |
US10305994B2 (en) * | 2012-06-06 | 2019-05-28 | Google Llc | Synchronizing action execution across networked nodes using relative time |
US10305766B1 (en) * | 2017-11-07 | 2019-05-28 | Amazon Technologies, Inc. | Coexistence-insensitive presence detection |
US10397013B1 (en) | 2012-04-11 | 2019-08-27 | Google Llc | User interfaces, systems and methods for configuring smart devices for interoperability with a smart hub device |
US20190377374A1 (en) * | 2018-06-07 | 2019-12-12 | Rcs Technology, Llc | Thermostat relay device |
US10561004B2 (en) * | 2017-12-11 | 2020-02-11 | K4Connect Inc. | Home automation system including light dimmer operation based upon a sequence of partial dimming commands and related methods |
US10601604B2 (en) | 2014-11-12 | 2020-03-24 | Google Llc | Data processing systems and methods for smart hub devices |
CN111413880A (en) * | 2020-03-30 | 2020-07-14 | 重庆特斯联智慧科技股份有限公司 | Intelligent home configuration method and system based on cloud computing |
US10735355B1 (en) * | 2018-10-05 | 2020-08-04 | Facebook, Inc. | Intelligent determination of whether to initiate a communication session for a user based on proximity to client device |
US10760803B2 (en) | 2017-11-21 | 2020-09-01 | Emerson Climate Technologies, Inc. | Humidifier control systems and methods |
US10819707B1 (en) * | 2017-10-31 | 2020-10-27 | NortonLifeLock, Inc. | Systems and methods for validating a user's physical location |
US10834562B1 (en) * | 2015-07-25 | 2020-11-10 | Gary M. Zalewski | Lighting devices having wireless communication and built-in artificial intelligence bot |
US10965484B2 (en) * | 2018-12-21 | 2021-03-30 | Opendoor Labs Inc. | Fleet of home electronic systems |
US20210129988A1 (en) * | 2018-05-09 | 2021-05-06 | Ntt Docomo, Inc. | Sending apparatus and program |
US11060312B1 (en) * | 2019-05-06 | 2021-07-13 | Amazon Technologies, Inc. | Data center network tunnel |
US11132881B2 (en) * | 2018-05-08 | 2021-09-28 | Amazon Technologies, Inc. | Electronic devices capable of communicating over multiple networks |
EP3549328B1 (en) | 2016-12-01 | 2022-01-05 | BSH Hausgeräte GmbH | Household appliance having a network interface |
US11226128B2 (en) | 2018-04-20 | 2022-01-18 | Emerson Climate Technologies, Inc. | Indoor air quality and occupant monitoring systems and methods |
US11227674B2 (en) * | 2015-06-30 | 2022-01-18 | K4Connect Inc. | Home automation system generating user health score and related methods |
US11371726B2 (en) | 2018-04-20 | 2022-06-28 | Emerson Climate Technologies, Inc. | Particulate-matter-size-based fan control system |
US11421901B2 (en) | 2018-04-20 | 2022-08-23 | Emerson Climate Technologies, Inc. | Coordinated control of standalone and building indoor air quality devices and systems |
US11486593B2 (en) | 2018-04-20 | 2022-11-01 | Emerson Climate Technologies, Inc. | Systems and methods with variable mitigation thresholds |
US11609004B2 (en) | 2018-04-20 | 2023-03-21 | Emerson Climate Technologies, Inc. | Systems and methods with variable mitigation thresholds |
US11749249B2 (en) | 2015-05-29 | 2023-09-05 | Sound United, Llc. | System and method for integrating a home media system and other home systems |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9653075B1 (en) * | 2015-11-06 | 2017-05-16 | Google Inc. | Voice commands across devices |
US11145171B2 (en) * | 2019-02-28 | 2021-10-12 | Arlo Technologies, Inc. | Electronic doorbell system with text communication |
US11763809B1 (en) * | 2020-12-07 | 2023-09-19 | Amazon Technologies, Inc. | Access to multiple virtual assistants |
USD977996S1 (en) | 2020-12-18 | 2023-02-14 | Research Products Corporation | Heating ventilation and air conditioning controller |
USD977343S1 (en) | 2021-03-09 | 2023-02-07 | Research Products Corporation | Heating ventilation and air conditioning controller |
Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4049973A (en) * | 1976-04-26 | 1977-09-20 | Emerson Electric Co. | Timer controlled space thermostat with battery operated timer |
US4393342A (en) * | 1980-12-12 | 1983-07-12 | Hitachi, Ltd. | Door operation control apparatus |
US5838226A (en) * | 1996-02-07 | 1998-11-17 | Lutron Electronics Co.Inc. | Communication protocol for transmission system for controlling and determining the status of electrical devices from remote locations |
US20020178385A1 (en) * | 2001-05-22 | 2002-11-28 | Dent Paul W. | Security system |
US20030067394A1 (en) * | 2001-10-10 | 2003-04-10 | Tsui Gallen Ka Leung | Garage door monitoring system |
US6597396B1 (en) * | 1997-03-25 | 2003-07-22 | Carl-Zeiss-Stiftung | Process for creating a color impression of a video image, and a processing device therefor |
US20050041686A1 (en) * | 2003-08-07 | 2005-02-24 | Teamon Systems, Inc. | Communications system including protocol interface device providing enhanced operating protocol selection features and related methods |
US20060109988A1 (en) * | 2004-10-28 | 2006-05-25 | Metcalf Randall B | System and method for generating sound events |
US20080278100A1 (en) * | 2005-01-26 | 2008-11-13 | Hwang Jun-Dong | Lighting System Using Gps Receiver |
US7570485B2 (en) * | 2004-03-12 | 2009-08-04 | Apple Inc. | Camera latch |
US8653760B1 (en) * | 2010-11-04 | 2014-02-18 | Tim C. Pearce | Electric tea light device |
US20140164758A1 (en) * | 2012-12-07 | 2014-06-12 | Microsoft Corporation | Secure cloud database platform |
US20140266600A1 (en) * | 2013-03-14 | 2014-09-18 | Green Edge Technologies, Inc. | Systems, devices, and methods for dynamically assigning functions to an actuator |
US20150015369A1 (en) * | 2013-07-14 | 2015-01-15 | Ecolink Intelligent Technology, Inc. | Method and apparatus for controlling a movable barrier system |
US20150160634A1 (en) * | 2013-12-11 | 2015-06-11 | Echostar Technologies L.L.C. | Home automation bubble architecture |
US20160089457A1 (en) * | 2014-09-25 | 2016-03-31 | Rayvio Corporation | Ultraviolet light source and methods |
US20160370208A1 (en) * | 2013-06-28 | 2016-12-22 | Philips Lighting Holding B.V. | Data logging device |
US20170285893A1 (en) * | 2013-06-21 | 2017-10-05 | Samsung Electronics Co., Ltd. | User terminal and driving method thereof, control device and driving method thereof, and control system of controlled device |
Family Cites Families (143)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020016639A1 (en) | 1996-10-01 | 2002-02-07 | Intelihome, Inc., Texas Corporation | Method and apparatus for improved building automation |
US7260597B1 (en) | 2000-11-02 | 2007-08-21 | Sony Corporation | Remote manual, maintenance, and diagnostic services for networked electronic devices |
EP1256875A1 (en) | 2001-05-10 | 2002-11-13 | Nokia Corporation | Method and device for context dependent user input prediction |
US20030061284A1 (en) | 2001-09-26 | 2003-03-27 | Angelo Mandarino | Methods, systems and computer program products for conducting a virtual product presentation |
KR100474485B1 (en) | 2002-03-11 | 2005-03-09 | 삼성전자주식회사 | Apparatus for controlling sub-network in home-network |
US8369525B2 (en) | 2002-10-24 | 2013-02-05 | At&T Mobility Ii Llc | Dynamic password update for wireless encryption system |
US7155305B2 (en) | 2003-11-04 | 2006-12-26 | Universal Electronics Inc. | System and methods for home appliance identification and control in a networked environment |
US9172553B2 (en) | 2005-03-16 | 2015-10-27 | Icontrol Networks, Inc. | Security system with networked touchscreen and gateway |
US20050281277A1 (en) | 2004-06-22 | 2005-12-22 | Killian Thomas J | Establishing traffic priorities in a voice over IP network |
US8843995B2 (en) | 2004-11-02 | 2014-09-23 | Blackberry Limited | Generic access network (GAN) controller selection in PLMN environment |
US8407347B2 (en) | 2004-11-19 | 2013-03-26 | Xiao Qian Zhang | Method of operating multiple input and output devices through a single computer |
US7594106B2 (en) | 2005-01-28 | 2009-09-22 | Control4 Corporation | Method and apparatus for device detection and multi-mode security in a control network |
US8279158B2 (en) | 2005-02-28 | 2012-10-02 | Research In Motion Limited | Dual-function light guide for LCD backlight |
US7970439B2 (en) | 2005-03-01 | 2011-06-28 | Kyocera Corporation | Systems and methods for visual alerting mechanisms on a mobile communication device |
US8156500B2 (en) | 2005-07-01 | 2012-04-10 | Microsoft Corporation | Real-time self tuning of planned actions in a distributed environment |
US7849199B2 (en) | 2005-07-14 | 2010-12-07 | Yahoo ! Inc. | Content router |
US7352930B2 (en) | 2005-07-25 | 2008-04-01 | Research In Motion Limited | Shared light pipe for a message indicator and light sensor |
US8228198B2 (en) | 2005-08-19 | 2012-07-24 | Adasa Inc. | Systems, methods, and devices for commissioning wireless sensors |
US7830258B2 (en) | 2005-08-19 | 2010-11-09 | Adasa, Inc. | Systems, methods, and devices for converting and commissioning wireless sensors |
EP1927272B2 (en) | 2005-09-07 | 2022-01-19 | Signify Holding B.V. | Lighting commisioning device and method |
US7870232B2 (en) | 2005-11-04 | 2011-01-11 | Intermatic Incorporated | Messaging in a home automation data transfer system |
US7539488B2 (en) | 2005-11-09 | 2009-05-26 | Texas Instruments Norway As | Over-the-air download (OAD) methods and apparatus for use in facilitating application programming in wireless network devices of ad hoc wireless communication networks |
US20070294335A1 (en) | 2006-02-07 | 2007-12-20 | Efraim Gershom | Global peripheral device sharing system and method |
US8519566B2 (en) | 2006-03-28 | 2013-08-27 | Wireless Environment, Llc | Remote switch sensing in lighting devices |
US20080122606A1 (en) | 2006-04-17 | 2008-05-29 | James Roy Bradley | System and Method for Vehicular Communications |
CN101064628B (en) | 2006-04-28 | 2011-02-02 | 华为技术有限公司 | Household network appliance safe management system and method |
US20090117883A1 (en) | 2006-07-20 | 2009-05-07 | Dan Coffing | Transaction system for business and social networking |
US8619623B2 (en) | 2006-08-08 | 2013-12-31 | Marvell World Trade Ltd. | Ad-hoc simple configuration |
US8935733B2 (en) | 2006-09-07 | 2015-01-13 | Porto Vinci Ltd. Limited Liability Company | Data presentation using a wireless home entertainment hub |
JP5298391B2 (en) | 2006-09-18 | 2013-09-25 | マーベル インターナショナル リミテッド | Ad hoc network construction between many devices |
US7965983B1 (en) | 2006-12-04 | 2011-06-21 | Sprint Spectrum L.P. | Method and system for conveying medical information to a medical service person |
US9554061B1 (en) | 2006-12-15 | 2017-01-24 | Proctor Consulting LLP | Smart hub |
WO2008082441A1 (en) | 2006-12-29 | 2008-07-10 | Prodea Systems, Inc. | Display inserts, overlays, and graphical user interfaces for multimedia systems |
US8204979B2 (en) | 2007-01-31 | 2012-06-19 | Hewlett-Packard Development Company, L.P. | Adaptive client/server control protocol |
US8693877B2 (en) | 2007-03-09 | 2014-04-08 | Apple Inc. | Integrated infrared receiver and emitter for multiple functionalities |
US20080277486A1 (en) | 2007-05-09 | 2008-11-13 | Johnson Controls Technology Company | HVAC control system and method |
US7911338B2 (en) | 2007-07-30 | 2011-03-22 | Eaton Corporation | Wireless system and wireless module therefor |
US20100246825A1 (en) | 2007-09-07 | 2010-09-30 | University Of Maryland | Wireless communication method and system for transmission authentication at the physical layer |
US7953327B2 (en) | 2007-09-25 | 2011-05-31 | Eaton Corporation | Commissioning tool, commissioning system and method of commissioning a number of wireless nodes |
US8370370B2 (en) | 2007-10-15 | 2013-02-05 | International Business Machines Corporation | Bridging real-world web applications and 3D virtual worlds |
US9528861B1 (en) | 2007-10-23 | 2016-12-27 | La Crosse Technology | Remote location monitoring |
NZ601418A (en) | 2007-12-31 | 2013-10-25 | Schlage Lock Co | Mesh network security system gateway and method |
EP2247986B1 (en) | 2008-01-30 | 2014-12-31 | Neology, Inc. | Rfid authentication architecture and methods for rfid authentication |
US20090244097A1 (en) | 2008-03-25 | 2009-10-01 | Leonardo William Estevez | System and Method for Providing Augmented Reality |
US8839387B2 (en) | 2009-01-28 | 2014-09-16 | Headwater Partners I Llc | Roaming services network and overlay networks |
US8116679B2 (en) | 2008-09-15 | 2012-02-14 | Sony Ericsson Mobile Communications Ab | WLAN connection facilitated via near field communication |
US9210220B2 (en) | 2008-09-29 | 2015-12-08 | Andrew Steckley | System and method for intelligent automated remote management of electromechanical devices |
TWI370418B (en) | 2008-10-27 | 2012-08-11 | Ind Tech Res Inst | Computer system and controlling method thereof |
TWI389536B (en) | 2008-11-07 | 2013-03-11 | Ind Tech Res Inst | Access control system and method based on hierarchical key, and authentication key exchange thereof |
US20100138007A1 (en) | 2008-11-21 | 2010-06-03 | Qwebl, Inc. | Apparatus and method for integration and setup of home automation |
US9357247B2 (en) | 2008-11-24 | 2016-05-31 | Time Warner Cable Enterprises Llc | Apparatus and methods for content delivery and message exchange across multiple content delivery networks |
US20100130166A1 (en) | 2008-11-24 | 2010-05-27 | Yossef Tsuria | Slim authentication tag |
CA2957199C (en) | 2008-11-26 | 2019-01-08 | Wireless Environment, Llc | Wireless lighting devices and applications |
US8180891B1 (en) | 2008-11-26 | 2012-05-15 | Free Stream Media Corp. | Discovery, access control, and communication with networked services from within a security sandbox |
US7961674B2 (en) | 2009-01-27 | 2011-06-14 | Sony Corporation | Multi-tier wireless home mesh network with a secure network discovery protocol |
US9578182B2 (en) | 2009-01-28 | 2017-02-21 | Headwater Partners I Llc | Mobile device and service management |
US8577378B2 (en) | 2009-02-10 | 2013-11-05 | Qualcomm Incorporated | Method and apparatus for facilitating a beacon-assisted handover to a home Node-B for users on an active call |
US8107945B2 (en) | 2009-03-31 | 2012-01-31 | Cellco Partnership | Wireless device remote recovery |
US8428264B2 (en) | 2009-04-30 | 2013-04-23 | Peertribe Sa | Method and system for wireless connecting a mobile device to a service provider through a hosting wireless access node |
US8096695B2 (en) | 2009-05-08 | 2012-01-17 | Avago Technologies Ecbu Ip (Singapore) Pte. Ltd. | Light guide for ambient light sensor in a portable electronic device |
TWI491300B (en) | 2009-06-10 | 2015-07-01 | 皇家飛利浦電子股份有限公司 | Wireless network system, joining device for use in a wireless network system, method of commissioning awireless network system and computer program product |
US8626344B2 (en) | 2009-08-21 | 2014-01-07 | Allure Energy, Inc. | Energy management system and method |
US10264029B2 (en) | 2009-10-30 | 2019-04-16 | Time Warner Cable Enterprises Llc | Methods and apparatus for packetized content delivery over a content delivery network |
US8508465B2 (en) | 2009-11-05 | 2013-08-13 | Research In Motion Limited | Multiple orientation mobile electronic handheld device and method of ambient light sensing and backlight adjustment implemented therein |
US20120239936A1 (en) | 2009-12-18 | 2012-09-20 | Nokia Corporation | Credential transfer |
US8265674B2 (en) | 2010-01-08 | 2012-09-11 | Daintree Networks, Pty. Ltd. | Wireless system commissioning |
US20110202293A1 (en) | 2010-02-15 | 2011-08-18 | General Electric Company | Diagnostics using sub-metering device |
US8706271B2 (en) | 2010-02-18 | 2014-04-22 | Redwood Systems, Inc. | Integration of computing device and lighting system |
US8981913B2 (en) | 2010-02-18 | 2015-03-17 | Redwood Systems, Inc. | Commissioning lighting systems |
JP4995296B2 (en) | 2010-03-11 | 2012-08-08 | 株式会社日立製作所 | Computer system and cache control method |
US8688392B2 (en) | 2010-06-04 | 2014-04-01 | Apple Inc. | System and method for testing a light sensor of a portable electronic device |
US8471500B2 (en) | 2010-06-30 | 2013-06-25 | Research In Motion Limited | Electronic device and method of illumination |
US8519844B2 (en) | 2010-07-30 | 2013-08-27 | Gravity Jack, Inc. | Augmented reality and location determination methods and apparatus |
US8878442B2 (en) | 2010-08-31 | 2014-11-04 | Sun Lu | Chandelier lamp system |
US8942694B2 (en) | 2010-09-17 | 2015-01-27 | Digience Co., Ltd. | Digital device control system using smart phone |
US20120215878A1 (en) | 2010-09-28 | 2012-08-23 | Adam Kidron | Content delivery platform apparatuses, methods and systems |
US9137662B2 (en) | 2010-10-21 | 2015-09-15 | Nokia Technologies Oy | Method and apparatus for access credential provisioning |
US8576276B2 (en) | 2010-11-18 | 2013-11-05 | Microsoft Corporation | Head-mounted display device which provides surround video |
US20120144467A1 (en) | 2010-12-06 | 2012-06-07 | Google Inc. | Network Selection from a Menu |
US8543688B1 (en) | 2010-12-08 | 2013-09-24 | Sprint Communications Company L.P. | Generating correlation codes for location information |
US8959492B2 (en) | 2010-12-14 | 2015-02-17 | Ngmoco, Llc | Communication protocol between a high-level language and a native language |
WO2012112607A1 (en) | 2011-02-14 | 2012-08-23 | Devicescape Software, Inc. | Systems and methods for network curation |
WO2013003804A2 (en) | 2011-06-30 | 2013-01-03 | Lutron Electronics Co., Inc. | Method for programming a load control device using a smart phone |
US9172249B2 (en) | 2011-08-12 | 2015-10-27 | Rocky Research | Intelligent microgrid controller |
US8705408B2 (en) | 2011-09-09 | 2014-04-22 | Cisco Technology Inc. | Identifying a wireless network device across factory resets |
US10129211B2 (en) | 2011-09-15 | 2018-11-13 | Stephan HEATH | Methods and/or systems for an online and/or mobile privacy and/or security encryption technologies used in cloud computing with the combination of data mining and/or encryption of user's personal data and/or location data for marketing of internet posted promotions, social messaging or offers using multiple devices, browsers, operating systems, networks, fiber optic communications, multichannel platforms |
US20130073705A1 (en) | 2011-09-20 | 2013-03-21 | Honeywell International Inc. | Managing a home area network |
EP2573948B1 (en) | 2011-09-23 | 2017-03-15 | Nxp B.V. | System and method for commissioning devices |
US8555364B2 (en) | 2011-09-30 | 2013-10-08 | Time Warner Cable Enterprises Llc | System and method for cloning a wi-fi access point |
US8583955B2 (en) | 2011-10-04 | 2013-11-12 | Advanergy, Inc. | Battery management system and method |
US9143529B2 (en) | 2011-10-11 | 2015-09-22 | Citrix Systems, Inc. | Modifying pre-existing mobile applications to implement enterprise security policies |
US8924712B2 (en) | 2011-11-14 | 2014-12-30 | Ca, Inc. | Using QR codes for authenticating users to ATMs and other secure machines for cardless transactions |
US20130198786A1 (en) | 2011-12-07 | 2013-08-01 | Comcast Cable Communications, LLC. | Immersive Environment User Experience |
US9246757B2 (en) | 2012-01-23 | 2016-01-26 | Zonoff, Inc. | Commissioning devices for automation systems |
US8606645B1 (en) | 2012-02-02 | 2013-12-10 | SeeMore Interactive, Inc. | Method, medium, and system for an augmented reality retail application |
WO2013123548A2 (en) | 2012-02-20 | 2013-08-29 | Lock Box Pty Ltd. | Cryptographic method and system |
TWI467935B (en) | 2012-03-06 | 2015-01-01 | Ind Tech Res Inst | Visible light communication transceiver and system |
US9488994B2 (en) | 2012-03-29 | 2016-11-08 | Honeywell International Inc. | Method and system for configuring wireless sensors in an HVAC system |
US9015812B2 (en) | 2012-05-22 | 2015-04-21 | Hasso-Plattner-Institut Fur Softwaresystemtechnik Gmbh | Transparent control of access invoking real-time analysis of the query history |
DE102012011728A1 (en) | 2012-06-13 | 2013-12-19 | Giesecke & Devrient Gmbh | Mobile station with binding between terminal and security element |
WO2014026344A1 (en) | 2012-08-16 | 2014-02-20 | Oplink Communications, Inc. | Self-configuring wireless network |
US9083751B2 (en) | 2012-08-31 | 2015-07-14 | Cisco Technology, Inc. | Method for cloud-based access control policy management |
JP2015534748A (en) | 2012-09-04 | 2015-12-03 | ティヴォ インク | Wireless media stream distribution system |
CN102882751B (en) | 2012-09-21 | 2016-01-27 | 鸿富锦精密工业（深圳）有限公司 | Intelligent domestic network system and chromacoder thereof |
PL2902912T3 (en) | 2012-09-28 | 2019-04-30 | Saturn Licensing Llc | Information processing device, portable terminal, information processing method, program, and information processing system |
US8903370B2 (en) | 2012-10-08 | 2014-12-02 | Apple Inc. | Network access credential migration |
US20140108558A1 (en) | 2012-10-12 | 2014-04-17 | Citrix Systems, Inc. | Application Management Framework for Secure Data Sharing in an Orchestration Framework for Connected Devices |
CN102945029B (en) | 2012-10-31 | 2014-12-10 | 鸿富锦精密工业（深圳）有限公司 | Intelligent gateway, smart home system and intelligent control method for home appliance equipment |
CN102984039B (en) | 2012-11-06 | 2016-03-23 | 鸿富锦精密工业（深圳）有限公司 | The intelligent control method of intelligent gateway, intelligent domestic system and home appliance |
US20140137188A1 (en) | 2012-11-14 | 2014-05-15 | Domanicom Corporation | Devices, systems, and methods for simultaneously delivering personalized/ targeted services and advertisements to end users |
KR101906449B1 (en) | 2012-12-10 | 2018-10-10 | 삼성전자주식회사 | Method and Apparatus for Management Accessibility in Home Network System |
US20140173692A1 (en) | 2012-12-15 | 2014-06-19 | Sudharshan Srinivasan | Bring your own device system using a mobile accessory device |
KR101302653B1 (en) | 2012-12-21 | 2013-09-03 | 김정수 | An security system and a method thereof using home gateway alliance |
US9374369B2 (en) | 2012-12-28 | 2016-06-21 | Lookout, Inc. | Multi-factor authentication and comprehensive login system for client-server networks |
WO2014106031A1 (en) | 2012-12-28 | 2014-07-03 | Vasco Data Security, Inc. | Remote authentication and transaction signatures |
KR102002420B1 (en) | 2013-01-18 | 2019-10-01 | 삼성전자주식회사 | Smart home system with portable gateway |
US20140245411A1 (en) | 2013-02-22 | 2014-08-28 | Nokia Corporation | Method and apparatus for providing account-less access via an account connector platform |
US9003556B2 (en) | 2013-02-28 | 2015-04-07 | Facebook, Inc. | Techniques for in-app user data authorization |
US20140281497A1 (en) | 2013-03-13 | 2014-09-18 | General Instrument Corporation | Online personalization update system for externally acquired keys |
US9800429B2 (en) | 2013-03-15 | 2017-10-24 | Smartbotics Inc. | Adaptive home and commercial automation devices, methods and systems based on the proximity of controlling elements |
US9432361B2 (en) | 2013-03-13 | 2016-08-30 | Lookout, Inc. | System and method for changing security behavior of a device based on proximity to another device |
US9419871B2 (en) | 2013-03-15 | 2016-08-16 | Vector Unlimited, LLC | Method and system for remotely monitoring device status and internet connectivity on a computer network |
US9510193B2 (en) | 2013-03-15 | 2016-11-29 | Qualcomm Incorporated | Wireless networking-enabled personal identification system |
US9952898B2 (en) | 2013-03-15 | 2018-04-24 | Tact.Ai Technologies, Inc. | Dynamic construction and management of task pipelines |
US9619238B2 (en) | 2013-04-15 | 2017-04-11 | Amazon Technologies, Inc. | Remote attestation of host devices |
US9594638B2 (en) | 2013-04-15 | 2017-03-14 | Amazon Technologies, Inc. | Host recovery using a secure store |
US10243802B2 (en) | 2013-06-17 | 2019-03-26 | Philips Lighting Holding B.V. | Method for configuring a node and a node configured therefore |
US9191209B2 (en) | 2013-06-25 | 2015-11-17 | Google Inc. | Efficient communication for devices of a home network |
US8823795B1 (en) | 2013-07-26 | 2014-09-02 | SkyBell Technologies, Inc. | Doorbell communication systems and methods |
WO2015020975A1 (en) | 2013-08-05 | 2015-02-12 | Ameer Sami | System and method for automating electrical devices at a building structure |
US9451381B2 (en) | 2013-08-06 | 2016-09-20 | Time Warner Cable Enterprises Llc | Automated provisioning of managed services in a Wi-Fi capable client device |
US20150071052A1 (en) | 2013-09-09 | 2015-03-12 | Qualcomm Innovation Center, Inc. | Reconfiguring a headless wireless device |
KR101687340B1 (en) | 2013-09-12 | 2016-12-16 | 주식회사 케이티 | Method for setting home network operating environment and apparatus therefor |
US9423432B2 (en) | 2013-12-20 | 2016-08-23 | Thomson Licensing | Tracking electrical appliance usage |
CN106464551A (en) | 2014-01-06 | 2017-02-22 | 魅力能源公司 | System, device, and apparatus for coordinating environments using network devices and remote sensory information |
US9160724B2 (en) | 2014-01-27 | 2015-10-13 | Canon Kabushiki Kaisha | Devices, systems, and methods for device provisioning |
US20150256355A1 (en) | 2014-03-07 | 2015-09-10 | Robert J. Pera | Wall-mounted interactive sensing and audio-visual node devices for networked living and work spaces |
US9338806B2 (en) | 2014-03-28 | 2016-05-10 | Intel IP Corporation | Multi-device pairing and provisioning |
US9451462B2 (en) | 2014-08-10 | 2016-09-20 | Belkin International Inc. | Setup of multiple IoT network devices |
US9420331B2 (en) | 2014-07-07 | 2016-08-16 | Google Inc. | Method and system for categorizing detected motion events |
US9472088B2 (en) | 2014-08-25 | 2016-10-18 | Logicmark, Llc | Apparatus and method for locating and updating low-power wireless communication devices |
US10601604B2 (en) | 2014-11-12 | 2020-03-24 | Google Llc | Data processing systems and methods for smart hub devices |
US10075402B2 (en) | 2015-06-24 | 2018-09-11 | Cisco Technology, Inc. | Flexible command and control in content centric networks |
-
2015
- 2015-11-11 US US14/938,806 patent/US10601604B2/en active Active
- 2015-11-12 WO PCT/US2015/060405 patent/WO2016077598A1/en active Application Filing
Patent Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4049973A (en) * | 1976-04-26 | 1977-09-20 | Emerson Electric Co. | Timer controlled space thermostat with battery operated timer |
US4393342A (en) * | 1980-12-12 | 1983-07-12 | Hitachi, Ltd. | Door operation control apparatus |
US5838226A (en) * | 1996-02-07 | 1998-11-17 | Lutron Electronics Co.Inc. | Communication protocol for transmission system for controlling and determining the status of electrical devices from remote locations |
US6597396B1 (en) * | 1997-03-25 | 2003-07-22 | Carl-Zeiss-Stiftung | Process for creating a color impression of a video image, and a processing device therefor |
US20020178385A1 (en) * | 2001-05-22 | 2002-11-28 | Dent Paul W. | Security system |
US20030067394A1 (en) * | 2001-10-10 | 2003-04-10 | Tsui Gallen Ka Leung | Garage door monitoring system |
US20050041686A1 (en) * | 2003-08-07 | 2005-02-24 | Teamon Systems, Inc. | Communications system including protocol interface device providing enhanced operating protocol selection features and related methods |
US7570485B2 (en) * | 2004-03-12 | 2009-08-04 | Apple Inc. | Camera latch |
US20060109988A1 (en) * | 2004-10-28 | 2006-05-25 | Metcalf Randall B | System and method for generating sound events |
US20080278100A1 (en) * | 2005-01-26 | 2008-11-13 | Hwang Jun-Dong | Lighting System Using Gps Receiver |
US8653760B1 (en) * | 2010-11-04 | 2014-02-18 | Tim C. Pearce | Electric tea light device |
US20140164758A1 (en) * | 2012-12-07 | 2014-06-12 | Microsoft Corporation | Secure cloud database platform |
US20140266600A1 (en) * | 2013-03-14 | 2014-09-18 | Green Edge Technologies, Inc. | Systems, devices, and methods for dynamically assigning functions to an actuator |
US20170285893A1 (en) * | 2013-06-21 | 2017-10-05 | Samsung Electronics Co., Ltd. | User terminal and driving method thereof, control device and driving method thereof, and control system of controlled device |
US20160370208A1 (en) * | 2013-06-28 | 2016-12-22 | Philips Lighting Holding B.V. | Data logging device |
US20150015369A1 (en) * | 2013-07-14 | 2015-01-15 | Ecolink Intelligent Technology, Inc. | Method and apparatus for controlling a movable barrier system |
US20150160634A1 (en) * | 2013-12-11 | 2015-06-11 | Echostar Technologies L.L.C. | Home automation bubble architecture |
US20160089457A1 (en) * | 2014-09-25 | 2016-03-31 | Rayvio Corporation | Ultraviolet light source and methods |
Cited By (70)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10505797B2 (en) | 2012-04-11 | 2019-12-10 | Google Llc | Apparatus and method for seamless commissioning of wireless devices |
US10142122B1 (en) | 2012-04-11 | 2018-11-27 | Google Llc | User interfaces, systems and methods for configuring smart devices for interoperability with a smart hub device |
US11050615B2 (en) | 2012-04-11 | 2021-06-29 | Google Llc | Apparatus and method for seamless commissioning of wireless devices |
US10075334B1 (en) | 2012-04-11 | 2018-09-11 | Google Llc | Systems and methods for commissioning a smart hub device |
US10764128B2 (en) | 2012-04-11 | 2020-09-01 | Google Llc | Systems and methods for commissioning a smart hub device |
US10397013B1 (en) | 2012-04-11 | 2019-08-27 | Google Llc | User interfaces, systems and methods for configuring smart devices for interoperability with a smart hub device |
US9998325B2 (en) | 2012-04-11 | 2018-06-12 | Google Llc | Apparatus and method for seamless commissioning of wireless devices |
US10305994B2 (en) * | 2012-06-06 | 2019-05-28 | Google Llc | Synchronizing action execution across networked nodes using relative time |
US9922580B2 (en) | 2013-04-30 | 2018-03-20 | Google Llc | Apparatus and method for the virtual demonstration of a smart phone controlled smart home using a website |
US10088818B1 (en) | 2013-12-23 | 2018-10-02 | Google Llc | Systems and methods for programming and controlling devices with sensor data and learning |
US10571877B2 (en) | 2013-12-23 | 2020-02-25 | Google Llc | Systems and methods for programming and controlling devices with sensor data and learning |
US10586112B2 (en) | 2014-09-30 | 2020-03-10 | Google Llc | Method and system for provisioning an electronic device |
US10262210B2 (en) | 2014-09-30 | 2019-04-16 | Google Llc | Method and system for encrypting network credentials using password provided by remote server to provisioning device |
US10896585B2 (en) | 2014-09-30 | 2021-01-19 | Google Llc | Method and system for provisioning an electronic device |
US10285248B2 (en) * | 2014-11-04 | 2019-05-07 | Signify Holding B.V. | Transmitter comprising a transmission queue and corresponding source device |
US10601604B2 (en) | 2014-11-12 | 2020-03-24 | Google Llc | Data processing systems and methods for smart hub devices |
US10657949B2 (en) * | 2015-05-29 | 2020-05-19 | Sound United, LLC | System and method for integrating a home media system and other home systems |
US11176922B2 (en) | 2015-05-29 | 2021-11-16 | Sound United, Llc. | System and method for integrating a home media system and other home systems |
US20160381475A1 (en) * | 2015-05-29 | 2016-12-29 | Sound United, LLC | System and method for integrating a home media system and other home systems |
US11749249B2 (en) | 2015-05-29 | 2023-09-05 | Sound United, Llc. | System and method for integrating a home media system and other home systems |
US11227674B2 (en) * | 2015-06-30 | 2022-01-18 | K4Connect Inc. | Home automation system generating user health score and related methods |
US10834562B1 (en) * | 2015-07-25 | 2020-11-10 | Gary M. Zalewski | Lighting devices having wireless communication and built-in artificial intelligence bot |
US10242168B2 (en) * | 2015-12-29 | 2019-03-26 | Xiaomi Inc. | Methods and apparatuses for controlling smart device |
US10666786B2 (en) * | 2016-02-03 | 2020-05-26 | Samsung Electronics Co., Ltd. | Method and electronic device for controlling external electronic device |
US20190045043A1 (en) * | 2016-02-03 | 2019-02-07 | Samsung Electronics Co., Ltd. | Method and electronic device for controlling external electronic device |
US11050873B2 (en) * | 2016-02-03 | 2021-06-29 | Samsung Electronics Co., Ltd. | Method and electronic device for controlling external electronic device |
US11677868B2 (en) * | 2016-02-03 | 2023-06-13 | Samsung Electronics Co., Ltd. | Method and electronic device for controlling external electronic device |
US20210329118A1 (en) * | 2016-02-03 | 2021-10-21 | Samsung Electronics Co., Ltd. | Method and electronic device for controlling external electronic device |
US9924021B2 (en) * | 2016-03-11 | 2018-03-20 | Distech Controls Inc. | Environment controllers capable of controlling a plurality of smart light fixtures |
US10063641B2 (en) * | 2016-09-29 | 2018-08-28 | Echostar Technologies International Corporation | Systems and methods for finding wireless signals sufficient for installation of wireless home automation devices |
US20180139728A1 (en) * | 2016-11-14 | 2018-05-17 | Google Llc | Distributed Resource Model |
US11272481B2 (en) * | 2016-11-14 | 2022-03-08 | Google Llc | Distributed resource model |
US11785584B2 (en) | 2016-11-14 | 2023-10-10 | Google Llc | Distributed resource model |
EP3549328B1 (en) | 2016-12-01 | 2022-01-05 | BSH Hausgeräte GmbH | Household appliance having a network interface |
US10491797B2 (en) * | 2016-12-20 | 2019-11-26 | Shanghai Xiaoyi Technology Co., Ltd. | Apparatus and method for controlling imaging devices |
US20180176448A1 (en) * | 2016-12-20 | 2018-06-21 | Shanghai Xiaoyi Technology Co., Ltd. | Apparatus and method for controlling imaging devices |
USD873807S1 (en) | 2017-02-06 | 2020-01-28 | Hunter Douglas Inc. | Automation gateway |
USD844593S1 (en) | 2017-02-06 | 2019-04-02 | Hunter Douglas, Inc. | Automation gateway |
USD848405S1 (en) | 2017-02-06 | 2019-05-14 | Hunter Douglas Inc. | Wireless repeater |
USD864930S1 (en) | 2017-02-06 | 2019-10-29 | Hunter Douglas Inc. | Wireless repeater |
US10708265B2 (en) * | 2017-03-13 | 2020-07-07 | Amazon Technologies, Inc. | Batch registration and configuration of devices |
US20180262497A1 (en) * | 2017-03-13 | 2018-09-13 | Amazon Technologies, Inc. | Batch registration and configuration of devices |
US11381559B2 (en) | 2017-03-13 | 2022-07-05 | Amazon Technologies, Inc. | Batch registration and configuration of devices |
CN110402569A (en) * | 2017-03-13 | 2019-11-01 | 亚马逊科技公司 | The batch registration and configuration of equipment |
WO2018213844A1 (en) * | 2017-05-19 | 2018-11-22 | Six Curtis Wayne | Smart hub system |
US10819707B1 (en) * | 2017-10-31 | 2020-10-27 | NortonLifeLock, Inc. | Systems and methods for validating a user's physical location |
US20190130707A1 (en) * | 2017-10-31 | 2019-05-02 | Ecolink Intelligent Technology, Inc. | Event notification using an intelligent digital assistant |
US10897374B2 (en) * | 2017-11-06 | 2021-01-19 | Computime Ltd. | Scalable smart environment for controlling a plurality of controlled apparatuses using a connection hub to route a processed subset of control data received from a cloud computing resource to terminal units |
US20190140856A1 (en) * | 2017-11-06 | 2019-05-09 | Computime, Ltd. | Scalable Smart Environment Using a Gateway Thermostat |
US10305766B1 (en) * | 2017-11-07 | 2019-05-28 | Amazon Technologies, Inc. | Coexistence-insensitive presence detection |
US10217346B1 (en) | 2017-11-07 | 2019-02-26 | Amazon Technologies, Inc. | Presence detection with neural networks |
US10767878B2 (en) | 2017-11-21 | 2020-09-08 | Emerson Climate Technologies, Inc. | Humidifier control systems and methods |
US10760804B2 (en) | 2017-11-21 | 2020-09-01 | Emerson Climate Technologies, Inc. | Humidifier control systems and methods |
US10760803B2 (en) | 2017-11-21 | 2020-09-01 | Emerson Climate Technologies, Inc. | Humidifier control systems and methods |
US10561004B2 (en) * | 2017-12-11 | 2020-02-11 | K4Connect Inc. | Home automation system including light dimmer operation based upon a sequence of partial dimming commands and related methods |
US11226128B2 (en) | 2018-04-20 | 2022-01-18 | Emerson Climate Technologies, Inc. | Indoor air quality and occupant monitoring systems and methods |
US11486593B2 (en) | 2018-04-20 | 2022-11-01 | Emerson Climate Technologies, Inc. | Systems and methods with variable mitigation thresholds |
US11371726B2 (en) | 2018-04-20 | 2022-06-28 | Emerson Climate Technologies, Inc. | Particulate-matter-size-based fan control system |
US11609004B2 (en) | 2018-04-20 | 2023-03-21 | Emerson Climate Technologies, Inc. | Systems and methods with variable mitigation thresholds |
US11421901B2 (en) | 2018-04-20 | 2022-08-23 | Emerson Climate Technologies, Inc. | Coordinated control of standalone and building indoor air quality devices and systems |
US11132881B2 (en) * | 2018-05-08 | 2021-09-28 | Amazon Technologies, Inc. | Electronic devices capable of communicating over multiple networks |
US11891176B2 (en) * | 2018-05-09 | 2024-02-06 | Ntt Docomo, Inc. | Determination of position sending interval for flying vehicle dependent upon ground surface below vehicle |
US20210129988A1 (en) * | 2018-05-09 | 2021-05-06 | Ntt Docomo, Inc. | Sending apparatus and program |
US20190377374A1 (en) * | 2018-06-07 | 2019-12-12 | Rcs Technology, Llc | Thermostat relay device |
US11381533B1 (en) * | 2018-10-05 | 2022-07-05 | Meta Platforms, Inc. | Intelligent determination of whether to initiate a communication session for a user based on proximity to client device |
US10735355B1 (en) * | 2018-10-05 | 2020-08-04 | Facebook, Inc. | Intelligent determination of whether to initiate a communication session for a user based on proximity to client device |
US20210184884A1 (en) * | 2018-12-21 | 2021-06-17 | Opendoor Labs Inc. | Fleet of home electronic systems |
US10965484B2 (en) * | 2018-12-21 | 2021-03-30 | Opendoor Labs Inc. | Fleet of home electronic systems |
US11060312B1 (en) * | 2019-05-06 | 2021-07-13 | Amazon Technologies, Inc. | Data center network tunnel |
CN111413880A (en) * | 2020-03-30 | 2020-07-14 | 重庆特斯联智慧科技股份有限公司 | Intelligent home configuration method and system based on cloud computing |
Also Published As
Publication number | Publication date |
---|---|
WO2016077598A1 (en) | 2016-05-19 |
US10601604B2 (en) | 2020-03-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10601604B2 (en) | Data processing systems and methods for smart hub devices | |
US10571877B2 (en) | Systems and methods for programming and controlling devices with sensor data and learning | |
US11257356B2 (en) | Systems and methods for presenting security questions via connected security system | |
US10685522B2 (en) | Systems and methods for anticipatory locking and unlocking of a smart-sensor door lock | |
US11967222B2 (en) | Configuring a smart home controller | |
US10558323B1 (en) | Systems and methods for smart home automation using a multifunction status and entry point icon | |
US10621442B2 (en) | Method and system for detecting an audio event for smart home devices | |
US11734345B2 (en) | Systems and methods for monitoring objects and their states by using acoustic signals | |
US9491571B2 (en) | Methods and apparatus for using smart environment devices via application program interfaces | |
US11082701B2 (en) | Methods and devices for dynamic adaptation of encoding bitrate for video streaming | |
US20180232592A1 (en) | Automatic detection of zones of interest in a video | |
US10078949B2 (en) | Systems, devices, and methods for providing heat-source alerts | |
US10791259B2 (en) | Devices and methods for repurposing IR transmitters | |
CN109196352B (en) | System and method for monitoring an object and its state by using acoustic signals |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KOZURA, JOHN;TAYLOR, HALEY A.;MATHEWS, JEFF;AND OTHERS;SIGNING DATES FROM 20151110 TO 20151111;REEL/FRAME:037110/0828 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP., ISSUE FEE NOT PAID |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
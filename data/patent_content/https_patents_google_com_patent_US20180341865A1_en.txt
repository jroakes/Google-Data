US20180341865A1 - Systems and methods for generating and communicating application recommendations at uninstall time - Google Patents
Systems and methods for generating and communicating application recommendations at uninstall time Download PDFInfo
- Publication number
- US20180341865A1 US20180341865A1 US15/604,647 US201715604647A US2018341865A1 US 20180341865 A1 US20180341865 A1 US 20180341865A1 US 201715604647 A US201715604647 A US 201715604647A US 2018341865 A1 US2018341865 A1 US 2018341865A1
- Authority
- US
- United States
- Prior art keywords
- application
- applications
- user
- contextual information
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0631—Item recommendations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/61—Installation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/61—Installation
- G06F8/62—Uninstallation
Definitions
- a computer-implemented method for generating and communicating an application recommendation includes receiving a signal from an electronic device indicating that an uninstallation of a first application has been initiated by a user on the electronic device, obtaining contextual information of the first application, the contextual information including data that indicates a period of time during which the first application was installed and a frequency of use of the first application, obtaining utilization data, the utilization data including data that indicates other applications that have been installed on the electronic device, determining a plurality of applications that are similar to the first application, generating a first predictive model using at least the contextual information and the utilization data, the first predictive model being configured to predict a likelihood of uninstallation of a second application in the plurality of applications, and automatically recommending, at the time of the uninstallation of the first application, one or more of the plurality of applications, the recommending being based at least in part on the first predictive model.
- a computer-implemented method for generating and communicating an application recommendation includes receiving a signal from an electronic device indicating that an uninstallation of a first application has been initiated by a user on the electronic device, obtaining contextual information of the first application, the contextual information including data that indicates when the first application was installed and frequency of use of the first application, obtaining utilization data, the utilization data including data that indicates applications that have been installed on the electronic device, determining a plurality of applications that are similar to the first application, determining a score for the first application, the score being based on the utilization data and indicating a level of the user's satisfaction with the first application, updating a range of values in a user profile based on the score and the contextual information, the range of values indicating a range of contextual information values that the user tolerated in the first application, and automatically recommending, at the time of the uninstallation of the first application, one or more of the plurality of applications, the recommending being based at least in part on the user profile.
- FIG. 1 shows an example system configuration according to an embodiment of the disclosed subject matter.
- FIG. 2A shows an example recommendation process according to an embodiment of the disclosed subject matter.
- FIG. 2B shows an example recommendation screen according to an embodiment of the disclosed subject matter.
- FIG. 3 shows example application profiles according to an embodiment of the disclosed subject matter.
- FIG. 4 shows an example selection method according to an embodiment of the disclosed subject matter.
- FIG. 5 shows an example user profile according to an embodiment of the disclosed subject matter.
- FIG. 6 shows a computing device according to an embodiment of the disclosed subject matter.
- FIG. 7 shows a network configuration according to an embodiment of the disclosed subject matter.
- Distribution service systems and associated user devices can function more efficiently if accurate recommendations are provided to the users to guide them toward applications that are more likely to address their concerns. Time, computing resources, and user experience are all valuable factors that are impacted by the quality and timeliness of application recommendations, both of which can be significantly improved by implementing the disclosed embodiments.
- the disclosed embodiments improve the technological art of automatically discovering and recommending applications to a user of an electronic device.
- the recommendation process is designed to learn which secondary interests are important to the user and to address the user's immediate concerns.
- a system of the disclosed embodiments can obtain contextual information and historical utilization data that can be used to determine a recommendation for one or more applications to replace a deleted application, with an improved likelihood that the recommended applications will satisfy the user's secondary interests.
- contextual information and historical utilization data can be used to determine training data for one or more machine learning algorithms.
- the algorithms can produce one or more models that can predict which applications will be satisfactory for a given user. Recommendations for applications can then be based at least in part on the one or more models.
- the training data can include various inputs as well as the appropriate outputs that have been determined to result from those inputs.
- historical utilization data can be used to determine a score (output) that indicates a satisfaction level of past/current applications that the user has installed/uninstalled.
- Contextual information that corresponds to attributes of the applications can be used to provide input.
- models can be inferred from the historical utilization data and contextual information.
- the machine learning algorithm can also be used to leverage contextual information and utilization data from multiple users.
- FIG. 1 shows an example system configuration 100 that can implement the disclosed embodiments.
- the system can be configured for use on a wide area network, such as that illustrated in FIG. 1 , however, the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices.
- each of the components of system 100 in FIG. 1 can be implemented in a localized or distributed fashion in a network.
- a user can interact with distribution service platform 105 through client devices 102 1 , 102 2 , 102 3 , . . . , 102 n (collectively “ 102 ”) connected to network 104 by direct and/or indirect communication.
- Distribution service platform 105 can support connections from a variety of different client devices, such as desktop computers; mobile computers; mobile communications devices, e.g. mobile phones, smart phones, tablets; smart televisions; set-top boxes; wearable electronic devices, and/or any other network enabled computing devices.
- Client devices 102 can be of varying type, capabilities, operating systems, etc.
- distribution service platform 105 can concurrently accept connections from and interact with multiple client devices 102 .
- a user can interact with distribution service platform 105 via a client-side application installed on a client device 102 .
- the client-side application can include a distribution service platform specific component.
- the component can be a stand-alone “Store” application, one or more application plug-ins, and/or a browser extension.
- a user can also view or select applications and/or content via a web interface generated and served by user interface module 120 .
- the user can navigate in a web browser to a web address provided by distribution service platform 105 .
- the user can also interact with distribution service platform 105 via a third-party application, such as a web browser, that resides on client device 102 and is configured to communicate with distribution service platform 105 .
- the client-side application can present a user interface (UI) for the user to interact with distribution service platform 105 .
- UI user interface
- the user can interact with the distribution service platform 105 via a client-side application integrated with the file system or via a webpage displayed using a web browser application.
- Distribution service platform 105 can make it possible for a user to search, select, purchase, and download applications and various types of content, as well as perform a variety of content management tasks, such as retrieve, modify, browse, and/or share the applications and content. Furthermore, distribution service platform 105 can make it possible for a user to access the content from multiple client devices 102 . For example, client device 102 1 can upload content to distribution service platform 105 via network 104 . The content can later be retrieved from distribution service platform 105 using the same client device 102 1 or some other client device 102 3 .
- a user can create an account with distribution service platform 105 .
- the account information can be maintained in user account database 140 .
- User account database 140 can store profile information for registered users. In some cases, the only personal information in the user profile can be a username and/or email address. However, distribution service platform 105 can also be configured to accept additional user information, as will be discussed further below.
- Content storage 160 can be a storage device, multiple storage devices, or a server. Alternatively, content storage 160 can be a cloud storage provider or network storage accessible via one or more communications networks.
- Distribution service platform 105 can hide the complexity and details from client devices 102 so that client devices 102 do not need to know exactly where the applications and content items are being stored by distribution service platform 105 .
- Distribution service platform 105 can store the applications and content items, for example, in a network accessible storage (SAN) device, in a redundant array of inexpensive disks (RAID), etc.
- Content storage 160 can store applications and content items using one or more partition types, such as FAT, FAT32, NTFS, EXT2, EXT3, EXT4, ReiserFS, BTRFS, and so forth.
- Content storage 160 can also store metadata describing applications and content items, application and content item types, and the relationships of applications and content items to various user accounts.
- the metadata for an application or content item can be stored as part of the application or content item, or can be stored separately.
- each application and content item stored in content storage 160 can be assigned a system-wide unique identifier.
- Distribution service platform 105 can include a communications module 110 for communicating with various client devices 102 via the network 104 .
- certain software applications on client devices 102 can communicate with the distribution service platform 105 via an Application Programming Interface (API) on behalf of a user.
- API Application Programming Interface
- a software package such as an application running on a smartphone or tablet computing device, can programmatically transmit requests directly to distribution service platform 105 , when a user provides credentials, to download an application from content storage 160 .
- the API can allow users to browse or access all or part of content storage 160 through a web site.
- Distribution service platform 105 can also include an analytics module 130 that can track and report on aggregate file operations, user actions, network usage, total storage space used, as well as other technology, usage, or business metrics.
- the analytics module 130 can also track downloads of applications and maintain a contextual attributes database 150 that associates application profiles with reported contextual attributes of the applications, as will be discussed further below.
- a privacy and/or security policy can prevent unauthorized access to user data stored with distribution service platform 105 .
- distribution service platform 105 is presented with specific components, it should be understood by one skilled in the art, that the architectural configuration of system 105 is simply one possible configuration and that other configurations with more or less components are also possible.
- FIG. 2A shows an example embodiment of a recommendation process 200 according to the disclosed subject matter.
- the process 200 uses “contextual attributes” that characterize the application and “utilization data” that capture the user's historical application usage to predict which applications that are similar to the uninstalled application will be satisfactory to the user and presents a recommendation accordingly at the time of uninstallation. Further details follow.
- a recommendation system receives a signal from an electronic device (e.g., 102 1 in FIG. 1 ) that indicates a user has initiated uninstallation of an application on the electronic device.
- the recommendation system can reside on an external server (e.g., distribution service platform 105 in FIG. 1 ). In another embodiment, the recommendation system can reside on the electronic device itself.
- the recommendation system obtains contextual information related to the application.
- the contextual information provides details of how the application was used and performed.
- the contextual information can include data that indicates when the application was installed, how frequently it was used, and how much storage space it occupied.
- an API can be provided for the application and/or the operating system of the electronic device to store and transmit more detailed contextual information to the recommendation system.
- the API can include one or more functions that store data related to performance of the application.
- performance data can include, for example, data values that represent: battery energy consumption, how much network data the application downloaded/uploaded, how much memory the application used, how often the application failed or “crashed,” display metrics such as how often the application “stuttered” or “froze”, how fast the application loaded, etc.
- Other types of performance and/or quality related data not listed here can be stored, e.g., an application's review rating in a distribution service platform.
- Such data will be referred to herein as “contextual attributes” of an application.
- one or more of types of contextual attributes may or may not available, depending on the settings and capabilities of the application and the electronic device operating system.
- the electronic device e.g., 102 1 in FIG. 1
- the distribution services platform can store the contextual information in a database (e.g., 150 in FIG. 1 ) in association with a profile corresponding to the application.
- the profile can be maintained cumulatively.
- a profile for a hypothetical application “Radical Racer” can include data indicating that based on data received from 1000 uninstalls on client devices (e.g., 102 in FIG. 1 ), on average the application crashed 1 time per 50 startups.
- a “crash_rating” contextual attribute can be a part of the application profile to store this data.
- utilization data associated with the user of the electronic device.
- the utilization data can include information that identifies applications that have been installed/uninstalled on the electronic device and the timing of the installations/uninstallations.
- utilization data can provide a basis for determining which context attributes are secondary interests that are important to the user and thereby impact predictions of which applications are likely to succeed in satisfying the user.
- the system determines a plurality of applications that are similar to the application being uninstalled.
- One application is “similar to” another if it is determined that it can provide at least one equivalent, replacement, or essentially equivalent function that may be sufficient to replace the functionality of the other application for a user.
- techniques disclosed herein may determine that one application is similar to another based on known techniques and algorithms to determine applications similar to a target application in a distribution service platform. For example, similarity can be determined based on an application's metadata that identify keywords, type, genre, developer, etc., that classify, categorize, or describe the application.
- the user may have a primary interest in replacing the uninstalled application with a similar application that better satisfies the user's secondary interests.
- simply recommending similar applications as many conventional recommendation systems do, often falls short of sufficiently narrowing the application field. That is, while a distribution service may have dozens or even hundreds of a certain type of application, e.g., racing games, the applications can vary in implementation such that some will satisfy a given user and others will not satisfy the same user.
- Merely recommending similar applications, or even recommending the highest rated similar applications can fail to connect a given user to the application that will appeal most to that user's specific secondary interests.
- the disclosed recommendation system generates one or more models based on the user's contextual information and utilization data to predict which application among similar applications will satisfy a user by learning which contextual attributes are important secondary interests for the user.
- the similar applications can then be ranked based on the secondary interests to increase the likelihood of recommending applications that will satisfy the user's search.
- a recommendation based on the ranked similar applications, is provided to the user at the time of uninstallation.
- a reason for making the recommendation can also be provided, based on the contextual attributes of the uninstalled application.
- FIG. 2B shows an example recommendation screen 270 , in which three applications are presented.
- the screen 270 can be displayed while the uninstallation is taking place or immediately preceding thereafter. In this manner the barrier of requiring the user to access the distribution service is eliminated.
- a frustrated user who is dissatisfied with an application may not be inclined to go back to the distribution service interface to start searching again, however, the user may be willing to give another application a try upon seeing a direct, automatic presentation of what appears to be a good recommendation.
- the removal of the access barrier and the timeliness of the recommendation are significant improvements over the conventional method of recommending applications through a distribution service interface splash page or the like.
- the user does not need to navigate back to the distribution service, navigate through its interface back to its search function and resume sifting through search results to figure out where he/she left off. Instead, the user can be immediately presented with a plurality of application recommendations that are tailored specifically to address the user's primary and secondary interests.
- the electronic device can be configured such that the user need only tap a button or enter a single input to initiate a purchase or a download/installation of a recommended application.
- FIG. 3 shows an example table of profiles for a user's electronic device comprising applications 310 , associated contextual attributes 320 , and utilization data 330 .
- four contextual attributes are shown, however, more or less and different types of contextual attributes can be used.
- Contextual attributes can be represented in a normalized numerical format.
- the “Battery Drain” attribute in this example is represented on a scale of 1 to 3, with “1” indicating low drain, “2” indicating medium drain, and “3” indicating high drain.
- the “Performance” attribute is represented in a direct value, for example, calculated by dividing the number of crashes by the number of instances of execution.
- the “Size” attribute normalizes the memory range of 0 to 1 gb to a value in the range of 0 to 200 where, any memory size over 1 gb normalizes to a value of 200.
- Each of these formats are merely examples.
- contextual attributes can be represented in any of the above or other formats or using different normalization techniques as appropriate for the data set.
- the contextual attributes set can further include values associated with the application obtained from other sources, such as the application's rating in the distribution platform,
- the utilization data can also be normalized.
- “Installed Time” is a time range of 0 to 6 months normalized to a range of 0 to 1000, where any value over 6 months normalizes to a value of 1000.
- the utilization data 330 can be used to generate an application satisfaction score S for the user.
- the satisfaction score, utilization data and contextual attributes can be used in multiple ways to improve the accuracy of a recommendation.
- the contextual attributes and the satisfaction scores corresponding to the applications represented in the utilization data can form a training data set for one or more machine learning algorithms. For example, a matrix of rows and columns including the full list of applications in a first column and their corresponding contextual attributes in matrix rows can be divided into multiple datasets for training and validation. For example, in one embodiment 70% of the rows can be used for training and 30% of the rows can be used for validation.
- Machine learning algorithms e.g., k-nearest neighbors, logistic regression, classification and regression trees, linear discriminant analysis, Gaussian naive Bayes, support vector machines, etc.
- Machine learning algorithms e.g., k-nearest neighbors, logistic regression, classification and regression trees, linear discriminant analysis, Gaussian naive Bayes, support vector machines, etc.
- Whichever algorithm produces the most accurate model, as tested on the validation data set can be used on the plurality of applications that are similar to the application being uninstalled.
- the algorithms can be tested on different combinations of attributes and/or on one or more individual attributes at a time to check whether models with increased accuracy can be created. That is, the first column (i.e., the applications) and one or more additional columns can be selected from the matrix training dataset to reduce the matrix to a subset instead of testing the full training dataset.
- the crash rate of an application is the most important secondary interest. After an application crashes a number of times the first user uninstalls the application, regardless of any other factors. In this case, a direct correlation may exist between the crash rate and satisfaction score of any application that the first user installs.
- a second hypothetical user load time is the most important secondary interest.
- a combination of battery drain and size is most important secondary interests.
- the relevant contextual attributes associated with the profiles of the similar applications can be run through the model to obtain a predicted satisfaction score.
- the most accurate model will only be used if its results achieve at least a minimum threshold of accuracy.
- the threshold of accuracy can change over time as the system obtains larger data sets of information. For example, the threshold of accuracy can initially be set to 50% and increase an incremental amount per every additional record that is added to the data set, or increase to higher percentages at milestones in the dataset. If none of the models result in at least the minimum threshold of accuracy, a different method can be used to choose which of the similar applications should be recommended to the user.
- FIG. 4 shows an example selection method that can be used instead of using a prediction model.
- the system can build a user profile to determine filter ranges to apply to one or more contextual attributes based on the satisfaction score of the application being uninstalled.
- the system determines whether the satisfaction score for the application being uninstalled is above a threshold value T.
- the satisfaction threshold value can be set to an initial default value and adjusted over time, for example, based on the user's uninstallation patterns and the maximum amounts of time that applications remain installed on the electronic device.
- uninstallation of an application with a satisfaction score above the threshold can be viewed as an indication that the user has exhausted the usefulness of the application but would be satisfied to find a similar application with similar contextual attribute values to replace it.
- the system can create filter ranges for contextual attributes based on the values obtained from the uninstalled application. For example, regarding the uninstallation of “Hearthrock” it is reasonable to assume that the user can at least tolerate an application with matching or similar contextual attribute values to Hearthrock. That is, the values of Hearthrock's contextual attributes do not appear to be deal-breakers for the user in view of the relatively high satisfaction score.
- the system can store the contextual attributes as part of an update to a user profile.
- the user profile defines acceptable ranges for contextual attribute values for a given user. For example, based on the S value for “Hearthrock” being greater than threshold T, a range can be defined for each available contextual attribute, for example, by a +/ ⁇ amount, e.g., 3%, or a default amount defined per attribute that can be fine-tuned to match the user's tolerance over time.
- FIG. 5 shows an example user profile 500 .
- a profile 500 may initially be created with default values that represent an estimate of user tolerance. The default values can be replaced in updates with information obtained when the user uninstalls an application.
- the system can search for similar applications that have contextual attributes that fall within the ranges defined in the user profile.
- the recommendation can be provided to the user at the time of uninstallation.
- the disclosed embodiments can therefore provide recommendations that use data captured at the time of uninstallation of an application to more accurately consider why a user is uninstalling the application (e.g., whether the user is satisfied or not with the application) and not simply recommend similar applications, but predict which similar applications are likely to satisfy the user's current desire and immediately provide a recommendation directly to the user at the time of uninstallation, thereby removing a significant barrier between the user and the applications.
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by a system as disclosed herein.
- FIG. 6 is an example electronic device 20 (e.g., 102 1 in FIG. 1 ) suitable for implementing embodiments of the presently disclosed subject matter.
- the device 20 may be, for example, a television, a desktop or laptop computer, or a mobile computing device such as a smart phone, tablet, or the like.
- the device 20 can include a bus 21 which interconnects major components, such as a central processor 24 , a memory 27 such as Random Access Memory (RAM), Read Only Memory (ROM), flash RAM, or the like, a user display 22 such as a display screen, a user input interface 26 , which can include one or more controllers and associated user input devices such as a button, spin wheel, slider, keyboard, mouse, touch screen, or the like, a fixed storage 23 such as a hard drive, flash storage, etc., an optional removable media component 25 operative to control and receive an memory card, optical disk, flash drive, or the like, an optional network interface 29 operable to communicate with one or more external devices via a suitable network connection, and a transceiver 30 operable to communicate with one or more remote devices via a suitable network connection.
- a bus 21 which interconnects major components, such as a central processor 24 , a memory 27 such as Random Access Memory (RAM), Read Only Memory (ROM), flash RAM, or the like, a user display 22 such as a display screen
- the bus 21 allows data communication between the central processor 24 and one or more memory components, which may include RAM, ROM, and other memory, as previously noted.
- RAM is the main memory into which an operating system and application programs are loaded.
- a ROM or flash memory component can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components.
- BIOS Basic Input-Output system
- Applications resident with the device 20 are generally stored on and accessed via a computer readable medium, such as a solid state storage drive (e.g., fixed storage 23 ), a hard drive, flash drive, optical drive, or other storage medium.
- the fixed storage 23 may be integral with the computer 20 or may be separate and accessed through other interfaces.
- the network interface 29 may provide a direct connection to a remote server via a wired or wireless connection.
- the network interface 29 may provide such connection using any suitable technique and protocol as will be readily understood by one of skill in the art, including digital cellular telephone, WiFi, Bluetooth®, near-field, and the like.
- the network interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other communication networks, as described in further detail below.
- FIG. 6 Many other devices or components (not shown) may be connected in a similar manner (e.g., digital cameras, speakers, microphones, scanners, etc.). Conversely, all of the components shown in FIG. 6 need not be present to practice the present disclosure. The components can be interconnected in different ways from that shown. The operation of a computer such as that shown in FIG. 6 is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of the memory 27 , fixed storage 23 , removable media 25 , or on a remote storage location.
- FIG. 7 shows another example arrangement according to an embodiment of the disclosed subject matter.
- One or more electronic devices or systems 10 , 11 such as remote services or service providers 11 , user devices 10 such as local computers, smart phones, tablet computing devices, televisions, wearable electronic devices and the like, may connect to other devices via one or more networks 7 .
- the network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks.
- the devices 10 , 11 may communicate with one or more remote computer systems, such as processing units 14 , databases 15 , and user interface systems 13 .
- the devices 10 , 11 may communicate with a user-facing interface system 13 , which may provide access to one or more other systems such as a application/content database 15 , a processing unit 14 , or the like.
- the user interface 13 may be a user-accessible web page that provides data from one or more other computer systems.
- the user interface 13 may provide different interfaces to different clients, such as where a human-readable web page is provided to a web browser client on a user device 10 , and a computer-readable API or other interface is provided to a remote service client 11 .
- the user interface 13 , database 15 , and/or processing units 14 may be part of an integral system, or may include multiple computer systems communicating via a private network, the Internet, or any other suitable network.
- One or more processing units 14 may be, for example, part of a distributed system such as a cloud-based computing system, search engine, content delivery system, or the like, which may also include or communicate with a database 15 and/or user interface 13 .
- an analysis system 5 may provide back-end processing, such as where stored or acquired data is pre-processed by the analysis system 5 before delivery to the processing unit 14 , database 15 , and/or user interface 13 .
- a machine learning system 5 may provide various prediction models, data analysis, or the like to one or more other systems 13 , 14 , 15 .
- various embodiments of the presently disclosed subject matter may include or be embodied in the form of computer-implemented processes and apparatuses for practicing those processes.
- Embodiments also may be embodied in the form of a computer program product having computer program code containing instructions embodied in non-transitory and/or tangible media, such as memory cards, flash drives, floppy diskettes, CD-ROMs, hard drives, USB (universal serial bus) drives, or any other machine readable storage medium, such that when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing embodiments of the disclosed subject matter.
- Embodiments also may be embodied in the form of computer program code, for example, whether stored in a storage medium, loaded into and/or executed by a computer, or transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via electromagnetic radiation, such that when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing embodiments of the disclosed subject matter.
- computer program code segments configure the microprocessor to create specific logic circuits.
- a set of computer-readable instructions stored on a computer-readable storage medium may be implemented by a general-purpose processor, which may transform the general-purpose processor or a device containing the general-purpose processor into a special-purpose device configured to implement or carry out the instructions.
- Embodiments may be implemented using hardware that may include a processor, such as a general purpose microprocessor and/or an Application Specific Integrated Circuit (ASIC) that embodies all or part of the techniques according to embodiments of the disclosed subject matter in hardware and/or firmware.
- the processor may be coupled to memory, such as RAM, ROM, flash memory, a hard disk or any other device capable of storing electronic information.
- the memory may store instructions adapted to be executed by the processor to perform the techniques according to embodiments of the disclosed subject matter.
Abstract
Description
- Many electronic devices include operating systems that can execute applications. As the popularity of applications increases, more and more developers are attracted to create applications for various platforms. Some platforms now have applications numbering in the millions.
- According to an embodiment of the disclosed subject matter, a computer-implemented method for generating and communicating an application recommendation includes receiving a signal from an electronic device indicating that an uninstallation of a first application has been initiated by a user on the electronic device, obtaining contextual information of the first application, the contextual information including data that indicates a period of time during which the first application was installed and a frequency of use of the first application, obtaining utilization data, the utilization data including data that indicates other applications that have been installed on the electronic device, determining a plurality of applications that are similar to the first application, generating a first predictive model using at least the contextual information and the utilization data, the first predictive model being configured to predict a likelihood of uninstallation of a second application in the plurality of applications, and automatically recommending, at the time of the uninstallation of the first application, one or more of the plurality of applications, the recommending being based at least in part on the first predictive model.
- According to another embodiment of the disclosed subject matter, a computer-implemented method for generating and communicating an application recommendation includes receiving a signal from an electronic device indicating that an uninstallation of a first application has been initiated by a user on the electronic device, obtaining contextual information of the first application, the contextual information including data that indicates when the first application was installed and frequency of use of the first application, obtaining utilization data, the utilization data including data that indicates applications that have been installed on the electronic device, determining a plurality of applications that are similar to the first application, determining a score for the first application, the score being based on the utilization data and indicating a level of the user's satisfaction with the first application, updating a range of values in a user profile based on the score and the contextual information, the range of values indicating a range of contextual information values that the user tolerated in the first application, and automatically recommending, at the time of the uninstallation of the first application, one or more of the plurality of applications, the recommending being based at least in part on the user profile.
- According to an embodiment of the disclosed subject matter, means for receiving a signal from an electronic device indicating that an uninstallation of a first application has been initiated by a user on the electronic device, obtaining contextual information of the first application, the contextual information including data that indicates a period of time during which the first application was installed and a frequency of use of the first application, obtaining utilization data, the utilization data including data that indicates other applications that have been installed on the electronic device, determining a plurality of applications that are similar to the first application, generating a first predictive model using at least the contextual information and the utilization data, the first predictive model being configured to predict a likelihood of uninstallation of a second application in the plurality of applications, and automatically recommending, at the time of the uninstallation of the first application, one or more of the plurality of applications, the recommending being based at least in part on the first predictive model, are provided.
- According to another embodiment of the disclosed subject matter, means for receiving a signal from an electronic device indicating that an uninstallation of a first application has been initiated by a user on the electronic device, obtaining contextual information of the first application, the contextual information including data that indicates when the first application was installed and frequency of use of the first application, obtaining utilization data, the utilization data including data that indicates applications that have been installed on the electronic device, determining a plurality of applications that are similar to the first application, determining a score for the first application, the score being based on the utilization data and indicating a level of the user's satisfaction with the first application, updating a range of values in a user profile based on the score and the contextual information, the range of values indicating a range of contextual information values that the user tolerated in the first application, and automatically recommending, at the time of the uninstallation of the first application, one or more of the plurality of applications, the recommending being based at least in part on the user profile, are provided.
- Additional features, advantages, and embodiments of the disclosed subject matter may be set forth or apparent from consideration of the following detailed description, drawings, and claims. Moreover, it is to be understood that both the foregoing summary and the following detailed description are illustrative and are intended to provide further explanation without limiting the scope of the claims.
- The accompanying drawings, which are included to provide a further understanding of the disclosed subject matter, are incorporated in and constitute a part of this specification. The drawings also illustrate embodiments of the disclosed subject matter and together with the detailed description serve to explain the principles of embodiments of the disclosed subject matter. No attempt is made to show structural details in more detail than may be necessary for a fundamental understanding of the disclosed subject matter and various ways in which it may be practiced.
-
FIG. 1 shows an example system configuration according to an embodiment of the disclosed subject matter. -
FIG. 2A shows an example recommendation process according to an embodiment of the disclosed subject matter. -
FIG. 2B shows an example recommendation screen according to an embodiment of the disclosed subject matter. -
FIG. 3 shows example application profiles according to an embodiment of the disclosed subject matter. -
FIG. 4 shows an example selection method according to an embodiment of the disclosed subject matter. -
FIG. 5 shows an example user profile according to an embodiment of the disclosed subject matter. -
FIG. 6 shows a computing device according to an embodiment of the disclosed subject matter. -
FIG. 7 shows a network configuration according to an embodiment of the disclosed subject matter. - Various aspects or features of this disclosure are described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In this specification, numerous details are set forth in order to provide a thorough understanding of this disclosure. It should be understood, however, that certain aspects of disclosure may be practiced without these specific details, or with other methods, components, materials, etc. In other instances, well-known structures and devices are shown in block diagram form to facilitate describing the subject disclosure.
- Users attempting to navigate crowded application distribution services can find themselves trapped in perpetual rounds of hit-and-miss. Large amounts of time and computing resources are wasted as users try applications only to be frustrated at the results and forced to try another, ad infinitum. The toll of this cycle is extracted from the distribution services system and the network system, taking up bandwidth and slowing down data transfer speeds for all users as well as causing unnecessary wear on the users' electronic devices themselves while degrading the user experience of the device and ecosystem as a whole.
- Distribution service systems and associated user devices can function more efficiently if accurate recommendations are provided to the users to guide them toward applications that are more likely to address their concerns. Time, computing resources, and user experience are all valuable factors that are impacted by the quality and timeliness of application recommendations, both of which can be significantly improved by implementing the disclosed embodiments.
- Currently, conventional application recommendation systems communicate recommendations to users when they access the distribution service interface, e.g., when a user visits an online app store a splash page shows recommendations. The recommendations are typically based on what the user has installed in the past or based on what other similarly situated users have installed using techniques such as collaborative filtering. However, the user must first access the store to receive the recommendation, which is an additional barrier between the user and the recommendation, and by extension, an additional barrier between the user and discovery of new, useful content. For example, the user, after uninstalling an application that failed to satisfy him/her, may or may not be motivated enough to go back to the app store and continue searching to find replacements for what they uninstalled. Even if the user does return to access the distribution service interface, the distribution service system does not have any indication that the user recently uninstalled an application or any indication of why the user has done so, therefore its recommendation is not focused on the user's immediate concerns.
- The disclosed embodiments improve the technological art of automatically discovering and recommending applications to a user of an electronic device. The recommendation process is designed to learn which secondary interests are important to the user and to address the user's immediate concerns. At the time of uninstallation, a system of the disclosed embodiments can obtain contextual information and historical utilization data that can be used to determine a recommendation for one or more applications to replace a deleted application, with an improved likelihood that the recommended applications will satisfy the user's secondary interests.
- In some embodiments, contextual information and historical utilization data can be used to determine training data for one or more machine learning algorithms. The algorithms can produce one or more models that can predict which applications will be satisfactory for a given user. Recommendations for applications can then be based at least in part on the one or more models.
- The training data can include various inputs as well as the appropriate outputs that have been determined to result from those inputs. For example, historical utilization data can be used to determine a score (output) that indicates a satisfaction level of past/current applications that the user has installed/uninstalled. Contextual information that corresponds to attributes of the applications can be used to provide input. Then, using a supervised machine learning algorithm, models can be inferred from the historical utilization data and contextual information. It should be understood that a person having ordinary skill in the art would recognize various other machine learning approaches that can be utilized consistent with the scope of the present disclosure. For example, the machine learning algorithm can also be used to leverage contextual information and utilization data from multiple users.
-
FIG. 1 shows anexample system configuration 100 that can implement the disclosed embodiments. The system can be configured for use on a wide area network, such as that illustrated inFIG. 1 , however, the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example, each of the components ofsystem 100 inFIG. 1 can be implemented in a localized or distributed fashion in a network. - In
system 100, a user can interact withdistribution service platform 105 through client devices 102 1, 102 2, 102 3, . . . , 102 n (collectively “102”) connected tonetwork 104 by direct and/or indirect communication.Distribution service platform 105 can support connections from a variety of different client devices, such as desktop computers; mobile computers; mobile communications devices, e.g. mobile phones, smart phones, tablets; smart televisions; set-top boxes; wearable electronic devices, and/or any other network enabled computing devices. Client devices 102 can be of varying type, capabilities, operating systems, etc. Furthermore,distribution service platform 105 can concurrently accept connections from and interact with multiple client devices 102. - A user can interact with
distribution service platform 105 via a client-side application installed on a client device 102. In some embodiments, the client-side application can include a distribution service platform specific component. For example, the component can be a stand-alone “Store” application, one or more application plug-ins, and/or a browser extension. A user can also view or select applications and/or content via a web interface generated and served byuser interface module 120. For example, the user can navigate in a web browser to a web address provided bydistribution service platform 105. However, the user can also interact withdistribution service platform 105 via a third-party application, such as a web browser, that resides on client device 102 and is configured to communicate withdistribution service platform 105. In any case, the client-side application can present a user interface (UI) for the user to interact withdistribution service platform 105. For example, the user can interact with thedistribution service platform 105 via a client-side application integrated with the file system or via a webpage displayed using a web browser application. -
Distribution service platform 105 can make it possible for a user to search, select, purchase, and download applications and various types of content, as well as perform a variety of content management tasks, such as retrieve, modify, browse, and/or share the applications and content. Furthermore,distribution service platform 105 can make it possible for a user to access the content from multiple client devices 102. For example, client device 102 1 can upload content todistribution service platform 105 vianetwork 104. The content can later be retrieved fromdistribution service platform 105 using the same client device 102 1 or some other client device 102 3. - To facilitate the various content and application management services, a user can create an account with
distribution service platform 105. The account information can be maintained inuser account database 140.User account database 140 can store profile information for registered users. In some cases, the only personal information in the user profile can be a username and/or email address. However,distribution service platform 105 can also be configured to accept additional user information, as will be discussed further below. - Applications and content can be stored in
content storage 160.Content storage 160 can be a storage device, multiple storage devices, or a server. Alternatively,content storage 160 can be a cloud storage provider or network storage accessible via one or more communications networks.Distribution service platform 105 can hide the complexity and details from client devices 102 so that client devices 102 do not need to know exactly where the applications and content items are being stored bydistribution service platform 105.Distribution service platform 105 can store the applications and content items, for example, in a network accessible storage (SAN) device, in a redundant array of inexpensive disks (RAID), etc.Content storage 160 can store applications and content items using one or more partition types, such as FAT, FAT32, NTFS, EXT2, EXT3, EXT4, ReiserFS, BTRFS, and so forth. -
Content storage 160 can also store metadata describing applications and content items, application and content item types, and the relationships of applications and content items to various user accounts. The metadata for an application or content item can be stored as part of the application or content item, or can be stored separately. In one variation, each application and content item stored incontent storage 160 can be assigned a system-wide unique identifier. -
Distribution service platform 105 can include acommunications module 110 for communicating with various client devices 102 via thenetwork 104. Conversely, certain software applications on client devices 102 can communicate with thedistribution service platform 105 via an Application Programming Interface (API) on behalf of a user. For example, a software package, such as an application running on a smartphone or tablet computing device, can programmatically transmit requests directly todistribution service platform 105, when a user provides credentials, to download an application fromcontent storage 160. Similarly, the API can allow users to browse or access all or part ofcontent storage 160 through a web site. -
Distribution service platform 105 can also include ananalytics module 130 that can track and report on aggregate file operations, user actions, network usage, total storage space used, as well as other technology, usage, or business metrics. Theanalytics module 130 can also track downloads of applications and maintain acontextual attributes database 150 that associates application profiles with reported contextual attributes of the applications, as will be discussed further below. A privacy and/or security policy can prevent unauthorized access to user data stored withdistribution service platform 105. - While
distribution service platform 105 is presented with specific components, it should be understood by one skilled in the art, that the architectural configuration ofsystem 105 is simply one possible configuration and that other configurations with more or less components are also possible. -
FIG. 2A shows an example embodiment of arecommendation process 200 according to the disclosed subject matter. Briefly, when an application is uninstalled theprocess 200 uses “contextual attributes” that characterize the application and “utilization data” that capture the user's historical application usage to predict which applications that are similar to the uninstalled application will be satisfactory to the user and presents a recommendation accordingly at the time of uninstallation. Further details follow. - At operation 210 a recommendation system receives a signal from an electronic device (e.g., 102 1 in
FIG. 1 ) that indicates a user has initiated uninstallation of an application on the electronic device. In one embodiment the recommendation system can reside on an external server (e.g.,distribution service platform 105 inFIG. 1 ). In another embodiment, the recommendation system can reside on the electronic device itself. - At
operation 220 the recommendation system obtains contextual information related to the application. The contextual information provides details of how the application was used and performed. In one embodiment the contextual information can include data that indicates when the application was installed, how frequently it was used, and how much storage space it occupied. - In some embodiments an API can be provided for the application and/or the operating system of the electronic device to store and transmit more detailed contextual information to the recommendation system. For example, the API can include one or more functions that store data related to performance of the application. Such performance data can include, for example, data values that represent: battery energy consumption, how much network data the application downloaded/uploaded, how much memory the application used, how often the application failed or “crashed,” display metrics such as how often the application “stuttered” or “froze”, how fast the application loaded, etc. Other types of performance and/or quality related data not listed here can be stored, e.g., an application's review rating in a distribution service platform. Such data will be referred to herein as “contextual attributes” of an application. In some electronic device systems one or more of types of contextual attributes may or may not available, depending on the settings and capabilities of the application and the electronic device operating system.
- In some embodiments the electronic device (e.g., 102 1 in
FIG. 1 ) can be configured to transmit an application's contextual information to the distribution services platform (e.g., 105 inFIG. 1 ) when an application is uninstalled on the electronic device. The distribution services platform can store the contextual information in a database (e.g., 150 inFIG. 1 ) in association with a profile corresponding to the application. The profile can be maintained cumulatively. For example, a profile for a hypothetical application “Radical Racer” can include data indicating that based on data received from 1000 uninstalls on client devices (e.g., 102 inFIG. 1 ), on average the application crashed 1 time per 50 startups. In this example, a “crash_rating” contextual attribute can be a part of the application profile to store this data. - At
operation 230 the system obtains what will be referred to as “utilization data” associated with the user of the electronic device. The utilization data can include information that identifies applications that have been installed/uninstalled on the electronic device and the timing of the installations/uninstallations. As will be seen, utilization data can provide a basis for determining which context attributes are secondary interests that are important to the user and thereby impact predictions of which applications are likely to succeed in satisfying the user. - At
operation 240 the system determines a plurality of applications that are similar to the application being uninstalled. One application is “similar to” another if it is determined that it can provide at least one equivalent, replacement, or essentially equivalent function that may be sufficient to replace the functionality of the other application for a user. For example, techniques disclosed herein may determine that one application is similar to another based on known techniques and algorithms to determine applications similar to a target application in a distribution service platform. For example, similarity can be determined based on an application's metadata that identify keywords, type, genre, developer, etc., that classify, categorize, or describe the application. - Theoretically, the user may have a primary interest in replacing the uninstalled application with a similar application that better satisfies the user's secondary interests. However, in highly populated distribution service platforms, simply recommending similar applications, as many conventional recommendation systems do, often falls short of sufficiently narrowing the application field. That is, while a distribution service may have dozens or even hundreds of a certain type of application, e.g., racing games, the applications can vary in implementation such that some will satisfy a given user and others will not satisfy the same user. Merely recommending similar applications, or even recommending the highest rated similar applications, can fail to connect a given user to the application that will appeal most to that user's specific secondary interests.
- At
operation 250 the disclosed recommendation system generates one or more models based on the user's contextual information and utilization data to predict which application among similar applications will satisfy a user by learning which contextual attributes are important secondary interests for the user. The similar applications can then be ranked based on the secondary interests to increase the likelihood of recommending applications that will satisfy the user's search. - At operation 260 a recommendation, based on the ranked similar applications, is provided to the user at the time of uninstallation. A reason for making the recommendation can also be provided, based on the contextual attributes of the uninstalled application.
-
FIG. 2B shows anexample recommendation screen 270, in which three applications are presented. Thescreen 270 can be displayed while the uninstallation is taking place or immediately preceding thereafter. In this manner the barrier of requiring the user to access the distribution service is eliminated. A frustrated user who is dissatisfied with an application may not be inclined to go back to the distribution service interface to start searching again, however, the user may be willing to give another application a try upon seeing a direct, automatic presentation of what appears to be a good recommendation. The removal of the access barrier and the timeliness of the recommendation are significant improvements over the conventional method of recommending applications through a distribution service interface splash page or the like. In the disclosed embodiments, the user does not need to navigate back to the distribution service, navigate through its interface back to its search function and resume sifting through search results to figure out where he/she left off. Instead, the user can be immediately presented with a plurality of application recommendations that are tailored specifically to address the user's primary and secondary interests. As shown inFIG. 2B , the electronic device can be configured such that the user need only tap a button or enter a single input to initiate a purchase or a download/installation of a recommended application. - As described above, contextual information can be captured in specific contextual attributes and stored in application profiles.
FIG. 3 shows an example table of profiles for a user's electronicdevice comprising applications 310, associatedcontextual attributes 320, andutilization data 330. In this example, four contextual attributes are shown, however, more or less and different types of contextual attributes can be used. - Contextual attributes can be represented in a normalized numerical format. For example, the “Battery Drain” attribute in this example is represented on a scale of 1 to 3, with “1” indicating low drain, “2” indicating medium drain, and “3” indicating high drain. In another example, the “Performance” attribute is represented in a direct value, for example, calculated by dividing the number of crashes by the number of instances of execution. In another example, the “Size” attribute normalizes the memory range of 0 to 1 gb to a value in the range of 0 to 200 where, any memory size over 1 gb normalizes to a value of 200. Each of these formats are merely examples. One of ordinary skill in the art would recognize that contextual attributes can be represented in any of the above or other formats or using different normalization techniques as appropriate for the data set.
- The contextual attributes set can further include values associated with the application obtained from other sources, such as the application's rating in the distribution platform,
- The utilization data can also be normalized. For example, in
FIG. 3 “Installed Time” is a time range of 0 to 6 months normalized to a range of 0 to 1000, where any value over 6 months normalizes to a value of 1000. Theutilization data 330 can be used to generate an application satisfaction score S for the user. For example, the satisfaction score S can be defined as simple as the normalized time value that the application remained installed, or can be defined by a formula that incorporates the normalized time value and the frequency value into a single representative score value (e.g., S=NT×F) that represents how satisfied the user is with the application based on the utilization data. - The satisfaction score, utilization data and contextual attributes can be used in multiple ways to improve the accuracy of a recommendation. In one embodiment, the contextual attributes and the satisfaction scores corresponding to the applications represented in the utilization data can form a training data set for one or more machine learning algorithms. For example, a matrix of rows and columns including the full list of applications in a first column and their corresponding contextual attributes in matrix rows can be divided into multiple datasets for training and validation. For example, in one embodiment 70% of the rows can be used for training and 30% of the rows can be used for validation. Multiple machine learning algorithms (e.g., k-nearest neighbors, logistic regression, classification and regression trees, linear discriminant analysis, Gaussian naive Bayes, support vector machines, etc.) can be used on the training data set to build models that can predict satisfaction scores from contextual attributes. Whichever algorithm produces the most accurate model, as tested on the validation data set, can be used on the plurality of applications that are similar to the application being uninstalled.
- In one embodiment, the algorithms can be tested on different combinations of attributes and/or on one or more individual attributes at a time to check whether models with increased accuracy can be created. That is, the first column (i.e., the applications) and one or more additional columns can be selected from the matrix training dataset to reduce the matrix to a subset instead of testing the full training dataset. In a simplified scenario, for a first hypothetical user the crash rate of an application is the most important secondary interest. After an application crashes a number of times the first user uninstalls the application, regardless of any other factors. In this case, a direct correlation may exist between the crash rate and satisfaction score of any application that the first user installs. However, for a second hypothetical user load time is the most important secondary interest. For still a third hypothetical user a combination of battery drain and size is most important secondary interests. By applying the algorithms to different combinations of attributes the system can increase the chance of creating a functioning, accurate model.
- After a model has been selected, the relevant contextual attributes associated with the profiles of the similar applications can be run through the model to obtain a predicted satisfaction score.
- In one embodiment, the most accurate model will only be used if its results achieve at least a minimum threshold of accuracy. The threshold of accuracy can change over time as the system obtains larger data sets of information. For example, the threshold of accuracy can initially be set to 50% and increase an incremental amount per every additional record that is added to the data set, or increase to higher percentages at milestones in the dataset. If none of the models result in at least the minimum threshold of accuracy, a different method can be used to choose which of the similar applications should be recommended to the user.
-
FIG. 4 shows an example selection method that can be used instead of using a prediction model. In this method, the system can build a user profile to determine filter ranges to apply to one or more contextual attributes based on the satisfaction score of the application being uninstalled. - At
operation 410 the system determines a satisfaction score S for the application being uninstalled. For example, if the user is uninstalling “Hearthrock” (FIG. 3 ), the system can determine a satisfaction score S as the (normalized time value)×(frequency value): S=1000×5=5000. - At operation 420 the system determines whether the satisfaction score for the application being uninstalled is above a threshold value T. The satisfaction threshold value can be set to an initial default value and adjusted over time, for example, based on the user's uninstallation patterns and the maximum amounts of time that applications remain installed on the electronic device. Generally, uninstallation of an application with a satisfaction score above the threshold can be viewed as an indication that the user has exhausted the usefulness of the application but would be satisfied to find a similar application with similar contextual attribute values to replace it. Continuing the above example uninstallation of “Hearthrock,” if T=1000, then S>T for “Hearthrock.”
- At
operation 430 the system can create filter ranges for contextual attributes based on the values obtained from the uninstalled application. For example, regarding the uninstallation of “Hearthrock” it is reasonable to assume that the user can at least tolerate an application with matching or similar contextual attribute values to Hearthrock. That is, the values of Hearthrock's contextual attributes do not appear to be deal-breakers for the user in view of the relatively high satisfaction score. - At
operation 430 the system can store the contextual attributes as part of an update to a user profile. The user profile defines acceptable ranges for contextual attribute values for a given user. For example, based on the S value for “Hearthrock” being greater than threshold T, a range can be defined for each available contextual attribute, for example, by a +/− amount, e.g., 3%, or a default amount defined per attribute that can be fine-tuned to match the user's tolerance over time. - The profile ranges can be further fine-tuned by information obtained during subsequent uninstallations of other applications.
FIG. 5 shows anexample user profile 500. Aprofile 500 may initially be created with default values that represent an estimate of user tolerance. The default values can be replaced in updates with information obtained when the user uninstalls an application. In this profile, the user has uninstalled the two games “Hearthrock” and “Linda Craft Go” (FIG. 3 ). Since both of these games achieved satisfaction scores S above the threshold T=1000, the ranges stored inprofile 500 are adjusted to define a minimum and maximum range of contextual attributes that will capture the values of both games. - Accordingly, at
operation 440 the system can search for similar applications that have contextual attributes that fall within the ranges defined in the user profile. Atoperation 450 the recommendation can be provided to the user at the time of uninstallation. - The disclosed embodiments can therefore provide recommendations that use data captured at the time of uninstallation of an application to more accurately consider why a user is uninstalling the application (e.g., whether the user is satisfied or not with the application) and not simply recommend similar applications, but predict which similar applications are likely to satisfy the user's current desire and immediately provide a recommendation directly to the user at the time of uninstallation, thereby removing a significant barrier between the user and the applications.
- In situations in which the systems discussed here collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by a system as disclosed herein.
- Embodiments of the presently disclosed subject matter may be implemented in and used with a variety of component and network architectures.
FIG. 6 is an example electronic device 20 (e.g., 102 1 inFIG. 1 ) suitable for implementing embodiments of the presently disclosed subject matter. Thedevice 20 may be, for example, a television, a desktop or laptop computer, or a mobile computing device such as a smart phone, tablet, or the like. Thedevice 20 can include abus 21 which interconnects major components, such as acentral processor 24, amemory 27 such as Random Access Memory (RAM), Read Only Memory (ROM), flash RAM, or the like, auser display 22 such as a display screen, a user input interface 26, which can include one or more controllers and associated user input devices such as a button, spin wheel, slider, keyboard, mouse, touch screen, or the like, a fixedstorage 23 such as a hard drive, flash storage, etc., an optionalremovable media component 25 operative to control and receive an memory card, optical disk, flash drive, or the like, anoptional network interface 29 operable to communicate with one or more external devices via a suitable network connection, and atransceiver 30 operable to communicate with one or more remote devices via a suitable network connection. - The
bus 21 allows data communication between thecentral processor 24 and one or more memory components, which may include RAM, ROM, and other memory, as previously noted. Typically RAM is the main memory into which an operating system and application programs are loaded. A ROM or flash memory component can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with thedevice 20 are generally stored on and accessed via a computer readable medium, such as a solid state storage drive (e.g., fixed storage 23), a hard drive, flash drive, optical drive, or other storage medium. - The fixed
storage 23 may be integral with thecomputer 20 or may be separate and accessed through other interfaces. Thenetwork interface 29 may provide a direct connection to a remote server via a wired or wireless connection. Thenetwork interface 29 may provide such connection using any suitable technique and protocol as will be readily understood by one of skill in the art, including digital cellular telephone, WiFi, Bluetooth®, near-field, and the like. For example, thenetwork interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other communication networks, as described in further detail below. - Many other devices or components (not shown) may be connected in a similar manner (e.g., digital cameras, speakers, microphones, scanners, etc.). Conversely, all of the components shown in
FIG. 6 need not be present to practice the present disclosure. The components can be interconnected in different ways from that shown. The operation of a computer such as that shown inFIG. 6 is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of thememory 27, fixedstorage 23,removable media 25, or on a remote storage location. -
FIG. 7 shows another example arrangement according to an embodiment of the disclosed subject matter. One or more electronic devices orsystems service providers 11,user devices 10 such as local computers, smart phones, tablet computing devices, televisions, wearable electronic devices and the like, may connect to other devices via one ormore networks 7. The network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks. Thedevices processing units 14,databases 15, anduser interface systems 13. In some cases, thedevices interface system 13, which may provide access to one or more other systems such as a application/content database 15, aprocessing unit 14, or the like. For example, theuser interface 13 may be a user-accessible web page that provides data from one or more other computer systems. Theuser interface 13 may provide different interfaces to different clients, such as where a human-readable web page is provided to a web browser client on auser device 10, and a computer-readable API or other interface is provided to aremote service client 11. - The
user interface 13,database 15, and/orprocessing units 14 may be part of an integral system, or may include multiple computer systems communicating via a private network, the Internet, or any other suitable network. One ormore processing units 14 may be, for example, part of a distributed system such as a cloud-based computing system, search engine, content delivery system, or the like, which may also include or communicate with adatabase 15 and/oruser interface 13. In some arrangements, ananalysis system 5 may provide back-end processing, such as where stored or acquired data is pre-processed by theanalysis system 5 before delivery to theprocessing unit 14,database 15, and/oruser interface 13. For example, amachine learning system 5 may provide various prediction models, data analysis, or the like to one or moreother systems - More generally, various embodiments of the presently disclosed subject matter may include or be embodied in the form of computer-implemented processes and apparatuses for practicing those processes. Embodiments also may be embodied in the form of a computer program product having computer program code containing instructions embodied in non-transitory and/or tangible media, such as memory cards, flash drives, floppy diskettes, CD-ROMs, hard drives, USB (universal serial bus) drives, or any other machine readable storage medium, such that when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing embodiments of the disclosed subject matter. Embodiments also may be embodied in the form of computer program code, for example, whether stored in a storage medium, loaded into and/or executed by a computer, or transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via electromagnetic radiation, such that when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing embodiments of the disclosed subject matter. When implemented on a general-purpose microprocessor, the computer program code segments configure the microprocessor to create specific logic circuits.
- In some configurations, a set of computer-readable instructions stored on a computer-readable storage medium may be implemented by a general-purpose processor, which may transform the general-purpose processor or a device containing the general-purpose processor into a special-purpose device configured to implement or carry out the instructions. Embodiments may be implemented using hardware that may include a processor, such as a general purpose microprocessor and/or an Application Specific Integrated Circuit (ASIC) that embodies all or part of the techniques according to embodiments of the disclosed subject matter in hardware and/or firmware. The processor may be coupled to memory, such as RAM, ROM, flash memory, a hard disk or any other device capable of storing electronic information. The memory may store instructions adapted to be executed by the processor to perform the techniques according to embodiments of the disclosed subject matter.
- The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit embodiments of the disclosed subject matter to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to explain the principles of embodiments of the disclosed subject matter and their practical applications, to thereby enable others skilled in the art to utilize those embodiments as well as various embodiments with various modifications as may be suited to the particular use contemplated.
Claims (28)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/604,647 US10262265B2 (en) | 2017-05-24 | 2017-05-24 | Systems and methods for generating and communicating application recommendations at uninstall time |
PCT/US2018/022520 WO2018217276A1 (en) | 2017-05-24 | 2018-03-14 | Systems and methods for generating and communicating application recommendations at uninstall time |
US16/299,975 US10719769B2 (en) | 2017-05-24 | 2019-03-12 | Systems and methods for generating and communicating application recommendations at uninstall time |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/604,647 US10262265B2 (en) | 2017-05-24 | 2017-05-24 | Systems and methods for generating and communicating application recommendations at uninstall time |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/299,975 Continuation US10719769B2 (en) | 2017-05-24 | 2019-03-12 | Systems and methods for generating and communicating application recommendations at uninstall time |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180341865A1 true US20180341865A1 (en) | 2018-11-29 |
US10262265B2 US10262265B2 (en) | 2019-04-16 |
Family
ID=62044951
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/604,647 Active US10262265B2 (en) | 2017-05-24 | 2017-05-24 | Systems and methods for generating and communicating application recommendations at uninstall time |
US16/299,975 Active US10719769B2 (en) | 2017-05-24 | 2019-03-12 | Systems and methods for generating and communicating application recommendations at uninstall time |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/299,975 Active US10719769B2 (en) | 2017-05-24 | 2019-03-12 | Systems and methods for generating and communicating application recommendations at uninstall time |
Country Status (2)
Country | Link |
---|---|
US (2) | US10262265B2 (en) |
WO (1) | WO2018217276A1 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190332369A1 (en) * | 2018-04-27 | 2019-10-31 | Nutanix, Inc. | Method and apparatus for data driven and cluster specific version/update control |
US10719769B2 (en) | 2017-05-24 | 2020-07-21 | Google Llc | Systems and methods for generating and communicating application recommendations at uninstall time |
US20200349258A1 (en) * | 2019-04-30 | 2020-11-05 | International Business Machines Corporation | Methods and systems for preventing utilization of problematic software |
CN112328935A (en) * | 2020-10-29 | 2021-02-05 | 胡培培 | Application program pushing system and method based on big data |
CN113051475A (en) * | 2021-03-25 | 2021-06-29 | 平安银行股份有限公司 | Content recommendation method and device, electronic equipment and readable storage medium |
US20220222067A1 (en) * | 2021-01-11 | 2022-07-14 | Ivanti, Inc. | Software utilization optimization in managed networks |
US11416247B1 (en) * | 2021-02-09 | 2022-08-16 | International Business Machines Corporation | Healthcare application data management based on waste priority |
US20230111056A1 (en) * | 2021-10-13 | 2023-04-13 | International Business Machines Corporation | Dynamic management of application uninstallation |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN111367695A (en) * | 2020-06-01 | 2020-07-03 | 北京全路通信信号研究设计院集团有限公司 | Railway signal equipment safety computer platform bears many application systems |
US11238664B1 (en) * | 2020-11-05 | 2022-02-01 | Qualcomm Incorporated | Recommendations for extended reality systems |
Family Cites Families (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7587324B2 (en) | 2004-03-30 | 2009-09-08 | Sap Ag | Methods and systems for detecting user satisfaction |
US20080059416A1 (en) | 2004-09-15 | 2008-03-06 | Forbes David I | Software system for rules-based searching of data |
US7890379B2 (en) | 2005-12-16 | 2011-02-15 | At&T Intellectual Property I, L.P. | Methods, systems, and products for facilitating electronic purchases |
JP5161794B2 (en) | 2006-02-10 | 2013-03-13 | アップル インコーポレイテッド | Dynamic interactive entertainment venue |
US8577755B2 (en) | 2007-12-27 | 2013-11-05 | Ebay Inc. | Method and system of listing items |
US20170116552A1 (en) | 2010-06-04 | 2017-04-27 | Sapience Analytics Private Limited | System and Method to Measure, Aggregate and Analyze Exact Effort and Time Productivity |
US8396759B2 (en) | 2010-06-18 | 2013-03-12 | Google Inc. | Context-influenced application recommendations |
US8560489B2 (en) | 2010-09-28 | 2013-10-15 | Adam Kaufman | System and method to measure continued engagement with software application |
US9123058B2 (en) * | 2011-11-16 | 2015-09-01 | Flextronics Ap, Llc | Parking space finder based on parking meter data |
US9098370B2 (en) * | 2010-11-08 | 2015-08-04 | Cbs Interactive, Inc. | Apparatus and methods for improving uninstall process |
US8516308B1 (en) | 2011-03-09 | 2013-08-20 | Amazon Technologies, Inc. | Crash based incompatibility prediction for classes of mobile devices crash data |
US8468164B1 (en) | 2011-03-09 | 2013-06-18 | Amazon Technologies, Inc. | Personalized recommendations based on related users |
US20130085886A1 (en) | 2011-09-29 | 2013-04-04 | Symantec Corporation | Method and system for automatic application recommendation |
US20130198029A1 (en) | 2012-01-26 | 2013-08-01 | Microsoft Corporation | Application recommendation and substitution |
US20130326499A1 (en) * | 2012-05-31 | 2013-12-05 | Microsoft Corporation | Automatically installing and removing recommended applications |
US20130339284A1 (en) * | 2012-06-15 | 2013-12-19 | Iolo Technologies, Llc | Predicted software usage duration |
US9280789B2 (en) | 2012-08-17 | 2016-03-08 | Google Inc. | Recommending native applications |
US8935393B1 (en) * | 2012-08-23 | 2015-01-13 | Google Inc. | Recommendations based on usage and resource consumption data |
US20150133076A1 (en) | 2012-11-11 | 2015-05-14 | Michael Brough | Mobile device application monitoring software |
WO2014100958A1 (en) | 2012-12-24 | 2014-07-03 | Nokia Corporation | Method, apparatus and computer program product for providing a recommendation for an application |
US9223831B2 (en) | 2013-01-02 | 2015-12-29 | Codeq Llc | System, method and computer program product for searching summaries of mobile apps reviews |
US8745617B1 (en) | 2013-02-11 | 2014-06-03 | Google Inc. | Managing applications on a client device |
US10021169B2 (en) | 2013-09-20 | 2018-07-10 | Nuance Communications, Inc. | Mobile application daily user engagement scores and user profiles |
US9021429B1 (en) | 2013-10-16 | 2015-04-28 | Sybase Inc. | Recommending applications to portable electronic devices |
US20170351978A1 (en) | 2013-11-06 | 2017-12-07 | Swift Travel Services, Llc | Dynamic recommendation platform with artificial intelligence |
US9569536B2 (en) | 2013-12-17 | 2017-02-14 | Microsoft Technology Licensing, Llc | Identifying similar applications |
US9454354B2 (en) | 2014-12-09 | 2016-09-27 | Google Inc. | Automatic discovery and retrieval of interoperable applications |
WO2016099447A1 (en) | 2014-12-15 | 2016-06-23 | Quixey, Inc. | Personalized application recommendations |
US9936031B2 (en) | 2015-03-31 | 2018-04-03 | International Business Machines Corporation | Generation of content recommendations |
US10134070B2 (en) | 2016-05-25 | 2018-11-20 | Bank Of America Corporation | Contextualized user recapture system |
US10771959B2 (en) | 2016-06-03 | 2020-09-08 | Facebook, Inc. | Recommending applications using social networking information |
US10241772B1 (en) | 2016-07-07 | 2019-03-26 | Google Llc | Recommending substitute applications |
US10262265B2 (en) | 2017-05-24 | 2019-04-16 | Google Llc | Systems and methods for generating and communicating application recommendations at uninstall time |
-
2017
- 2017-05-24 US US15/604,647 patent/US10262265B2/en active Active
-
2018
- 2018-03-14 WO PCT/US2018/022520 patent/WO2018217276A1/en active Application Filing
-
2019
- 2019-03-12 US US16/299,975 patent/US10719769B2/en active Active
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10719769B2 (en) | 2017-05-24 | 2020-07-21 | Google Llc | Systems and methods for generating and communicating application recommendations at uninstall time |
US20190332369A1 (en) * | 2018-04-27 | 2019-10-31 | Nutanix, Inc. | Method and apparatus for data driven and cluster specific version/update control |
US10824412B2 (en) * | 2018-04-27 | 2020-11-03 | Nutanix, Inc. | Method and apparatus for data driven and cluster specific version/update control |
US11556650B2 (en) * | 2019-04-30 | 2023-01-17 | International Business Machines Corporation | Methods and systems for preventing utilization of problematic software |
US20200349258A1 (en) * | 2019-04-30 | 2020-11-05 | International Business Machines Corporation | Methods and systems for preventing utilization of problematic software |
CN112328935A (en) * | 2020-10-29 | 2021-02-05 | 胡培培 | Application program pushing system and method based on big data |
CN113626694A (en) * | 2020-10-29 | 2021-11-09 | 胡培培 | Application program pushing system based on big data |
US20220222067A1 (en) * | 2021-01-11 | 2022-07-14 | Ivanti, Inc. | Software utilization optimization in managed networks |
US11928461B2 (en) * | 2021-01-11 | 2024-03-12 | Ivanti, Inc. | Software utilization optimization in managed networks |
US11416247B1 (en) * | 2021-02-09 | 2022-08-16 | International Business Machines Corporation | Healthcare application data management based on waste priority |
CN113051475A (en) * | 2021-03-25 | 2021-06-29 | 平安银行股份有限公司 | Content recommendation method and device, electronic equipment and readable storage medium |
US20230111056A1 (en) * | 2021-10-13 | 2023-04-13 | International Business Machines Corporation | Dynamic management of application uninstallation |
US11928451B2 (en) * | 2021-10-13 | 2024-03-12 | International Business Machines Corporation | Dynamic management of application uninstallation |
Also Published As
Publication number | Publication date |
---|---|
US20190213485A1 (en) | 2019-07-11 |
WO2018217276A1 (en) | 2018-11-29 |
US10719769B2 (en) | 2020-07-21 |
US10262265B2 (en) | 2019-04-16 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10719769B2 (en) | Systems and methods for generating and communicating application recommendations at uninstall time | |
US11023441B2 (en) | Distributed storage and processing of hierarchical data structures | |
CN108463817B (en) | Personalized entity library | |
US9628582B2 (en) | Social-driven precaching of accessible objects | |
US9411814B2 (en) | Predictive caching and fetch priority | |
US20170250930A1 (en) | Interactive content recommendation personalization assistant | |
JP5453696B2 (en) | System and method for effectively providing content to client devices in an electronic network | |
US10332184B2 (en) | Personalized application recommendations | |
US9866646B2 (en) | Systems and methods for anticipatory push search for a homescreen browser | |
US11290551B1 (en) | Method and system for implementing circle of trust in a social network | |
US20180013742A1 (en) | Automated Search Result Adaptation According to User Account Information | |
CN107103490B (en) | Data processing method, network server and terminal | |
US9934068B2 (en) | Data analysis system | |
US20240098151A1 (en) | ENHANCED PROCESSING OF USER PROFILES USING DATA STRUCTURES SPECIALIZED FOR GRAPHICAL PROCESSING UNITS (GPUs) | |
US20180129664A1 (en) | System and method to recommend a bundle of items based on item/user tagging and co-install graph | |
US20160132771A1 (en) | Application Complexity Computation | |
US20160132783A1 (en) | User Modelling by Domain Adaptation | |
CN110555163A (en) | Techniques for personalizing application store recommendations | |
EP3087469A1 (en) | Dynamically sharing intents | |
WO2017029650A1 (en) | Improving search result relevance based on content associated with software applications | |
Mizzaro et al. | A context-aware retrieval system for mobile applications | |
US11838597B1 (en) | Systems and methods for content discovery by automatic organization of collections or rails | |
US20230239377A1 (en) | System and techniques to autocomplete a new protocol definition | |
CN117407597A (en) | Hybrid resource recommendation method, device, computer equipment and readable storage medium | |
US20160125034A1 (en) | Annotate Apps with Entities by Fusing Heterogeneous Signals |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:LU, HAO;REEL/FRAME:042618/0827Effective date: 20170606 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
EP1087567B1 - Decentralized network system - Google Patents
Decentralized network system Download PDFInfo
- Publication number
- EP1087567B1 EP1087567B1 EP00307396.2A EP00307396A EP1087567B1 EP 1087567 B1 EP1087567 B1 EP 1087567B1 EP 00307396 A EP00307396 A EP 00307396A EP 1087567 B1 EP1087567 B1 EP 1087567B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- node
- messages
- pollen
- nodes
- message
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W8/00—Network data management
- H04W8/22—Processing or transfer of terminal data, e.g. status or physical capabilities
- H04W8/24—Transfer of terminal data
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W28/00—Network traffic management; Network resource management
- H04W28/02—Traffic management, e.g. flow control or congestion control
- H04W28/10—Flow control between communication endpoints
- H04W28/14—Flow control between communication endpoints using intermediate storage
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/12—Messaging; Mailboxes; Announcements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W88/00—Devices specially adapted for wireless communication networks, e.g. terminals, base stations or access point devices
- H04W88/02—Terminal devices
- H04W88/04—Terminal devices adapted for relaying to or from another terminal or user
Definitions
- Bluetooth http://www.bluetooth.com/
- PDAs personal digital assistants
- PDAs personal digital assistants
- domestic appliances such as refrigerators (for inventory control and communication), and washing machines (for communicating malfunctions to centralized service).
- the decentralized network system makes it possible for information to be shared and distributed where needed simply by the everyday actions of groups of users.
- the users need not be aware of how the distribution is taking place or of the details of their participation in the process.
- Information such as hints, tips and other comments, can be associated with physical objects in the work environment and made easily available to colleagues by storing them in the first nodes (e.g., iButton), ready for reading by a user with a PDA (second node).
- each first node and each second node must operate in accordance with a predetermined method or process of creating, storing and handling messages.
- the methods are preferably implemented, in a preferred embodiment of the invention, as an application program or a cooperative set of application programs executed on the first nodes, the second nodes and the hive, if a hive is present in the system.
- the pollen network may use alternative devices.
- alternative devices include very short range infrared devices.
- pollen can also be carried by mobile iButtons (e.g., Java Rings and smart cards). These mobile iButtons are likely to be used to certify identity and authenticate transactions. Examples of applications for such mobile iButtons as second nodes include entry into physical spaces (buildings) and virtual spaces (WWW sites), electronic commerce, workflow transactions.
- the messages, or pollen have the following properties.
- Each pollen or message will have a unique pollen identifier. Users may, of course, specify a priority of the pollen message. Since memory size of both the PDA (wearable computer) and the iButton (device miniature computer) will be critical, size in bytes of the pollen is specified.
- Each pollen will also include a timestamp, i.e., the date and time of creation of the pollen message, an expiration date (which may be a default value, a user-specified value or none) and/or a time-to-live (TTL), the source site (where the pollen originated) and destination site (where the pollen message is intended to be received).
- Each pollen will include a message that will include content, i.e., data, information or an application program such as an applet.
- each pollen will include a class field which will designate the type of message content (either message or application program). This will enable the recipient or a transmitting node to decide whether to download the message or not.
- each first node is assigned a unique identifier or node ID.
- a field indicates the size of the node's memory or cache size (in bytes). This information is used by the first node software program in determining which messages to accept, delete and store.
- a field is provided to indicate the class of the node, i.e., device or room (location). Sub-fields are provided to indicate more details concerning the device, for example, whether the device is a printer, facsimile, telephone, PicTel, MFD. Similarly, a field is provided for locations to indicate type, i.e., office, meeting room, reception, library. Another field provides the physical location of the device or room in terms of physical coordinates. If only certain users may have access to the first node's device, a field is provided for public and private keys to enable encrypted pollen exchanges. All of this information is encoded in the various fields of the SerialRepresentation class.
- a decentralized network system will include at least one hive.
- the hive consists of a shared dataspace and a set of processes.
- the shared dataspace saves the current state of all users (i.e., all second nodes), all first nodes, and all pieces of pollen (to the extent it has received knowledge of same by information uploaded from docking first nodes).
- the hive contains a process for updating a user's pollen cache and updating its own dataspace upon docking of the user PDA with the hive through a workstation. It may also contain processes that learn the traffic patterns of users moving among nodes.
- Class of the device is considered as a way of differentiating tasks.
- a printer first node can be configured to give preference to pieces of pollen having to do with printers.
- a separate application in the iButton of the printer could use the pollen to keep track of the current state of printers and indicate to users alternative printers when its host printer is down.
- a meeting room iButton could suggest available meeting rooms when its host meeting room is occupied.
- a method of synchronizing exchange of messages between a first node and a second node is shown in Figure 5 .
- the PDA stores a log for later use when docking with a hive (see below).
- the PDA gets the iButton's ID and adds it to the log of first nodes visited.
- the PDA gets the log file stored in the iButton and the remaining memory (called Place).
- the PDA applies an algorithm or method for determining which messages to download onto the iButton and which messages to upload from the iButton.
- Rumor spreading is based on the following scenario. PDA and first node, when in contact, transmit to each other any pollen the other doesn't know yet. Once a first node or a PDA has transmitted a pollen grain k times, it stops spreading it.
- the analogy with epidemiology is that when a node or PDA is unaware of a pollen, it maps to a susceptible individual. When it knows about a pollen grain and spreads it, it is infective. While when it stops spreading it, it is removed.
- this methodology is one of the numerous existing variants, known as rumor spreading with feedback and counter, which we use in a different context than in the epidemiology literature, as first nodes never spread rumor to first nodes, neither do PDA to PDA. This asymmetry unfortunately prevented us from directly reusing known mathematical results from the literature.
Description
- This invention relates generally to networking systems, and more particularly, to a decentralized network system for networking heterogeneous devices which operates without a physical infrastructure and to a method of managing message exchanges between nodes in a decentralized network system.
- The value of networking in business via intranets and for personal use via the Internet is undisputed. Networking enables large numbers of people and equipment to work cooperatively together at multiple locations. Traditional networking involves dedicated servers, workstations and wired transmission media. Wireless communication provides some flexibility in traditional network systems. However, infrared (IR) media requires a clear line-of-sight between transmitter and receiver. Radio frequency (RF) communication avoids line of sight problems, but RF devices have relatively high power consumption, requiring either access to AC power or frequent battery replacement. Traditional networks involve substantial infrastructure, but do not provide for all networking needs.
- Devices such as printers, workstations, mobile workstations and other devices are frequently networked using traditional means. However, many pieces of electronic equipment cannot be networked using traditional means; they are either too rudimentary to justify the cost of a network connection or are not compatible with the network protocol. Even those devices that are networked communicate via different protocols, requiring servers to translate and pass on messages and information from such devices.
- There is a large volume of information pertaining to electronic devices (e.g., photocopiers, facsimile machines, video conferencing suites), which is not available in a traditional network system. Many of these devices are used infrequently, so users are not familiar with their operation, necessitating access to the device's manual. Most of the devices have operations manuals that are provided in a hard copy form and ideally located near the device. However, manuals may get lost or "borrowed," or there may be no convenient place to keep them, or they are not available for viewing when needed. While it might be desirable to have all device manuals located on a network, it is generally not considered practical.
- In addition to the information available in manuals, there is often a body of informal knowledge associated with complex, old and/or temperamental devices. However, even if this informal information is recorded, it may be stored in someone's office or on the web but probably not where it is needed, namely next to the device itself.
- In a complex work environment, it is common for devices not to function as expected. Depending on the device's user-interface, such as a printer, it may not be clear why the device is not functioning. If a device does have a problem, the user would like to find possible fixes or alternative working devices or to be able to inform support personnel. Even in the case of a networked printer, the user will not know if other networked printers are available without returning to a workstation or calling and finding the location of a working printer.
- In general, devices support specific kinds of tasks in a generic way. Within any given organization, devices tend to be used in ways that are specialized for the organization or for a particular group of people. For example, most phone calls will be to internal numbers. However, apart from specially programmed numbers, the telephones are not equipped to provide this specialization. A common solution is to provide a directory of phone numbers, which will not necessarily be ready-at-hand when the task of reaching someone occurs.
- An article by Dube in IEEE Personal communications Vol. 4 No. 1 in February 1997 describes a routing algorithm for an ad-hoc mobile networks to enable mobile hosts in a dynamic network topology without predesigned routers by selecting the most stable links. These mobile hosts can always communicate directly with their neighbouring hosts.
- Various unstructured network systems have been developed to satisfy some of the functions not available with a traditional network system. For example, the Locust Swarm (T. Starner, D. Kirsh, S. Assefa, "The Locust Swarm: An Environmentally-powered, Networkless Location and Messaging System," IEEE International Symposium on Wearable Computing, Oct. 1997) uses solar powered devices positioned in buildings to store annotations and provide location information to users via their wearable computers. The Locust Swarm uses wireless communications to transmit messages from a passing user's wearable computer to an overhead infrared transceiver. While the Locust Swarm suggests using the individual IR transceivers to transmit messages by downloading to passing users, no method of managing message exchange or implementation is described.
- Borovoy, R., Martin, F., Vemuri, S., Resnick, M., Silverman, B., Hancock, C. "Meme Tags and Community Mirrors: Moving from Conferences to Collaboration," in proceedings of CSCW'98, November 1998, Seattle, USA, pp. 159-168, describe a device called a Meme Tag. The Meme Tag allows small textual messages to be passed among users via user-worn badges which communicate via infrared.
- In the Factoid Project (httn://www.research.digital.com/wrl/projects/Factoid/index.html), a user carries a tiny device that receives very small messages from other similar devices via short-range radio and stores them until they can be downloaded. Whenever the Factoid device comes within range of an Internet connected server, the information is passed on to the server, which uploads the messages to a special database associated with the user. Since the messages are small (on the order of 200 bytes), the Factoid Project contemplates that they are never deleted but will serve as a permanent record of the things that the person has encountered throughout life.
- Local area wireless networks have been suggested as alternatives to traditional network systems. For example, Bluetooth (http://www.bluetooth.com/) is working on a short-range (∼10m) radio based network technology. Bluetooth envisions using this technology to provide networking between many devices both in the home and office, including: components of home-stereo systems, mobile phones and personal digital assistants (PDAs), computer peripherals, and domestic appliances, such as refrigerators (for inventory control and communication), and washing machines (for communicating malfunctions to centralized service).
- Another proposed alternative to a traditional network system involves using standard domestic power lines. Domestic power lines is a ubiquitous technology that was tried many years ago. In principle, anything plugged into the power mains can communicate with any other plugged-in device. However, such a network cannot handle communication across anything outside a home or a building and battery-powered or non-electronic devices cannot be easily networked.
- There is a need for an inexpensive, decentralized network system for networking large numbers of small electronic devices without a substantial infrastructure. There is a need for a network system that can easily handle battery-powered devices or unpowered devices. There is a need for a network system that avoids the problems of line of sight and high power consumption. There is a need for a network system that can provide information pertaining to specific networked devices at the specific device. There is a need for a network system that can easily store informal information about a device at the device location. There is a need for a method of managing message exchanges in a decentralized network system.
- According to the present invention there is provided a decentralized network system, comprising: a plurality of normally unconnected nodes including a plurality of fixed nodes and a plurality of mobile nodes; wherein each fixed node includes a memory for storing messages and a communications port for transmitting and receiving messages and wherein each fixed node is associated with a device or location; wherein each mobile node includes a memory for storing messages, a processor for exchanging messages with fixed nodes in accordance with a predetermined relationship comprising rules for creating, storing and handling messages, and a communications port for transmitting and receiving messages, wherein the processor is responsive to a user input to generate a message; wherein the message is transmitted node by node across the network from a source node to a destination node which is not connected to the source node, through a sequence of message exchanges between nodes resulting from movement of mobile nodes and interactions of mobile nodes with fixed nodes; wherein the message is transmitted from a first fixed node to a second fixed node by movement of a mobile node from said first fixed node to said second fixed node; the message comprises content and information representing the message's transmission status selected from the group of new, in transit, delivered and expired, each fixed node and/or each mobile node further comprises a message state machine for modifying the transmission status of the messages, and each message further comprises a unique identifier, pertaining to a destination node and/or an expiration time.
- A corresponding method is also provided.
- A decentralized network system according to the invention provides for the distribution and collection of information (or messages) without the constraints of a large physical infrastructure. A decentralized network system according to the invention includes a plurality of first (fixed) nodes, each first node having a memory for storing messages and a communications port for transmitting and receiving messages. Preferably, the first nodes may also include a processor for processing messages in accordance with a predetermined relationship. The first nodes may be attached to some physical device, such as a printer, facsimile, telephone or a book. They may also be attached to a location such as a room, reception area or building or to a mobile object such as child, pet, car, or book. The first node may be an iButton, a miniature computer, battery operated and encased in steel, as manufactured by Dallas Semiconductor. Preferably, the first node's predetermined relationship stores and deletes messages based on relevance to the device or location to which the first node is attached and based on available memory space in the first node memory.
- A plurality of mobile second nodes is also provided. Each second node includes a memory for storing messages, a processor for creating messages in response to user input and for processing messages in accordance with a predetermined relationship and a communications port for transmitting and receiving messages. The mobile second nodes are moved by users, who provide the means for transmitting messages from one first node to another first node. Preferably, each second node is a personal digital assistant (PDA) or wearable computer. Users or administrative software services may create messages, which are first stored in the second node and then downloaded to a first node. Alternatively, messages may be generated by the device or location to which a first node is attached or associated with and stored in the first node. Preferably, the second node's predetermined relationship stores and deletes messages based on relevance to the anticipated first nodes to which the second node's user may travel and based on available memory within the second node. The messages carried within nodes of the second kind may be either visible or invisible to the user associated with the second node.
- Messages may be stored in the memories of first nodes or second nodes. For example, a user may wish to record a message about a particular device, such as "this printer is not working" or the user may wish to leave a message for another user at his workstation. Messages pertaining to informal knowledge about the device may also be stored in the first node for ready access by a user. The user first creates the message on his PDA. The user then couples his PDA to the iButton associated with the device or location to which he wishes to store the message. Messages may be transmitted by docking the PDA to the iButton via a receptor or using some other traditional transmission media. If the message pertains to the device, no further transmission is required. Later, users docking with the first node may read the message.
- If the message is intended for a different first node or second node, transmission of the message from one node to another node is accomplished through a sequence of message exchanges between pairs of first nodes and second nodes and between pairs of second nodes. This is accomplished by the movement of users carrying a second node and communicating selectively with first nodes.
- A message includes both content and information representing the message's transmission status or state. Transmission status or state may be one of new, in transit, delivered or expired. When a user creates a message, its status is new. Also, when a message is copied, the status of the copy is new. When the message is transferred to any node, not the destination node, its status is in transit. When the message is delivered to the destination node, its status is delivered. Note that destination nodes are either first nodes or second nodes.
- Since more than one second node may download the message, several copies of the message may be in existence. This redundancy helps in ensuring that the message is received by the intended node. The first nodes and the second nodes typically have only a limited memory available for the storage of messages. Since some messages (or copies of a message) may not make it to their destination node and to avoid overloading the system with messages, each message will have an expiration date. When a message status is expired, the message may be deleted by any receiving node.
- In a preferred embodiment, the decentralized network system will include a third node, which serves a capacity similar to a server in a traditional network. Second nodes may communicate with the third node periodically and download all messages stored in their memories. The third node (also called a hive) stores or archives all such downloaded messages in a master database. The third node may also act as an intelligent communications hub and administrative system. Preferably, each second node maintains a log of the first nodes it has visited since it last made contact with the third node. These logs allow the third node to learn the most probable routes that a given user (and the second node) will take and the nodes that the user (second node) is most likely to visit. This information can be used by the third node to select which second node to give a particular message, thereby optimizing the network throughput and minimizing the number of messages that each individual second node must carry.
- The system of the invention can be analogized to the way bees pollinate flowers. In the course of their workday, people move from device to device and from location to location, just as bees move from flower to flower in a field in search of nectar. When a bee visits a flower, it inevitably collects pollen on its body and, when it moves to a different flower, some of this pollen rubs off. Several bees may visit the same flower, in which case pollen from each bee rubs off onto the flower, providing "redundant pollen." The movement of the bees is relatively random, but most flowers get pollinated.
- In the invention, people (i.e., users) carry an electronic form of pollen (messages) with them, not on their bodies, but inside their wearable computers or PDAs (such as Palm Pilots, Psions, etc.). Devices and spaces can be made pollen-ready by affixing suitably programmed autonomous miniature computers, such as iButtons, to them. Optionally, an organizational memory, referred to as the hive, which may be resident on an organization's existing traditional network, may be used to provide centralized storage of pollen (information and messages) and a method of controlling the distribution of information. Messages are transmitted from one node to another node by the relative random movement of the second nodes resulting in message exchanges with first nodes.
- An important benefit of the invention is that information can be transferred to arbitrary locations without the need for either a physical or a wireless (radio or infrared) infrastructure. The decentralized network system preferably employs very low cost devices such as iButtons, that are durable, have a long life expectancy and can be used either indoors or outdoors, for the first nodes and personal digital assistants for the second nodes. The administration effort required to maintain a decentralized network system is minimal.
- The decentralized network system also makes it possible for users with mobile devices to participate in multiple "virtual networks" without reconfiguring firewalls (the standard security measures employed by fixed networks). Unlike wireless networks, the decentralized network system is immune to electronic eavesdropping. First, the range of transmission can be minimized. Transmission of messages between iButtons and PDAs may be accomplished by docking the PDA to the iButton through a receptor. Alternatively, very short range (IR or RF of the range of inches to a few feet) may be used. Additionally, individual first nodes and second nodes can be encrypted so that only specifically encrypted nodes can receive and download messages. This also ensures that there is no crosstalk between the virtual networks.
- The decentralized network system makes it possible for information to be shared and distributed where needed simply by the everyday actions of groups of users. The users need not be aware of how the distribution is taking place or of the details of their participation in the process. Information, such as hints, tips and other comments, can be associated with physical objects in the work environment and made easily available to colleagues by storing them in the first nodes (e.g., iButton), ready for reading by a user with a PDA (second node).
- In the same way, when a user visits a device, not only can the user leave comments on the associated first node (iButton), but the first node can also transfer messages (created by another user) to the user's PDA. The messages transmitted to the second node may be either visible or invisible to the user, depending on their relevance to the user. Relevance depends on both the person's identity and the current context. Users may be notified, for example, about messages addressed specifically to them or pertaining to their current location. When the user next visits another device, the messages stored in the PDA can then be selectively passed along. Through the cumulative actions of many people interacting with many devices in this way, messages are transferred node-by-node across the network.
- Not only may electronic devices be networked, but also any physical space or object, such as meeting rooms, offices, and even non-electronic devices such as filing cabinets, bookcases, books may be networked. When a person wishes to use a meeting room that is currently empty, his/her PDA can download information from the meeting room's iButton informing him/her whether the meeting room is already booked.
- The decentralized network system provides another advantage in communication. When a user arrives at a colleague's office and finds him/her absent, the user can create a pollen message on his/her PDA and then download the pollen onto the colleague's iButton attached to his/her office. Thus, the user can leave a signed message that only the colleague is able to read (unlike with post-it notes). The user may also download from the colleague's iButton onto the user's PDA any pollen pertaining to information available concerning the colleague's whereabouts and schedule.
- When a hive or third node is included as part of the decentralized network system, the hive acts as an organizational memory tracking the expiration dates of the messages stored in it. When a message "expires" or becomes obsolete, the organizational memory can transfer commands to a docked PDA (second node) instructing it to delete the particular message when the user's PDA next encounters the specified first node. If no hive is present, any first node or second node may delete an expired message resident in its memory. An organizational memory or hive also allows users to obtain an overall view of the messages/information in the decentralized network system and to centrally update this information, for example, to produce new manuals or Frequently Asked Question (FAQs) lists to be associated with particular devices, or to perform distributed diagnosis.
- In some decentralized network systems, it may be appropriate to provide more than one hive. Different organizational memories, or hives, could handle different classes of information with different propagation characteristics. For example one organizational memory might only handle local site information while another might handle company-wide information.
- To facilitate transfer of message in the decentralized network system, each first node and each second node (and the third node, if present) must operate in accordance with a predetermined method or process of creating, storing and handling messages. The methods are preferably implemented, in a preferred embodiment of the invention, as an application program or a cooperative set of application programs executed on the first nodes, the second nodes and the hive, if a hive is present in the system.
- Embodiments of the present invention will now be described, by way of example, with reference to the accompanying drawings, in which:
-
Figure 1 is a block diagram of a decentralized network system according to the invention; -
Figure 2a is a perspective view of a receptor for connecting a first node and a second node andFigure 2b is a schematic of the circuit operating the receptor inFigure 2a ; -
Figure 3 is a schematic showing example message transfers in the network system ofFigure 1 ; -
Figure 4 is a diagram of a pollen state machine; -
Figure 5 is a flowchart of the synchronization routine of a second node when docking with a first node; -
Figure 6 is an example of a hive database; -
Figure 7 is a flowchart of a method for storing a message in a first node; and\ -
Figure 8 is a flowchart of the hive methodology for tracking messages in the pollen network. - Referring to the drawings, and now in particular with reference to
Figure 1 , a decentralized network system or pollen network is shown therein and referred to byreference numeral 100.System 100 provides for the transfer and exchange of messages or pollen.System 100 includes a plurality offirst nodes 12, a plurality ofsecond nodes 20 and a third node orhive 50. Eachfirst node 12 is associated with a device or location designated by 10. As noted abovedevice 10 may be a printer, facsimile machine, book or the like.Location 10 may be a room, area or building. Eachfirst node 12 preferably includes a miniaturized computer, such as an iButton, with a processor and dedicated memory for storing messages and a communications port. However, the first node need not have a processor; it may have only a dedicated memory and communications port. If the first node has a processor, then it is programmed with a predetermined routine which determines which messages it will accept for storage and the priority for storing messages in light of the limited storage capacity of its memory. - Each
second node 20 is associated with a user and includes a processor and dedicated memory for storing messages and a communications port. Preferably eachsecond node 20 is a wearable computer or otherwise suitably portable computing device, such as a personal digital assistant (PDA). In the simplest sense, the second node acts as a generic interface that extends the built-in interface of any pollen-equipped device to the network. Given a world in which more and more people are carrying around PDAs, this is an inexpensive way to build a new interface solution from existing devices in the office and home environments. - The PDA processor is programmed with a predetermined routine that determines which messages it will accept and the priority for storing messages in light of its memory's limited capacity. The PDA processor may also be programmed with a predetermined routine that determines which messages a communicating first node will accept with what priority, in light of the first node's limited storage capacity. The PDA processor is also programmed to create messages in response to a user's input. Each user may optionally have a
workstation 30, which may be a standalone personal computer or a workstation associated with a conventional network. The user may wish to download messages on his/herworkstation 30. Messages are transmitted from first node to second node when the first node and second node dock together. Preferably, this docking occurs with areceptor 22. Each user may dock his/herPDA 20, from time to time, with thenetwork 100's hive orthird node 50 via a networked personal computer or workstation. - Although the preferred embodiment contemplates using iButtons and PDAs, the pollen network may use alternative devices. Examples of alternative devices include very short range infrared devices. In addition to PDAs, pollen can also be carried by mobile iButtons (e.g., Java Rings and smart cards). These mobile iButtons are likely to be used to certify identity and authenticate transactions. Examples of applications for such mobile iButtons as second nodes include entry into physical spaces (buildings) and virtual spaces (WWW sites), electronic commerce, workflow transactions.
- Referring to
Figures 2a and 2b ,receptor 22 includes an RS-232 port 26 for connecting withsecond node 20 and an RJ-11 port 24 for connecting tofirst node 12. Connecting to thehive 50 can occur either by physical docking (such as through an RS-232 comm port, receptor or other physical connection) or via infrared connection to personal workstation. - While in some
networks 100, dedicated PDAs may be employed, it is contemplated thatmany networks 100 will include participating users who will have their own personal PDA. Participating users in thenetwork 100 must agree to set aside a portion of PDA memory for caching messages (pollen) and for pollen user interfaces (for creating pollen, reading pollen and modifying pollen). Similarly, the memory in theiButtons 12 affixed todevices 10 is divided into two portions: one holding a pollen processing routine with some rule-based behavior and the second caching pollen. The small memory size of iButtons, which is presently 64K, is the strongest constraint on the size of messages and applications that can be stored and run. As noted above, pollen can range from simple messages, such as "this printer is jammed!" to a complex diagnosis system specific to thedevice 10. - The
network 100 includes many users equipped with PDAs so that the cross-pollination or message distribution and exchange occurs in a distributed and decentralized way. This approach is less complex and expensive than a traditional network, which would provide a centralized mechanism for updating all iButtons over a wired network. In addition to not requiring a physical network infrastructure, another advantage to thenetwork 100 is that it is not restricted to a single organization. Multiple organizations (even homes) can use the same technology. - Unlike wireless networks based on radio or infrared technology, pollen (messages) is not susceptible to electronic eavesdropping. First, messages are only exchanged directly between devices using the receptor or very short range IR or RF transmission. Second, public-key encryption may be used to ensure that unauthorized nodes are not allowed to receive information. Also because messages follow unpredictable paths, potential eavesdroppers cannot be sure of catching all the traffic between two nodes or even knowing that a communication has occurred.
- When a user approaches a
device 10, the user can then download onto his/herPDA 20, from the device'siButton 12, pollen in the form of contextual information about the device (what it is, how to perform common operations, a Frequently Asked Questions list). If the device is not performing as expected the user can then view pollen stored on the device's iButton in the form of comments left by other users. The user may also create pollen in the form of additional comments or information for other users and for support personnel on his/her PDA and download his/her created pollen into the iButton's cache. - Contextual information pertaining to a
particular device 10 is stored in the device's iButton. By attaching thereceptor 22, a small interface, to a PDA, a user can read the information stored on the iButton to get contextual information about the device and leave comments behind for other users. Each pollen message, as further described below, will preferably contain the context, name of contributor, time and some text. Pollen containing comments can be permanent or ephemeral and have an expiry time so that comments that are no longer relevant can be automatically deleted. To simplify the process for the user a standard list of comments that can be selected with a single click may be provided. For example, a user may select a "me, too" option which lets them state their agreement with an existing comment. - Depending on the available memory on the iButton attached to a particular device, the iButton may include pollen in the form of an automated troubleshooting or help (similar to the wizards on MS operating systems) program, as a client-server application, with the iButton functioning as a server and the PDA functioning as a client. Alternatively, many small applications (such as Java applets) could be downloaded from the iButton to the PDA, or vice versa, as another kind of pollen message.
- When a user with a second node or PDA approaches a device with a first node or iButton and wishes to store a message, the user first creates a message on his/her PDA, then couples his/her PDA with the iButton. Referring to
Figure 7 , instep 202 the PDA sends a command to store a message. The command includes the size of the message to be stored on the iButton. Instep 204, the message M is split into N packets, each of size Mi. In this case the size of the packets is 110 bytes. Then the packets are transmitted individually, for each i = 1 to N, instep 206. When the Nth packet is transmitted, the routine ends instep 208. Instep 208, the routine sends an APDU (application protocol data unit) containing the Mi packet. Instep 212 the routine waits a period of time to allow the iButton to store the packet Mi. Instep 214 the routine requests the state of the iButton. If the state is not packet processed instep 216, the routine waits. If the state is packet processed, an APDU reply indicating successful or failed stored is sent to the PDA. If the storage failed, an error message is sent instep 222. If the packet is stored successfully atstep 220, the routine loops back to step 206 to transmit the next packet. - The pollen network is less expensive than traditional networks to establish. First nodes in the pollen network can be added or removed trivially, with almost zero administrative overhead (apart from initializing the iButton appropriately and affixing it to the device). An advantage in using iButtons in the pollen network is their ease of installation and lack of maintenance. Once an iButton is affixed to a device and the basic pollen environment (program or operating routine) is installed on it, nothing more need be done since all further updates can be carried out as part of normal pollen operation (i.e., a user can download an application update during a regular PDA visit).
- Second nodes can similarly be added or removed easily. PDAs are ubiquitous and relatively inexpensive to acquire; many people carry them around as part of their everyday life. To join a pollen network, a user with a PDA need only download the pollen network software and dedicate a portion of the PDA memory for pollen network use. PDAs are standard products, so users benefit from economies of scale and a wide range of software and accessories.
- A pollen network with one or more hives (third nodes) is also relatively easy to add or remove. The hive is not necessary for the pollen network to operate. As noted above, the hive allows for storage of larger numbers of messages and can be used to increase the throughput and efficiency of pollen transport by learning user routes.
- The Pollen network is an infrastructure which enables new applications in support of these workplace scenarios, as well as others in different environments, such as the home, the factory, or retail settings. Users may belong to multiple decentralized network systems. In offices, there may be several decentralized network systems having overlapping members. These decentralized network systems may even extend among multiple buildings or physical sites.
- In addition to the infrastructure of PDAs and iButtons, the pollen network could be expanded by the addition of an infrared infrastructure. An IR infrastructure in addition to the pollen network would allow more continual connectivity. For example, devices with infrared ports could replace iButtons to allow contactless exchange of Pollen. PDAs with infrared ports (such as Psions and Palm Pilots) could directly exchange pollen messages via infrared. Also infrared transceivers could allow PDAs to communicate with the hive or other servers. Infrared networks have been put in place as research testbeds in support of mobile workers and do not require physical docking.
- Messages are transmitted in the pollen network from one arbitrary node to another in the pollen network by a sequence of exchanges between first nodes and second nodes, between second nodes and second nodes, and between second nodes and the hive (if the hive is present). Referring to
Figure 3 , a message can be passed between two arbitrary nodes in any of several ways. First, a user can carry a message from a source node 34 on his/her wearable computer directly from one node attached to one device to another node attached to the destination device 36 (path 42). Second, the message can pass through intermediate nodes 38, carried from node to node by a number of different users (path 46). Third, the message can pass through thehive 50 on its way to another node; one user deposits the message at the hive when docking and a second user picks it up later when docking (path 44). - An important aspect of the pollen network is the pollen or the messages that are transmitted on the network. Each message or pollen includes content and must also have a state associated with it. Preferably, the pollen state is new, in transit, delivered or expired. Both the iButtons and the PDAs have software that changes the state of the pollen in accordance with a pollen state machine.
- The pollen state machine controls the evolution of the state of the pieces of pollen. The possible states are: new, in transit, delivered, deleted and expired. A piece of pollen that has just been created by a user is marked as new. A piece of pollen that has been picked up from a first node site and has not yet arrived at all of its destinations, is marked as in transit. A piece of pollen that has been delivered to all of its destinations is marked as delivered. The piece of pollen is marked as delivered when it is known to have arrived at all of its destination nodes; otherwise, it is marked as in transit. When the current date is greater than the piece of pollen's expiration date, its state is marked as expired. A piece of pollen that has been manually deleted by a user is marked as deleted. (Pollen may be deleted when expired or when delivered and not needed at the destination.)
- The state transition diagram for pollen state is shown in
Figure 4 . It should be noted that the state of a piece of pollen is independent of the state of the various copies of that piece of pollen. In other words, this state transition diagram is for the differentiated delivery scenario. When a copy of a piece of pollen is made, its state is new. - In the preferred embodiment of the decentralized network system, in addition to the particular user specified or user created message content, the messages, or pollen, have the following properties. Each pollen or message will have a unique pollen identifier. Users may, of course, specify a priority of the pollen message. Since memory size of both the PDA (wearable computer) and the iButton (device miniature computer) will be critical, size in bytes of the pollen is specified.
- Each pollen will also include a timestamp, i.e., the date and time of creation of the pollen message, an expiration date (which may be a default value, a user-specified value or none) and/or a time-to-live (TTL), the source site (where the pollen originated) and destination site (where the pollen message is intended to be received). Each pollen will include a message that will include content, i.e., data, information or an application program such as an applet. Preferably each pollen will include a class field which will designate the type of message content (either message or application program). This will enable the recipient or a transmitting node to decide whether to download the message or not. Preferably a field is provided to the author's name (typically the user ID assigned by the system) or it will indicate the author is anonymous. A field for designated recipients may also be included. Recipients may be designated as all, or a member of a particular group or by specific user ID.
- First nodes are associated with a device or a location. Preferably the Java iButton is used, although any suitable device with a dedicated memory, communications port and optional processor may also be used. Most first nodes will be attached to a fixed device, such as a printer or facsimile machine, but others may be attached to a book or piece of video equipment, which may be moved from location to location. The processor in the iButton or miniaturized computer is loaded with software that enables storing and exchange of messages with second nodes (the wearable computers or PDAs) in accordance with a predetermined relationship. Stored with the iButton memory is data that identifies the first node and its particular properties.
- Due to the limited memory size of the first nodes and the capability of the processor, and in particular the iButton, the pollen messages were designed to understandable by multiple platforms. This is accomplished through the use of a specific object called SerialRepresentation. The serial representation represents the electronic form of the particular pieces of pollen that travel on the pollen network. A class was created that provides a structure and a set of tools that serialize basic data to transport on the pollen network. This class allows the coding and decoding of the pollen messages. All messages that travel on the pollen network must decode and encode a SerialRepresentation object without loosing information.
- Preferably, each first node is assigned a unique identifier or node ID. A field indicates the size of the node's memory or cache size (in bytes). This information is used by the first node software program in determining which messages to accept, delete and store. A field is provided to indicate the class of the node, i.e., device or room (location). Sub-fields are provided to indicate more details concerning the device, for example, whether the device is a printer, facsimile, telephone, PicTel, MFD. Similarly, a field is provided for locations to indicate type, i.e., office, meeting room, reception, library. Another field provides the physical location of the device or room in terms of physical coordinates. If only certain users may have access to the first node's device, a field is provided for public and private keys to enable encrypted pollen exchanges. All of this information is encoded in the various fields of the SerialRepresentation class.
- Second nodes are wearable, portable computers, such as personal digital assistants and carried or worn by users. The processor in the PDA or wearable computer is loaded with software which enables creating, storing and exchange of messages with first nodes and with other second nodes, or a hive if one is present in the network. Stored within the PDA memory is data which identifies the second node and its particular properties. Preferably, each second node is assigned a unique user identifier or user ID. Since PDAs are associated with a person, a field for the user's name may be included. Also included is information to enable encrypted pollen exchanges, public and private keys. Since memory size is also limited in PDAs, a field is provided to show cache size (in bytes).
- To add increased flexibility and administration, a decentralized network system will include at least one hive. The hive consists of a shared dataspace and a set of processes. The shared dataspace saves the current state of all users (i.e., all second nodes), all first nodes, and all pieces of pollen (to the extent it has received knowledge of same by information uploaded from docking first nodes). The hive contains a process for updating a user's pollen cache and updating its own dataspace upon docking of the user PDA with the hive through a workstation. It may also contain processes that learn the traffic patterns of users moving among nodes. By learning these traffic patterns, the hive may be able to employ more intelligent schemes for updating users' pollen caches, for example, giving pieces of pollen to users most likely to take them to their destination site(s). At a more global level, people monitoring traffic patterns might realize that physical modifications of the network infrastructure (e.g., move the copier down the hall) could lead to more efficient traffic patterns, too. The hive may also contain processes that trigger actions based on observed traffic patterns and message contents (using linguistic analysis). An example of this is a trigger that notifies support personnel when there is unusual activity between printer nodes and words like "failure" or "crash" occur.
- The hive may include a database which includes the tables shown in
Figure 6 . Referring toFigure 6 , the hive database includes three main tables. The pollen table 61 stores pollen messages transmitted in the pollen network. The user table 63 stores the users (and their associated second nodes) in the pollen network. The log table 62 stores the number of connections between a given second node and a given first node. Table 62 is used during synchronization between a second node and the hive. - The pollen methodology describes the exchange of pollen between the different elements in the pollen network: the user PDAs, the first nodes and the hive. The pollen methodology regulates how users drop and pick up pollen at the nodes and at the hive. Additionally, each first node and each second node includes methodology specific to that node's operation. The exchange of pollen is complicated by a number of factors:
- (1) the various processing and memory limitations of the PDA and the iButtons; (2) the limitations in the communication bandwidth between the PDA and the iButtons; and (3) the requirement of the state machine to perform the changes in state of pollen.
- The pollen methodology for the PDAs describes how pollen is dropped off and picked up at first nodes (iButtons) and the hive (if a hive is included in the pollen network) and is preferably implemented as an application program running in the PDA processor. Two possible variations in the methodology describe the interaction at first nodes. The first assumes that the weakest link in the overall methodology, in terms of processing power and memory size, are the iButtons affixed to the first nodes.
- When a user connects his/her PDA with a first node (iButton), the PDA program reads from the memory of the iButton headers of all pollen stored in the memory of the first node and the header of the first node. The header of the first node includes the size of the first node's memory, which information is needed in order for the PDA program to determine which pollen to store and which to delete, if any. Pollen headers contain a limited amount of information about the pollen, for example, pollenID, copy number, state, version, priority, size, timestamp. Headers for the first node typically include nodeID and cache size.
- The PDA program constructs a list of the pollen IDs in both the PDA and the iButton, including any new pollen just created by the user. The PDA program first schedules for deletion at the first node, pieces of pollen which ID matches an ID on its list of deliveredIDs (the IDs of pollen that have been delivered to all destination nodes) or flushIDs (the IDs of pollen that have expired). Using the information in the pollen headers and an evaluation function, the PDA program sorts the pollen in inverse order of priority, with highest priority pollen first. The evaluation function takes into account the recency of the pollen, its user-set priority (if it exists), and the class of the device.
- Class of the device is considered as a way of differentiating tasks. A printer first node can be configured to give preference to pieces of pollen having to do with printers. A separate application in the iButton of the printer could use the pollen to keep track of the current state of printers and indicate to users alternative printers when its host printer is down. Similarly, a meeting room iButton could suggest available meeting rooms when its host meeting room is occupied.
- From this rank-ordered list, the PDA program chooses which pieces of pollen to save and which to delete, for both the PDA cache and the iButton cache. When deciding where to draw the line, the PDA program takes into account the memory size of each piece of pollen and the memory size of the respective caches. In general, the line between saving and deletion will be different for the PDA and the iButton as the sizes of the corresponding caches will be different. However, the division is consistent, assuming a common evaluation function: the set of pollen to save in the device with the smaller cache is always a subset of the set of pollen to save in the device with the larger cache.
- If the PDA cache is larger than the iButton cache, the PDA program triggers the deletion of the items in the PDA-to-delete-list, picks up from the first node the pieces of pollen in the PDA-to-save-list that reside in the node. The PDA pollen-state-machine updates the state of these pieces of pollen. The PDA program also triggers the deletion of the items in the iButton-to-delete list, transfers to the node the pieces of pollen in the iButton-to-save-list that reside in the PDA. Before transferring these pieces of pollen, the PDA pollen-state-machine updates the state of these pieces of pollen , and updates the deliveredIDs of the PDA.
- If the iButton cache is larger than the PDA cache, the PDA program triggers the deletion of the items in the iButton-to-delete-list, transfers to the first node the pieces of pollen in the iButton-to-save-list that reside in the PDA. Before doing the transfer, the PDA pollen-state-machine updates the state of these pieces of pollen both locally and remotely, and updates the deliveredIDs attribute of the PDA. The PDA program then triggers the deletion of the items in the PDA-to-delete list, picks up from the first node the pieces of pollen in the PDA-to-save-list that reside in the first node. The PDA pollen-state-machine updates the state of these pieces of pollen both locally and remotely. If the user desires to store a new pollen message, and there is sufficient memory space available on the iButton, the method described with reference to
Figure 7 (above) may be used. - The second methodology for handling the interaction of second nodes at first nodes assumes that the weakest link is the communication time between PDA and first node. In this case, the methodology should be modified somewhat to minimize communication time. In this second methodology, when a user connects with a first node iButton, the PDA program picks up headers of all pollen at the first node and the header of the first node. The node program picks up headers of all pollen in the PDA, the deliveredIDs list in the PDA and flushIDs list in the PDA. Both the PDA program and the node program create ordered lists of pollen, using a pollen evaluation function, as described in the previous methodology.
- If the PDA cache is larger than the iButton cache, the PDA program triggers the deletion of the items in its PDA-to-delete list, picks up from the node the pieces of pollen in its PDA-to-save-list that reside in the node. The PDA pollen-state-machine updates the state of these pieces of pollen both locally and. The iButton program triggers the deletion of the items in its iButton-to-delete list, picks up from the PDA the pieces of pollen in its iButton-to-save-list that reside in the PDA. The PDA program updates its deliveredIDs attribute.
- If the iButton cache is larger than the PDA cache, the iButton program and finite state machine operate first, then the PDA program and finite state machine operate.
- In order to reduce the communication time even more, part of the memory caches for the PDA and iButton could be reserved as a buffer. This would allow a complete exchange of pollen before doing any deletion. However, the exchange of all pollen might actually require more communication time than is entailed by the preprocessing done by the pollen-deleting that can act solely on the basis of the exchange of pollen-headers.
- A method of synchronizing exchange of messages between a first node and a second node is shown in
Figure 5 . In this method, the PDA stores a log for later use when docking with a hive (see below). After connecting with the first node (in this case an iButton), instep 102 the PDA gets the iButton's ID and adds it to the log of first nodes visited. Instep 104 the PDA then gets the log file stored in the iButton and the remaining memory (called Place). Instep 106 the PDA applies an algorithm or method for determining which messages to download onto the iButton and which messages to upload from the iButton. - Messages will be downloaded onto the iButton, in this example, in accordance with the following priorities: messages specifically for that iButton, then messages for a second node in which the second node's ID is stored in the iButton's log file, and then general broadcase messages. N is the selected number of messages to download.
- In
step 108, the PDA determines if place (the available space on the iButton to store messages) is greater than or less than the number of messages to be downloaded. If place is greater than or equal to N, instep 118, the PDA randomly choses Rmax messages on the iButton and uploads these into the PDA's memory. Instep 120, for each message uploaded, the PDA determines whether to erase it or save it. If the time to live (TTL) is less than zero, indicating the message has expired, the PDA erases the message. If the message already exits in the PDA's memory, the message with the lowest TTL is kept on the PDA memory. Instep 122 among the N messages selected to downloand onto the iButton, only the first Tmax (where Tmax is the maximum number of messages that can be stored on the iButton memory) are stored on the iButton. Messages that are duplicated among the Rmax are not stored again. - In
step 116, the PDA stores its own ID into the iButton log file and then restores the log file onto the iButton memory. - If place is not greater than or equal to N, in
step 110, the PDA reads and erases the first (Tmax-Place) messages on the iButton. The first are chosen because they are the oldest on the iButton. Instep 112, for each downloaded message, if the TTL is less than zero, the message is erased. If the message is already stored on the PDA memory, the version with the lowest TTL is kept. Instep 114, the PDA stores Tmax new messages on the iButton. Instep 116, the PDA adds its ID to the iButton's log file and downloads the updated log file into the iButton's memory. - In order to participate in a network with a hive, various additional information pertaining to delivery and processing of messages is stored in a log or fields in the PDA (as noted above). If the second node is part of a decentralized network system having a hive, a list of pollen IDs delivered since last hive visit is stored, as well as a list of pollen IDs to be flushed network-wide.
- Each time that a PDA synchronizes its pollen with pollen stored in an iButton, the address (or identifier) of the iButton is stored in the "log file" on the PDA. During the synchronization with the hive, this log file is read and a table in the hive database is updated. So, statistics can be made to estimate the probability for a message to be delivered if is loaded on a specific PDA.
- When a user connects his/her PDA with the hive, the hive program picks up all pollen in the PDA and the identity of the PDA. The hive updates its central pollen memory to include those pieces of pollen in the PDA with a pollenID unknown to the hive (makes a copy and stores in the hive memory). Pieces of pollen already known to the hive are synchronized with the pieces on the PDA. The state of the piece of pollen is updated according the pollen state machine, both in the hive and in the PDA. In particular, the hive keeps track of which pieces of pollen have been delivered to all of their destinations and which pieces have expired.
- During the synchronization, each record from the PDA is compared with a copy stored on the hive (if the copy does not exists, this copy is created on the hive). The copy, which has the smallest time to live (TTL) field, is considered as the most up-to-date and will be stored on the hive and on the PDA. During this "jump", the TTL field of the message that is moving is decreased. The messages are now updated. In a second step, messages that do not exist on the PDA are loaded on the PDA. Messages whose destination is the PDA are loaded with top priority, then messages with destinations to second nodes previously reached by this PDA, then messages with a broadcast address.
- The hive keeps track of which pieces of pollen have been delivered where and updates the deliveredIDs attribute (list) of the PDA. The hive keeps track of which pieces of pollen have expired and which pieces of pollen have been flushed (and where) and updates the flushIDs attribute (list) of the PDA.
- The hive schedules PDA pollen for deletion and hive pollen for insertion according to a PDA-specific evaluation function (function of PDA role and identity of its user). The hive schedules for update pieces of pollen that were synchronized in the previous steps. The schedule of actions is then performed.
- Messages are transmitted in the decentralized network system according to the relatively random, distributed nature of the movement of the users. In a network with a hive, the hive can learn the relatively random patterns of the users to select which users to download particular pollen to. The delivery of messages in the decentralized network depends on having relatively large numbers of users with relatively random patterns that overlap sufficiently to enable delivery of all messages to their destination. First nodes and second nodes each have program resident on their processors with a set of rules for storing, copying and uploading messages. These rules take into account the limited size of the memory in each.
- In the case of the hive, the hive has a much larger memory and is able to transfer all messages from each PDA that connects with it. The hive simply takes all the messages stored on the docked PDA and saves those it has not seen before. If the hive receives a message that it has already seen, it saves the latest version (as approximated by the time to live field of the pollen).
- Messages can either be addressed to a specific device (PDA or iButton) or can be marked as broadcast (and thereby distributed to all devices on the network). Given the limited memory on the PDA, the hive rules must carefully select which messages should be transferred to a particular PDA in order to make the best use of the available bandwidth. Messages addressed to a specific device are treated as a higher priority when deciding which messages to transfer to a PDA. Since the number of possible delivery routes may be restricted, it is important to ensure that the message will be carried by those PDAs most likely to come in contact with the recipient destination. The hive methodology, which is preferably implemented in a software program executed on the hive processor, first selects specifically addressed messages and then broadcast messages.
- The hive program assumes that each PDA logs the following information: all pollen that they have come in contact with since last synchronization with the hive; and all devices (other PDAs, iButtons) that they have come in contact with since last synchronization. These logs are downloaded to the hive database on synchronization and used to allow analysis of traffic patterns and to predict which nodes a PDA is most likely to visit.
- The hive also maintains a circular queue of all current broadcast messages. The methodology for selecting pollen grains assumes that each PDA has space for N grains of pollen (individual messages). Referring to
Figure 8 , the hive methodology includes the following steps: - In
step 250, sort pollen grains in reverse order (least first) of number of times that they have been transferred from the hive to a PDA. This gives priority to grains which have originated on hive-based applications and are not already out in the network and to grains which have not been disseminated widely (at least from the hive). - In
step 252, remove all grains that are known to have been delivered from the candidate list. - In
step 254, remove all grains that have expired from the list. - In
step 256, remove all grains which the docked PDA has already seen. - In
step 258, find the nodes that the PDA is most likely to visit, based on stored logs from other docked PDAs. - In
step 260, select the first grains on the candidate list whose destinations are nodes that the docked PDA is most likely to visit. - In
step 262, check if less than N grains have been selected. If X is the number of grains already selected instep 264, then select up to the first N-X grains from the broadcast queue and move the selected grains to the end of the queue. If less than N grains are selected, then insteps step 270, where the results are downloaded onto the PDA's memory. - The behavior of the pollen network (decentralized network system) was evaluated to determine the probability Pij(t) that a message originating at node i arrives at site j within time t. The probability was evaluated to determine how it depends on typical PDA-node and PDA-hive interaction rates and how it depends on the physical topology of nodes. Since multiple copies of messages may be made (redundant pollen), the issue of redundancy in the network was also evaluated in terms of, on average, how many copies of a piece of pollen arrive at their destination within time t (on order of the expiration time). The number of copies of pollen per piece of pollen are made, on average, was also evaluated, as well as the converse, how many pieces of pollen get lost en route to their destination?
- In order to model and simulate the pollen network certain simplifying assumptions were made as well as certain parameters defined. First, i and j are used to index pieces of pollen and x to index users. Each piece of pollen is assumed to be about the same size. Priority of pollen is determined by recency. Individual users all interact at the same rate, α, on average, with the pollen network of first nodes. This means that on average, the time between node interactions for each individual is 1/α time units.
- Individual PDA-node and individual PDA-hive interactions are modeled as exponentially distributed events, i.e., the time until the next interaction of an individual with a first node (iButton) in the network is distributed as D(t) = α exp(-αt). Note that this is a memory-less distribution: future events are independent of past events. However, a distribution with memory could also be considered (although computationally more difficult to complete); individual-node interactions will tend to cluster together in time with long pauses in between clusters. Alternatively, this behavior may emerge due to the topological nature of the pollen network as modeled by the Sij (see table below).
- The time, τij, individuals take to move between first nodes is assumed to depend only on the nodes, not on the individual. It is also assumed that this time is less than the
time 1/α between subsequent node interactions. τij acts as a delay; pieces of pollen arriving at a first node are always delayed by at least this amount with respect to the true state of the network. - Individual users all create new pieces of pollen at the same rate. For this embodiment, it is assumed that only individual users create pollen, not first nodes (nor the hive). It is also assumed that all first nodes have a finite caching memory and the hive memory is large enough to cache everything downloaded. A new version of a piece of pollen is treated simply as a new piece of pollen in this embodiment.
- Parameters are set forth in the table below.
n Number of first nodes z Number of carriers (users). Kcarrier Maximum number of pieces of pollen carried by each carrier (user). Knode Maximum number of pieces of pollen cached by each node. The hive has infinite capacity. α Average rate at which individual user decides to switch between first nodes in the pollen network. τ ij Time it takes for an individual to move between nodes. τ ij <1/α. May be a function of physical distance between the nodes. 1/γ i Time constant for expiration of pieces of pollen. γ i is the relaxation rate for node i. px Probability that an individual user will create a new piece of pollen at a node after having moved to that node. Average rate at which individuals create new pollen is then η = px α. Sij Strength of interconnectivity between node i and node j. As these weights correspond to probabilities of moving from one node to another, the sum of each column in the matrix is equal to 1. The weights may be a function of: physical distance and/or class of node. (Hive is treated as a special node.) Alternatively, can be modeled as a random matrix which columns sum to 1. Probability that user x moves from source i to source j. In the simplest case, -
- A spreading activation network consists of a set of nodes, tagged by their level of activity, with weighted links between them. These weights determine how much the activation of a given node directly affects the other nodes. The behavior of the network is controlled by a number of parameters that describe the topology of the network, the weight of the links between the nodes, the relaxation rate with which the activity of an isolated node decays to zero, and the amplification rate which controls the amount of activity that flows from a node to all of its neighbors per unit time.
- The following table describes the parameters in the activation network and how they map onto the parameters of the pollen network.
Activation net Description Pollen network model µ Gives the average number of links per node; specifies the topology. z/n = carriers/node S Matrix of the weights of links between nodes; diagonal elements are zero; Sij is the weight of the link from node i to node j. S α Amplification rate: relative amount of activity that flows from a node to all of its neighbors per unit time. α γ Relaxation rate: rate at which activity of isolated node decays to zero, ranges between 0 and 1. γ C Vector whose elements specify the external source per time step. This is the average number of pieces of pollen created per node per unit time. α p × z/n - Nodes in an activation network are initially (or continually) activated by external inputs. These nodes in turn cause others to become active with varying intensities, leading to complicated dynamics characterized by a spatio-temporal modulation of the total net activity. There are two general questions to be raised with respect to the behavior of the network. The first one concerns the rate at which equilibrium is reached and how this compares with the characteristic times with which inputs change at the sources. The second question deals with the extent to which the far regions of the net influence the parts under consideration. Huberman & Hogg (1987) show that there exist several operating regimes separated by sharp boundaries. These operating regimes can shed light on the expected behavior of the pollen network.
- The dynamics of the spreading activation net can be specified in discrete time steps. Let A (N) be a vector whose ith element is the activation of the ith node at time step N. Using the standard model of activation plus relaxation, the time evolution of a net with zero information delay (τ = 0) is given by
- Equation (1) completely determines the dynamics of the spreading activation net if the sources and initial conditions are specified. Huberman & Hogg consider the spread of activity through the net due a constant source applied to a single node. They find a transition when γ = α. For values of the activation larger than the decay, the net experiences explosive growth in activity. Conversely, when the decay per node always exceeds its activation, the activity settles down to a finite value.
-
- Furthermore, the number of nodes activated dies out with the distance from the source. Conversely, if the decay is smaller than the amplification, the total activation grows without bound and the fixed point is unstable. This result points towards choosing expiration delays longer than the typical time between node visits in the pollen network to enable remote nodes in the network to affect each other. However, we can then expect node memories to become saturated, the effect of which is not taken into account by the spreading activation model.
- When the system is unstable, the activity grows exponentially like exp(N/δ) where δ is given by δ=1/ln(1-γ+α). Recall that γ is between 0 and 1. This means that the activity grows most rapidly when the decay rate is small (i.e., long expiration delays) in comparison with the amplification rate. As the decay rate approaches the amplification rate from below (short expiration delays), the spread of activation becomes more and more sluggish.
- Huberman & Hogg also discuss the effect of topology on the dynamics of spreading activation networks. A typical network can be simply modeled as a random graph with the constraint that, µ, the average number of edges leaving a node is constant. The simplest case is the one in which the weights on all the links leaving a node are equal. This implies that Sij = 1/deg j whenever the nodes i and j are linked and where deg j is the number of links leaving node j. In this case the matrix S entering the dynamical equations is a random one whose off-diagonal elements are nonzero with probability µ/(n-1). Note that in this model any two nodes are equally likely to be connected, unlike in physical situations where the strength of the connection between two nodes is likely to decrease with distance between them and perhaps have a dependency on the similarity of the classes of the two nodes.
- When α>γ (the expiration time is greater than the average time it takes for activity to pass from one node to its neighbor), there is a phase transition about µ=1 where the topology of the network suddenly changes from small isolated clusters to a giant one containing very many nodes. For the pollen network, this implies that the network will be connected when the number of carriers, z, is greater than the number of nodes, n. (Recall that µ=z/n.) The existence of giant clusters allows the activation to reach arbitrarily remote regions of the network. The event horizon extends both in time and in space.
- The phase transition results are obtained in the limit of infinite size activation nets. The finite size of a real network smoothes out the transition. The larger the network, the more abrupt the transition about µ=1. Also, as the dynamics are very sluggish about α=γ, in a real system it may be hard to distinguish between continued activity growth and eventual reaching of the fixed point near this transition point.
- In the pollen network, to enable remote first nodes in the network to affect each other, expiration delays should be longer than the typical time an individual user takes between first node visits. The characteristic time constant of the pollen network is on the order of δ=1/ln(1-γ+α). This gives a basis for estimating how long it will take pieces of pollen to percolate to their destination. The longer the expiration delays with respect to the typical second node-first node transport time, the smaller the characteristic time constant. The minimum is δ=1/ln(2) in the limit of infinite expiration delays and quasi-continuous transport.
- The number of carriers (i.e., users), z, in the pollen network should be greater than the number of first nodes, n, (iButtons) to ensure that arbitrary regions of the pollen network remain topologically connected. However, the effective number of nodes in the network may be smaller than the physical number, if some nodes are much more frequently visited than others. In the same way, the effective number of users may be smaller than the official number.
- Spreading activation nets do not take into account the uniqueness of pieces of pollen. In an activation net it is possible to have positive feedback loops of increasing activation between two nodes. In the pollen network, this kind of behavior is checked as there will be at most one copy per first node of the same version of a piece of pollen. Also, as stated, we can expect first node and PDA memories to become saturated, the effect of which is not taken into account by the spreading activation model.
- An alternative model of the pollen network was evaluated. In this alternative model, each PDA (actually the user) chooses next first node to visit according to a uniform distribution over the first nodes. PDAs move from first node to first node in a time modeled by an exponential distribution. When a PDA arrives at a first node, beside the exchange of pollen grains between the PDA and the node, it (actually the user) might decide to create a pollen grain according to a Bernoulli distribution. The created pollen grain chooses a target first node according to a uniform distribution. In order to animate this first model of network, a methodology called rumor spreading in the epidemiology literature controls the exchange of pollen between PDA and first node.
- Rumor spreading is based on the following scenario. PDA and first node, when in contact, transmit to each other any pollen the other doesn't know yet. Once a first node or a PDA has transmitted a pollen grain k times, it stops spreading it. The analogy with epidemiology is that when a node or PDA is unaware of a pollen, it maps to a susceptible individual. When it knows about a pollen grain and spreads it, it is infective. While when it stops spreading it, it is removed. Actually this methodology is one of the numerous existing variants, known as rumor spreading with feedback and counter, which we use in a different context than in the epidemiology literature, as first nodes never spread rumor to first nodes, neither do PDA to PDA. This asymmetry unfortunately prevented us from directly reusing known mathematical results from the literature.
- Additional differences exist as well: first, because we assign an expiration time to pollens grains, they might expire while their host is still in infective mode; second, because neither the PDAs nor the first nodes can hold an infinite number of pollen grains, because of the limitation of their cache size. We have preliminary simulation results, which tend to show acceptable delivery time and redundancy. Surprisingly, the delivery time distribution obtained experimentally appears to be a normal distribution while in epidemiology exponential distributions appear.
Claims (7)
- A decentralized network system, comprising:a plurality of normally unconnected nodes including a plurality of fixed nodes (12) and a plurality of mobile nodes (20);wherein each fixed node (12) includes a memory for storing messages and a communications port for transmitting and receiving messages and wherein each fixed node is associated with a device or location (10);wherein each mobile node (20) includes a memory for storing messages, a processor for exchanging messages with fixed nodes (12) in accordance with a predetermined relationship comprising rules for creating, storing and handling messages, and a communications port for transmitting and receiving messages, wherein the processor is responsive to a user input to generate a message;wherein the message is transmitted node (12, 20) by node (12, 20) across the network from a source node to a destination node which is not connected to the source node, through a sequence of message exchanges between nodes resulting from movement of mobile nodes and interactions of mobile nodes with fixed nodes;wherein the message is transmitted from a first fixed node to a second fixed node by movement of a mobile node from said first fixed node to said second fixed node;wherein the message comprises content; and characterised in that:the message comprises information representing the message's transmission status selected from the group of new, in transit, delivered and expired, each fixed node and/or each mobile node further comprises a message state machine for modifying the transmission status of the messages, and each message further comprises a unique identifier, pertaining to a destination node and/or an expiration time.
- A system according to claim 1, wherein each device (10) is selected from the group of printer, facsimile, telephone, PicTel and book.
- A system according to claim 1 or 2, wherein each location (10) is selected from the group of office, meeting room, reception area, library and building.
- A system according to any preceding claim, wherein each fixed node further comprises a processor for exchanging messages with mobile nodes in accordance with a predetermined relationship comprising rules for storing, retaining and discarding messages based on the device or location associated with the fixed node.
- A system according to any preceding claim, further comprising a third node (50) having a memory for storing messages, a processor for exchanging messages with mobile nodes in accordance with a predetermined relationship comprising rules for storing, retaining and discarding messages and a communications port for transmitting and receiving messages with the mobile nodes, wherein the processor, upon communicating with a mobile node, updates the transmission status and/or the TTL field of any messages stored in the mobile node's memory.
- A system according to claim 5, wherein the third node processor processes information pertaining to exchanges between pairs of fixed nodes and mobile nodes to obtain information to traffic patterns among the mobile nodes.
- A method for managing exchanges of messages in the decentralized network system according to any one of the preceding claims
comprising transmitting a message node by node across the network through a sequence of message exchanges between nodes resulting from movement of mobile nodes and interactions of mobile nodes with fixed nodes;
wherein exchange of messages between a fixed node (12) and a mobile node (20) is in accordance with each node's predetermined relationship, the predetermined relationship comprising rules for creating, storing and handling messages;
wherein the message is transmitted from a first fixed node (12) to a second fixed node (12) by movement of a mobile node (20) from said first fixed node to said second fixed node (12);
wherein the message comprises content; and characterised in that:the message comprises information representing the message's transmission status selected from the group of new, in transit, delivered and expired, each fixed node and/or each mobile node further comprises a message state machine for modifying the transmission status of the messages, and each message further comprises a unique identifier, pertaining to a destination node and/or an expiration time.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/404,175 US6671737B1 (en) | 1999-09-24 | 1999-09-24 | Decentralized network system |
US404175 | 2003-04-01 |
Publications (3)
Publication Number | Publication Date |
---|---|
EP1087567A2 EP1087567A2 (en) | 2001-03-28 |
EP1087567A3 EP1087567A3 (en) | 2004-10-27 |
EP1087567B1 true EP1087567B1 (en) | 2017-08-02 |
Family
ID=23598484
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP00307396.2A Expired - Lifetime EP1087567B1 (en) | 1999-09-24 | 2000-08-29 | Decentralized network system |
Country Status (2)
Country | Link |
---|---|
US (1) | US6671737B1 (en) |
EP (1) | EP1087567B1 (en) |
Families Citing this family (59)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040230668A1 (en) * | 1998-08-06 | 2004-11-18 | Jason Carnahan | Modular presentation device for use with PDA's and Smartphones |
US7734852B1 (en) | 1998-08-06 | 2010-06-08 | Ahern Frank W | Modular computer system |
US20050021870A1 (en) * | 1998-08-06 | 2005-01-27 | Jason Carnahan | Modular presentation device with network connection for use with PDA's and Smartphones |
US8756342B1 (en) * | 2000-02-07 | 2014-06-17 | Parallel Networks, Llc | Method and apparatus for content synchronization |
US8396950B1 (en) * | 2000-03-02 | 2013-03-12 | Rockstar Consortium Us Lp | Method and apparatus for the fast detection of connectivity loss between devices in a network |
US6594719B1 (en) | 2000-04-19 | 2003-07-15 | Mobility Electronics Inc. | Extended cardbus/pc card controller with split-bridge ™technology |
US6947976B1 (en) * | 2000-07-31 | 2005-09-20 | Vindigo, Inc. | System and method for providing location-based and time-based information to a user of a handheld device |
JP2002049478A (en) * | 2000-08-01 | 2002-02-15 | Canon Inc | Data output system, method for controlling output, portable information terminal, information processor, information storage device, and storage medium |
JP4273669B2 (en) * | 2001-02-28 | 2009-06-03 | 沖電気工業株式会社 | Node information management system and node |
EP1456820A2 (en) * | 2001-12-17 | 2004-09-15 | Legic Identsystems AG | Method for initialising an application in terminals |
JP2003271526A (en) * | 2002-01-08 | 2003-09-26 | Nec Corp | Personal digital assistant |
US20040098458A1 (en) * | 2002-09-16 | 2004-05-20 | Husain Syed Mohammad Amir | Distributed computing infrastructure including multiple collaborative sessions |
US7370212B2 (en) | 2003-02-25 | 2008-05-06 | Microsoft Corporation | Issuing a publisher use license off-line in a digital rights management (DRM) system |
WO2005032042A1 (en) * | 2003-09-24 | 2005-04-07 | Infoexpress, Inc. | Systems and methods of controlling network access |
FR2860624B1 (en) * | 2003-10-06 | 2006-01-06 | Valeo Securite Habitacle | CURRENT CIRCULATION BADGE ACROSS THE BODY PROTECTS SHORT CIRCUITS |
US7873731B1 (en) * | 2004-04-08 | 2011-01-18 | Cisco Technology, Inc. | Use of per-flow monotonically decreasing TTLs to prevent IDS circumvention |
US7222149B2 (en) * | 2004-09-17 | 2007-05-22 | Microsoft Corporation | Ordering decision nodes in distributed decision making |
US20060069771A1 (en) * | 2004-09-29 | 2006-03-30 | International Business Machines Corporation | Method, system and program product for decentralized monitoring of server states within a cell of nodes |
US8347078B2 (en) | 2004-10-18 | 2013-01-01 | Microsoft Corporation | Device certificate individualization |
US8336085B2 (en) | 2004-11-15 | 2012-12-18 | Microsoft Corporation | Tuning product policy using observed evidence of customer behavior |
US8605596B2 (en) | 2004-12-20 | 2013-12-10 | Matsushita Electrical Industrial Co., Ltd. | Medium access for de-centralized wireless network |
US9910341B2 (en) | 2005-01-31 | 2018-03-06 | The Invention Science Fund I, Llc | Shared image device designation |
US7752561B2 (en) * | 2005-03-15 | 2010-07-06 | Microsoft Corporation | Method and system for creating temporary visual indicia |
US8438645B2 (en) * | 2005-04-27 | 2013-05-07 | Microsoft Corporation | Secure clock with grace periods |
US8725646B2 (en) | 2005-04-15 | 2014-05-13 | Microsoft Corporation | Output protection levels |
US9436804B2 (en) | 2005-04-22 | 2016-09-06 | Microsoft Technology Licensing, Llc | Establishing a unique session key using a hardware functionality scan |
US9363481B2 (en) | 2005-04-22 | 2016-06-07 | Microsoft Technology Licensing, Llc | Protected media pipeline |
US10003762B2 (en) | 2005-04-26 | 2018-06-19 | Invention Science Fund I, Llc | Shared image devices |
US9942511B2 (en) | 2005-10-31 | 2018-04-10 | Invention Science Fund I, Llc | Preservation/degradation of video/audio aspects of a data stream |
US20070222865A1 (en) | 2006-03-15 | 2007-09-27 | Searete Llc, A Limited Liability Corporation Of The State Of Delaware | Enhanced video/still image correlation |
US20090144391A1 (en) * | 2007-11-30 | 2009-06-04 | Searete Llc, A Limited Liability Corporation Of The State Of Delaware | Audio sharing |
US20060265758A1 (en) | 2005-05-20 | 2006-11-23 | Microsoft Corporation | Extensible media rights |
US8150416B2 (en) | 2005-08-08 | 2012-04-03 | Jambo Networks, Inc. | System and method for providing communication services to mobile device users incorporating proximity determination |
US20070033653A1 (en) * | 2005-08-08 | 2007-02-08 | Klein Edward E | System and method for managing sensitive information |
US7590733B2 (en) * | 2005-09-14 | 2009-09-15 | Infoexpress, Inc. | Dynamic address assignment for access control on DHCP networks |
US7512677B2 (en) * | 2005-10-20 | 2009-03-31 | Uplogix, Inc. | Non-centralized network device management using console communications system and method |
JP4158803B2 (en) * | 2005-12-13 | 2008-10-01 | 沖電気工業株式会社 | Data transfer network and operation method of data transfer network |
US20070192858A1 (en) * | 2006-02-16 | 2007-08-16 | Infoexpress, Inc. | Peer based network access control |
US20070192500A1 (en) * | 2006-02-16 | 2007-08-16 | Infoexpress, Inc. | Network access control including dynamic policy enforcement point |
WO2007110865A1 (en) * | 2006-03-27 | 2007-10-04 | Rayv Inc. | Realtime media distribution in a p2p network |
ATE551816T1 (en) * | 2006-09-28 | 2012-04-15 | Rayv Inc | SYSTEM AND METHOD FOR PEER-TO-PEER MEDIA STREAMING |
WO2009002546A1 (en) * | 2007-06-26 | 2008-12-31 | Leader Technologies Incorporated | System and method for providing value added functions to a telephone communication |
US8457034B2 (en) * | 2008-06-17 | 2013-06-04 | Raytheon Company | Airborne communication network |
US8856119B2 (en) * | 2009-02-27 | 2014-10-07 | International Business Machines Corporation | Holistic disambiguation for entity name spotting |
US20110055899A1 (en) * | 2009-08-28 | 2011-03-03 | Uplogix, Inc. | Secure remote management of network devices with local processing and secure shell for remote distribution of information |
US20110055367A1 (en) * | 2009-08-28 | 2011-03-03 | Dollar James E | Serial port forwarding over secure shell for secure remote management of networked devices |
US9704153B2 (en) | 2013-01-14 | 2017-07-11 | Conduent Business Services, Llc | System and method for enabling transactions on an associated network |
US9262921B2 (en) | 2013-05-21 | 2016-02-16 | Xerox Corporation | Route computation for navigation system using data exchanged with ticket vending machines |
WO2016069496A1 (en) | 2014-10-26 | 2016-05-06 | Galileo Group, Inc. | Swarm approach to consolidating and enhancing smartphone target imagery by virtually linking smartphone camera collectors across space and time using machine-to-machine networks |
CN106331037B (en) * | 2015-06-30 | 2023-09-19 | 邻元科技（北京）有限公司 | Computing node for distributed computing network |
US10732588B2 (en) * | 2015-06-30 | 2020-08-04 | Lynkros Technology (Beijing) Co., Ltd. | Decentralized computing network system and computing processing node used for the same |
US10460530B2 (en) | 2016-01-19 | 2019-10-29 | Conduent Business Services, Llc | Localization of transaction of tags |
US10740699B2 (en) | 2016-07-20 | 2020-08-11 | Conduent Business Services, Llc | System and method for specializing transactions according to the service provider |
US10893182B2 (en) | 2017-01-10 | 2021-01-12 | Galileo Group, Inc. | Systems and methods for spectral imaging with compensation functions |
US10554909B2 (en) | 2017-01-10 | 2020-02-04 | Galileo Group, Inc. | Systems and methods for spectral imaging with a transmitter using a plurality of light sources |
US9900055B1 (en) | 2017-02-01 | 2018-02-20 | Conduent Business Services, Llc | Magnetic presence detection of a smartphone |
US9936466B1 (en) | 2017-02-17 | 2018-04-03 | Conduent Business Services, Llc | Bluetooth low energy collision management |
US10652236B2 (en) | 2017-03-17 | 2020-05-12 | Conduent Business Services, Llc | Electronic crowd-based authentication |
US10855578B1 (en) | 2019-06-25 | 2020-12-01 | Palo Alto Research Center Incorporated | Anonymous communications network utilizing bridging connections between broadcast domains |
Family Cites Families (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5225826A (en) * | 1989-09-05 | 1993-07-06 | Motorola, Inc. | Variable status receiver |
US5555346A (en) * | 1991-10-04 | 1996-09-10 | Beyond Corporated | Event-driven rule-based messaging system |
DE69332431T2 (en) * | 1992-09-08 | 2003-06-18 | Sun Microsystems Inc | Method and device for maintaining connection possibilities of nodes in a wireless local area network |
US5555376A (en) * | 1993-12-03 | 1996-09-10 | Xerox Corporation | Method for granting a user request having locational and contextual attributes consistent with user policies for devices having locational attributes consistent with the user request |
US5717955A (en) * | 1993-12-03 | 1998-02-10 | Xerox Corporation | System for changing device from specialized interface that enables control of subsystem to general interface that performs general purpose computing functions unrelated to the subsystem |
US5835061A (en) * | 1995-06-06 | 1998-11-10 | Wayport, Inc. | Method and apparatus for geographic-based communications service |
US6167428A (en) * | 1996-11-29 | 2000-12-26 | Ellis; Frampton E. | Personal computer microprocessor firewalls for internet distributed processing |
US6137864A (en) * | 1997-07-25 | 2000-10-24 | Lucent Technologies Inc. | Specifiable delete times for voice messaging |
US6356192B1 (en) * | 1998-10-23 | 2002-03-12 | Royal Thoughts L.L.C. | Bi-directional wireless detection system |
-
1999
- 1999-09-24 US US09/404,175 patent/US6671737B1/en not_active Expired - Lifetime
-
2000
- 2000-08-29 EP EP00307396.2A patent/EP1087567B1/en not_active Expired - Lifetime
Non-Patent Citations (1)
Title |
---|
DUBE R ET AL: "SIGNAL STABILITY-BASED ADAPTIVE ROUTING (SSA) FOR AD HOC MOBILE NETWORKS", IEEE PERSONAL COMMUNICATIONS, IEEE COMMUNICATIONS SOCIETY, US, vol. 4, no. 1, 1 February 1997 (1997-02-01), pages 36 - 45, XP000679252, ISSN: 1070-9916, DOI: 10.1109/98.575990 * |
Also Published As
Publication number | Publication date |
---|---|
EP1087567A2 (en) | 2001-03-28 |
US6671737B1 (en) | 2003-12-30 |
EP1087567A3 (en) | 2004-10-27 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP1087567B1 (en) | Decentralized network system | |
Small et al. | Resource and performance tradeoffs in delay-tolerant wireless networks | |
US5970122A (en) | Two-way wireless messaging system having user agent | |
CN1578320B (en) | Network load balancing with main machine status information | |
JP3578385B2 (en) | Computer and replica identity maintaining method | |
Musolesi et al. | Emma: Epidemic messaging middleware for ad hoc networks | |
Bamis et al. | A mobility aware protocol synthesis for efficient routing in ad hoc mobile networks | |
CN100499455C (en) | Data communication method | |
CN1217514C (en) | Online aggregation in unified messaging | |
US8095495B2 (en) | Exchange of syncronization data and metadata | |
JP3756349B2 (en) | Database management apparatus and recording medium on which program is recorded | |
Anagnostopoulos et al. | Information dissemination between mobile nodes for collaborative context awareness | |
US7551570B2 (en) | System and method for data handling a network environment | |
Verma et al. | Routing protocols in opportunistic networks | |
Musolesi et al. | Writing on the clean slate: Implementing a socially-aware protocol in Haggle | |
Verma et al. | Context-based routing protocols for oppnets | |
WO2022096137A1 (en) | Methods, system, and devices for managing consistency between replicas | |
Guinea et al. | Coordination of distributed systems through self-organizing group topologies | |
JP3842549B2 (en) | Information collection system, information collection method, and storage medium | |
JP3826735B2 (en) | Service providing method by distributed system and equipment constituting distributed system | |
Hui et al. | Identifying social communities in complex communications for network efficiency | |
JP6857151B2 (en) | Communication methods, communication systems, communication devices and computer programs | |
Raval et al. | A Review of Opportunistic Routing Protocols on Various Parameters | |
Tekouabou et al. | Efficient forwarding strategy in HDRP protocol based Internet of Things | |
Hara et al. | Efficient Top-k Query Processing in Mobile Ad Hoc Networks. |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AT BE CH CY DE DK ES FI FR GB GR IE IT LI LU MC NL PT SE |
|
AX | Request for extension of the european patent |
Free format text: AL;LT;LV;MK;RO;SI |
|
PUAL | Search report despatched |
Free format text: ORIGINAL CODE: 0009013 |
|
AK | Designated contracting states |
Kind code of ref document: A3Designated state(s): AT BE CH CY DE DK ES FI FR GB GR IE IT LI LU MC NL PT SE |
|
AX | Request for extension of the european patent |
Extension state: AL LT LV MK RO SI |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: 7H 04L 12/24 AIpc: 7H 04L 12/56 B |
|
17P | Request for examination filed |
Effective date: 20050427 |
|
AKX | Designation fees paid |
Designated state(s): DE FR GB |
|
17Q | First examination report despatched |
Effective date: 20060721 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE INC. |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04W 8/24 20090101ALI20170119BHEPIpc: H04L 12/24 20060101AFI20170119BHEPIpc: H04W 88/04 20090101ALI20170119BHEPIpc: H04W 28/14 20090101ALI20170119BHEPIpc: H04W 4/12 20090101ALI20170119BHEP |
|
INTG | Intention to grant announced |
Effective date: 20170215 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): DE FR GB |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R081Ref document number: 60049678Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: XEROX CORP., ROCHESTER, N.Y., US |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 18 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 60049678Country of ref document: DE |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20170817Year of fee payment: 18Ref country code: GBPayment date: 20170829Year of fee payment: 18Ref country code: FRPayment date: 20170822Year of fee payment: 18 |
|
RAP2 | Party data changed (patent owner data changed or rights of a patent transferred) |
Owner name: GOOGLE LLC |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 60049678Country of ref document: DERepresentative=s name: WUESTHOFF & WUESTHOFF, PATENTANWAELTE PARTG MB, DERef country code: DERef legal event code: R081Ref document number: 60049678Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 60049678Country of ref document: DE |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20180503 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R119Ref document number: 60049678Country of ref document: DE |
|
GBPC | Gb: european patent ceased through non-payment of renewal fee |
Effective date: 20180829 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20190301 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180831 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GBFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180829 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230506 |
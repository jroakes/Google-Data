US9037456B2 - Method and apparatus for audio coding and decoding - Google Patents
Method and apparatus for audio coding and decoding Download PDFInfo
- Publication number
- US9037456B2 US9037456B2 US13/190,517 US201113190517A US9037456B2 US 9037456 B2 US9037456 B2 US 9037456B2 US 201113190517 A US201113190517 A US 201113190517A US 9037456 B2 US9037456 B2 US 9037456B2
- Authority
- US
- United States
- Prior art keywords
- filter
- decoder
- speech
- encoder
- state
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/04—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using predictive techniques
- G10L19/16—Vocoder architecture
- G10L19/18—Vocoders using multiple modes
- G10L19/20—Vocoders using multiple modes using sound class specific coding, hybrid encoders or object based coding
Definitions
- the present disclosure relates generally to speech and audio coding and decoding and, more particularly, to an encoder and decoder for processing an audio signal including generic audio and speech frames.
- LPC Linear Predictive Coding
- CELP Code Excited Linear Prediction
- an audio signal processor capable of processing different signal types is sometimes referred to as a hybrid core codec.
- the hybrid codec may be variable rate, i.e., it may code different types of frames at different bit rates.
- the generic audio frames which are coded using the transform domain are coded at higher bit rates and the speech-like frames are coded at lower bit rates.
- transitioning between the processing of generic audio frames and speech frames using speech and generic audio mode, respectively, is known to produce discontinuities.
- Transition from a CELP domain frame to a Transform domain frame has been shown to produce discontinuity in the form of an audio gap.
- the transition from transform domain to CELP domain results in audible discontinuities which have an adverse effect on the audio quality.
- the main reason for the discontinuity is the improper initialization of the various states of the CELP codec.
- FIG. 1 illustrates a hybrid coder configured to code an input stream of frames some of which are speech like frames and others of which are less speech-like frames including non-speech frames.
- FIG. 2 is a block diagram of a speech decoder configured to decode an input stream of frames some of which are speech like frames and others of which are less speech-like frames including non-speech frames.
- FIG. 3 is a block diagram of an encoder and a state generator.
- FIG. 4 is a block diagram of a decoder and a state generator.
- FIG. 5 is a more-detailed block diagram of a state generator.
- FIG. 6 is a more-detailed block diagram of a speech encoder.
- FIG. 7 is a more-detailed block diagram of a speech decoder.
- FIG. 8 is a block diagram of a speech encoder in accordance with an alternate embodiment.
- FIG. 9 is a block diagram of a state generator in accordance with an alternate embodiment of the present invention.
- FIG. 10 is a block diagram of a speech encoder in accordance with a further embodiment of the present invention.
- FIG. 11 is a flow chart showing operation of the encoder of FIG. 1 .
- FIG. 12 is a flow chart showing operation of the decoder of FIG. 2 .
- references to specific implementation embodiments such as “circuitry” may equally be accomplished via either on general purpose computing apparatus (e.g., CPU) or specialized processing apparatus (e.g., DSP) executing software instructions stored in non-transitory computer-readable memory.
- general purpose computing apparatus e.g., CPU
- specialized processing apparatus e.g., DSP
- DSP digital signal processor
- an encoder and decoder for processing an audio signal including generic audio and speech frames are provided herein.
- two encoders are utilized by the speech coder, and two decoders are utilized by the speech decoder.
- the two encoders and decoders are utilized to process speech and non-speech (generic audio) respectively.
- speech and non-speech generator audio
- parameters that are needed by the speech decoder for decoding frame of speech are generated by processing the preceding generic audio (non-speech) frame for the necessary parameters. Because necessary parameters are obtained by the speech coder/decoder, the discontinuities associated with prior-art techniques are reduced when transitioning between generic audio frames and speech frames.
- FIG. 1 illustrates a hybrid coder 100 configured to code an input stream of frames some of which are speech like frames and others of which are less speech-like frames including non-speech frames.
- the circuitry of FIG. 1 may be incorporated into any electronic device performing encoding and decoding of audio. Such devices include, but are not limited to cellular telephones, music players, home telephones, . . . , etc.
- the less speech-like frames are referred to herein as generic audio frames.
- the hybrid core codec 100 comprises a mode selector 110 that processes frames of an input audio signal s(n), where n is the sample index.
- the mode selector may also get input from a rate determiner which determines the rate for the current frame. The rate may then control the type of encoding method used.
- the frame lengths may comprise 320 samples of audio when the sampling rate is 16 kHz samples per second, which corresponds to a frame time interval of 20 milliseconds, although many other variations are possible.
- first coder 130 suitable for coding speech frames is provided and a second coder 140 suitable for coding generic audio frames is provided.
- coder 130 is based on a source-filter model suitable for processing speech signals and the generic audio coder 140 is a linear orthogonal lapped transform based on time domain aliasing cancellation (TDAC).
- TDAC time domain aliasing cancellation
- speech coder 130 may utilize Linear Predictive Coding (LPC) typical of a Code Excited Linear Predictive (CELP) coder, among other coders suitable for processing speech signals.
- LPC Linear Predictive Coding
- CELP Code Excited Linear Predictive
- the generic audio coder may be implemented as Modified Discrete Cosine Transform (MDCT) coder or a Modified Discrete Sine Transform (MSCT) or forms of the MDCT based on different types of Discrete Cosine Transform (DCT) or DCT/Discrete Sine Transform (DST) combinations. Many other possibilities exist for generic audio coder 140 .
- MDCT Modified Discrete Cosine Transform
- MSCT Modified Discrete Sine Transform
- DCT Discrete Cosine Transform
- DST DCT/Discrete Sine Transform
- first and second coders 130 and 140 have inputs coupled to the input audio signal by a selection switch 150 that is controlled based on the mode selected or determined by the mode selector 110 .
- switch 150 may be controlled by a processor based on the codeword output of the mode selector.
- the switch 150 selects the speech coder 130 for processing speech frames and the switch selects the generic audio coder for processing generic audio frames.
- Each frame may be processed by only one coder, e.g., either the speech coder or the generic audio coder, by virtue of the selection switch 150 . While only two coders are illustrated in FIG. 1 , the frames may be coded by one of several different coders. For example, one of three or more coders may be selected to process a particular frame of the input audio signal. In other embodiments, however, each frame may be coded by all coders as discussed further below.
- each codec produces an encoded bit stream and a corresponding processed frame based on the corresponding input audio frame processed by the coder.
- the encoded bit stream can then be stored or transmitted to an appropriate decoder 200 such as that shown in FIG. 2 .
- the processed output frame produced by the speech decoder is indicated by ⁇ s (n), while the processed frame produced by the generic audio coder is indicated by ⁇ a (n).
- speech decoder 200 comprises a de-multiplexer 210 which receives the encoded bit stream and passes the bit stream to an appropriate decoder 230 or 221 .
- decoder 200 comprises a first decoder 230 for decoding speech and a second decoder 221 for decoding generic audio.
- parameter/state generator 160 and 260 are provided in both encoder 100 and decoder 200 .
- parameters and/or states (sometimes referred to as filter parameters) that are needed by speech encoder 130 and decoder 230 for encoding and decoding a frame of speech, respectively, are generated by generators 160 and 260 by processing the preceding generic audio (non-speech) frame output/decoded audio.
- FIG. 3 shows a block diagram of circuitry 160 and encoder 130 .
- the reconstructed audio from the previously coded generic audio frame m enters state generator 160 .
- the purpose of state generator 160 is to estimate one or more state memories (filter parameters) of speech encoder 130 for frame m+1 such that the system behaves as if frame m had been processed by speech encoder 130 , when in fact frame m had been processed by a second encoder, such as the generic audio coder 140 .
- the filter implementations associated with the state memory update, filters 340 and 370 are complementary to (i.e., the inverse of) one another. This is due to nature of the state update process in the present invention.
- the reconstructed audio of the previous frame m is “back-propagated” through the one or more inverse filters and/or other processes that are given in the speech encoder 130 .
- the states of the inverse filter(s) are then transferred to the corresponding forward filter(s) in the encoder. This will result in a smooth transition from frame m to frame m+1 in the respective audio processing, and will be discussed in more detail later.
- the subsequent decoded audio for frame m+1 may in this manner behave as it would if the previous frame m had been decoded by decoder 230 .
- the decoded frame is then sent to state generator 160 where the parameters used by speech coder 130 are determined. This is accomplished, in part, by state generator 160 determining values for one or more of the following, through the use of the respective filter inverse function:
- Values for at least one of the above parameters are passed to speech encoder 130 where they are used as initialization states for encoding a subsequent speech frame.
- FIG. 4 shows a corresponding decoder block diagram of state generator 260 and decoder 230 .
- reconstructed audio from frame m enters state generators 260 where the state memory for filters used by speech decoder 230 , are determined.
- This method is similar to the method of FIG. 3 in that the reconstructed audio of the previous frame m is “back-propagated” through the one or more filters and/or other processes that are given in the speech decoder 230 for processing frame m+1.
- the end result is to create a state within the filter(s) of decoder as if the reconstructed audio of the previous frame m were generated by the speech decoder 230 , when in fact the reconstructed audio from the previous frame was generated from a second decoder, such as a generic audio decoder 230 .
- state generators 160 , 260 may include determining filter memory states for one or more of the following:
- Values for at least one of the above parameters are passed from state generators 160 , 260 to the speech encoder 130 or speech decoder 230 , where they are used as initialization states for encoding or decoding a respective subsequent speech frame.
- FIG. 5 is a block diagram of state generator 160 , 260 , with elements 501 , 502 , and 505 acting as different embodiments of inverse filter 370 .
- reconstructed audio for a frame e.g., frame m
- the down sampled signal exits filter 501 and enters up-sampling filter state generation circuitry 507 where state of the respective up-sampling filter 711 of the decoder is determined and output.
- the down sampled signal enters pre-emphasis filter 502 where pre-emphasis takes place.
- the resulting signal is passed to de-emphasis filter state generation circuitry 509 where the state of the de-emphasis filter 709 is determined and output.
- LPC analysis takes place via circuitry 503 and the LPC filter A q (z) is output to the LPC synthesis filter 707 as well as to the analysis filter 505 where the LPC residual is generated and output to synthesis filter state generation circuitry 511 where the state of the LPC synthesis filter 707 is determined and output.
- the state of the LPC synthesis filter can be determined directly from the output of the pre-emphasis filter 502 .
- the output of LPC analysis filter is input to adaptive codebook state generation circuitry 513 where an appropriate codebook is determined and output.
- FIG. 6 is a block diagram of speech encoder 130 .
- Encoder 130 is preferably a CELP encoder 130 .
- an input signal s(n) may be first re-sampled and/or pre-emphasized before being applied to a Linear Predictive Coding (LPC) analysis block 601 , where linear predictive coding is used to estimate a short-term spectral envelope.
- LPC Linear Predictive Coding
- the resulting spectral parameters (or LP parameters) are denoted by the transfer function A(z).
- the spectral parameters are applied to an LPC Quantization block 602 that quantizes the spectral parameters to produce quantized spectral parameters A q that are coded for use in a multiplexer 608 .
- the quantized spectral parameters A q are then conveyed to multiplexer 608 , and the multiplexer produces a coded bitstream based on the quantized spectral parameters and a set of codebook-related parameters ⁇ , ⁇ , k, and ⁇ , that are determined by a squared error minimization/parameter quantization block 607 .
- the quantized spectral, or LP, parameters are also conveyed locally to an LPC synthesis filter 605 that has a corresponding transfer function 1/A q (z).
- LPC synthesis filter 605 also receives a combined excitation signal u(n) from a first combiner 610 and produces an estimate of the input signal ⁇ p (n) based on the quantized spectral parameters A q and the combined excitation signal u(n).
- Combined excitation signal u(n) is produced as follows.
- An adaptive codebook code-vector c ⁇ is selected from an adaptive codebook (ACB) 603 based on an index parameter ⁇ .
- the adaptive codebook code-vector c ⁇ is then weighted based on a gain parameter ⁇ and the weighted adaptive codebook code-vector is conveyed to first combiner 610 .
- a fixed codebook code-vector c k is selected from a fixed codebook (FCB) 604 based on an index parameter k.
- the fixed codebook code-vector c k is then weighted based on a gain parameter ⁇ and is also conveyed to first combiner 610 .
- First combiner 610 then produces combined excitation signal u(n) by combining the weighted version of adaptive codebook code-vector c ⁇ with the weighted version of fixed codebook code-vector c k .
- LPC synthesis filter 605 conveys the input signal estimate ⁇ p (n) to a second combiner 612 .
- Second combiner 612 also receives input signal s p (n) and subtracts the estimate of the input signal ⁇ p (n) from the input signal s(n).
- the difference between input signal s p (n) and input signal estimate ⁇ p (n) is applied to a perceptual error weighting filter 606 , which filter produces a perceptually weighted error signal e(n) based on the difference between ⁇ p (n) and s p (n) and a weighting function W(z).
- Perceptually weighted error signal e(n) is then conveyed to squared error minimization/parameter quantization block 607 .
- Squared error minimization/parameter quantization block 607 uses the error signal e(n) to determine an optimal set of codebook-related parameters ⁇ , ⁇ , k, and ⁇ that produce the best estimate ⁇ p (n) of the input signal s p (n).
- adaptive codebook 603 As shown, adaptive codebook 603 , synthesis filter 605 , and perceptual error weighting filter 606 , all have inputs from state generator 160 . As discussed above, these elements 603 , 605 , and 606 will obtain original parameters (initial states) for a first frame of speech from state generator 160 , based on a prior non-speech audio frame.
- FIG. 7 is a block diagram of a decoder 230 .
- decoder 230 comprises demultiplexer 701 , adaptive codebook 703 , fixed codebook 705 , LPC synthesis filter 707 , de-emphasis filter 709 , and upsampling filter 711 .
- the coded bitstream produced by encoder 130 is used by demultiplexer 701 in decoder 230 to decode the optimal set of codebook-related parameters, that is, A q , ⁇ , ⁇ , k, and ⁇ , in a process that is identical to the synthesis process performed by encoder 130 .
- the output of the synthesis filter 707 which may be referred as the output of the CELP decoder, is de-emphasized by filter 709 and then the de-emphasized signal is passed through a 12.8 kHz to 16 kHz up sampling filter (5/4 up sampling filter 711 ).
- the bandwidth of the synthesized output thus generated is limited to 6.4 kHz.
- To generate an 8 kHz bandwidth output the signal from 6.4 kHz to 8 kHz is generated using a 0 bit bandwidth extension.
- the AMRWB type codec is mainly designed for wideband input (8 kHz bandwidth, 16 kHz sampling rate), however, the basic structure of AMRWB shown in FIG.
- the down-sampling filter at the encoder will down sample from 32 kHz and 48 kHz sampling to 12.8 kHz, respectively.
- the zero bit bandwidth extension may also be replaced by a more elaborate bandwidth extension method.
- the generic audio mode of the preferred embodiment uses a transform domain/frequency domain codec.
- the MDCT is used as a preferred transform.
- the structure of the generic audio mode may be like the transform domain layer of ITU-T Recommendation G.718 or G.718 super-wideband extensions. Unlike G.718, where in the input to the transform domain is the error signal from the lower layer, the input to the transform domain is the input audio signal. Furthermore, the transform domain part directly codes the MDCT of the input signal instead of coding the MDCT of the LPC residual of the input speech signal.
- the speech codec is derived from an AMR-WB type codec wherein the down-sampling of the input speech to 12.8 kHz is performed.
- the generic audio mode codec may not have any down sampling, pre-emphasis, and LPC analysis, so for encoding the frame following the audio frame, the encoder of the AMR-WB type codec may require initialization of the following parameters and state memories:
- the state of the down sampling filter and pre-emphasis filter are needed by the encoder only and hence may be obtained by just continuing to process the audio input through these filters even in the generic audio mode.
- Generating the states which are needed only by the encoder 130 is simple as the speech part encoder modules which update these states can also be executed in the audio coder 140 . Since the complexity of the audio mode encoder 140 is typically lower than the complexity of the speech mode encoder 130 , the state processing in the encoder during the audio mode does to affect the worst case complexity.
- decoder 230 The following states are also needed by decoder 230 , and are provided by state generator 260 .
- the adaptive codebook state memory This is produced by circuitry 613 and output to adaptive codebook 703 .
- De-emphasis filter state memory This is produced by circuitry 609 and input into de-emphasis filter 709 .
- LPC synthesis filter state memory This is output by LPC analysis circuitry 603 and input into synthesis filter 707 .
- Up sampling filter state memory This is produced by circuitry 607 and input to up-sampling filter 711 .
- the audio output ⁇ a (n) is down-sampled by a 4/5 down sampling filter to produce a down sampled signal ⁇ a (n d ).
- the down-sampling filter may be an IIR filter or an FIR filter.
- a linear time FIR low pass filter is used as the down-sampling filter, as given by:
- the last L samples as ⁇ a (n d ) forms the state of the up sampling filter, where L is the length of the up-sampling filter.
- the state memory translation involves a simple copy of the down-sampling filter memory to the up-sampling filter.
- the up-sampling filter state is initialized for frame m+1 as if the output of the decoded frame m had originated from the coding method of frame m+1, when in fact a different coding method for coding frame m was used.
- ⁇ is a constant (typically 0.6 ⁇ 0.9)
- the pre-emphasis is performed at the encoder and the corresponding inverse (de-emphasis),
- D ⁇ ( z ) 1 1 - ⁇ ⁇ ⁇ z - 1 , is performed at the decoder.
- the down-sampled input to the pre-emphasis filter for the reconstructed audio from frame m is used to represent the previous outputs of the de-emphasis filter, and therefore, the last sample of ⁇ a (n d ) is used as the de-emphasis filter state memory.
- This is conceptually similar to the re-sampling filters in that the state of the de-emphasis filter for frame m+1 is initialized to a state as if the decoding of frame m had been processed using the same decoding method as frame m+1, when in fact they are different.
- the last p samples of ⁇ ap (n d ) are similarly used as the state of the LPC synthesis filter for the next speech mode frame, where p is the order of the LPC synthesis filter.
- the LPC analysis is performed on pre-emphasized output to generate “quantized” LPC of the previous frame,
- the synthesis/weighting filter coefficients of different subframes are generated by interpolation of the previous frame and the current frame LPC coefficients.
- the previous frame is an audio mode frame
- the LPC filter coefficients A q (z) obtained by performing LPC analysis of the ⁇ ap (n d ) are now used as the LP parameters of the previous frame. Again, this is similar to the previous state updates, wherein the output of frame m is “back-propagated” to produce the state memory for use by the speech decoder of frame m+1.
- the excitation for the audio frame can be obtained by a reverse processing.
- the reverse processing is the “reverse” of a typical processing in a speech decoder wherein the excitation is passed through a LPC inverse (i.e. synthesis) filter to generate an audio output.
- the audio output ⁇ ap (n d ) is passed through a LPC analysis filter A q (z) to generate a residue signal. This residue is used for the generation of the adaptive codebook state.
- FIG. 8 is a block diagram of an exemplary encoder 800 that utilizes an equivalent, and yet more practical, system to the encoding system illustrated by encoder 130 .
- Encoder 800 may be substituted for encoder 130 .
- the variables are given in terms of their z-transforms.
- E ⁇ ( z ) W ⁇ ( z ) ⁇ S ⁇ ( z ) - W ⁇ ( z ) A q ⁇ ( z ) ⁇ ( ⁇ ⁇ ⁇ C ⁇ ⁇ ( z ) + ⁇ ⁇ ⁇ C k ⁇ ( z ) ) . ( 2 )
- W(z)S(z) corresponds to a weighted version of the input signal.
- H is the L ⁇ L zero-state weighted synthesis convolution matrix formed from an impulse response of a weighted synthesis filter h(n), such as synthesis filters 803 and 804 , and corresponding to a transfer function H zs (z) or H(z), which matrix can be represented as:
- h zir is a L ⁇ 1 zero-input response of H(z) that is due to a state from a previous input
- s w is the L ⁇ 1 perceptually weighted input signal
- ⁇ is the scalar adaptive codebook (ACB) gain
- c ⁇ is the L ⁇ 1 ACB code-vector in response to index ⁇
- ⁇ is the scalar fixed codebook (FCB) gain
- c k is the L ⁇ 1 FCB code-vector in response to index k.
- Equation 6 represents the perceptually weighted error (or distortion) vector e(n) produced by a third combiner 807 of encoder 130 and coupled by combiner 807 to a squared error minimization/parameter block 808 .
- a formula can be derived for minimization of a weighted version of the perceptually weighted error, that is, ⁇ e ⁇ 2 , by squared error minimization/parameter block 808 .
- the ACB/FCB gains that is, codebook-related parameters ⁇ and ⁇ , may or may not be re-optimized, that is, quantized, given the sequentially selected ACB/FCB code-vectors c ⁇ and c k .
- Equation 8 x w T ⁇ Hc ⁇ c ⁇ T ⁇ H T ⁇ Hc ⁇ .
- Equation 11 arg ⁇ ⁇ min ⁇ ⁇ ⁇ x w T ⁇ x w - ( x w T ⁇ Hc ⁇ ) 2 c ⁇ T ⁇ H T ⁇ Hc ⁇ ⁇ , ( 11 )
- ⁇ * is a sequentially determined optimal ACB index parameter, that is, an ACB index parameter that minimizes the bracketed expression. Since x w is not dependent on ⁇ , Equation 11 can be rewritten as follows:
- Equation 13 arg ⁇ ⁇ max ⁇ ⁇ ⁇ ( x w T ⁇ Hc ⁇ ) 2 c ⁇ T ⁇ H T ⁇ Hc ⁇ ⁇ . ( 12 )
- Equation 10 can be simplified to:
- Equations 13 and 14 represent the two expressions necessary to determine the optimal ACB index ⁇ and ACB gain ⁇ in a sequential manner. These expressions can now be used to determine the optimal FCB index and gain expressions.
- the vector x w is produced by a first combiner 805 that subtracts a past excitation signal u(n ⁇ L), after filtering by a weighted synthesis filter 801 , from an output s w (n) of a perceptual error weighting filter 802 .
- ⁇ Hc ⁇ is a filtered and weighted version of ACB code-vector c ⁇ , that is, ACB code-vector c ⁇ filtered by weighted synthesis filter 803 and then weighted based on ACB gain parameter ⁇ .
- ⁇ Hc k is a filtered and weighted version of FCB code-vector c k , that is, FCB code-vector c k filtered by weighted synthesis filter 804 and then weighted based on FCB gain parameter ⁇ .
- Equation 16 arg ⁇ ⁇ max k ⁇ ⁇ ( x 2 T ⁇ Hc k ) 2 c k T ⁇ H T ⁇ Hc k ⁇ , ( 16 ) where k* is the optimal FCB index parameter, that is, an FCB index parameter that maximizes the bracketed expression.
- encoder 800 requires initialization states supplied from state generator 160 . This is illustrated in FIG. 9 . showing an alternate embodiment for state generator 160 . As shown in FIG. 9 the input to adaptive codebook 103 is obtained from block 911 in FIG. 9 ), and the weighted synthesis filter 801 utilizes the output of block 909 which in turn utilizes the output of block 905 .
- the ITU-T G.718 codec and can similarly be used as a speech mode codec in the hybrid codec.
- the G.718 codec classifies the speech frame into four modes:
- the Transition speech frame is a voiced frame following the voiced transition frame.
- the Transition frame minimizes its dependence on the previous frame excitation. This helps in recovering after a frame error when a voiced transition frame is lost.
- the transform domain frame output is analyzed in such a way to obtain the excitation and/or other parameters of the CELP domain codec.
- the parameters and excitation should be such that they should be able to generate the same transform domain output when these parameters are processed by the CELP decoder.
- the decoder of the next frame which is a CELP (or time domain) frame uses the state generated by the CELP decoder processing of the parameters obtained during analysis of the transform domain output.
- the voiced speech frame following an audio frame may be preferable to code the voiced speech frame following an audio frame as a transition speech frame.
- the first L output samples generated by the speech mode during audio to speech transition are also generated by the audio mode.
- audio codec was delayed by the length of the down sampling filter.
- the state update discussed above provides a smooth transition.
- the L audio mode output samples can be overlapped and added with the first L speech mode audio samples.
- FIG. 10 specifically addresses the case where the first layer of a multilayer codec is a hybrid speech/audio codec.
- the audio input from frame m is processed by the generic audio encoder/decoder 1001 where the audio is encoded via an encoder, and then immediately decoded via a decoder.
- the reconstructed (decoded) generic audio from block 1001 is processed by a state generator 160 .
- the state estimation from state generator 160 is now used by the speech encoder 130 to generate the coded speech.
- FIG. 11 is a flow chart showing operation of the encoder of FIG. 1 .
- the encoder of FIG. 1 comprises a first coder encoding generic audio frames, a state generator outputting filter states for a generic audio frame m, and a second encoder for encoding speech frames.
- the second encoder receives the filter states for the generic audio frame m, and using the filter states for the generic audio frame m encodes a speech frame m+1.
- step 1101 generic audio frames are encoded with a first encoder (encoder 140 ).
- Filter states are determined by state generator 160 from a generic audio frame (step 1103 ).
- a second encoder (speech coder 130 ) is then initialized with the filter states (step 1105 ).
- speech frames are encoded with the second encoder that was initialized with the filter states.
- FIG. 12 is a flow chart showing operation of the decoder of FIG. 2 .
- the decoder of FIG. 2 comprises a first decoder 221 decoding generic audio frames, a state generator 260 outputting filter states for a generic audio frame m, and a second decoder 230 for decoding speech frames.
- the second decoder receives the filter states for the generic audio frame m and uses the filter states for the generic audio frame m to decode a speech frame m+1.
- step 1201 generic audio frames are decoded with a first decoder (encoder 221 ). Filter states are determined by state generator 260 from a generic audio frame (step 1203 ). A second decoder (speech decoder 230 ) is then initialized with the filter states (step 1205 ). Finally, at step 1207 speech frames are decoded with the second decoder that was initialized with the filter states.
Abstract
Description
-
- Down-sampling filter state memory,
- Pre-emphasis filter state memory,
- Linear prediction coefficients for interpolation and generation of the weighted synthesis filter, state memory
- The adaptive codebook state memory,
- De-emphasis filter state memory, and
- LPC synthesis filter state memory.
-
- Pre-emphasis/de-emphasis filter state memory
- Linear prediction (LP) coefficients for interpolation
- Weighted synthesis filter state memory
- Zero input response state memory
- Adaptive codebook (ACB) state memory
- LPC synthesis filter state memory
- Postfilter state memory
- Pitch pre-filter state memory
-
- Down-sampling filter state memory,
- Pre-emphasis filter state memory,
- Linear prediction coefficients for interpolation and generation of the weighted synthesis filter, state memory
- The adaptive codebook state memory,
- De-emphasis filter state memory, and
- LPC synthesis filter state memory.
where bi are the FIR filter coefficients. This adds delay to the generic audio output. The last L samples as ŝa(nd) forms the state of the up sampling filter, where L is the length of the up-sampling filter. The up-sampling filter used in the speech mode to up-sample the 12.8 kHz CELP decoder output to 16 kHz. For this case, the state memory translation involves a simple copy of the down-sampling filter memory to the up-sampling filter. In this respect, the up-sampling filter state is initialized for frame m+1 as if the output of the decoded frame m had originated from the coding method of frame m+1, when in fact a different coding method for coding frame m was used.
P(z)=1−γz −1,
where γ is a constant (typically 0.6≦γ≦0.9), to generate a pre-emphasized signal ŝap(nd). In the coding method for frame m+1, the pre-emphasis is performed at the encoder and the corresponding inverse (de-emphasis),
is performed at the decoder. In this case, the down-sampled input to the pre-emphasis filter for the reconstructed audio from frame m is used to represent the previous outputs of the de-emphasis filter, and therefore, the last sample of ŝa(nd) is used as the de-emphasis filter state memory. This is conceptually similar to the re-sampling filters in that the state of the de-emphasis filter for frame m+1 is initialized to a state as if the decoding of frame m had been processed using the same decoding method as frame m+1, when in fact they are different.
and where the corresponding LPC synthesis filter is given by:
E(z)=W(z)(S(z)−Ŝz)). (1)
From this expression, the weighting function W(z) can be distributed and the input signal estimate ŝ(n) can be decomposed into the filtered sum of the weighted codebook code-vectors:
The term W(z)S(z) corresponds to a weighted version of the input signal. By letting the weighted input signal W(z)S(z) be defined as Siv(z)=W(z)S(z) and by further letting
E(z)=S w(z)−H(z)(βC r(z)+γC k(z)). (3)
By using z-transform notation, filter states need not be explicitly defined. Now proceeding using vector notation, where the vector length L is a length of a current subframe,
e=s w −H(βc r +γc k)−h zir, (4)
where:
e=x w −βHc τ −γHc k. (6)
Equation 6 represents the perceptually weighted error (or distortion) vector e(n) produced by a
ε=∥e∥ 2 =∥x w −βHc τ −γHc k∥2. (7)
Due to complexity limitations, practical implementations of speech coding systems typically minimize the squared error in a sequential fashion. That is, the ACB component is optimized first (by assuming the FCB contribution is zero), and then the FCB component is optimized using the given (previously optimized) ACB component. The ACB/FCB gains, that is, codebook-related parameters β and γ, may or may not be re-optimized, that is, quantized, given the sequentially selected ACB/FCB code-vectors cτ and ck.
ε=∥x w −βHc τ∥2 =x w T x w−2βx w T Hc τβ2 c τ T H T Hc τ. (8)
Minimization of the squared error is then determined by taking the partial derivative of ε with respect to β and setting the quantity to zero:
This yields an (sequentially) optimal ACB gain:
Substituting the optimal ACB gain back into Equation 8 gives:
where τ* is a sequentially determined optimal ACB index parameter, that is, an ACB index parameter that minimizes the bracketed expression. Since xw is not dependent on τ, Equation 11 can be rewritten as follows:
Now, by letting yτ equal the ACB code-vector Cτ filtered by
and likewise, Equation 10 can be simplified to:
ε=∥x 2 −γHc k∥2. (15)
where γHck is a filtered and weighted version of FCB code-vector ck, that is, FCB code-vector ck filtered by
where k* is the optimal FCB index parameter, that is, an FCB index parameter that maximizes the bracketed expression. By grouping terms that are not dependent on k, that is, by letting d2 T=x2 TH and Φ=HTH, Equation 16 can be simplified to:
in which the optimal FCB gain γ is given as:
Claims (7)
Priority Applications (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/190,517 US9037456B2 (en) | 2011-07-26 | 2011-07-26 | Method and apparatus for audio coding and decoding |
CN201280037214.5A CN103703512A (en) | 2011-07-26 | 2012-07-23 | Method and apparatus for audio coding and decoding |
PCT/US2012/047806 WO2013016262A1 (en) | 2011-07-26 | 2012-07-23 | Method and apparatus for audio coding and decoding |
KR1020147002124A KR101615265B1 (en) | 2011-07-26 | 2012-07-23 | Method and apparatus for audio coding and decoding |
EP12740276.6A EP2737478A1 (en) | 2011-07-26 | 2012-07-23 | Method and apparatus for audio coding and decoding |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/190,517 US9037456B2 (en) | 2011-07-26 | 2011-07-26 | Method and apparatus for audio coding and decoding |
Publications (2)
Publication Number | Publication Date |
---|---|
US20130030798A1 US20130030798A1 (en) | 2013-01-31 |
US9037456B2 true US9037456B2 (en) | 2015-05-19 |
Family
ID=46582088
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/190,517 Expired - Fee Related US9037456B2 (en) | 2011-07-26 | 2011-07-26 | Method and apparatus for audio coding and decoding |
Country Status (5)
Country | Link |
---|---|
US (1) | US9037456B2 (en) |
EP (1) | EP2737478A1 (en) |
KR (1) | KR101615265B1 (en) |
CN (1) | CN103703512A (en) |
WO (1) | WO2013016262A1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140081629A1 (en) * | 2012-09-18 | 2014-03-20 | Huawei Technologies Co., Ltd | Audio Classification Based on Perceptual Quality for Low or Medium Bit Rates |
US20150036679A1 (en) * | 2012-03-23 | 2015-02-05 | Dolby Laboratories Licensing Corporation | Methods and apparatuses for transmitting and receiving audio signals |
US10269366B2 (en) | 2014-07-28 | 2019-04-23 | Huawei Technologies Co., Ltd. | Audio coding method and related apparatus |
Families Citing this family (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9129600B2 (en) * | 2012-09-26 | 2015-09-08 | Google Technology Holdings LLC | Method and apparatus for encoding an audio signal |
PT3121813T (en) * | 2013-01-29 | 2020-06-17 | Fraunhofer Ges Forschung | Noise filling without side information for celp-like coders |
FR3013496A1 (en) | 2013-11-15 | 2015-05-22 | Orange | TRANSITION FROM TRANSFORMED CODING / DECODING TO PREDICTIVE CODING / DECODING |
US9685164B2 (en) * | 2014-03-31 | 2017-06-20 | Qualcomm Incorporated | Systems and methods of switching coding technologies at a device |
EP2980794A1 (en) * | 2014-07-28 | 2016-02-03 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio encoder and decoder using a frequency domain processor and a time domain processor |
EP2980795A1 (en) * | 2014-07-28 | 2016-02-03 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio encoding and decoding using a frequency domain processor, a time domain processor and a cross processor for initialization of the time domain processor |
EP2980797A1 (en) | 2014-07-28 | 2016-02-03 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio decoder, method and computer program using a zero-input-response to obtain a smooth transition |
EP2980796A1 (en) * | 2014-07-28 | 2016-02-03 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Method and apparatus for processing an audio signal, audio decoder, and audio encoder |
FR3024582A1 (en) * | 2014-07-29 | 2016-02-05 | Orange | MANAGING FRAME LOSS IN A FD / LPD TRANSITION CONTEXT |
EP2988300A1 (en) * | 2014-08-18 | 2016-02-24 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Switching of sampling rates at audio processing devices |
EP3340664A1 (en) | 2015-09-15 | 2018-06-27 | Huawei Technologies Co., Ltd. | Method and network device for establishing a wireless bearer |
CN110600047B (en) * | 2019-09-17 | 2023-06-20 | 南京邮电大学 | Perceptual STARGAN-based multi-to-multi speaker conversion method |
Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6113653A (en) * | 1998-09-11 | 2000-09-05 | Motorola, Inc. | Method and apparatus for coding an information signal using delay contour adjustment |
US20030009325A1 (en) * | 1998-01-22 | 2003-01-09 | Raif Kirchherr | Method for signal controlled switching between different audio coding schemes |
US20050159942A1 (en) | 2004-01-15 | 2005-07-21 | Manoj Singhal | Classification of speech and music using linear predictive coding coefficients |
US20060173675A1 (en) | 2003-03-11 | 2006-08-03 | Juha Ojanpera | Switching between coding schemes |
WO2008016945A2 (en) | 2006-07-31 | 2008-02-07 | Qualcomm Incorporated | Systems and methods for modifying a window with a frame associated with an audio signal |
US7343283B2 (en) * | 2002-10-23 | 2008-03-11 | Motorola, Inc. | Method and apparatus for coding a noise-suppressed audio signal |
US20090076829A1 (en) * | 2006-02-14 | 2009-03-19 | France Telecom | Device for Perceptual Weighting in Audio Encoding/Decoding |
US20090240491A1 (en) * | 2007-11-04 | 2009-09-24 | Qualcomm Incorporated | Technique for encoding/decoding of codebook indices for quantized mdct spectrum in scalable speech and audio codecs |
US20090259477A1 (en) * | 2008-04-09 | 2009-10-15 | Motorola, Inc. | Method and Apparatus for Selective Signal Coding Based on Core Encoder Performance |
EP2144230A1 (en) | 2008-07-11 | 2010-01-13 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Low bitrate audio encoding/decoding scheme having cascaded switches |
EP2144231A1 (en) | 2008-07-11 | 2010-01-13 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Low bitrate audio encoding/decoding scheme with common preprocessing |
WO2010003491A1 (en) | 2008-07-11 | 2010-01-14 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio encoder and decoder for encoding and decoding frames of sampled audio signal |
WO2010003663A1 (en) | 2008-07-11 | 2010-01-14 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio encoder and decoder for encoding frames of sampled audio signals |
EP2214164A2 (en) | 2009-01-28 | 2010-08-04 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio decoder, audio encoder, methods for decoding and encoding an audio signal and computer program |
US20110218797A1 (en) | 2010-03-05 | 2011-09-08 | Motorola, Inc. | Encoder for audio signal including generic audio and speech frames |
US20110218799A1 (en) * | 2010-03-05 | 2011-09-08 | Motorola, Inc. | Decoder for audio signal including generic audio and speech frames |
-
2011
- 2011-07-26 US US13/190,517 patent/US9037456B2/en not_active Expired - Fee Related
-
2012
- 2012-07-23 EP EP12740276.6A patent/EP2737478A1/en not_active Withdrawn
- 2012-07-23 KR KR1020147002124A patent/KR101615265B1/en active IP Right Grant
- 2012-07-23 CN CN201280037214.5A patent/CN103703512A/en active Pending
- 2012-07-23 WO PCT/US2012/047806 patent/WO2013016262A1/en unknown
Patent Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030009325A1 (en) * | 1998-01-22 | 2003-01-09 | Raif Kirchherr | Method for signal controlled switching between different audio coding schemes |
US6113653A (en) * | 1998-09-11 | 2000-09-05 | Motorola, Inc. | Method and apparatus for coding an information signal using delay contour adjustment |
US7343283B2 (en) * | 2002-10-23 | 2008-03-11 | Motorola, Inc. | Method and apparatus for coding a noise-suppressed audio signal |
US20060173675A1 (en) | 2003-03-11 | 2006-08-03 | Juha Ojanpera | Switching between coding schemes |
US20050159942A1 (en) | 2004-01-15 | 2005-07-21 | Manoj Singhal | Classification of speech and music using linear predictive coding coefficients |
US20090076829A1 (en) * | 2006-02-14 | 2009-03-19 | France Telecom | Device for Perceptual Weighting in Audio Encoding/Decoding |
WO2008016945A2 (en) | 2006-07-31 | 2008-02-07 | Qualcomm Incorporated | Systems and methods for modifying a window with a frame associated with an audio signal |
KR20090035717A (en) | 2006-07-31 | 2009-04-10 | 퀄컴 인코포레이티드 | Systems and methods for modifying a window with a frame associated with an audio signal |
US20090240491A1 (en) * | 2007-11-04 | 2009-09-24 | Qualcomm Incorporated | Technique for encoding/decoding of codebook indices for quantized mdct spectrum in scalable speech and audio codecs |
US8515767B2 (en) * | 2007-11-04 | 2013-08-20 | Qualcomm Incorporated | Technique for encoding/decoding of codebook indices for quantized MDCT spectrum in scalable speech and audio codecs |
US20090259477A1 (en) * | 2008-04-09 | 2009-10-15 | Motorola, Inc. | Method and Apparatus for Selective Signal Coding Based on Core Encoder Performance |
WO2010003491A1 (en) | 2008-07-11 | 2010-01-14 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio encoder and decoder for encoding and decoding frames of sampled audio signal |
EP2144231A1 (en) | 2008-07-11 | 2010-01-13 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Low bitrate audio encoding/decoding scheme with common preprocessing |
WO2010003663A1 (en) | 2008-07-11 | 2010-01-14 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio encoder and decoder for encoding frames of sampled audio signals |
WO2010003564A1 (en) | 2008-07-11 | 2010-01-14 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V | Low bitrate audio encoding/decoding scheme having cascaded switches |
KR20110043592A (en) | 2008-07-11 | 2011-04-27 | 프라운호퍼 게젤샤프트 쭈르 푀르데룽 데어 안겐반텐 포르슝 에. 베. | Audio encoder and decoder for encoding and decoding frames of a sampled audio signal |
KR20110052622A (en) | 2008-07-11 | 2011-05-18 | 프라운호퍼-게젤샤프트 추르 푀르데룽 데어 안제반텐 포르슝 에 파우 | Audio encoder and decoder for encoding frames of sampled audio signals |
US20110173008A1 (en) * | 2008-07-11 | 2011-07-14 | Jeremie Lecomte | Audio Encoder and Decoder for Encoding Frames of Sampled Audio Signals |
EP2144230A1 (en) | 2008-07-11 | 2010-01-13 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Low bitrate audio encoding/decoding scheme having cascaded switches |
US20110238425A1 (en) * | 2008-10-08 | 2011-09-29 | Max Neuendorf | Multi-Resolution Switched Audio Encoding/Decoding Scheme |
EP2214164A2 (en) | 2009-01-28 | 2010-08-04 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Audio decoder, audio encoder, methods for decoding and encoding an audio signal and computer program |
US20100217607A1 (en) * | 2009-01-28 | 2010-08-26 | Max Neuendorf | Audio Decoder, Audio Encoder, Methods for Decoding and Encoding an Audio Signal and Computer Program |
US20110218797A1 (en) | 2010-03-05 | 2011-09-08 | Motorola, Inc. | Encoder for audio signal including generic audio and speech frames |
US20110218799A1 (en) * | 2010-03-05 | 2011-09-08 | Motorola, Inc. | Decoder for audio signal including generic audio and speech frames |
Non-Patent Citations (9)
Title |
---|
3GPP TS 26.290 v10.0.0 (Mar. 2011), 3rd Generation Partnership Project; Technical Specification Group Services and system Aspects; Audio codec processing functions; Extended Adaptive Multi-Rate-Wideband (AMR-WB+) codec; Transcoding functions (Release 10), all pages. |
3GPP2 C.S0014-D, Version 3.0, "Enhanced Variable Rate Codec, Speech Service Options 3, 68, 70, and 73 for Wideband Spread Spectrum Digital Systems", 3rd Generation Partnership Project 2 "3GPP2", Oct. 2010, all pages. |
Andreas S. Spanias, "Speech Coding: A Tutorial Review", Proc. of the IEEE, Oct. 1994, pp. 1539-1582, vol. 82 No. 10. |
Combescure et al., "A 16, 24, 32 Kbit/S Wideband Speech Codec Based on ATCELP" ICASSP '99 Proceedings of the Acoustics, Speech, and Signal Processing, 1999, pp. 5-8. |
Korean Notice of Preliminary Rejection for Korean Patent Application No. 10-2014-7002124, with English translation dated Jan. 2, 2015. |
Lecomte, Jeremie et al.: "Efficient cross-fade windows for transitions between LPC-based and non-LPC based audio coding", Audio Engineering Society, Convention Paper 7712, Presented at the 126th Convention, May 7-10, 2009 Munich, Germany, 9 pages. |
Mittal et al., "Method and Apparatus for Processing Aido Frames to Transition Between Difference Codecs" U.S. Appl. No. 13/342,462, filed Jan. 3, 2012, 34 pages. |
Patent Cooperation Treaty, "PCT Search Report and Written Opinion of the International Searching Authority" for International Application No. PCT/US2012/047806 dated Oct. 26, 2012, 15 pages. |
Ted Painter and Andreas Spanias, "Perceptual Coding of Digital Audio", Proc. of the IEEE, Apr. 2000, pp. 451-513, vol. 88 No. 4. |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150036679A1 (en) * | 2012-03-23 | 2015-02-05 | Dolby Laboratories Licensing Corporation | Methods and apparatuses for transmitting and receiving audio signals |
US9916837B2 (en) * | 2012-03-23 | 2018-03-13 | Dolby Laboratories Licensing Corporation | Methods and apparatuses for transmitting and receiving audio signals |
US20140081629A1 (en) * | 2012-09-18 | 2014-03-20 | Huawei Technologies Co., Ltd | Audio Classification Based on Perceptual Quality for Low or Medium Bit Rates |
US9589570B2 (en) * | 2012-09-18 | 2017-03-07 | Huawei Technologies Co., Ltd. | Audio classification based on perceptual quality for low or medium bit rates |
US10283133B2 (en) | 2012-09-18 | 2019-05-07 | Huawei Technologies Co., Ltd. | Audio classification based on perceptual quality for low or medium bit rates |
US11393484B2 (en) | 2012-09-18 | 2022-07-19 | Huawei Technologies Co., Ltd. | Audio classification based on perceptual quality for low or medium bit rates |
US10269366B2 (en) | 2014-07-28 | 2019-04-23 | Huawei Technologies Co., Ltd. | Audio coding method and related apparatus |
US10504534B2 (en) | 2014-07-28 | 2019-12-10 | Huawei Technologies Co., Ltd. | Audio coding method and related apparatus |
US10706866B2 (en) | 2014-07-28 | 2020-07-07 | Huawei Technologies Co., Ltd. | Audio signal encoding method and mobile phone |
Also Published As
Publication number | Publication date |
---|---|
EP2737478A1 (en) | 2014-06-04 |
KR101615265B1 (en) | 2016-04-26 |
CN103703512A (en) | 2014-04-02 |
KR20140027519A (en) | 2014-03-06 |
WO2013016262A1 (en) | 2013-01-31 |
US20130030798A1 (en) | 2013-01-31 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9037456B2 (en) | Method and apparatus for audio coding and decoding | |
KR101699898B1 (en) | Apparatus and method for processing a decoded audio signal in a spectral domain | |
CN101180676B (en) | Methods and apparatus for quantization of spectral envelope representation | |
EP1979895B1 (en) | Method and device for efficient frame erasure concealment in speech codecs | |
US7263481B2 (en) | Method and apparatus for improved quality voice transcoding | |
EP2157572B1 (en) | Signal processing method, processing appartus and voice decoder | |
Ragot et al. | Itu-t g. 729.1: An 8-32 kbit/s scalable coder interoperable with g. 729 for wideband telephony and voice over ip | |
RU2584463C2 (en) | Low latency audio encoding, comprising alternating predictive coding and transform coding | |
CA2862712A1 (en) | Multi-mode audio codec and celp coding adapted therefore | |
MX2011000366A (en) | Audio encoder and decoder for encoding and decoding audio samples. | |
WO2001061687A1 (en) | Wideband speech codec using different sampling rates | |
KR20130133846A (en) | Apparatus and method for encoding and decoding an audio signal using an aligned look-ahead portion | |
JP2018528480A (en) | Encoder and method for encoding an audio signal with reduced background noise using linear predictive coding | |
US6826527B1 (en) | Concealment of frame erasures and method | |
KR20120000055A (en) | Speech encoding device, speech decoding device, speech encoding method, and speech decoding method | |
JP6644848B2 (en) | Vector quantization device, speech encoding device, vector quantization method, and speech encoding method | |
WO2008018464A1 (en) | Audio encoding device and audio encoding method | |
KR100718487B1 (en) | Harmonic noise weighting in digital speech coders | |
JP3071800B2 (en) | Adaptive post filter |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MITTAL, UDAR;ASHLEY, JAMES P.;GIBBS, JONATHAN A.;SIGNING DATES FROM 20110720 TO 20110725;REEL/FRAME:026645/0982 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:028561/0557Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034286/0001Effective date: 20141028 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE REMOVE INCORRECT PATENT NO. 8577046 AND REPLACE WITH CORRECT PATENT NO. 8577045 PREVIOUSLY RECORDED ON REEL 034286 FRAME 0001. ASSIGNOR(S) HEREBY CONFIRMS THE ASSIGNMENT;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034538/0001Effective date: 20141028 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Expired due to failure to pay maintenance fee |
Effective date: 20190519 |
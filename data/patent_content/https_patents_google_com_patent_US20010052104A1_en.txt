US20010052104A1 - Iteration terminating using quality index criteria of turbo codes - Google Patents
Iteration terminating using quality index criteria of turbo codes Download PDFInfo
- Publication number
- US20010052104A1 US20010052104A1 US09/802,828 US80282801A US2001052104A1 US 20010052104 A1 US20010052104 A1 US 20010052104A1 US 80282801 A US80282801 A US 80282801A US 2001052104 A1 US2001052104 A1 US 2001052104A1
- Authority
- US
- United States
- Prior art keywords
- quality index
- signal
- decoder
- iteration
- recursion
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/03—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words
- H03M13/23—Error detection or forward error correction by redundancy in data representation, i.e. code words containing more digits than the source words using convolutional codes, e.g. unit memory codes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0045—Arrangements at the receiver end
- H04L1/0047—Decoding adapted to other signal detection operation
- H04L1/005—Iterative decoding, including iteration between signal detection and decoding operation
- H04L1/0051—Stopping criteria
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/29—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes combining two or more codes or code structures, e.g. product codes, generalised product codes, concatenated codes, inner and outer codes
- H03M13/2957—Turbo codes and decoding
- H03M13/2975—Judging correct decoding, e.g. iteration stopping criteria
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M13/00—Coding, decoding or code conversion, for error detection or error correction; Coding theory basic assumptions; Coding bounds; Error probability evaluation methods; Channel models; Simulation or testing of codes
- H03M13/37—Decoding methods or techniques, not specific to the particular type of coding provided for in groups H03M13/03 - H03M13/35
- H03M13/39—Sequence estimation, i.e. using statistical methods for the reconstruction of the original codes
- H03M13/41—Sequence estimation, i.e. using statistical methods for the reconstruction of the original codes using the Viterbi algorithm or Viterbi processors
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04B—TRANSMISSION
- H04B1/00—Details of transmission systems, not covered by a single one of groups H04B3/00 - H04B13/00; Details of transmission systems not characterised by the medium used for transmission
- H04B1/69—Spread spectrum techniques
- H04B1/707—Spread spectrum techniques using direct sequence modulation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1812—Hybrid protocols; Hybrid automatic repeat request [HARQ]
Definitions
- This invention relates generally to communication systems, and more particularly to a decoder for use in a receiver of a convolutionally coded communication system.
- Convolutional codes are often used in digital communication systems to protect transmitted information from error.
- Such communication systems include the Direct Sequence Code Division Multiple Access (DS-CDMA) standard IS-95 and the Global System for Mobile Communications (GSM).
- DS-CDMA Direct Sequence Code Division Multiple Access
- GSM Global System for Mobile Communications
- a signal is convolutionally coded into an outgoing code vector that is transmitted.
- a practical soft-decision decoder such as a Viterbi decoder as is known in the art, uses a trellis structure to perform an optimum search for the maximum likelihood transmitted code vector.
- Turbo codes have been developed that outperform conventional coding techniques.
- Turbo codes are generally composed of two or more convolutional codes and turbo interleavers.
- Turbo decoding is iterative and uses a soft output decoder to decode the individual convolutional codes.
- the soft output decoder provides information on each bit position which helps the soft output decoder decode the other convolutional codes.
- the soft output decoder is usually a MAP (maximum a posteriori) or soft output Viterbi algorithm (SOVA) decoder.
- MAP maximum a posteriori
- SOVA soft output Viterbi algorithm
- the appropriate number of iterations (stopping criteria) for a reliably turbo decoded block varies as the quality of the incoming signal and the resulting number of errors incurred therein.
- the number of iterations needed is related to channel conditions, where a more noisy environment will need more iterations to correctly resolve the information bits and reduce error.
- One prior art stopping criteria utilizes a parity check as an indicator to stop the decoding process.
- a parity check is straightforward as far as implementation is concerned. However, a parity check is not reliable if there are a large number of bit errors.
- Another type of criteria for the turbo decoding iteration stop is the LLR (log-likelihood-ratio) value as calculated for each decoded bit. Since turbo decoding converges after a number of iterations, the LLR of a data bit is the most direct indicator index for this convergence.
- One way this stopping criteria is applied is to compare LLR magnitude to a certain threshold. However, it can be difficult to determine the proper threshold as channel conditions are variable. Still other prior art stopping criteria measure the entropy or difference of two probability distributions, but this requires much calculation.
- FIG. 1 shows a trellis diagram used in soft output decoder techniques as are known in the prior art
- FIG. 2 shows a simplified block diagram for turbo encoding as is known in the prior art
- FIG. 3 shows a simplified block diagram for a turbo decoder as is known in lo the prior art
- FIG. 4 shows a simplified block diagram for a turbo decoder with an iterative quality index criteria, in accordance with the present invention
- FIG. 5 shows simplified block diagram for the Viterbi decoder as used in FIG. 4.
- FIG. 6 shows a flowchart for a method for turbo decoding, in accordance with the present invention.
- the present invention provides a turbo decoder that dynamically utilizes the virtual (intrinsic) SNR as a quality index stopping criteria and retransmit criteria of the in-loop data stream at the input of each constituent decoder stage, as the loop decoding iterations proceed.
- a (global) quality index is used as a stopping criteria to determine the number of iterations needed in the decoder, and a local quality index is used to request a retransmission when necessary.
- the present invention conserves power in the communication device and saves calculation complexity.
- block codes, convolutional codes, turbo codes, and others are graphically represented as a trellis as shown in FIG. 1, wherein a four state, five section trellis is shown.
- M states per trellis section typically M equals eight states
- Maximum a posteriori type decoders (log-MAP, MAP, max-log-MAP, constant-log-MAP, etc.) utilize forward and backward generalized Viterbi recursions or soft output Viterbi algorithms (SOVA) on the trellis in order to provide soft outputs at each section, as is known in the art.
- SOVA soft output Viterbi algorithms
- the MAP bit probability can be broken into the past (beginning of trellis to the present state), the present state (branch metric for the current value), and the future (end of trellis to current value). More specifically, the MAP decoder performs forward and backward recursions up to a present state wherein the past and future probabilities are used along with the present branch metric to generate an output decision.
- the principles of providing hard and soft output decisions are known in the art, and several variations of the above described decoding methods exist.
- FIG. 2 shows a typical turbo coder that is constructed with interleavers and constituent codes which are usually systematic convolutional codes, but can be block codes also.
- a turbo encoder is a parallel concatenation of two recursive systemic convolutional encoders (RSC) with an interleaver (int) between them.
- the output of the turbo encoding is generated by multiplexing (concatenating) the information bits m i and the parity bits p i from the two encoders, RSC 1 and RSC 2 .
- the parity bits can be punctured as is known in the art to increase code rate (i.e., a throughput of 1 ⁇ 2).
- the turbo encoded signal is then transmitted over a channel.
- Noise, n i due to the AWGN nature of the channel becomes added to the signal, x l , during transmission.
- FIG. 3 shows a typical turbo decoder that is constructed with interleavers, de-interleavers, and decoders.
- the mechanism of the turbo decoder regarding extrinsic information L e1 , L e2 , interleaver (int), de-interleaver (deint), and the iteration process between the soft-input, soft-output decoder sections SISO 1 and SISO 2 follow the Bahl algorithm.
- the first decoder (SISO 1 ) computes a soft output from the input signal bits, y i , and the a priori information (L a ), which will be described below.
- the soft output is denoted as L e1 , for extrinsic data from the first decoder.
- the second decoder (SISO 2 ) is input with interleaved versions of L e1 (the a priori information from L a ), the input signal bits y i .
- the second decoder generates extrinsic data, L e2 , which is deinterleaved to produce L a which is fed back to the first decoder, and a soft output (typically a MAP LLR) provide a soft output of the original information bits m i .
- a soft output typically a MAP LLR
- MAP algorithms minimize the probability of error for an information bit given the received sequence, and they also provide the probability that the information bit is either a 1 or 0 given the received sequence.
- the prior art BCJR algorithm provides a soft output decision for each bit position (trellis section of FIG. 1) wherein the influence of the soft inputs within the block is broken into contributions from the past (earlier soft inputs), the present soft input, and the future (later soft inputs).
- the BCJR decoder algorithm uses a forward and a backward generalized Viterbi recursion on the trellis to arrive at an optimal soft output for each trellis section (stage).
- LLR log-likelihood ratio
- the probability that the decoded bit is equal to 1 (or 0) in the trellis given the received sequence is composed of a product of terms due to the Markov property of the code.
- the Markov property states that the past and the future are independent given the present.
- the present, ⁇ k (n,m) is the probability of being in state m at time k and generating the symbol ⁇ k when the previous state at time k ⁇ 1 was n.
- the present plays the function of a branch metric.
- the past, ⁇ i (m) is the probability of being in state m at time k with the received sequence ⁇ y 1 , . . .
- ⁇ k (m) is the probability of generating the received sequence ⁇ y k+1 , . . . , y N ⁇ from state m at time k.
- Equation (2) The overall a posteriori probabilities in equation (2) are computed by summing over the branches in the trellis B 1 (B 0 ) that correspond to the information bit being 1 (or 0).
- the LLR in equation (1) requires both the forward and reverse recursions to be available at time k.
- turbo decoding The performance of turbo decoding is affected by many factors.
- One of the key factors is the number of iterations. As a turbo decoder converges after a few iterations, more iterations after convergence will not increase performance significantly. Turbo codes will converge faster under good channel conditions requiring a fewer number of iterations to obtain good performance, and will diverge under poor channel conditions.
- the number of iterations performed is directly proportional to the number of calculations needed and it will affect power consumption. Since power consumption is of great concern in the mobile and portable radio communication devices, there is an even higher emphasis on finding reliable and good iteration stopping criteria. Motivated by these reasons, the present invention provides an adaptive scheme for stopping the iteration process and for providing retransmit criteria.
- the number of iterations is defined as the total number of SISO decoding stages used (i.e. two iterations in one cycle). Accordingly, the iteration number counts from 0 to 2N ⁇ 1.
- Each decoding stage can be either MAP or SOVA.
- the key factor in the decoding process is to combine the extrinsic information into a SISO block.
- the final hard decision on the information bits is made according to the value of the LLR after iterations are stopped.
- the final hard bit decision is based on the LLR polarity. If the LLR is positive, decide +1, otherwise decide ⁇ 1 for the hard output.
- the in-loop signal-to-noise ratio (intrinsic SNR) is used as the iteration stopping criterion in the turbo decoder. Since SNR improves when more bits are detected correctly per iteration, the present invention uses a detection quality indicator that observes the increase in signal energy relative to the noise as iterations go on.
- FIG. 4 shows a turbo decoder with at least one additional Viterbi decoder to monitor the decoding process, in accordance with the present invention.
- one Viterbi decoder can be used, two decoders give the flexibility to stop iterations at any SISO decoder.
- the Viterbi decoders are used because it is easy to analyze the Viterbi decoder to get the quality index.
- the Viterbi decoder is just used to do the mathematics in the present invention, i.e. to derive the quality indexes and intrinsic SNR values. No real Viterbi decoding is needed. It is well known that MAP or SOVA will not outperform the conventional Viterbi decoder significantly if no iteration is applied.
- the quality index also applies towards the performance of MAP and SOVA decoders.
- the error due to the Viterbi approximation to SISO (MAP or SOVA) will not accumulate since there is no change in the turbo decoding process itself. Note that the turbo decoding process remains as it is.
- the at least one additional Viterbi decoder is attached for analysis to generate the quality index and no decoding is actually needed.
- two Viterbi decoders are used.
- both decoders generate extrinsic information for use in an iteration stopping signal, and they act independently such that either decoder can signal a stop to iterations.
- the Viterbi decoders are not utilized in the traditional sense in that they are only used to do the mathematics and derive the quality indexes and intrinsic SNR values.
- a soft output is generated for the transmitted bits from the LLR of the decoder where the iteration is stopped.
- the present invention utilizes the extrinsic information available in the iterative loop in the Viterbi decoder.
- path metrics with the extrinsic information input: p ⁇ [ Y
- [0035] is the correction factor introduced by the extrinsic information. And from the Viterbi decoder point of view, this correcting factor improves the path metric and thus improves the decoding performance. This factor is the improvement brought forth by the extrinsic information.
- the present invention introduces this factor as the quality index and the iteration stopping criteria and retransmit criteria for turbo codes.
- w i is a weighting function to alter performance.
- w i is a constant of 1.
- indexes are extremely easy to generate and require very little hardware.
- these indexes have virtually the same asymptotic behavior and can be used as a good quality index for the turbo decoding performance evaluation and iteration stopping criterion.
- indexes increase very quickly for the first a few iterations and then they approach an asymptote of almost constant value.
- This asymptotic behavior describes the turbo decoding process well and serves as a quality monitor of the turbo decoding process. In operation, the iterations are stopped if this index value crosses the knee of the asymptote.
- the iterative loop of the turbo decoder increases the magnitude of the LLR such that the decision error probability will be reduced.
- Another way to look at it is that the extrinsic information input to each decoder is virtually improving the SNR of the input sample streams.
- the following analysis is presented to show that what the extrinsic information does is to improve the virtual SNR to each constituent decoder. This helps to explain how the turbo coding gain is reached. Analysis of the incoming samples is also provided with the assistance of the Viterbi decoder as described before.
- the path metric equation of the attached additional Viterbi decoders is p ⁇ [ Y
- the input data stream to the Viterbi decoder is ⁇ ( y i + ⁇ 2 2 ⁇ z i ) , t i ) ⁇ ,
- SNR ⁇ ( p i , t i , iter ) ( E ⁇ [ t i
- p t ] ) 2 ⁇ 2 ( E ⁇ [ p i + n i 2
- p i ⁇ l ] ) 2 ⁇ 2 p i 2 ⁇ 2
- the average SNR of the whole block will increase as the number of iteration increases.
- the second term is the original quality index, as described previously, divided by the block size.
- the third term is directly proportional to the average of magnitude squared of the extrinsic information and is always positive. This intrinsic SNR expression will have the similar asymptotic behavior as the previously described quality indexes and can also be used as decoding quality indicator.
- StartSNR denotes the initial SNR value that starts the decoding iterations.
- a weighting function can be used here as well. Only the last two terms are needed to monitor the decoding quality. Note also that the normalization constant in the previous intrinsic SNR expressions has been ignored.
- a second embodiment of the present invention envisions a local quality index that can be defined over a portion of the bits in the block, without sacrificing accuracy.
- the above intrinsic SNR calculation can also be used for the local quality index.
- a local quality index such as a Yamamoto and Itoh type of index is a useful generalization of the above global quality index based on Viterbi decoder analysis.
- AverageSNR H ⁇ ( 1 , K ) StartSNR + 1 2 ⁇ Q H ⁇ ( ⁇ m i ⁇ , K ) + ⁇ 2 4 ⁇ E b ⁇ ( 1 2 ⁇ N ⁇ ⁇ i ⁇ K ⁇ ⁇ Z i 2 )
- AverageSNR a ⁇ ⁇ bs ⁇ ( 1 , K ) StartSNR + 1 2 ⁇ Q a ⁇ ⁇ bs ⁇ ( ⁇ m i ⁇ , K ) + ⁇ 2 4 ⁇ E b ⁇ ( 1 2 ⁇ N ⁇ ⁇ i ⁇ K ⁇ ⁇ Z i 2 )
- StartSNR denotes the initial SNR value decoding without extrinsic information.
- the path metric difference without extrinsic information input is very small for low SNR. Therefore, this scaling factor can be used in a local quality index.
- a Viterbi, SOVA, max-log-MAP or log-MAP can be used as a decoding scheme.
- p b is the bit error probability
- T(D,L,I) is the generating function with L denoting the length and I denoting the number of 1's in the signal sequence.
- Turbo decoding is just an iterative operation of some convolutional decoding schemes wherein the ARQ schemes of the present invention can be extended.
- the key operations needed are to monitor local quality indexes at each iteration stage with some associated thresholds.
- a turbo decoder lo designed with M full iteration cycles
- a SISO convolutional decoding is used, and the ARQ scheme of the present invention is applied.
- a soft decision local quality index is used.
- the following ARQ scheme is used for turbo decoding.
- the local quality index is checked against the predetermined threshold requirements which are chosen to balance the overhead for retransmission versus the improvement in error performance of the decoders.
- the present invention provides a decoder that dynamically terminates iteration calculations and provide retransmit criteria in the decoding of a received convolutionally coded signal using quality index criteria.
- the decoder includes a standard turbo decoder with two recursion processors connected in an iterative loop.
- One novel aspect of the invention is having at least one additional recursion processor coupled in parallel at the inputs of at least one of the recursion processors.
- the at least one additional recursion processor is a Viterbi decoder, and the two recursion processors are soft-input, soft-output (SISO) decoders.
- SISO soft-input, soft-output
- the at least one additional recursion processor calculates a quality index of the signal for each iteration and directs a controller to terminates the iterations when the measure of the quality index exceeds a predetermined level or retransmit data when the signal quality prevents convergence.
- the quality index is a summation of generated extrinsic information multiplied by a quantity extracted from the LLR information at each iteration.
- the quantity can be a hard decision of the LLR value or the LLR value itself.
- the quality index is an intrinsic signal-to-noise ratio of the signal calculated at each iteration.
- the intrinsic signal-to-noise ratio is a function of the quality index added to a summation of the square of the generated extrinsic information at each iteration.
- the intrinsic signal-to-noise ratio can be calculated using the quality index with the quantity being a hard decision of the LLR value, or the intrinsic signal-to-noise ratio is calculated using the quality index with the quantity being the LLR value.
- the measure of the quality index is a slope of the quality index taken over consecutive iterations.
- Another novel aspect of the present invention is the use of a local quality index to provide a moving average of extrinsic information during the above iterations wherein, if the local quality index improves then decoding continues. However, if the moving average degrades the receiver asks for a retransmission of the pertinent portions of the block of samples.
- the present invention can be used to stop iteration or ask for retransmission at any SISO decoder, or the iteration can be stopped or retransmission requested at half cycles of decoding.
- the iterations are stopped. Also, the iterations can be stopped once the interations pass a predetermined threshold to avoid any false indications. Alternately, a certain number of mandatory iterations can be imposed before the quality indexes are used as criteria for iteration stopping.
- the local quality index is used as a retransmit criteria in an ARQ system to reduce error during poor channel conditions.
- the local quality index uses a lower threshold (than the quality index threshold) for frame quality. If the local quality index is still below the threshold after a predetermined number of iterations, decoding can be stopped and a request sent for frame retransmission.
- the hardware needed to implement local quality indexes for iteration stopping is extremely simple. Since there are LLR and extrinsic information output in each constituent decoding stage, only a MAC (multiply and accumulate unit) is needed to calculate the soft index.
- the local quality indexes can be implemented with some simple attachment to the existing turbo decoders.
- FIG. 11 shows a flow chart representing an ARQ method 100 in the decoding of a received convolutionally coded signal using local quality index criteria, in accordance with the present invention.
- a first step 102 is providing a turbo decoder with two recursion processors connected in an iterative loop, and at least one additional recursion processor coupled in parallel at the inputs of at least one of the recursion processors. All of the recursion processors concurrently performing iteration calculations on the signal.
- the at least one additional recursion processor is a Viterbi decoder, and the two recursion processors are soft-input, soft-output decoders. More preferably, two additional processors are coupled in parallel at the inputs of the two recursion processors, respectively.
- a next step 104 is calculating a quality index of the signal in the at least one recursion processor for each iteration.
- the quality index is a summation of generated extrinsic information from the recursion processors multiplied by a quantity extracted from the LLR information of the recursion processors at each iteration.
- the quality index can be a hard value or a soft value.
- the quantity is a hard decision of the LLR value.
- the soft value the quantity is the LLR value itself.
- the quality index is an intrinsic signal-to-noise ratio (SNR) of the signal calculated at each iteration.
- the intrinsic SNR is a function of an initial signal-to-noise ratio added to the quality index added to a summation of the square of the generated extrinsic information at each iteration. However, only the last two terms are useful for the quality index criteria. For this case, there are also hard and soft values for the intrinsic SNR, using the corresponding hard and soft decisions of the quality index just described.
- This step also includes calculating a local quality index in the same way as above.
- the local quality index is determined over a subset of the quality index range (e.g. samples 1 through N of the entire frame).
- the local quality index is related to a moving average of the extrinsic information of the decoders.
- a next step 106 is comparing the local quality index to a predetermined threshold. If the local quality index is greater than or equal to the predetermined threshold then the iterations are allowed to continue. However, if the local quality index is lower than the threshold, then in step 108 those samples are requested to be retransmitted in an attempt to obtain a higher quality signal, and the sample counter is reset so that the iterations can be reset and restarted.
- a next step 110 is terminating the iterations when the measure of the quality index exceeds a predetermined level being higher than the predetermined threshold.
- the terminating step includes the measure of the quality index being a slope of the quality index over the iterations.
- the predetermined level is at a knee of the quality index curve approaching its asymptote. More specifically, the predetermined level is set at 0.03 dB of SNR.
- a next step 112 is providing an output derived from the soft output of the turbo decoder existing after the terminating step.
Abstract
A decoder dynamically terminates iteration calculations in the decoding of a received convolutionally coded signal using local quality index criteria. In a turbo decoder with two recursion processors connected in an iterative loop, at least one additional recursion processor is coupled in parallel at the inputs of at least one of the recursion processors. All of the recursion processors perform concurrent iterative calculations on the signal. The at least one additional recursion processor calculates a local quality index of a moving average of extrinsic information for each iteration over a portion of the signal. A controller terminates the iterations when the measure of the local quality index is less than a predetermined threshold, and requests a retransmission of the portion of the signal.
Description
- This application is a continuation-in-part of U.S. patent application Ser. No. 09/553,646 by inventors Xu et al., which is assigned to the assignee of the present application, and is hereby incorporated herein in its entirety by this reference thereto.
- This invention relates generally to communication systems, and more particularly to a decoder for use in a receiver of a convolutionally coded communication system.
- Convolutional codes are often used in digital communication systems to protect transmitted information from error. Such communication systems include the Direct Sequence Code Division Multiple Access (DS-CDMA) standard IS-95 and the Global System for Mobile Communications (GSM). Typically in these systems, a signal is convolutionally coded into an outgoing code vector that is transmitted. At a receiver, a practical soft-decision decoder, such as a Viterbi decoder as is known in the art, uses a trellis structure to perform an optimum search for the maximum likelihood transmitted code vector.
- More recently, turbo codes have been developed that outperform conventional coding techniques. Turbo codes are generally composed of two or more convolutional codes and turbo interleavers. Turbo decoding is iterative and uses a soft output decoder to decode the individual convolutional codes. The soft output decoder provides information on each bit position which helps the soft output decoder decode the other convolutional codes. The soft output decoder is usually a MAP (maximum a posteriori) or soft output Viterbi algorithm (SOVA) decoder.
- Turbo coding is efficiently utilized to correct errors in the case of communicating over an added white Gaussian noise (AWGN) channel. Intuitively, there are a few ways to examine and evaluate the error correcting performance of the turbo decoder. One observation is that the magnitude of log-likelihood ratio (LLR) for each information bit in the iterative portion of the decoder increases as iterations go on. This improves the probability of the correct decisions. The LLR magnitude increase is directly related to the number of iterations in the turbo decoding process. However, it is desirable to reduce the number of iterations to save calculation time and circuit power. The appropriate number of iterations (stopping criteria) for a reliably turbo decoded block varies as the quality of the incoming signal and the resulting number of errors incurred therein. In other words, the number of iterations needed is related to channel conditions, where a more noisy environment will need more iterations to correctly resolve the information bits and reduce error.
- One prior art stopping criteria utilizes a parity check as an indicator to stop the decoding process. A parity check is straightforward as far as implementation is concerned. However, a parity check is not reliable if there are a large number of bit errors. Another type of criteria for the turbo decoding iteration stop is the LLR (log-likelihood-ratio) value as calculated for each decoded bit. Since turbo decoding converges after a number of iterations, the LLR of a data bit is the most direct indicator index for this convergence. One way this stopping criteria is applied is to compare LLR magnitude to a certain threshold. However, it can be difficult to determine the proper threshold as channel conditions are variable. Still other prior art stopping criteria measure the entropy or difference of two probability distributions, but this requires much calculation.
- There is a need for a decoder that can determine the appropriate stopping point for the number of iterations of the decoder in a reliable manner. It would also be of benefit to provide the stopping criteria without a significant increase in calculation complexity. Further, it would be beneficial to provide retransmit criteria to improve bit error rate performance.
- FIG. 1 shows a trellis diagram used in soft output decoder techniques as are known in the prior art;
- FIG. 2 shows a simplified block diagram for turbo encoding as is known in the prior art;
- FIG. 3 shows a simplified block diagram for a turbo decoder as is known in lo the prior art;
- FIG. 4 shows a simplified block diagram for a turbo decoder with an iterative quality index criteria, in accordance with the present invention;
- FIG. 5 shows simplified block diagram for the Viterbi decoder as used in FIG. 4; and
- FIG. 6 shows a flowchart for a method for turbo decoding, in accordance with the present invention.
- The present invention provides a turbo decoder that dynamically utilizes the virtual (intrinsic) SNR as a quality index stopping criteria and retransmit criteria of the in-loop data stream at the input of each constituent decoder stage, as the loop decoding iterations proceed. A (global) quality index is used as a stopping criteria to determine the number of iterations needed in the decoder, and a local quality index is used to request a retransmission when necessary. Advantageously, by limiting the number of calculations to be performed in order to decode bits reliably, the present invention conserves power in the communication device and saves calculation complexity.
- Typically, block codes, convolutional codes, turbo codes, and others are graphically represented as a trellis as shown in FIG. 1, wherein a four state, five section trellis is shown. For convenience, we will reference M states per trellis section (typically M equals eight states) and N trellis sections per block or frame (typically N=5000). Maximum a posteriori type decoders (log-MAP, MAP, max-log-MAP, constant-log-MAP, etc.) utilize forward and backward generalized Viterbi recursions or soft output Viterbi algorithms (SOVA) on the trellis in order to provide soft outputs at each section, as is known in the art. The MAP decoder minimizes the decoded bit error probability for each information bit based on all received bits.
- Because of the Markov nature of the encoded sequence (wherein previous states cannot affect future states or future output branches), the MAP bit probability can be broken into the past (beginning of trellis to the present state), the present state (branch metric for the current value), and the future (end of trellis to current value). More specifically, the MAP decoder performs forward and backward recursions up to a present state wherein the past and future probabilities are used along with the present branch metric to generate an output decision. The principles of providing hard and soft output decisions are known in the art, and several variations of the above described decoding methods exist. Most of the soft input-soft output (SISO) decoders considered for turbo codes are based on the prior art optimal MAP algorithm in a paper by L. R. Bahl, J. Cocke, F. Jelinek, and J. Raviv entitled “Optimal Decoding of Linear Codes for Minimizing Symbol Error Rate”, IEEE Transactions on Information Theory, Vol. IT-20, March 1974, pp. 284-7 (BCJR algorithm).
- FIG. 2 shows a typical turbo coder that is constructed with interleavers and constituent codes which are usually systematic convolutional codes, but can be block codes also. In general, a turbo encoder is a parallel concatenation of two recursive systemic convolutional encoders (RSC) with an interleaver (int) between them. The output of the turbo encoding is generated by multiplexing (concatenating) the information bits mi and the parity bits pi from the two encoders, RSC1 and RSC2. Optionally, the parity bits can be punctured as is known in the art to increase code rate (i.e., a throughput of ½). The turbo encoded signal is then transmitted over a channel. Noise, ni, due to the AWGN nature of the channel becomes added to the signal, xl, during transmission. The noise variance of the AWGN can be expressed as σ2=No/2, where No/2 is the two sided noise power spectrum density. The noise increases the likelihood of bit errors when a receiver attempts to decode the input signal, yl(=xi+nl), to obtain the original information bits mi. Correspondingly, noise affects the transmitted parity bits to provide a signal tl=pl+nl.
- FIG. 3 shows a typical turbo decoder that is constructed with interleavers, de-interleavers, and decoders. The mechanism of the turbo decoder regarding extrinsic information Le1, Le2, interleaver (int), de-interleaver (deint), and the iteration process between the soft-input, soft-output decoder sections SISO1 and SISO2 follow the Bahl algorithm. Assuming zero decoder delay in the turbo decoder, the first decoder (SISO1) computes a soft output from the input signal bits, yi, and the a priori information (La), which will be described below. The soft output is denoted as Le1, for extrinsic data from the first decoder. The second decoder (SISO2) is input with interleaved versions of Le1 (the a priori information from La), the input signal bits yi. The second decoder generates extrinsic data, Le2, which is deinterleaved to produce La which is fed back to the first decoder, and a soft output (typically a MAP LLR) provide a soft output of the original information bits mi. Typically, the above iterations are repeated for a fixed number of times (usually sixteen) for each bit until all the input bits are decoded.
- MAP algorithms minimize the probability of error for an information bit given the received sequence, and they also provide the probability that the information bit is either a 1 or 0 given the received sequence. The prior art BCJR algorithm provides a soft output decision for each bit position (trellis section of FIG. 1) wherein the influence of the soft inputs within the block is broken into contributions from the past (earlier soft inputs), the present soft input, and the future (later soft inputs). The BCJR decoder algorithm uses a forward and a backward generalized Viterbi recursion on the trellis to arrive at an optimal soft output for each trellis section (stage). These a posteriori probabilities, or more commonly the log-likelihood ratio (LLR) of the probabilities, are passed between SISO decoding steps in iterative turbo decoding. The LLR for each information bit is
- for all bits in the decoded sequence (k=1 to N). In equation (1), the probability that the decoded bit is equal to 1 (or 0) in the trellis given the received sequence is composed of a product of terms due to the Markov property of the code. The Markov property states that the past and the future are independent given the present. The present, γk(n,m), is the probability of being in state m at time k and generating the symbol γk when the previous state at time k−1 was n. The present plays the function of a branch metric. The past, αi(m), is the probability of being in state m at time k with the received sequence {y1, . . . , yk}, and the future, βk(m), is the probability of generating the received sequence {yk+1, . . . , yN} from state m at time k. The probability αk(m) can be expressed as function of αk−1(m) and γk(n,m) and is called the forward recursion
-
- The overall a posteriori probabilities in equation (2) are computed by summing over the branches in the trellis B1 (B0) that correspond to the information bit being 1 (or 0).
- The LLR in equation (1) requires both the forward and reverse recursions to be available at time k. In general, the BCJR method for meeting this requirement is to compute and store the entire reverse recursion using a fixed number of iterations, and recursively compute αk(m) and Lak from k=1 to k=N using αk−1 and βk.
- The performance of turbo decoding is affected by many factors. One of the key factors is the number of iterations. As a turbo decoder converges after a few iterations, more iterations after convergence will not increase performance significantly. Turbo codes will converge faster under good channel conditions requiring a fewer number of iterations to obtain good performance, and will diverge under poor channel conditions. The number of iterations performed is directly proportional to the number of calculations needed and it will affect power consumption. Since power consumption is of great concern in the mobile and portable radio communication devices, there is an even higher emphasis on finding reliable and good iteration stopping criteria. Motivated by these reasons, the present invention provides an adaptive scheme for stopping the iteration process and for providing retransmit criteria.
- In the present invention, the number of iterations is defined as the total number of SISO decoding stages used (i.e. two iterations in one cycle). Accordingly, the iteration number counts from 0 to 2N−1. Each decoding stage can be either MAP or SOVA. The key factor in the decoding process is to combine the extrinsic information into a SISO block. The final hard decision on the information bits is made according to the value of the LLR after iterations are stopped. The final hard bit decision is based on the LLR polarity. If the LLR is positive, decide +1, otherwise decide −1 for the hard output.
- In the present invention, the in-loop signal-to-noise ratio (intrinsic SNR) is used as the iteration stopping criterion in the turbo decoder. Since SNR improves when more bits are detected correctly per iteration, the present invention uses a detection quality indicator that observes the increase in signal energy relative to the noise as iterations go on.
- FIG. 4 shows a turbo decoder with at least one additional Viterbi decoder to monitor the decoding process, in accordance with the present invention. Although one Viterbi decoder can be used, two decoders give the flexibility to stop iterations at any SISO decoder. The Viterbi decoders are used because it is easy to analyze the Viterbi decoder to get the quality index. The Viterbi decoder is just used to do the mathematics in the present invention, i.e. to derive the quality indexes and intrinsic SNR values. No real Viterbi decoding is needed. It is well known that MAP or SOVA will not outperform the conventional Viterbi decoder significantly if no iteration is applied. Therefore, the quality index also applies towards the performance of MAP and SOVA decoders. The error due to the Viterbi approximation to SISO (MAP or SOVA) will not accumulate since there is no change in the turbo decoding process itself. Note that the turbo decoding process remains as it is. The at least one additional Viterbi decoder is attached for analysis to generate the quality index and no decoding is actually needed.
- In a preferred embodiment, two Viterbi decoders are used. In practice, where two identical RSC encoder are used, thus requiring identical SISO decoders, only one Viterbi decoder is needed, although two of the same decoders can be used. Otherwise, the two Viterbi decoders are different and they are both required. Both decoders generate extrinsic information for use in an iteration stopping signal, and they act independently such that either decoder can signal a stop to iterations. The Viterbi decoders are not utilized in the traditional sense in that they are only used to do the mathematics and derive the quality indexes and intrinsic SNR values. In addition, since iterations can be stopped mid-cycle at any SISO decoder, a soft output is generated for the transmitted bits from the LLR of the decoder where the iteration is stopped.
-
-
-
-
-
-
- is the correction factor introduced by the extrinsic information. And from the Viterbi decoder point of view, this correcting factor improves the path metric and thus improves the decoding performance. This factor is the improvement brought forth by the extrinsic information. The present invention introduces this factor as the quality index and the iteration stopping criteria and retransmit criteria for turbo codes.
-
-
- where wi is a weighting function to alter performance. In a preferred embodiment, wi is a constant of 1.
-
-
- Note that these indexes are extremely easy to generate and require very little hardware. In addition, these indexes have virtually the same asymptotic behavior and can be used as a good quality index for the turbo decoding performance evaluation and iteration stopping criterion.
- The behavior of these indexes is that they increase very quickly for the first a few iterations and then they approach an asymptote of almost constant value. This asymptotic behavior describes the turbo decoding process well and serves as a quality monitor of the turbo decoding process. In operation, the iterations are stopped if this index value crosses the knee of the asymptote.
- The iterative loop of the turbo decoder increases the magnitude of the LLR such that the decision error probability will be reduced. Another way to look at it is that the extrinsic information input to each decoder is virtually improving the SNR of the input sample streams. The following analysis is presented to show that what the extrinsic information does is to improve the virtual SNR to each constituent decoder. This helps to explain how the turbo coding gain is reached. Analysis of the incoming samples is also provided with the assistance of the Viterbi decoder as described before.
-
-
-
-
-
- which is graphically depicted in FIG. 5.
-
-
-
-
- This shows that the extrinsic information increased the virtual SNR of the data stream input to each constituent decoder.
-
- at each iteration stage.
-
-
- where StartSNR denotes the initial SNR value that starts the decoding iterations. Optionally, a weighting function can be used here as well. Only the last two terms are needed to monitor the decoding quality. Note also that the normalization constant in the previous intrinsic SNR expressions has been ignored.
- The above global quality index results from a summation across an entire decoding block of L bits, i.e. a summation over the range i=0 to L−1, to calculate the global quality index. In order to further computational savings, a second embodiment of the present invention envisions a local quality index that can be defined over a portion of the bits in the block, without sacrificing accuracy. The above intrinsic SNR calculation can also be used for the local quality index. In addition, a local quality index such as a Yamamoto and Itoh type of index is a useful generalization of the above global quality index based on Viterbi decoder analysis. For example, a local quality index can be defined as
-
-
-
-
-
-
-
- defining an absolute value quality index version, wherein StartSNR denotes the initial SNR value decoding without extrinsic information.
- When K={0,1, . . . ,L−1} and N=L, these are the global quality indexes and the intrinsic SNR values previously described. However, when taken over a portion of a frame of data K={i,i+1, . . . ,i+N−1}, for 0≦i≦L−N−1 and N>0, then these quality indexes are essentially a moving average of extrinsic information, hereinafter defined as local quality indexes. Further, when K={0,1, . . . ,N−1}, with N=0,1, . . . ,L−1, then these local quality indexes reduce to the Yamamoto and Itoh type of indexes, Yamamoto et al., Viterbi Decoding Algorithm for Convolutional Codes with Repeat Request, IEEE Trans. Info. Theory, Vol 26, No 5, pp. 540-547, 1980, which is hereby incorporated by reference. Each type of these indexes has important practical applications in Automatic Repeat Request (ARQ) schemes wherein a radio communication device requests another (repeated) transmission of a portion of a frame of data that failed to be decoded properly, i.e. pass the quality index. In other words, if a receiver is not able to resolve (converge on) the data bits in time, the radio can request the transmitter to resend that portion of bits from the block, dependent on the decoding quality defined by the local quality indexes.
-
- Typically, the path metric difference without extrinsic information input is very small for low SNR. Therefore, this scaling factor can be used in a local quality index. For example, given that Y={y0,t0,y1,t1, . . . ,yL−1,tL−1} denotes a whole frame of received samples and Z={z0, z1, . . . ,zL−1} is the corresponding extrinsic information, a Viterbi, SOVA, max-log-MAP or log-MAP can be used as a decoding scheme. With Qindex*(1,N) denoting any of the above type of local quality indexes or the calculated virtual SNR values, and A denoting a threshold value, an ARQ scheme can be derived wherein for 1≦N≦L, if Qindex*(1,N)≧A, the decoding process continues. Otherwise, a retransmission of the block samples with time index K={0,1, . . . ,N−1} can be requested.
-
-
-
- where pb is the bit error probability and T(D,L,I) is the generating function with L denoting the length and I denoting the number of 1's in the signal sequence.
- Applying the same scheme for max-log-MAP decoding obtains
- Lj (1)≧Lj (0)+A, if xj*=+1 and 0≦j≦L−1
- Lj (1)≦Lj (0)−A, if xj x=−1 and 0≦j≦L−1
-
- which demonstrates that the bit error probability with MAP decoding is not greater (is bounded by) the bit error probability of Viterbi decoding. Moreover, the above inequalities demonstrate that the upper bound of error will be reduced with extrinsic information input. It is believed that the performance will be similar if other local quality indexes are used. These results demonstrate the improvement in decoding performance using the local quality indexes and the ARQ schemes of the present invention. Clearly, the local quality indexes can be generalized to any turbo decoding case with iteration stopping criteria.
- Turbo decoding is just an iterative operation of some convolutional decoding schemes wherein the ARQ schemes of the present invention can be extended. The key operations needed are to monitor local quality indexes at each iteration stage with some associated thresholds. Assuming a turbo decoder lo designed with M full iteration cycles, for each of the 2M half iteration cycles, a SISO convolutional decoding is used, and the ARQ scheme of the present invention is applied. A local quality index is associated with each of the iteration stages. For 1≦N≦L, {Qindex*(1,N,iter)}iter=0 2M−1 is defined as any of the previous local quality index or virtual SNR values calculated at the corresponding half iteration cycle. Preferably, a soft decision local quality index is used. With {A(iter)}iter=0 2M−1 denoting threshold values, the following ARQ scheme is used for turbo decoding. For iter=0, . . . ,2M−1, the ARQ scheme is checked at each of the corresponding half iteration cycles. For 1≦N≦L, if Qindex*(1,N,iter)≧A(iter), then decoding process continues. Otherwise, the receiver requests retransmission of the block having time index K={0,1, . . . ,N−1}. At each constituent decoding pass the local quality index is checked against the predetermined threshold requirements which are chosen to balance the overhead for retransmission versus the improvement in error performance of the decoders.
- Intuitively, many retransmissions could be needed due to the repeated check of thresholds. This will, of course, increase the decoding overhead and reduce the throughput. However, theoretical results show that data frames passing the repeated check will result in better BER performance.
- In review, the present invention provides a decoder that dynamically terminates iteration calculations and provide retransmit criteria in the decoding of a received convolutionally coded signal using quality index criteria. The decoder includes a standard turbo decoder with two recursion processors connected in an iterative loop. One novel aspect of the invention is having at least one additional recursion processor coupled in parallel at the inputs of at least one of the recursion processors. Preferably, the at least one additional recursion processor is a Viterbi decoder, and the two recursion processors are soft-input, soft-output (SISO) decoders. More preferably, there are two additional processors coupled in parallel at the inputs of the two recursion processors, respectively. All of the recursion processors, including the additional processors, perform concurrent iterative calculations on the signal. The at least one additional recursion processor calculates a quality index of the signal for each iteration and directs a controller to terminates the iterations when the measure of the quality index exceeds a predetermined level or retransmit data when the signal quality prevents convergence.
- The quality index is a summation of generated extrinsic information multiplied by a quantity extracted from the LLR information at each iteration. The quantity can be a hard decision of the LLR value or the LLR value itself. Alternatively, the quality index is an intrinsic signal-to-noise ratio of the signal calculated at each iteration. In particular, the intrinsic signal-to-noise ratio is a function of the quality index added to a summation of the square of the generated extrinsic information at each iteration. The intrinsic signal-to-noise ratio can be calculated using the quality index with the quantity being a hard decision of the LLR value, or the intrinsic signal-to-noise ratio is calculated using the quality index with the quantity being the LLR value. In practice, the measure of the quality index is a slope of the quality index taken over consecutive iterations.
- Another novel aspect of the present invention is the use of a local quality index to provide a moving average of extrinsic information during the above iterations wherein, if the local quality index improves then decoding continues. However, if the moving average degrades the receiver asks for a retransmission of the pertinent portions of the block of samples.
- The key advantages of the present invention are easy hardware implementation and flexibility of use. In particular, the present invention can be used to stop iteration or ask for retransmission at any SISO decoder, or the iteration can be stopped or retransmission requested at half cycles of decoding.
- Once the quality index of the iterations exceed a preset level the iterations are stopped. Also, the iterations can be stopped once the interations pass a predetermined threshold to avoid any false indications. Alternately, a certain number of mandatory iterations can be imposed before the quality indexes are used as criteria for iteration stopping.
- The local quality index is used as a retransmit criteria in an ARQ system to reduce error during poor channel conditions. The local quality index, uses a lower threshold (than the quality index threshold) for frame quality. If the local quality index is still below the threshold after a predetermined number of iterations, decoding can be stopped and a request sent for frame retransmission.
- As should be recognized, the hardware needed to implement local quality indexes for iteration stopping is extremely simple. Since there are LLR and extrinsic information output in each constituent decoding stage, only a MAC (multiply and accumulate unit) is needed to calculate the soft index. Advantageously, the local quality indexes can be implemented with some simple attachment to the existing turbo decoders.
- FIG. 11 shows a flow chart representing an
ARQ method 100 in the decoding of a received convolutionally coded signal using local quality index criteria, in accordance with the present invention. Afirst step 102 is providing a turbo decoder with two recursion processors connected in an iterative loop, and at least one additional recursion processor coupled in parallel at the inputs of at least one of the recursion processors. All of the recursion processors concurrently performing iteration calculations on the signal. In a preferred embodiment, the at least one additional recursion processor is a Viterbi decoder, and the two recursion processors are soft-input, soft-output decoders. More preferably, two additional processors are coupled in parallel at the inputs of the two recursion processors, respectively. - A
next step 104 is calculating a quality index of the signal in the at least one recursion processor for each iteration. In particular, the quality index is a summation of generated extrinsic information from the recursion processors multiplied by a quantity extracted from the LLR information of the recursion processors at each iteration. The quality index can be a hard value or a soft value. For the hard value, the quantity is a hard decision of the LLR value. For the soft value, the quantity is the LLR value itself. Optionally, the quality index is an intrinsic signal-to-noise ratio (SNR) of the signal calculated at each iteration. The intrinsic SNR is a function of an initial signal-to-noise ratio added to the quality index added to a summation of the square of the generated extrinsic information at each iteration. However, only the last two terms are useful for the quality index criteria. For this case, there are also hard and soft values for the intrinsic SNR, using the corresponding hard and soft decisions of the quality index just described. This step also includes calculating a local quality index in the same way as above. The local quality index is determined over a subset of the quality index range (e.g. samples 1 through N of the entire frame). The local quality index is related to a moving average of the extrinsic information of the decoders. - A
next step 106 is comparing the local quality index to a predetermined threshold. If the local quality index is greater than or equal to the predetermined threshold then the iterations are allowed to continue. However, if the local quality index is lower than the threshold, then instep 108 those samples are requested to be retransmitted in an attempt to obtain a higher quality signal, and the sample counter is reset so that the iterations can be reset and restarted. - A
next step 110 is terminating the iterations when the measure of the quality index exceeds a predetermined level being higher than the predetermined threshold. Preferably, the terminating step includes the measure of the quality index being a slope of the quality index over the iterations. In practice, the predetermined level is at a knee of the quality index curve approaching its asymptote. More specifically, the predetermined level is set at 0.03 dB of SNR. Anext step 112 is providing an output derived from the soft output of the turbo decoder existing after the terminating step. - While specific components and functions of the turbo decoder for convolutional codes are described above, fewer or additional functions could be employed by one skilled in the art and be within the broad scope of the present invention. The invention should be limited only by the appended claims.
Claims (14)
1. A method of terminating iteration calculations in the decoding of a received convolutionally coded signal using local quality index criteria, the method comprising the steps of:
providing a turbo decoder with two recursion processors connected in an iterative loop, and at least one additional recursion processor coupled in parallel at the inputs of at least one of the recursion processors, all of the recursion processors concurrently performing iteration calculations on the signal;
calculating a local quality index of a moving average of extrinsic information from the at least one recursion processor for each iteration over a portion of the signal;
comparing the local quality index to a predetermined threshold; and
when the local quality index is greater than or equal to the predetermined threshold, continuing iterations, and
when the local quality index is less than the predetermined threshold, requesting a retransmission of the portion of the signal, resetting a frame counter, and continuing at the calculating step.
2. The method of , wherein the first providing step includes the at least one additional recursion processor being a Viterbi decoder, and the two recursion processors are soft-input, soft-output decoders.
claim 1
3. The method of , wherein the first providing step includes two additional processors being coupled in parallel at the inputs of the two recursion processors, respectively.
claim 1
4. The method of , wherein the calculating step includes the local quality index being a summation of generated extrinsic information over a local portion of the signal multiplied by a quantity extracted from the LLR information at each iteration.
claim 1
5. The method of , wherein the calculating step includes calculating a global quality index of the signal in the at least one recursion processor for each iteration over a frame of the signal, and further comprising the steps of
claim 1
terminating the iterations when the measure of the global quality index exceeds a predetermined level being greater than the predetermined threshold; and
providing an output derived from a soft output of the turbo decoder existing after the terminating step.
6. The method of , wherein the calculating step includes the local quality index being a Yamamoto and Itoh type of index calculated at each iteration.
claim 1
7. The method of , wherein the calculating step includes the local quality index being an intrinsic signal-to-noise ratio of the signal calculated at each iteration, the intrinsic signal-to-noise ratio being a function of the local quality index added to a summation of the square of the generated extrinsic information at each iteration.
claim 1
8. A decoder that dynamically terminates iteration calculations in the decoding of a received convolutionally coded signal using local quality index criteria, the decoder comprising:
a turbo decoder with two recursion processors connected in an iterative loop;
at least one additional recursion processor coupled in parallel at the inputs of at least one of the recursion processors, all of the recursion processors perform concurrent iterative calculations on the signal, the at least one additional recursion processor calculates a local quality index of a moving average of extrinsic information for each iteration over a portion of the signal; and
a controller that terminates the iterations when the measure of the local quality index is less than a predetermined threshold, and requests a retransmission of the portion of the signal.
9. The decoder of , wherein the at least one additional recursion processor is a Viterbi decoder, and the two recursion processors are soft-input, soft-output decoders.
claim 8
10. The decoder of , wherein the at least one additional recursion processor includes two additional processors being coupled in parallel at the inputs of the two recursion processors, respectively.
claim 8
11. The decoder of , wherein the local quality index is a summation of generated extrinsic information over a local portion of the signal multiplied by a quantity extracted from the LLR information at each iteration.
claim 8
12. The decoder of , wherein the controller also calculates a global quality index and terminates the iterations when the measure of the global quality index exceeds a predetermined level being greater than the predetermined threshold; and wherein the controller provides an output derived from a soft output of the turbo decoder.
claim 8
13. The decoder of , wherein the local quality index is derived from a Yamamoto and Itoh type of index calculated at each iteration.
claim 8
14. The decoder of , wherein the local quality index is an intrinsic signal-to-noise ratio of the signal calculated at each iteration, the intrinsic signal-to-noise ratio being a function of the quality index added to a summation of the square of the generated extrinsic information at each iteration.
claim 8
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/802,828 US20010052104A1 (en) | 2000-04-20 | 2001-03-09 | Iteration terminating using quality index criteria of turbo codes |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US55364600A | 2000-04-20 | 2000-04-20 | |
US09/802,828 US20010052104A1 (en) | 2000-04-20 | 2001-03-09 | Iteration terminating using quality index criteria of turbo codes |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US55364600A Continuation-In-Part | 2000-04-20 | 2000-04-20 |
Publications (1)
Publication Number | Publication Date |
---|---|
US20010052104A1 true US20010052104A1 (en) | 2001-12-13 |
Family
ID=24210192
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/802,828 Abandoned US20010052104A1 (en) | 2000-04-20 | 2001-03-09 | Iteration terminating using quality index criteria of turbo codes |
Country Status (8)
Country | Link |
---|---|
US (1) | US20010052104A1 (en) |
EP (1) | EP1314254B1 (en) |
KR (1) | KR100512668B1 (en) |
CN (1) | CN1279698C (en) |
AT (1) | ATE330369T1 (en) |
AU (1) | AU2001253295A1 (en) |
DE (1) | DE60120723T2 (en) |
WO (1) | WO2001082486A1 (en) |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020061079A1 (en) * | 2000-11-14 | 2002-05-23 | Interdigital Technology Corporation | Turbo decoder with circular redundancy code signature comparison |
US20020159384A1 (en) * | 2001-04-30 | 2002-10-31 | Classon Brian K. | Apparatus and method for transmitting and receiving data using partial chase combining |
WO2002089331A2 (en) * | 2001-04-30 | 2002-11-07 | Regents Of The University Of Minnesota | Area efficient parallel turbo decoding |
US20030014712A1 (en) * | 2001-07-06 | 2003-01-16 | Takashi Yano | Error correction decoder for turbo code |
US20030182617A1 (en) * | 2002-03-25 | 2003-09-25 | Fujitsu Limited | Data processing apparatus using iterative decoding |
US20040006734A1 (en) * | 2002-06-28 | 2004-01-08 | Interdigital Technology Corporation | Fast H-ARQ acknowledgement generation method using a stopping rule for turbo decoding |
WO2004030266A1 (en) * | 2002-09-24 | 2004-04-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Method and devices for error tolerant data transmission, wherein retransmission of erroneous data is performed up to the point where the remaining number of errors is acceptable |
US20040093548A1 (en) * | 2002-11-04 | 2004-05-13 | Jin-Woo Heo | Method for controlling turbo decoding time in a high-speed packet data communication system |
US20050204260A1 (en) * | 2004-02-27 | 2005-09-15 | Joanneum Research Forschungsgesellschaft Mbh | Method for recovering information from channel-coded data streams |
US20060005100A1 (en) * | 2000-11-14 | 2006-01-05 | Interdigital Technology Corporation | Wireless transmit/receive unit having a turbo decoder with circular redundancy code signature comparison and method |
US7200799B2 (en) | 2001-04-30 | 2007-04-03 | Regents Of The University Of Minnesota | Area efficient parallel turbo decoding |
US20080115031A1 (en) * | 2006-11-14 | 2008-05-15 | Via Telecom Co., Ltd. | Communication signal decoding |
US20090077457A1 (en) * | 2007-09-19 | 2009-03-19 | Rajaram Ramesh | Iterative decoding of blocks with cyclic redundancy checks |
US20100150280A1 (en) * | 2008-12-16 | 2010-06-17 | Gutcher Brian K | METHODS, APPARATUS, AND SYSTEMS FOR UPDATING LOGLIKELIHOOD RATIO INFORMATION IN AN nT IMPLEMENTATION OF A VITERBI DECODER |
US20130132806A1 (en) * | 2011-11-21 | 2013-05-23 | Broadcom Corporation | Convolutional Turbo Code Decoding in Receiver With Iteration Termination Based on Predicted Non-Convergence |
US20130179754A1 (en) * | 2010-09-29 | 2013-07-11 | International Business Machines Corporation | Decoding in solid state memory devices |
US9160373B1 (en) * | 2012-09-24 | 2015-10-13 | Marvell International Ltd. | Systems and methods for joint decoding of sector and track error correction codes |
EP2850766A4 (en) * | 2012-05-14 | 2015-12-09 | Ericsson Telefon Ab L M | Method and apparatus for turbo receiver processing |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6848069B1 (en) * | 1999-08-10 | 2005-01-25 | Intel Corporation | Iterative decoding process |
WO2002067435A1 (en) * | 2001-02-23 | 2002-08-29 | Koninklijke Philips Electronics N.V. | Turbo decoder system comprising parallel decoders |
EP1414158A1 (en) | 2002-10-24 | 2004-04-28 | STMicroelectronics N.V. | Method of decoding an incident turbo-code encoded signal in a receiver, and corresponding receiver, in particular for mobile radio systems |
JP4863519B2 (en) * | 2008-02-14 | 2012-01-25 | シャープ株式会社 | Decoding device, decoding method, decoding program, receiving device, and communication system |
EP2809013B1 (en) | 2013-05-31 | 2017-11-29 | OCT Circuit Technologies International Limited | A radio receiver and a method therein |
KR101713063B1 (en) * | 2014-10-14 | 2017-03-07 | 동국대학교 산학협력단 | Parity frame transmission and decoding method in mult-frame transmission system |
CN104579369B (en) * | 2014-12-18 | 2018-06-15 | 北京思朗科技有限责任公司 | A kind of Turbo iterative decodings method and code translator |
CN106533454B (en) * | 2015-09-14 | 2019-11-05 | 展讯通信（上海）有限公司 | Turbo code decoding iteration control method and device |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956376A (en) * | 1993-11-29 | 1999-09-21 | Murata Mfg. Co., Ltd. | Apparatus for varying a sampling rate in a digital demodulator |
US6222835B1 (en) * | 1997-11-06 | 2001-04-24 | Siemens Aktiengesellschaft | Method and configuration for packet-oriented data transmission in a digital transmission system |
US6581176B1 (en) * | 1998-08-20 | 2003-06-17 | Lg Information & Communications, Ltd. | Method for transmitting control frames and user data frames in mobile radio communication system |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
DE19526416A1 (en) * | 1995-07-19 | 1997-01-23 | Siemens Ag | Method and arrangement for determining an adaptive termination criterion in the iterative decoding of multidimensionally coded information |
-
2001
- 2001-03-09 US US09/802,828 patent/US20010052104A1/en not_active Abandoned
- 2001-04-10 DE DE60120723T patent/DE60120723T2/en not_active Expired - Fee Related
- 2001-04-10 KR KR10-2002-7014115A patent/KR100512668B1/en active IP Right Grant
- 2001-04-10 EP EP01926783A patent/EP1314254B1/en not_active Expired - Lifetime
- 2001-04-10 AU AU2001253295A patent/AU2001253295A1/en not_active Abandoned
- 2001-04-10 WO PCT/US2001/011544 patent/WO2001082486A1/en active IP Right Grant
- 2001-04-10 AT AT01926783T patent/ATE330369T1/en not_active IP Right Cessation
- 2001-04-10 CN CNB018082947A patent/CN1279698C/en not_active Expired - Fee Related
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956376A (en) * | 1993-11-29 | 1999-09-21 | Murata Mfg. Co., Ltd. | Apparatus for varying a sampling rate in a digital demodulator |
US6222835B1 (en) * | 1997-11-06 | 2001-04-24 | Siemens Aktiengesellschaft | Method and configuration for packet-oriented data transmission in a digital transmission system |
US6581176B1 (en) * | 1998-08-20 | 2003-06-17 | Lg Information & Communications, Ltd. | Method for transmitting control frames and user data frames in mobile radio communication system |
Cited By (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6956912B2 (en) * | 2000-11-14 | 2005-10-18 | David Bass | Turbo decoder with circular redundancy code signature comparison |
US8230304B2 (en) | 2000-11-14 | 2012-07-24 | Interdigital Technology Corporation | Wireless transmit/receive unit having a turbo decoder with circular redundancy code signature comparison and method |
US7533320B2 (en) | 2000-11-14 | 2009-05-12 | Interdigital Technology Corporation | Wireless transmit/receive unit having a turbo decoder with circular redundancy code signature comparison and method |
US20080288847A1 (en) * | 2000-11-14 | 2008-11-20 | Interdigital Technology Corporation | Wireless transmit/receive unit having a turbo decoder with circular redundancy code signature comparison and method |
US20020061079A1 (en) * | 2000-11-14 | 2002-05-23 | Interdigital Technology Corporation | Turbo decoder with circular redundancy code signature comparison |
US20060005100A1 (en) * | 2000-11-14 | 2006-01-05 | Interdigital Technology Corporation | Wireless transmit/receive unit having a turbo decoder with circular redundancy code signature comparison and method |
US7289567B2 (en) * | 2001-04-30 | 2007-10-30 | Motorola, Inc. | Apparatus and method for transmitting and receiving data using partial chase combining |
US7200799B2 (en) | 2001-04-30 | 2007-04-03 | Regents Of The University Of Minnesota | Area efficient parallel turbo decoding |
US20020159384A1 (en) * | 2001-04-30 | 2002-10-31 | Classon Brian K. | Apparatus and method for transmitting and receiving data using partial chase combining |
WO2002089331A2 (en) * | 2001-04-30 | 2002-11-07 | Regents Of The University Of Minnesota | Area efficient parallel turbo decoding |
WO2002089331A3 (en) * | 2001-04-30 | 2003-03-06 | Univ Minnesota | Area efficient parallel turbo decoding |
US20030014712A1 (en) * | 2001-07-06 | 2003-01-16 | Takashi Yano | Error correction decoder for turbo code |
US7032163B2 (en) * | 2001-07-06 | 2006-04-18 | Hitachi, Ltd. | Error correction decoder for turbo code |
US20030182617A1 (en) * | 2002-03-25 | 2003-09-25 | Fujitsu Limited | Data processing apparatus using iterative decoding |
US7058878B2 (en) * | 2002-03-25 | 2006-06-06 | Fujitsu Limited | Data processing apparatus using iterative decoding |
US20090094503A1 (en) * | 2002-06-28 | 2009-04-09 | Interdigital Technology Corporation | Fast h-arq acknowledgement generation method using a stopping rule for turbo decoding |
US20040006734A1 (en) * | 2002-06-28 | 2004-01-08 | Interdigital Technology Corporation | Fast H-ARQ acknowledgement generation method using a stopping rule for turbo decoding |
US7831886B2 (en) | 2002-06-28 | 2010-11-09 | Interdigital Technology Corporation | Fast H-ARQ acknowledgement generation method using a stopping rule for turbo decoding |
US20070168830A1 (en) * | 2002-06-28 | 2007-07-19 | Interdigital Technology Corporation | Fast H-ARQ acknowledgement generation method using a stopping rule for turbo decoding |
US7093180B2 (en) * | 2002-06-28 | 2006-08-15 | Interdigital Technology Corporation | Fast H-ARQ acknowledgement generation method using a stopping rule for turbo decoding |
US7467345B2 (en) * | 2002-06-28 | 2008-12-16 | Interdigital Technology Corporation | Fast H-ARQ acknowledgement generation method using a stopping rule for turbo decoding |
US20060168504A1 (en) * | 2002-09-24 | 2006-07-27 | Michael Meyer | Method and devices for error tolerant data transmission, wherein retransmission of erroneous data is performed up to the point where the remaining number of errors is acceptable |
WO2004030266A1 (en) * | 2002-09-24 | 2004-04-08 | Telefonaktiebolaget Lm Ericsson (Publ) | Method and devices for error tolerant data transmission, wherein retransmission of erroneous data is performed up to the point where the remaining number of errors is acceptable |
US7254765B2 (en) | 2002-09-24 | 2007-08-07 | Telefonaktiebolaget Lm Ericsson (Publ) | Method and devices for error tolerant data transmission, wherein retransmission of erroneous data is performed up to the point where the remaining number of errors is acceptable |
US7225384B2 (en) * | 2002-11-04 | 2007-05-29 | Samsung Electronics Co., Ltd. | Method for controlling turbo decoding time in a high-speed packet data communication system |
US20040093548A1 (en) * | 2002-11-04 | 2004-05-13 | Jin-Woo Heo | Method for controlling turbo decoding time in a high-speed packet data communication system |
US20050204260A1 (en) * | 2004-02-27 | 2005-09-15 | Joanneum Research Forschungsgesellschaft Mbh | Method for recovering information from channel-coded data streams |
US7725798B2 (en) * | 2004-02-27 | 2010-05-25 | Joanneum Research Forschungsgesellschaft Mbh | Method for recovering information from channel-coded data streams |
US20080115031A1 (en) * | 2006-11-14 | 2008-05-15 | Via Telecom Co., Ltd. | Communication signal decoding |
US8024644B2 (en) * | 2006-11-14 | 2011-09-20 | Via Telecom Co., Ltd. | Communication signal decoding |
US8527843B2 (en) | 2007-09-19 | 2013-09-03 | Telefonaktiebolaget L M Ericsson (Publ) | Iterative decoding of blocks with cyclic redundancy checks |
US20090077457A1 (en) * | 2007-09-19 | 2009-03-19 | Rajaram Ramesh | Iterative decoding of blocks with cyclic redundancy checks |
US9197246B2 (en) * | 2007-09-19 | 2015-11-24 | Optis Cellular Technology, Llc | Iterative decoding of blocks with cyclic redundancy checks |
US20130311858A1 (en) * | 2007-09-19 | 2013-11-21 | Telefonaktiebolaget L M Ericsson (Publ) | Iterative decoding of blocks with cyclic redundancy checks |
US20100150280A1 (en) * | 2008-12-16 | 2010-06-17 | Gutcher Brian K | METHODS, APPARATUS, AND SYSTEMS FOR UPDATING LOGLIKELIHOOD RATIO INFORMATION IN AN nT IMPLEMENTATION OF A VITERBI DECODER |
US8413031B2 (en) * | 2008-12-16 | 2013-04-02 | Lsi Corporation | Methods, apparatus, and systems for updating loglikelihood ratio information in an nT implementation of a Viterbi decoder |
US20130179754A1 (en) * | 2010-09-29 | 2013-07-11 | International Business Machines Corporation | Decoding in solid state memory devices |
US9176814B2 (en) * | 2010-09-29 | 2015-11-03 | International Business Machines Corporation | Decoding in solid state memory devices |
US20130132806A1 (en) * | 2011-11-21 | 2013-05-23 | Broadcom Corporation | Convolutional Turbo Code Decoding in Receiver With Iteration Termination Based on Predicted Non-Convergence |
EP2850766A4 (en) * | 2012-05-14 | 2015-12-09 | Ericsson Telefon Ab L M | Method and apparatus for turbo receiver processing |
US9160373B1 (en) * | 2012-09-24 | 2015-10-13 | Marvell International Ltd. | Systems and methods for joint decoding of sector and track error correction codes |
US9214964B1 (en) | 2012-09-24 | 2015-12-15 | Marvell International Ltd. | Systems and methods for configuring product codes for error correction in a hard disk drive |
US9490849B1 (en) | 2012-09-24 | 2016-11-08 | Marvell International Ltd. | Systems and methods for configuring product codes for error correction in a hard disk drive |
Also Published As
Publication number | Publication date |
---|---|
DE60120723T2 (en) | 2007-06-14 |
ATE330369T1 (en) | 2006-07-15 |
KR100512668B1 (en) | 2005-09-07 |
EP1314254A1 (en) | 2003-05-28 |
KR20030058935A (en) | 2003-07-07 |
EP1314254A4 (en) | 2004-06-30 |
CN1461528A (en) | 2003-12-10 |
AU2001253295A1 (en) | 2001-11-07 |
EP1314254B1 (en) | 2006-06-14 |
CN1279698C (en) | 2006-10-11 |
DE60120723D1 (en) | 2006-07-27 |
WO2001082486A1 (en) | 2001-11-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20010052104A1 (en) | Iteration terminating using quality index criteria of turbo codes | |
US6738948B2 (en) | Iteration terminating using quality index criteria of turbo codes | |
US6829313B1 (en) | Sliding window turbo decoder | |
US6885711B2 (en) | Turbo decoder with multiple scale selections | |
US6671852B1 (en) | Syndrome assisted iterative decoder for turbo codes | |
US6510536B1 (en) | Reduced-complexity max-log-APP decoders and related turbo decoders | |
US6393076B1 (en) | Decoding of turbo codes using data scaling | |
US20040205445A1 (en) | Turbo decoder employing simplified log-map decoding | |
US20040005019A1 (en) | Turbo decoder employing max and max* map decoding | |
US20040260995A1 (en) | Apparatus and method for turbo decoder termination | |
EP1518327A1 (en) | A fast h-arq acknowledgement generation method using a stopping rule for turbo decoding | |
US6452979B1 (en) | Soft output decoder for convolutional codes | |
US7391826B2 (en) | Decoding method and apparatus | |
US7027521B2 (en) | Digital transmission method of the error correcting coding type | |
JP2001267936A (en) | Soft decision output decoder for convolution coding | |
US20040151259A1 (en) | Method of decoding a turbo-code encoded signal in a receiver and corresponding receiver | |
US6513140B2 (en) | Method and device for decoding convolutional codes | |
US7272771B2 (en) | Noise and quality detector for use with turbo coded signals | |
EP1280280A1 (en) | Method and apparatus for reducing the average number of iterations in iterative decoding | |
US20030101402A1 (en) | Hard-output iterative decoder | |
US7031406B1 (en) | Information processing using a soft output Viterbi algorithm | |
Claussen et al. | Improved max-log-MAP turbo decoding by maximization of mutual information transfer | |
US20040111659A1 (en) | Turbo decoder using parallel processing | |
Haffane et al. | Convergence analysis of the unpunctured turbo trellis-coded modulation (UTTCM) | |
Zhang et al. | Research and improvement on stopping criterion of Turbo iterative decoding |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:XU, SHUZHAN J.;STARK, WAYNE;REEL/FRAME:011613/0552Effective date: 20010305 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:035464/0012Effective date: 20141028 |
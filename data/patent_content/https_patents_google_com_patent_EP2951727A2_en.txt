EP2951727A2 - Character and word level language models for out-of-vocabulary text input - Google Patents
Character and word level language models for out-of-vocabulary text inputInfo
- Publication number
- EP2951727A2 EP2951727A2 EP14704208.9A EP14704208A EP2951727A2 EP 2951727 A2 EP2951727 A2 EP 2951727A2 EP 14704208 A EP14704208 A EP 14704208A EP 2951727 A2 EP2951727 A2 EP 2951727A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- candidate
- string
- strings
- character
- computing device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Withdrawn
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/274—Converting codes to words; Guess-ahead of partial word inputs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/02—Input arrangements using manually operated switches, e.g. using keyboards or dials
- G06F3/023—Arrangements for converting discrete items of information into a coded form, e.g. arrangements for interpreting keyboard generated codes as alphanumeric codes, operand codes or instruction codes
- G06F3/0233—Character input methods
- G06F3/0237—Character input methods using prediction or retrieval techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0487—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser
- G06F3/0488—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser using a touch-screen or digitiser, e.g. input of commands through traced gestures
- G06F3/04886—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser using a touch-screen or digitiser, e.g. input of commands through traced gestures by partitioning the display area of the touch-screen or the surface of the digitising tablet into independently controllable areas, e.g. virtual keyboards or menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/232—Orthographic correction, e.g. spell checking or vowelisation
Definitions
- Some computing devices may provide a graphical keyboard as part of a graphical user interface for composing text using a presence-sensitive display (e.g., a screen).
- the graphical keyboard may enable a user of the computing device to enter text (e.g., an e-mail, a text message, or a document, etc.).
- a presence-sensitive display of a computing device may output a graphical (or "soft") keyboard that enables the user to enter data by indicating (e.g., by tapping) keys displayed at the presence-sensitive display.
- a computing device may present a continuous-gesture graphical keyboard (sometimes referred to as a "combo gesture keyboard,” or “gesture keyboard”) with which a user can interact by inputting a continuous gesture that indicates a word to be input to the computing device (e.g., by sliding his or her finger over various regions of the presence-sensitive screen associated with desired keys of the keyboard).
- a continuous-gesture graphical keyboard allows a user to enter a word or group of words with a single gesture.
- a continuous-gesture graphical keyboard may allow the user to achieve a certain degree of input efficiency.
- a computing device may determine that an entered word is not in a lexicon for a language and may attempt to identify a word that the user meant to enter. The computing device may then
- the lexicon may not include the word “Raton” but the user may intend to input the word “Raton” as part of the name of the city “Boca Raton.”
- the computing device may automatically correct the word "Raton” with a word that is in the lexicon, such as "ration.” Replacement of a correctly-entered word that is not in the lexicon with incorrect words that are in the lexicon may lead to user frustration.
- the user may misspell an out-of-lexicon word.
- the user may misspell the word “Raton” as the character string “Rqton.”
- the computing device may automatically replace “Rqton” with an in-lexicon word, such as "ration.” This may lead to user frustration because the user may be forced to delete the replacement in-lexicon word and re-type the desired word.
- this disclosure describes a method that comprises determining, by a computing device, respective scores for a first set of candidate strings. Each score for each respective candidate string from the first set of candidate strings is based at least in part on a probability of the respective character string from the first set of candidate strings being entered. The method also comprises determining, by the computing device, respective scores for a second set of candidate strings. Each score for each respective candidate string from the second set of candidate strings is based at least in part on respective probabilities of characters in the respective candidate string from the second set of candidate strings being entered. In addition, the method comprises selecting, by the computing device and based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings. Furthermore, the method comprises outputting, by the computing device, the selected candidate string for display at a display device.
- this disclosure describes a computing device comprising one or more processors configured to determine respective scores for a first set of candidate strings. Each respective candidate string from the first set of candidate strings is based at least in part on locations indicated by indications of user input and a probability of the respective character string occurring, given one or more words that precede the respective character string from the first set of candidate strings.
- the one or more processors are also configured to determine scores for a second set of candidate strings. For each respective candidate string from the second set of candidate strings, the score associated with the respective candidate string is based at least in part on the locations indicated by the indications of user input and on respective probabilities of characters in the respective candidate string being entered.
- the one or more processors are configured to select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings.
- the one or more processors are also configured to output the selected candidate string for display at a display device.
- a computer-readable storage medium comprises instructions that, when executed by one or more processors of a computing device, cause the computing device to determine respective scores for a first set of candidate strings.
- a lexicon includes each candidate string from the first set of candidate strings and each respective candidate string from the first set of candidate strings is based at least in part on locations indicated by indications of user input and a probability of the respective candidate string being entered, given one or more words that precede the respective character string.
- the instructions also cause the computing device to determine respective scores for a second set of candidate strings.
- the lexicon does not include each candidate string from the second set of candidate strings and each respective candidate string from the second set of candidate strings is based at least in part on one or more of the locations indicated by the indications of user input and probabilities of respective characters in the respective candidate string from the second set of candidate string being entered, given one or more characters that precede the respective characters.
- the respective scores for the candidate strings from the second set of candidate strings are not based on probabilities of the respective candidate strings being entered.
- the instructions also cause the computing device to rank, based at least in part on the scores for the first and second sets of candidate strings, the respective candidate strings from the first and second sets of candidate strings.
- the instructions cause the computing device to select, based at least in part on the respective scores for the first and second sets of candidate strings, a highest-ranked candidate string from among the first and second sets of candidate strings. Furthermore, the instructions cause the computing device to output the highest-ranked candidate string for display at a display device.
- FIG. 1 is a conceptual diagram illustrating an example computing device in accordance with one or more aspects of the present disclosure.
- FIG. 2 is a block diagram illustrating an example computing device, in accordance with one or more aspects of the present disclosure.
- FIG. 3 is a block diagram illustrating an example in which a computing device outputs graphical content for display at a remote display device, in accordance with one or more aspects of the present disclosure.
- FIG. 4 is a block diagram illustrating an example decoder module, in accordance with one or more aspects of the present disclosure.
- FIG. 5 is a conceptual diagram illustrating an example misspelling of an out-of- lexicon word and replacement suggestions, in accordance with one or more aspects of the present disclosure.
- FIG. 6 is a flowchart illustrating an example operation of an input method editor (IME) module, in accordance with one or more aspects of the present disclosure.
- IME input method editor
- FIG. 7 is a conceptual diagram illustrating an example lexicon finite state transducer (FST), in accordance with one or more aspects of the present disclosure.
- FIG. 8 A and 8B are flowcharts illustrating an example operation of the computing device for determining scores for a set of in-lexicon character strings, in accordance with one or more aspects of the present disclosure.
- FIG. 9 is a conceptual diagram illustrating an example character-level finite state transducer (FST), in accordance with one or more aspects of the present disclosure.
- FST character-level finite state transducer
- FIG. 10 is a flowchart illustrating an example operation of the computing device for determining scores for a set of out-of-lexicon character strings, in accordance with one or more aspects of the present disclosure.
- FIG. 11 is a flowchart illustrating an example operation of the computing device for generating a combined set of candidate strings, in accordance with one or more aspects of the present disclosure.
- FIG. 12 is a flowchart that illustrates another example operation of a computing device, in accordance with one or more aspects of the present disclosure.
- a computing device may receive indications of user input (i.e. user input indications).
- the user input indications may correspond to points (i.e., locations) on a virtual keyboard at which a user interface device detected the presence of an input object, such as a finger or stylus.
- the virtual keyboard may include an array of virtual keys.
- the computing device may determine a character string that corresponds to the user input indications.
- the computing device may output the determined character string for display at a display device.
- the computing device may use a lexicon that includes a plurality of character strings, such as words.
- the computing device may determine, based at least in part on the locations indicated by the user input indications and word-level language model (LM) scores for the character strings of the lexicon, scores for character strings in the lexicon.
- the word-level LM score for a character string may be based on a probability of the character string occurring (i.e., being entered) in a particular language, given up to a particular number of character strings (e.g., words) that precede the character string.
- the computing device may select, based on the scores of the character strings, one of the character strings and output the selected character string for display.
- the characters of the selected character string may not necessarily match the characters that correspond to virtual keys at which the presence of the input object was detected.
- the user input indications may correspond to the characters "Munneapolis," which is not a character string in the lexicon.
- the computing device may determine that the in-lexicon character string with the highest probability is
- the computing device may output, for display, the character string "Minneapolis.”
- the computing device may output, for display, an out-of-lexicon character string.
- the out-of-lexicon character string may be a character string that is not in the lexicon.
- the characters of the out-of-lexicon character string may match the characters that correspond to virtual keys at which the presence of the input object was detected.
- the user input indications may indicate that the input object was detected at virtual keys that correspond to the characters "Shinjuku," the name of a district in Tokyo, Japan.
- "Shinjuku” is an out-of-lexicon character string and none of the in-lexicon character strings have probabilities that exceed the particular threshold. Accordingly, the computing device may output, for display, the character string "Shinjuku.”
- the user may intend to input an out-of-lexicon character string, but the score of an in-lexicon character string is greater than (or in some examples less than) the particular threshold.
- the computing device may output an in- lexicon character string that is not the character string desired by the user.
- the user input indications may indicate the presence of the input object at virtual keys that correspond to the characters "Raton,” as in "Boca Raton," a city in Florida.
- the character string “Raton” is not in the lexicon, but the character string “ration” is in the lexicon and the score of the character string “ration” may be greater than the particular threshold.
- the computing device may output, for display, the character string “ration” instead of the desired character string "Raton.” This may cause user frustration.
- the user may misspell an out-of-lexicon character string.
- the computing device may be configured to receive text input in the English language.
- the user input indications may indicate the presence of the input object at virtual keys that correspond to the characters "Ratpn,” when the user intended to input the character string "Raton.”
- "Raton” is assumed to be an out-of-lexicon character string.
- the computing device may output the character string "Ratpn,” despite the fact that the character combination "tpn" is very uncommon in the English language. The user may then be forced to edit the displayed character string.
- the techniques of this disclosure may increase the efficiency of entering text on a virtual keyboard.
- the computing device may determine scores for a first set of candidate strings.
- a lexicon may include each candidate string in the first set of candidate strings.
- the score for the respective candidate string is based at least in part on a probability of the respective character string being entered.
- the computing device may determine scores for a second set of candidate strings. The lexicon does not necessarily include each candidate string from the second set of candidate strings.
- the second set of candidate strings may include candidate strings that are not in the lexicon.
- the score for the respective candidate string is based at least in part on respective probabilities of characters in the respective candidate string being entered.
- the computing device may select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings.
- the computing device may output the selected candidate string for display at a display device. Because the computing device selects the candidate string from among the first and second sets of candidate strings, the computing device may be able to output a desired out-of-lexicon character string. Furthermore, the computing device may be able to correct for typographical errors in the out-of-lexicon character strings.
- FIG. 1 is a conceptual diagram illustrating an example computing device 2 in accordance with one or more techniques of this disclosure.
- Computing device 2 may be various types of computing devices.
- computing device 2 may be a mobile device, such as a mobile telephone, a tablet computer, a notebook or laptop computer, a personal media player, a portable gaming device, or another type of computing device designed for mobility.
- computing device 2 may be other types of computing devices, such as desktop computers, point of sale devices, televisions, gambling devices, appliances, in-car computers, and other types of computing devices.
- the term "computing device” may refer to a set of one or more integrated circuits, such as microprocessors, chipsets, and so on.
- computing device 2 includes at least one user interface (UI) device 4.
- UI device 4 may display graphical data and may detect the presence of one or more input objects, such as fingers or styli. Because UI device 4 may display graphical data and may detect the presence of one or more input objects, UI device 4 may be referred to as a presence-sensitive display device.
- UI device 4 may be implemented using various technologies. For example, UI device 4 may be implemented using a resistive touchscreen, a surface acoustic wave touchscreen, a capacitive touchscreen, a projective capacitance touchscreen, an acoustic pulse recognition touchscreen, or another touchscreen technology.
- UI device 4 may be able to detect the presence of an input object without the input object physically touching UI device 4. Rather, in such examples, UI device 4 may be able to detect the presence of the input object when the input object is within a particular space.
- UI device 4 may be operatively coupled to computing device 2 in various ways.
- UI device 4 may be integrated into a housing of computing device 2 and may be connected to computing device 2 via one or more internal connectors.
- UI device 4 may be external to a housing of computing device 2 and may communicate with computing device 2 via one or more external cables and/or
- UI device 4 is a presence-sensitive display device
- the techniques of this disclosure are not so limited.
- UI device 4 may be a display device that does not detect the presence of input objects.
- another device e.g., one or more cameras, motion sensors, and/or other types of sensors
- the techniques of this disclosure may be applicable to text input using physical (i.e., nonvirtual) keyboards.
- GUI 10 graphical user interface
- a GUI may be a type of user interface that allows a user to use images to interact with a computing device.
- GUI 10 may include a virtual keyboard 12.
- Virtual keyboard 12 may include a set of virtual keys. At least some of the virtual keys are associated with one or more characters.
- GUI 10 may include a text display area 14.
- Computing device 2 may output text 16 for display in text display area 14 in response to indications of user input at virtual keyboard 12.
- text display area 14 may include a cursor 18 that indicates an insertion point within text 16.
- Computing device 2 may insert characters at the insertion point or delete characters adjacent to the input point indicated by cursor 18.
- GUI 10 may include a set of suggestion elements 20A-20C (collectively, "suggestion elements 20").
- Computing device 2 may include an input method editor (IME) module 6.
- IME module 6 may receive indications of user input (i.e., user input indications).
- the user input indications may comprise data that indicate user input received by computing device 2 or another device.
- IME module 6 may receive various types of user input indications. For example, IME module 6 may receive user input indications that indicate presses and releases of keys on a physical keyboard. In another example, IME module 6 may receive user input indications that indicate tapping gestures at virtual keys on a virtual (e.g., onscreen) keyboard, such as virtual keyboard 12.
- the indications of user input may include indications of tapping gestures at portions of a display device (e.g., UI device 4) that display virtual keys associated with characters. In another example, IME module 6 may receive user input indications that indicate sliding gestures on a portion of a display device (e.g., UI device 4) that displays a virtual keyboard, such as virtual keyboard 12.
- IME module 6 may determine that the user input indications correspond to strings of one or more characters (i.e., character strings). In various examples, IME module 6 may determine that the user input indications correspond to character strings that match words in various languages, such as English, Russian, French, Japanese, Korean, Chinese, Hindi, Arabic, and so on.
- computing device 2 also includes application module(s) 8A-8N (collectively, "application module(s) 8"). Execution of instructions in application module(s) 8 may cause computing device 2 to provide various applications (e.g., "apps"). In some examples, IME module 6 may output the character strings determined by IME module 6 to one or more of application module(s) 8.
- IME module 6 may determine word-level scores for a set of in-lexicon candidate strings. For each respective in-lexicon candidate string, IME module 6 may determine the word- level score for the respective in-lexicon candidate string based at least in part on locations indicated by the one or more user input indications and based at least in part on a probability of the respective in-lexicon candidate string occurring (e.g., being received as user input). In other words, the probability of a character being entered may be based at least in part on a word-level language model.
- Each of the in-lexicon candidate strings may be a character string in lexicon 7.
- Lexicon 7 may include character strings, such as words, in a particular language, such as English, French, German, Mandarin, Japanese, etc.
- IME module 6 may also determine, based at least in part on the one or more user input indications, character-level scores for a set of out-of-lexicon candidate strings.
- the out-of-lexicon candidate strings are not necessarily in lexicon 7.
- lexicon 7 does not necessarily include each of the out-of-lexicon candidate strings.
- one or more of the out-of- lexicon candidate strings may be in lexicon 7 and one or more of the out-of-lexicon candidate strings may not be in lexicon 7.
- the character-level score for the respective candidate string is based at least in part on respective probabilities of characters in the respective candidate string being entered.
- the probability of the character being entered is based at least in part on one or more characters that precede the character.
- the probability of a character being entered may be based at least in part on a character-level language model.
- a character-level score of an out-of-lexicon candidate string may be correlated with the probability of the combination of characters within the out-of-lexicon candidate string occurring in the language of lexicon 7.
- IME module 6 may assign a higher character-level score to the out-of-lexicon character string “Raton” than to the out-of-lexicon character string "Ratpn,” even though the user input indications may indicate locations on virtual keyboard 12 closed to the characters "Ratpn.”
- at least one of the indications of the user input may indicate a location (i.e., the virtual key associated with the character "p") that does not correspond to a virtual key associated with a character in the selected character string (i.e., the character "o").
- the score for a character may be based at least in part on a probability of the character occurring, given up to n characters that precede the character in a character string, where n is a non-negative integer.
- the score of the character "s" may be relatively low if the character "s" is immediately preceded by a word delimiter (e.g., space) and the character "g.” In other words, in this example, it's unlikely that a character string starts with the characters "gs.”
- the score of the character "a” may be relatively high compared to the character "s” if the preceding characters are a word delimiter and the character "g.” That is because many words in the English language start with the characters "ga.”
- IME module 6 may select one or more of the candidate strings from the set of in-lexicon candidate strings and the set of out-of-lexicon candidate strings. In some examples, IME module 6 may select the portion of the candidate strings based at least in part on the language-level scores for the in-lexicon candidate strings and the character-level scores for the out-of-lexicon candidate strings. For instance, IME module 6 may rank the in-lexicon and out-of-lexicon candidate strings based at least in part on the scores for the in-lexicon and out-of-lexicon candidate strings.
- IME module 6 may select the portion of the candidate strings based on one or more additional factors, such as whether certain candidate strings are blacklisted or whitelisted. After selecting the portion of the candidate strings, IME module 6 may populate the selected candidate strings into suggestion elements 20. As illustrated in FIG. 1, IME module 6 may populate the candidate strings "Raton,” “Rayon” and “Ration” into suggestion elements 20.
- IME module 6 may receive a user input indication that corresponds to a user selection of one of suggestion elements 20. In response, IME module 6 may determine a relevant character string for a candidate string in the selected suggestion element. The relevant character string may be a string of characters in text 16. IME module 6 may then replace the relevant character string with the candidate string in the selected suggestion element. For example, if IME module 6 receives a user input indication that corresponds to a user selection of suggestion element 20C in configuration 10A of GUI 10, computing device 2 may replace the character string "Raton" with the candidate string "Ration.” In some examples, the relevant character string may include the characters of a word adjacent to cursor 18. Furthermore, in some instances, the relevant character string may include one or more words that precede cursor 18.
- IME module 6 may select, based at least in part on the scores for the in-lexicon and out-of-lexicon sets of candidate strings, a plurality of candidate strings from among the in-lexicon and out-of-lexicon sets of candidate strings. Furthermore, IME module 6 may output, for display at UI device 4, the plurality of candidate strings (e.g., in suggestion elements 20). IME module 6 may determine that an indication of user input corresponds to a selection of a particular candidate string from the plurality of candidate strings. IME module 6 may output, for display at UI device 4, the particular candidate string in an active text area of a GUI 10.
- computing device 2 does not receive a user input indication that corresponds to a user selection of one of suggestion elements 20. Rather, after determining that a series of user input indications corresponds to a particular character string, IME module 6 may determine that a subsequent user input indication corresponds to a word delimiter.
- Example word delimiters may include space characters, period marks, question marks, commas, semi-colons, quotation marks, exclamation marks, return characters, the beginning of the text, and so on.
- IME module 6 may determine that a subsequent user input indication corresponds to a word delimiter if the subsequent user input indication indicates a gesture (e.g., a tapping or sliding gesture) to move cursor 18 to a different location within text display area 14.
- IME module 6 may determine a top-ranked candidate string. In addition, IME module 6 may determine the relevant character string for the top-ranked candidate string. IME module 6 may determine, based at least in part on a comparison of the score (i.e., the word-level score or character-level score) of the top-ranked candidate string and an auto-replacement threshold, whether to automatically replace the relevant character string with the top-ranked candidate string. For example, if the score for the top-ranked candidate string is above an auto-replacement threshold, IME module 6 may automatically replace the relevant character string for the top-ranked candidate string with the top-ranked candidate string.
- the score i.e., the word-level score or character-level score
- IME module 6 may automatically replace the relevant character string with the top-ranked candidate string when the user inputs a word delimiter, such as a space character. That is, IME module 6 may output, for display at the UI device 4, the selected candidate string in place of another already-displayed character string.
- a word delimiter such as a space character.
- computing device 2 may determine scores for a first set of candidate strings.
- a lexicon includes each candidate string from the first set of candidate strings.
- the score for the respective candidate string may be based at least in part on a probability of the respective character string being entered.
- computing device 2 may determine scores for a second set of candidate strings.
- the lexicon does not necessarily include each candidate string from the second set of candidate strings.
- the score for the respective candidate string is based at least in part on respective probabilities of characters in the respective candidate string being entered.
- Computing device 2 may select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings. Furthermore, computing device 2 may output the selected candidate string for display at a display device, such as UI device 4.
- Computing device 2 may determine scores for candidate strings, select candidate strings, and output candidate strings incrementally in response to indications of user input. For example, computing device 2 may update the scores for the candidate strings incrementally with each subsequent key tap, building upon the top-ranked candidate strings from the previous iteration. For instance, in response to an indication of an additional indication of user input, computing device 2 may re-determine the scores for the first set of candidate strings. Moreover, computing device 2 may re-determine the scores for the second set of candidate strings. Computing device 2 may re-select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings. Furthermore, computing device 2 may output the re-selected candidate string for display at the display device.
- FIG. 2 is a block diagram illustrating an example configuration of computing device 2, in accordance with one or more aspects of this disclosure. For purposes of illustration, the discussion of FIG. 2 and the following figures includes continued references to FIG. 1. However, the techniques of this disclosure are not so limited. FIG. 2 illustrates only one particular example of computing device 2, and many other example configurations of computing device 2 exist.
- computing device 2 includes one or more processors 30, one or more input devices 32, one or more communication units 34, one or more output devices 36, one or more storage devices 38, one or more communication channels 40, and UI device 4.
- Computing device 2 may include many other components.
- computing device 2 may include physical buttons, microphones, speakers, communication ports, and so on.
- Communication channels 40 may interconnect each of the components 30, 32, 34, 36, 38, and 4 for inter-component communications (physically, communicatively, and/or operatively).
- communication channel(s) 40 may include a system bus, a network connection, an inter-process communication data structure, or any other method for communicating data.
- One or more storage device(s) 38 within computing device 2 may store information required for use during operation of computing device 2.
- Storage device(s) 38 in some examples, have the primary purpose of being a short term and not a long-term computer-readable storage medium.
- Storage device(s) 38 may be volatile memory and may therefore not retain stored contents if powered off. Examples of volatile memories may include random access memories (RAM), dynamic random access memories (DRAM), static random access memories (SRAM), and other forms of volatile memories known in the art.
- RAM random access memories
- DRAM dynamic random access memories
- SRAM static random access memories
- Storage devices 38 may further be configured for long-term storage of information as non-volatile memory space and retain information after power on/off cycles.
- non-volatile memory configurations may include magnetic hard discs, optical discs, floppy discs, flash memories, or forms of electrically programmable memories (EPROM) or electrically erasable and programmable (EEPROM) memories.
- processor(s) 30 on computing device 2 read and may execute instructions stored by storage device(s) 38.
- Computing device 2 may include one or more input device(s) 32 that computing device 2 uses to receive user input. Examples of user input include tactile, audio, and video user input. Input device(s) 32 may include presence-sensitive screens, touch- sensitive screens, mice, keyboards, voice responsive systems, video cameras,
- Communication unit(s) 34 may enable computing device 2 to send data on and receive data from a communications network, such as a local area network or the Internet.
- communication unit(s) 34 may include wireless transmitters and receivers that enable computing device 2 to communicate wirelessly with the
- Examples of communication unit(s) 34 may include network interface cards, Ethernet cards, optical transceivers, radio frequency transceivers, or other types of devices that are able to send and receive information.
- Other examples of such communication units may include Bluetooth, 3G, and WiFi radios, Universal Serial Bus (USB) interfaces, etc.
- Output device(s) 36 may generate output. Examples of output include tactile, audio, and video output. Output device(s) 36 may include presence-sensitive screens, sound cards, video graphics adapter cards, speakers, cathode ray tube (CRT) monitors, liquid crystal displays (LCD), or other types of devices for generating output.
- output include tactile, audio, and video output.
- Output device(s) 36 may include presence-sensitive screens, sound cards, video graphics adapter cards, speakers, cathode ray tube (CRT) monitors, liquid crystal displays (LCD), or other types of devices for generating output.
- CTR cathode ray tube
- LCD liquid crystal displays
- Processor(s) 30 may read instructions from storage device(s) 38 and may execute instructions stored by storage device(s) 38. Execution of the instructions by processors 30 may configure or cause computing device 2 to provide at least some of the
- storage device(s) 38 include computer-readable instructions associated with operating system 44, IME module 6, and application modules 8A-8N. Execution of instructions associated with operating system 44 may cause computing device 2 to perform various functions to manage hardware resources of computing device 2 and to provide various common services for other computer programs. Execution of instructions associated with application modules 8 may cause computing device 2 to provide various applications (e.g., "apps").
- applications e.g., "apps"
- IME module 6 includes a decoder module 46, an auto- replacement module 48, a suggestion module 50, and lexicon 7. Execution of instructions in these modules may cause computing device 2 to provide the functionality ascribed in this disclosure to these modules.
- Decoder module 46 may receive user input indications from operating system 44.
- the user input indications may be indications of user inputs received by UI device 4, input device(s) 32, and/or other devices.
- the user input indications may include touchdown indications, lift-off indications, movement indications, and/or indications of other types of user inputs.
- a touch-down indication may indicate that UI device 4 has detected the presence of an input object at a particular location.
- a lift-off indication may indicate that UI device 4 is no longer able to detect the presence of an input object or may indicate that an input object has moved away from an applicable surface or plane.
- a movement indication may indicate a movement of an input object on an applicable surface or plane, such as UI device 4.
- Decoder module 46 may determine that a tapping gesture has occurred if a touchdown indication occurs for an input object, followed by a lift-off indication for the input object without a significant intervening movement indication for the input object.
- Decoder module 46 may determine that a sliding gesture has occurred if a touch-down indication occurs for an input object, followed by a movement indication for the input object, followed by a lift-off indication for the input object. Furthermore, if one of input device(s) 32 is a physical keyboard, the user input indications may include key up and key down indications that correspond to the pressing and releasing of various keys of the physical keyboard.
- Decoder module 46 may determine, based at least in part on a series of one or more user input indications, a set of one or more character strings. Decoder module 46 may perform various operations to determine the set of one or more character strings. In accordance with the techniques of this disclosure, decoder module 46 may determine the set of one or more character strings by determining scores for character strings in a set of in-lexicon candidate strings and scores for character strings in a set of out-of-lexicon candidate strings.
- the score for an in-lexicon candidate string may be based at least in part on one or more of the locations indicated by the user input indications.
- the score for an in-lexicon candidate string may be based at least in part on the probability of the in- lexicon candidate string occurring in a particular language, given up to n words that precede the in-lexicon candidate string.
- the value n may be a non-negative integer, such as 0, 1, 2, 3, etc.
- the score for an in-lexicon candidate string may be affected by the word-level context of the in-lexicon candidate string.
- the score for an out-of-lexicon candidate string may be based at least in part on one or more of the locations indicated by the user input indications.
- the score for an out-of-lexicon candidate string may be based at least in part on probability scores for characters in the out-of-lexicon candidate string.
- the probability score for a character may be based on the probability of the character occurring in a particular language, given up to n characters that precede the character, where n is a non-negative integer.
- the score for the out-of-lexicon candidate string is not affected by the word- level context of the out-of-lexicon candidate string.
- the scores for the set of out-of-lexicon candidate strings are not based on word-level probabilities.
- Decoder module 46 may determine the in-lexicon candidate strings, the out-of- lexicon candidate strings, and their scores in various ways. For example, decoder module 46 may use a lexicon finite state transducer (FST) to determine the in-lexicon candidate strings and their scores. Decoder module 46 may use a different, character-level FST to determine the out-of-lexicon candidate strings and their scores.
- FIGS. 7, 8 A, 8B, 9 and 10, described in detail below, illustrate example operations that may determine the candidate strings and their scores using FSTs.
- auto-replacement module 48 may determine, in response to decoder module 46 determining that a user input indication corresponds to a word delimiter, a top-ranked candidate string. In other words, auto-replacement module 48 may select the top-ranked candidate string.
- the top-ranked candidate string may be the candidate string with a lowest replacement score. In other examples, the top-ranked candidate string may be the candidate string with a highest replacement score.
- auto-replacement module 48 may replace, based at least in part on a comparison of a replacement score of a candidate string and an auto-replacement threshold, the relevant string with the top-ranked candidate string. In some examples, auto-replacement module 48 may determine whether the replacement score for the top- ranked candidate string is lower than an auto-replacement threshold. In response to determining that the replacement score for the top-ranked candidate string is less than the auto-replacement threshold, auto-replacement module 48 may output, for display at UI device 4, the top-ranked candidate string in place of the relevant character string for the top-ranked candidate string.
- suggestion module 50 may select, based at least in part on the scores of the candidate strings, at least a portion of the candidate strings. Suggestion module 50 may then output the selected candidate strings in suggestion elements 20. In other words, suggestion module 50 may populate the selected candidate strings into suggestion elements 20.
- decoder module 46 may determine a set of candidate strings for auto-replacement and a separate set of candidate strings for use in populating suggestion elements 20. Furthermore, in some examples, decoder module 46 may determine a set of scores for auto-replacement and a separate set of scores for use in populating suggestion elements 20.
- Suggestion module 50 may determine, based at least in part on one or more user input indications, that a user has selected one of suggestion elements 20. In response, suggestion module 50 may replace, at UI device 4, a portion of the displayed text with the candidate string associated with the selected suggestion element. For instance, suggestion module 50 may replace one or more words with the selected suggestion element's candidate string.
- FIG. 3 is a block diagram illustrating an example in which computing device 2 outputs graphical content for display at a remote display device, in accordance with one or more techniques of the present disclosure.
- Graphical content generally, may include any visual information that may be output for display, such as text, images, a group of moving images, etc.
- the example of FIG. 3 includes computing device 2.
- computing device 2 may be a component or system that includes a processor or other suitable computing environment for executing software instructions and, for example, need not include a presence-sensitive display.
- Computing device 2 may include one or more processors (e.g., one or more microprocessor or other types of integrated circuits), a smartphone, a tablet computer, a personal computer, or another type of computing device that is configured to perform one or more techniques of this disclosure.
- FIG. 3 also illustrates a projector 120 and a projection screen 122.
- projection devices may include electronic whiteboards, holographic display devices, and any other suitable devices for displaying graphical content.
- Projector 120 and projection screen 122 may include one or more communication units that enable the respective devices to communicate with computing device 2.
- projector 120 and projection screen 122 may be configured to communicate with each other.
- Projector 120 may receive data from computing device 2 that includes graphical content. Projector 120 may, in response to receiving the data, project the graphical content onto projection screen 122.
- projector 120 may determine one or more user inputs (e.g., continuous gestures, multi-touch gestures, single-touch gestures, etc.) at projector screen using optical recognition or other suitable techniques and send indications of such user input using one or more communication units to computing device 2.
- projection screen 122 may include a presence-sensitive display 124. Presence-sensitive display 124 may include a subset of functionality or all of the functionality of UI device 4 as described in this disclosure. In some examples, presence- sensitive display 124 may include additional functionality. Projection screen 122 (e.g., an electronic whiteboard), may receive data from computing device 2 and display the graphical content.
- presence-sensitive display 124 may determine one or more user inputs (e.g., continuous gestures, multi-touch gestures, single-touch gestures, etc.) at projection screen 122 using capacitive, inductive, and/or optical recognition techniques and send indications of such user input using one or more communication units to computing device 2.
- user inputs e.g., continuous gestures, multi-touch gestures, single-touch gestures, etc.
- FIG. 3 also illustrates a mobile device 126 and a display device 130.
- Mobile device 126 and display device 130 may each include computing and connectivity capabilities. Examples of mobile device 126 may include e-reader devices, convertible notebook devices, hybrid slate devices, mobile telephones, personal media players, remote controller devices, wearable computing devices, etc. Examples of display device 130 may include televisions, computer monitors, etc.
- mobile device 126 may include a presence-sensitive display 128.
- Display device 130 may include a presence-sensitive display 132. Presence-sensitive displays 128, 132 may include a subset of functionality or all of the functionality of UI device 4 as described in this disclosure. In some examples, presence-sensitive displays 128, 132 may include additional functionality.
- presence-sensitive display 132 may receive data from computing device 2 and display the graphical content.
- presence-sensitive display 132 may determine one or more user inputs (e.g., continuous gestures, multi-touch gestures, single-touch gestures, etc.) at presence- sensitive display 132 using capacitive, inductive, and/or optical recognition techniques and send indications of such user input using one or more communication units to computing device 2.
- user inputs e.g., continuous gestures, multi-touch gestures, single-touch gestures, etc.
- computing device 2 may output graphical content for display at one or more remote devices, such as projector 120, projection screen 122, mobile device 126, and display device 130.
- computing device 2 may execute one or more instructions to generate and/or modify graphical content in accordance with techniques of the present disclosure.
- Computing device 2 may output the data that includes the graphical content to a communication unit of computing device 2.
- Computing device 2 may send the data to one or more of the remote devices, such as projector 120, projection screen 122, mobile device 126, and/or display device 130. In this way, computing device 2 may output the graphical content for display at one or more of the remote devices.
- one or more of the remote devices may output the graphical content at a presence-sensitive display that is included in and/or operatively coupled to the respective remote devices.
- Computing device 2 may send and receive data using various communication techniques.
- computing device 2 may be operatively coupled to external network 114 using network link 112 A.
- Each of the remote devices illustrated in the example of FIG. 3 may be operatively coupled to network external network 114 by one of respective network links 112B, 112C, and 112D.
- External network 114 may include network hubs, network switches, network routers, etc., that are operatively inter-coupled, thereby providing for the exchange of information between computing device 2 and the remote devices illustrated in the example of FIG. 3.
- network links 112A-112D may be Ethernet, asynchronous transfer mode (ATM) or other network connections. Such connections may be wireless and/or wired connections.
- ATM asynchronous transfer mode
- computing device 2 may be operatively coupled to one or more of the remote devices included in the example of FIG. 3 using direct device
- Direct device communication 118 may include communications through which computing device 2 sends and receives data directly with a remote device, using wired or wireless communication. That is, in some examples of direct device communication 118, data sent by computing device 2 may not be forwarded by one or more additional devices before being received at the remote device, and vice-versa.
- Examples of direct device communication 118 may include Bluetooth, Near-Field Communication, Universal Serial Bus, WiFi, infrared, etc.
- One or more of the remote devices illustrated in the example of FIG. 3 may be operatively coupled with computing device 2 by communication links 116A-116D.
- communication links 112A-112D may be connections using Bluetooth, Near-Field Communication, Universal Serial Bus, infrared, etc. Such connections may be wireless and/or wired connections.
- Computing device 2 may receive indications of user input from presence-sensitive displays 124, 128, 132. Furthermore, computing device 2 may determine scores for a first set of candidate strings. For each respective candidate string from the first set of candidate strings, the score for the respective candidate string is based at least in part on a probability of the respective character string as a whole occurring. In addition, computing device 2 may determine respective scores for a second set of candidate strings. For each respective candidate string from the second set of candidate strings, the score for the respective candidate string is based at least in part on respective probabilities of characters in the respective candidate string occurring and the score for the respective candidate string is not based on a probability of the respective character string as a whole occurring.
- Computing device 2 may select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings and may output the selected candidate string for display at projector 120, presence-sensitive display 128, and/or presence-sensitive display 132.
- FIG. 4 is a block diagram that illustrates an example architecture of decoder module 46 for combining character and word level language models, in accordance with the techniques of this disclosure.
- decoder module 46 includes an input features module 150, a word-level module 152, a character-level module 154, and a combined prediction module 156.
- Input features module 150 may receive new user input indications and past user input indications.
- the user input indications are indications of touch input.
- the new and past user input indications may include various data regarding user input, such as the position an input object, a movement of an input object, a speed of an input object, and so on.
- Input features module 150 may provide the user input indications to word-level module 152 and may also provide the series of user input indications to character-level module 154.
- Word-level module 152 may determine scores for a first set of candidate strings (i.e., predictions). Lexicon 7 includes each word from the first set of candidate strings. Hence, the first set of candidate strings may be referred to herein as in-lexicon candidate strings. Word-level module 152 may determine the scores such that for each respective in-lexicon candidate string, the score for the respective in-lexicon candidate string is based at least in part on a probability of the in-lexicon character string occurring, given up to n words that precede the in-lexicon character string in text 16, where n is a non- negative integer.
- word-level module 152 may output at least a portion of the first set of in-lexicon candidate strings and the scores for the set of in-lexicon candidate strings to combined prediction module 156.
- word-level module 152 may rank the in-lexicon candidate strings based, at least in part, on the scores for the in-lexicon candidate strings.
- word-level module 152 may output to combined prediction module 156 only a particular number of the highest-ranked in- lexicon candidate strings.
- Character-level module 154 may determine scores for a second set of candidates strings.
- the second set of candidate strings may include candidate strings that are in lexicon 7 and candidate strings that are not in lexicon 7.
- the second set of candidate strings may be referred to herein as out-of-lexicon candidate strings.
- one or more character strings may be in both the first and second sets of candidate strings.
- character-level module 154 may output at least a portion of the out-of-lexicon candidate strings and the scores for the out-of-lexicon candidate string to combined prediction module 156.
- character-level module 154 may rank the out-of-lexicon candidate strings based, at least in part, on the scores for the out-of-lexicon candidate strings.
- character-level module 154 may output to combined prediction module 156 only a particular number of the highest-ranked out-of-lexicon candidate strings.
- Character-level module 154 may determine the scores for the second set of character strings without the use of lexicon 7. Rather, for each respective candidate string from the second set of candidate strings, the score for the respective candidate string is based at least in part, and in some instances exclusively, on scores for characters in the respective candidate string. For each respective character in the respective candidate string, the score for the respective character is based at least in part, and in some instances exclusively, on the series of user input indications and a probability of the character given up to n characters that precede the respective character, where n is a non-negative integer. That is, the score for a particular character Li is conditioned on the past n characters, where n is a non-negative integer.
- the score for a character of an out-of-lexicon candidate string is the probability of the character occurring in any character string of a particular language, given the n characters that precede the character.
- the score for a particular character L t may be equal to:
- the probability of a character "k” may be low if the preceding character is "z,” because the character combination "zk” is relatively uncommon in the English language.
- the probability of the character “h” may be high if the preceding character is "t,” because the character combination "th” is relatively common in the English language.
- character-level module 154 may use a distinguished character as a character string boundary or separator.
- distinguished characters may include space characters, punctuation marks, the start of a text, a carriage return, and so on.
- the tri-gram character combination "art” may have a relatively high score because many words in the English language include the character combination "art” (e.g., "start,” “mart,” “cart,” etc.).
- Combined prediction module 156 may select, based at least in part on the scores for the in-lexicon candidate strings and the scores for the out-of-lexicon candidate strings, one or more candidates from among the in-lexicon candidate strings and out-of-lexicon candidate strings.
- the selected set of candidate strings may be referred to herein as a combined set of candidate strings.
- Combined prediction module 156 may output the selected candidate strings to auto-replacement module 48 and/or suggestion module 50 (FIG. 2).
- FIG. 5 is a conceptual diagram illustrating an example misspelling of an out-of- lexicon word and replacement suggestions, in accordance with one or more aspects of the present disclosure.
- GUI 10 includes the text "I've watched gsngnam.”
- the character string "gsngnam" is not in lexicon 7.
- word-level module 152 may determine a set of in- lexicon candidate strings and character-level module 154 may determine a set of out-of- lexicon candidate strings.
- combined prediction module 156 may generate, based at least in part on scores of candidate strings in the sets of in-lexicon and out-of- lexicon candidate strings, a combined set of candidate strings.
- Computing device 2 may then output, for display, at least a portion of the combined set of candidate strings.
- the portion of the combined set of candidate strings includes the candidate strings “gsngnam,” “gangnam,” and “gang am.”
- the character strings “gsngnam” and “gangnam” are not in lexicon 7, but the character string “gang am” includes character strings in lexicon 7.
- "Gangnam” is the name of a district in Seoul, South Korea, and the subject of a well-known music video.
- the combined set of candidate strings may include the character string "gangnam” because the combination of characters in “gangnam” is more likely to occur in the English language than the combination of characters in "gsngnam.”
- the score of the out- of-lexicon character string "gangnam” may be higher than the scores of other candidate strings, including candidate strings that are in lexicon 7. In other examples, the score of the out-of-lexicon character string "gangnam” may be lower than the scores of other in- lexicon and/or out-of-lexicon candidate strings. Accordingly, suggestion module 50 may output the character string "gangnam” in one of suggestion elements 20.
- FIG. 6 is a flowchart illustrating an example operation 300 of IME module 6, in accordance with one or more aspects of this disclosure.
- IME module 6 may receive a user input indication (302).
- the user input indication may indicate a position at which an input object, such as a finger or stylus, was detected.
- IME module 6 may determine whether the user input indication corresponds to a user selection of a suggestion element, such as one of suggestion elements 20 (304). In response to determining that the user input indication does not correspond to a selection of a suggestion element ("NO" branch of 304), IME module 6 may determine a closest virtual key to the position indicated by the user input indication (306).
- IME module 6 may output, for display at UI device 4, the character associated with the determined virtual key (308). For example, if the determined virtual key corresponds to the character "a,” IME module 6 may output the character "a" at an insertion point.
- IME module 6 may determine a combined set of candidate strings and associated scores (310).
- the combined set of candidate strings may include candidate strings from a set of in-lexicon strings and a set of out-of-lexicon strings.
- IME module 6 may perform the example operation of FIGS. 8 A, 8B, 10, and 11 to determine the combined set of candidate strings and the associated scores.
- the score associated with a candidate string may be informed by various sources.
- the score associated with a candidate string may be based, at least in part, on a word-level language model.
- the word-level language model may indicate the probability of a word (e.g., character string in lexicon 7) given zero or more preceding words.
- the word-level language model may also indicate a likelihood that lexicon 7 does not include the candidate string.
- the score associated with a candidate string may be based, at least in part, on a character-level language model.
- the character-level language model may indicate whether the candidate string includes unlikely character pairs (i.e., n-grams).
- the score for the candidate string may be based, at least in part, on addition information.
- the score for the candidate string may be based, at least in part, on whether IME module 6 received an indication of a tapping gesture at a shift key.
- lexicon 7 may be less likely to include character strings that are capitalized.
- the score for the candidate string may be based, at least in part, on whether the user input indications correspond to tapping gestures that are close to the centers of virtual keys or whether the tapping gestures are sloppy (i.e., further from the centers of the virtual keys). In this example, users may be more likely to use precise tapping gestures when typing an out-of-lexicon character string than an in-lexicon character string.
- the score for the candidate string may be based, at least in part, on the speed at which the user is entering text. If the user is entering text at a faster pace than typical for the user, the score for the candidate string may reflect that the user is more likely to be entering an in-lexicon character string than an out-of-lexicon character string.
- IME module 6 may also determine whether the character associated with the determined virtual key is a word delimiter (312).
- Example word delimiters include space characters, return characters, commas, periods, question marks, parenthesis, and so on.
- IME module 6 may output a selected portion of the combined set of candidate strings in suggestion elements 20 (314).
- IME module 6 may select the portion of the combined set of candidate strings based on the scores of the candidate strings from the combined set of candidate strings.
- IME module 6 may determine whether a character string that occurs between an immediately previous word delimiter and the insertion point is a character string in lexicon 7 (315). In response to determining that the character string is not a character string in lexicon 7 ("NO" branch of 315), IME module 6 may determine whether the score of the top-ranked candidate string is below an auto-replacement threshold (316). The top-ranked candidate string may be the candidate string from the combined set of candidate strings that has the lowest score.
- IME module 6 may output the word delimiter for display at UI device 4 (318) and wait to receive additional user input indications (302).
- IME module 6 may output, for display at UI device 4, the top-ranked candidate string in place of the relevant character string for the top-ranked candidate string (320). For example, if the relevant character string for the top-ranked candidate string is "thesa" and the top-ranked candidate string is "thesaurus,” IME module 6 may replace "thesa” with “thesaurus.” After replacing the relevant character string with the top-ranked candidate string, IME module 6 may output the word delimiter for display at UI device 4 (318). IME module 6 may then wait to receive an additional user input indication (302).
- IME module 6 may make a choice between auto-correction to an in-lexicon character string that is closest to the positions indicated by the user input indications or deem that the character sequence is an out-of-lexicon word and leave the character sequence as it is.
- IME module 6 may output, for display at UI device 4, the candidate string of the selected suggestion element in place of the relevant character string for the candidate string of the selected suggestion element (322). After replacing the relevant character string, IME module 6 may wait to receive an additional user input indication (302).
- FIG. 7 is a conceptual diagram illustrating an example lexicon finite state transducer (FST) 350, in accordance with one or more aspects of this disclosure.
- Word- level module 152 may use a lexicon FST, such as lexicon FST 350, to determine a set of one or more in-lexicon candidate strings and scores of the in-lexicon candidate strings.
- FIGS. 8A and 8B, described below, illustrate an example operation of word-level module 152 to use a lexicon FST to determine the set of in-lexicon candidate strings and the scores of the in-lexicon candidate strings.
- Lexicon FST 350 includes a plurality of nodes 352A-352H (collectively, nodes 352) and a plurality of arcs. Lexicon FST 350 may include many more nodes and arcs than shown in the example of FIG. 7. The additional nodes and arcs are omitted from FIG. 7 for the sake of clarity.
- Lexicon FST 350 may include an entry node, a plurality of non-terminal nodes, and a plurality of terminal nodes.
- node 352A is an entry node and nodes 352D, 352F, and 352H are terminal nodes.
- Nodes 352B, 352C, 352F, and 352G are non-terminal nodes.
- nodes are represented by circles, arcs are represented by arrows, terminal nodes are represented by double circles, and entry node 352A is shaded.
- Each node other than entry node 352A may have exactly one incoming arc and at least one outgoing arc.
- An incoming arc of a node may be an arc that leads from another one of the nodes to the node.
- An outgoing arc of a node may be an arc that leads from the node to another one of the nodes.
- a node is referred to herein as a child node of another node if there is an arc that leads from the other node to the node.
- Each of the arcs may have a character. In the example of FIG. 7, the characters of arcs are shown next to the arcs.
- the character of an arc may be an alphanumeric character and/or a word delimiter.
- Each of the terminal nodes may be associated with a character string that includes one or more words in lexicon 7.
- Each of the terminal nodes may be reached from the entry node by following a series of one or more arcs through lexicon FST 350 from entry node 352A to the terminal node.
- the character string associated with a terminal node is the concatenation of the characters of the arcs leading from entry node 352A to the terminal node. For instance, in the example of FIG. 7, the character string associated with terminal node 352D is "ask" because the characters of the arcs leading from entry node 352A to terminal node 352D are "a,” "s,” and "k.”
- FIG. 8A is a flowchart illustrating an example operation 400 of computing device 2 for determining scores for a set of in-lexicon character strings, in accordance with one or more aspects of this disclosure.
- Word-level module 152 of IME module 6 may perform operation 400 to determine the set of in-lexicon characters strings as part of IME module 6 determining the combined set of candidate strings and associated scores in action 310 of FIG. 6.
- Word-level module 152 may receive an indication of a user input (402). In other words, word-level module 152 may receive a user input indication. The user input indication may indicate a position or movement of an input object, such as a finger or stylus. [0103] In response to receiving the user input indication, word-level module 152 may generate a token that is associated with entry node 352A of lexicon FST 350 (404). A token may be a data structure that stores several pieces of data. Word-level module 152 may push the token into an active beam (406). In the context of this disclosure, a beam may be a data structure, such as a stack, that stores tokens. The token may include a score and a character chain.
- the score of a token may indicate a score associated with following arcs from entry node 352A of lexicon FST 350 to the node associated with the token.
- the character chain of a token may indicate the characters of the arcs from entry node 352A of lexicon FST 350 to the node associated with the token.
- word-level module 152 may select a token from the active beam (408). Word-level module 152 may then determine whether a copy of the selected token has been generated for each outgoing arc of the node associated with the selected token (410). For ease of explanation, this disclosure may describe the node associated with a token as the token's node. If word-level module 152 determines that a copy of the selected token has not yet been generated for an outgoing arc of the token's node ("NO" branch of 410), word-level module 152 may generate a copy of the selected token and may associate the copy with the child node at the opposite end of the outgoing arc (412).
- word-level module 152 may update the character chain of the copy to append the character associated with the arc from the selected token's node to the copy's node (414). In addition, word-level module 152 may update the score of the copy by adding the copy's score to a score of the arc from the selected token's node to the copy's node (416).
- Word-level module 152 may determine the score of the arc in various ways. In some examples, word-level module 152 may determine the score associated with the arc based at least in part on a character-level score for the arc. IME module 6 may use a character-level FST to determine the character-level score for the arc. The character-level FST may be an FST like the lexicon FST described above.
- a character-level FST may include a plurality of nodes connected by arcs. Each of the arcs may have a character.
- word-level module 152 may determine the character-level score for a character chain by following a path through the nodes of the character-level FST and summing the scores of arcs along the path. The characters of the arcs on the path may match the characters of the copy's character chain.
- Word-level module 152 may determine the score of an arc in the character-level FST based at least in part on a spatial model score for the arc and a character-level LM score for the arc. For instance, word-level module 152 may determine the score of an arc as the sum of the spatial model scores of the arc and the character-level LM score of the arc.
- the spatial model score for an arc in the character-level FST may correspond to a probability that a user input indication corresponds to the arc's character. For example, if the user input indication corresponds to a tapping gesture at a particular location, the spatial model score for the arc may be correlated with a spatial distance between the particular location and the virtual key for the arc's character. In this example, if the particular location is further from the virtual key for the arc's character, the probability that the user input indication corresponds to the arc's character diminishes and the arc's spatial model score increases. Conversely, if the particular location is closer to the virtual key for the arc's character, the probability that the user input indication corresponds to the arc's character increases and the arc's spatial model score decreases.
- the character-level LM score for an arc in the character-level FST may indicate a probability of the arc's character given the characters of the preceding arcs in the path. For instance, if the arc's character does not typically follow the character of the preceding arc of the path, the arc's character- level LM score may be high. For example, the character "k" does not typically follow the character "f" in the English language.
- the character-level LM score of an arc associated with the character "k" may be high if the preceding arc's character is "f.”
- the lambda character may be an input character or an output character for some arcs in the character-level FST. No user input indications are consumed by transitioning along an arc if the lambda character is the input character of the arc.
- the character-level FST may use an arc that has a particular character as the input character and the lambda character as the output character to model a string that includes the particular character by accident.
- IME module 6 does not add any characters to a token's character chain by transitioning along an arc that has the lambda character as the output character of the arc.
- the character-level FST may model a string that includes an inadvertently omitted character by following an arc that has the lambda character as the input character and the omitted character as the output character.
- arcs with lambda input or output characters may enable the character-level FST to model character strings where the user inadvertently omitted or inserted a character, such as an alphanumeric character, space character, or punctuation mark.
- word-level module 152 may, in addition to modifying the score of the copy in action 514, update a look-ahead score for the copy (418). Word- level module 152 may determine the look-ahead score for the copy in various ways.
- word-level module 152 may determine the look-ahead score of the copy by determining a trial look-ahead score for each terminal node in lexicon FST 350 that is reachable from the copy's node. A terminal node is reachable in lexicon FST 350 from the copy's node if there is a path through lexicon FST 350 from the copy's node to the terminal node that does not pass through entry node 352A. Word-level module 152 may set the look-ahead score of the copy to be the lowest of the trial look-ahead scores. In another example, word-level module 152 may set the look-ahead score of the copy to be the highest of the trial look-ahead scores.
- Word-level module 152 may determine a trial look-ahead score for a terminal node by adding a spatial score for the terminal node and a language score for the terminal node.
- the spatial score for the terminal node may be based at least in part on the difference between the number of characters in the copy's character chain and the number of characters in the word associated with the terminal node.
- the language score for the terminal node may be based at least in part on a probability of the terminal node's character string, given up to n preceding word-delimited character strings, where n is a non-negative integer.
- word-level module 152 may generate a copy of the selected token and may update the content of the selected token. Furthermore, word-level module 152 may push the copy of the selected token into a next beam (420). After pushing the copy into the next beam, word-level module 152 may prune the next beam (422). In some examples, word-level module 152 may prune the next beam based at least in part on the scores and look-ahead scores of the tokens in the next beam. Word-level module 152 may discard any tokens in the next beam that are not among the n tokens having the lowest combined scores, where n is an integer (e.g., 10). The combined score of a token may be the score of the token plus the look-ahead score of the token. If there are fewer than n tokens in the next beam, word-level module 152 does not discard any tokens in the next beam.
- word-level module 152 may determine again whether copies of the selected token have been generated for each outgoing arc of the selected token's node (410). If not, word-level module 152 may repeat actions 412-422 for another outgoing arc of the selected token's node. In this way, word-level module 152 may generate a copy of the selected token for each outgoing arc of the selected token's node. On the other hand, in response to determining that copies have been generated for each outgoing arc of the selected token's node ("YES" branch of 410), word-level module 152 may perform the portion of operation 400 illustrated in FIG. 8B.
- FIG. 8B is a flowchart illustrating an example continuation of operation 400.
- Word-level module 152 may identify terminal nodes of lexicon FST 350 that are reachable from the selected token's node without passing through entry node 352A of lexicon FST 350 (430). In some examples, word-level module 152 may identify the terminal nodes of lexicon FST 350 that are reachable from the selected token's node after word-level module 152 determines that copies of the selected token have been generated for each outgoing arc of the selected token's node. If the selected token's node is a terminal node, the selected token's node may be the only reachable terminal node.
- Word-level module 152 may generate a candidate string associated with each of the identified terminal nodes (432). Word-level module 152 may generate an in- lexicon candidate string associated with a terminal node by concatenating to the selected token's character string the characters of arcs of lexicon FST 350 on a path from the selected token's node to the terminal node.
- word-level module 152 may generate the candidate string "happy.”
- a candidate string may include a word that is associated with a terminal node of lexicon FST 350 that is reachable from the particular node.
- word-level module 152 may determine scores for the generated in- lexicon candidate strings (434). Word-level module 152 may determine the score for an in- lexicon candidate string by adding the selected token's score to a look-ahead score for the terminal node associated with the in-lexicon candidate string. Word- level module 152 may determine the look-ahead score for the in-lexicon candidate string by adding a spatial score for the terminal node associated with candidate string and a language score for the terminal node associated with the candidate string. As indicated above, the spatial score for the terminal node may be based at least in part on the difference between the number of characters in the copy's character chain and the number of characters in the word associated with the terminal node.
- the language score for the terminal node may be based at least in part on a probability of the terminal node's word, given up to n preceding words, where n is a non-negative integer.
- word-level module 152 may rank candidate strings with low score higher than candidate strings with high scores.
- word-level module 152 After determining the scores for the in-lexicon candidate strings, word-level module 152 has finished processing the selected token. Word-level module 152 may determine whether there are any remaining unprocessed tokens in the active beam (440). If there are one or more remaining unprocessed tokens in the active beam ("YES" branch of 440), word- level module 152 may select another token from the active beam (408) (FIG. 8A) and repeat actions 410-436 using this selected token. In this way, word-level module 152 may process each token in the active beam. After processing each token in the active beam, there are no remaining unprocessed tokens in the active beam.
- word-level module 152 may rank the in-lexicon candidate strings (442). Word- level module 152 may rank the in-lexicon candidate strings based at least in part on the total scores of the in-lexicon candidate strings. After ranking the in-lexicon candidate strings, word-level module 152 may output, to combined prediction module 156, at least a portion of the set of in-lexicon candidate strings (444). For instance, word-level module 152 may output the top n-ranked in-lexicon candidate strings, where n is a positive integer, such as 10. Word-level module 152 may then discard the tokens in the active beam (446).
- word-level module 152 may determine whether there are any additional user input indications to consume (448). If there are no additional user input indications to consume ("NO" branch of 448), word-level module 152 may suspend operation 400 until there are one or more user input indications to consume. On the other hand, if there are one or more user input indications to consume ("YES" branch of 448), word-level module 152 may switch the active beam and the next beam (450). Thus, the active beam is designated as the next beam and the next beam is designated as the active beam. Word-level module 152 may then select a token from the active beam (408) and repeat actions 410-434 using this selected token.
- word-level module 152 may determine the score for a particular in- lexicon candidate string, by determining, based at least in part on the locations indicated by the indications of user input, a spatial score for the particular in-lexicon candidate string.
- decoder module 46 may determine a word-level LM score for the particular in-lexicon candidate string.
- the word-level LM score for the particular in- lexicon candidate string may be based at least in part on a probability of the particular in- lexicon candidate string occurring, given up to n character strings that precede the particular in-lexicon character string, where n is a non-negative integer.
- Word-level module 152 may determine, based at least in part on a number of arcs between a current node of the lexicon FST and a terminal node of the lexicon FST that corresponds to the particular in-lexicon candidate string, a look-ahead score for the particular candidate string. Word-level module 152 may determine, based at least in part on the spatial score, the word-level LM score, and the look-ahead score, the score for the particular in-lexicon candidate string.
- FIG. 9 is a conceptual diagram illustrating an example character-level FST 500, in accordance with one or more aspects of this disclosure.
- Character-level module 154 may use a character-level FST, such a character-level FST 500, to determine a set of one or more out-of-lexicon character strings and associated scores.
- FIG. 10, described below, illustrates an example operation of character-level module 154 to use character-level FST 500 to determine the set of out-of-lexicon character strings and associated scores.
- Character-level module 154 may use character-level n-grams. This is a tree based data structure that encodes how likely different letter sequences (of length up to n) are without explicitly modeling whether the sequence is a valid dictionary (lexicon) word.
- a similar trie e.g., character-level FST 500
- character-level FST 500 to the one used for storing the word lexicon can be used to store the character level n-grams.
- One difference between lexicon FST 350 and character-level FST 500 is that the character-level LM (i.e., character-level FST 500) may allow any character to follow any context. More specifically, the character- level LM may encode the probability of the currently typed letter (Li) conditioned on the past n letters.
- Character-level FST 500 includes an entry node 502 and a terminal node 504. Like lexicon FST 350, character-level FST 500 includes a plurality of arcs, represented in FIG. 9 as arrows. Each arc of character-level FST 500 is associated with a character. As shown in FIG. 9, character-level FST 500 includes arcs loop back to entry node 502. Although not shown in FIG. 9 for the sake of clarity, character-level FST 500 may include such looped-back arcs for each valid character that is not a word delimiter. In addition, one of the arcs that loops back to entry node 502 may be associated with the lambda character.
- character-level FST 500 includes an arc from entry node 502 to terminal node 504 that is associated with a word delimiter character and another arc from entry node 502 to terminal node 504 that is associated with the lambda character. Character-level FST 500 may also include an arc from terminal node 504 to entry node 502 that is associated with the lambda character.
- FIG. 10 is a flowchart illustrating an example operation 550 of computing device 2 for determining a set of out-of-lexicon character strings, in accordance with one or more aspects of this disclosure.
- Character-level module 154 may perform operation 550 as part of IME module 6 determining the combined set of candidate strings and associated scores in action 310 of FIG. 6.
- character-level module 154 may receive an indication of a user input (552).
- character-level module 154 may receive a user input indication.
- the user input indication may indicate a position or movement of an input object, such as a finger or stylus.
- character-level module 154 may generate a token that is associated with entry node 502 of character-level FST 500 (554).
- the token may be a data structure that includes a score and a character chain.
- the score of the token may indicate a score associated with following a series of arcs through character-level FST 500.
- the character chain of the token may indicate the characters of the arcs followed through character-level FST 500.
- Character-level module 154 may push the token onto an active beam (556).
- a beam may be a data structure that stores tokens.
- the active beam of operation 550 may be separate from the active beam of operation 400.
- character-level module 154 may select a token from the active beam (556). Character-level module 154 may then determine whether a copy of the selected token has been generated for each outgoing arc of the node associated with the selected token (558). If character-level module 154 determines that copies of the selected token have not yet been generated for an outgoing arc of the selected token's node ("NO" branch of 558), character-level module 154 may generate a copy of the selected token and associate the copy with the node in character- level FST 500 at the opposite end of the outgoing arc (560).
- character-level module 154 may update the character chain of the copy to append to the copy's character chain the character of the outgoing arc (562). For example, if the copy's character chain is "as" and the character of the outgoing arc is "k,” character-level module 154 may update the character chain of the copy such that the copy's character chain is "ask.” [0131] In addition, character-level module 154 may determine a spatial score for the outgoing arc (564). Character-level module 154 may determine the spatial score of the outgoing arc based at least in part on a spatial distance between a virtual key associated with the outgoing arc's character and the position indicated by the user input indication.
- the spatial score of the outgoing arc may be relatively high if the position indicated by the user input indication is relatively distant from the virtual key associated with the outgoing arc's character. Conversely, the spatial score of the outgoing arc may be relatively low if the position indicated by the user input indication is relatively close to the virtual key associated with the outgoing arc's character.
- character-level module 154 may determine a character-level LM score of the outgoing arc (566). Character-level module 154 may determine the character-level LM score based at least in part on the probability of the outgoing arc's character in a particular language, given up to n most-recently added characters in the copy's character chain, where n is a non-negative integer.
- the character-level LM score of the outgoing arc may be relatively high if the outgoing arc's character is "k.”
- the character-level LM score of the outgoing arc may be relatively low if the outgoing arc's character is "u.” This is because the character "u” frequently follows the character "q” in the English language while the character "k” very seldom follows the character "q” in the English language.
- Computing device 2 may receive different patterns of user input indications for different users. For example, computing device 2 may be more likely to receive user input indications associated with a certain combination of characters from one user than another user. Accordingly, character-level module 154 may determine different probabilities of a particular character occurring for different users. Character-level module 154 may determine the probabilities for different users based on characters previously entered by the users. In this way, character-level module 154 may determine, based at least in part on past indications of user input, the probability of a respective character occurring.
- computing device 2 may output for display a user interface that includes one or more text-entry fields.
- a user interface for composing an email message may include "to,” “cc,” “subject,” and "body” text-entry fields.
- a user interface for an Internet search engine may include a text-entry field for inputting search terms.
- Computing device 2 may activate a text-entry field in response to an indication of user input to activate the text-entry field.
- computing device 2 may output the character string in the activated text-entry field.
- character-level module 154 may determine the character-level LM score of an arc differently for different types of text-entry fields. In some examples, character- level module 154 may use character strings previously entered into different types of text- entry fields as a basis for determine the character-level LM scores of arcs for different types of text-entry fields.
- character-level module 154 does not determine the character-level LM score of the outgoing arc based on any word-level LM or look-ahead score. Rather, the character-level LM score may be entirely based on the probabilities of combinations of characters.
- Character-level module 154 may update, based at least in part on the spatial score of the outgoing arc and the character-level LM score of the outgoing arc, the score of the copy (568). In some examples, character- level module 154 may update the score of the copy by adding the spatial score of the outgoing arc and the character-level LM score of the outgoing arc to the existing score of the copy. Thus, the spatial score of the outgoing arc and the character-level LM score of the outgoing arc may be a score for the character of the outgoing arc.
- Character-level module 154 may push the copy onto a next beam (570).
- the next beam used in operation 550 may be separate from the next beam used in operation 400.
- Character-level module 154 may then prune the next beam (572).
- Character-level module 154 may prune the next beam based at least in part on the scores of the tokens in the next beam.
- Character-level module 154 may discard any tokens in the next beam that are not among the n tokens having the lowest scores, where n is an integer (e.g., 10). If there are fewer than n tokens in the next beam, character-level module 154 does not discard any tokens in the next beam.
- Character-level module 154 may then determine again whether copies of the selected token have been generated for each outgoing arc of the selected token's node (558). If not, character-level module 154 may repeat actions 560-572 for another outgoing arc of the selected token's node. In this way, character-level module 154 may generate a copy of the selected token for each outgoing arc of the selected token's node.
- character-level module 154 may determine whether there are any remaining unprocessed tokens in the active beam (574). In response to determining that there are one or more remaining unprocessed tokens in the active beam ("YES" branch of 574), character-level module 154 may select another token from the active beam (556) and repeat actions 558- 572 using this token. In this way, character-level module 154 may process each token in the active beam. After having selected each token in the active beam, there are no remaining unprocessed token in the active beam.
- character-level module 154 may rank the out-of- lexicon candidate strings (576).
- the out-of-lexicon candidate strings may be the character chains of the tokens in the next beam.
- Character-level module 154 may rank the out-of-lexicon candidate strings based at least in part on the scores of the tokens in the next beam.
- Character-level module 154 may output, to combined prediction module 156, at least a portion of the set of out-of-lexicon candidate strings (578). In some examples, character-level module 154 may output the top n-ranked out-of-lexicon candidate strings, where n is a positive integer, such as 10. Character-level module 154 may then discard the tokens in the active beam (580).
- character-level module 154 may determine whether there are any additional user input indications to consume (582). If there are no additional user input indications to consume ("NO" branch of 582), character-level module 154 may suspend operation 550 until there are more user input indications to consume. On the other hand, if there are one or more user input indications to consume ("YES" branch of 582), character-level module 154 may switch the active beam and the next beam (584). Thus, the active beam is designated as the next beam and the next beam is designated as the active beam. Character-level module 154 may then select another token from the active beam (556).
- character-level module 154 may determine the scores for the set of out-of-lexicon candidate strings at least in part by determining, based at least in part on scores of followed arcs in the character-level FST, a score for a particular candidate string in the second set of candidate strings.
- the followed arcs of the character-level FST are arcs of the character-level FST that have characters that match the characters of the particular candidate string. For each respective one of the followed arcs, the score of the respective followed arc is based at least in part on a probability of the character of the respective followed arc.
- FIG. 11 is a flowchart illustrating an example operation 600 of computing device 2 for generating a combined set of candidate strings.
- Combined prediction module 156 (FIG. 4) of IME module 6 may perform operation 600 as part of IME module 6 determining the combined set of candidate strings and associated scores in action 310 of FIG. 6.
- combined prediction module 156 may receive a set of in- lexicon candidate strings and their associated scores from word-level module 152 (602). In addition, combined prediction module 156 may receive a set of out-of-lexicon candidate strings and their associated scores from character-level module 154 (604). In response, combined prediction module 156 may rank, based at least in part on the scores for the in-lexicon candidate strings and the out-of-lexicon candidate strings, the candidate strings in the set of in-lexicon candidate strings and the set of out-of-lexicon candidate strings (606). Combined prediction module 156 may select one or more highest-ranked candidate strings from the in-lexicon and out-of-lexicon sets of candidate strings (608).
- Combined prediction module 156 may rank the candidate strings in various ways. For example, combined prediction module 156 may implement an algorithm that learns, based on training data, how to generate an optimal ranking of the combined set of character strings from the in-lexicon candidate strings and the out-of-lexicon candidate strings. The result of this algorithm may be a classifier that determines a final ranking of the combined candidate strings from the in-lexicon and out-of-lexicon candidate strings. In this way, combined prediction module 156 may adapt a machine learning algorithm based on training data and may apply the machine learning algorithm to rank the candidates strings in the in-lexicon and out-of-lexicon candidate strings based at least in part on the scores for the first and second sets of candidate strings.
- combined prediction module 156 may rank the character strings of the combined set of candidate strings based at least in part on a probability that an out-of-lexicon character string follows a preceding character string. For example, combined prediction module 156 may assign a higher rank to an in-lexicon candidate string if the preceding character string is "visited” rather than "should.” This is because names of places or people are relatively likely to follow the word "visited” and the names of places and people are relatively less likely to be in lexicon 7. In contrast, verbs typically follow the word "should” and lexicon 7 is likely to include almost all verbs of a language.
- combined prediction module 156 may rank an out-of-lexicon candidate string higher if the out-of-lexicon candidate string follows the character string "visited” than if the out-of-lexicon candidate string follows the character string "should.”
- computing device 2 may rank, based at least in part on the scores of the in- lexicon and out-of-lexicon sets of candidate strings and based at least in part on a probability that an out-of-lexicon character strings follows a preceding character string, the candidate strings from the in-lexicon and out-of-lexicon sets of candidate strings, wherein the out-of-lexicon character string is not in the lexicon.
- a user is more likely to enter out-of-lexicon character strings in some types of input fields than in other types of input fields. For example, a user is more likely to enter an out-of-lexicon character string in a search field of an Internet search engine than a state/province field of a mailing address form.
- combined prediction module 156 may give higher priority to in-lexicon candidate strings or to out-of-lexicon candidate strings, depending on which type of input field is active.
- combined prediction module 156 may rank, based at least in part on the scores of the sets of in-lexicon and out-of-lexicon candidate strings and based at least in part on a type of an active text field, the candidate strings from the sets of in- lexicon and out-of-lexicon candidate strings. For instance, in response to determining that the active text field is a first type of text field, combined prediction module 156 may assign a first value to relative weights associated with the set of in-lexicon candidate strings. Furthermore, in response to determining that the active text field is a different, second type of text field, combined prediction module 156 may assign a different, second value to the relative weights associated with the set of in-lexicon candidate strings.
- Combined prediction module 156 may rank, based at least in part on the values of the relative weights associated with the set of in-lexicon candidate strings, the candidate strings from the sets of in-lexicon and out-of-lexicon candidate strings.
- the relative weights assigned to the in-lexicon candidate strings may increase or decrease the scores of the in-lexicon candidate strings.
- combined prediction module 156 may apply weights or the out-of-lexicon candidate strings.
- FIG. 12 is a flowchart illustrating another example operation 650 of computing device 2, in accordance with one or more aspects of the present disclosure.
- computing device 2 may determine respective scores for a first set of candidate strings (652).
- Lexicon 7 may include each candidate string from the first set of candidate strings.
- Each score for each respective candidate string from the first set of candidate strings is based at least in part on a probability of the respective character string from the first set of candidate strings being entered.
- the probability of the respective character string occurring is based at least in part on one or more words that precede the respective character string.
- computing device 2 may determine scores for a second set of candidate strings (654).
- Lexicon 7 does not necessarily include each candidate string from the second set of candidate strings.
- Each score for each respective candidate string from the second set of candidate strings is based at least in part on respective probabilities of characters in the respective candidate string from the second set of candidate strings being entered.
- the probability of a character being entered is based at least in part on one or more characters that precede the character.
- the score for the respective candidate string is not based on a probability of the respective candidate string as a whole being entered.
- computing device 2 may select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings (656).
- Computing device 2 may output the selected candidate string for display at a display device (658).
- computing device 2 may output the selected candidate string in one of suggestion elements 20.
- computing device 2 may output the selected candidate string as part of text 16.
- computing device 2 may automatically replace an already-displayed character string with the selected candidate string.
- Example 1 A method comprising: determining, by a computing device, respective scores for a first set of candidate strings, wherein each score for each respective candidate string from the first set of candidate strings is based at least in part on a probability of the respective character string from the first set of candidate strings being entered; determining, by the computing device, respective scores for a second set of candidate strings, wherein each score for each respective candidate string from the second set of candidate strings is based at least in part on respective probabilities of characters in the respective candidate string from the second set of candidate strings being entered; selecting, by the computing device and based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings; and outputting, by the computing device, the selected candidate string for display at a display device.
- Example 2 The method of example 1, wherein for a particular candidate string from the first set of candidate strings, the probability of the particular candidate string being entered is based at least in part on one or more words that precede the particular candidate string.
- Example 3 The method of any of examples 1-2, wherein for a particular character of a particular candidate string from the second set of candidate strings, the probability of the particular character being entered is based at least in part on one or more characters that precede the particular character.
- Example 4 The method of any of examples 1-3, further comprising
- Example 5 The method of any of examples 1-4, wherein: for each respective candidate string from the first set of candidate strings, the score for the respective candidate string is based at least in part on locations indicated by indications of user input and based at least in part on a probability of the respective character string being entered; and for each respective candidate string from the second set of candidate strings, the score for the respective candidate string is based at least in part on the locations indicated by the indications of user input and is based at least in part on respective probabilities of characters in the respective candidate string being entered.
- Example 6 The method of example 5, further comprising in response to an indication of an additional indication of user input: re-determining, by the computing device, the scores for the first set of candidate strings; re-determining, by the computing device, the scores for the second set of candidate strings; re-selecting, by the computing device and based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings; and outputting, by the computing device, the re-selected candidate string for display at the display device.
- Example 7 The method of examples 5 or 6, wherein at least one of the indications of user input indicates a location that does not correspond to a virtual key associated with a character in the selected character string.
- Example 8 The method of any of examples 5-7, wherein the indications of user input comprise an indication of a sliding gesture at a portion of the display device that displays a virtual keyboard.
- Example 9 The method of any of examples 1-8, wherein: the method further comprises ranking, by the computing device and based at least in part on the scores for the first and second sets of candidate strings, the candidate strings in the first and second sets of candidate strings; and selecting the candidate string comprises selecting, by the computing device, a highest-ranked candidate string from the first and second sets of candidate strings.
- Example 10 The method of example 9, wherein: the method further comprises adapting, by the computing device and based at least in part on training data, a machine learning algorithm; and ranking the candidate strings comprises applying, by the computing device, the machine learning algorithm to rank the candidates strings from the first and second sets of candidate strings based at least in part on the scores for the first and second sets of candidate strings.
- Example 11 The method of examples 9 or 10, wherein ranking the candidate strings comprises ranking, by the computing device and based at least in part on the scores of the first and second sets of candidate strings, and based at least in part on a probability that an out-of-lexicon character strings follows a preceding character string, the candidate strings from the first and second sets of candidate strings, wherein the out- of-lexicon character string is not in the lexicon.
- Example 12 The method of any of examples 9-11, wherein ranking the candidate strings comprises ranking, by the computing device and based at least in part on the scores of the first and second sets of candidate strings and based at least in part on a type of an active text field, the candidate strings from the first and second sets of candidate strings.
- Example 13 The method of example 12, wherein ranking the candidate strings from the first and second sets of candidate strings comprises: in response to determining that the active text field is a first type of text field, assigning, by the computing device, a first value to relative weights associated with the first set of candidate strings; in response to determining that the active text field is a different, second type of text field, assigning, by the computing device, a different, second value to the relative weights associated with the first set of candidate strings; and ranking, by the computing device and based at least in part on the values of the relative weights associated with the first set of candidate strings, the candidate strings from the first and second sets of candidate strings.
- Example 14 The method of any of examples 1-13, wherein outputting the selected candidate string comprises outputting, by the computing device and for display at the display device, the selected candidate string in place of another already-displayed character string.
- Example 15 The method of any of examples 1-14, further comprising: selecting, by the computing device and based at least in part on the scores for the first and second sets of candidate strings, a plurality of candidate strings from among the first and second sets of candidate strings; outputting, by the computing device and for display at the display device, the plurality of candidate strings; determining, by the computing device, that an indication of user input corresponds to a selection of a particular candidate string from the plurality of candidate strings; and outputting, by the computing device and for display at the display device, the particular candidate string in an active text area of a graphical user interface.
- Example 16 The method of any of examples 1-15, wherein: a finite state transducer (FST) includes arcs that correspond to characters; and determining the scores for the second set of candidate strings comprises determining, by the computing device and based at least in part on scores associated with followed arcs in the FST, a score for a particular candidate string in the second set of candidate strings, wherein the followed arcs of the FST are arcs of the FST that correspond to characters of the particular candidate string, wherein for each respective one of the followed arcs, the score that corresponds to the respective followed arc is based at least in part on a probability of the character that corresponds to the respective followed arc.
- FST finite state transducer
- Example 17 The method of any of examples 1-16, wherein: a finite state transducer (FST) includes arcs that correspond to characters and terminal nodes that correspond to character strings in the lexicon; and determining the scores for the first set of candidate strings comprises: determining, by the computing device and based at least in part on locations indicated by indications of user input, a spatial score for a particular candidate string in the lexicon; determining, by the computing device, a word-level language model (LM) score for the particular candidate string, wherein the word-level LM score for the particular candidate string is based at least in part on a probability of the particular candidate string given one or more character strings that precede an insertion point; determining, by the computing device and based at least in part on a number of arcs between a current node of the FST and a terminal node of the FST that corresponds to the particular candidate string, a look-ahead score for the particular candidate string; and determining, by the computing device and based at least in part on
- Example 18 The method of any of examples 1-17, wherein for each respective candidate string from the second set of candidate strings, the score for the respective candidate string is not based on a probability of the respective candidate string as a whole being entered.
- Example 19 A computing device comprising one or more processors configured to: determine respective scores for a first set of candidate strings, wherein each respective candidate string from the first set of candidate strings is based at least in part on locations indicated by indications of user input and a probability of the respective character string occurring, given one or more words that precede the respective character string from the first set of candidate strings; determine scores for a second set of candidate strings, wherein for each respective candidate string from the second set of candidate strings, the score associated with the respective candidate string is based at least in part on the locations indicated by the indications of user input and on respective probabilities of characters in the respective candidate string being entered; select, based at least in part on the scores for the first and second sets of candidate strings, a candidate string from among the first and second sets of candidate strings; and output the selected candidate string for display at a display device.
- Example 20 A computer-readable storage medium comprising instructions that, when executed by one or more processors of a computing device, cause the computing device to: determine respective scores for a first set of candidate strings, wherein a lexicon includes each candidate string from the first set of candidate strings and each respective candidate string from the first set of candidate strings is based at least in part on locations indicated by indications of user input and a probability of the respective candidate string being entered, given one or more words that precede the respective character string; determine respective scores for a second set of candidate strings, wherein the lexicon does not include each candidate string from the second set of candidate strings and each respective candidate string from the second set of candidate strings is based at least in part on one or more of the locations indicated by the indications of user input and probabilities of respective characters in the respective candidate string from the second set of candidate string being entered, given one or more characters that precede the respective characters, the respective scores for the candidate strings from the second set of candidate strings not being based on probabilities of the respective candidate strings being entered; rank, based at least in part on
- the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over, as one or more instructions or code, a computer-readable medium and executed by a hardware-based processing unit.
- Computer-readable media may include computer-readable storage media, which corresponds to a tangible medium such as data storage media, or communication media including any medium that facilitates transfer of a computer program from one place to another, e.g., according to a communication protocol.
- computer-readable media generally may correspond to (1) tangible computer-readable storage media which is non-transitory or (2) a communication medium such as a signal or carrier wave.
- Data storage media may be any available media that can be accessed by one or more computers or one or more processors to retrieve instructions, code and/or data structures for implementation of the techniques described in this disclosure.
- a computer program product may include a computer-readable medium.
- such computer-readable storage media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage, or other magnetic storage devices, flash memory, or any other medium that can be used to store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also, any connection is properly termed a computer- readable medium.
- coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave are included in the definition of medium.
- DSL digital subscriber line
- computer-readable storage media and data storage media do not include connections, carrier waves, signals, or other transient media, but are instead directed to non-transient, tangible storage media.
- Disk and disc includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and Blu-ray disc, where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.
- processors such as one or more digital signal processors (DSPs), general purpose microprocessors, application specific integrated circuits (ASICs), field programmable logic arrays (FPGAs), or other equivalent integrated or discrete logic circuitry.
- DSPs digital signal processors
- ASICs application specific integrated circuits
- FPGAs field programmable logic arrays
- processors may refer to any of the foregoing structure or any other structure suitable for DSPs.
- the techniques of this disclosure may be implemented in a wide variety of devices or apparatuses, including a wireless handset, an integrated circuit (IC) or a set of ICs (e.g., a chip set).
- IC integrated circuit
- a set of ICs e.g., a chip set.
- Various components, modules, or units are described in this disclosure to emphasize functional aspects of devices configured to perform the disclosed techniques, but do not necessarily require realization by different hardware units. Rather, as described above, various units may be combined in a hardware unit or provided by a collection of interoperative hardware units, including one or more processors as described above, in conjunction with suitable software and/or firmware.
Abstract
Description
Claims
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201361759274P | 2013-01-31 | 2013-01-31 | |
US13/774,656 US9047268B2 (en) | 2013-01-31 | 2013-02-22 | Character and word level language models for out-of-vocabulary text input |
PCT/US2014/011893 WO2014120462A2 (en) | 2013-01-31 | 2014-01-16 | Character and word level language models for out-of-vocabulary text input |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2951727A2 true EP2951727A2 (en) | 2015-12-09 |
Family
ID=51223877
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14704208.9A Withdrawn EP2951727A2 (en) | 2013-01-31 | 2014-01-16 | Character and word level language models for out-of-vocabulary text input |
Country Status (4)
Country | Link |
---|---|
US (1) | US9047268B2 (en) |
EP (1) | EP2951727A2 (en) |
AU (1) | AU2014212844B2 (en) |
WO (1) | WO2014120462A2 (en) |
Families Citing this family (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9454240B2 (en) | 2013-02-05 | 2016-09-27 | Google Inc. | Gesture keyboard input of non-dictionary character strings |
CN105095182B (en) * | 2014-05-22 | 2018-11-06 | 华为技术有限公司 | A kind of return information recommendation method and device |
US10261674B2 (en) * | 2014-09-05 | 2019-04-16 | Microsoft Technology Licensing, Llc | Display-efficient text entry and editing |
CN104615591B (en) * | 2015-03-10 | 2019-02-05 | 上海触乐信息科技有限公司 | Forward direction input error correction method and device based on context |
US10402734B2 (en) * | 2015-08-26 | 2019-09-03 | Google Llc | Temporal based word segmentation |
US9865254B1 (en) * | 2016-02-29 | 2018-01-09 | Amazon Technologies, Inc. | Compressed finite state transducers for automatic speech recognition |
US10268683B2 (en) * | 2016-05-17 | 2019-04-23 | Google Llc | Generating output for presentation in response to user interface input, where the input and/or the output include chatspeak |
US11068159B1 (en) * | 2016-08-31 | 2021-07-20 | Clarifai, Inc. | Systems and methods for facilitating keyboard-based search of local and connected digital media items within a messaging application |
US10572591B2 (en) * | 2016-11-18 | 2020-02-25 | Lenovo (Singapore) Pte. Ltd. | Input interpretation based upon a context |
US10747427B2 (en) * | 2017-02-01 | 2020-08-18 | Google Llc | Keyboard automatic language identification and reconfiguration |
KR102509822B1 (en) * | 2017-09-25 | 2023-03-14 | 삼성전자주식회사 | Method and apparatus for generating sentence |
US10672388B2 (en) | 2017-12-15 | 2020-06-02 | Mitsubishi Electric Research Laboratories, Inc. | Method and apparatus for open-vocabulary end-to-end speech recognition |
US11625630B2 (en) * | 2018-01-26 | 2023-04-11 | International Business Machines Corporation | Identifying intent in dialog data through variant assessment |
US11295083B1 (en) * | 2018-09-26 | 2022-04-05 | Amazon Technologies, Inc. | Neural models for named-entity recognition |
EP3861455A4 (en) * | 2018-10-03 | 2022-06-29 | Camelot UK Bidco Limited | System and methods for training and employing machine learning models for unique string generation and prediction |
US11183194B2 (en) * | 2019-09-13 | 2021-11-23 | International Business Machines Corporation | Detecting and recovering out-of-vocabulary words in voice-to-text transcription systems |
US11830477B2 (en) * | 2020-05-01 | 2023-11-28 | Salesforce, Inc. | Fast and robust unsupervised contextual biasing for speech recognition |
US11481547B2 (en) * | 2021-01-06 | 2022-10-25 | Tencent America LLC | Framework for chinese text error identification and correction |
US20230128244A1 (en) * | 2021-10-26 | 2023-04-27 | Vmware, Inc. | Automated processes and systems for performing log message curation |
US11880511B1 (en) * | 2023-01-30 | 2024-01-23 | Kiloma Advanced Solutions Ltd | Real-time automatic multilingual input correction |
Family Cites Families (67)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS63198154A (en) | 1987-02-05 | 1988-08-16 | インタ−ナショナル・ビジネス・マシ−ンズ・コ−ポレ−ション | Spelling error corrector |
US5829002A (en) * | 1989-02-15 | 1998-10-27 | Priest; W. Curtiss | System for coordinating information transfer and retrieval |
DE69428675T2 (en) | 1993-12-30 | 2002-05-08 | Xerox Corp | Apparatus and method for supporting an implicit structuring of free-form lists, overviews, texts, tables and diagrams in an input system and editing system based on hand signals |
US5805911A (en) | 1995-02-01 | 1998-09-08 | Microsoft Corporation | Word prediction system |
US5764241A (en) | 1995-11-30 | 1998-06-09 | Microsoft Corporation | Method and system for modeling and presenting integrated media with a declarative modeling language for representing reactive behavior |
US5923778A (en) | 1996-06-12 | 1999-07-13 | Industrial Technology Research Institute | Hierarchical representation of reference database for an on-line Chinese character recognition system |
US5943674A (en) | 1996-07-11 | 1999-08-24 | Tandem Computers Incorporated | Data structure representing an interface definition language source file |
US5953541A (en) | 1997-01-24 | 1999-09-14 | Tegic Communications, Inc. | Disambiguating system for disambiguating ambiguous input sequences by displaying objects associated with the generated input sequences in the order of decreasing frequency of use |
US6119079A (en) | 1997-04-24 | 2000-09-12 | Hewlett-Packard Company | Method and structure for tokenized message logging system |
KR100327209B1 (en) | 1998-05-12 | 2002-04-17 | 윤종용 | Software keyboard system using the drawing of stylus and method for recognizing keycode therefor |
US7293231B1 (en) | 1999-03-18 | 2007-11-06 | British Columbia Ltd. | Data entry for personal computing devices |
CA2392446C (en) | 1999-05-27 | 2009-07-14 | America Online Incorporated | Keyboard system with automatic correction |
US7750891B2 (en) | 2003-04-09 | 2010-07-06 | Tegic Communications, Inc. | Selective input system based on tracking of motion parameters of an input device |
US7030863B2 (en) | 2000-05-26 | 2006-04-18 | America Online, Incorporated | Virtual keyboard system with automatic correction |
US6654733B1 (en) | 2000-01-18 | 2003-11-25 | Microsoft Corporation | Fuzzy keyboard |
US7035788B1 (en) | 2000-04-25 | 2006-04-25 | Microsoft Corporation | Language model sharing |
AU2001270420A1 (en) | 2000-07-21 | 2002-02-05 | Raphael Bachmann | Method for a high-speed writing system and high-speed writing device |
US7385591B2 (en) | 2001-03-31 | 2008-06-10 | Microsoft Corporation | Out-of-vocabulary word determination and user interface for text input via reduced keypad keys |
US7117144B2 (en) * | 2001-03-31 | 2006-10-03 | Microsoft Corporation | Spell checking for text input via reduced keypad keys |
US7027988B1 (en) * | 2001-07-20 | 2006-04-11 | At&T Corp. | System and method of ε removal of weighted automata and transducers |
US7042443B2 (en) | 2001-10-11 | 2006-05-09 | Woodard Scott E | Speed Writer program and device with Speed Writer program installed |
US7075520B2 (en) | 2001-12-12 | 2006-07-11 | Zi Technology Corporation Ltd | Key press disambiguation using a keypad of multidirectional keys |
KR100377432B1 (en) * | 2002-03-29 | 2003-05-09 | 주식회사 네오패드 | Creation method for characters/words and the information and communication service method thereby |
US7151530B2 (en) | 2002-08-20 | 2006-12-19 | Canesta, Inc. | System and method for determining an input selected by a user through a virtual interface |
US7199786B2 (en) | 2002-11-29 | 2007-04-03 | Daniel Suraqui | Reduced keyboards system using unistroke input and having automatic disambiguating and a recognition method using said system |
US7251367B2 (en) | 2002-12-20 | 2007-07-31 | International Business Machines Corporation | System and method for recognizing word patterns based on a virtual keyboard layout |
US7098896B2 (en) | 2003-01-16 | 2006-08-29 | Forword Input Inc. | System and method for continuous stroke word-based text input |
US7453439B1 (en) | 2003-01-16 | 2008-11-18 | Forward Input Inc. | System and method for continuous stroke word-based text input |
SG135918A1 (en) | 2003-03-03 | 2007-10-29 | Xrgomics Pte Ltd | Unambiguous text input method for touch screens and reduced keyboard systems |
CA2486125C (en) * | 2003-10-30 | 2011-02-08 | At&T Corp. | A system and method of using meta-data in speech-processing |
DE10357475A1 (en) * | 2003-12-09 | 2005-07-07 | Siemens Ag | Communication device and method for entering and predicting text |
US7250938B2 (en) | 2004-01-06 | 2007-07-31 | Lenovo (Singapore) Pte. Ltd. | System and method for improved user input on personal computing devices |
US20050192802A1 (en) * | 2004-02-11 | 2005-09-01 | Alex Robinson | Handwriting and voice input with automatic correction |
US7706616B2 (en) | 2004-02-27 | 2010-04-27 | International Business Machines Corporation | System and method for recognizing word patterns in a very large vocabulary based on a virtual keyboard layout |
US7574356B2 (en) * | 2004-07-19 | 2009-08-11 | At&T Intellectual Property Ii, L.P. | System and method for spelling recognition using speech and non-speech input |
US20060176283A1 (en) * | 2004-08-06 | 2006-08-10 | Daniel Suraqui | Finger activated reduced keyboard and a method for performing text input |
US7508324B2 (en) | 2004-08-06 | 2009-03-24 | Daniel Suraqui | Finger activated reduced keyboard and a method for performing text input |
JP4027357B2 (en) * | 2004-10-08 | 2007-12-26 | キヤノン株式会社 | Character string input device and control method thereof |
US7634406B2 (en) * | 2004-12-10 | 2009-12-15 | Microsoft Corporation | System and method for identifying semantic intent from acoustic information |
CN100530171C (en) * | 2005-01-31 | 2009-08-19 | 日电（中国）有限公司 | Dictionary learning method and devcie |
US9606634B2 (en) * | 2005-05-18 | 2017-03-28 | Nokia Technologies Oy | Device incorporating improved text input mechanism |
US8036878B2 (en) | 2005-05-18 | 2011-10-11 | Never Wall Treuhand GmbH | Device incorporating improved text input mechanism |
US20070094024A1 (en) * | 2005-10-22 | 2007-04-26 | International Business Machines Corporation | System and method for improving text input in a shorthand-on-keyboard interface |
US20080154576A1 (en) * | 2006-12-21 | 2008-06-26 | Jianchao Wu | Processing of reduced-set user input text with selected one of multiple vocabularies and resolution modalities |
EP2135177A4 (en) | 2007-03-07 | 2011-04-13 | Kannuu Pty Ltd | Method system and apparatus for entering text on a computing device |
US8059101B2 (en) | 2007-06-22 | 2011-11-15 | Apple Inc. | Swipe gestures for touch screen keyboards |
GB2453366B (en) * | 2007-10-04 | 2011-04-06 | Toshiba Res Europ Ltd | Automatic speech recognition method and apparatus |
US8077983B2 (en) * | 2007-10-04 | 2011-12-13 | Zi Corporation Of Canada, Inc. | Systems and methods for character correction in communication devices |
US8010465B2 (en) | 2008-02-26 | 2011-08-30 | Microsoft Corporation | Predicting candidates using input scopes |
US8640040B2 (en) * | 2008-03-28 | 2014-01-28 | Sprint Communications Company L.P. | Persistent event-management access in a mobile communications device |
US8390577B2 (en) | 2008-07-25 | 2013-03-05 | Intuilab | Continuous recognition of multi-touch gestures |
US8423916B2 (en) | 2008-11-20 | 2013-04-16 | Canon Kabushiki Kaisha | Information processing apparatus, processing method thereof, and computer-readable storage medium |
GB0905457D0 (en) * | 2009-03-30 | 2009-05-13 | Touchtype Ltd | System and method for inputting text into electronic devices |
US20100315266A1 (en) | 2009-06-15 | 2010-12-16 | Microsoft Corporation | Predictive interfaces with usability constraints |
US20110063231A1 (en) | 2009-09-14 | 2011-03-17 | Invotek, Inc. | Method and Device for Data Input |
US8812972B2 (en) * | 2009-09-30 | 2014-08-19 | At&T Intellectual Property I, L.P. | Dynamic generation of soft keyboards for mobile devices |
US8135582B2 (en) | 2009-10-04 | 2012-03-13 | Daniel Suraqui | Keyboard system and method for global disambiguation from classes with dictionary database from first and last letters |
US8433762B1 (en) | 2009-11-20 | 2013-04-30 | Facebook Inc. | Generation of nickname dictionary based on analysis of user communications |
US20110154193A1 (en) * | 2009-12-21 | 2011-06-23 | Nokia Corporation | Method and Apparatus for Text Input |
US8423351B2 (en) * | 2010-02-19 | 2013-04-16 | Google Inc. | Speech correction for typed input |
KR101477530B1 (en) * | 2010-03-12 | 2014-12-30 | 뉘앙스 커뮤니케이션즈, 인코포레이티드 | Multimodal text input system, such as for use with touch screens on mobile phones |
US20110320978A1 (en) | 2010-06-29 | 2011-12-29 | Horodezky Samuel J | Method and apparatus for touchscreen gesture recognition overlay |
US8918734B2 (en) | 2010-07-28 | 2014-12-23 | Nuance Communications, Inc. | Reduced keyboard with prediction solutions when input is a partial sliding trajectory |
US8914275B2 (en) * | 2011-04-06 | 2014-12-16 | Microsoft Corporation | Text prediction |
US20120324391A1 (en) * | 2011-06-16 | 2012-12-20 | Microsoft Corporation | Predictive word completion |
US9715489B2 (en) * | 2011-11-10 | 2017-07-25 | Blackberry Limited | Displaying a prediction candidate after a typing mistake |
US20140122057A1 (en) | 2012-10-26 | 2014-05-01 | Google Inc. | Techniques for input method editor language models using spatial input models |
-
2013
- 2013-02-22 US US13/774,656 patent/US9047268B2/en active Active
-
2014
- 2014-01-16 AU AU2014212844A patent/AU2014212844B2/en active Active
- 2014-01-16 EP EP14704208.9A patent/EP2951727A2/en not_active Withdrawn
- 2014-01-16 WO PCT/US2014/011893 patent/WO2014120462A2/en active Application Filing
Non-Patent Citations (2)
Title |
---|
None * |
See also references of WO2014120462A2 * |
Also Published As
Publication number | Publication date |
---|---|
AU2014212844B2 (en) | 2015-07-23 |
WO2014120462A3 (en) | 2014-10-23 |
US20140214405A1 (en) | 2014-07-31 |
AU2014212844A1 (en) | 2015-07-16 |
US9047268B2 (en) | 2015-06-02 |
WO2014120462A2 (en) | 2014-08-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
AU2014212844B2 (en) | Character and word level language models for out-of-vocabulary text input | |
KR101398117B1 (en) | Correction of errors in character strings that include a word delimiter | |
US10489508B2 (en) | Incremental multi-word recognition | |
US10241673B2 (en) | Alternative hypothesis error correction for gesture typing | |
US10073536B2 (en) | Virtual keyboard input for international languages | |
US9081482B1 (en) | Text input suggestion ranking | |
US9122376B1 (en) | System for improving autocompletion of text input | |
KR101484583B1 (en) | Gesture keyboard input of non-dictionary character strings using substitute scoring | |
EP2909709A1 (en) | Multi-gesture text input prediction | |
US9965454B2 (en) | Assisted punctuation of character strings | |
US9298276B1 (en) | Word prediction for numbers and symbols | |
EP3241105A1 (en) | Suggestion selection during continuous gesture input | |
AU2013237735B1 (en) | Correction of errors in character strings that include a word delimiter | |
AU2014200570A1 (en) | Correction of errors in character strings that include a word delimiter |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150826 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
17Q | First examination report despatched |
Effective date: 20190521 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN WITHDRAWN |
|
18W | Application withdrawn |
Effective date: 20190919 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
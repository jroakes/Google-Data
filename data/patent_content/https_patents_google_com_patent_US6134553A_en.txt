US6134553A - Method for using region-sets to focus searches in hierarchical structures - Google Patents
Method for using region-sets to focus searches in hierarchical structures Download PDFInfo
- Publication number
- US6134553A US6134553A US09/222,801 US22280198A US6134553A US 6134553 A US6134553 A US 6134553A US 22280198 A US22280198 A US 22280198A US 6134553 A US6134553 A US 6134553A
- Authority
- US
- United States
- Prior art keywords
- region
- criterion
- regions
- nodes
- documents
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9532—Query formulation
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99933—Query processing, i.e. searching
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99939—Privileged access
Definitions
- the present invention is directed to focusing searches in hierarchical structures. More specifically, the present invention is directed to using region-sets in conjunction with keyword searches to focus those searches in hierarchical structures such as the World Wide Web.
- search engines for searching for pages of unstructured text on the World Wide Web, referred to herein as unstructured documents. Examples of such search engines include AltaVista, Lycos and others. These search engines do an effective job of finding many possible matches based on keywords provided by the user. However, the number of matches is often quite large and it is difficult to locate those few documents of particular interest within such a collection of matching documents.
- search engines provide web directories, for example Yahoo (http://www.yahoo.com/) and Infoseek (http://www.infoseek.com) seek to address this problem of too many matches by providing topic-based hierarchical directories that allow users to navigate the topic ⁇ sub-topic hierarchy and pose keyword-based queries to locate documents classified under any specific topic of interest. While such directories are useful to locate a few matching documents, their utility is restricted.
- the act of classifying a rapidly growing collection of documents into specific topics is a human ⁇ computationally intensive task.
- navigating the topic ⁇ /sub-topic hierarchy is a very inflexible mechanism of focusing the search and does not allow users to pose keyword-based queries to locate documents classified into multiple topics.
- the documents that can be located using the web directories may not include a number of existing documents that would be of interest to the user.
- the present invention provides a method for focusing searches in hierarchical structures.
- the present invention provides a method for directing a search to regions of the hierarchical structure designated as being of interest to the user.
- the hierarchical structure is considered to comprise a universe of documents where the universe includes a plurality of regions.
- the user can select a set of regions (a region-set) related to one another based on some predetermined criterion.
- a keyword search is then directed to the selected regions.
- a first region-set identifying regions in the universe satisfying a first criterion is created.
- a second region-set identifying regions in the universe satisfying a second criterion is also created.
- a third region-set can then be created from the first two region-sets in accordance with a third criterion. Documents from regions in the third region-set are then produced in response to a keyword search of the universe.
- this method can be implemented as a filter operating on results of a keyword search of a universe of documents.
- the method of the present invention can be combined with the search of the documents using the keywords to optimize the searching operation.
- the present invention is employable in hierarchical structures in general, one particular embodiment of the present invention is described in relationship to searching for documents on the World Wide Web. Alternatively, the method of the present invention could be used to focus searching in connection with another hierarchically structured information space such as a UNIX file system.
- FIG. 1 illustrates an example of a hierarchically structured information space in which the present invention may be employed.
- FIG. 2 illustrates examples of region-sets in accordance with an embodiment of the present invention.
- FIG. 3 provides a flow chart for implementing the present invention as a filter for a search engine.
- FIG. 4 provides a flow chart for implementing the method of the present invention in an integrated fashion with the operation of a search engine.
- FIG. 1 illustrates a hierarchically structured information space in which the present invention can be employed.
- the information space is a crude representation of what is commonly referred to as the World Wide Web.
- the structure includes a plurality of hierarchical levels. For instance, at the level 10 are nodes “org”, “com”, “edu”, and "gov”. Each of these nodes can be said to constitute the root of an entire region which includes all of the documents hierarchically below that node. For instance, at one level below the node "com” could be the nodes "xyzcomp", 20, att, 21, and nytimes, 23. Then it can be said that each of these second level nodes define roots of other more particular regions. As shown in FIG.
- node 20 for xyzcomp defines a root for all of the documents associated with the XYZ Computer Company defining region space 25.
- node 21 may have a number of further regions defined below it, for example, the research node, 21A that defines a region 26 that includes further nodes "bala", 21A1 and "suciu", 21A2.
- the universe of documents is obtained by composing the hierarchical structure of the path-names under the hierarchical structure of the domain-names.
- www.research.att.com has as its successors www.research.att.com/bala and www.research.att.com/suciu.
- the latter has www.research.att.com/suciu/papers as a successor.
- a region thus consists of a sub-tree in this hierarchy.
- each element or node is part of the universe.
- a given region is defined by the node or element itself and its dependents, that is, its children, its grandchildren, etc.
- the region for att is defined by all of the documents below node 21 in the hierarchical structure.
- a region-set is a set of regions that are related to one another based on a selected criterion.
- a region-set could be constituted by all of those regions corresponding to web pages of telecommunication companies.
- Such a region-set could be designated "Telecom-Companies”.
- a region-set of this sort would include the root element for telecommunication companies such as AT&T, MCI, etc., namely att.com, mci.com, etc.
- Alternative region-sets are shown by way of example in FIG. 2.
- One such region-set might include all computer science research institutions having web pages.
- region-set 200 which includes cs.upenn.edu (the Computer Science Department of the University of Pennsylvania), research.att.com (the research group at AT&T), and xyzcomp.com (XYZ Computer Company) as examples.
- Another region-set, shown as list 210, might be directed to major universities in the United States. Examples of the contents of such a region-set include: upenn.edu, ucla.edu and others.
- Yet another example of a possible region-set of interest could be Fortune 500 companies, such as AT&T and IBM and our imaginary XYZ Computer Company.
- the region-set illustrated as 220 in FIG. 2 contains the identifiers att.com and ibm.com, xyzcomp.com, etc. representing the roots of regions associated with the Fortune 500 companies.
- Each region in a region-set is specified by giving the name of the root and the region includes the entire set of documents at or hierarchically below that root.
- Region-sets may have common regions. For instance, the region-sets "Fortune 500 Companies" and "Telecom Companies” may both have att.com as a region. Alternatively, region-sets may have overlapping regions. For instance, the research labs at AT&T (research.att.com) is properly contained within the AT&T region (att.com).
- a universe of documents can be a dynamically changing universe, that is, files are constantly being added and deleted and the entire set of URLs (Universal Resource Locators) which identify documents is continuously changing.
- URLs Universal Resource Locators
- the appropriate course is to specify a region by its root. The hope is that the higher in the hierarchy the root is defined the less change there will be since those nodes higher in the hierarchy change less often than points lower in the hierarchy.
- region-sets can be used to focus a keyword search.
- the search can be conducted so as to provide only results, that is documents, that satisfy the keyword criteria as well as the criteria of the region-set selected by the user.
- FIGS. 3 and 4 The process of implementing the combination of the keyword search and the region-set search focus will be described in further detail below when FIGS. 3 and 4 are described.
- the present invention further provides that once a number of named region-sets have been defined it is possible to dynamically create new region-sets by applying certain operators on the already named region-sets.
- the operators form an algebra of region-sets in the hierarchy.
- region-set 200 of FIG. 2 as "r 1 "
- region-set 210 of FIG. 2 as "r 2”
- region-set 220 in FIG. 2 as "r 3 ".
- the following operators are possible in the region-set algebra defined.
- a second operator would determine the intersection ( ⁇ ) of two region-sets. For instance, assume for the sake of this example that XYZCOMP is one of the Fortune 500 companies, then r 1 ⁇ r 3 would yield regions which are found in both r 1 and r 2 and would include xyzcomp.com. A third operator would provide as a resulting region-set those regions from a first set that are not found in a second set (-). For instance, as in the example above, assume xyzcomp.com is common to both r 1 and r 3 . Then, the operation r 1 -r 3 would yield all of the elements of region-set r 1 that are not contained in region-set r 3 and xyzcomp.com would not be in the created region-set.
- a new region-set as being constituted by those regions of a first set that have regions of a second set. This is not strictly an intersection operation. Instead, it relates to an operation on region-sets where the region-set elements are of different levels in the hierarchy. For instance, if one wished to enumerate major universities having computer science research labs then one could perform the operation r 2 .OR left.r 1 and this operation would yield a new region-set that would include such entries as upenn.edu which corresponds to the University of Pennsylvania because r 1 listed cs.upenn.edu, a computer science department that is contained within upenn.edu.
- Another operator .OR right. yields those regions of the left region set that are contained in regions of the first region set. So, referring back to the three example region sets r 1 .OR right.r 2 (computer science research institutions contained in major universities) the result would be cs.upenn.edu. Note that this contrasts from r 2 .OR left.r 1 which yielded upenn.edu, a node up one level in the hierarchy from cs.upenn.edu. There is also a variation of this operator .OR right. to capture an identical region that is included in both region sets.
- the hierarchical universe is unsorted: that is, for some element which is an element of the universe there is no order on its successors.
- nodes in the universe are denoted by strings. This leads naturally to an order.
- each node of a tree has a name which is a string.
- Several nodes can have the same name but it is required that the names of all children of a given node be distinct from each other.
- each node in the tree can be uniquely identified by concatenating the names of each node along the path from the root of the tree to that node and separating them with some special character-like "/".
- region-sets Having defined region-sets and operators for defining new region-sets based on existing region-sets, it is appropriate to turn to how the region-sets can be coupled with keyword-based queries in search engines to improve the searching operations in such hierarchically structured spaces.
- the goal is to efficiently answer queries of the form: "Find all URL's matching keywords (w 1 , . . . w n ) in region-set s, where s may be any region-set expression including the selection of a single pre-defined region set, e.g., "Telecom Companies”.
- the search request including the regions-set expression and keyword(s) is received, step 301.
- the region-set expression s is then evaluated, step 302. (Evaluation of region-set expressions is described in further detail later in this specification.) If the expression involves operators defining a new region set, it is then determined whether the resulting region-set is empty, in step 303. If the region-set is empty, then the searching operation is stopped, step 310. If, however, the resulting region-set is not empty, then a keyword search engine is used with the keywords from the search request (w 1 . . . w n ) 304.
- the process selects only those URLs from step 304 found in the region-set s 305.
- This approach has the advantage that the filtering using the region-set expression is decoupled from the search engine.
- another mechanism may be more beneficial where the region-set s is small and the keywords (w 1 . . . , w n ) match many documents, since the entire universe will still have to be searched for the keywords despite the fact that the region-set s is rather small.
- the region-set information is coupled with the internals of the search engine.
- Web search engines use inverted files on keywords for query processing.
- the inverted files which are lists of document identifiers in a document collection that correspond to documents that contain a term, are precomputed off-line for each term in the document collection.
- the region-sets can be used to prune portions of the inverted list that are processed by the search engine. Since the construction of these inverted lists is under the control of the search engine builder, it is possible to order the lists to follow the same lexicographic order as that of the region mechanism and provide a B+tree on top of each of them. (B-trees are well known by those skilled in the art.
- the search request including the region-set expression and the keyword(s) is received in step 401.
- the region-set expression is then evaluated in step 402 and will be described later in the specification.
- the inverted list for a given keyword wi is retrieved and the entries of that list are filtered against the region-set(s) in the pruning step of step 404.
- the pruned inverted list is then processed using the corresponding keyword w 1 , step 405. It is then determined whether any keyword inverted list has not yet been retrieved in step 406. If there are no such lists as yet unretrieved, then the method proceeds to step 407 and the search is stopped and results are presented.
- step 403 If, however, a keyword inverted list remains that has not yet been retrieved, then the process returns to step 403 and loops through steps 403 to 406 until all of the keyword inverted lists have been retrieved.
- the region-sets thus speed up the search engine by pruning the inverted lists to identify only those elements which satisfy the region-set expression.
- the region-set expression can be evaluated by an efficient algorithm.
- Region-set algebra is defined over trees and there are four possible relationships between any two nodes u 1 and u 2 in the tree: u 1 is a proper ancestor of u 2 , u 1 and u 2 are identical, u 2 is a proper ancestor of u 1 , or none of these. Only one of these four relationships can hold between u 1 and u 2 . Evaluating an expression in the region-set algebra essentially requires the ability to determine these relationships between sets of nodes.
- the string representation of u 1 is a prefix for the string representation of u 2
- the string representation of u 1 and u 2 are identical
- the string representation of u 2 is a prefix of the string representation of u 1 , or none of these.
- the explanation of the algorithm herein refers to it as table-driven.
- the algorithm takes two lexicographically sorted region-sets S 1 and S 2 and one of the operators and computes a lexicographically sorted region-set S 1 op S 2 . While the algorithm does not handle the union operation, the set union of two lexicographically sorted region-sets can be easily computed by simply merging the two region-sets. Given any complex expression in the region-algebra, (for example (r x .OR right.r y ) ⁇ r z ), the result of an inner operator ((r x .OR right.r y ) in the example) in the expression can be pipelined to an outer operator in the expression.
- each of the input region-sets is terminated by a special string that is lexicographically after all the strings in the two region-sets.
- pointer P 1 is positioned at the element u 1 in the region-set S 1 and the pointer P 2 is positioned at the element u 2 in the regions set S 2 .
- five possible relationships between strings u 1 and u 2 are worth distinguishing:
- u 1 is lexicographically before u 2 , while not being a proper prefix of u 2 , denoted by u 1 ⁇ u 2 ;
- u 1 is a proper prefix of u 2 , denoted by u 1 ⁇ e u 2 ;
- u 2 is a proper prefix of u 1 denoted by u 1 is > e u 2 ;
- U 2 is lexicographically before u 1 , while not being a proper prefix of u 1 , denoted by u 1 >u 2 .
- Print-P 1 element u 1 is output and pointer P 1 is advanced;
- Advance-P 2 nothing is output and pointer P 2 is advanced.
- the algorithm terminates when P 1 is positioned beyond the end of the region-set S 1 .
- Table 1 summarizes the action taken by the algorithm for the various possible operators considered by the algorithm for the five relationships between strings u 1 and u 2 mentioned above.
- pointer P 2 can be advanced.
- pointer P 1 is positioned at element ul in region-set S 1 and pointer P 2 is positioned at the element u 2 in the region-set S 2 and element u 2 is not a witness for the presence of u 1 in the output of Si contained in S 2 . If u 2 is lexicographically before, but not a proper prefix of u 1 , the first element after u 2 in S 2 that could be a proper prefix of u 1 could be quickly located using a B+tree available on S 2 . Pointer P 2 does not have to necessarily perform a linear scan of S 2 .
- Table 2 gives the number of different regions and count of document URLs from the collection for each region-set. Since the document URLs are only a sample of existing URLs, not every region in a region-set is necessarily populated. This explains why in Table 2, some region-sets have fewer documents than the number of regions.
- Table 3 shows how Web searches can be focused by using region-sets. Comparing the columns labeled by the six region-sets against the Total Matches column shows that only a small fraction of the inverted lists need to be examined. For example, a region search on occurrence of "stocks" in the Dow Jones-30 companies region-set shows that 7 URLs matched and a region search in the fortune-500-companies-region-set shows 204 URLs matched. The alternative, in the absence of regions, would have been to search through an inverted file containing 6,844 entries corresponding to document URLs that have an occurrence of "stocks". Performing similar queries on dynamically generated region-sets rather than named region-sets can result in even better selectivity as suggested by the following examples.
- the region-set expression (universities.OR left.eed) .OR left. csd identifies schools that have both electrical engineering and computer science departments. The count of such schools that have matches for the term "faculty" is 740 in our database. In contrast, there are 1172 matches for "faculty" in the university region-set.
- the UNIX directory scheme groups related files together, and each directory can be viewed as a region consisting of all the files under that directory's hierarchy. Groups of related regions can be combined into a region-set.
- region-sets are natural: "DB-Group” which contains regions corresponding to the files of database people; "papers” which contains regions corresponding to technical paper files of the people in the organization; and "source-code” which contains regions corresponding to the source-code files of the people.
- a region-set can be stored as a list of directory names and a text file and be operated upon by referring to the file name. The actual end use of the region-sets is to specify a set of files in conjunction with tools for operations like searching, for example, copying.
- the command region takes an expression in a region-set algebra and efficiently evaluates it as above.
- the operators are translated into standard characters available on a keyboard as shown in Table 4 below.
- Region-sets can also be used to improve performance of operations like search.
- a popular utility in the Unix domain to speed up searches in text files is GLIMPSE (HTTP://glimpse.cs.Arizona.edu).
- Glimpse partitions a file collection into blocks and uses a compact inverted index to aid in focused searching rather than requiring users to search the entire collection.
- Region-sets go a step further in letting the user dynamically specify a much narrower portion of the file-system space. For example, a user trying to locate a function implementing sort would like to restrict the search to source files such as those in the source-code region-set described above.
- Glimpse operates in two stages: first it gathers the list of candidate files; it then performs a modified agrep(?) search for the pattern on the candidate file. Region-sets are interposed into Glimpse by extracting the candidate file names and filtering them via the region mechanism. This significantly reduces the actual files on which the search operation is performed. A comparison of Glimpse searching with and without regions shows dramatic speed-ups. For a performance study six synthetic regions were created from a collection of text files belonging to one of the inventors. The sets varied in percentage of the total collection from about 2% to 100% (all) by byte count. All experiments were run on a Sun Microsystems dual-CPU Sun 168 MHZ ultraSparc with 524M of Main Memory.
- Table 5 shows the byte count percentage of total bytes, number of files, number of regions and the time taken to search for a fixed string in each of the region-sets.
- the region-set mechanism described above enables a user to augment query keywords with a flexible specification of one or more region-sets to restrict the space of documents to be searched.
- the user can select one or more pre-defined collection of region-sets users or the user can dynamically create new region-sets using operators in a tree-based region-set algebra. Furthermore, a uniform and efficient table-driven evaluation of expressions in this algebra has been presented.
- region-set mechanism and the implementation of such a mechanism in conjunction with a search engine as described with reference to FIGS. 3 and 4 can all be realized in software running on a CPU. That CPU could be centrally located within a network operating as a shared resource. Alternatively, the software could be operated as a filter at the user's location.
Abstract
Description
TABLE 1 __________________________________________________________________________ μ.sub.1 string op μ.sub.2 OPERATOR ∪.sub.1 < ∪.sub.2 ∪.sub.1 < .sub.e ∪.sub.2 ∪.sub.1 = ∪.sub.2 ∪.sub.1 > .sub.e ∪.sub.2 μ.sub.1 > μ.sub.2 __________________________________________________________________________ ∩ Advance-P1 Advance-P1 Print-P1 Advance-P2 Advance-P2 .OR right. Advance-P1 Advance-P1 Advance-P1 Print-P1 Advance-P2 .OR right. Advance-P1 Advance-P1 Print-P1 Print-P1 Advance-P2 .OR left. Advance-P1 Print-P1 Advance-P2 Advance-P2 Advance-P2 .OR left. Advance-P1 Print-P1 Print-P1 Advance-P2 Advance-P2 V Advance-P1 Print-P1 Print-P1 Print-P1 Advance-P2 Print-P1 Print-P1 Advance-P1 Advance-P2 Advance-P2 Print-P1 Print-P1 Print-P1 Advance-P1 Advance-P2 Print-P1 Print-P1 Advance-P1 Advance-P1 Advance-P2 Print-P1 Advance-P1 Advance-P2 Advance-P2 Advance-P2 Print-P1 Advance-P1 Advance-P1 Advance-P2 Advance-P2 __________________________________________________________________________
TABLE 2 ______________________________________ Region-set busd csd dj30 esd 15C0 univ ______________________________________ Number of regions 317 287 28 465 380 3033 Documents in region-set 32 1727 795 224 12746 11552 ______________________________________
TABLE 3 ______________________________________ Total Documents in Region-sets String Matches busd csd dj30 eed f500 univ ______________________________________ database 7157 4 143 59 14 931 932 faculty 2299 1 260 8 44 278 1172 ipo 290 0 3 2 0 20 10 stocks 5844 1 22 7 0 204 118 telephone 4597 3 52 23 6 400 408 ______________________________________
TABLE 4 ______________________________________ ∪ + ∩ * - - .OR right. < .OR right. <= .OR left. > .OR left. >= ∇ <=> -< -<= -> ->= ______________________________________
TABLE 5 __________________________________________________________________________ Region a b c d e all __________________________________________________________________________ Bytes 4234925 5029229 3474170 4500865 38770611 190161764 Percentage 2.25 2.64 1.82 23.93 20.39 100. Files 190 357 345 3808 5830 26258Regions 11 25 25 90 44 1 Time (sec) 1.409 1.269 1.486 2.038 1.583 14.93 __________________________________________________________________________
TABLE 6 ______________________________________ Glimpse Block Region-set times (sec) Type String % a b c d e all (sec) ______________________________________ suciu 2.79 .62 .63 .62 .81 .63 2.18 1.73 srivesta 13.95 1.15 1.14 1.14 1.78 2.48 14.2 12.8 jacobson 26.51 1.70 1.00 1.89 3.40 5.0 25 21.67 bala 94.88 4.20 4.70 4.6 12.6 17.3 320 208.42 ______________________________________
Claims (16)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/222,801 US6134553A (en) | 1997-05-20 | 1998-12-30 | Method for using region-sets to focus searches in hierarchical structures |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/879,500 US5970489A (en) | 1997-05-20 | 1997-05-20 | Method for using region-sets to focus searches in hierarchical structures |
US09/222,801 US6134553A (en) | 1997-05-20 | 1998-12-30 | Method for using region-sets to focus searches in hierarchical structures |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/879,500 Continuation US5970489A (en) | 1997-05-20 | 1997-05-20 | Method for using region-sets to focus searches in hierarchical structures |
Publications (1)
Publication Number | Publication Date |
---|---|
US6134553A true US6134553A (en) | 2000-10-17 |
Family
ID=25374297
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/879,500 Expired - Lifetime US5970489A (en) | 1997-05-20 | 1997-05-20 | Method for using region-sets to focus searches in hierarchical structures |
US09/222,801 Expired - Lifetime US6134553A (en) | 1997-05-20 | 1998-12-30 | Method for using region-sets to focus searches in hierarchical structures |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/879,500 Expired - Lifetime US5970489A (en) | 1997-05-20 | 1997-05-20 | Method for using region-sets to focus searches in hierarchical structures |
Country Status (1)
Country | Link |
---|---|
US (2) | US5970489A (en) |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030009453A1 (en) * | 2001-07-03 | 2003-01-09 | International Business Machines Corporation | Method and system for performing a pattern match search for text strings |
US6601061B1 (en) * | 1999-06-18 | 2003-07-29 | Surfwax, Inc. | Scalable information search and retrieval including use of special purpose searching resources |
US20040054807A1 (en) * | 2002-09-11 | 2004-03-18 | Microsoft Corporation | System and method for creating improved overlay network with an efficient distributed data structure |
WO2005036421A1 (en) * | 2003-09-18 | 2005-04-21 | International Business Machines Corporation | Representations of queries in search spaces as a resource for interaction |
US6973448B1 (en) * | 2000-08-30 | 2005-12-06 | Microsoft Corporation | Method and system for providing service listings in electronic yellow pages |
US20050289026A1 (en) * | 2000-12-22 | 2005-12-29 | Dunn Charles L | Online revenue sharing |
US20060184523A1 (en) * | 2005-02-15 | 2006-08-17 | Microsoft Corporation | Search methods and associated systems |
US20090099993A1 (en) * | 2007-10-10 | 2009-04-16 | Northern Light Group, Llc | Method and apparatus for identifying and extracting meaning in documents |
US7533245B2 (en) | 2003-08-01 | 2009-05-12 | Illinois Institute Of Technology | Hardware assisted pruned inverted index component |
US20100274785A1 (en) * | 2009-04-24 | 2010-10-28 | At&T Intellectual Property I, L.P. | Database Analysis Using Clusters |
US7844594B1 (en) | 1999-06-18 | 2010-11-30 | Surfwax, Inc. | Information search, retrieval and distillation into knowledge objects |
US20110066600A1 (en) * | 2009-09-15 | 2011-03-17 | At&T Intellectual Property I, L.P. | Forward decay temporal data analysis |
US9575961B2 (en) | 2014-08-28 | 2017-02-21 | Northern Light Group, Llc | Systems and methods for analyzing document coverage |
US9754046B2 (en) | 2012-11-09 | 2017-09-05 | Microsoft Technology Licensing, Llc | Taxonomy driven commerce site |
US9798771B2 (en) | 2010-08-06 | 2017-10-24 | At&T Intellectual Property I, L.P. | Securing database content |
US11226946B2 (en) | 2016-04-13 | 2022-01-18 | Northern Light Group, Llc | Systems and methods for automatically determining a performance index |
US11544306B2 (en) | 2015-09-22 | 2023-01-03 | Northern Light Group, Llc | System and method for concept-based search summaries |
US11886477B2 (en) | 2015-09-22 | 2024-01-30 | Northern Light Group, Llc | System and method for quote-based search summaries |
Families Citing this family (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3655714B2 (en) * | 1996-11-15 | 2005-06-02 | 株式会社ニューズウオッチ | Information filtering apparatus and recording medium |
US7613992B1 (en) * | 1999-08-16 | 2009-11-03 | Raichur Arvind A | Dynamic index and search engine server |
US9195756B1 (en) | 1999-08-16 | 2015-11-24 | Dise Technologies, Llc | Building a master topical index of information |
US9977831B1 (en) | 1999-08-16 | 2018-05-22 | Dise Technologies, Llc | Targeting users' interests with a dynamic index and search engine server |
US8504554B2 (en) | 1999-08-16 | 2013-08-06 | Raichur Revocable Trust, Arvind A. and Becky D. Raichur | Dynamic index and search engine server |
US7062483B2 (en) * | 2000-05-18 | 2006-06-13 | Endeca Technologies, Inc. | Hierarchical data-driven search and navigation system and method for information retrieval |
US7325201B2 (en) * | 2000-05-18 | 2008-01-29 | Endeca Technologies, Inc. | System and method for manipulating content in a hierarchical data-driven search and navigation system |
US7035864B1 (en) | 2000-05-18 | 2006-04-25 | Endeca Technologies, Inc. | Hierarchical data-driven navigation system and method for information retrieval |
US7617184B2 (en) | 2000-05-18 | 2009-11-10 | Endeca Technologies, Inc. | Scalable hierarchical data-driven navigation system and method for information retrieval |
FR2812096B1 (en) * | 2000-07-19 | 2006-06-16 | Sagem | METHOD FOR EXECUTING A TASK RELATING TO AT LEAST ONE INFORMATION PAGE OF A COMPUTER NETWORK AND ASSOCIATED SOFTWARE PRODUCT |
US7069310B1 (en) * | 2000-11-10 | 2006-06-27 | Trio Systems, Llc | System and method for creating and posting media lists for purposes of subsequent playback |
US20030120630A1 (en) * | 2001-12-20 | 2003-06-26 | Daniel Tunkelang | Method and system for similarity search and clustering |
US7403939B1 (en) | 2003-05-30 | 2008-07-22 | Aol Llc | Resolving queries based on automatic determination of requestor geographic location |
US7660784B1 (en) | 2003-05-30 | 2010-02-09 | Aol Llc | Geographically resolving a keyword query |
JP2005011180A (en) * | 2003-06-20 | 2005-01-13 | Nec Corp | Url retrieval system, server therefor, and url retrieval method |
US8037082B2 (en) | 2003-07-22 | 2011-10-11 | International Business Machines Corporation | Isolated ordered regions (IOR) node order |
US7428528B1 (en) | 2004-03-31 | 2008-09-23 | Endeca Technologies, Inc. | Integrated application for manipulating content in a hierarchical data-driven search and navigation system |
US20050246391A1 (en) * | 2004-04-29 | 2005-11-03 | Gross John N | System & method for monitoring web pages |
US8019752B2 (en) | 2005-11-10 | 2011-09-13 | Endeca Technologies, Inc. | System and method for information retrieval from object collections with complex interrelationships |
US8676802B2 (en) | 2006-11-30 | 2014-03-18 | Oracle Otc Subsidiary Llc | Method and system for information retrieval with clustering |
US7856434B2 (en) * | 2007-11-12 | 2010-12-21 | Endeca Technologies, Inc. | System and method for filtering rules for manipulating search results in a hierarchical search and navigation system |
US8874708B2 (en) * | 2009-05-26 | 2014-10-28 | Red Hat, Inc. | Location discovery based on DNS |
JP6565628B2 (en) * | 2015-11-19 | 2019-08-28 | 富士通株式会社 | Search program, search device, and search method |
US10902444B2 (en) | 2017-01-12 | 2021-01-26 | Microsoft Technology Licensing, Llc | Computer application market clusters for application searching |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5659729A (en) * | 1996-02-01 | 1997-08-19 | Sun Microsystems, Inc. | Method and system for implementing hypertext scroll attributes |
US5737560A (en) * | 1995-12-29 | 1998-04-07 | Silicon Graphics, Inc. | Graphical method and system for accessing information on a communications network |
US5751956A (en) * | 1996-02-21 | 1998-05-12 | Infoseek Corporation | Method and apparatus for redirection of server external hyper-link references |
US5751961A (en) * | 1996-01-31 | 1998-05-12 | Bell Communications Research, Inc. | Integrated internet system for translating logical addresses of internet documents to physical addresses using integrated service control point |
US5870559A (en) * | 1996-10-15 | 1999-02-09 | Mercury Interactive | Software system and associated methods for facilitating the analysis and management of web sites |
US5877759A (en) * | 1997-03-26 | 1999-03-02 | Netscape Communications Corporation | Interface for user/agent interaction |
US5877766A (en) * | 1997-08-15 | 1999-03-02 | International Business Machines Corporation | Multi-node user interface component and method thereof for use in accessing a plurality of linked records |
-
1997
- 1997-05-20 US US08/879,500 patent/US5970489A/en not_active Expired - Lifetime
-
1998
- 1998-12-30 US US09/222,801 patent/US6134553A/en not_active Expired - Lifetime
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5737560A (en) * | 1995-12-29 | 1998-04-07 | Silicon Graphics, Inc. | Graphical method and system for accessing information on a communications network |
US5751961A (en) * | 1996-01-31 | 1998-05-12 | Bell Communications Research, Inc. | Integrated internet system for translating logical addresses of internet documents to physical addresses using integrated service control point |
US5659729A (en) * | 1996-02-01 | 1997-08-19 | Sun Microsystems, Inc. | Method and system for implementing hypertext scroll attributes |
US5751956A (en) * | 1996-02-21 | 1998-05-12 | Infoseek Corporation | Method and apparatus for redirection of server external hyper-link references |
US5870559A (en) * | 1996-10-15 | 1999-02-09 | Mercury Interactive | Software system and associated methods for facilitating the analysis and management of web sites |
US5877759A (en) * | 1997-03-26 | 1999-03-02 | Netscape Communications Corporation | Interface for user/agent interaction |
US5877766A (en) * | 1997-08-15 | 1999-03-02 | International Business Machines Corporation | Multi-node user interface component and method thereof for use in accessing a plurality of linked records |
Cited By (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6601061B1 (en) * | 1999-06-18 | 2003-07-29 | Surfwax, Inc. | Scalable information search and retrieval including use of special purpose searching resources |
US8204881B2 (en) | 1999-06-18 | 2012-06-19 | Vision Point Services, Llc | Information search, retrieval and distillation into knowledge objects |
US7844594B1 (en) | 1999-06-18 | 2010-11-30 | Surfwax, Inc. | Information search, retrieval and distillation into knowledge objects |
US7437357B2 (en) | 2000-08-30 | 2008-10-14 | Microsoft Corporation | Method and system for providing service listings in electronic yellow pages |
US6973448B1 (en) * | 2000-08-30 | 2005-12-06 | Microsoft Corporation | Method and system for providing service listings in electronic yellow pages |
US20050273469A1 (en) * | 2000-08-30 | 2005-12-08 | Microsoft Corporation | Method and system for providing service listings in electronic yellow pages |
US20050289026A1 (en) * | 2000-12-22 | 2005-12-29 | Dunn Charles L | Online revenue sharing |
US7054855B2 (en) * | 2001-07-03 | 2006-05-30 | International Business Machines Corporation | Method and system for performing a pattern match search for text strings |
US20030009453A1 (en) * | 2001-07-03 | 2003-01-09 | International Business Machines Corporation | Method and system for performing a pattern match search for text strings |
US7613796B2 (en) * | 2002-09-11 | 2009-11-03 | Microsoft Corporation | System and method for creating improved overlay network with an efficient distributed data structure |
US20040054807A1 (en) * | 2002-09-11 | 2004-03-18 | Microsoft Corporation | System and method for creating improved overlay network with an efficient distributed data structure |
US7533245B2 (en) | 2003-08-01 | 2009-05-12 | Illinois Institute Of Technology | Hardware assisted pruned inverted index component |
WO2005036421A1 (en) * | 2003-09-18 | 2005-04-21 | International Business Machines Corporation | Representations of queries in search spaces as a resource for interaction |
US20060184523A1 (en) * | 2005-02-15 | 2006-08-17 | Microsoft Corporation | Search methods and associated systems |
US20090099993A1 (en) * | 2007-10-10 | 2009-04-16 | Northern Light Group, Llc | Method and apparatus for identifying and extracting meaning in documents |
US8583580B2 (en) | 2007-10-10 | 2013-11-12 | Northern Light Group, Llc | Method and apparatus for identifying and extracting meaning in documents |
US7877344B2 (en) | 2007-10-10 | 2011-01-25 | Northern Light Group, Llc | Method and apparatus for extracting meaning from documents using a meaning taxonomy comprising syntactic structures |
US20110119271A1 (en) * | 2007-10-10 | 2011-05-19 | Northern Light Group, Llc | Method and apparatus for identifying and extracting meaning in documents |
US8161048B2 (en) | 2009-04-24 | 2012-04-17 | At&T Intellectual Property I, L.P. | Database analysis using clusters |
US20100274785A1 (en) * | 2009-04-24 | 2010-10-28 | At&T Intellectual Property I, L.P. | Database Analysis Using Clusters |
US20110066600A1 (en) * | 2009-09-15 | 2011-03-17 | At&T Intellectual Property I, L.P. | Forward decay temporal data analysis |
US8595194B2 (en) | 2009-09-15 | 2013-11-26 | At&T Intellectual Property I, L.P. | Forward decay temporal data analysis |
US9798771B2 (en) | 2010-08-06 | 2017-10-24 | At&T Intellectual Property I, L.P. | Securing database content |
US9965507B2 (en) | 2010-08-06 | 2018-05-08 | At&T Intellectual Property I, L.P. | Securing database content |
US9754046B2 (en) | 2012-11-09 | 2017-09-05 | Microsoft Technology Licensing, Llc | Taxonomy driven commerce site |
US10255377B2 (en) * | 2012-11-09 | 2019-04-09 | Microsoft Technology Licensing, Llc | Taxonomy driven site navigation |
US9575961B2 (en) | 2014-08-28 | 2017-02-21 | Northern Light Group, Llc | Systems and methods for analyzing document coverage |
US10380252B2 (en) | 2014-08-28 | 2019-08-13 | Northern Light Group, Llc | Systems and methods for analyzing document coverage |
US11544306B2 (en) | 2015-09-22 | 2023-01-03 | Northern Light Group, Llc | System and method for concept-based search summaries |
US11886477B2 (en) | 2015-09-22 | 2024-01-30 | Northern Light Group, Llc | System and method for quote-based search summaries |
US11226946B2 (en) | 2016-04-13 | 2022-01-18 | Northern Light Group, Llc | Systems and methods for automatically determining a performance index |
Also Published As
Publication number | Publication date |
---|---|
US5970489A (en) | 1999-10-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6134553A (en) | Method for using region-sets to focus searches in hierarchical structures | |
Rowley | The controlled versus natural indexing languages debate revisited: a perspective on information retrieval practice and research | |
US7139977B1 (en) | System and method for producing a virtual online book | |
US5842206A (en) | Computerized method and system for qualified searching of electronically stored documents | |
Burkowski | Retrieval activities in a database consisting of heterogeneous collections of structured text | |
Maarek et al. | Automatically organizing bookmarks per contents | |
US6363377B1 (en) | Search data processor | |
JP3665480B2 (en) | Document organizing apparatus and method | |
Attardi et al. | Automatic Web page categorization by link and context analysis | |
US6701310B1 (en) | Information search device and information search method using topic-centric query routing | |
US5642502A (en) | Method and system for searching for relevant documents from a text database collection, using statistical ranking, relevancy feedback and small pieces of text | |
CN100375090C (en) | Retrieving matching documents by queries in any national language | |
JP4644420B2 (en) | Method and machine-readable storage device for retrieving and presenting data over a network | |
US7024405B2 (en) | Method and apparatus for improved internet searching | |
KR19980701598A (en) | METHODS AND / OR SYSTEMS FOR ACESSING INFORMATIOM | |
Attardi et al. | Categorisation by Context. | |
Cutting et al. | An object-oriented architecture for text retrieval. | |
Chowdhury | Template mining for information extraction from digital documents | |
Aboud et al. | Querying a hypertext information retrieval system by the use of classification | |
Jacobson et al. | Focusing search in hierarchical structures with directory sets | |
Attardi et al. | Theseus: categorization by context | |
US7490082B2 (en) | System and method for searching internet domains | |
Li et al. | A new architecture for web meta-search engines | |
Agosti et al. | TACHIR: A Tool for Automatic Construction of Hypertexts for Information Retrieval. | |
Ceric | New methods and tools for the World Wide Web search |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: AT&T CORP., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:JACOBSON, GUY;KRISHNAMURTHY, BALACHANDER;SRIVASTAVA, DIVESH;AND OTHERS;SIGNING DATES FROM 19980123 TO 19980218;REEL/FRAME:041773/0776Owner name: AT&T PROPERTIES, LLC, NEVADAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AT&T CORP.;REEL/FRAME:041784/0843Effective date: 20170316Owner name: AT&T INTELLECTUAL PROPERTY II, L.P., GEORGIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AT&T PROPERTIES, LLC;REEL/FRAME:041785/0012Effective date: 20170316 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AT&T INTELLECTUAL PROPERTY II, L.P.;REEL/FRAME:042515/0419Effective date: 20170328 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044213/0313Effective date: 20170929 |
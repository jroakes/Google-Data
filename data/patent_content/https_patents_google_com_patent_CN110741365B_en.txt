CN110741365B - Data structure query for managing load time in multimedia content - Google Patents
Data structure query for managing load time in multimedia content Download PDFInfo
- Publication number
- CN110741365B CN110741365B CN201780092060.2A CN201780092060A CN110741365B CN 110741365 B CN110741365 B CN 110741365B CN 201780092060 A CN201780092060 A CN 201780092060A CN 110741365 B CN110741365 B CN 110741365B
- Authority
- CN
- China
- Prior art keywords
- processing system
- data processing
- signals
- computing device
- time
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 239000011159 matrix material Substances 0.000 claims abstract description 137
- 238000000034 method Methods 0.000 claims abstract description 68
- 238000013139 quantization Methods 0.000 claims abstract description 50
- 230000005236 sound signal Effects 0.000 claims abstract description 39
- 238000012545 processing Methods 0.000 claims description 262
- 230000004044 response Effects 0.000 claims description 30
- 230000000694 effects Effects 0.000 claims description 17
- 238000004891 communication Methods 0.000 claims description 14
- 238000013507 mapping Methods 0.000 claims description 6
- 238000010801 machine learning Methods 0.000 claims description 4
- 230000004931 aggregating effect Effects 0.000 claims 1
- 238000003058 natural language processing Methods 0.000 description 53
- 230000008569 process Effects 0.000 description 18
- 230000009471 action Effects 0.000 description 14
- 230000006870 function Effects 0.000 description 12
- 238000004590 computer program Methods 0.000 description 11
- 101100264195 Caenorhabditis elegans app-1 gene Proteins 0.000 description 8
- 230000005540 biological transmission Effects 0.000 description 6
- 230000003993 interaction Effects 0.000 description 6
- 238000013515 script Methods 0.000 description 5
- 238000010586 diagram Methods 0.000 description 4
- 238000001914 filtration Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000009877 rendering Methods 0.000 description 3
- 238000012935 Averaging Methods 0.000 description 2
- 230000004913 activation Effects 0.000 description 2
- 230000033001 locomotion Effects 0.000 description 2
- 230000000877 morphologic effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- 241000282412 Homo Species 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 238000003066 decision tree Methods 0.000 description 1
- 230000009977 dual effect Effects 0.000 description 1
- 239000012634 fragment Substances 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000000463 material Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 238000011002 quantification Methods 0.000 description 1
- 230000004043 responsiveness Effects 0.000 description 1
- 230000011218 segmentation Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000013179 statistical model Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/432—Query formulation
- G06F16/433—Query formulation using audio data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/48—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/435—Filtering based on additional data, e.g. user or group profiles
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/43—Querying
- G06F16/438—Presentation of query results
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1822—Parsing for meaning understanding
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1815—Semantic context, e.g. disambiguation of the recognition hypotheses based on word meaning
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L2015/088—Word spotting
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Abstract
A system and method data structure query for managing loading time of multimedia content is provided. A system receives an input audio signal from a computing device and identifies a request. The system identifies a quantization date value and a quantization time value. The system retrieves signals for the quantized date value and the quantized time value via a lookup in a multi-dimensional matrix data structure having the quantized date value and the quantized time value. The system generates a query with the signals and applies the query to a multimedia content data structure to identify a plurality of multimedia content items that match the plurality of signals. The system provides an indication of the plurality of multimedia content items that match the signals retrieved from the multi-dimensional matrix data structure for the quantization date value and the quantization time value.
Description
Background
Computing devices with limited interfaces may present challenges for filtering large data sets, which may delay the loading time of a multimedia content item or portion thereof or cause excessive memory usage.
Disclosure of Invention
The present disclosure relates generally to managing response time and validity of data structure queries and loading time of multimedia content items identified via data structure queries. The systems and methods of the present disclosure relate to: a query is constructed using a first data structure storing a signally populated multidimensional matrix and then applied to a second data structure to filter the data set to identify multimedia content items responsive to the request. The system may utilize a multi-dimensional matrix data structure that includes values of signals that may be used to generate queries. The multi-dimensional matrix data structure may be a two-by-two matrix of each of the signals, where a first dimension corresponds to a date and a second dimension corresponds to a time. The first dimension and the second dimension may be quantized to provide a multi-dimensional matrix data structure having a reduced number of rows and columns as compared to the unquantized values. By creating a smaller matrix structure, the data processing system may respond to queries of the first data structure with reduced latency and latency. The data processing system may generate a second query by using the values of the signals in the matrix structure and then apply the second query to a second data structure storing the multimedia content items. Thus, by generating queries using a reduced matrix data structure, the data processing system may reduce latency and delay in loading multimedia content items in response to requests.
At least one aspect relates to a system for data structure querying to manage loading time of multimedia content. The system may include: a data processing system comprising a digital assistant component executed by one or more processors. The digital assistant component can provide audio input and output to and from a user in a conversational fashion and can include or interface with a natural language processor component and a query generator component. The data processing system may receive, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of the computing device. The data processing system may parse the input audio signal to identify the request. The data processing system may identify, in response to the request, a quantized date value and a quantized time value corresponding to the request. The data processing system may retrieve one or more values for each of the plurality of signals of the quantized date value and the quantized time value via a lookup in a multi-dimensional matrix data structure having the quantized date value and the quantized time value. A first dimension of the multi-dimensional matrix data structure may have a quantization date and a second dimension of the multi-dimensional matrix data structure has a quantization time. The digital processing system may generate the query with the one or more values of each of the plurality of signals retrieved from the multi-dimensional matrix structure having the quantized date value and the quantized time value. The data processing system may apply a query to the multimedia content data structure to identify, in response to the query, a plurality of multimedia content items that match the one or more values of each of the plurality of signals. The data processing system may provide an indication of the plurality of multimedia content items to the computing device for presentation via a graphical user interface rendered by the computing device, the plurality of multimedia content items matching the one or more values of each of the plurality of signals retrieved from the multi-dimensional matrix data structure for the quantized date value and the quantized time value.
At least one aspect relates to a method of querying a data structure for managing loading time of multimedia content. The method may include: the data processing system receives, via the interface, data packets comprising an input audio signal detected by a sensor of the computing device. The method may include: the data processing system parses the input audio signal to identify the request. The method may include: the data processing system identifies a quantized date value and a quantized time value corresponding to the request in response to the request. The method may include: the data processing system retrieves one or more values for each of the plurality of signals of the quantized date value and quantized time value via a lookup in a multi-dimensional matrix data structure having the quantized date value and quantized time value. A first dimension of the multi-dimensional matrix data structure may have a quantization date and a second dimension of the multi-dimensional matrix data structure may have a quantization time. The method may include: the digital processing system generates a query using the one or more values of each of the plurality of signals retrieved from the multi-dimensional matrix structure having quantized date values and quantized time values. The method may include: the data processing system applies a query to the multimedia content data structure to identify, in response to the query, a plurality of multimedia content items that match the one or more values of each of the plurality of signals. The method may include: the data processing system provides an indication of the plurality of multimedia content items to the computing device for presentation via a graphical user interface rendered by the computing device, the plurality of multimedia content items matching the one or more values of each of the plurality of signals retrieved from the multi-dimensional matrix data structure for the quantized date value and the quantized time value.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide a description and a further understanding of various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is an illustration of a system for data structure querying to manage loading time of multimedia content.
Fig. 2 is a diagram of the operation of a system for data structure querying to manage the loading time of multimedia content.
Fig. 3 is an illustration of a method of querying a data structure for managing loading time of multimedia content.
FIG. 4 is a block diagram illustrating the general architecture of a computer system that may be employed to implement the elements of the systems and methods described and illustrated herein.
Detailed Description
The following is a more detailed description of various concepts related to methods, devices, and systems for routing packetized actions via a computer network, and implementations of the methods, devices, and systems. The various concepts introduced above and discussed in more detail below may be implemented in any of a number of ways.
The present disclosure relates generally to managing response time and validity of data structure queries and loading time of multimedia content items identified via data structure queries. The systems and methods of the present disclosure relate to: a query is constructed using a first data structure storing a signally populated multidimensional matrix and then applied to a second data structure to filter the data set to identify multimedia content items responsive to the request. The system may utilize a multi-dimensional matrix data structure that includes values of signals that may be used to generate queries. The multi-dimensional matrix data structure may be a two-by-two matrix of each of the signals, where a first dimension corresponds to a date and a second dimension corresponds to a time. The first dimension and the second dimension may be quantized to provide a multi-dimensional matrix data structure having a reduced number of rows and columns as compared to the unquantized values. By creating a smaller matrix structure, the data processing system may respond to queries of the first data structure with reduced latency and latency. The data processing system may generate a second query by using the values of the signals in the matrix structure and then apply the second query to a second data structure storing the multimedia content items. Thus, by generating queries using a reduced matrix data structure, the data processing system may reduce latency and delay in loading multimedia content items in response to requests.
The present solution may utilize a dual data structure query technique to identify multimedia content items in a manner that reduces resource consumption, processor utilization, bandwidth utilization, size of data files, or the amount of time consumed by a graphics engine by minimizing the number of multimedia content items identified in response to a request. For example, a request for multimedia content received from a user device may lack keywords or search terms. The request may not include parameters for building a query to perform a search. For example, the request may include a voice input, such as, "What is there to watch? (what can be viewed. In this example, the request lacks additional keywords or terms to generate the query. Thus, the data processing system may provide a large number (e.g., 50, 60, 75, 90, 100, 150, or more) of candidate multimedia content items. However, navigating or interacting with a large number of search results in a voice interaction mode in a far field manner where a remote control (e.g., a wireless controller device) cannot be accessed can be challenging. Further, providing a large number of multimedia content items to be rendered through a graphical user interface provided by a computing device may be resource intensive and latency or delay may increase due to identifying and providing the large number of multimedia content items to the computing device for presentation.
The present solution may facilitate interaction with computing devices with limited interfaces that may not have access to or have no touch input, where the primary interaction is voice-based. To this end, the present solution may provide new techniques for constructing a query that is applied to a multimedia data structure to identify a minimum of candidate multimedia content items to be provided in a graphical user interface for display on a display device. For example, the data processing system may receive the current time stamp and date stamp, map the values to quantized values, and perform a lookup in a multidimensional matrix to retrieve signals corresponding to the quantized values.
For example, the computing device may receive an acoustic signal carrying the request. The acoustic signal may correspond to speech from a user. The request may include "What is there to watch? "the data processing system may provide relevant, minimal suggestions for the multimedia content item even though the request may not include additional search terms or keywords. The system may provide a timeout result. Instead of providing 100 responses, the system may provide only 5 responses, e.g., the 5 responses may be a subset of 100 that partially overlap 100, or that is different from 100 responses. To this end, the system utilizes two signals: preference signals and context signals. The preference signal may include: 1) Preferences for one or more applications for providing the multimedia content items (e.g., preferred providers of multimedia content or sources of multimedia content); 2) Preferences for transaction types (e.g., free content, content to purchase, subscription services); 3) For media consumption modes (e.g., new multimedia content items that the computing device did not render previously; continuing the series, re-viewing the multimedia content item; background mode). The context signal may include: 1) Duration of media consumption (e.g., 15 minutes; 30 minutes; 1 hour; or 90 minutes); and 2) preferences for media types (e.g., movies, television programs, live television, or previously recorded content). The system may populate these values in a 2 x 2 matrix: weekend/weekday x day/night. The system may determine a metric or value of the signal. Thereafter, in response to the query, the system may determine the index in the matrix corresponding to the time/date, and then construct the query using those preferences and contexts to apply to the multimedia content data structure to identify candidate multimedia content items to be presented.
FIG. 1 illustrates an example system 100 for data structure querying to manage loading time of multimedia content. The system 100 may include a data processing system 102. The data processing system 102 may communicate with one or more data provider devices 108 or one or more computing devices 104 via a network 105. The network 105 may include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network, or other regional network, an intranet, a satellite network, and other communication networks such as a voice or data mobile phone network. The network 105 may be used to access information resources, such as electronic content items, media content, web pages, websites, domain names, or uniform resource locators that may be presented, output, rendered, or displayed on at least one computing device 104, such as a laptop computer, desktop computer, tablet, personal digital assistant, smart phone, portable computer, speaker, smart television, set top box, digital media player, micro-console, network appliance, or entertainment device. For example, via network 105, a user of computing device 104 may access information or data provided by data provider 108. The computing device 104 may or may not include a display; for example, the computing device may include a limited type of user interface, such as a display device 132, a sensor 134 (e.g., a microphone), a speaker 136, or a remote control device 134. In some cases, the primary user interface of the computing device 104 may be a microphone and speaker 136.
The network 105 may include or constitute a display network, e.g., a subset of information resources available on the Internet, associated with a content arrangement or search engine results system, or otherwise qualified to include third-party content items as part of a content item arrangement campaign. The network 105 may be used by the computing device 104 or the data processing system 102 to access information resources, such as web pages, websites, domain names, or uniform resource locators that may be presented, output, rendered, or displayed by the client computing device 104. For example, via network 105, a user of client computing device 104 may access information or data provided by data provider computing device 108.
The network 105 may be any type or form of network and may include any of the following: a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communications network, a computer network, an ATM (asynchronous transfer mode) network, a SONET (synchronous optical network) network, an SDH (synchronous digital hierarchy) network, a wireless network, or a wired network. The network 105 may include wireless links, such as infrared channels or satellite bands. The topology of the network 105 may include a bus, star, or ring network topology. The network may comprise a mobile telephone network using any protocol or protocols for transmission between mobile devices, including: advanced mobile phone protocol ("AMPS"), time division multiple access ("TDMA"), code division multiple access ("CDMA"), global system for mobile communications ("GSM"), general packet radio service ("GPRS"), or universal mobile telecommunications system ("UMTS"). Different types of data may be transmitted via different protocols, or the same type of data may be transmitted via different protocols.
System 100 may include at least one data processing system 102. The data processing system 102 may include at least one logic device, such as a computing device having a processor for communicating with, for example, the computing device 104 or the data provider device 108 via the network 105. Data processing system 102 may include at least one computing resource, server, processor, or memory. For example, data processing system 102 may include multiple computing resources or servers located in at least one data center. Data processing system 102 may include multiple logically grouped servers and facilitate distributed computing techniques. The logical server group may be referred to as a data center, a server farm, or a machine farm. Servers may also be geographically dispersed. The data center or machine farm may be managed as a single entity or the machine farm may include multiple machine farms. The servers within each machine farm may be heterogeneous—one or more of the servers or machines may operate in accordance with one or more types of operating system platforms.
Servers in the machine farm may be stored in a high-density rack system and associated storage systems, and located in an enterprise data center. Integrating servers in this manner may improve system manageability, data security, physical security of the system, and system performance, for example, by locating servers and high-performance storage systems on a localized high-performance network. Centralizing all or some of the data processing system 102 components (including servers and storage systems) and coupling them with advanced system management tools allows for more efficient use of server resources, which saves power and processing requirements, and reduces bandwidth usage.
The system 100 may include, access or otherwise interact with at least one data provider device 108. The data provider device 108 may include at least one logic device, such as a computing device having a processor for communicating with, for example, the computing device 104 or the data processing system 102 via the network 105. The data provider device 108 may include at least one computing resource, server, processor, or memory. For example, the data provider device 108 may include a plurality of computing resources or servers located in at least one data center. The data provider device 108 may include one or more components or functions of the data processing system 102.
The computing device 104 may include at least one natural language processor ("NLP") component 112 and an interface 110 to interface with or otherwise communicate with. The computing device 104 may also include, interface with, or otherwise communicate with at least one display device 132, sensor 134, speaker 136, or remote control device 134. The computing device 104 may interface or communicate with these components via wired or wireless communication techniques.
The display device 132 may include one or more components or functions of the display 435 depicted in fig. 4. The sensor 134 may include: such as a microphone, ambient light sensor, proximity sensor, temperature sensor, accelerometer, gyroscope, motion detector, GPS sensor, position sensor, or touch sensor. Speaker 136 may include a transducer, microphone, or device that converts electrical or magnetic pulses into sound. The computing device 104 may include an interface including an audio driver that provides a software interface to the hardware speaker 136. The audio drivers of the interface may execute other instructions or audio files or streams provided by the computing device 104 or components of the data processing system 102 to control the speakers 136 to generate corresponding sound waves or sound waves.
The interface 110 of the computing device 104 may be designed, configured, constructed, or operated to receive and transmit information using, for example, data packets. The interface 110 may receive and transmit information using one or more protocols, such as a network protocol. The interface 110 may include a hardware interface, a software interface, a wired interface, or a wireless interface. The interface 110 may include or provide a graphical user interface or a voice interaction interface. Interface 110 may render graphical output via display device 132. The interface 110 may facilitate converting data from one format to or into another format. For example, the interface 110 may include an application programming interface that includes definitions for communication between various components, such as software components.
Remote control device 134 may mean a wireless controller device or other device that controls aspects or functions of computing device 104 or otherwise communicates with computing device 104 or data processing system 102. For example, remote control device 134 may include one or more circuits, wireless modules, transmitters, power sources, input interfaces (e.g., input device 430 depicted in fig. 4), and one or more sensors (e.g., sensor 134) for receiving input and providing an indication of the input to computing device 104 or data processing system 102. The remote control device 134 may receive input via buttons, switches, touch interfaces, or gestures. In some cases, the remote control device 134 may be a stand-alone remote control operable to communicate or control the computing device 104. In some cases, remote control device 134 may refer to a software application executing on a computing device, where the software application is configured to communicate with computing device 104 or data processing system 102. For example, the remote control device 104 may include an application executed by a smart phone, tablet, smart watch, or tablet.
When the remote control device 138 is not in use, disabled, or malfunctioning, the remote control device 138 may be disabled, inactive, turned off, in a sleep state, or in a standby state. When remote control device 138 is not in use, computing device 104 may utilize a voice interface, wherein computing device 104 receives voice commands from a user at least in part using NLP component 112 executed by computing device 104 or in conjunction with NLP component 112 executed by data processing system 102, and processes the voice commands.
The computing device 104 can include an NLP component 112, the NLP component 112 configured to detect keywords and perform actions based on the keywords. NLP component 112 can filter out one or more terms or modify terms before sending the terms to data processing system 102 for further processing. The NLP component 112 of the computing device 104 or executed by the computing device 104 may be referred to as a local NLP component or a client-side NLP component. The NLP component 112 of the computing device 102 can convert the analog audio signal detected by the microphone into a digital audio signal and send one or more data packets carrying the digital audio signal to the data processing system 102 via the network 105. In some cases, NLP component 112 may transmit data packets carrying some or all of the input audio signals in response to detecting an instruction to perform such transmission. The instructions may include: for example, a trigger keyword, hotword, or other keyword or approval for sending a data packet including an input audio signal to data processing system 102 for further processing by NLP component 112 of data processing system 102, the NLP component 112 may be referred to as a server NLP component or a cloud NLP component.
The client computing device 104 may be associated with an end user who enters a voice query as audio input into the client computing device 104 (e.g., via the sensor 134) and receives the audio output in the form of computer-generated sound that may be provided to the client computing device 104 from the data processing system 102 (or data provider computing device) and output through the speaker 136. The computer-generated speech may include a sound recording from a real person or a computer-generated language.
The interface 110 and NLP component 112 of the computing device 104 may each include at least one processing unit or other logic device, such as a programmable logic array engine or module configured to communicate with one or more components of the computing device 104 or the data processing system 102. The interface 110 and the NLP component 112 may be separate components, a single component, or part of the computing device 104. The system 100 and its components, such as the computing device 104, may include hardware elements, such as one or more processors, logic devices, or circuits.
Data processing system 102 may include or execute at least one interface 110. The interface 110 of the data processing system may be referred to as a server side interface, a data processing system interface, a remote interface, or a system interface. The interface 110 of the data processing system may include one or more components or functions of the interface 110 of the computing device 104. Data processing system 102 can include, interface with, or otherwise communicate with at least one NLP component 112. The NLP component 112 of the data processing system may be referred to as a data processing system NLP component, a server NLP component, or a cloud NLP component. The NLP component 112 of the data processing system may include one or more components or functions of the NLP component 112 of the computing device 104.
Data processing system 102 can include, interface with, or otherwise communicate with at least one digital assistant component 114. Digital assistant component 114 may refer to a system or component of data processing system 102, which data processing system 102 includes or interfaces with one or more of the following: an NLP component 112, interface 110, query generator component 116, content selector component 118, or audio signal generator component 120 for facilitating parsing of voice-based queries and providing responses in a voice-based environment. The data processing system 102 can include, interface with, or otherwise communicate with at least one query generator component 116. The data processing system 102 can include, interface with, or otherwise communicate with at least one content selector component 118. The data processing system 102 may include, interface with, or otherwise communicate with at least one audio signal generator 120. Data processing system 102 may include, interface with, or otherwise communicate with at least one data repository 122. The data repository 122 may include one or more local or distributed databases and may include a database management system. The data repository 122 may include a computer data store or memory. The at least one data repository 122 may be included or stored in one or more data structures or databases, including: such as a matrix data structure 124, a history data structure 126, and a multimedia content data structure 128. The multimedia content data structure 128 may store multimedia content items, electronic content items, or online documents. The matrix data structure 124 may store one or more multidimensional matrices having values of signals. The historical data structure 126 may store historical signal information from the computing device 104 or aggregate signal information from multiple computing devices over a time interval.
In some cases, the content selector component 118 may select electronic content items from the data repository 122 and provide the selected subset of electronic content items for presentation via the interface 110 of the computing device 104.
The interface 110, NLP component 112, digital assistant component 114, query generator component 116, content selector component 118, or audio signal generator component 120, respectively, may include at least one processing unit or other logic device, such as a programmable logic array engine or module configured to communicate with a database repository or database 140. The interface 110, NLP component 112, digital assistant component 114, query generator component 116, content selector component 118, audio signal generator component 120, and data repository 122 can be separate components, a single component, or a portion of the data processing system 102. The system 100 and its components (such as the data processing system 102) may include hardware elements, such as one or more processors, logic devices, or circuits.
The data processing system 102 may obtain anonymous computer network activity information associated with a plurality of computing devices 104. The user of computing device 104 may positively authorize data processing system 102 to obtain network activity information corresponding to the user's computing device 104. For example, data processing system 102 may prompt a user of computing device 104 to agree to obtain one or more types of network activity information. The identity of the user of the computing device 104 may remain anonymous and the computing device 104 may be associated with a unique identifier (e.g., a unique identifier of the user or the computing device or the user of the computing device provided by the data processing system). The data processing system may associate each observation with a corresponding unique identifier.
The data processing system 102 may include an assistant application, script, or program installed at the client computing device 104, such as an application for transmitting input audio signals to the interface 110 of the computing device 104 and driving components of the client computing device to render output audio signals. The data processing system 102 may receive data packets or other signals that include or identify audio input signals. For example, the data processing system 102 can execute or run the NLP component 112 to receive or obtain and parse the audio signal. For example, the NLP component 112 can facilitate interactions between humans and computers. NLP component 112 can be configured with techniques for understanding natural language and allowing data processing system 102 to derive meaning from human or natural language input. The NLP component 112 can include or be configured with techniques based on machine learning, such as statistical machine learning. The NLP component 112 may utilize decision trees, statistical models, or probabilistic models to parse the input audio signal. The NLP component 112 can perform, for example, functions such as named entity recognition (e.g., given a text stream, the component can determine which terms in the text map to appropriate names (such as people or places) and what the type of each such name is (such as individuals, locations, or organizations)), natural language generation (e.g., converting information in a computer database or semantic intent to an understandable human language), natural language understanding (e.g., converting text to a more formal representation such as a first-order logical structure that a computer module can manipulate), machine translation (e.g., automatically translating text from one human language to another), morphological segmentation (e.g., separating words into individual morphemes and identifying the types of morphemes, which can be challenging based on the morphological or structural complexity of the words of the language under consideration), question answering (e.g., determining an answer to a human language that can be concrete or open), and semantic processing (e.g., processing of words that can occur after recognition and encoding the text to have similar meanings to other words of interest).
The NLP component 112 can convert an audio input signal to recognized text by comparing the input signal to a stored, representative set of audio waveforms (e.g., in the data repository 124) and selecting the closest match. The set of audio waveforms may be stored in data repository 122 or other database accessible to data processing system 102. Representative waveforms are generated across a large set of users, and then the representative waveforms can be enhanced with voice samples from the users. After converting the audio signal to recognized text, the NLP component 112 matches the text with words associated with actions that the data processing system 102 can service, for example, via cross-user training or by manual specification.
The audio input signal may be detected by the sensor 134 of the client computing device 104. Client computing device 104 may provide the audio input signals to data processing system 102 (e.g., via network 105), where the audio input signals may be received and provided to NLP component 112 or stored in data repository 122 for further processing. The client computing device 104 may provide only a portion of the audio input signal. For example, the client computing device 104 can execute the local NLP component 112 to detect trigger words or hotwords. Hotword may refer to a keyword or phrase that wakes up computing device 104 or initiates a function of computing device 104. The hotword may mean a script or module of the NLP 112 of the computing device 104 that is configured to listen to a particular keyword word selected to activate the speech interface. After the hotword is detected, the system is ready for a voice-based search, question, or command. After the hotword, computing device 104 may then send an audio input to data processing system 102. The client computing device 104 may terminate the audio transmission after detecting a pause or session break in the audio input for a predetermined time interval (e.g., one second, two seconds, three seconds, four seconds, or five seconds).
The NLP component 112 may obtain an input audio signal. By inputting the audio signal, the NLP component 112 can identify at least one request or at least one trigger key corresponding to a request. The request may indicate an intent or topic of the input audio signal. The trigger key may indicate the type of action that may be taken. For example, the NLP component 112 can parse an input audio signal to identify at least one request to provide multimedia content for display via the display device 132. The trigger key may include at least one word, phrase, root or partial word, or derivative indicating an action to be taken. For example, a trigger keyword "show" or "show me something to watch (show me with viewable content)" in the input audio signal may indicate that a search needs to be performed. In this example, the input audio signal (or identified request) does not directly express an intent to transmit, however, the trigger key indicates that the transmission is an auxiliary action for at least one other action indicated by the request.
The NLP component 112 can parse the input audio signal to identify, determine, retrieve, or otherwise obtain a request. For example, the NLP component 112 can apply semantic processing techniques to the input audio signal to identify the request. The NLP component 112 can apply semantic processing techniques to the input audio signal to identify trigger phrases that include one or more trigger keywords, such as a first trigger keyword and a second trigger keyword. For example, the input audio signal may include the sentence "show me something to watch". The NLP component 112 can apply semantic processing techniques or other natural language processing techniques to the data packet including the sentence to identify the trigger phrase and its keywords, such as "show" and "watch".
The data processing system 102 can include, execute, or otherwise communicate with the query generator component 116 to build or generate a query to be applied to the multimedia content data structure 128 to identify candidate content items in response to a request from the computing device 104. To construct a query to obtain multimedia content in response to a request, the query generator component 116 can access the matrix data structure 124 to retrieve the values of the signal. To obtain the values of the signals, the query generator component 124 can perform a lookup in one or more matrices of the matrix data structure 124. The query generator component 116 can perform a lookup by using index values corresponding to coordinates in the matrix. The index value may be determined based on an attribute or trait associated with the request.
The data processing system 102 may identify a multi-dimensional matrix data structure from which to retrieve signals used to construct a query. The multi-dimensional matrix data structure may have an identifier, such as an account identifier, that corresponds to an identifier of the computing device 104. The multi-dimensional matrix data structure may correspond to a geographic region or location of the computing device. The multi-dimensional matrix data structure may correspond to one or more attributes or characteristics associated with the computing device 104. For example, a first multi-dimensional matrix data structure may correspond to a first device type and a second multi-dimensional matrix data structure may correspond to a second device type.
The multi-dimensional matrix data structure may be populated or generated based on historical network activity information associated with one or more computing devices 104. The matrix data structure may be a two-by-two matrix as illustrated below in table 1.
Daytime | Night time | |
Workday day | ||
Weekend |
Table 1: illustrative examples of 2 x 2 multi-dimensional matrix data structures.
The matrix may be populated with the values of the signals. The value may be a numeric value, a string of characters, a character, or an alphanumeric number. The type of value may be based on the type of signal. The values of the signal may comprise a list of values. The data processing system 102 may store a different matrix for each signal, or the data processing system may create a three-dimensional matrix in which a first dimension is a quantization date, a second dimension is a quantization time, and a third dimension is a signal. Thus, a particular value or values in the matrix may be identified by three coordinates: (workday, daytime, signal_1). A multi-dimensional matrix data structure may be populated or generated based on historical network activity information associated with each of the plurality of signals. The data processing system 102 may utilize one or more types of signals, such as preference signals and context signals. The preference signal may mean a signal indicative of a preference associated with the computing device 104 or a user thereof, such as: 1) Preferences for one or more applications for providing the multimedia content items (e.g., preferred providers of multimedia content or sources of multimedia content); 2) Preferences for transaction types (e.g., free content, content to purchase, subscription services); 3) For media consumption modes (e.g., new multimedia content items that the computing device did not render previously; continuing the series, re-viewing the multimedia content item; background mode). Data processing system 102 may utilize additional or fewer preference signals.
The data processing system 102 can determine preferences or context for the computing device 104 or an account associated with the computing device based on the historical network activity information. The data processing system 104 may utilize one or more statistical or machine learning techniques to determine preferences or contexts, model, predict, or otherwise identify preferences or contexts. For example, the data processing system 104 may use a pattern function to identify the most common value of the signal at predetermined time intervals (e.g., 7 days, 30 days, 45 days, or 60 days). Depending on the type of signal, the data processing system may use an averaging function or a moving average (e.g., a series of averages derived from successive segments to identify the value of the signal). The data processing system 104 may rank the preference or context values and use a threshold to determine a number of highest ranked values to select as the preference or context to be included in the matrix.
For example, the computing device 104 may execute the following five applications to render or play the multimedia content item during a predetermined time interval (e.g., 7 days, 30 days, 45 days, or 60 days): app_1, app_2, app_3, app_4, and app_5. The data processing system 102 may determine that app_1, app_2, and app_3 are executed at a higher frequency than app_4 and app_5 for a predetermined time interval. The data processing system 102 may identify the top 3 apps that are highest ranked as app_1, app_2, and app_3 to use as the value of the preference signal. In some cases, data processing system 102 may determine the highest ranked app (e.g., the first 3 apps that are executed more frequently during weekend nights) based on each quantized date and time value. For example, if data processing system 102 executes the same two applications during the last 4 weeks at weekend nights, data processing system 102 may establish the first preference signal for weekend nights as a list of two applications: app_2 and app_3.
Further, data processing system 102 can establish preferences for quantization dates and quantization times. The data processing system 102 may determine that during weekday and night, the computing device prefers to execute application_1 for playing multimedia content, while during weekends, the user prefers application_2 and application_3. Thus, a multi-dimensional matrix data structure for the first preference signal may be illustrated in table 2.
Table 2: an illustrative example of a 2 x 2 multi-dimensional matrix data structure for application preference signals.
As illustrated in table 2, the first preference signal may indicate a preference for an application to be executed to play the multimedia content. The signal may have different values for different quantization date indices and quantization time indices. The signal may have different values for different computing devices 104, as different computing devices may exhibit different preferences for the application to be executed. In this example, if data processing system 102 receives a request for content at 10:30 a tuesday night, data processing system 102 can map the date and time stamps to a quantized date value of "workday" and a quantized time value of "night". The data processing system 102 may access a matrix data structure populated with values corresponding to the computing devices 104 from which the data processing system 102 received data. The data processing system 102 may use the quantized values "workday" and "night" to perform a lookup in the matrix data structure to identify the value for the signal as "app_1". The data processing system 102 can then use the value to generate a query or filter the multimedia content data structure to identify candidate multimedia content items to present to the computing device 104 in response to the request.
The second preference signal may include a preference for a transaction type. The transaction type may mean the type of electronic transaction that the computing device 104 performs in order to obtain the multimedia content. The data processing system 102 may determine a value of the second preference signal based on the historical network activity information. The data processing system 102 may determine the type of transaction that the computing device 104 is conducting within a predetermined period of time to determine the preference. The types of transactions may include: such as free multimedia content, purchased multimedia content, rented multimedia content, or subscription services. As illustrated in the matrix in table 3, the data processing system 102 may further determine the value of the preference signal based on the quantized date and time values.
Preference_Signal_2 | Daytime | Night time |
Workday day | Free of charge | Renting |
Weekend | Subscription | Purchasing |
Table 3: an illustrative example of a 2 x 2 multi-dimensional matrix data structure for a transaction type preference signal.
Thus, if the request corresponds to quantized date and time values "workday" and "night," the data processing system 102 may retrieve the value for the second preference signal as "leased" as illustrated in the table 3 matrix for the second preference signal for the computing device 104.
The third preference signal may include a preference for a media consumption mode. The media consumption mode signal may mean the type of multimedia content that the computing device 104 prefers to play. The media consumption mode may include a new multimedia content item that was not previously rendered by the computing device (e.g., that was not previously rendered by the computing device); continuing (e.g., causing the series of multimedia content to continue); or re-view (e.g., re-render the same multimedia content item). The data processing system 102 may determine values for each quantized date and time value of the third preference signal based on the historical network activity information and populate these values in a matrix data structure for the third preference signal as illustrated in table 4.
Preference_Signal_3 | Daytime | Night time |
Workday day | Re-viewing | New type of material |
Weekend | Continuing series | Continuing series |
Table 4: illustrative examples of 2 x 2 multi-dimensional matrix data structures for media consumption pattern preference signals.
Thus, if the request corresponds to a day and night of work, the data processing system 102 may retrieve a value "continue series" for the third preference signal for the computing device 104. The data processing system 102 can use the value to construct a query to identify multimedia content items to be presented to the computing device 104 as candidate multimedia content items in response to the request.
One or more preference signal matrix data structures may be combined into a single multi-dimensional matrix structure or stored as separate matrix structures. A single multi-dimensional matrix structure for preference signals may have the following dimensions: 2X 3. For example, the first dimension may be a workday and a worknight; the second dimension may be daytime and nighttime; the third dimension may be reference_signal_1, reference_signal_2, and reference_signal_3. Thus, to obtain all values for quantization date and quantization time, the data processing system 102 may perform the following lookup: values of all signals corresponding to the day and night of the job are retrieved. This can retrieve the following values of the preference signal for the date and time of quantification (weekday night): app_1, leased, new. Data processing system 102 may construct queries or filter using boolean logic as follows: app_1 is leased and new.
The data processing system 102 may also use the values of the context signals in addition to, or in lieu of, the preference signals to generate queries. The context signal may comprise information about the situation in which the settings for the multimedia rendering event are formed. The context signal may indicate a condition for a quantified date and time. The context signal may include: 1) Duration of media consumption (e.g., 15 minutes; 30 minutes; 1 hour; or 90 minutes); and 2) preferences for media types (e.g., movies, television programs, live television, or previously recorded content). Data processing system 102 may utilize additional or fewer context signals. The data processing system 102 may determine the context signal by using historical network activity information or external sensor data.
The first context signal may include a preference for a media consumption duration. Duration may mean the amount of time a user must view the multimedia content item or the amount of time the user prefers to view the multimedia content. The duration may be specific to the quantified date and time. Data processing system 102 may determine the duration based on historical network activity information over a predetermined time interval. For example, the data processing system 102 may determine that the computing device 104 renders the multimedia content for 30 minutes at weekday night and approximately 2 hours at weekend night during the past 30 days. Thus, as illustrated in the matrix in table 5, the data processing system 102 may set the values for the duration context signal to 30 minutes at weekday night and 2 hours at weekend night.
Context_Signal_1 | Daytime | Night time |
Workday day | 15 minutes | 30 minutes |
Weekend | 60 minutes | 120 minutes |
Table 5: an illustrative example of a 2 x 2 multi-dimensional matrix data structure for a consumption duration context signal.
As illustrated in the matrix for the first context signal in table 5, the duration may be determined for each quantized date and time value. The data processing system 102 may determine the duration value as an average, moving average, pattern, or other statistical determination for the quantized date value and quantized time value over a predetermined time interval (e.g., 4 weeks, 8 weeks, or 12 weeks).
The data processing system 102 may determine the duration by using external sensor feedback. For example, data processing system 102 may be based on the time computing device 104 is turned on and off; the time at which the lighting device is connected to the data processing system 102 via the on or off network 105; an entry in a calendar data structure having an account identifier corresponding to the account identifier of the computing device 104; adjusting a thermostat device connected to data processing system 102 via network 105; or a home automation query or other device activity of one or more devices associated with an account of the computing device to determine start and stop times for playing the multimedia content. For example, the time at which a light in a room with computing device 104 is turned on and off may be an indicator of the duration that may be used to render the multimedia content. The lights may be controlled by a lighting controller or device configured to communicate with the data processing system 104 via the network 105 and provide an indication of the status of the lights to the data processing system 104.
The second context signal may include a preference for a media type (e.g., movie, television program, live television, or previously recorded content). The data processing system 102 may determine preferences for media types based on historical network activity and store the preference values in a 2 x 2 matrix according to quantization date values and quantization time values as illustrated in table 6.
Context_Signal_2 | Daytime | Night time |
Workday day | Fragments | Recorded |
Weekend | Live television | Film making apparatus |
Table 6: an illustrative example of a 2 x 2 multi-dimensional matrix data structure for a consumption duration context signal.
As illustrated in table 6, the media type signal may have a value of "previously recorded content" for a request corresponding to a work day-night quantized value. The data processing system 102 may construct a query for the quantized date and time "weekday night" combining the values of the multiple context signals as follows: for example 30 minutes and is recorded. Recorded may refer to multimedia content recorded on a digital video recorder device communicatively coupled to computing device 104. Recorded may mean content that has been previously broadcast or recorded by another data provider, as opposed to a live program that is currently being broadcast on site. The user of computing device 104 may have instructed the digital video recorder device to record the multimedia content.
The data processing system 104 may generate a two-by-two matrix for each of the plurality of signals based on the aggregate history data over a predetermined time interval. The aggregated information may refer to a single account or an aggregated plurality of data points of the computing device 104. The data processing system 104 may also aggregate information across multiple computing devices 104 associated with the same account identifier. The data processing system 104 may aggregate information across multiple computing devices 104 having different account identifiers, but other common characteristics.
The data processing system 102 may combine each of the two-by-two matrices for each of the plurality of signals to generate a three-dimensional matrix. The data processing system 102 may generate a first three-dimensional matrix for the preference signal and a second three-dimensional matrix for the context signal. The data processing system 102 may generate a single three-dimensional matrix that combines the preference signal and the context signal. Data processing system 102 may generate a different multidimensional matrix for each account identifier. Data processing system 102 may generate a four-dimensional matrix that combines all signals and account identifiers as follows: (count_id, quantized_ day, quantized _time, signal).
In response to the request, data processing system 102 may obtain a value for the signal based on the index value. Depending on the dimensions of the matrix, for example, the index value may correspond to a quantization date value and a quantization time value. For example, a quantified date value may mean a date category. For example, instead of having 7 rows, the matrix may have 2 rows, one for each day of the week, and one for the weekend. By quantifying the date value into 2 quanta or categories, the size of the matrix can be greatly reduced from 7 rows to 2 rows, thereby reducing the memory consumption of the matrix and increasing the lookup time.
For example, the quantized time value may mean the time of day category. For example, rather than having a matrix for every second, minute, or hour of the day, data processing system 102 may use a matrix having 2 quanta for time, such as day and night. By quantifying the time values into 2 categories, the size of the matrix can be greatly reduced from potential 1440 columns (e.g., for each minute) or 24 columns (e.g., for each hour) to 2 columns.
To determine the row index value and the column index value for identifying the value in the matrix, the data processing system may receive a date stamp and a time stamp corresponding to the request. The date and time stamps corresponding to the request may mean when the computing device 104 receives the acoustic signal, when the request is made, when the computing device 104 sends the request, when the data processing system 102 receives the request, or when the data processing system 102 processes the request. In some cases, the date and time stamp corresponding to the request may mean the date or time the user intended to view the requested program. For example, a request made on friday morning may include "what should I watch Saturday night? (what should me watch on friday evening).
The date and time stamps may be finer than the quantized date and time values in the matrix. The computing device 104 may quantify these values before providing the date and time stamps to the data processing system 104. The data processing system 102 may map the date stamp to a quantized date value that includes one of a weekday or a weekend. For example, if the current date is Monday, tuesday, or Friday, the data processing system 102 may determine the quantified date value as "workday". If the current date is Saturday or Sunday, the data processing system may determine the quantified date value as "weekend".
The data processing system 102 may map the timestamp to a quantized time value that includes one of the day or night. The data processing system 102 may use a predetermined time boundary to determine whether the current time corresponds to the day or the night. For example, a time between 4:00am and 9:59pm may be mapped to "day" and a time between 10:00pm and 3:59am may be mapped to night. In another example, the time between 4:00am and 7:59pm may be mapped to daytime and the time between 8:00pm and 3:59am may be mapped to night. In some cases, the day and night may be determined dynamically. For example, the quantization date value may be determined based on sunrise and sunset times of a specific location. The data processing system may determine the location of the computing device 104 and then determine the sunrise time and sunset time of the location based on the date corresponding to the request. If the time corresponds to between sunrise time and sunset time, data processing system 102 may set the quantized time value to "daytime"; otherwise, set to "night".
The data processing system 102 may retrieve the plurality of signals for the quantized date value and the quantized time value via a lookup in a multi-dimensional matrix data structure having the quantized date value and the quantized time value. For example, and with reference to tables 2-6, the values of the preference and context signals for "workday" and "night" may be: app_1, rented, new, 30 minutes, recorded. The values of these five signals may be used by the data processing system 102 to construct queries or filters to be applied to the multimedia content data structure. The digital processing system 102 may generate a query using a plurality of signals retrieved from a multi-dimensional matrix structure having quantized date values and quantized time values. For example, the query may be: the multimedia content provided by the application = app_1 available for rental, previously unplayed by the computing device, 30 minutes in duration, and previously recorded (e.g., not live television) is sought.
The data processing system 102 can include, execute, or otherwise communicate with the content selector component 118 to receive queries generated by the query generator component 116 and select one or more multimedia content items or electronic content items via a real-time content selection process based on the queries. The content selection process may mean or include: a lookup of multimedia content items that match a query, keyword, or other item provided by the query generator component 116 is performed in the data repository 122, or an electronic content item corresponding to the query or keyword is queried from the data provider device 108. The real-time content selection process may include a service in which content items provided by multiple data providers are parsed, processed, weighted, or matched to select one or more content items to be provided to the computing device 104. The content selector component 118 can perform the content selection process in real-time. Performing the content selection process in real-time may mean performing the content selection process in response to a request for content received via the client computing device 104. The real-time content selection process may be performed (e.g., initiated or completed) within a time interval (e.g., 5 seconds, 10 seconds, 20 seconds, 30 seconds, 1 minute, 2 minutes, 3 minutes, 5 minutes, 10 minutes, or 20 minutes) of receiving the request. The real-time content selection process may be performed during a communication session with the client computing device 104 or within a time interval after termination of the communication session.
For example, the data processing system 102 can include a content selector component 118, the content selector component 118 being designed, constructed, configured, or operable to select a multimedia content item object. To select multimedia content items to be displayed in a speech-based environment in a manner that manages loading time and responsiveness, the query generator component 116 can construct a query using signals retrieved from the multi-dimensional matrix. The content selector component 118 can analyze, parse, or otherwise process the subject matter of the candidate content item to determine whether the subject matter of the candidate content item corresponds to the query generated by the query generator component 116. The content selector component 118 can identify, analyze, or recognize speech, audio, items, characters, text, symbols, or images in candidate content items by using image processing techniques, character recognition techniques, natural language processing techniques, or database lookup. The candidate content item may include metadata indicating a subject matter of the candidate content item, in which case the content selector component 118 may process the metadata to determine whether the subject matter of the candidate content item corresponds to the input audio signal.
The content selector component 118 can apply a query to the multimedia content data structure 128 to identify multimedia content items that match the plurality of signals in response to the query. In response to the request, the data processing system 102 may select one or more electronic content items (e.g., content item objects) from the data repository 122 or a database associated with the data provider 108 and provide the electronic content items via the network 105 for presentation via the computing device 104. The data processing system 102 can provide an indication (e.g., an icon, list, text, or other identifier) of multimedia content items to the computing device 104 for presentation via a graphical user interface rendered by the computing device 104 that match the plurality of signals retrieved from the multi-dimensional matrix data structure for the quantization date value and the quantization time value. The computing device 104 may interact with the content item object.
The computing device 104 may receive an audio response for the content item. The computing device 104 may receive an indication of a selection of a button, hyperlink, or other widget associated with a content item object that causes or allows the computing device 104 to perform a function associated with the electronic content item object.
The data processing system 102 can include, execute, or communicate with an audio signal generator component 122 to generate an output signal. The output signal may comprise one or more portions. The output signal may correspond to a multimedia content item selected by the content selector component 118 during a real-time content selection process.
FIG. 2 is a diagram of the operation of a system for transferring data from memory to manage graphics output latency. The operations 200 may be performed by one or more systems or components depicted in fig. 1 and 4, including: for example, data processing system 102, interface 110, NLP component 112, digital assistant component 114, query generator component 116, content selector component 118, or computing device 104. In ACT 202, the data processing system or computing device may receive an acoustic signal based on speech or voice from a user of the computing device. In ACT 204, the data processing system or computing device may identify a request. If the computing device recognizes the request, the computing device may provide or send the request to the data processing system for further processing.
In ACT 206, the data processing system may determine whether a matrix is available. A matrix may mean a matrix of values having signals from which a data processing system is configured to generate queries. The data processing system may determine whether the matrix data structure is available for an account identifier corresponding to the computing device. In some cases, the matrix data structure may not be available to the computing device because the data processing system may not have enough history information to populate the matrix, or because the computing device has disabled the matrix data structure or has not opted to join the matrix data structure. Thus, if the matrix data structure is not available to the computing device, the data processing system may continue to ACT 208.
In ACT 208, the data processing system may retrieve a default query that is not built using values from the matrix data structure. The default query may be "display all multimedia content items" or some other query. In ACT 210, the data processing system may apply the default query to a content data structure, such as a multimedia content data structure, and then render the result on the display device via an example graphical user interface as illustrated in block 212. Because the matrix is not available to construct queries using signals for quantized date values and quantized time values, the data processing system can identify many multimedia content items (e.g., 25, 50, 75, 100, or more) that match the default query. Navigating through many multimedia content items can be challenging due to the limited voice interface. Further, rendering many multimedia content items via graphical output may consume excessive computing resources (e.g., memory or processor utilization) or network bandwidth.
In ACT 206, if the data processing system determines that the matrix is available to the computing device, the data processing system may proceed to ACT 216. In ACT 216, the data processing system may determine quantization index values corresponding to the requests, such as quantization date values and quantization time values for the requests. In ACT 218, the data processing system may retrieve the values of the signals in the matrix using the quantized date value and quantized time value. The data processing system may select a multidimensional matrix corresponding to the computing device and then identify the value of the signal for the quantized date value and the quantized time value.
The data processing system may access one or more matrices in ACT 218. The data processing system may access a separate two-dimensional matrix for each signal or one or more three-dimensional matrices combining multiple signals. For example, the data processing system may access a plurality of 2 x 2 matrices 226a through 226e, where the matrices 226a through 226e correspond to tables 2 through 6, respectively. In another example, the data processing system may access a single three-dimensional matrix in which the dimensions are: date of quantization, time of quantization, and signal. The first dimension may be a weekday 228 and a weekend 230; the second dimension may be day 232 and night 234; and the third dimension may have signals 226a, 226b, 226c, 226d, and 226e (e.g., signals corresponding to the first, second, third, first, and second context signals as illustrated in tables 2-6).
The values 236, 238, 240, and 242 may be stored in a matrix and may be retrieved by the data processing system by using the quantized date value and quantized time value. For example, for a weekday night, the data processing system may retrieve the value 238, which value 238 may correspond to the signal 226 a.
In ACT 220, the data processing system may construct or generate a query for each quantized date value and quantized time value using the values retrieved for each signal. In ACT222, the data processing system may apply the generated query to the content data structure. The data processing system may apply the query as a filter or use the query as a filter. The data processing system may then render the results on a display device connected to the computing device using the graphical user interface 212. The graphical user interface may render the candidate multimedia content item 224. The number of multimedia content items rendered by using the matrix used to generate the query may be different compared to using the default query. For example, the number of multimedia content items 224 may be less than the number of multimedia content items 214. Constructing a query using a matrix may result in fewer results that may be more relevant given the determined preferences and context signals. Rendering fewer results by using the matrix data structure and quantized values used to construct the query may reduce resource utilization (e.g., memory or processor utilization) and network bandwidth usage.
FIG. 3 is an illustration of a method of transferring data from memory to manage graphics output latency. The method 300 may be performed by one or more systems or components depicted in fig. 1 and 4, including: for example, data processing system 102, interface 110, NLP component 112, digital assistant component 114, query generator component 116, content selector component 118, or computing device 104. In ACT 305, the data processing system or computing device may retrieve the acoustic signal and identify the request. The computing device may sense or detect the acoustic signal by using a microphone. The computing device may identify a trigger word or a hotword in the acoustic signal. The computing device or a data processing system remote from the computing device may identify the request in the acoustic signal. In some cases, the computing device may receive the acoustic signal, determine that the acoustic signal is to be forwarded to the data processing system, and then forward the acoustic signal, or a portion thereof, to the data processing system.
The data processing system may receive data packets including input audio signals (e.g., acoustic signals) detected by sensors of the computing device via an interface of the data processing system including a digital assistant executed by one or more processors. The acoustic signal may comprise a plurality of parts. For example, the first portion of the acoustic signal may include a wake word, an activate word, a trigger word, or a hotword that signals to the computing device that the user is requesting an action, function, or information. The computing device may use the local NLP component to identify activation words. After identifying the activation word, the computing device may receive a second portion of the acoustic signal. This second portion of the acoustic signal may be forwarded to a data processing system for further processing. The data processing system may identify a request in a second portion of the acoustic signal received by the data processing system. The computing device may parse the acoustic signal or process the acoustic signal to identify the request.
In ACT 310, the data processing system may identify a quantized date value and a quantized time value corresponding to the request. The data processing system may identify a timestamp associated with the request to determine the quantized value. The data processing system may identify a time to receive or transmit the request and map the identified time to a quantized date value and a quantized time value. The data processing system may parse the request to identify a time to render the multimedia content, which may be different from a time at which the request was generated, sent, or received. If the data processing system identifies a time or date in the request that is different from the time or date at which the request was generated, sent, or received, the data processing system may select the time in the request for mapping. For example, the time in the request may indicate the time at which the multimedia content is to be played. The data processing system may override the time of receipt or transmission of the request with the time indicated in the request by the user.
The data processing system may map the identified date and time to a quantized date value and a quantized time value. By mapping the date and time to the quantized date value and quantized time value, the data processing system may reduce memory usage per matrix data structure and increase matrix lookup speed.
In ACT 315, the data processing system may retrieve the signal for the quantized date value and the quantized time value. The data processing system may retrieve the values of the signal for the quantized date value and quantized time value via a lookup in a multi-dimensional matrix data structure having the quantized date value and quantized time value. The matrix may comprise at least two dimensions, wherein a first dimension of the multi-dimensional matrix data structure has a quantization date and a second dimension of the multi-dimensional matrix data structure has a quantization time. The data processing system may store a separate matrix for each signal or combine two or more signals into a three-dimensional matrix in which a third dimension corresponds to a different signal.
In ACT 320, the data processing system may generate a query by using the values of the signals retrieved from the multi-dimensional matrix. The data processing system may generate queries by using boolean logic, query fields, or filtering. The query may include additional functions for each field, such as summing, averaging, minimizing, or maximizing.
In ACT 325, the data processing system may apply the query to the multimedia content data structure. The data processing system may apply a query to the multimedia content data structure to identify multimedia content items that match the value of the signal. The application query may include: the search is performed with values, filtering is applied to the data structure, script is performed, or other techniques to retrieve or select data corresponding to the values of the signals retrieved from the matrix.
In ACT 330, the data processing system may provide results from the application of the query to the multimedia data structure to the computing device for presentation. The computing device may present the results via a display device connected to the computing device. The computing device may present the results using the audio output. The computing device may receive an indication to execute or play the presented results.
Fig. 4 is a block diagram of an example computing system 400. Computer system or computing device 400 may include or be used to implement system 100 or components thereof, such as computing device 104 or data processing system 102. The computing device 104 or the data processing system 102 may include an intelligent personal assistant or a voice-based digital assistant. Computing system 400 includes a bus 405 or other communication component for communicating information, and a processor 410 or processing circuit coupled to bus 405 for processing information. Computing system 400 may also include one or more processors 410 or processing circuits coupled to bus 405 for processing information. Computing system 400 also includes a main memory 415, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 405 for storing information and instructions to be executed by processor 410. Main memory 415 may be or include data repository 122 or data repository 118. Main memory 415 also may be used for storing location information, temporary variables or other intermediate information during execution of instructions by processor 410. Computing system 400 may further include a Read Only Memory (ROM) 420 or other static storage device coupled to bus 405 for storing static information and instructions for processor 410. A storage device 425, such as a solid state device, magnetic disk, or optical disk, may be coupled to bus 405 to permanently store information and instructions. Storage 425 may include, or be part of, data repository 122 or data repository 118.
The computing system 400 may be coupled via bus 405 to a display 435, such as a liquid crystal display or an active matrix display, for displaying information to a user. An input device 430, such as a keyboard including alphanumeric and other keys, may be coupled to bus 405 for communicating information and command selections to processor 410. The input device 430 may include a touch screen display 435. The input device 430 may also include a cursor control, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to the processor 410 and for controlling cursor movement on the display 435. For example, display 435 may be part of computing device 104, data processing system 102, or other components in FIG. 1.
The processes, systems, and methods described herein may be implemented by computing system 400 in response to processor 410 executing an arrangement of instructions included in main memory 415. Such instructions may be read into main memory 415 by another computer-readable medium, such as storage device 425. Execution of the arrangement of instructions contained in main memory 415 causes computing system 400 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions included in main memory 415. Hardwired circuitry may be used in place of or in combination with software instructions in combination with the systems and methods described herein. The systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
Although an example computing system has been described in FIG. 4, the subject matter comprising the operations described in this specification may be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, or in combinations of one or more of them, including the structures disclosed in this specification and their structural equivalents.
For the case where the system discussed herein gathers personal information about a user or may utilize personal information, the user may be provided with the following opportunities: whether or not the control program or feature may gather personal information (e.g., information about the user's social network, social actions or activities, the user's preferences, or the user's location), or whether and/or how to receive content from a content server or other data processing system that may be more relevant to the user. In addition, prior to storing or using the particular data, one or more ways may be beneficial to anonymize the particular data such that personal identification information is removed when generating the parameters. For example, the identity of the user may be anonymized such that personal identity information of the user cannot be determined, or the geographic location of the user from which location information (such as city, zip code, or state county level) may be obtained may be generalized such that a particular location of the user cannot be determined. Thus, the user can control the manner in which the content server gathers and uses information about him or her.
The subject matter and operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on a manually generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. The computer storage medium may be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. When the computer storage medium is not a propagated signal, the computer storage medium may be a source or destination of computer program instructions encoded in an artificially generated propagated signal. Computer storage media may also be included in one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored in one or more computer readable storage devices or received from other sources.
The terms "data processing system," "computing device," "component," and "data processing apparatus" encompass a variety of devices, and machines for processing data, including: such as a programmable processor, a computer, a system on a chip, or a plurality of the foregoing, or a combination thereof. The device may comprise dedicated logic circuitry, for example an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). In addition to hardware, the apparatus may include code that creates an execution environment for the computer program under discussion, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The device and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. For example, the audio signal generator component 120, the content selector component 118, the NLP component 112, and other data processing system 102 components can include or share one or more data processing apparatuses, systems, computing devices, or processors. For example, the interface 110, NLP component 112, pattern detector component 114, acquisition component 116, and other computing device 104 components may include or share one or more data processing apparatuses, systems, computing devices, or processors.
A computer program (also known as a program, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and declarative languages or programming languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may correspond to a file in a file system. A computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of data processing system 102) to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including: such as semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices), magnetic disks (e.g., internal hard disks or removable disks), magneto-optical disks, CD-ROM disks, and DVD-ROM disks. The processor and the memory may be supplemented by, or incorporated in, special purpose logic circuitry.
The subject matter described herein may be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or a combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include: local area networks ("LANs") and wide area networks ("WANs"), internets (e.g., the internet), and point-to-point networks (e.g., ad hoc point-to-point networks).
A computing system, such as system 100 or system 400, may include clients and servers. The client and server are generally remote from each other and typically interact through a communication network (e.g., network 105). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server sends data (e.g., data packets representing content items) to the client device (e.g., to display data to and receive user input from a user interacting with the client device). Data generated at the client device (e.g., results of the user interaction) may be received at the server from the client device (e.g., received by the data processing system 102 from the computing device 104 or the data provider device 108).
Although operations are depicted in the drawings in a particular order, such operations need not be performed in the particular order shown or in sequential order, and not all illustrated operations need be performed. The acts described herein may be performed in a different order.
The separation of individual system components does not require separation in all embodiments, and the described program components can be included in a single hardware or software product. For example, NLP component 112 or content selector component 118 may be a single component, app, or program, or a logic device having one or more processing circuits or a portion of one or more servers of data processing system 102.
Having now described a few illustrative embodiments, it should be apparent that the foregoing is illustrative and not limiting and has been presented by way of example. In particular, while many of the examples presented herein relate to a particular combination of method acts or system elements, those acts and those elements may be combined in other ways to achieve the same objectives. Acts, elements and features discussed in connection with one embodiment are not intended to be excluded from other embodiments or from a similar role in an embodiment.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "featuring" and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as alternative embodiments consisting of the items listed thereafter and thereafter as well as additional items. In one embodiment, the systems and methods described herein consist of one of the elements, acts, or components described, various combinations of more than one of the elements, acts, or components described, or all of the elements, acts, or components described.
Any reference to an embodiment or element or act of a system and method in the singular herein may also encompass an embodiment comprising a plurality of such elements, and any reference to any embodiment or element or act herein in the plural may also encompass an embodiment comprising only a single element. References in the singular or plural are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to a single or multiple configurations. References to any action or element are based on any information, action or element may include implementations in which the action or element is based at least in part on any information, action or element.
Any embodiment disclosed herein may be combined with any other embodiment or example, and references to "an embodiment," "some embodiments," "one embodiment," etc., are not necessarily mutually exclusive, and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment or example. Such terms as used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, including or excluding, in any manner consistent with aspects and embodiments disclosed herein.
Reference to "or" may be construed as inclusive such that any term described by use of "or" may indicate any one of a single described term, more than one described term, and all described terms. References to "at least one of a and B" may include: only "a", only "B", and both "a" and "B". These references, used in conjunction with "comprising" or other open terms, may include additional items.
Where technical features in the figures, detailed description, or any claim are followed by reference signs, the reference signs have been included to increase the intelligibility of the figures, detailed description, and claims. Accordingly, neither the reference numerals nor the absence of reference numerals are intended to limit the scope of any claim element.
The systems and methods described herein may be embodied in other specific forms without departing from the features of the systems and methods described herein. The foregoing embodiments are illustrative and not limiting of the systems and methods described. The scope of the systems and methods described herein are, therefore, indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (20)
1. A system for data structure querying to manage loading time of multimedia content, comprising:
a data processing system comprising a digital assistant component executed by one or more processors;
a natural language processor component of the digital assistant component, the natural language processor component to:
receiving, via an interface of the data processing system, a data packet including an input audio signal detected by a sensor of a computing device, and
Parsing the input audio signal to identify a request;
a query generator component of the digital assistant component, the query generator component to:
identifying a quantized date value and a quantized time value corresponding to the request in response to the request,
retrieving one or more values of each of a plurality of signals corresponding to a quantization date value and a quantization time value via a lookup in a multi-dimensional matrix data structure indexed by the quantization date value and the quantization time value, a first dimension of the multi-dimensional matrix data structure having a quantization date, a second dimension of the multi-dimensional matrix data structure having a quantization time, wherein the plurality of signals comprise a preference signal and/or a context signal in addition to the quantization date value and the quantization time value, and wherein the plurality of signals are each different from the input audio signal,
generating a query with the one or more values of each of the plurality of signals retrieved from the multi-dimensional matrix structure indexed by quantized date values and quantized time values, and
applying the query to a multimedia content data structure to identify a plurality of multimedia content items matching the plurality of signals in response to the query; and
The data processing system is to provide an indication of the plurality of multimedia content items to the computing device for presentation via a graphical user interface rendered by the computing device, the plurality of multimedia content items matching the one or more values of each of the plurality of signals for the quantized date value and the quantized time value retrieved from the multi-dimensional matrix data structure.
2. The system of claim 1, comprising the data processing system to:
receiving a date stamp and a time stamp corresponding to the request;
mapping the date stamp to the quantified date value including one of a weekday or a weekend; and
mapping the timestamp to the quantized time value comprising one of day or night.
3. The system of claim 2, comprising the data processing system to:
determining a location of the computing device;
determining a sunset time for the location; and
the timestamp is mapped to the quantized time value based on the sunset time.
4. The system of claim 2, wherein the timestamp corresponding to the request is a time at which the request was identified by the data processing system.
5. The system of claim 2, wherein the timestamp corresponding to the request is a time indicated in the request at which the multimedia content item is to be played.
6. The system of claim 1, comprising the data processing system to:
the multi-dimensional matrix is populated with the plurality of signals based on historical network activity information associated with each of the plurality of signals.
7. The system of claim 1, comprising the data processing system to:
at least one of the one or more values is generated based on the moving average.
8. The system of claim 1, wherein the plurality of signals comprises at least one of:
preferences for one or more applications for providing the multimedia content item;
preference for transaction type;
preferences for media consumption patterns;
preferences for media consumption duration; and
preferences for media types.
9. The system of claim 8, comprising the data processing system to:
the preference for the media consumption duration is determined based on device activity associated with one or more devices associated with an account associated with the computing device, the one or more devices in communication with the data processing system.
10. The system of claim 8, comprising the data processing system to:
a two-by-two matrix is generated for each of the plurality of signals based on aggregating historical data over a predetermined time interval.
11. The system of claim 1, comprising the data processing system to:
a two-by-two matrix is generated for each of the plurality of signals based on historical information of each of the plurality of signals.
12. The system of claim 11, comprising the data processing system to: the two-by-two matrices for each of the plurality of signals are combined to generate a three-dimensional matrix.
13. The system of claim 1, comprising the data processing system to:
a two-by-two matrix is generated for each of the plurality of signals based on a machine learning technique.
14. A method of querying a data structure for managing loading time of multimedia content, comprising:
receiving, via an interface of a data processing system including a digital assistant executed by one or more processors, a data packet including an input audio signal detected by a sensor of a computing device;
parsing, by a natural language component of the digital assistant, the input audio signal to identify a request;
identifying, by a query generator executed by the digital assistant, a quantized date value and a quantized time value corresponding to the request in response to the request;
retrieving, by the digital assistant, one or more values of each of a plurality of signals corresponding to quantization date values and quantization time values via a lookup in a multi-dimensional matrix data structure indexed by quantization date values and quantization time values, a first dimension of the multi-dimensional matrix data structure having quantization dates, a second dimension of the multi-dimensional matrix data structure having quantization times, wherein the plurality of signals include preference signals and/or context signals in addition to quantization date values and quantization time values, and wherein the plurality of signals are each different from the input audio signal;
Generating, by the digital assistant, a query with the one or more values of each of the plurality of signals retrieved from the multi-dimensional matrix structure indexed by quantization date values and quantization time values;
applying, by the digital assistant, the query to a multimedia content data structure to identify, in response to the query, a plurality of multimedia content items that match the one or more values of each of the plurality of signals; and
providing, by the digital assistant, an indication of the plurality of multimedia content items to the computing device for presentation via a graphical user interface rendered by the computing device, the plurality of multimedia content items matching the one or more values of each of the plurality of signals for the quantization date value and the quantization time value retrieved from the multi-dimensional matrix data structure.
15. The method of claim 14, comprising:
receiving a date stamp and a time stamp corresponding to the request;
mapping the date stamp to the quantified date value including one of a weekday or a weekend; and
mapping the timestamp to the quantized time value comprising one of day or night.
16. The method of claim 15, comprising:
determining a location of the computing device;
determining sunset time of the position information; and
the timestamp is mapped to the quantized time value based on the sunset time.
17. The method of claim 15, wherein the timestamp corresponding to the request is a time at which the request was identified by the data processing system.
18. The method of claim 14, comprising:
based on historical network activity information associated with each of the plurality of signals, the multi-dimensional matrix is populated with the one or more values of each of the plurality of signals.
19. The method of claim 14, wherein the plurality of signals comprises at least one of:
preferences for one or more applications for providing the multimedia content item;
preference for transaction type;
preferences for media consumption patterns;
preferences for media consumption duration; and
preferences for media types.
20. The method of claim 19, comprising:
the data processing system is to determine the preference for the media consumption duration based on device activity associated with one or more devices associated with an account associated with the computing device, the one or more devices in communication with the data processing system.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2017/054940 WO2019070244A1 (en) | 2017-10-03 | 2017-10-03 | Data structure queries to manage loading time in multimedia content |
Publications (2)
Publication Number | Publication Date |
---|---|
CN110741365A CN110741365A (en) | 2020-01-31 |
CN110741365B true CN110741365B (en) | 2023-12-15 |
Family
ID=60153461
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780092060.2A Active CN110741365B (en) | 2017-10-03 | 2017-10-03 | Data structure query for managing load time in multimedia content |
Country Status (4)
Country | Link |
---|---|
US (2) | US11409783B2 (en) |
EP (1) | EP3622408A1 (en) |
CN (1) | CN110741365B (en) |
WO (1) | WO2019070244A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2019070244A1 (en) | 2017-10-03 | 2019-04-11 | Google Llc | Data structure queries to manage loading time in multimedia content |
JP6862582B2 (en) * | 2017-10-03 | 2021-04-21 | グーグル エルエルシーＧｏｏｇｌｅ ＬＬＣ | Display mode-dependent response generation considering latency |
US10930278B2 (en) * | 2018-04-09 | 2021-02-23 | Google Llc | Trigger sound detection in ambient audio to provide related functionality on a user interface |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101488346A (en) * | 2009-02-24 | 2009-07-22 | 深圳先进技术研究院 | Speech visualization system and speech visualization method |
CN103425727A (en) * | 2012-05-14 | 2013-12-04 | 国际商业机器公司 | Contextual voice query dilation |
CN104584010A (en) * | 2012-09-19 | 2015-04-29 | 苹果公司 | Voice-based media searching |
Family Cites Families (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5559940A (en) * | 1990-12-14 | 1996-09-24 | Hutson; William H. | Method and system for real-time information analysis of textual material |
US8490136B2 (en) * | 2009-05-07 | 2013-07-16 | Sirius Xm Radio Inc. | Method and apparatus for providing enhanced electronic program guide with personalized selection of broadcast content using affinities data and user preferences |
US9262446B1 (en) * | 2005-12-29 | 2016-02-16 | Google Inc. | Dynamically ranking entries in a personal data book |
US7788219B2 (en) * | 2007-12-13 | 2010-08-31 | Harris Technology, Llc | Preference setting in a computer system |
US8712944B1 (en) * | 2011-05-13 | 2014-04-29 | Google Inc. | Adaptive contact window wherein the probability that an answering user/expert will respond to a question corresponds to the answering users having response rates that are based on the time of day |
US9443029B2 (en) * | 2011-08-15 | 2016-09-13 | Verizon Patent And Licensing Inc. | Method and system for providing context-based view content management |
US10091322B2 (en) * | 2011-10-18 | 2018-10-02 | Qualcomm Incorporated | Method and apparatus for improving a user experience or device performance using an enriched user profile |
US9524487B1 (en) * | 2012-03-15 | 2016-12-20 | Google Inc. | System and methods for detecting temporal music trends from online services |
US20140019443A1 (en) * | 2012-07-10 | 2014-01-16 | Venor, Inc. | Systems and methods for discovering content of predicted interest to a user |
US10572476B2 (en) | 2013-03-14 | 2020-02-25 | Apple Inc. | Refining a search based on schedule items |
US9338493B2 (en) * | 2014-06-30 | 2016-05-10 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US10073861B2 (en) * | 2015-09-03 | 2018-09-11 | Disney Enterprises, Inc. | Story albums |
US11496579B2 (en) * | 2016-01-19 | 2022-11-08 | Comcast Cable Communications, Llc | Connection manager |
US20190340564A1 (en) * | 2017-03-29 | 2019-11-07 | WeWork Companies Inc. | Monitoring Network Traffic to Determine Asset Utilization |
WO2019070244A1 (en) | 2017-10-03 | 2019-04-11 | Google Llc | Data structure queries to manage loading time in multimedia content |
-
2017
- 2017-10-03 WO PCT/US2017/054940 patent/WO2019070244A1/en unknown
- 2017-10-03 EP EP17787726.3A patent/EP3622408A1/en not_active Withdrawn
- 2017-10-03 US US16/463,763 patent/US11409783B2/en active Active
- 2017-10-03 CN CN201780092060.2A patent/CN110741365B/en active Active
-
2022
- 2022-08-08 US US17/882,920 patent/US11841894B2/en active Active
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101488346A (en) * | 2009-02-24 | 2009-07-22 | 深圳先进技术研究院 | Speech visualization system and speech visualization method |
CN103425727A (en) * | 2012-05-14 | 2013-12-04 | 国际商业机器公司 | Contextual voice query dilation |
CN104584010A (en) * | 2012-09-19 | 2015-04-29 | 苹果公司 | Voice-based media searching |
Also Published As
Publication number | Publication date |
---|---|
US11841894B2 (en) | 2023-12-12 |
US20220391431A1 (en) | 2022-12-08 |
US11409783B2 (en) | 2022-08-09 |
CN110741365A (en) | 2020-01-31 |
WO2019070244A1 (en) | 2019-04-11 |
EP3622408A1 (en) | 2020-03-18 |
US20190278795A1 (en) | 2019-09-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11627065B2 (en) | Selective sensor polling | |
CN111033492B (en) | Providing command bundle suggestions for automated assistants | |
US11841894B2 (en) | Data structure queries to manage loading time in multimedia content | |
US20230111040A1 (en) | Modulation of packetized audio signals | |
US20200342866A1 (en) | Dynamic and/or context-specific hot words to invoke automated assistant | |
CN108605076B (en) | Method and system for transmitting data on computer network by using feedback control system | |
US11675607B2 (en) | Data transfers from memory to manage graphical output latency | |
JP6968897B2 (en) | Establishing an audio-based network session with unregistered resources | |
JP2023116607A (en) | Proactive caching of assistant action content at client device to enable on-device resolution of spoken or typed utterances | |
JP2022547598A (en) | Techniques for interactive processing using contextual data | |
US11164575B2 (en) | Methods and systems for managing voice response systems to optimize responses | |
JP2022009571A (en) | Establishment of audio-based network session with unregistered resource | |
JP2015109087A (en) | Method of document data recommendation |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
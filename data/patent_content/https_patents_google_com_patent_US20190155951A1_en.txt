US20190155951A1 - Methods and systems for improving a search ranking using article information - Google Patents
Methods and systems for improving a search ranking using article information Download PDFInfo
- Publication number
- US20190155951A1 US20190155951A1 US14/617,931 US201514617931A US2019155951A1 US 20190155951 A1 US20190155951 A1 US 20190155951A1 US 201514617931 A US201514617931 A US 201514617931A US 2019155951 A1 US2019155951 A1 US 2019155951A1
- Authority
- US
- United States
- Prior art keywords
- user
- article
- client
- data
- articles
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G06F17/30867—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G06F17/3053—
Definitions
- the invention generally relates to search engines. More particularly, the invention relates to methods and systems for improving a search ranking using article information such as client-side information.
- Search engines are useful for locating a specific desired or relevant article from a large collection of articles.
- Conventional search engines often sort articles of a search result based on the contents of the articles, such as on the number of times a keyword or particular word or phrase appears in each article.
- client-side applications return results based, for example, on certain article attributes or history data.
- existing client-side search applications provide search results listed by the date and time the article was last saved, the type of article, or the size of the article. The user can restrict the search by entering other parameters such as last edit time, other words or phrases in the article, or article type. Nonetheless, the relatively limited article attributes and history data used by conventional client-side search applications may degrade user experience.
- Embodiments of the present invention comprise systems and methods that improve searching.
- One aspect of one embodiment of the present invention comprises determining a ranking score for an article based at least in part on duration data, access data, URL data, or trajectory data associated with the article.
- FIG. 1 illustrates a block diagram of a system in accordance with one embodiment of the present invention
- FIG. 2 illustrates a detailed view of a portion of the system illustrated in FIG. 1 in accordance with one embodiment of the present invention
- FIG. 3 illustrates a flow diagram of a method in accordance with one embodiment of the present invention
- FIG. 4 illustrates a flow diagram of one embodiment of a subroutine of the method shown in FIG. 3 ;
- FIG. 5 illustrates a flow diagram of one embodiment of a subroutine of the subroutine show in FIG. 4 .
- FIG. 1 is a diagram illustrating an exemplary system in which exemplary embodiments of the present invention may operate.
- the present invention may operate, and be embodied in, other systems as well.
- the system 100 shown in FIG. 1 comprises multiple client devices 102 a - n, users 112 a - n , a network 106 , and a server 190 .
- the network 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, LAN or WAN may be used.
- the client devices 102 a - n shown each comprise a computer-readable medium, such as a random access memory (RAM) 108 coupled to a processor 110 .
- the processor 110 executes a set of computer-executable program instructions stored in memory 108 .
- Such processors may comprise a microprocessor, an ASIC, and state machines.
- Such processors comprise, or communicate with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the methods described herein.
- Embodiments of computer-readable media comprise, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor with computer-readable instructions.
- Other examples of suitable media comprise, but are not limited to, a floppy disk, CD-ROM, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any computer-programming language, including, for example, C, C++, C#, Visual Basic, HTML, Java, and JavaScript.
- Client devices 102 a - n may also comprise a number of external or internal devices such as a mouse, a CD-ROM, a keyboard, voice recognition hardware, a display, or other input or output devices.
- client devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, wearable computers, a processor-based device, and similar types of systems and devices.
- a client device 102 a - n may be any type of processor-based platform that interacts with one or more application programs.
- the client devices in 102 a - n shown in FIG. 1 comprise personal computers.
- the memory 108 comprises a monitoring engine 140 , a client application 170 , a client article 171 , and a query processor 180 .
- Articles may comprise documents, for example, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and word processor, database, and application program document files, chat messages, email messages, audio, video, or any other information of any type whatsoever made available on a network (such as the Internet), a personal computer, or other computing or storage means.
- Articles can comprise client-side articles and network articles.
- Client-side articles can include, for example, articles that are stored or manipulated primarily on a client-side device such as, for example, word processing documents, emails, data spreadsheets, database documents, media files or other articles.
- Network articles can comprise, for example, articles stored or accessed previously from the network 106 such as, for example, web pages.
- the client article 171 comprises any article associated with the user or client device.
- the client application 170 comprises an Internet browser application
- the client article 171 comprises a document in a format usable with the Internet browser application.
- the monitoring engine 140 shown determines client-side behavior data associated with the client application 170 .
- the client-side behavior data may comprise, for example, duration data, access data, URL data, trajectory data, as well as other forms of client-side behavior data.
- Duration data can include, for example, an amount of time the user 112 a spends on an article, such as a web page. Additionally, duration data can include an amount of time the user 112 a spends on an article, such as a web page hosted by another web page. For example, the amount of time a user spends on www.google.com/search/images.html can be attributed, in part, to time on the host www.google.com.
- Access data can include, for example, the number of times the user 112 a views an article or otherwise opens and enters into or interacts with an article. Additionally, access data can include a total number of days on which a document is accessed or edited by a user 112 a or a frequency of article access.
- URL data can include, for example, the method in which a user 112 a accesses a particular URL. For example, URL data can include whether a user types a URL into an address field of a web browser or whether a user accesses a URL by clicking on a hyperlink to another web page or a hyperlink in an email message, for example.
- Trajectory data can include a sequence of articles accessed by the user 112 a including, for example, which article initiates a sequence of articles and which article terminates a sequence of articles.
- trajectory data can include data identifying a login page as initiating a sequence of web pages and a logout page as terminating a sequence of web pages viewed by the user 112 a.
- the monitoring engine 140 monitors the user's interactions and the client computer's interactions with articles on the client computer. In other embodiments, the monitoring engine 140 monitors multiple users' interactions with articles, on the client computer, on an associated network, or elsewhere. As one example, the monitoring engine 140 can monitor the client article 171 and detect that the user 112 a is typing a URL on the client article 171 using the client application 170 . The monitoring engine 140 can monitor and record the URL input. The monitoring engine 140 can also monitor and record interactions with multiple articles (not shown here) on client 102 a. The gathering and use of client-side behavior data is described further below.
- the monitoring engine 140 stores the gathered client-side behavior data in a data store 160 .
- the data store can be one or more logical or physical storage areas.
- the data store 160 in the illustrated embodiment comprises a client behavior data database 164 .
- the data store 160 can comprise a pre-existing database.
- Data storage elements of the data store 160 can comprise any one or combination of methods for storing data, including without limitation, arrays, hashtables, lists, and pairs. Other similar types of data storage devices can be accessed by the client device 102 .
- the client behavior data database 164 stores data associated with the client application 170 and client-side behavior data, such as duration data, access data, URL data, trajectory data, or other forms of client-side behavior data.
- client behavior data can be combined with other data in a single database, or can be stored in multiple databases.
- the query processor 180 comprises software and hardware that enable the query processor 180 to receive either an explicit search query 114 entered by the user 112 a or generate an implicit query based on client-side behavior data. The query processor 180 then formats the implicit or explicit query into a query signal 182 that can be received by a search engine 120 .
- the memory 108 further comprises the search engine 120 .
- the search engine 120 locates relevant information in response to the query signal 182 from the query processor 180 .
- the query signal 182 can correspond, for example, to an explicit query signal generated based on the search query entered by a user 112 a, or an implicit query signal generated based on event signals from the monitoring engine 140 .
- the search engine 120 responds to the query signal 182 by returning a set of relevant information or a search result 150 to the user 112 a.
- the search engine 120 shown comprises an article locator 134 , a ranking processor 138 , and a client behavior data processor 136 .
- each comprises computer code residing in the memory 108 .
- the article locator 134 identifies a set of relevant articles relevant to the query signal 182 from the query processor 180 .
- the client behavior data processor 136 retrieves from the data store 160 , or otherwise determines, client-side behavior data associated with articles in the set of relevant articles returned by the article locator 134 .
- the ranking processor 138 ranks or scores each article in the set of relevant articles identified by the article locator 134 based at least in part on the client-side behavior data determined by the client behavior data processor 136 . Note that other functions and characteristics of the article locator 134 , ranking processor 138 , and user data processor 138 are further described below.
- FIG. 2 shows a more detailed view of the monitoring engine 140 shown in FIG. 1 .
- the monitoring engine 140 monitors such client behavior activity, and from this client behavior activity creates client-side behavior data including duration data 173 a - c, access data 175 a - c, URL data 177 a - c, and trajectory data 179 a - c associated with the client articles 171 a - c.
- the client behavior activity associated with the client articles 171 a - c comprises one or more of duration action 172 a - c, access action 174 a - c, URL action 176 a - c, and trajectory action 178 a - c.
- duration action 172 a - c comprises one or more of duration action 172 a - c, access action 174 a - c, URL action 176 a - c, and trajectory action 178 a - c.
- These four general categories of action of the user 112 a and/or the client 102 a associated with the client articles are given only for purposes of illustration of one exemplary embodiment. It should be appreciated that in alternative embodiments, a subset of these four categories and/or other categories of action may be utilized.
- client articles 171 a - c are depicted to illustrate that the monitoring engine 140 can monitor a plurality of articles associated with one or more applications and create client-side behavior data associated with each article individually.
- the types of actions and data illustrated in FIG. 2 are offered only as examples of types of client-side behavior actions and data associated with client articles 171 a - c associated with the client applications 170 a - c.
- Other types of client-side behavior actions and data associated with client articles 171 a - c can be utilized within the scope of the present invention.
- the monitoring engine 140 After determining the corresponding client-side behavior data for the client articles 171 a - c, the monitoring engine 140 processes the client-side behavior data associated with the client articles 171 a - c so that it can be received by a client behavior data database 164 located within a data store 160 .
- the monitoring engine 140 can determine client-side behavior data for multiple user articles and ensures that the client-side behavior data associated with an article can be identified with that particular article.
- the monitoring engine 140 transmits the client-side behavior data, together with identifying information that associates the data with a particular article to which it relates, to the data store 160 for storage in a manner that preserves associations between the article and the client behaviors.
- the monitoring engine 140 As an example of the functioning of the monitoring engine 140 , consider a user 112 a working with an article, such as a web page, associated with an Internet browser application.
- the web page can be represented by the client article 171 a of FIG. 2 and the Internet browser application can be represented by the client application 170 a.
- client behavior data is monitored and received by the monitoring engine 140 . For example, if the user 112 a types a URL into client application 170 a , the monitoring engine 140 detects this activity and receives URL data 177 a comprising, for example, data indicating whether the user 112 a typed the URL or selected a link, and text of the URL.
- the monitoring engine 140 can detect the login page as the start of a trajectory and can attribute activity on subsequent pages within the social network at least in part to the login page. Additionally, the monitoring engine 140 can determine the amount of time the user 112 a spends on articles, such as web pages within the social network.
- the monitoring engine 140 then configures the client-side behavior data to be received by the client behavior data database 164 located within the data store 160 in a manner so that it remains associated with the article to which it relates.
- the monitoring engine 140 creates client-side behavior data in response to the typing, saving, and emailing of the user 112 a.
- This client-side behavior data can be associated with the web page article that the user 112 a was using when the events generating the client-side behavior data occurred. This association can be preserved in the data store 160 so that if the web page article is determined by the article locator 134 to be relevant to the query signal 182 , the client behavior data processor 136 can retrieve the client-side behavior data associated with the web page article.
- the client-side behavior data created by the monitoring engine 140 can then be used to score or rank the article by the search engine 120 .
- an article associated with frequent access and a typed URL can receive a higher ranking score than an article associated with infrequent access or an article accessed by selecting a hyperlink.
- the frequent access and manually entered URL likely indicates a higher interest of the user 112 a in the article associated with this activity.
- a web page, for example, that is merely accessed by selecting a link and viewed only once is less likely to be useful to a user 112 a than a web page accessed frequently by the user 112 a, for which the user 112 a specifically enters the URL by hand.
- the present invention can comprise systems having different architecture than that which is shown in FIGS. 1 and 2 .
- the system 100 shown in FIG. 1 and the detailed view of the monitoring system shown in FIG. 2 are merely exemplary, and are used to explain the exemplary methods shown in FIGS. 3-5 .
- One exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on duration data associated with the relevant article.
- the duration data can comprise determining a graph wherein the graph can comprise nodes representing URLs and edges representing connections between the nodes.
- the duration data can further comprise an amount of time spent on a request path, or an amount of time on a domain name. Additionally, the amount of time on a higher domain name can be attributed to a lower level domain name, as described in further detail below.
- Another exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on access data associated with the relevant article.
- the access data can comprise a number of days with greater than zero access, an amount of time since the article was last accessed, or a frequency of user access.
- articles associated with a frequency of user access are added to a link library.
- the ranking score can be a function of the amount of time since the article was last accessed.
- the function can be a piecewise function, or a linear function, or an exponential function, or a nonlinear function.
- Another exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on URL data associated with the relevant article.
- the URL data can comprise whether the URL was typed, whether the URL was selected by a hyperlink, or whether the URL was completed automatically by a computer functionality.
- Another exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on trajectory data associated with the relevant article.
- the trajectory data can comprise, for example, determining a login page or determining a logout page.
- an article at a beginning of a trajectory can be ranked higher than an article at an end of a trajectory.
- FIGS. 3 through 5 illustrate various aspects of exemplary methods according to exemplary embodiments of the present invention.
- FIG. 3 illustrates an exemplary method 200 in accordance with one embodiment of the present invention. This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention.
- the method 200 shown in FIG. 3 can be executed or otherwise performed by any of various systems.
- the method 200 is described below as carried out by the system 100 shown in FIGS. 1 and 2 by way of example, and various elements of the system 100 are referenced in explaining the example methods of FIGS. 3-5 .
- Methods according to the present invention may be embodied in other ways, including network searching, server-side searching, combined searching, and other systems.
- the method 200 shown provides an improvement of client-side searching by providing for ranking search results based on client behavior data. For example, if the user 112 a desires to retrieve articles relating to digital cameras that the user 112 a recently viewed over the network 106 , the user 112 a can enter the term “digital camera” as the search query 114 .
- the present invention can take the search query 114 —“digital camera”—and locate articles that are relevant to the search. This can include, for example, an Internet auction web page containing listings of digital cameras, a retail home page selling digital cameras, and a search results page listing digital cameras. Not all of the articles located as being relevant to the search query 114 will necessarily be of high interest to the user 112 a.
- the present invention reflects this by ranking the relevant articles according to various actions of the user 112 a when accessing the articles. For example, if the user 112 a typed in the URL for the Internet auction site and accessed a login screen and then proceeded to view the articles listing digital cameras and repeatedly accessed the web pages showing digital cameras over multiple days, it is likely that the user 112 a had a higher interest in the web pages from the Internet auction site. If, on the other hand, the user 112 a accessed the retail home page merely by clicking on a link and visited it on only one or two occasions, it is less likely that it is of primary interest to the user 112 a .
- the present invention can reflect the relative importance of the web pages associated with the Internet auction site by associating them with a higher ranking score.
- the pages associated with the Internet auction site associated with a higher ranking score can be presented in a way that emphasizes it over the retail home page. For example, the web pages associated with the Internet auction site can be presented first in a list of search results. Emphasizing the web pages associated with the Internet auction site can help the user 112 a quickly and easily select it from a list of search results.
- the user 112 a can select a first link in a listing of search results, move to a first web page associated with the first link and then quickly return to the listing of search results and select a second link.
- the present invention can detect this behavior and determine that the first web page is not relevant to what the user 112 a wants.
- the first web page can be down-ranked, or alternatively, a second web page associated with the second link, which the user 112 a views for longer periods or time, can be up-ranked.
- FIGS. 3-5 represent one or more processes, methods or subroutines carried out in the exemplary method 200 .
- the example method 200 begins.
- a counter variable n can be set to 1.
- the counter variable n can be used to regulate how many iterations of the method 200 are completed for a given search.
- Block 202 is followed by block 204 , in which a client behavior data database is provided. This can be accomplished by, for example, constructing such a database with the assistance of a monitoring engine 140 or establishing communication with such a database.
- FIG. 4 is a more detailed view of block 204 from FIG. 3 , and illustrates an example of a method for providing a client behavior data database.
- the method shown in FIG. 4 begins at block 208 , in which, according to the illustrated example, client-side behavior data associated with an article can be determined by a monitoring engine 140 .
- this client-side behavior data can comprise any number of separate types of data including, for example, duration data 173 a, access data 175 a, URL data 177 a, or trajectory data 179 a.
- Other suitable types of client-side behavior data can also be received in block 208 of FIG. 4 .
- the client behavior data can be received from a pre-existing database.
- FIG. 5 illustrates a more detailed view of block 208 from FIG. 4 .
- FIG. 5 begins with block 210 , in which duration data can be determined.
- Duration data can comprise, for example, data relating to the duration of time the user 112 a spends accessing an article, such as a web page.
- Duration data can be used alone or in combination with other duration data.
- Other time-related or duration data can comprise, for example, an amount of user activity within an article. The amount of user activity within an article can be used to determine whether an amount of time spent accessing an article reflects actual user interaction with an article or whether the duration on the article is due merely to user inactivity following accessing an article.
- the amount of user activity with an article can be used to distinguish whether the user is actually viewing an article, such as a web page, or whether the web page has merely been left active on the client device 102 a while the user 112 a is away from the client 102 a.
- Duration data can comprise, for example, a network graph comprising nodes representing URLs visited by the user 112 a and edges representing connections between the URLs.
- the nodes can further comprise node labels that indicate how many times, how frequently, or how recently, for example, the user 112 a has visited the URL.
- a weight can be assigned to each node proportional to the node label and weights for nodes can be propagated to connected nodes. For example, the user 112 a can frequently visit www.cnn.com/world/ as a top level domain and visit web pages linked to from www.cnn.com/world/.
- the frequency and time associated with nodes representing web pages linked to www.cnn.com/world/ can be propagated in whole or in part back to www.cnn.com/world/.
- duration data can comprise data associated with duration on a host.
- Data associated with duration on a host can comprise, for example, how much time is spent on an article comprising a subset of a host article. For example, if a user spends time on a web page www.google.com/search/images.html, the time or a portion of the time spent on this web page can be attributed to the host web page www.google.com. In this way, the importance of a host web page can not only reflect the amount of time a user spends directly on the host web page, but also the amount of time a user spends on an associated web page hosted by the host web page.
- a request path can comprise, for example, a web page comprising a particular page within a website.
- a request path can be represented by a portion of a URL address following a forward slash. For example, in the URL http://www.google.com/search/images.html, the portion following the second forward slash—“search/images.html”—can represent a request path.
- a domain name can comprise a root level domain, for example, “.com” and a higher level domain name, for example, www.google.com.
- a higher level domain name can comprise multiple levels, for example, multiple names separated by a period.
- a second level domain name can represent a host web page or a website.
- www.google.com is a second level domain name representing a host web page.
- a higher level domain name can represent a page hosted by a host web page or website.
- the address www.news.google.com is a third level domain name and can represent a news page hosted by www.google.com.
- a request path can represent a web page comprising a page within a website.
- the request path search/images.html represents an images search page hosted by the website www.google.com.
- a client-side search application can determine an amount of time spent on a request path—in the preceding example, the images search page—and attribute a portion of this time to a domain name—in the example above, the Google home page.
- a user can frequently visit a news home page for only a brief period of time and then spend a more significant amount of time on pages within the news website such as individual news reports.
- the individual news reports can comprise request paths represented, for example, by a URL www.newspage.com/report1, where “report1” represents an individual news report.
- the duration data associated directly with the news home page in this example can reflect only a short amount of time and thus weighted accordingly.
- the news home page is significant to the user 112 a as a source of finding news reports.
- the individual news reports in the present example are accessed for a longer duration of time than the news home page and yet each individual report may only be of interest to the user on a single occasion.
- the present invention can attribute a portion of the time spent on the individual news reports to the news home page.
- an amount of time the user 112 a spends on articles up to a specified maximum number of links from a starting article can be attributed to the starting article.
- the time spent on articles one link away may have the highest weight, while articles two or more steps away may have decreasing weight.
- an average duration the user 112 a spends on a particular type of article can be determined. For example, the user 112 a can spend an average time of 15 seconds viewing web pages. Web pages that are viewed for significantly longer can have higher ranking scores assigned to them.
- the present invention can determine, among other things, whether any scrolling or other activity is conducted on a page as an indication that the user 112 a is actually viewing the page and has not merely left a web page open while conducting other activity.
- Access data can comprise, for example, a number of days an article is accessed at least once. Access data enables the system to determine, for example, articles accessed consistently over a number of different days as distinguished from an article accessed a same number of total times that is only accessed on a relatively few number of different days. For example, the user 112 a can visit a news home page everyday only once and then move on to an article linked to the news home page, for example, a news report. The user 112 a can then access the individual news report repeatedly throughout the day.
- the present invention can determine a number of days with greater than zero accesses for an article in order to distinguish articles accessed consistently by the user 112 a over time from articles accessed a similar number of total times, but only over a relatively few number of days.
- Access data can further comprise an amount of time elapsed since an article was last accessed by a user.
- the monitoring engine 140 can determine an amount of time since the user 112 a last opened a text document.
- An importance of an article can be dependent on the amount of time elapsed since the article was last accessed.
- the relationship between the importance of a document and the amount of time elapsed since the article was last accessed can be simply a linear or exponential relationship.
- the document can become increasingly less important as the elapsed time increases.
- the relationship can also be a non-linear, non-exponential, or piecewise function of the elapsed time.
- a piecewise function can comprise, for example, a combination of linear, exponential, or other functions.
- a constant level of importance independent of the amount of elapsed time since last access, can be determined.
- an exponential relationship can be determined such that the importance of an article decreases exponentially with the amount of elapsed time.
- a relationship can be determined such that the importance of an article decreases much more slowly with the amount of elapsed time.
- the user 112 a working with a particular article such as a business report.
- the user 112 a can be editing and accessing the report on a daily basis for the first few days after the report is first accessed.
- the user 112 a can then move on to another project unrelated to the report.
- the user 112 a can again desire to access the report, for example, to remember some information contained in the report.
- the user 112 a may not desire to view the report in a listing of search results over the first few hours or days as the user 112 a can likely recall the contents of the article or access it directly.
- the user 112 a can be working on other projects but still need to refer occasionally to the report.
- the user's 112 a desire to view the article in a listing of search results may initially be high and then decrease fairly rapidly over the next month as other the user 112 a shifts his attention to other projects.
- the importance of the report decreases over a period of a month or so, for example, the importance can cease to decline as rapidly, and maintain a basic level of importance that decreases slowly over time.
- a piecewise function that uses a combination of functions for different intervals of time may thus effectively represent the importance of the report to the user 112 a over time.
- URL data can comprise, for example, data associated with whether a user types a URL into an address field of an application or whether a user accesses a URL by clicking on a link associated with the URL.
- URL data can attribute significance to a URL that is accessed by typing the URL versus a URL that is accessed by clicking on a link to the URL.
- a URL that is actually typed into an address field of an application by a user can imply a specific desire to access the particular URL as distinguished from a URL merely twisted upon in a link as the user 112 a is browsing through various articles.
- URL data can comprise data associated with whether a typed URL was automatically filled in by a computer functionality.
- some Internet browser applications have a functionality that can complete the remainder of a URL after the user 112 a types a portion of the URL.
- a URL that is entered entirely by the user can represent a more significant URL since the user knew the entire URL and took the time to type it in.
- a URL that the user 112 a only knows a portion of and relies on a computer functionality to fill in the remainder may not be as significant.
- the user 112 a can desire to be presented with a URL, which the user 112 a does not know entirely, in a listing of search results so that it can be quickly recalled.
- the present invention can utilize a combination of URL data, and user preference data comprising, for example, a record of which types of URLs the user 112 a selects from a listing of search results, to determine how the URL data can best be used for a particular user. For example, if the user 112 a frequently selects URLs from a listing of search results that were completed by a computer functionality after typing only a portion of the URL and rarely selects URLs that were entered entirely by the user 112 a, the present invention can utilize this combination of preference data and URL data to determine a higher score for articles associated with URLs completed by a computer functionality. Additionally, hyper links from web pages can be distinguished from links from emails and the email links can receive a higher ranking score as they can be of greater use to the user 112 a.
- Trajectory data can include, for example, data associated with articles accessed by the user 112 a to start a trajectory of associated articles.
- a login page can start a user on a trajectory, or sequence, of associated pages and may be more significant to the user than the associated pages and, therefore, merit a higher ranking score.
- the user 112 a may visit the login screen for a social network website only briefly and then spend more time browsing through pages within the social network website. The user 112 a can then end the session on the social network website by logging out on a logout page.
- the login page can represent the start of a trajectory comprising the sequence of pages within the social network accessed by the user 112 a.
- the logout page can represent an end of the trajectory comprising the sequence of pages accessed by the user 112 a.
- the login page and the logout page may both be visited for only a short amount of time and may both be visited with the same frequency.
- the access data and duration data for the login page and logout page can be similar.
- the user 112 a is likely to prefer to be presented with the login page within a listing of search results, as it can more likely lead to the desired information.
- the user 112 a may want to access a web page within the social network that was previously accessed. In order to do so, the user 112 a can first access the login screen.
- the present invention can utilize the trajectory data associated with the login page to determine a higher score for the login page, at the start of a trajectory, than for the logout page at the end of a trajectory, or for other associated pages.
- Trajectory data can further comprise determining an article hub.
- An article hub can comprise, for example, an article frequently returned to as a source of links for other articles.
- the user 112 a can start at news.google.com and go back and forth through news.google.com linking to other web pages.
- news.google.news.com can be a hub for the user 112 a.
- a hub article can receive a high ranking score even though no individual visit to hub article is relatively long in duration.
- a hub article can have a session associated with it. The session can comprise, for example, a sum of time spent on individual articles linked to the hub article.
- the session can comprise the ten minutes spent on articles linked to the hub article.
- a total time for the session can be used in determining a ranking score for the hub article.
- each block can be optional and may not be included, or may have no data for a particular article. Determining client-side behavior data can be continuous, even though only one loop of such monitoring is shown in FIG. 5 for purposes of illustration.
- the method of FIG. 5 is a subroutine carried out in block 208 of the method of FIG. 4 .
- Block 208 of FIG. 4 is followed by block 224 , in which the client-side behavior data is stored.
- the client-side behavior data can be stored, for example, in the data store 160 , in the memory 108 , or in any other storage medium associated with the client 102 .
- Block 224 is the last block illustrated in the subroutine of FIG. 4 .
- FIG. 3 illustrates an embodiment of the method 200 comprising receiving a search query
- the present invention can also be carried out independent of receiving a search query.
- a query independent score can be determined for articles based on user behavior data associated with the articles.
- the query independent score can be presented to the user on a one-click-away page.
- the one-click-away page can comprise, for example, a listing of frequently viewed articles or articles determined to be of interest to the user 112 a and can list a query independent score for each of the articles.
- the query independent score can be displayed in a toolbar within an Internet browser or other application window displaying an article associated with a query independent score. For example, if the user opens a text document in a text editing application, a toolbar within the text editing application can display the query independent score for the text document.
- the embodiment depicted in FIG. 3 includes receiving a query signal.
- the query signal 182 can be generated in response to a search query 114 entered explicitly by the user 112 a, or through an implicit search query generated from contextual clues from the monitoring engine 140 .
- the query processor 180 can receive information regarding the input text from the monitoring engine 140 and generate an implicit query to search for articles containing the terms “digital camera.” The query processor 180 can then send the query signal 182 reflecting this implicit search query to the search engine 120 .
- Block 228 is followed by block 230 , in which a set of relevant articles relevant to the query signal 182 is determined by the article locator 134 .
- the article locator 134 located within the search engine 120 determines a relevant article or a plurality of relevant articles from article data located in the data store 160 or memory 108 . For example, if the search query 114 input by the user is “digital camera,” the article locator 134 can determine which articles in the data store 160 or the memory 108 are relevant to the search terms.
- This set can comprise, for example, emails, web pages, chat sessions, and other articles that contain the words “digital camera.”
- the relevant articles determined in this block are potentially numerous compared to the search result 150 that can ultimately be returned to the user 112 a following a ranking, sorting, and presenting of the relevant articles.
- the relevant articles determined in this block can be sorted by relevance using a traditional method without client-side behavior information, or can be sorted by date.
- Block 230 is followed by block 232 , in which a total number of relevant articles T in the set of relevant articles returned by the article locator 134 is determined.
- the total number of relevant articles T reflects all of the articles determined to be relevant to the search, though other embodiments can use a different number (e.g. a maximum of 100 , or as many as can be processed within a given amount of time).
- the variable T is used in connection with a counter n to determine how many iterations of part of the shown method 200 to complete.
- Block 232 is followed by block 234 , in which the search engine 120 determines an “n th ” relevant article from the total number of relevant articles T associated with the query signal 182 .
- the counter n is equal to 1 and so the search engine 120 determines the first relevant article associated with the query signal 182 .
- the search engine 120 determines the subsequent relevant document within the total number of relevant articles T.
- the relevant articles associated with the query signal 182 can already be sorted. For example, the articles can be sorted by a relevance measure that does not include client behavior data, or the articles can be sorted by date.
- Block 234 is followed by block 236 , in which client-side behavior data associated with the n th article is determined.
- the client behavior data processor 136 located within the search engine 120 receives from the article locator 134 information indicating the n th article associated with the query.
- the client behavior data processor 136 determines the client-side behavior data from the data store 160 that is associated with the n th article determined by the article locator 134 to be relevant to the query signal 182 .
- the article locator 134 can locate all articles relevant to this query which can comprise, for example, all articles with the words “digital camera” in the text, title, subject field, etc.
- a particular n th article can then be selected from all the relevant articles determined to be relevant to this query.
- the n th article in this example can be, for example, a recently visited web page containing text associated with digital cameras.
- the client behavior data processor 136 can then retrieve from the data store 160 all client-side behavior data associated with the web page.
- This client-side behavior data can then be used in block 238 to help formulate a ranking score for the article.
- client-side behavior data associated with the n th article is provided to the ranking processor 138 .
- the client-side behavior data determined by the client behavior data processor 136 to be associated with the n th article relevant to the query signal 182 is retrieved from the client behavior data database 164 within the data store 160 .
- the client-side behavior data retrieved from the client behavior data database 164 can then be sent to the ranking processor 138 .
- the client-side behavior data associated with an article determined to be relevant to the query signal 182 is retrieved and sent to the ranking processor 138 where it can be used to generate a ranking score as described in block 240 .
- a “client behavior score” reflecting the relative frequency and type of interactions by the user 112 a and/or client 102 a with an article or a type of article, for example a web page or web pages from a particular site, can be determined and stored in the data store 160 .
- the client behavior score when the search engine 120 receives a query signal 182 , the client behavior score can be sent to the ranking processor 138 instead of, or in addition to, the client-side behavior data associated with the article.
- the client behavior score can be predetermined.
- the ranking processor 138 receives the client-side behavior data from the client behavior data processor 136 .
- the ranking processor 138 also receives the query signal 182 .
- the ranking processor 138 determines a ranking score based at least in part on the client-side behavior data, retrieved from the client behavior data processor 136 , associated with the n th article. This can be accomplished, for example, by a ranking algorithm that weights the various client behavior data and other ranking factors associated with the query signal 182 to produce a ranking score.
- the different types of client behavior data can have different weights and these weights can be different for different applications.
- the ranking processor 138 can utilize conventional methods for ranking articles according to the terms contained in the articles. It can further use information obtained from a server on a network, for example in the case of web pages, the ranking processor 138 can request a PageRank value for the web page from a server and additionally use that value to compute the ranking score.
- the ranking score can also depend on the type of article.
- the ranking score can further depend on the time such as the time of day or the day of the week. For example, a user can typically be working on and interested in certain types of articles during the day, and interested in different kinds of articles during the evening or weekends.
- a user 112 a desires to retrieve articles relating to digital cameras.
- the user 112 a can enter the terms “digital camera” as a search query 114 .
- a query signal 182 corresponding to the search query 114 “digital camera,” can be generated and the article locator 134 can locate articles that are relevant to this search.
- This can include an Internet auction site containing listings of digital cameras, a retail home page selling digital cameras, and a search results page listing digital cameras.
- the client behavior data processor 136 can determine what client-side behavior data is associated with that article.
- the client behavior data associated with the Internet auction site can be used to generate a ranking score for the Internet auction site and the retail home page.
- Block 242 follows block 240 .
- a threshold can be used on the number of articles to process or the processing time, such that less than T articles are processed. For example, no more than 1,000 articles may be processed, or processing may only be allowed to take a maximum of 500 ms.
- n is equal to 1 and so the first relevant article is selected from the set of relevant articles. If there are 10 documents in the set of relevant articles then T is equal to 10.
- the method can proceed to block 243 where n can receive the value n+1, which can make n now equal to 2. This process repeats until n is equal to 10.
- the tenth (and final) article can be selected from the set of relevant articles.
- the method 200 can proceed to block 244 .
- a predetermined ranking score for an article can be determined when the user behavior associated with the article occurs.
- the ranking score determined when the user behavior associated with the article occurs can then be used when a search query is received in order to decrease the time required for processing the search query.
- the predetermined ranking score can periodically be recalculated and factors such as an amount of time elapsed since the article was last accessed can be included in determining a new predetermined ranking score.
- Block 244 is followed by block 246 , in which the relevant articles arranged in a ranking order in the block 244 are presented to the user 112 a.
- the results can be presented to the user 112 a that can reflect the ranking order from block 244 .
- One possible way is to list the top three articles as hyperlinks and to list a single hyperlink to all other relevant articles, which the user can select if the desired article is not located within the three hyperlinks.
- the results can be presented on a home page such as a one-click-away page.
- a one-click-away page can comprise a listing of frequently viewed articles or articles determined to be of interest to the user 112 a.
- frequently accessed articles, or articles otherwise associated with high user interest can be added to a link library.
- the link library can comprise, for example, a set of links to articles on the network 106 and can include, for example a favorites folder or other set of URLs frequently visited by the user 112 a.
- Block 246 is followed by block 248 , in which the method 200 ends.
- a query independent score can be determined when user behavior data associated with an article occurs.
- PageRankTM although not employed here, is an example of a method that can compute a query-independent score.
- the method 200 can combine the query-independent score with conventional matching methods.
- the articles can be processed in the order specified by the query-independent user behavior score. This allows the system to save processing time because it may not be necessary to process all articles. Additionally, the processing can be split into phases where the first phase produces an initial score based on the query-independent user behavior score and conventional methods, and a second phase does more expensive processing on the highest ranked articles from the first phase.
- One or more scores based at least in part on client-side behavior data can also be shown to the user without reference to a search query. For example, the score or scores for a web page can be shown in a toolbar when the user browses to a site.
- the present invention is not limited to returning results based on only client-side articles or searching only client-side articles.
- additional embodiments of the present invention can comprise combining search results from a network, such as the Internet or a local intranet, with the search results obtained by the method 200 .
- the present invention can determine a ranking score for an article in part on client-side behavior data and in part on Internet ranking scores.
- the present invention can use client-side behavior data, alone or in combination with other factors, to determine a ranking score for articles located on a network such as the Internet or a local intranet.
- the present invention can use client-side behavior data, alone or in combination with other factors, to determine a ranking score for articles located on a client 102 a, for articles located on a network 106 , such as the Internet or a local intranet, or any other article stored on any medium or in any location accessible by the search engine 120 locally or over a remote connection.
- a network 106 such as the Internet or a local intranet, or any other article stored on any medium or in any location accessible by the search engine 120 locally or over a remote connection.
Abstract
Description
- This application is a continuation in part to application Ser. No. 10/749,620, titled “Methods and Systems for Improving a Ranking by Propagating a Ranking Score Based in Part on Client-Side Behavior Data” and to application Ser. No. 10/749,434, titled “Methods and Systems for Improving a Search Ranking Using Article Information” the entirety of which are incorporated herein by reference.
- The invention generally relates to search engines. More particularly, the invention relates to methods and systems for improving a search ranking using article information such as client-side information.
- Search engines are useful for locating a specific desired or relevant article from a large collection of articles. Conventional search engines often sort articles of a search result based on the contents of the articles, such as on the number of times a keyword or particular word or phrase appears in each article.
- Conventional client-side applications return results based, for example, on certain article attributes or history data. For example, existing client-side search applications provide search results listed by the date and time the article was last saved, the type of article, or the size of the article. The user can restrict the search by entering other parameters such as last edit time, other words or phrases in the article, or article type. Nonetheless, the relatively limited article attributes and history data used by conventional client-side search applications may degrade user experience.
- Thus, what is desirable is a method and system that overcomes one or more drawbacks associated with prior client-side search applications.
- Embodiments of the present invention comprise systems and methods that improve searching. One aspect of one embodiment of the present invention comprises determining a ranking score for an article based at least in part on duration data, access data, URL data, or trajectory data associated with the article.
- This exemplary embodiment is mentioned not to limit or define the invention, but to provide one example of an embodiment of the invention to aid understanding thereof. Exemplary embodiments are discussed in the Detailed Description, and further description of the invention is provided there. Advantages offered by the various embodiments of the present invention can be further understood by examining this specification.
- These and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:
-
FIG. 1 illustrates a block diagram of a system in accordance with one embodiment of the present invention; -
FIG. 2 illustrates a detailed view of a portion of the system illustrated inFIG. 1 in accordance with one embodiment of the present invention; -
FIG. 3 illustrates a flow diagram of a method in accordance with one embodiment of the present invention; -
FIG. 4 illustrates a flow diagram of one embodiment of a subroutine of the method shown inFIG. 3 ; and -
FIG. 5 illustrates a flow diagram of one embodiment of a subroutine of the subroutine show inFIG. 4 . - The present invention comprises methods and systems for improving a search ranking using article information. Various systems in accordance with the present invention can be constructed.
FIG. 1 is a diagram illustrating an exemplary system in which exemplary embodiments of the present invention may operate. The present invention may operate, and be embodied in, other systems as well. - The
system 100 shown inFIG. 1 comprises multiple client devices 102 a-n, users 112 a-n, anetwork 106, and aserver 190. Thenetwork 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, LAN or WAN may be used. The client devices 102 a-n shown each comprise a computer-readable medium, such as a random access memory (RAM) 108 coupled to aprocessor 110. Theprocessor 110 executes a set of computer-executable program instructions stored inmemory 108. Such processors may comprise a microprocessor, an ASIC, and state machines. Such processors comprise, or communicate with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the methods described herein. - Embodiments of computer-readable media comprise, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor with computer-readable instructions. Other examples of suitable media comprise, but are not limited to, a floppy disk, CD-ROM, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions. Also, various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless. The instructions may comprise code from any computer-programming language, including, for example, C, C++, C#, Visual Basic, HTML, Java, and JavaScript.
- Client devices 102 a-n may also comprise a number of external or internal devices such as a mouse, a CD-ROM, a keyboard, voice recognition hardware, a display, or other input or output devices. Examples of client devices 102 a-n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, wearable computers, a processor-based device, and similar types of systems and devices. In general, a client device 102 a-n may be any type of processor-based platform that interacts with one or more application programs. The client devices in 102 a-n shown in
FIG. 1 comprise personal computers. - The
memory 108 comprises amonitoring engine 140, aclient application 170, aclient article 171, and aquery processor 180. Articles may comprise documents, for example, web pages of various formats, such as HTML, XML, XHTML, Portable Document Format (PDF) files, and word processor, database, and application program document files, chat messages, email messages, audio, video, or any other information of any type whatsoever made available on a network (such as the Internet), a personal computer, or other computing or storage means. Articles can comprise client-side articles and network articles. Client-side articles can include, for example, articles that are stored or manipulated primarily on a client-side device such as, for example, word processing documents, emails, data spreadsheets, database documents, media files or other articles. Network articles can comprise, for example, articles stored or accessed previously from thenetwork 106 such as, for example, web pages. Theclient article 171 comprises any article associated with the user or client device. In the embodiment shown, theclient application 170 comprises an Internet browser application, and theclient article 171 comprises a document in a format usable with the Internet browser application. - The
monitoring engine 140 shown determines client-side behavior data associated with theclient application 170. The client-side behavior data may comprise, for example, duration data, access data, URL data, trajectory data, as well as other forms of client-side behavior data. Duration data can include, for example, an amount of time theuser 112 a spends on an article, such as a web page. Additionally, duration data can include an amount of time theuser 112 a spends on an article, such as a web page hosted by another web page. For example, the amount of time a user spends on www.google.com/search/images.html can be attributed, in part, to time on the host www.google.com. Access data can include, for example, the number of times theuser 112 a views an article or otherwise opens and enters into or interacts with an article. Additionally, access data can include a total number of days on which a document is accessed or edited by auser 112 a or a frequency of article access. URL data can include, for example, the method in which auser 112 a accesses a particular URL. For example, URL data can include whether a user types a URL into an address field of a web browser or whether a user accesses a URL by clicking on a hyperlink to another web page or a hyperlink in an email message, for example. Trajectory data can include a sequence of articles accessed by theuser 112 a including, for example, which article initiates a sequence of articles and which article terminates a sequence of articles. For example, trajectory data can include data identifying a login page as initiating a sequence of web pages and a logout page as terminating a sequence of web pages viewed by theuser 112 a. Each of these types of data will be discussed more fully below. - The
monitoring engine 140 monitors the user's interactions and the client computer's interactions with articles on the client computer. In other embodiments, themonitoring engine 140 monitors multiple users' interactions with articles, on the client computer, on an associated network, or elsewhere. As one example, themonitoring engine 140 can monitor theclient article 171 and detect that theuser 112 a is typing a URL on theclient article 171 using theclient application 170. Themonitoring engine 140 can monitor and record the URL input. Themonitoring engine 140 can also monitor and record interactions with multiple articles (not shown here) onclient 102 a. The gathering and use of client-side behavior data is described further below. - The
monitoring engine 140, according to the illustrated embodiment, stores the gathered client-side behavior data in adata store 160. The data store can be one or more logical or physical storage areas. Thedata store 160 in the illustrated embodiment comprises a clientbehavior data database 164. According to other aspects or embodiments of the present invention, thedata store 160 can comprise a pre-existing database. Data storage elements of thedata store 160 can comprise any one or combination of methods for storing data, including without limitation, arrays, hashtables, lists, and pairs. Other similar types of data storage devices can be accessed by the client device 102. The clientbehavior data database 164 stores data associated with theclient application 170 and client-side behavior data, such as duration data, access data, URL data, trajectory data, or other forms of client-side behavior data. The client behavior data can be combined with other data in a single database, or can be stored in multiple databases. - The
query processor 180 comprises software and hardware that enable thequery processor 180 to receive either anexplicit search query 114 entered by theuser 112 a or generate an implicit query based on client-side behavior data. Thequery processor 180 then formats the implicit or explicit query into aquery signal 182 that can be received by asearch engine 120. - The
memory 108 further comprises thesearch engine 120. Thesearch engine 120 locates relevant information in response to thequery signal 182 from thequery processor 180. Thequery signal 182 can correspond, for example, to an explicit query signal generated based on the search query entered by auser 112 a, or an implicit query signal generated based on event signals from themonitoring engine 140. Thesearch engine 120 responds to thequery signal 182 by returning a set of relevant information or asearch result 150 to theuser 112 a. - The
search engine 120 shown comprises anarticle locator 134, a rankingprocessor 138, and a clientbehavior data processor 136. In the embodiment shown, each comprises computer code residing in thememory 108. Thearticle locator 134 identifies a set of relevant articles relevant to thequery signal 182 from thequery processor 180. The clientbehavior data processor 136 retrieves from thedata store 160, or otherwise determines, client-side behavior data associated with articles in the set of relevant articles returned by thearticle locator 134. Theranking processor 138 ranks or scores each article in the set of relevant articles identified by thearticle locator 134 based at least in part on the client-side behavior data determined by the clientbehavior data processor 136. Note that other functions and characteristics of thearticle locator 134, rankingprocessor 138, anduser data processor 138 are further described below. -
FIG. 2 shows a more detailed view of themonitoring engine 140 shown inFIG. 1 . As theclient 102 a or theuser 112 a interacts with aclient articles 171 a-c, themonitoring engine 140 monitors such client behavior activity, and from this client behavior activity creates client-side behavior data including duration data 173 a-c, access data 175 a-c, URL data 177 a-c, and trajectory data 179 a-c associated with theclient articles 171 a-c. The client behavior activity associated with theclient articles 171 a-c, according to the embodiment illustrated, comprises one or more of duration action 172 a-c, access action 174 a-c, URL action 176 a-c, and trajectory action 178 a-c. These four general categories of action of theuser 112 a and/or theclient 102 a associated with the client articles are given only for purposes of illustration of one exemplary embodiment. It should be appreciated that in alternative embodiments, a subset of these four categories and/or other categories of action may be utilized. - In
FIG. 2 ,client articles 171 a-c are depicted to illustrate that themonitoring engine 140 can monitor a plurality of articles associated with one or more applications and create client-side behavior data associated with each article individually. The types of actions and data illustrated inFIG. 2 are offered only as examples of types of client-side behavior actions and data associated withclient articles 171 a-c associated with theclient applications 170 a-c. Other types of client-side behavior actions and data associated withclient articles 171 a-c can be utilized within the scope of the present invention. - After determining the corresponding client-side behavior data for the
client articles 171 a-c, themonitoring engine 140 processes the client-side behavior data associated with theclient articles 171 a-c so that it can be received by a clientbehavior data database 164 located within adata store 160. Themonitoring engine 140 can determine client-side behavior data for multiple user articles and ensures that the client-side behavior data associated with an article can be identified with that particular article. Themonitoring engine 140 transmits the client-side behavior data, together with identifying information that associates the data with a particular article to which it relates, to thedata store 160 for storage in a manner that preserves associations between the article and the client behaviors. - As an example of the functioning of the
monitoring engine 140, consider auser 112 a working with an article, such as a web page, associated with an Internet browser application. In this example, the web page can be represented by theclient article 171 a ofFIG. 2 and the Internet browser application can be represented by theclient application 170 a. As theuser 112 a interacts with theclient article 171 a client behavior data is monitored and received by themonitoring engine 140. For example, if theuser 112 a types a URL intoclient application 170 a, themonitoring engine 140 detects this activity and receivesURL data 177 a comprising, for example, data indicating whether theuser 112 a typed the URL or selected a link, and text of the URL. If theuser 112 a then accesses a login page for a social network, for example, themonitoring engine 140 can detect the login page as the start of a trajectory and can attribute activity on subsequent pages within the social network at least in part to the login page. Additionally, themonitoring engine 140 can determine the amount of time theuser 112 a spends on articles, such as web pages within the social network. - The
monitoring engine 140 then configures the client-side behavior data to be received by the clientbehavior data database 164 located within thedata store 160 in a manner so that it remains associated with the article to which it relates. Thus, in the present example, themonitoring engine 140 creates client-side behavior data in response to the typing, saving, and emailing of theuser 112 a. This client-side behavior data can be associated with the web page article that theuser 112 a was using when the events generating the client-side behavior data occurred. This association can be preserved in thedata store 160 so that if the web page article is determined by thearticle locator 134 to be relevant to thequery signal 182, the clientbehavior data processor 136 can retrieve the client-side behavior data associated with the web page article. - The client-side behavior data created by the
monitoring engine 140 can then be used to score or rank the article by thesearch engine 120. For example, an article associated with frequent access and a typed URL can receive a higher ranking score than an article associated with infrequent access or an article accessed by selecting a hyperlink. The frequent access and manually entered URL likely indicates a higher interest of theuser 112 a in the article associated with this activity. A web page, for example, that is merely accessed by selecting a link and viewed only once is less likely to be useful to auser 112 a than a web page accessed frequently by theuser 112 a, for which theuser 112 a specifically enters the URL by hand. - It should be noted that the present invention can comprise systems having different architecture than that which is shown in
FIGS. 1 and 2 . Thesystem 100 shown inFIG. 1 and the detailed view of the monitoring system shown inFIG. 2 are merely exemplary, and are used to explain the exemplary methods shown inFIGS. 3-5 . - Various methods in accordance with the present invention can be carried out. One exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on duration data associated with the relevant article. The duration data can comprise determining a graph wherein the graph can comprise nodes representing URLs and edges representing connections between the nodes. The duration data can further comprise an amount of time spent on a request path, or an amount of time on a domain name. Additionally, the amount of time on a higher domain name can be attributed to a lower level domain name, as described in further detail below.
- Another exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on access data associated with the relevant article. The access data can comprise a number of days with greater than zero access, an amount of time since the article was last accessed, or a frequency of user access. In another embodiment articles associated with a frequency of user access are added to a link library. In another embodiment, the ranking score can be a function of the amount of time since the article was last accessed. According to various embodiments, the function can be a piecewise function, or a linear function, or an exponential function, or a nonlinear function.
- Another exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on URL data associated with the relevant article. The URL data can comprise whether the URL was typed, whether the URL was selected by a hyperlink, or whether the URL was completed automatically by a computer functionality.
- Another exemplary embodiment comprises receiving a search query, determining a relevant article associated with the search query, and determining a ranking score for the relevant article based at least in part on trajectory data associated with the relevant article. The trajectory data can comprise, for example, determining a login page or determining a logout page. In another embodiment, an article at a beginning of a trajectory can be ranked higher than an article at an end of a trajectory.
-
FIGS. 3 through 5 illustrate various aspects of exemplary methods according to exemplary embodiments of the present invention.FIG. 3 illustrates anexemplary method 200 in accordance with one embodiment of the present invention. This exemplary method is provided by way of example, as there are a variety of ways to carry out methods according to the present invention. Themethod 200 shown inFIG. 3 can be executed or otherwise performed by any of various systems. Themethod 200 is described below as carried out by thesystem 100 shown inFIGS. 1 and 2 by way of example, and various elements of thesystem 100 are referenced in explaining the example methods ofFIGS. 3-5 . Methods according to the present invention may be embodied in other ways, including network searching, server-side searching, combined searching, and other systems. - The
method 200 shown provides an improvement of client-side searching by providing for ranking search results based on client behavior data. For example, if theuser 112 a desires to retrieve articles relating to digital cameras that theuser 112 a recently viewed over thenetwork 106, theuser 112 a can enter the term “digital camera” as thesearch query 114. The present invention can take thesearch query 114—“digital camera”—and locate articles that are relevant to the search. This can include, for example, an Internet auction web page containing listings of digital cameras, a retail home page selling digital cameras, and a search results page listing digital cameras. Not all of the articles located as being relevant to thesearch query 114 will necessarily be of high interest to theuser 112 a. The present invention reflects this by ranking the relevant articles according to various actions of theuser 112 a when accessing the articles. For example, if theuser 112 a typed in the URL for the Internet auction site and accessed a login screen and then proceeded to view the articles listing digital cameras and repeatedly accessed the web pages showing digital cameras over multiple days, it is likely that theuser 112 a had a higher interest in the web pages from the Internet auction site. If, on the other hand, theuser 112 a accessed the retail home page merely by clicking on a link and visited it on only one or two occasions, it is less likely that it is of primary interest to theuser 112 a. Thus, the present invention can reflect the relative importance of the web pages associated with the Internet auction site by associating them with a higher ranking score. Thus, when the results of thesearch query 114 are returned to theuser 112 a, the pages associated with the Internet auction site associated with a higher ranking score can be presented in a way that emphasizes it over the retail home page. For example, the web pages associated with the Internet auction site can be presented first in a list of search results. Emphasizing the web pages associated with the Internet auction site can help theuser 112 a quickly and easily select it from a list of search results. Additionally, theuser 112 a can select a first link in a listing of search results, move to a first web page associated with the first link and then quickly return to the listing of search results and select a second link. The present invention can detect this behavior and determine that the first web page is not relevant to what theuser 112 a wants. The first web page can be down-ranked, or alternatively, a second web page associated with the second link, which theuser 112 a views for longer periods or time, can be up-ranked. - Each block shown in
FIGS. 3-5 represents one or more processes, methods or subroutines carried out in theexemplary method 200. Referring toFIG. 3 , inblock 202, theexample method 200 begins. Inblock 202, a counter variable n can be set to 1. The counter variable n can be used to regulate how many iterations of themethod 200 are completed for a given search.Block 202 is followed byblock 204, in which a client behavior data database is provided. This can be accomplished by, for example, constructing such a database with the assistance of amonitoring engine 140 or establishing communication with such a database. - Referring now to
FIG. 4 ,FIG. 4 is a more detailed view ofblock 204 fromFIG. 3 , and illustrates an example of a method for providing a client behavior data database. The method shown inFIG. 4 begins atblock 208, in which, according to the illustrated example, client-side behavior data associated with an article can be determined by amonitoring engine 140. As illustrated inFIG. 2 , this client-side behavior data can comprise any number of separate types of data including, for example,duration data 173 a,access data 175 a,URL data 177 a, ortrajectory data 179 a. Other suitable types of client-side behavior data can also be received inblock 208 ofFIG. 4 . Alternatively, the client behavior data can be received from a pre-existing database. -
FIG. 5 illustrates a more detailed view ofblock 208 fromFIG. 4 .FIG. 5 begins withblock 210, in which duration data can be determined. Duration data can comprise, for example, data relating to the duration of time theuser 112 a spends accessing an article, such as a web page. Duration data can be used alone or in combination with other duration data. Other time-related or duration data can comprise, for example, an amount of user activity within an article. The amount of user activity within an article can be used to determine whether an amount of time spent accessing an article reflects actual user interaction with an article or whether the duration on the article is due merely to user inactivity following accessing an article. For example, the amount of user activity with an article can be used to distinguish whether the user is actually viewing an article, such as a web page, or whether the web page has merely been left active on theclient device 102 a while theuser 112 a is away from theclient 102 a. - Duration data can comprise, for example, a network graph comprising nodes representing URLs visited by the
user 112 a and edges representing connections between the URLs. The nodes can further comprise node labels that indicate how many times, how frequently, or how recently, for example, theuser 112 a has visited the URL. A weight can be assigned to each node proportional to the node label and weights for nodes can be propagated to connected nodes. For example, theuser 112 a can frequently visit www.cnn.com/world/ as a top level domain and visit web pages linked to from www.cnn.com/world/. The frequency and time associated with nodes representing web pages linked to www.cnn.com/world/ can be propagated in whole or in part back to www.cnn.com/world/. - Furthermore, duration data can comprise data associated with duration on a host. Data associated with duration on a host can comprise, for example, how much time is spent on an article comprising a subset of a host article. For example, if a user spends time on a web page www.google.com/search/images.html, the time or a portion of the time spent on this web page can be attributed to the host web page www.google.com. In this way, the importance of a host web page can not only reflect the amount of time a user spends directly on the host web page, but also the amount of time a user spends on an associated web page hosted by the host web page. Additionally, the present invention can determine an amount of time associated with a request path or a first domain name and attribute a portion of the time spent on the request path or first domain name to a second domain name. A request path can comprise, for example, a web page comprising a particular page within a website. A request path can be represented by a portion of a URL address following a forward slash. For example, in the URL http://www.google.com/search/images.html, the portion following the second forward slash—“search/images.html”—can represent a request path. A domain name can comprise a root level domain, for example, “.com” and a higher level domain name, for example, www.google.com. A higher level domain name can comprise multiple levels, for example, multiple names separated by a period. A second level domain name can represent a host web page or a website. For example, www.google.com is a second level domain name representing a host web page. A higher level domain name can represent a page hosted by a host web page or website. For example, the address www.news.google.com, is a third level domain name and can represent a news page hosted by www.google.com. A request path can represent a web page comprising a page within a website. For example, the request path search/images.html represents an images search page hosted by the website www.google.com.
- In one embodiment of the present invention, a client-side search application can determine an amount of time spent on a request path—in the preceding example, the images search page—and attribute a portion of this time to a domain name—in the example above, the Google home page. Thus, for example, a user can frequently visit a news home page for only a brief period of time and then spend a more significant amount of time on pages within the news website such as individual news reports. The individual news reports can comprise request paths represented, for example, by a URL www.newspage.com/report1, where “report1” represents an individual news report. The duration data associated directly with the news home page in this example can reflect only a short amount of time and thus weighted accordingly. However, the news home page is significant to the
user 112 a as a source of finding news reports. Additionally, the individual news reports in the present example are accessed for a longer duration of time than the news home page and yet each individual report may only be of interest to the user on a single occasion. In order to properly reflect the relative importance of the news home page that receives a small amount of actual duration time, and to reflect the lesser importance of individual news reports that receive a longer duration time on a single occasion, the present invention can attribute a portion of the time spent on the individual news reports to the news home page. - In another embodiment, an amount of time the
user 112 a spends on articles up to a specified maximum number of links from a starting article can be attributed to the starting article. The time spent on articles one link away may have the highest weight, while articles two or more steps away may have decreasing weight. Additionally, an average duration theuser 112 a spends on a particular type of article can be determined. For example, theuser 112 a can spend an average time of 15 seconds viewing web pages. Web pages that are viewed for significantly longer can have higher ranking scores assigned to them. In determining an amount of time a web page is viewed, the present invention can determine, among other things, whether any scrolling or other activity is conducted on a page as an indication that theuser 112 a is actually viewing the page and has not merely left a web page open while conducting other activity. -
Block 210 is followed byblock 212 in which access data is determined. Access data can comprise, for example, a number of days an article is accessed at least once. Access data enables the system to determine, for example, articles accessed consistently over a number of different days as distinguished from an article accessed a same number of total times that is only accessed on a relatively few number of different days. For example, theuser 112 a can visit a news home page everyday only once and then move on to an article linked to the news home page, for example, a news report. Theuser 112 a can then access the individual news report repeatedly throughout the day. Because the news home page is visited only once per day, and the article is visited repeatedly in the same day, the number of times the article is accessed can be similar to the number of times the news home page is visited. On subsequent days however, the user is less likely to be as interested in the individual news report, even though it can be associated with a similar number of total accesses as the news home page. Thus the present invention can determine a number of days with greater than zero accesses for an article in order to distinguish articles accessed consistently by theuser 112 a over time from articles accessed a similar number of total times, but only over a relatively few number of days. - Access data can further comprise an amount of time elapsed since an article was last accessed by a user. For example, the
monitoring engine 140 can determine an amount of time since theuser 112 a last opened a text document. An importance of an article can be dependent on the amount of time elapsed since the article was last accessed. The relationship between the importance of a document and the amount of time elapsed since the article was last accessed can be simply a linear or exponential relationship. For example the document can become increasingly less important as the elapsed time increases. The relationship can also be a non-linear, non-exponential, or piecewise function of the elapsed time. A piecewise function can comprise, for example, a combination of linear, exponential, or other functions. For example, in one embodiment, for elapsed times less than a few days, a constant level of importance, independent of the amount of elapsed time since last access, can be determined. For periods of time between a few days and one month, an exponential relationship can be determined such that the importance of an article decreases exponentially with the amount of elapsed time. And for periods greater than one month, a relationship can be determined such that the importance of an article decreases much more slowly with the amount of elapsed time. - For example, consider the
user 112 a working with a particular article such as a business report. Theuser 112 a can be editing and accessing the report on a daily basis for the first few days after the report is first accessed. Theuser 112 a can then move on to another project unrelated to the report. After several months theuser 112 a can again desire to access the report, for example, to remember some information contained in the report. In this example, theuser 112 a may not desire to view the report in a listing of search results over the first few hours or days as theuser 112 a can likely recall the contents of the article or access it directly. After the first few days theuser 112 a can be working on other projects but still need to refer occasionally to the report. Thus after the first few days, the user's 112 a desire to view the article in a listing of search results may initially be high and then decrease fairly rapidly over the next month as other theuser 112 a shifts his attention to other projects. After the importance of the report decreases over a period of a month or so, for example, the importance can cease to decline as rapidly, and maintain a basic level of importance that decreases slowly over time. A piecewise function that uses a combination of functions for different intervals of time may thus effectively represent the importance of the report to theuser 112 a over time. -
Block 212 is followed byblock 214 in which URL data is determined. URL data can comprise, for example, data associated with whether a user types a URL into an address field of an application or whether a user accesses a URL by clicking on a link associated with the URL. URL data can attribute significance to a URL that is accessed by typing the URL versus a URL that is accessed by clicking on a link to the URL. A URL that is actually typed into an address field of an application by a user can imply a specific desire to access the particular URL as distinguished from a URL merely stumbled upon in a link as theuser 112 a is browsing through various articles. Additionally, URL data can comprise data associated with whether a typed URL was automatically filled in by a computer functionality. For example, some Internet browser applications have a functionality that can complete the remainder of a URL after theuser 112 a types a portion of the URL. A URL that is entered entirely by the user can represent a more significant URL since the user knew the entire URL and took the time to type it in. On the other hand, a URL that theuser 112 a only knows a portion of and relies on a computer functionality to fill in the remainder may not be as significant. Alternatively, theuser 112 a can desire to be presented with a URL, which theuser 112 a does not know entirely, in a listing of search results so that it can be quickly recalled. The present invention can utilize a combination of URL data, and user preference data comprising, for example, a record of which types of URLs theuser 112 a selects from a listing of search results, to determine how the URL data can best be used for a particular user. For example, if theuser 112 a frequently selects URLs from a listing of search results that were completed by a computer functionality after typing only a portion of the URL and rarely selects URLs that were entered entirely by theuser 112 a, the present invention can utilize this combination of preference data and URL data to determine a higher score for articles associated with URLs completed by a computer functionality. Additionally, hyper links from web pages can be distinguished from links from emails and the email links can receive a higher ranking score as they can be of greater use to theuser 112 a. -
Block 214 is followed byblock 216 in which trajectory data is determined. Trajectory data can include, for example, data associated with articles accessed by theuser 112 a to start a trajectory of associated articles. For example, a login page can start a user on a trajectory, or sequence, of associated pages and may be more significant to the user than the associated pages and, therefore, merit a higher ranking score. For example, theuser 112 a may visit the login screen for a social network website only briefly and then spend more time browsing through pages within the social network website. Theuser 112 a can then end the session on the social network website by logging out on a logout page. The login page can represent the start of a trajectory comprising the sequence of pages within the social network accessed by theuser 112 a. The logout page can represent an end of the trajectory comprising the sequence of pages accessed by theuser 112 a. The login page and the logout page may both be visited for only a short amount of time and may both be visited with the same frequency. Thus the access data and duration data for the login page and logout page can be similar. However, theuser 112 a is likely to prefer to be presented with the login page within a listing of search results, as it can more likely lead to the desired information. For example, theuser 112 a may want to access a web page within the social network that was previously accessed. In order to do so, theuser 112 a can first access the login screen. Thus, the present invention can utilize the trajectory data associated with the login page to determine a higher score for the login page, at the start of a trajectory, than for the logout page at the end of a trajectory, or for other associated pages. - Trajectory data can further comprise determining an article hub. An article hub can comprise, for example, an article frequently returned to as a source of links for other articles. For example, the
user 112 a can start at news.google.com and go back and forth through news.google.com linking to other web pages. In this example, news.google.news.com can be a hub for theuser 112 a. A hub article can receive a high ranking score even though no individual visit to hub article is relatively long in duration. Furthermore, a hub article can have a session associated with it. The session can comprise, for example, a sum of time spent on individual articles linked to the hub article. For example if the user visits ten different new articles linked to the news.google.com hub article for a total of one minute each, the session can comprise the ten minutes spent on articles linked to the hub article. A total time for the session can be used in determining a ranking score for the hub article. - The
method 208 illustrated inFIG. 5 ends withblock 216. Forblocks 210 to 216, each block can be optional and may not be included, or may have no data for a particular article. Determining client-side behavior data can be continuous, even though only one loop of such monitoring is shown inFIG. 5 for purposes of illustration. The method ofFIG. 5 is a subroutine carried out inblock 208 of the method ofFIG. 4 . - Returning now to
FIG. 4 , it is a subroutine of the method ofFIG. 3 .Block 208 ofFIG. 4 is followed byblock 224, in which the client-side behavior data is stored. The client-side behavior data can be stored, for example, in thedata store 160, in thememory 108, or in any other storage medium associated with the client 102.Block 224 is the last block illustrated in the subroutine ofFIG. 4 . - Referring now again to
FIG. 3 , block 204 is followed byblock 228, in which aquery signal 182 is received by asearch engine 120. WhileFIG. 3 illustrates an embodiment of themethod 200 comprising receiving a search query, the present invention can also be carried out independent of receiving a search query. For example, a query independent score can be determined for articles based on user behavior data associated with the articles. The query independent score can be presented to the user on a one-click-away page. The one-click-away page can comprise, for example, a listing of frequently viewed articles or articles determined to be of interest to theuser 112 a and can list a query independent score for each of the articles. Additionally, the query independent score can be displayed in a toolbar within an Internet browser or other application window displaying an article associated with a query independent score. For example, if the user opens a text document in a text editing application, a toolbar within the text editing application can display the query independent score for the text document. The embodiment depicted inFIG. 3 , for purposes of illustration, includes receiving a query signal. In the embodiment depicted inFIG. 3 , thequery signal 182 can be generated in response to asearch query 114 entered explicitly by theuser 112 a, or through an implicit search query generated from contextual clues from themonitoring engine 140. For example, if theuser 112 a is using an email application to compose an email and types the phrase “I am looking for a digital camera” into the email, thequery processor 180 can receive information regarding the input text from themonitoring engine 140 and generate an implicit query to search for articles containing the terms “digital camera.” Thequery processor 180 can then send thequery signal 182 reflecting this implicit search query to thesearch engine 120. -
Block 228 is followed byblock 230, in which a set of relevant articles relevant to thequery signal 182 is determined by thearticle locator 134. In this block, thearticle locator 134 located within thesearch engine 120 determines a relevant article or a plurality of relevant articles from article data located in thedata store 160 ormemory 108. For example, if thesearch query 114 input by the user is “digital camera,” thearticle locator 134 can determine which articles in thedata store 160 or thememory 108 are relevant to the search terms. This set can comprise, for example, emails, web pages, chat sessions, and other articles that contain the words “digital camera.” The relevant articles determined in this block are potentially numerous compared to thesearch result 150 that can ultimately be returned to theuser 112 a following a ranking, sorting, and presenting of the relevant articles. The relevant articles determined in this block can be sorted by relevance using a traditional method without client-side behavior information, or can be sorted by date. -
Block 230 is followed byblock 232, in which a total number of relevant articles T in the set of relevant articles returned by thearticle locator 134 is determined. Preferably, the total number of relevant articles T reflects all of the articles determined to be relevant to the search, though other embodiments can use a different number (e.g. a maximum of 100, or as many as can be processed within a given amount of time). The variable T is used in connection with a counter n to determine how many iterations of part of the shownmethod 200 to complete. -
Block 232 is followed byblock 234, in which thesearch engine 120 determines an “nth” relevant article from the total number of relevant articles T associated with thequery signal 182. During the first iteration of themethod 200, the counter n is equal to 1 and so thesearch engine 120 determines the first relevant article associated with thequery signal 182. On subsequent iterations, thesearch engine 120 determines the subsequent relevant document within the total number of relevant articles T. In alternate embodiments, the relevant articles associated with thequery signal 182 can already be sorted. For example, the articles can be sorted by a relevance measure that does not include client behavior data, or the articles can be sorted by date. -
Block 234 is followed byblock 236, in which client-side behavior data associated with the nth article is determined. In thisblock 236, in the embodiment shown, the clientbehavior data processor 136 located within thesearch engine 120 receives from thearticle locator 134 information indicating the nth article associated with the query. The clientbehavior data processor 136 then determines the client-side behavior data from thedata store 160 that is associated with the nth article determined by thearticle locator 134 to be relevant to thequery signal 182. - For example, if the
query signal 182 relates to asearch query 114 for “digital camera” then thearticle locator 134 can locate all articles relevant to this query which can comprise, for example, all articles with the words “digital camera” in the text, title, subject field, etc. A particular nth article can then be selected from all the relevant articles determined to be relevant to this query. The nth article in this example can be, for example, a recently visited web page containing text associated with digital cameras. According to the embodiment illustrated here, the clientbehavior data processor 136 can then retrieve from thedata store 160 all client-side behavior data associated with the web page. This can include, for example, URL data including whether the web page was accessed by typing a URL or selecting a link, access data comprising how often the web page was visited and how long ago, duration data including the amount of time spent on the web page or associated request paths or other associated web pages, and trajectory data including whether the web page is linked to a login page. This client-side behavior data can then be used inblock 238 to help formulate a ranking score for the article. - In
block 238, which followsblock 236, client-side behavior data associated with the nth article is provided to theranking processor 138. In thisblock 238, the client-side behavior data determined by the clientbehavior data processor 136 to be associated with the nth article relevant to thequery signal 182 is retrieved from the clientbehavior data database 164 within thedata store 160. The client-side behavior data retrieved from the clientbehavior data database 164 can then be sent to theranking processor 138. Thus, in this block, the client-side behavior data associated with an article determined to be relevant to thequery signal 182 is retrieved and sent to theranking processor 138 where it can be used to generate a ranking score as described inblock 240. - In other embodiments, a “client behavior score” reflecting the relative frequency and type of interactions by the
user 112 a and/orclient 102 a with an article or a type of article, for example a web page or web pages from a particular site, can be determined and stored in thedata store 160. According to aspects of embodiments comprising a client behavior score, when thesearch engine 120 receives aquery signal 182, the client behavior score can be sent to theranking processor 138 instead of, or in addition to, the client-side behavior data associated with the article. The client behavior score can be predetermined. - Following
block 238 isblock 240, in which a ranking score for the nth article is determined. In thisblock 240 in the embodiment shown, the rankingprocessor 138 receives the client-side behavior data from the clientbehavior data processor 136. Theranking processor 138 also receives thequery signal 182. Theranking processor 138 determines a ranking score based at least in part on the client-side behavior data, retrieved from the clientbehavior data processor 136, associated with the nth article. This can be accomplished, for example, by a ranking algorithm that weights the various client behavior data and other ranking factors associated with thequery signal 182 to produce a ranking score. The different types of client behavior data can have different weights and these weights can be different for different applications. In addition to the client behavior data, the rankingprocessor 138 can utilize conventional methods for ranking articles according to the terms contained in the articles. It can further use information obtained from a server on a network, for example in the case of web pages, the rankingprocessor 138 can request a PageRank value for the web page from a server and additionally use that value to compute the ranking score. The ranking score can also depend on the type of article. The ranking score can further depend on the time such as the time of day or the day of the week. For example, a user can typically be working on and interested in certain types of articles during the day, and interested in different kinds of articles during the evening or weekends. - Consider again the example where a
user 112 a desires to retrieve articles relating to digital cameras. Theuser 112 a can enter the terms “digital camera” as asearch query 114. Aquery signal 182 corresponding to thesearch query 114, “digital camera,” can be generated and thearticle locator 134 can locate articles that are relevant to this search. This can include an Internet auction site containing listings of digital cameras, a retail home page selling digital cameras, and a search results page listing digital cameras. Once relevant articles are located, the clientbehavior data processor 136 can determine what client-side behavior data is associated with that article. For example, if theuser 112 a typed in the URL for the Internet auction site and accessed a login screen and then proceeded to view the articles listing digital cameras and repeatedly accessed the pages showing digital cameras over multiple days, this can be reflected in the URL data, access data, and trajectory data. Similarly, if theuser 112 a accessed the retail home page merely by clicking on a link and visited it on only one or two occasions, this too can be reflected in the URL data and access data associated with the retail home page. Inblock 240 the client behavior data associated with the Internet auction site can be used to generate a ranking score for the Internet auction site and the retail home page. -
Block 242 followsblock 240. Inblock 242, it is determined whether the current article number n is equal to the total number of search results T. If n is equal to T, then the method proceeds to block 244. If n is not equal to T, the method proceeds to block 243. In block 243 n is incremented to the next integer and the method returns to block 234 to repeat the blocks 234-242. A threshold can be used on the number of articles to process or the processing time, such that less than T articles are processed. For example, no more than 1,000 articles may be processed, or processing may only be allowed to take a maximum of 500 ms. - For example, on the first run through the
method 200, n is equal to 1 and so the first relevant article is selected from the set of relevant articles. If there are 10 documents in the set of relevant articles then T is equal to 10. Inblock 242, since 1 is not equal to 10, the method can proceed to block 243 where n can receive the value n+1, which can make n now equal to 2. This process repeats until n is equal to 10. When n is equal to 10, the tenth (and final) article can be selected from the set of relevant articles. Then inblock 242, since n is now equal to T, themethod 200 can proceed to block 244. Inblock 244, the relevant articles processed in blocks 234-240 are arranged in a ranking order according to the ranking score associated with each relevant article fromblock 240. According to some embodiments, a predetermined ranking score for an article can be determined when the user behavior associated with the article occurs. The ranking score determined when the user behavior associated with the article occurs can then be used when a search query is received in order to decrease the time required for processing the search query. In order to ensure that the predetermined ranking score is current, the predetermined ranking score can periodically be recalculated and factors such as an amount of time elapsed since the article was last accessed can be included in determining a new predetermined ranking score. -
Block 244 is followed byblock 246, in which the relevant articles arranged in a ranking order in theblock 244 are presented to theuser 112 a. There are numerous ways in which the results can be presented to theuser 112 a that can reflect the ranking order fromblock 244. One possible way is to list the top three articles as hyperlinks and to list a single hyperlink to all other relevant articles, which the user can select if the desired article is not located within the three hyperlinks. In another embodiment the results can be presented on a home page such as a one-click-away page. A one-click-away page can comprise a listing of frequently viewed articles or articles determined to be of interest to theuser 112 a. In another embodiment, frequently accessed articles, or articles otherwise associated with high user interest can be added to a link library. The link library can comprise, for example, a set of links to articles on thenetwork 106 and can include, for example a favorites folder or other set of URLs frequently visited by theuser 112 a. -
Block 246 is followed byblock 248, in which themethod 200 ends. In other embodiments of the method 200 a query independent score can be determined when user behavior data associated with an article occurs. PageRank™, although not employed here, is an example of a method that can compute a query-independent score. When a query is received, themethod 200 can combine the query-independent score with conventional matching methods. In one version, the articles can be processed in the order specified by the query-independent user behavior score. This allows the system to save processing time because it may not be necessary to process all articles. Additionally, the processing can be split into phases where the first phase produces an initial score based on the query-independent user behavior score and conventional methods, and a second phase does more expensive processing on the highest ranked articles from the first phase. One or more scores based at least in part on client-side behavior data can also be shown to the user without reference to a search query. For example, the score or scores for a web page can be shown in a toolbar when the user browses to a site. - The present invention is not limited to returning results based on only client-side articles or searching only client-side articles. By way of example, additional embodiments of the present invention can comprise combining search results from a network, such as the Internet or a local intranet, with the search results obtained by the
method 200. Additionally, the present invention can determine a ranking score for an article in part on client-side behavior data and in part on Internet ranking scores. Moreover, the present invention can use client-side behavior data, alone or in combination with other factors, to determine a ranking score for articles located on a network such as the Internet or a local intranet. The present invention can use client-side behavior data, alone or in combination with other factors, to determine a ranking score for articles located on aclient 102 a, for articles located on anetwork 106, such as the Internet or a local intranet, or any other article stored on any medium or in any location accessible by thesearch engine 120 locally or over a remote connection. - While the above description contains many specifics, these specifics should not be construed as limitations on the scope of the invention, but merely as exemplifications of the disclosed embodiments. Those skilled in the art will envision many other possible variations that are within the scope of the invention.
Claims (30)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/617,931 US10423679B2 (en) | 2003-12-31 | 2015-02-10 | Methods and systems for improving a search ranking using article information |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US74962003A | 2003-12-31 | 2003-12-31 | |
US10/749,434 US20050149498A1 (en) | 2003-12-31 | 2003-12-31 | Methods and systems for improving a search ranking using article information |
US10/814,357 US8954420B1 (en) | 2003-12-31 | 2004-03-31 | Methods and systems for improving a search ranking using article information |
US14/617,931 US10423679B2 (en) | 2003-12-31 | 2015-02-10 | Methods and systems for improving a search ranking using article information |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/814,357 Continuation US8954420B1 (en) | 2003-12-31 | 2004-03-31 | Methods and systems for improving a search ranking using article information |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190155951A1 true US20190155951A1 (en) | 2019-05-23 |
US10423679B2 US10423679B2 (en) | 2019-09-24 |
Family
ID=52443719
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/814,357 Active 2032-05-15 US8954420B1 (en) | 2003-12-31 | 2004-03-31 | Methods and systems for improving a search ranking using article information |
US14/617,931 Active 2025-09-02 US10423679B2 (en) | 2003-12-31 | 2015-02-10 | Methods and systems for improving a search ranking using article information |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/814,357 Active 2032-05-15 US8954420B1 (en) | 2003-12-31 | 2004-03-31 | Methods and systems for improving a search ranking using article information |
Country Status (1)
Country | Link |
---|---|
US (2) | US8954420B1 (en) |
Families Citing this family (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9223868B2 (en) * | 2004-06-28 | 2015-12-29 | Google Inc. | Deriving and using interaction profiles |
US11841912B2 (en) | 2011-05-01 | 2023-12-12 | Twittle Search Limited Liability Company | System for applying natural language processing and inputs of a group of users to infer commonly desired search results |
US8326862B2 (en) * | 2011-05-01 | 2012-12-04 | Alan Mark Reznik | Systems and methods for facilitating enhancements to search engine results |
CN104823406A (en) * | 2012-10-10 | 2015-08-05 | 惠普发展公司，有限责任合伙企业 | Identifying reports to address network issues |
US9449095B1 (en) * | 2012-12-31 | 2016-09-20 | Google Inc. | Revising search queries |
US11263221B2 (en) | 2013-05-29 | 2022-03-01 | Microsoft Technology Licensing, Llc | Search result contexts for application launch |
US10430418B2 (en) | 2013-05-29 | 2019-10-01 | Microsoft Technology Licensing, Llc | Context-based actions from a source application |
US20140358916A1 (en) * | 2013-05-29 | 2014-12-04 | Microsoft Corporation | Personalized prioritization of integrated search results |
US11222084B2 (en) * | 2013-10-22 | 2022-01-11 | Steven Michael VITTORIO | Content search and results |
US11238114B2 (en) * | 2013-10-22 | 2022-02-01 | Steven Michael VITTORIO | Educational content search and results |
US10572810B2 (en) | 2015-01-07 | 2020-02-25 | Microsoft Technology Licensing, Llc | Managing user interaction for input understanding determinations |
US11250008B2 (en) | 2015-04-17 | 2022-02-15 | Steven Michael VITTORIO | Content search and results |
US10268747B2 (en) * | 2015-06-07 | 2019-04-23 | Apple Inc. | Reader application with a personalized feed and method of providing recommendations while maintaining user privacy |
US10249297B2 (en) * | 2015-07-13 | 2019-04-02 | Microsoft Technology Licensing, Llc | Propagating conversational alternatives using delayed hypothesis binding |
CN106997360A (en) * | 2016-01-25 | 2017-08-01 | 阿里巴巴集团控股有限公司 | The treating method and apparatus of user behavior data |
US10446137B2 (en) | 2016-09-07 | 2019-10-15 | Microsoft Technology Licensing, Llc | Ambiguity resolving conversational understanding system |
CN107870912A (en) * | 2016-09-22 | 2018-04-03 | 广州市动景计算机科技有限公司 | Article quality score method, equipment, client, server and programmable device |
US11553407B2 (en) * | 2020-12-14 | 2023-01-10 | Capital One Services, Llc | Methods and systems for signal interpretation via image analysis |
Family Cites Families (288)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4410957A (en) | 1980-11-20 | 1983-10-18 | International Business Machines Corporation | Keystroke queueing system |
US6978277B2 (en) | 1989-10-26 | 2005-12-20 | Encyclopaedia Britannica, Inc. | Multimedia search system |
US5305205A (en) | 1990-10-23 | 1994-04-19 | Weber Maria L | Computer-assisted transcription apparatus |
US5321838A (en) | 1991-02-28 | 1994-06-14 | Hensley Billy W | Event capturing for computer software evaluation |
US5555346A (en) | 1991-10-04 | 1996-09-10 | Beyond Corporated | Event-driven rule-based messaging system |
US5280612A (en) | 1991-11-26 | 1994-01-18 | International Business Machines Corporation | Multiple version database concurrency control system |
JPH06237300A (en) | 1992-12-23 | 1994-08-23 | American Teleph & Telegr Co <Att> | Message service inherent in position in telecommunication network |
JP3147572B2 (en) | 1993-03-22 | 2001-03-19 | 株式会社日立製作所 | Program generation method |
US5623652A (en) | 1994-07-25 | 1997-04-22 | Apple Computer, Inc. | Method and apparatus for searching for information in a network and for controlling the display of searchable information on display devices in the network |
US5592378A (en) | 1994-08-19 | 1997-01-07 | Andersen Consulting Llp | Computerized order entry system and method |
JP2626598B2 (en) | 1994-11-25 | 1997-07-02 | 日本電気株式会社 | Operability evaluation device for interactive system with graphical user interface |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6025388A (en) | 1995-04-26 | 2000-02-15 | Allergan Sales, Inc. | Method for inhibiting gene expression promoted by AP1 protein with RARβ selective retinoids and method for treatment of diseases and conditions with such retinoids |
US5748954A (en) | 1995-06-05 | 1998-05-05 | Carnegie Mellon University | Method for searching a queued and ranked constructed catalog of files stored on a network |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5907836A (en) | 1995-07-31 | 1999-05-25 | Kabushiki Kaisha Toshiba | Information filtering apparatus for selecting predetermined article from plural articles to present selected article to user, and method therefore |
US6026388A (en) | 1995-08-16 | 2000-02-15 | Textwise, Llc | User interface and other enhancements for natural language information retrieval system and method |
US6477585B1 (en) | 1995-08-18 | 2002-11-05 | International Business Machines Corporation | Filter mechanism for an event management service |
US5881315A (en) | 1995-08-18 | 1999-03-09 | International Business Machines Corporation | Queue management for distributed computing environment to deliver events to interested consumers even when events are generated faster than consumers can receive |
US5742816A (en) | 1995-09-15 | 1998-04-21 | Infonautics Corporation | Method and apparatus for identifying textual documents and multi-mediafiles corresponding to a search topic |
US6115802A (en) | 1995-10-13 | 2000-09-05 | Sun Mircrosystems, Inc. | Efficient hash table for use in multi-threaded environments |
US6070144A (en) | 1996-01-09 | 2000-05-30 | The State Of Oregon | System and process for job scheduling using limited discrepancy search |
US5781192A (en) | 1996-01-16 | 1998-07-14 | Canon Information Systems, Inc. | Data transfer system |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
US5896506A (en) | 1996-05-31 | 1999-04-20 | International Business Machines Corporation | Distributed storage management system having a cache server and method therefor |
US5845300A (en) | 1996-06-05 | 1998-12-01 | Microsoft Corporation | Method and apparatus for suggesting completions for a partially entered data item based on previously-entered, associated data items |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US5913208A (en) | 1996-07-09 | 1999-06-15 | International Business Machines Corporation | Identifying duplicate documents from search results without comparing document content |
US5961610A (en) | 1996-08-13 | 1999-10-05 | General Electric Company | Systems, methods and apparatus for generating and controlling display of medical images |
GB2331166B (en) | 1997-11-06 | 2002-09-11 | Ibm | Database search engine |
US6199073B1 (en) | 1997-04-21 | 2001-03-06 | Ricoh Company, Ltd. | Automatic archiving of documents during their transfer between a peripheral device and a processing device |
JP3008872B2 (en) | 1997-01-08 | 2000-02-14 | 日本電気株式会社 | GUI system automatic operation device and operation macro execution device |
US5872976A (en) | 1997-04-01 | 1999-02-16 | Landmark Systems Corporation | Client-based system for monitoring the performance of application programs |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6092101A (en) | 1997-06-16 | 2000-07-18 | Digital Equipment Corporation | Method for filtering mail messages for a plurality of client computers connected to a mail service system |
US6282548B1 (en) | 1997-06-21 | 2001-08-28 | Alexa Internet | Automatically generate and displaying metadata as supplemental information concurrently with the web page, there being no link between web page and metadata |
US6353929B1 (en) | 1997-06-23 | 2002-03-05 | One River Worldtrek, Inc. | Cooperative system for measuring electronic media |
US5893093A (en) | 1997-07-02 | 1999-04-06 | The Sabre Group, Inc. | Information search and retrieval with geographical coordinates |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6865715B2 (en) | 1997-09-08 | 2005-03-08 | Fujitsu Limited | Statistical method for extracting, and displaying keywords in forum/message board documents |
US5956722A (en) | 1997-09-23 | 1999-09-21 | At&T Corp. | Method for effective indexing of partially dynamic documents |
US6073130A (en) | 1997-09-23 | 2000-06-06 | At&T Corp. | Method for improving the results of a search in a structured database |
US6779030B1 (en) | 1997-10-06 | 2004-08-17 | Worldcom, Inc. | Intelligent network |
US5970249A (en) | 1997-10-06 | 1999-10-19 | Sun Microsystems, Inc. | Method and apparatus for performing byte-code optimization during pauses |
US6236768B1 (en) | 1997-10-14 | 2001-05-22 | Massachusetts Institute Of Technology | Method and apparatus for automated, context-dependent retrieval of information |
US6061678A (en) | 1997-10-31 | 2000-05-09 | Oracle Corporation | Approach for managing access to large objects in database systems using large object indexes |
US6269369B1 (en) | 1997-11-02 | 2001-07-31 | Amazon.Com Holdings, Inc. | Networked personal contact manager |
SG118132A1 (en) | 1997-11-13 | 2006-01-27 | Hyperspace Communications Inc | File transfer system |
US6236978B1 (en) | 1997-11-14 | 2001-05-22 | New York University | System and method for dynamic profiling of users in one-to-one applications |
US6055579A (en) | 1997-11-17 | 2000-04-25 | Silicon Graphics, Inc. | Distributed control and synchronization of multiple data processors using flexible command queues |
US6289342B1 (en) | 1998-01-05 | 2001-09-11 | Nec Research Institute, Inc. | Autonomous citation indexing and literature browsing using citation context |
US6346952B1 (en) | 1999-12-01 | 2002-02-12 | Genesys Telecommunications Laboratories, Inc. | Method and apparatus for summarizing previous threads in a communication-center chat session |
US7124129B2 (en) * | 1998-03-03 | 2006-10-17 | A9.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US7233948B1 (en) | 1998-03-16 | 2007-06-19 | Intertrust Technologies Corp. | Methods and apparatus for persistent control and protection of content |
US7372976B2 (en) | 1998-04-16 | 2008-05-13 | Digimarc Corporation | Content indexing and searching using content identifiers and associated metadata |
US6330589B1 (en) | 1998-05-26 | 2001-12-11 | Microsoft Corporation | System and method for using a client database to manage conversation threads generated from email or news messages |
US6347374B1 (en) | 1998-06-05 | 2002-02-12 | Intrusion.Com, Inc. | Event detection |
US6247043B1 (en) | 1998-06-11 | 2001-06-12 | International Business Machines Corporation | Apparatus, program products and methods utilizing intelligent contact management |
US6263348B1 (en) | 1998-07-01 | 2001-07-17 | Serena Software International, Inc. | Method and apparatus for identifying the existence of differences between two files |
US6604236B1 (en) | 1998-06-30 | 2003-08-05 | Iora, Ltd. | System and method for generating file updates for files stored on read-only media |
US6275820B1 (en) | 1998-07-16 | 2001-08-14 | Perot Systems Corporation | System and method for integrating search results from heterogeneous information resources |
US6226630B1 (en) | 1998-07-22 | 2001-05-01 | Compaq Computer Corporation | Method and apparatus for filtering incoming information using a search engine and stored queries defining user folders |
US6119147A (en) | 1998-07-28 | 2000-09-12 | Fuji Xerox Co., Ltd. | Method and system for computer-mediated, multi-modal, asynchronous meetings in a virtual space |
US6188277B1 (en) | 1998-08-19 | 2001-02-13 | Harris Corporation | Power amplifier having monitoring and circuit protection |
RU2138076C1 (en) | 1998-09-14 | 1999-09-20 | Закрытое акционерное общество "МедиаЛингва" | Data retrieval system in computer network |
US7256770B2 (en) | 1998-09-14 | 2007-08-14 | Microsoft Corporation | Method for displaying information responsive to sensing a physical presence proximate to a computer input device |
IL128935A (en) | 1998-09-18 | 2003-10-31 | Direct & Clear Inc | Communication method and system utilizing a specific communication code |
US6275957B1 (en) | 1998-09-21 | 2001-08-14 | Microsoft Corporation | Using query language for provider and subscriber registrations |
JP2000099441A (en) | 1998-09-25 | 2000-04-07 | Fujitsu Ltd | Device and method for controlling and presenting information |
US6363373B1 (en) | 1998-10-01 | 2002-03-26 | Microsoft Corporation | Method and apparatus for concept searching using a Boolean or keyword search engine |
US7110998B1 (en) * | 1998-10-13 | 2006-09-19 | Virtual Gold, Inc. | Method and apparatus for finding hidden patterns in the context of querying applications |
US6380924B1 (en) | 1998-10-22 | 2002-04-30 | Young Yee | Mouse/keyboard capture recorder (MCR) apparatus and methodology |
US6446076B1 (en) | 1998-11-12 | 2002-09-03 | Accenture Llp. | Voice interactive web-based agent system responsive to a user location for prioritizing and formatting information |
US20030097361A1 (en) | 1998-12-07 | 2003-05-22 | Dinh Truong T | Message center based desktop systems |
US6826553B1 (en) | 1998-12-18 | 2004-11-30 | Knowmadic, Inc. | System for providing database functions for multiple internet sources |
US6349299B1 (en) | 1998-12-24 | 2002-02-19 | International Business Machines Corporation | System and method for storing electronic contact information into an electronic address book |
US6199067B1 (en) | 1999-01-20 | 2001-03-06 | Mightiest Logicon Unisearch, Inc. | System and method for generating personalized user profiles and for utilizing the generated user profiles to perform adaptive internet searches |
US6341371B1 (en) | 1999-02-23 | 2002-01-22 | International Business Machines Corporation | System and method for optimizing program execution in a computer system |
JP4098435B2 (en) | 1999-03-12 | 2008-06-11 | 富士通株式会社 | Information management apparatus, data generation method, and computer-readable recording medium storing information management program |
US6401239B1 (en) | 1999-03-22 | 2002-06-04 | B.I.S. Advanced Software Systems Ltd. | System and method for quick downloading of electronic files |
US6490577B1 (en) | 1999-04-01 | 2002-12-03 | Polyvista, Inc. | Search engine with user activity memory |
US6487555B1 (en) | 1999-05-07 | 2002-11-26 | Alta Vista Company | Method and apparatus for finding mirrored hosts by analyzing connectivity and IP addresses |
US6175830B1 (en) | 1999-05-20 | 2001-01-16 | Evresearch, Ltd. | Information management, retrieval and display system and associated method |
US7225182B2 (en) | 1999-05-28 | 2007-05-29 | Overture Services, Inc. | Recommending search terms using collaborative filtering and web spidering |
US6467052B1 (en) | 1999-06-03 | 2002-10-15 | Microsoft Corporation | Method and apparatus for analyzing performance of data processing system |
US6592627B1 (en) | 1999-06-10 | 2003-07-15 | International Business Machines Corporation | System and method for organizing repositories of semi-structured documents such as email |
JP2001005705A (en) | 1999-06-22 | 2001-01-12 | Hitachi Ltd | Document information management system |
US6560655B1 (en) | 1999-06-22 | 2003-05-06 | Microsoft Corporation | Synchronization manager for standardized synchronization of separate programs |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
JP3791879B2 (en) | 1999-07-19 | 2006-06-28 | 富士通株式会社 | Document summarization apparatus and method |
US6853950B1 (en) | 1999-07-20 | 2005-02-08 | Newsedge Corporation | System for determining changes in the relative interest of subjects |
US7181438B1 (en) | 1999-07-21 | 2007-02-20 | Alberti Anemometer, Llc | Database access system |
US6532023B1 (en) | 1999-08-12 | 2003-03-11 | International Business Machines Corporation | Recording selected applet events of a user interaction sequence |
US6631345B1 (en) | 1999-08-12 | 2003-10-07 | International Business Machines Corporation | Recording, storing, and emulating user interaction events |
US6513036B2 (en) | 1999-08-13 | 2003-01-28 | Mindpass A/S | Method and apparatus for searching and presenting search result from one or more information sources based on context representations selected from the group of other users |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US6681247B1 (en) | 1999-10-18 | 2004-01-20 | Hrl Laboratories, Llc | Collaborator discovery method and system |
US7630986B1 (en) * | 1999-10-27 | 2009-12-08 | Pinpoint, Incorporated | Secure data interchange |
US6526405B1 (en) | 1999-12-17 | 2003-02-25 | Microsoft Corporation | Determining similarity between event types in sequences |
US7774220B2 (en) | 1999-11-29 | 2010-08-10 | The Strategic Coach Inc. | Project management system for aiding users in attaining goals |
US6480837B1 (en) | 1999-12-16 | 2002-11-12 | International Business Machines Corporation | Method, system, and program for ordering search results using a popularity weighting |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6957229B1 (en) | 2000-01-10 | 2005-10-18 | Matthew Graham Dyor | System and method for managing personal information |
US6999957B1 (en) | 2000-01-11 | 2006-02-14 | The Relegence Corporation | System and method for real-time searching |
US6662226B1 (en) | 2000-01-27 | 2003-12-09 | Inbit, Inc. | Method and system for activating and capturing screen displays associated with predetermined user interface events |
US6656423B1 (en) | 2000-02-07 | 2003-12-02 | Steris Inc. | Sterile water generator |
US6834308B1 (en) | 2000-02-17 | 2004-12-21 | Audible Magic Corporation | Method and apparatus for identifying media content presented on a media playing device |
US6877027B1 (en) | 2000-02-19 | 2005-04-05 | Hewlett-Packard Development Company, L.P. | System and method for providing synchronization verification of multiple applications across remote systems |
US6691175B1 (en) | 2000-02-25 | 2004-02-10 | Sun Microsystems, Inc. | Method and apparatus for managing data propagation between software modules |
US20020055844A1 (en) | 2000-02-25 | 2002-05-09 | L'esperance Lauren | Speech user interface for portable personal devices |
US6901378B1 (en) | 2000-03-02 | 2005-05-31 | Corbis Corporation | Method and system for automatically displaying an image and a product in a page based on contextual interaction and metadata |
US20020049608A1 (en) | 2000-03-03 | 2002-04-25 | Hartsell Neal D. | Systems and methods for providing differentiated business services in information management environments |
AUPQ599700A0 (en) | 2000-03-03 | 2000-03-23 | Super Internet Site System Pty Ltd | On-line geographical directory |
US6728763B1 (en) | 2000-03-09 | 2004-04-27 | Ben W. Chen | Adaptive media streaming server for playing live and streaming media content on demand through web client's browser with no additional software or plug-ins |
EP1269382A4 (en) | 2000-03-30 | 2005-03-02 | I411 Inc | Methods and systems for enabling efficient retrieval of data from data collections |
US6684250B2 (en) | 2000-04-03 | 2004-01-27 | Quova, Inc. | Method and apparatus for estimating a geographic location of a networked entity |
US6665715B1 (en) | 2000-04-03 | 2003-12-16 | Infosplit Inc | Method and systems for locating geographical locations of online users |
WO2001077847A1 (en) | 2000-04-07 | 2001-10-18 | Financeware.Com | Method and apparatus for rendering electronic documents |
GB2361555A (en) | 2000-04-17 | 2001-10-24 | Apama Inc | Method of evaluating queries against received event information |
US6564213B1 (en) | 2000-04-18 | 2003-05-13 | Amazon.Com, Inc. | Search query autocompletion |
US7500249B2 (en) | 2000-05-02 | 2009-03-03 | Sun Microsystems, Inc. | Cluster event service method and system |
US6697838B1 (en) | 2000-05-03 | 2004-02-24 | Software Leader, Llc | Method and system for annotating information resources in connection with browsing, in both connected and disconnected states |
US6879691B1 (en) | 2000-05-12 | 2005-04-12 | Bluetie, Inc. | Information autocompletion system |
GB0012354D0 (en) | 2000-05-22 | 2000-07-12 | Nokia Networks Oy | A method and system for providing location dependent information |
EP1316026A2 (en) | 2000-05-30 | 2003-06-04 | Koki Uchiyama | Distributed monitoring system providing knowledge services |
US6711572B2 (en) | 2000-06-14 | 2004-03-23 | Xosoft Inc. | File system for distributing content in a data network and related methods |
JP2004531780A (en) | 2000-06-22 | 2004-10-14 | マイクロソフト コーポレーション | Distributed computing service platform |
GB0016974D0 (en) | 2000-07-12 | 2000-08-30 | Univ Salford The | Document retrieval system |
US7035852B2 (en) | 2000-07-21 | 2006-04-25 | International Business Machines Corporation | Implementing a message queuing interface (MQI) indexed queue support that adds a key to the index on put commit |
US7080073B1 (en) | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US7146404B2 (en) | 2000-08-22 | 2006-12-05 | Colloquis, Inc. | Method for performing authenticated access to a service on behalf of a user |
US6907577B2 (en) | 2000-09-06 | 2005-06-14 | Trace Tervo | System and method for accessing screen fields, functions and programs using a simple single key stroke |
US6934740B1 (en) | 2000-09-19 | 2005-08-23 | 3Com Corporation | Method and apparatus for sharing common data objects among multiple applications in a client device |
US6614729B2 (en) | 2000-09-26 | 2003-09-02 | David D. Griner | System and method of creating digital recordings of live performances |
US20020042789A1 (en) | 2000-10-04 | 2002-04-11 | Zbigniew Michalewicz | Internet search engine with interactive search criteria construction |
US7680672B2 (en) | 2000-10-20 | 2010-03-16 | Adobe Systems, Incorporated | Event collection architecture |
US7634546B1 (en) | 2000-11-01 | 2009-12-15 | Stefan Edward Strickholm | System and method for communication within a community |
US7376640B1 (en) | 2000-11-14 | 2008-05-20 | At&T Delaware Intellectual Property, Inc. | Method and system for searching an information retrieval system according to user-specified location information |
JP2002215518A (en) | 2000-11-22 | 2002-08-02 | Xerox Corp | System and method for message management |
US7113935B2 (en) | 2000-12-06 | 2006-09-26 | Epicrealm Operating Inc. | Method and system for adaptive prefetching |
US20020073076A1 (en) | 2000-12-11 | 2002-06-13 | Yongjie Xu | System and method for enabling off-line database functionality |
US7136881B2 (en) | 2000-12-15 | 2006-11-14 | International Business Machines Corporation | Method and system for processing directory events |
US7143088B2 (en) | 2000-12-15 | 2006-11-28 | The Johns Hopkins University | Dynamic-content web crawling through traffic monitoring |
US7440943B2 (en) | 2000-12-22 | 2008-10-21 | Xerox Corporation | Recommender system and method |
US6985913B2 (en) | 2000-12-28 | 2006-01-10 | Casio Computer Co. Ltd. | Electronic book data delivery apparatus, electronic book device and recording medium |
US6983310B2 (en) | 2000-12-29 | 2006-01-03 | International Business Machines Corporation | System and method for providing search capabilties on a wireless device |
US6772143B2 (en) | 2001-01-02 | 2004-08-03 | Sprint Spectrum L.P. | Method and system for managing messages |
US20020091972A1 (en) | 2001-01-05 | 2002-07-11 | Harris David P. | Method for predicting machine or process faults and automated system for implementing same |
US6714939B2 (en) | 2001-01-08 | 2004-03-30 | Softface, Inc. | Creation of structured data from plain text |
US20020091568A1 (en) | 2001-01-10 | 2002-07-11 | International Business Machines Corporation | Personalized profile based advertising system and method with integration of physical location using GPS |
US6658423B1 (en) | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US7168093B2 (en) | 2001-01-25 | 2007-01-23 | Solutionary, Inc. | Method and apparatus for verifying the integrity and security of computer networks and implementation of counter measures |
DE10108487A1 (en) | 2001-02-22 | 2002-09-12 | Giesecke & Devrient Gmbh | Method and system for the distributed creation of a program for a programmable, portable data carrier |
US8782541B2 (en) | 2001-03-12 | 2014-07-15 | Nice-Systems Ltd. | System and method for capturing analyzing and recording screen events |
US20030083947A1 (en) | 2001-04-13 | 2003-05-01 | Hoffman George Harry | System, method and computer program product for governing a supply chain consortium in a supply chain management framework |
US6850934B2 (en) | 2001-03-26 | 2005-02-01 | International Business Machines Corporation | Adaptive search engine query |
US6694353B2 (en) | 2001-03-28 | 2004-02-17 | Good Contacts.Com | Method and system for automatically updating electronic mail address information within an electronic mail address database |
WO2002079993A1 (en) | 2001-03-29 | 2002-10-10 | Reallegal.Com | Methods for synchronizing on-line and off-line transcript projects |
US7856420B2 (en) | 2001-04-19 | 2010-12-21 | Hewlett-Packard Development Company, L.P. | Zero latency enterprise enriched publish/subscribe |
US7299219B2 (en) | 2001-05-08 | 2007-11-20 | The Johns Hopkins University | High refresh-rate retrieval of freshly published content using distributed crawling |
US20020184406A1 (en) | 2001-05-29 | 2002-12-05 | International Business Machines Corporation | Method and system for handling window-based graphical events |
US7293014B2 (en) | 2001-06-18 | 2007-11-06 | Siebel Systems, Inc. | System and method to enable searching across multiple databases and files using a single search |
US20030126136A1 (en) | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US20040230572A1 (en) | 2001-06-22 | 2004-11-18 | Nosa Omoigui | System and method for semantic knowledge retrieval, management, capture, sharing, discovery, delivery and presentation |
US6802055B2 (en) | 2001-06-27 | 2004-10-05 | Microsoft Corporation | Capturing graphics primitives associated with any display object rendered to a graphical user interface |
US7117434B2 (en) * | 2001-06-29 | 2006-10-03 | International Business Machines Corporation | Graphical web browsing interface for spatial data navigation and method of navigating data blocks |
US20030028506A1 (en) | 2001-06-29 | 2003-02-06 | Lin Yu | Deferred index building systems, methods and computer program products for storing temporally spaced apart bursts of data records in a database |
CN1547720A (en) | 2001-07-05 | 2004-11-17 | System and method for generating and propagating business events | |
US7546602B2 (en) | 2001-07-10 | 2009-06-09 | Microsoft Corporation | Application program interface for network software platform |
US20030018521A1 (en) | 2001-07-17 | 2003-01-23 | International Business Machines Corporation | Advertising based upon events reported from a GPS enabled event report system |
US8285701B2 (en) | 2001-08-03 | 2012-10-09 | Comcast Ip Holdings I, Llc | Video and digital multimedia aggregator remote content crawler |
US6820075B2 (en) | 2001-08-13 | 2004-11-16 | Xerox Corporation | Document-centric system with auto-completion |
US7082365B2 (en) | 2001-08-16 | 2006-07-25 | Networks In Motion, Inc. | Point of interest spatial rating search method and system |
US20030036914A1 (en) | 2001-08-20 | 2003-02-20 | International Business Machines Corporation | Method and system for common contact identification using portable computing devices |
JP2003067306A (en) | 2001-08-24 | 2003-03-07 | Hitachi Ltd | Storage management method for electronic mail |
US7076483B2 (en) | 2001-08-27 | 2006-07-11 | Xyleme Sa | Ranking nodes in a graph |
US7509372B2 (en) | 2001-09-13 | 2009-03-24 | International Business Machines Corporation | Method and system for redirecting data requests in peer-to-peer data networks |
US7265858B2 (en) | 2001-10-03 | 2007-09-04 | Kabushiki Kaisha Toshiba | Method and system to access address books |
US7328242B1 (en) | 2001-11-09 | 2008-02-05 | Mccarthy Software, Inc. | Using multiple simultaneous threads of communication |
IL162008A0 (en) | 2001-11-15 | 2005-11-20 | Visto Corp | System and methods for asychronous synchronization |
US7363590B2 (en) | 2001-11-27 | 2008-04-22 | International Business Machines Corporation | Calendar bar interface for electronic mail interaction |
US20030131061A1 (en) | 2001-11-28 | 2003-07-10 | Active Buddy, Inc. | Transparent proxy server for instant messaging system and methods |
JP2003242176A (en) | 2001-12-13 | 2003-08-29 | Sony Corp | Information processing device and method, recording medium and program |
US7043362B2 (en) | 2001-12-21 | 2006-05-09 | Garmin Ltd. | PDA with integrated address book and electronic map waypoints |
US20030123442A1 (en) | 2001-12-27 | 2003-07-03 | Drucker Benjamin T. | Distributed usage metering of multiple networked devices |
US6947924B2 (en) | 2002-01-07 | 2005-09-20 | International Business Machines Corporation | Group based search engine generating search results ranking based on at least one nomination previously made by member of the user group where nomination system is independent from visitation system |
JP2005514705A (en) | 2002-01-08 | 2005-05-19 | エスエイピー エイジー | Enhanced email management system |
AU2003304166A1 (en) | 2002-01-25 | 2005-01-21 | Seurat Company | Data integration system and method for presenting 3600 customer views |
US7249158B2 (en) | 2002-01-28 | 2007-07-24 | Canon Kabushiki Kaisha | Address information editing apparatus and method, program, and storage medium |
CN1186737C (en) | 2002-02-05 | 2005-01-26 | 国际商业机器公司 | Method and system for queuing uncalled web based on path |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US7536437B2 (en) | 2002-02-14 | 2009-05-19 | Avaya Inc. | Presence tracking and name space interconnection techniques |
US7343365B2 (en) | 2002-02-20 | 2008-03-11 | Microsoft Corporation | Computer system architecture for automatic context associations |
EP1483687A4 (en) | 2002-03-11 | 2008-08-06 | Univ Southern California | Named entity translation |
WO2004059538A2 (en) | 2002-12-16 | 2004-07-15 | Questerra Llc | Method, system and program for network design, analysis, and optimization |
US7062592B2 (en) | 2002-03-25 | 2006-06-13 | Intel Corporation | Selecting a queue for service in a queuing system |
US7127058B2 (en) | 2002-03-27 | 2006-10-24 | Nortel Networks Limited | Managing communications in a call center |
JP4082059B2 (en) | 2002-03-29 | 2008-04-30 | ソニー株式会社 | Information processing apparatus and method, recording medium, and program |
US7016919B2 (en) | 2002-03-29 | 2006-03-21 | Agilent Technologies, Inc. | Enterprise framework and applications supporting meta-data and data traceability requirements |
US7814025B2 (en) | 2002-05-15 | 2010-10-12 | Navio Systems, Inc. | Methods and apparatus for title protocol, authentication, and sharing |
US7096255B2 (en) | 2002-05-21 | 2006-08-22 | Bellsouth Intellectual Property Corp. | System and method for providing a roster list of temporary contacts having expiration periods designated by a user in an instant messaging environment |
US20040203642A1 (en) | 2002-05-31 | 2004-10-14 | Peter Zatloukal | Population of directory search results into a wireless mobile phone |
US7016914B2 (en) | 2002-06-05 | 2006-03-21 | Microsoft Corporation | Performant and scalable merge strategy for text indexing |
US6968509B1 (en) | 2002-06-05 | 2005-11-22 | Microsoft Corporation | Recording of user-driven events within a computer application |
US20030233366A1 (en) | 2002-06-17 | 2003-12-18 | Aspetuck Systems Inc. | Database monitoring system with formatted report information delivery |
US20040002959A1 (en) | 2002-06-26 | 2004-01-01 | International Business Machines Corporation | Method and system for providing context sensitive support for data processing device user search requests |
US20040003038A1 (en) | 2002-06-27 | 2004-01-01 | Microsoft Corporation | Live content processing for online presentation |
JP4452012B2 (en) | 2002-07-04 | 2010-04-21 | ヒューレット・パッカード・カンパニー | Document uniqueness evaluation method |
JP2004062451A (en) | 2002-07-26 | 2004-02-26 | Sharp Corp | Information presenting method, information presenting device, information presenting program, computer readable recording medium having information presenting program recorded thereon and schedule managing method |
US20040031027A1 (en) | 2002-08-08 | 2004-02-12 | Hiltgen Daniel K. | System for updating diverse file versions |
US7099887B2 (en) | 2002-08-08 | 2006-08-29 | International Business Machines Corporation | Hierarchical environments supporting relational schemas |
US20070022155A1 (en) | 2002-08-22 | 2007-01-25 | Owens David H | Method and system for integrating enterprise software applications with desktop software applications |
US7370035B2 (en) | 2002-09-03 | 2008-05-06 | Idealab | Methods and systems for search indexing |
WO2004025518A1 (en) | 2002-09-13 | 2004-03-25 | Ashok Suresh | Information management system |
US7933957B2 (en) | 2002-09-17 | 2011-04-26 | At&T Intellectual Property Ii, L.P. | Tracking email and instant messaging (IM) thread history |
US7657598B2 (en) | 2002-09-17 | 2010-02-02 | At&T Intellectual Property I, L.P. | Address book for integrating email and instant messaging (IM) |
WO2004027649A1 (en) | 2002-09-18 | 2004-04-01 | Netezza Corporation | Asymmetric streaming record data processor method and apparatus |
US7177925B2 (en) | 2002-09-27 | 2007-02-13 | Avago Technologies General Ip (Singapore) Pte. Ltd. | Event management system |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US7254573B2 (en) | 2002-10-02 | 2007-08-07 | Burke Thomas R | System and method for identifying alternate contact information in a database related to entity, query by identifying contact information of a different type than was in query which is related to the same entity |
US7146383B2 (en) | 2002-10-31 | 2006-12-05 | Sbc Properties, L.P. | Method and system for an automated disambiguation |
US20040093317A1 (en) | 2002-11-07 | 2004-05-13 | Swan Joseph G. | Automated contact information sharing |
US7360096B2 (en) * | 2002-11-20 | 2008-04-15 | Microsoft Corporation | Securely processing client credentials used for Web-based access to resources |
US7650403B2 (en) | 2002-11-20 | 2010-01-19 | Microsoft Corporation | System and method for client side monitoring of client server communications |
GB0228447D0 (en) | 2002-12-06 | 2003-01-08 | Nicholls Charles M | System for detecting and interpreting transactions events or changes in computer systems |
US7219184B2 (en) | 2002-12-10 | 2007-05-15 | Isic Corporation | Method and apparatus for longest prefix matching in processing a forwarding information database |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20040187075A1 (en) | 2003-01-08 | 2004-09-23 | Maxham Jason G. | Document management apparatus, system and method |
US7474741B2 (en) | 2003-01-20 | 2009-01-06 | Avaya Inc. | Messaging advise in presence-aware networks |
US20040153444A1 (en) | 2003-01-30 | 2004-08-05 | Senders Steven L. | Technique for effectively providing search results by an information assistance service |
US6864901B2 (en) | 2003-02-11 | 2005-03-08 | Academia Sinica | Real-time screen recording system |
US7213235B2 (en) | 2003-02-21 | 2007-05-01 | Sap Ag | Method for using a business model user interface |
US20040193596A1 (en) | 2003-02-21 | 2004-09-30 | Rudy Defelice | Multiparameter indexing and searching for documents |
EP1627335A1 (en) | 2003-03-07 | 2006-02-22 | Nokia Corporation | A method and a device for frequency counting |
US7539699B2 (en) | 2003-03-21 | 2009-05-26 | Yahoo! Inc. | Apparatus, system and method for use in generating and maintaining an electronic address book |
US7188316B2 (en) | 2003-03-24 | 2007-03-06 | Microsoft Corporation | System and method for viewing and editing multi-value properties |
US7930301B2 (en) | 2003-03-31 | 2011-04-19 | Microsoft Corporation | System and method for searching computer files and returning identified files and associated files |
US7467390B2 (en) | 2003-04-01 | 2008-12-16 | International Business Machines Corporation | Enhanced staged event-driven architecture |
US7562367B1 (en) | 2003-04-11 | 2009-07-14 | Marvell Israel (M.I.S.L.) Ltd. | Sorted-tree-based event queue for discrete event simulators |
US7480716B2 (en) | 2003-04-28 | 2009-01-20 | International Business Machines Corporation | Non-invasive collection of data |
US7412491B2 (en) | 2003-04-30 | 2008-08-12 | International Business Machines Corporation | Method and apparatus for enhancing instant messaging systems |
US20040235520A1 (en) | 2003-05-20 | 2004-11-25 | Cadiz Jonathan Jay | Enhanced telephony computer user interface allowing user interaction and control of a telephone using a personal computer |
US7694223B2 (en) | 2003-06-04 | 2010-04-06 | Sony Computer Entertainment Inc. | Methods and systems for recording user actions in computer programs |
US7668888B2 (en) | 2003-06-05 | 2010-02-23 | Sap Ag | Converting object structures for search engines |
US20040255301A1 (en) | 2003-06-13 | 2004-12-16 | Andrzej Turski | Context association schema for computer system architecture |
US7337448B1 (en) | 2003-06-25 | 2008-02-26 | Microsoft Corporation | Address book clearinghouse interface system and method |
US7162473B2 (en) | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US7577939B2 (en) | 2003-06-27 | 2009-08-18 | International Business Machines Corporation | Method, system and program product for sharing source code over a network |
US7647299B2 (en) * | 2003-06-30 | 2010-01-12 | Google, Inc. | Serving advertisements using a search of advertiser web information |
US7565425B2 (en) | 2003-07-02 | 2009-07-21 | Amazon Technologies, Inc. | Server architecture and methods for persistently storing and serving event data |
US7890961B2 (en) | 2003-08-29 | 2011-02-15 | Yahoo! Inc. | Method and apparatus for providing desktop application functionality in a client/server architecture |
US7330536B2 (en) | 2003-09-05 | 2008-02-12 | Emc Corporation | Message indexing and archiving |
US20050060719A1 (en) | 2003-09-12 | 2005-03-17 | Useractive, Inc. | Capturing and processing user events on a computer system for recording and playback |
US7454417B2 (en) * | 2003-09-12 | 2008-11-18 | Google Inc. | Methods and systems for improving a search ranking using population information |
US7487235B2 (en) | 2003-09-24 | 2009-02-03 | Dell Products L.P. | Dynamically varying a raid cache policy in order to optimize throughput |
US7130819B2 (en) | 2003-09-30 | 2006-10-31 | Yahoo! Inc. | Method and computer readable medium for search scoring |
US7499974B2 (en) | 2003-09-30 | 2009-03-03 | International Business Machines Corporation | Instant message user management |
US7882132B2 (en) | 2003-10-09 | 2011-02-01 | Oracle International Corporation | Support for RDBMS in LDAP system |
US20050080866A1 (en) | 2003-10-14 | 2005-04-14 | Kent Larry G. | Selectively displaying time indications for instant messaging (IM) messages |
US7457872B2 (en) | 2003-10-15 | 2008-11-25 | Microsoft Corporation | On-line service/application monitoring and reporting system |
US8150923B2 (en) | 2003-10-23 | 2012-04-03 | Microsoft Corporation | Schema hierarchy for electronic messages |
US20050114487A1 (en) | 2003-11-12 | 2005-05-26 | Jin Peng | Notification framework and method of distributing notification |
US7240049B2 (en) | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US7257570B2 (en) | 2003-11-13 | 2007-08-14 | Yahoo! Inc. | Geographical location extraction |
US7475406B2 (en) | 2003-12-15 | 2009-01-06 | International Business Machines Corporation | Event notification structure for dynamically aggregated logical components |
US20050160107A1 (en) * | 2003-12-29 | 2005-07-21 | Ping Liang | Advanced search, file system, and intelligent assistant agent |
US8230982B2 (en) | 2003-12-30 | 2012-07-31 | Friedman Harold S | Elevator cab design |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
US7676553B1 (en) | 2003-12-31 | 2010-03-09 | Microsoft Corporation | Incremental web crawler using chunks |
US7383307B2 (en) | 2004-01-07 | 2008-06-03 | International Business Machines Corporation | Instant messaging windowing for topic threads |
US7346613B2 (en) | 2004-01-26 | 2008-03-18 | Microsoft Corporation | System and method for a unified and blended search |
US7194451B2 (en) | 2004-02-26 | 2007-03-20 | Microsoft Corporation | Database monitoring system |
US7281002B2 (en) * | 2004-03-01 | 2007-10-09 | International Business Machine Corporation | Organizing related search results |
US7441246B2 (en) | 2004-03-19 | 2008-10-21 | Microsoft Corporation | Configurable collection of computer related metric data |
US7359909B2 (en) | 2004-03-23 | 2008-04-15 | International Business Machines Corporation | Generating an information catalog for a business model |
US8099407B2 (en) | 2004-03-31 | 2012-01-17 | Google Inc. | Methods and systems for processing media files |
US8386728B1 (en) | 2004-03-31 | 2013-02-26 | Google Inc. | Methods and systems for prioritizing a crawl |
US7941439B1 (en) | 2004-03-31 | 2011-05-10 | Google Inc. | Methods and systems for information capture |
US7257822B1 (en) | 2004-04-13 | 2007-08-14 | Sun Microsystems Inc | Method and system for address book application programming interface |
US7543232B2 (en) | 2004-10-19 | 2009-06-02 | International Business Machines Corporation | Intelligent web based help system |
US7743048B2 (en) | 2004-10-29 | 2010-06-22 | Microsoft Corporation | System and method for providing a geographic search function |
US20060190470A1 (en) | 2005-02-18 | 2006-08-24 | Lemnotis Peter A | Download, storage, and retrieval device |
US7447706B2 (en) | 2005-04-01 | 2008-11-04 | Microsoft Corporation | Method and system for generating an auto-completion list for a cascading style sheet selector |
US20060288075A1 (en) | 2005-06-15 | 2006-12-21 | Chao-Hung Wu | Electronic mailbox address book management system and method for the same |
US20070016556A1 (en) | 2005-07-13 | 2007-01-18 | Ann Seong W | Destination searching system and method |
EP1753195B1 (en) | 2005-07-27 | 2012-03-07 | Sap Ag | Server computer, client device and web service implemented data processing method |
-
2004
- 2004-03-31 US US10/814,357 patent/US8954420B1/en active Active
-
2015
- 2015-02-10 US US14/617,931 patent/US10423679B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
US8954420B1 (en) | 2015-02-10 |
US10423679B2 (en) | 2019-09-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10423679B2 (en) | Methods and systems for improving a search ranking using article information | |
RU2335013C2 (en) | Methods and systems for improving search ranging with application of information about article | |
US11238117B2 (en) | Customizable ordering of search results and predictive query generation | |
US10394908B1 (en) | Systems and methods for modifying search results based on a user's history | |
CA2560687C (en) | Systems and methods for weighting a search query result | |
US8918401B1 (en) | Systems and methods for providing searchable prior history | |
US7664734B2 (en) | Systems and methods for generating multiple implicit search queries | |
US7353246B1 (en) | System and method for enabling information associations | |
US7437353B2 (en) | Systems and methods for unification of search results | |
US8543572B2 (en) | Systems and methods for analyzing boilerplate | |
US8775396B2 (en) | Method and system for searching a wide area network | |
US7694212B2 (en) | Systems and methods for providing a graphical display of search activity | |
US7747632B2 (en) | Systems and methods for providing subscription-based personalization | |
US8117209B1 (en) | Ranking documents based on user behavior and/or feature data | |
US7680856B2 (en) | Storing searches in an e-mail folder | |
US7516118B1 (en) | Methods and systems for assisted network browsing | |
US7873632B2 (en) | Systems and methods for associating a keyword with a user interface area | |
US20060041549A1 (en) | Mapping web sites based on significance of contact and category | |
US20060224583A1 (en) | Systems and methods for analyzing a user's web history | |
US20060224608A1 (en) | Systems and methods for combining sets of favorites | |
US20110320437A1 (en) | Infinite Browse | |
JP2008507041A (en) | Personalize the ordering of place content in search results | |
KR20080031928A (en) | Systems for and methods of finding relevant documents by analyzing tags | |
US8667013B1 (en) | Systems and methods for determining an article association measure | |
WO2008061133A1 (en) | Search result ranking based on attributes of search listing collections |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KHAN, OMAR HABIB;LAWRENCE, STEPHEN R.;REEL/FRAME:036192/0426Effective date: 20040726 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT RECEIVED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
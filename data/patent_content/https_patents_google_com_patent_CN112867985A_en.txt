CN112867985A - Determining whether to automatically resume a first automated assistant session after interrupting suspension of a second session - Google Patents
Determining whether to automatically resume a first automated assistant session after interrupting suspension of a second session Download PDFInfo
- Publication number
- CN112867985A CN112867985A CN201980037325.8A CN201980037325A CN112867985A CN 112867985 A CN112867985 A CN 112867985A CN 201980037325 A CN201980037325 A CN 201980037325A CN 112867985 A CN112867985 A CN 112867985A
- Authority
- CN
- China
- Prior art keywords
- session
- content
- client device
- user
- state
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 239000000725 suspension Substances 0.000 title claims abstract description 27
- 238000009877 rendering Methods 0.000 claims description 78
- 230000004044 response Effects 0.000 claims description 71
- 238000000034 method Methods 0.000 claims description 54
- 230000007704 transition Effects 0.000 claims description 47
- 230000002085 persistent effect Effects 0.000 claims description 46
- 230000001052 transient effect Effects 0.000 claims description 29
- 230000015654 memory Effects 0.000 claims description 15
- 230000001755 vocal effect Effects 0.000 claims description 13
- 238000004891 communication Methods 0.000 claims description 8
- 230000007613 environmental effect Effects 0.000 claims 2
- 230000001419 dependent effect Effects 0.000 claims 1
- 230000003993 interaction Effects 0.000 description 15
- 230000000007 visual effect Effects 0.000 description 12
- 230000002452 interceptive effect Effects 0.000 description 11
- 230000009471 action Effects 0.000 description 9
- 235000013550 pizza Nutrition 0.000 description 9
- 230000000694 effects Effects 0.000 description 8
- 238000010586 diagram Methods 0.000 description 6
- 230000007246 mechanism Effects 0.000 description 5
- 238000012549 training Methods 0.000 description 5
- 235000006679 Mentha X verticillata Nutrition 0.000 description 4
- 235000002899 Mentha suaveolens Nutrition 0.000 description 4
- 235000001636 Mentha x rotundifolia Nutrition 0.000 description 4
- 239000003795 chemical substances by application Substances 0.000 description 4
- 238000010801 machine learning Methods 0.000 description 4
- 230000007935 neutral effect Effects 0.000 description 4
- 230000000717 retained effect Effects 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 235000013305 food Nutrition 0.000 description 3
- 238000013528 artificial neural network Methods 0.000 description 2
- 238000013475 authorization Methods 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000009434 installation Methods 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 230000008569 process Effects 0.000 description 2
- 238000012545 processing Methods 0.000 description 2
- 238000011084 recovery Methods 0.000 description 2
- 239000002699 waste material Substances 0.000 description 2
- 240000005561 Musa balbisiana Species 0.000 description 1
- 235000018290 Musa x paradisiaca Nutrition 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 239000003086 colorant Substances 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 235000013399 edible fruits Nutrition 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 239000004615 ingredient Substances 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000011900 installation process Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000003278 mimic effect Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 238000003825 pressing Methods 0.000 description 1
- 239000000047 product Substances 0.000 description 1
- 230000002035 prolonged effect Effects 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 230000002040 relaxant effect Effects 0.000 description 1
- 238000010079 rubber tapping Methods 0.000 description 1
- 238000004904 shortening Methods 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0487—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser
- G06F3/0488—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser using a touch-screen or digitiser, e.g. input of commands through traced gestures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/083—Recognition networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0482—Interaction with lists of selectable items, e.g. menus
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0487—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser
- G06F3/0488—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser using a touch-screen or digitiser, e.g. input of commands through traced gestures
- G06F3/04883—Interaction techniques based on graphical user interfaces [GUI] using specific features provided by the input device, e.g. functions controlled by the rotation of a mouse with dual sensing arrangements, or of the nature of the input device, e.g. tap gestures based on pressure sensed by a digitiser using a touch-screen or digitiser, e.g. input of commands through traced gestures for inputting data by handwriting, e.g. gesture or text
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Abstract
Determining whether to perform the following operations after the abort of the second automatic assistant session that interrupted and replaced the previous first automatic assistant session: (1) automatically restoring the previous first automatic assistant session, or (2) transitioning to an alternate automatic assistant state in which the previous first session was not automatically restored. Embodiments are also directed to selectively automatically resuming or transitioning the interrupted previous first automated assistant session to the state in which the first session was not automatically resumed based on the determining and upon the suspension of the second automated assistant session.
Description
Background
Humans may engage in human-computer conversations using interactive software applications referred to herein as "automated assistants" (also referred to as "chat robots," "interactive personal assistants," "intelligent personal assistants," "personal voice assistants," "conversation agents," and the like). For example, humans-who may be referred to as "users" when they interact with an automated assistant-may provide commands, queries, and/or requests using free-form natural language input. The free-form natural language input may include a voiced utterance that is converted to text using automatic speech recognition and/or a typed free-form natural language input.
It is becoming increasingly common for a stand-alone voice-responsive speaker to provide users with the ability to audibly engage with an automated assistant. These devices typically include only a few hardware input mechanisms that supplement the microphone(s), except perhaps including a mute button, a touch-sensitive interface for adjusting volume, and the like. The goal of these speakers is to allow a user to easily engage audibly with an automated assistant without requiring the user to physically interact with certain user interface elements (such as a keyboard or mouse) to perform various tasks.
Conventional stand-alone voice responsive speakers typically lack a complete display. At best, these conventional stand-alone voice responsive speakers tend to include relatively simple visual output mechanisms, such as light emitting diodes or the like, which are capable of conveying simple messages with basic colors and/or animations. The next generation of standalone voice responsive speakers may include more robust visual output mechanisms, such as a display or even a touch screen display. These devices will be referred to herein as "standalone multimodal assistant devices" as opposed to standalone speech responsive speakers. As with conventional stand-alone interactive speakers, stand-alone multimodal assistant devices may be designed to audibly interact with a keyboard, mouse, or other complex physical input component, and will typically not include a keyboard, mouse, or other complex physical input component. However, a standalone multimodal assistant device will typically include microphone(s) for vocal interaction and a touch screen for interacting via various touch inputs received via the touch screen.
Disclosure of Invention
With standalone multimodal assistant devices, users engaged with these devices can typically interact with the devices using touch inputs or spoken utterances. Further, a user may engage with a device when the user is relatively close to the device (e.g., near or within a few feet), relatively far from the device (e.g., more than ten feet away), or even as they move around the environment. For example, a user may engage with a multimodal assistant device to seek assistance in performing a multi-step task (such as installing and configuring a new intelligent thermostat). During performance of the task, the user may interact with the multimodal assistant device via touch input and/or verbal input to cause the multimodal assistant device to audibly and/or graphically render various steps and/or other guidance related to installing and configuring the new intelligent thermostat. When such input is provided and/or when content rendered by the multimodal assistant device is ascertained, the user can move throughout the environment. Thus, the viewpoint of the user relative to the display of the device may change, thereby affecting the user's ability to view content rendered via the display. Furthermore, the user's changing position may affect his/her ability to hear whatever is rendered audibly via the speaker(s) of the multimodal device.
In view of these and other considerations, embodiments disclosed herein render only content relevant to an active session with a user during the active session. For example, in response to a spoken utterance of "walk me through installing smart thermostat X," the display of the standalone multimodal assistant device and the speaker(s) of the device may exclusively render content related to installing and configuring "smart thermostat X. In other words, any previously rendered content may be completely replaced by the content of the active session. For example, assume that a daily weather forecast was rendered on the display in a previous conversation in response to a previous spoken utterance for "today's weather forecast". The display of the weather forecast may be replaced in the new activity session by visual content related to the "smart thermostat X" installation in response to a spoken utterance of "walk me through installing a smart thermostat X". In these and other ways, the rendering of content for an active session may utilize the full range of the display and/or speaker(s) of the multimodal assistant device without "splitting" the display to present content from two sessions without simultaneously rendering audio from two different sessions (e.g., with one session at a "lower" volume). In addition to saving resources by preventing simultaneous rendering of content from both sessions, this situation may also enable a user to more easily and quickly ascertain content in an active session, potentially shortening the duration of the active session.
While rendering only content related to an active session provides various advantages, problems may also arise when an active session interrupts a previous session before the previous session is completed. For example, after the suspension of an active session that interrupts a previous session, it may be unclear as to whether the interrupted previous session should perform the following: automatic resume (e.g., resume after suspension of the active session and without further user interface input); not automatically resume, but suggests resume (e.g., a displayed interface element may be touched to resume a previous session); neither automatic nor suggested recovery, but in response to an explicit user request (e.g., a spoken utterance for "resume printer session)"; or not automatically resumed and terminated altogether (e.g., data is purged from memory to resume the previous session in its interrupt state, which is not possible without prolonged user interaction to recreate the state of the previous session).
The technique of exclusively terminating the previous session completely may directly result in a waste of computer and network resources. For example, assume that a previous session is in a state resulting from multiple human-automated assistant dialog turns (turn), and that the user wishes to return to the previous session after the abort of the interrupted session. With the technique of completely terminating a previous session exclusively, the previous session cannot be resumed without re-creating the state of the previous session again by executing multiple resource-intensive human-automated assistant conversation rounds. The technique of always turning exclusively to the previous session may also directly result in a waste of computer and network resources. For example, in the event that the user does not wish to return to a previous session after discontinuing the termination of the session, rendering content from the previous session again and/or storing its state in memory may unnecessarily consume various resources.
In general, challenges exist in an assistant device that ensures effective management of multiple overlapping sessions and resources provided therefor. In particular, where one or more aspects of the interface presented by the assistant are implemented as audio (e.g., via a spoken utterance), presenting parallel conversation information in an environment that includes a linear presentation aspect presents challenges. While multimodal assistant devices, such as those including a display, may provide opportunities for additional interface information to be communicated, these multimodal assistant devices also provide greater opportunities for interactions that include multiple sessions. Managing the use of resources applied for overlapping tasks in an assistant environment presents challenges that are not suitable for solutions previously used in alternative interfaces.
In view of these and other considerations, embodiments disclosed herein relate to determining whether to perform the following operations after the suspension of a second automatic assistant session that interrupts and replaces a previous first automatic assistant session: (1) automatically restoring the previous first session, or (2) transitioning to an alternate state in which the previous first session was not automatically restored. In some embodiments, when it is determined to transition to an alternate state in which the previous first session was not automatically resumed, the alternate state may be an alternate state in which the previous session was not automatically resumed and was completely terminated; the previous session is not automatically resumed but suggests an alternative state to resume via a user interface output (e.g., via rendering of graphical elements); or an alternative state in which the previous session was neither automatically resumed nor suggested to be resumed, but can be resumed in response to an explicit user request. Some of these embodiments may always transition to the same alternate state when it is determined to transition to an alternate state in which the first session is not automatically resumed. Other embodiments may select from one or more of those alternative states upon determining to transition to an alternative state in which the first session is not automatically resumed.
Embodiments described herein also relate to selectively automatically resuming or transitioning an interrupted previous first session to a state in which the first session was not automatically resumed upon the suspension of the second session. These embodiments selectively cause one of these two actions to occur based on the following determinations: whether (1) to automatically resume the previous first session, or (2) to transition to an alternate state where the previous first session was not automatically resumed. As described in detail herein, various techniques may be utilized to make this determination, such as techniques that take into account one or more characteristics of the previous first session and/or the interrupted second session. Making such a determination and selectively causing performance of only one of the two actions may directly yield various advantages. In particular, by providing an alternative way to manage transitions between sessions, improved allocation of resources may be achieved. For example, selective automatic resumption of a previous first session may reduce (e.g., to zero) the number of inputs that a user must make to resume the previous first session while being performed only selectively and based on various consideration(s) to reduce the risk of automatic resumption when not desired. Further, for example, selectively transitioning to a state in which the previous first session was not automatically resumed may prevent automatic rendering of content from the first session and/or may cause the assistant device to transition to a low power state more quickly while being performed only selectively and based on various consideration(s) to reduce the risk of non-automatic resumption when not desired. Further, the selective execution of one of the two actions provides an improved interaction protocol that facilitates human-automated assistant interaction in the execution of various tasks (such as controlling a smart device, configuring a smart device, installing a smart device, etc.).
In some embodiments, determining whether to perform the following operations after the abort of the second session that interrupts and supersedes the previous first session is based at least in part on one or more characteristics of the previous first session and/or one or more characteristics of the second session: (1) automatically restoring the previous first session, or (2) transitioning to an alternate state in which the previous first session was not automatically restored. In some of those implementations, the utilized characteristics of the first session may include a classification assigned to the first content and/or the utilized characteristics of the second session may include a classification assigned to the second content. The classification may indicate, for example, whether the corresponding content is transient or persistent. In this manner, it can be appreciated that sessions having different classifications can be handled differently when included in a multi-session environment, thereby properly assigning resources to what they need or desire.
Persistent content may include, for example, content rendered through multiple dialog rounds and/or content dynamically rendered during a dialog round depending on user interface input. For example, the content rendered when instructing the user to install and configure the smart device may be persistent because the content is rendered over multiple dialog turns, and/or because the content is rendered in a dynamic manner (e.g., if the user selects wiring option a in a dialog turn, another content a will be provided, and if the user instead selects wiring option B in a dialog turn, another content B will be provided). Persistent content may additionally or alternatively include content whose entire rendering takes at least a threshold duration and/or content of some type, for example. For example, many (or all) videos may be classified as persistent, such as music videos, which include at least a threshold duration of visually and audibly rendered content. Rather, the transient content may include content that is static and/or rendered only in a single conversational turn, such as audible and/or visual weather forecasts, definitions of terms, answers to questions. In some implementations, content can be classified as persistent or transient based at least in part on the source of the content. For example, content from an agent providing video content may be classified as persistent throughout, while content from an agent providing weather information may be classified as transient. In some implementations, the content can be classified as persistent or transient based at least in part on an intent determined based on the spoken utterance or a notification to which the content is responsive. For example, as described herein, a spoken utterance can be processed to derive an intent, and/or a notification can be associated with a corresponding intent, and some intentions can be associated with persistent content, while other intentions can be associated with transient content. Additional and/or alternative techniques for classifying content as transient or persistent may be provided.
In some implementations, determining to automatically resume the previous first session can be based on the content of the previous first session being classified as persistent and the content of the second session being classified as transient. In some additional or alternative implementations, determining to transition to an alternative state in which the previous first session was not automatically resumed may be classified as transient based on the content of the previous first session. In some of those embodiments, the alternative state is a state in which the previous first session was not automatically resumed and was completely terminated. In some additional or alternative implementations, determining to transition to an alternative state in which the previous first session was not automatically resumed may be based on the content of the previous first session being classified as persistent and the content of the second session also being classified as persistent. In some versions of those embodiments, the alternative state is a state in which the previous first session was not automatically resumed, but is suggested for output via a user interface (e.g., via rendering of a graphical element on a "home" screen, described in more detail herein). In some other versions of those embodiments, the alternative state is a state in which the previous session was neither automatically restored nor suggested to be restored, but is recoverable in response to an explicit user request. In some additional or alternative implementations, determining to automatically resume the previous first session may be based on another determination that the content of the previous first session is classified as persistent, that the content of the second session is classified as persistent, and that the content of the previous first session implements the entity and that there is a defined relationship between the entity content of the second session.
In various implementations described herein, interruption data is received during rendering of first content of a first session, and in response to receiving the interruption data, alternate content is rendered during a second session. In some of those implementations, the interruption data is a verbal input by the user, and the first content that includes the request for the alternate content based on the verbal input and the alternate content is different from the first session is determined to be the interruption data. For example, the first content of the first session may be related to configuring the smart device, the spoken input may be "how do you make mint julier", and may be determined as the interruption data based on a request including content unrelated to the smart device configuration content of the first session (a guideline related to making mint julier). Conversely, if the first content displayed during the first session is one of a plurality of steps related to configuring the smart device and the verbal input is a "next" step, the verbal input will not be determined to be interrupting data, but instead will be determined to be a request to render a next portion of the first content.
In some additional or alternative implementations, the interruption data may be a user interface input indicating a desire to interact with a notification received during the first session and rendered visually and/or audibly during the rendering of the first content during the first session. For example, the notification may be an incoming audio and/or visual call, and the interactive graphical interface element may be overlaid over the visually rendered content of the first session. The positive selection of the notification graphical interface element may be interrupt data, and the alternative content rendered during the second session may be an audio and/or visual call. A positive selection may be, for example, a particular positive touch selection (e.g., a right swipe or double click) or a positive voiced utterance (e.g., "OK", "accept the notification"). Conversely, a negative selection of a graphical interface element (e.g., a particular negative touch selection, such as a swipe down) can cause the notification to be cancelled without interrupting the first session. As used herein, the interruption data references data indicating a desire to have the substitute content rendered as part of the substitute session, and may be input with a user interface that merely attempts to cause the current abort to abort (e.g., a spoken command "stop" or "pause," an interactive "X" touch, or other abort graphical element).
In various embodiments, when the interruption data is received, the first session data of the interrupted first session may be stored and used to automatically resume the first session in the state of the first session. In some of those embodiments, the first session data is optionally persisted only in response to determining to resume the first session. The first session data may be stored in various ways. In some embodiments, the entire transcript of the human-machine conversation of the first session may be retained so that the state of the first session may be reconstructed or restored, for example on the fly and/or as needed, by detecting intents, slot values, entities, etc. in the retained transcript. Additionally or alternatively, in some implementations, only core elements of the state (such as the detected intent(s), slot values, referenced entities, etc.) may be retained in various formats, such as JavaScript object notation ("JSON") or other similar formats. The first session data may be retained at the respective bit locations. In some implementations, the first session data may be saved in memory local to a computing device operated by the user to engage with the automated assistant. This situation may yield various technical benefits, such as reducing latency for recovery of the first session. Additionally or alternatively, in some implementations, the first session data may be saved remotely from the user's computing device, for example, in memory of one or more computing systems operating in conjunction with one or more computing systems commonly referred to as "cloud-based services.
The above description is provided merely as an overview of various embodiments described herein. Additional descriptions of those various embodiments, as well as additional embodiments, are provided herein.
In some implementations, a method performed by one or more processors is provided and includes receiving user input data indicative of user input detected via a user interface input component of a client device. The method also includes identifying first content responsive to the user input based on the user input data. The method also includes, in response to receiving the user input data, causing the client device to render at least a portion of the first content during the first session. The method also includes receiving interruption data during rendering of the first content by the client device during the first session. Interrupt data is received in response to another user interface input by the user detected during rendering of the first content during the first session. The method also includes, in response to receiving the interruption data, causing the client device to render the substitute content during a second session that at least temporarily replaces the first session. The alternate content is different than the first content, and causing the client device to render the alternate content during the second session includes causing the client device to render the alternate content in place of the first content. The method further includes determining whether to perform the following after the termination of the second session: the method may further include causing the client device to automatically resume the first session or causing the client device to transition to an alternate state in which the client device does not automatically resume the first session. The determination is based at least on one or more characteristics of the first session. The method also includes, after the suspension of the second session and depending on the determination, selectively causing the client device to automatically resume the first session or transition to an alternate state in which the first session is not automatically resumed.
These and other implementations of the techniques described herein may include one or more of the following features.
In some implementations, the user input data includes spoken utterance data indicative of a spoken utterance of the user detected via one or more microphones of the client device.
In some implementations, determining the at least one characteristic of the first session based includes a classification assigned to the first content. In some versions of those embodiments, the classification assigned to the first content indicates whether the first content is transient or persistent. In some of those versions, determining includes determining to transition the client device to an alternate state in which the client device does not automatically resume the first session based on the classification assigned to the content indicating that the first content is transient.
In some implementations, the determination based on the at least one characteristic of the first session indicates whether the first content is transient or persistent, and the determination is further based on one or more characteristics of the second session. In some of those implementations, the at least one characteristic of the second session indicates whether the substitute content is transient or persistent. In some versions of those embodiments, the determining includes determining to cause the client device to automatically resume the first session based on the classification assigned to the first content indicating that the first content is persistent and the at least one characteristic of the second session indicating that the substitute content is transient. In some other versions of those embodiments, the determining includes determining to transition the client device to an alternate state in which the client device does not automatically resume the first session based on the classification assigned to the first content indicating that the content is persistent and the at least one characteristic of the second session indicating that the alternate content is persistent.
In some implementations, the other user interface input is another spoken utterance of the user. In some of those implementations, the method further includes determining that the other spoken input is interruptive data based on the other spoken input including a request for alternative content and the alternative content being different than the first content of the first session.
In some implementations, determining the at least one characteristic of the first session based includes an entity implemented by the first content, and determining includes determining to cause the client device to automatically resume the first session based on determining a relationship between the alternate content and the entity implemented by the first content.
In some embodiments, the method further comprises: during rendering of first content by a client device during a first session, receiving a notification to be rendered at the client device; and in response to receiving the notification, causing the client device to render the notification. In some of those implementations, the other user interface input is a positive touch or verbal input of the user provided in response to the client device rendering the notification, the positive input of the user indicating a desire of the user to interact with the notification, and the alternative content is based on the notification.
In some embodiments, the method further comprises storing first session state data for the first session, the first session state data indicating a state of the first session when the interruption data is received. In those implementations, causing the client device to automatically resume the first session includes using the first session state data to resume the first session in a state of the first session when the interruption data is received.
In some implementations, determining includes determining to transition the client device to a state in which the client device does not automatically resume the first session. In some of those implementations, the method further includes responsively clearing session data for the first session from a memory of the client device or a remote server in network communication with the client device.
In some implementations, the client device includes a display and at least one speaker, and presenting the content includes rendering the content via the display and the at least one speaker.
In some implementations, the alternate state in which the client device does not automatically resume the first session includes display of a home screen or an ambient screen. In some versions of those embodiments, the display of the home screen or the ambient screen lacks any reference to the first session. In some other versions of those embodiments, the display of the home screen or the environment screen includes a selectable graphical interface element that can be selected to resume the first session.
Additionally, some embodiments include one or more processors of one or more computing devices, wherein the one or more processors are operable to execute instructions stored in an associated memory, and wherein the instructions are configured to cause performance of one of any of the methods previously described. Some embodiments also include one or more non-transitory computer-readable storage media storing computer instructions executable by one or more processors to perform any of the foregoing methods.
Drawings
FIG. 1 is a block diagram of an example environment in which embodiments disclosed herein may be implemented.
FIG. 2 depicts an example state machine that can be implemented in accordance with various embodiments.
Fig. 3 depicts a flowchart illustrating an example method according to embodiments disclosed herein.
FIG. 4 illustrates an example of rendering first content during a first session, rendering alternate content during a second session in response to receiving interruption data during the rendering of the first content during the first session, and automatically resuming the first session upon suspension of the second session.
FIG. 5 illustrates an example of rendering first content during a first session, rendering alternate content during a second session in response to receiving interruption data during the rendering of the first content during the first session, and transitioning to an alternate state upon termination of the second session in which the first session is suggested to resume but not automatically.
FIG. 6 illustrates another example of rendering first content during a first session, rendering alternate content during a second session in response to receiving interruption data during the rendering of the first content during the first session, and automatically resuming the first session upon suspension of the second session.
FIG. 7 illustrates an example of rendering first content during a first session, rendering alternate content during a second session in response to receiving interruption data during the rendering of the first content during the first session, and transitioning to an alternate state upon termination of the second session in which the first session does not automatically resume and does not suggest resumption.
FIG. 8 illustrates another example of rendering first content during a first session, rendering alternate content during a second session in response to receiving interruption data during the rendering of the first content during the first session, and resuming the first session upon suspension of the second session.
FIG. 9 is a block diagram of an example computing device.
Detailed Description
Turning now to fig. 1, an example environment is illustrated in which the techniques disclosed herein may be implemented. The example environment includes a plurality of client computing devices 1061-N. Each client device 106 may execute a respective instance of the automated assistant client 118. One or more cloud-based automated assistant components 119, such as natural language understanding engine 135, may be implemented on one or more computing systems (collectively "cloud" computing systems) communicatively coupled to client device 106 via one or more local and/or wide area networks (e.g., the internet), indicated generally at 1101-N。
In some implementations, the instance of the automated assistant client 118 through its interaction with the one or more cloud-based automated assistant components 119 can form a logical instance that appears to the automated assistant 120 from the perspective of the user, who can engage in a human-machine conversation with the logical instance of the automated assistant 120. Two examples of such automated assistants 120 are depicted in fig. 1. The first automated assistant 120A surrounded by dashed lines is to operate the first client device 1061And includes an automated assistant client 1181And one or more cloud-based automated assistant components 119. A second automated assistant 120B, encircled by dashed double-dotted line, operates another client device 106NAnd includes an automated assistant client 118, and a second user (not depicted) providing a serviceNAnd one or more cloud-based automated assistant components 119.
Thus, it should be understood that each user engaged with the automated assistant client 118 executing on the client device 106 may actually engage with his or her own logical instance of the automated assistant 120. For the sake of brevity and simplicity, the term "automatic assistant" as used herein to "service" a particular user will refer to a combination of an automatic assistant client 118 and one or more cloud-based automatic assistant components 119 (which may be shared among multiple automatic assistant clients 118) executing on a client device 106 operated by the user. It should also be understood that in some implementations, the automated assistant 120 may respond to requests from any user regardless of whether a particular instance of the automated assistant 120 actually "serves" the user.
Client device 1061-NMay include, for example, one or more of the following: a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a computing device of a user's vehicle (e.g., an in-vehicle communication system, an in-vehicle entertainment system, an in-vehicle navigation system), a standalone interactive speaker, a smart appliance such as a smart television, and/or a wearable device of a user that includes a computing device (e.g., a watch of a user having a computing device, glasses of a user having a computing device, a virtual or augmented reality computing device). Additional and/or alternative client computing devices may be provided.
For purposes of this disclosure, in FIG. 1, a first client device 1061By having a loudspeaker 1091And a display 1111And may lack complex hardware input components (in some embodiments, other than the display 111 being a touch screen), such as a keyboard or mouse. Although the techniques described herein will be used with a device such as 1061Without intending to be limiting, is described in the context of standalone multimodal assistance device execution. The techniques described herein may be implemented on client devices having other form factors (but still lacking a standard keyboard and mouse), such as vehicle computing devices intended to interact with primarily via vocal and/or touch interactions. Second clientEnd device 106NIs a stand-alone voice responsive speaker that includes speaker 109NThe automated assistant 120A may be through the speaker 109NProviding a natural language output. May be via the second client device 106NVia the second client device 106NThe audio content of the rendered conversation additionally or alternatively implements the techniques described herein in association.
As described in more detail herein, the automated assistant 120 is via one or more client devices 1061-NAre engaged in a human-computer dialog session with one or more users. On a stand-alone multimodal auxiliary device (such as client device 106)1) In case these input devices may be limited to only a microphone (not depicted) and the display 111 (in embodiments where the display 111 is a touch screen) and optionally other sensors (e.g. PIR, camera) which may be used e.g. to detect the presence of a person in the vicinity. In some implementations, the user is responded to via the client device 1061-NThe automated assistant 120 may engage in a human-machine conversation session with the user by user interface input provided by one or more user interface input devices of one of the plurality of devices. In some of those implementations, the user interface input is explicitly directed to the automated assistant 120. For example, the particular user interface input may be user interaction with hardware buttons and/or virtual buttons (e.g., tapping, long pressing), spoken commands (e.g., "Hey Automated assistance"), and/or other particular user interface input.
In some implementations, the automated assistant 120 can participate in a human-machine conversation session in response to user interface inputs even when the user interface inputs are not explicitly directed to the automated assistant 120. For example, the automated assistant 120 may examine the content of the user interface input and participate in the conversation session in response to certain terms present in the user interface input and/or based on other prompts. In many implementations, the user can issue commands, conduct searches, etc., and the automated assistant 120 can utilize speech recognition to convert utterances to text and respond to the text accordingly, e.g., by providing search results, general information, and/or taking one or more responsive actions (e.g., playing media, starting a game, ordering food, etc.). In some implementations, the automated assistant 120 can additionally or alternatively respond to utterances without converting the utterances to text. For example, the automated assistant 120 may convert the speech input into an embedding, into an entity representation (indicating the entity/entities present in the speech input) and/or other "non-text" representations, and operate on such non-text representations. Thus, embodiments described herein as operating based on text converted from speech input may additionally and/or alternatively operate directly on speech input and/or other non-text representations of speech input.
Client computing device 1061-NAnd one or more computing devices running cloud-based automated assistant component 119 may each include one or more memories for storing data and software applications, one or more processors for accessing data and executing applications, and other components that facilitate communication over a network. By one or more client computing devices 1061-NAnd/or the operations performed by the automated assistant 120 may be distributed across multiple computer systems. The automated assistant 120 may be implemented, for example, as a computer program running on one or more computers in one or more locations coupled to each other over a network.
As described above, in various embodiments, the client computing device 1061-NEach of which may operate an automated assistant client 118. In various embodiments, each automatic assistant client 118 may include a corresponding speech capture/text-to-speech ("TTS")/speech-to-text ("STT") module 114. In other implementations, one or more aspects of the speech capture/TTS/STT module 114 may be implemented separately from the automatic assistant client 118. Each speech capture/TTS/STT module 114 may be configured to perform one or more functions: for example, capturing the user's voice via a microphone (voice capture); converting the captured audio to text and/or other representation or embedding (STT); and/or converting Text To Speech (TTS). For example, in some implementations, because the client device 106 may be on-meterComputational resources (e.g., processor cycles, memory, battery, etc.) are relatively constrained in terms, so the STT module 114 local to each client device 106 may be configured to convert a limited number of different spoken phrases into text (or other forms, such as lower-dimensional embedding). Other speech inputs may be sent to a cloud-based automated assistant component 119, which may include a cloud-based STT module 117.
The cloud-based STT module 117 may be configured to utilize the virtually unlimited resources of the cloud to convert audio data captured by the speech capture/TTS/STT module 114 to text (which may then be provided to the natural language processor 122). Cloud-based TTS module 116 may be configured to utilize the virtually unlimited resources of the cloud to convert text data (e.g., natural language responses formulated by automated assistant 120) into computer-generated speech output. In some implementations, the TTS module 116 can provide the computer-generated speech output to the client device 106 for direct output, e.g., using one or more speakers. In other implementations, the text data (e.g., natural language response) generated by the automated assistant 120 can be provided to the speech capture/TTS/STT module 114, which can then convert the text data into locally output computer-generated speech.
The automatic assistant 120 (and in particular, the cloud-based automatic assistant component 119) may include a natural language understanding engine 135, the TTS module 116, the STT module 117, and other components described in more detail below. In some implementations, one or more engines and/or modules of the automated assistant 120 may be omitted, combined, and/or implemented in a component separate from the automated assistant 120. In some implementations, one or more components of the automatic assistant 120, such as the natural language understanding engine 135, the speech capture/TTS/STT module 114, etc., may be implemented at least partially on the client device 106 (e.g., excluded from the cloud).
In some implementations, the automated assistant 120 is responsive to the client device 1061-NOne of the users generates responsive content from various inputs generated during the human-machine dialog session with the automated assistant 120. The automated assistant 120 can provide response content (e.g., over one or more networks when detached from the user's client device) for presentation to the user as part of a conversation session. For example, the automated assistant 120 may respond via the client device 1061-NOne of the free-form natural language inputs provided generates response content. As used herein, free-form natural language input is input that is formulated by a user and is not constrained by a set of options presented for selection by the user.
The natural language processor 122 of the natural language understanding engine 135 processes the user via the client device 1061-NThe generated natural language input and may generate an annotated output (e.g., in textual form) for use by one or more other components of the automated assistant 120. For example, the natural language processor 122 may process data received by a user via the client device 1061The one or more user interface input devices of (a). The generated annotation output includes one or more annotations of the natural language input and optionally one or more (e.g., all) terms of the natural language input.
In some implementations, the natural language processor 122 is configured to identify and annotate various types of grammar information in the natural language input. For example, the natural language processor 122 may include a morphology engine that may separate individual words into morphemes and/or annotate the morphemes, for example, with categories of morphemes. The natural language processor 122 may also include a part-of-speech tagger configured to annotate a term with its grammatical role. Further, for example, in some implementations, the natural language processor 122 may additionally and/or alternatively include a dependency parser that may be configured to determine syntactic relationships between terms in the natural language input.
In some implementations, the natural language processor 122 can additionally and/or alternatively include an entity annotator configured to annotate entity references, such as references to people (including, for example, literary characters, celebrities, public characters, etc.), organizations, locations (both real and fictional), and so forth, in one or more segments. In some implementations, data about the entities can be stored in one or more databases, such as in a knowledge graph (not depicted). In some implementations, the knowledge graph can include nodes (and in some cases, entity attributes) that represent known entities and edges that connect the nodes and represent relationships between the entities. For example, a "banana" node may be connected (e.g., as a child node) to a "fruit" node, which in turn may be connected (e.g., as a child node) to a "product" and/or "food" node. As another example, a restaurant called "financial Cafe" may be represented by a node that also includes attributes such as its address, the type of food served, business hours, contact information, and the like. Connected by an edge (e.g., representing the relationship of a child node to a parent node) to one or more other nodes, such as a "restaurant" node, an "enterprise" node, a node representing the city in which the restaurant is located and/or the state in which the restaurant is located, and so forth.
The entity annotator of the natural language processor 122 can annotate references to entities at a higher level of granularity (e.g., to enable identification of all references to an entity category such as people) and/or a lower level of granularity (e.g., to enable identification of all references to a particular entity such as a particular person). The entity annotator can rely on the content of the natural language input to resolve a particular entity and/or can optionally communicate with a knowledge graph or other entity database to resolve a particular entity.
In some implementations, the natural language processor 122 can additionally and/or alternatively include a coreference parser (not depicted) configured to group or "cluster" references to the same entity based on one or more contextual cues. For example, a coreference parser may be utilized to parse the term "there" into "synthetic Cafe" in the natural language input "I like synthetic Cafe where we last eaten".
In some implementations, one or more components of the natural language processor 122 may rely on annotations of one or more other components of the natural language processor 122. For example, in some implementations, a named entity annotator can rely on annotations from co-referent resolvers and/or dependency resolvers in annotating all mentions of a particular entity. For example, in some implementations, the coreference resolver may rely on annotations from dependency resolvers when clustering references to the same entity. In some implementations, in processing a particular natural language input, one or more components of the natural language processor 122 may determine one or more annotations using related previous inputs and/or other related data in addition to the particular natural language input.
The natural language understanding engine 135 may also include an intent matcher 136, the intent matcher 136 configured to determine an intent of a user participating in a human-machine conversation session with the automatic assistant 120 based on the annotation output of the natural language processor 122. Although depicted separately from the natural language processor 122 in fig. 1, in other implementations, the intent matcher 136 may be an integral part of the natural language processor 122 (or more generally, a pipeline that includes the natural language processor 122). In some implementations, the natural language processor 122 and the intent matcher 136 may collectively form the aforementioned "natural language understanding" engine 135.
The intent matcher 136 may use various techniques to determine the intent of the user. In some implementations, the intent matcher 136 may have access to one or more databases 137 that include, for example, a plurality of mappings between grammars and response actions (or, more generally, intents). Additionally or alternatively, in some implementations, the one or more databases 137 may store one or more machine learning models trained to generate an output indicative of the user's intent based on the user's input.
The grammar can be selected, customized (e.g., by hand), and/or learned over time, for example, to represent the user's most common intent. For example, a grammar "play < artist >" may be mapped to an intent that invokes a response action that causes music of < artist > to be played on a user-operated client device 106. Another grammar "[ weather | for cast ] today" may match user queries such as "what's the weather today" and "what's the forecast for today". As seen in the "play < artist >" example grammar, some grammars have slots (e.g., < artist >) that can be filled with slot values (or "parameters"). The slot value may be determined in various ways. The user will typically actively provide the slot value. For example, for the grammar "Order < ordering > pizza for me", the user might speak the phrase "Order me a usage pizza" which, in this case, automatically fills the slot < ordering >. Additionally or alternatively, if the user invokes a grammar that includes slots to be filled with slot values without the user actively providing the slot values, the automated assistant 120 may solicit the user for these slot values (e.g., "what type of crust do you want on your pizza.
In contrast to many grammars (which may be created manually), a machine learning model may be automatically trained, for example, using a log of interactions between a user and an automated assistant. The machine learning model may take various forms such as a neural network. They may be trained in various ways to predict user intent from user input. For example, in some implementations, training data including individual training examples may be provided. Each training example may include free-form input (e.g., in textual or non-textual form), such as from a user, and may be tagged with intent (e.g., by hand). The training examples may be applied as inputs on a machine learning model (e.g., a neural network) to generate an output. The output may be compared to the tag to determine an error. For example, the error may be used to train the model using techniques such as gradient descent (e.g., random, batch, etc.) and/or back propagation to adjust weights associated with hidden layers of the model. Once such a model is trained over a large number of training examples (typically very large), it can be used to generate an output of predicted intent from unlabeled free-form natural language input.
In some implementations, the automated assistant 120 can facilitate (or "negotiate") transactions between the user and an application (also referred to as an agent), such as a third-party application. These applications may or may not run on computer systems separate from those operating, for example, cloud-based automated assistant component 119. Thus, the intent matcher 136 may identify a type of user intent to engage in an application, such as a third party application. For example, the automated assistant 120 may provide a pizza delivery service with access to an application programming interface ("API"). The user may invoke the automated assistant 120 and provide a command such as "I'd like to order a pizza". The intent matcher 136 may map the command to a grammar (which may be added to the database 137 by a third party in some cases) that triggers the automated assistant 120 to engage with a third party pizza delivery service. The third party pizza delivery service may provide the automated assistant 120 with a list of the minimum number of slots that need to be filled in order to fulfill the pizza delivery order. The automated assistant 120 may generate and provide (via the client device 106) a natural language output to the user that solicits parameters from the slots.
The fulfillment engine 124 may be configured to receive the intent output by the intent matcher 136 and any associated slot values (whether actively provided by or solicited from the user) and fulfill the intent. In various embodiments, fulfillment of the user's intent may result in various fulfillment information being generated/obtained, for example, by fulfillment engine 124. As will be described below, in some implementations, the fulfillment information may be provided to a natural language generator 126, which may generate a natural language output based on the fulfillment information.
Because the intent may be fulfilled in a number of ways, the fulfillment information may take various forms. Suppose that a user requests pure information, such as "Where wee The outdoor notes of The Shining' filed? (where was The outdoor shot of "The shooting"). The user' S intent may be determined as a search query, for example, by the intent matcher 1S 6. The intent and content of the search query may be provided to a fulfillment engine 124, which, as depicted in fig. 1, may be in communication with one or more search engines 150 configured to search a corpus of documents and/or other data sources (e.g., knowledge graphs, etc.) for responsive information. The fulfillment engine 124 may provide data indicative of the search query (e.g., text of the query, dimension reduction embedding, etc.) to the search engine 150. The search engine 150 may provide responsive information such as "Timberline Lodge, Mt. hood, Oregon (forest boundary cabin in Heideshan, Oregon)". The response information may form part of the fulfillment information generated by fulfillment engine 124.
Additionally or alternatively, fulfillment engine 124 may be configured to receive the user's intent and any slot values provided by the user or determined using other means (e.g., the user's GPS coordinates, user preference settings, etc.), for example, from natural language understanding engine 135 and trigger responsive operations. Responsive actions may include, for example, ordering goods/services, engaging in an interactive conversation to complete a task, starting a timer, setting a reminder, initiating a telephone call, playing media, sending a message, etc. In some such embodiments, the fulfillment information may include a slot value associated with fulfillment, an acknowledgement response (which may be selected from a predetermined response in some cases), and so forth.
As described above, the natural language generator 126 may be configured to generate and/or select natural language output (e.g., spoken words/phrases designed to mimic human speech) based on data obtained from various sources. In some implementations, the natural language generator 126 may be configured to receive as input fulfillment information associated with the fulfillment intent of the fulfillment engine 124 and generate a natural language output based on the fulfillment information. Additionally or alternatively, the natural language generator 126 may receive information (e.g., a desired slot) from other sources, such as third party applications, which may be used to customize the natural language output for the user. Further, as described herein, content provided as output to a user for rendering may include graphical content, optionally along with corresponding audible content.
The session engine 138 may also be configured to determine, after the termination of the second session, whether to: (1) automatically resume the previous first session, or (2) transition to an alternate state in which the previous first session was not automatically resumed. The session engine 138 is further configured to selectively automatically resume or transition the interrupted previous first session to a state in which the first session was not automatically resumed upon the suspension of the second session. The session engine 138 may selectively cause one of these two actions to occur based on the following determinations: (1) whether to automatically resume the previous first session, or (2) transition to an alternate state where the previous first session was not automatically resumed. As described herein, when the session engine 138 determines to transition to an alternate state in which the previous first session was not automatically resumed, the alternate state may be: an alternative state in which the previous session was not automatically resumed and terminated completely; the previous session is not automatically resumed but instead suggests outputting a resumed alternate state via the user interface; or an alternative state where the previous session was neither automatically restored nor suggested to be restored, but can be restored in response to an explicit user request.
The session engine 138 may also be configured to cause selective transitions between various states, such as display off, ambient, home, and session states, as described herein, according to embodiments described herein. For example, session engine 138 may selectively transition from an interrupted session state to a state in which a previous session state is automatically restored, or alternatively, a state in which a previous session state is not automatically restored. Further, in embodiments where the session engine 138 transitions to a home state in which the previous session state was not automatically restored, the session engine 138 may optionally determine whether to adapt the home state (e.g., determine whether to include interactive elements for restoring the previous session state) based on various considerations described herein. Additional descriptions of these and other aspects of the session engine 138 are described herein (e.g., in summary, and with respect to fig. 2-8 below). It should be noted that although the session engine 138 is illustrated in fig. 1 as part of the cloud-based automated assistant component(s) 119, in various embodiments, all or part of the session engine 138 may be implemented by the respective automated assistant client 118.
Fig. 2 depicts an example state diagram that may be implemented, for example, by session engine 138, in accordance with various embodiments. The depicted state diagram includes five states, display closed 181, environment 183, home 185, first session 187, and second session 189. Although five states are depicted, fewer or more states may be provided, e.g., as described herein, the second session 189 may not always be in an active state, but may be created on demand in response to interrupt data being received while content is being rendered in the first session 187. Further, for example, additional third session states may be created on demand by session engine 138 in response to other interruption data being received while the content is being rendered in second session 189. When such a third session state is created, transitions from the third session state may be handled in a similar manner as described herein with respect to transitions from the second session (e.g., the second session 189 may be automatically restored, or an alternate state in which the second session 189 is not automatically restored).
Display off 181 may be a default state where display 111 remains asleep, e.g., using little or no power. Although standalone multimodal assistant device 1061Stay alone without a person nearby, but display off 181 may keep the current state. In some implementations, while the current state is display off 181, a user (not yet detected as present) may still request activity from the automated assistant 120, for example, by speaking an invocation phrase followed by a particular request, which may transition the current state directly to the first session 187 state.
In some implementations, the current state may be transitioned to the environment 183 state when one or more persons are detected nearby (i.e., "occupied"). In the environment 183 state, the automated assistant 120 may cause the client device 106 to1Display 1111Rendering may be selected, for example, based on its aesthetic appearance. For example, one or more digital images and/or videos of a landscape or other similar content may optionally be visually displayed with audible rendering of relaxing natural sounds. It should be noted that although content is rendered in the environment 183 state, the environment 183 state is not considered a session, as that term is used herein. For example, the environment 183 state may not be considered a conversation because the content rendered in the environment 183 state is not identified and rendered in response to a spoken utterance or in response to user acceptance of a notification. In some implementations, if it is determined that the occupant is no longer co-present with the standalone multimodal assistant device, for example, for at least a predetermined period of time, the current state may transition from the environment 183 back to the display off 181.
As indicated in fig. 2, in some embodiments, while the current state is the environment 183, the user may still request activity from the automated assistant 120, for example by speaking an invocation phrase followed by a particular request, which may transition the current state to the first session 187 state. In other embodiments, there may be no environment 183 state, and the current state may transition directly from display off 181 to home 185 in response to detecting coexistence (occupancy) of people.
In the home page 185 state, various graphical elements may be rendered, such as suggested actions by the user by interacting with the automated assistant to perform the current time, current weather conditions, a brief summary of the user's calendar, and so forth. In some implementations, the data items may be displayed as cards or tiles that may or may not be interactive (e.g., depending on whether the display 111 is a touch screen). In some cases, data items may be ranked based on various criteria, such as a priority assigned (automatically or manually) to the data item, the identity of coexisting people (if determined), the time of day, the time of year, and so forth. When data items are rendered as cards, e.g., in a stacked form, the ranking may be reflected by, for example, the top card of the highest priority and the bottom card of a relatively lower priority. When data items are presented as tiles, e.g., occupying a portion of the display 111, the ranking may be reflected, for example, in the placement of the tiles (e.g., the top left or right corner may be the highest priority) and/or in the size of the tiles (e.g., the larger the tile, the higher the priority). As described in detail herein, in various embodiments, before the home page 185 state is transitioned to completion of a session that includes persistent content, the data items optionally include selectable graphical elements that can be selected to resume the session. It should be noted that although the content is rendered in the home page 185 state, the home page 185 state is not considered a session, as that term is used herein. For example, the home page 185 state may not be considered a conversation because the content rendered in the home page 185 state is not identified and rendered in response to a spoken utterance or in response to user acceptance of a notification.
While in the home page 185 state, if the user engages one or more of the graphical elements representing the data items (e.g., by clicking on a tile or card), the current state may transition to the first session 187 state and render the content responsive to the graphical element(s) interacting with the user. For example, if one of the graphical elements is a suggestion for a music video that may be of interest to the user, the first session 187 state may cause audible content and graphical content of the music video to be rendered. Likewise, if the user speaks a vocal request (e.g., "OK, assestat, what is …. In some implementations, the current state may transition from the home page 185 back to the environment 183 state if the coexisting user does not audibly engage with the automated assistant 120 nor interact with the data items rendered on the display 111 for at least a predetermined time interval (i.e., a timeout), or even transition back to the display off 181 if the environment 183 state is not present. Other events that may trigger a transition from the home 185 state to the environment 183 (or display off 181) state include, but are not limited to, a specific request from a user (e.g., clicking an exit button on the display), a backward gesture (e.g., waving a hand in front of a camera or other sensor) that may signal the coexisting users' intent to transition back to the environment 183, and so forth.
In the first session 187 state, content related to the requested activity or task may be rendered exclusively on the display 111, and optionally exclusively via the speaker(s) 191. For example, assume that a coexistence user speaks a vocal request to guide the installation of a smart device. In response, the entire display 111 and speaker(s) 191 may be dedicated to multiple talk-wheel interactions to guide the user through the smart device installation process. As another example, assume that a coexisting user utters a vocal request for information about a celebrity. In some implementations, the responsive content may be audibly provided as natural language output by the automated assistant 120 through the speaker 109 and/or rendered on the display 111. In some implementations, other content responsive to the user's request can be displayed (but not necessarily specifically requested by the user), while the automated assistant 120 audibly provides the responsive content. For example, if the user asks for the celebrity's birthday, the celebrity's birthday may be audibly output, while other information about the celebrity (e.g., deep links to show the time of the movie being dominated by the celebrity, the photograph(s) of the celebrity, etc.) may be rendered on the display 111.
In response to the suspension of the first session 187, the current state may transition from the first conference 187 state back to the home page 185 state (or even the environment 183 or display closed 181). The discontinuation of the first session 187 can occur in response to completing rendering of persistent content of the first session state 187 (e.g., completing playing of a music video), completing rendering of transient content, and optionally after completing after a timeout. Other events may be considered abort events, but do not constitute completion of the first session 187, such as an explicit input by the user to undo the first session 187 (e.g., "stop" voiced speech, "back" touch input, "X" or other undo touch input on the interactive graphical element), or a specific request to return to the home page 185 state, and so forth.
In some embodiments, when there is a pause that causes a transition to the home page 185 state, the activities and/or tasks of the first session 187 may not complete and/or may remain open (e.g., not explicitly cancelled). For example, the user may pause a song or video in the middle of their rendering. As another example, a user may begin requesting a task that requires filling multiple slots with activity parameters, but may not fill all of the required slots. For example, a user may start ordering pizza, but may stop and leave the room to ask others what ingredients they want or request payment information from others. In some of those implementations, a new tile or card may be caused to be rendered on the display 111 in the home state 185 representing the incomplete first session 187. In some cases, the user may click on the new tile or card to continue the first session 187. In many embodiments, the new tile or card may be generated only for incomplete tasks classified as persistent tasks (while not for incomplete tasks classified instead as transient tasks).
As also illustrated in fig. 2, the current state may transition from the first session 187 state to the second session 189 state in response to receiving the interrupt data. This may occur when the first session 187 is still active and the content of the first session 187 is exclusively rendered only via the display 111 and/or speaker(s) 109. As described herein, the interruption data can be the spoken utterance when the spoken utterance provided by the user requests that alternative content be provided in place of the content provided during the first session 187. The interruption data may additionally or alternatively be a positive user interaction, wherein a notification is provided during the first session 187. Regardless of the interruption data, receipt of the interruption data causes a transition to the second session 189 state in which the substitute content corresponding to the interruption data replaces the content rendered during the first session 187 state.
Upon the occurrence of the abort of the second session 189, there is a transition to: a first session 187, wherein rendering of the content of the first session 187 is automatically resumed; or a home 185 state or an environment 183 state, wherein rendering of the content of the first session 187 state is not automatically resumed. As described herein, whether a transition to the state of the first session 187 or a transition to the state of the home page 185 or environment 183 should occur can be dynamically determined based on one or more characteristics of the first session 187 and/or the second session 189. Such characteristics may include, for example, whether the first session 187 renders persistent or transient content, and/or whether the second session renders persistent or transient content. In the event that a transition to the home page 185 state occurs and the first session 187 state renders persistent content, selectable tiles, cards, or other graphical elements may optionally be caused to be rendered in the home page 185 state, wherein selection results in a transition back to the first session 187 state, wherein the first session 187 is then resumed.
The suspension of the state of the second session 189 may occur in response to completion of rendering of the persistent content of the second session 189 (e.g., completion of playing of the video), completion of rendering of the transient content, and optionally after completion after a timeout. Other events may be considered to be an abort event for the second session 189, but do not constitute completion of the second session 189, such as an explicit input by the user to withdraw the second session 189 (e.g., a "stop" voiced utterance, a "back" touch input, an "X" or other withdrawal of touch input on an interactive graphical element). In many cases, the suspension of the second session 189 occurs without user input directly indicating whether the user wishes to return to the first session 187. Accordingly, embodiments described herein address this situation and may selectively, dynamically, and in a context sensitive manner, determine whether to return and automatically resume the first session 187 after the second session 189 is terminated.
Fig. 3 is a flow chart illustrating an example method 300 in accordance with embodiments disclosed herein. For convenience, the operations of the flow diagrams are described with reference to a system that performs the operations. The system may include various components of various computer systems, such as one or more components of a computing system implementing the automated assistant 120. Further, while the operations of method 300 are shown in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, or added.
At block 302, the system identifies content responsive to user interface input at the assistant device. For example, the user interface input can be a spoken utterance, and the system can identify content responsive to the spoken utterance. For example, in response to "play video X", a video corresponding to "video X" may be identified. As another example, the user interface input may be a touch interaction with a graphical element rendered on a touch-sensitive display of the assistant device, and the responsive content may be responsive to the graphical element. For example, the graphical element may be a recommendation for "video X," and "video X" is identified in response to interaction with the graphical element.
At block 304, the system renders the content during the first session 304. The system may render the content via a user interface output device of the assistant device, such as a display and/or speaker(s) of the assistant device. In various embodiments, the system renders content exclusively. That is, the system renders the content without rendering any content unrelated to the first session (missing content related to the incoming notification, which may be rendered briefly (optionally while pausing the content of the first session) to enable the user to affirmatively accept the notification). Rendering content during the first session 304 may occur through one or more conversational turns and/or over a long duration.
During rendering of the content during the first session, the system monitors for an abort of the first session at block 306. If there is an abort of the first session at block 306, the system may proceed to block 316 and transition the display of the assistant device to a home screen or an ambient screen, as described herein. In the event that the display is a home screen and the detected suspension of the first session at block 306 is incomplete and not undone, block 316 may include an iteration of optional block 317 in which a resume suggestion for the first session is rendered on the home screen. For example, in the event that an abort is detected at block 306 in response to the user speaking "pause" and a timeout occurring, a selectable graphical element may be rendered on the home screen, which if selected, causes resumption of the first session and continued execution of blocks 304, 306, and 308.
If there is no abort of the first session at block 306, the system may proceed to block 308 and determine whether interruption data has been received. Although depicted serially in fig. 3, it should be noted that, in various embodiments, blocks 306 and 308 may be performed in parallel and/or "on-demand" in response to receiving corresponding input. Further, blocks 304, 306, and 308 may all be performed in parallel. For example, block 304 may be performed continuously while blocks 306 and 308 are running in the background. If no interrupt data is received at block 308, the system returns to proceed to block 304 and rendering of the content continues during the first session 304 (e.g., without any interrupts).
If interrupt data is received at an iteration of block 308, the system proceeds to block 310 and renders the substitute content in a second session in place of the first session. The substitute content may be responsive to the interruption data. For example, the alternative content may be responsive to a spoken utterance associated with the interruption data, or may be responsive to a notification associated with the interruption data. In various implementations, the system renders the alternative content exclusively at block 310. That is, the system renders the substitute content without rendering any content unrelated to the second session (missing content related to the incoming notification, which may be rendered briefly (optionally while pausing the content of the first session) to enable the user to affirmatively accept the notification). Rendering the alternate content during the second session 310 may occur through one or more conversation rounds and/or over a long duration.
In some implementations of block 310, rendering the alternative content in the second session may replace the first session in response to determining that at least one required output modality for the alternative content (e.g., audible and/or visual) conflicts with at least one output modality used to render the first content in the first session. In some of those implementations, if the modalities are not conflicting (e.g., one of the alternative and first content is only audible and the other of the alternative and first content is only visual), block 314 may be skipped because the first session is not stalled because both the first session and the second session may occur simultaneously through different output modalities.
During rendering of the alternate content during the second session, the system monitors for an abort of the second session at block 312. When an abort of the second session is detected at an iteration of block 312, the system proceeds to block 314 and determines whether to resume the first session.
If the system determines at block 314 to resume the first session, the system returns to proceed to block 304 and optionally automatically resumes rendering content during the first session from a state of the first session corresponding to the state of the first session with the interruption data detected at block 308.
If the system determines at block 314 that the first session is not to resume, the system proceeds to block 316 and transitions the display of the assistant device to a home screen or an ambient screen, as described herein. In the case where the display is a home screen, block 316 may include an iteration of optional block 317 in which a resume suggestion for the first session and/or a resume suggestion for the second session is rendered on the home screen. For example, where the first session includes persistent content, an optional graphical element may be rendered on the home screen that, if selected, causes the first session to resume and blocks 304, 306, and 308 to continue execution. Further, for example, in the event that the second session includes persistent content and the second session termination of block 312 is incomplete or undone, a selectable graphical element may be rendered on the primary screen that, if selected, causes the second session to resume.
In various implementations, determining whether to resume the first session at block 314 may be based at least in part on one or more characteristics of the first session and/or one or more characteristics of the second session, such as whether content of the first session is persistent content or transient content and/or whether substitute content of the second session is persistent content or transient content. Although depicted serially in fig. 3, it should be noted that blocks 310, 312, and 314 may be performed in parallel in various embodiments. For example, block 310 may be performed continuously while block 312 is running continuously in the background, and the determination of block 314 may be predetermined in one iteration before block 312 occurs.
Fig. 4 illustrates the following example: rendering the first content 491 during the first session, rendering the substitute content 493 during the second session in response to receiving interruption data during the rendering of the first content during the first session, and automatically resuming the first session after the termination of the second session.
In FIG. 4, and as the topmost first client device 1061As represented, the first content 491 may be available at the first client device 106 in response to a user request to cause the automatic assistant 120 to facilitate wiring of the intelligent thermostat1Is rendered on the display. The first content 491 represents only a portion of a first content that is rendered during a first session and that is rendered during one of a plurality of session wheels of the first session to such a user request. It should be noted that, although not depicted, the corresponding audible content of the first sessionOr by the first client device 1061Rendering the speaker. Prior to the suspension of the first session, and while the first content 491 is being rendered, the user provides a spoken utterance 492 of "what's today's weather forecast is". Such spoken utterance 492 constitutes interruption data because it is a request for alternative content unrelated to the first session.
Responsive to the spoken utterance, and as an intermediate first client device 1061As represented, the automated assistant causes the rendering of the first content 491 to be replaced with the substitute content 493 in the second session. The substitute content 493 is responsive to the spoken utterance 492, replacing the first content 491, and is rendered exclusively by the display. It should be noted that, in various implementations, the audible alternative content of the second session may also be provided by the first client device 1061Rendering the speaker.
After the termination of the second session, and as a bottom-most first client device 1061The first session is shown as being automatically resumed. For example, the termination of the second session may occur in response to a timeout or in response to a user indicating completion via a user interface input (e.g., speaking "Done", swiping "back", etc.). In some implementations, the first session may be automatically resumed based at least in part on the first content 491 of the first session being classified as persistent content and the second content 493 of the second session being classified as transient content.
Fig. 5 illustrates the following example: rendering the first content 591 during the first session, rendering the alternate content 592 during the second session in response to receiving the interruption data during the rendering of the first content during the first session, and transitioning to an alternate state 595 after the suspension of the second session, in which the first session is suggested to resume but not automatically resumed.
In FIG. 5, and as the topmost first client device 1061As shown, the first content 591 may be at the first client device 106 in response to a user request to cause the automated assistant 120 to facilitate wiring of the intelligent thermostat1Is rendered on the display. The first content 591 may be similar to the first content 4 of fig. 491. Prior to the suspension of the first session, and while the first content 591 is being rendered, the user provides a spoken utterance 592 of "show me a video for making a mint juliep" (giving me a view of a video for making minty). This spoken utterance 592 constitutes interruption data because it is a request for alternative content unrelated to the first session.
Responsive to the spoken utterance, and as an intermediate first client device 1061As shown, the automated assistant causes rendering of the first content 591 to be replaced with the alternate content 593 in the second session. The alternative content 593 is responsive to the spoken utterance 592, replacing the first content 591, and is rendered exclusively by the display. In the example of fig. 5, the alternative content 593 is a persistent video related to making mint juliet, and the video is automatically played in response to the spoken utterance 592 constituting the interruption data.
After the termination of the second session, and as a bottom-most first client device 1061It is indicated that the first session is not automatically resumed. Alternatively, the client device 1061Is transitioned into an alternative "home" state 595 in which the first session is via graphical element 5951Is suggested to be restored, but is not automatically restored. If the graphical element 595 is selected by a touch input1The graphical element may cause the first session to resume. In some implementations, the first session can be classified as persistent content without being automatically restored based at least in part on the alternative content 593 of the second session. In some embodiments, graphical element 5951May be provided based at least in part on the first session content 591 of the first session being classified as persistent content. It should be noted that in the home state 595, other graphical elements 595 are also provided2And 5953These other graphical elements display the upcoming event and the local weather forecast, respectively, customized for the user.
Fig. 6 illustrates another example: rendering the first content 691 during the first session, rendering the substitute content 692 during the second session in response to receiving the interruption data during the rendering of the first content during the first session, and automatically resuming the first session after the suspension of the second session.
In FIG. 6, and as the topmost first client device 1061Represented, the first content 691 can be at the first client device 106 in response to a user request to cause the automated assistant 120 to facilitate routing of the intelligent thermostat1Is rendered on the display. The first content 691 may be similar to the first content 491 of fig. 4. Prior to the suspension of the first session, and while the first content 691 is being rendered, the user provides a spoken utterance 692 of "show me a video for distinguishing ground and neutral video". Such spoken utterance 692 constitutes interruption data because it is a request for alternative content that is not related to the first session. For example, such spoken utterances do not result in continued presentation of the first content from the first session, but rather constitute requests for alternative content that is not included in the first content.
Responsive to the spoken utterance, and as an intermediate first client device 1061As represented, the automated assistant causes the rendering of the first content 691 to be replaced with the substitute content 693 in the second session. The alternative content 693 is responsive to the spoken utterance 692, replacing the first content 691, and is rendered exclusively by the display. In the example of fig. 6, the substitute content 693 is a persistent video related to distinguishing between grounded and neutral wires, and the video is automatically played in response to a spoken utterance 692 constituting the interruption data.
After the termination of the second session, and as a bottom-most first client device 1061The first session is shown as being automatically resumed. In the example of fig. 6, the first session is automatically resumed, although the alternate content of the second session is classified as persistent content. In some implementations, when the alternative content of the second session is classified as persistent content, the first session is not automatically resumed unless one or more other conditions exist. Such additional conditions exist in the example of fig. 6. That is, an additional condition may be that it is determined that the content of the previous first session embodies one or more entities, such as a "wire" entity and/or a thinner "ground" entity and/or a "neutral wire" entity, and that the entity of the first session is in contact with the second sessionThere is a defined relationship between the alternative content of the session. For example, the relationship may be that the video of the second session also embodies a "wire" entity and/or a thinner "ground" entity and/or a "neutral wire" entity. Determining that such an entity is embodied by the first content of the first session and/or the substitute content of the second session may be based on the content and the terms, titles, and/or other characteristics of the substitute content, and may optionally be based on a reference to a knowledge graph, such as the knowledge graph described above. For example, an entity tagger of the natural language processor 122 (fig. 1) may tag such entities based on text associated with the first content and the alternative content.
Fig. 7 illustrates the following example: rendering the first content 791 during the first session, rendering the alternate content 793 during the second session in response to receiving interruption data during the rendering of the first content during the first session, and transitioning to an alternate state after the suspension of the second session, in which the first session is not automatically resumed and is not suggested to resume.
In FIG. 7, and as the topmost first client device 1061As shown, the first content 791 may be responsive to a user spoken utterance at the first client device 106 of "how high the empire state building is1Is rendered on the display. The first content 791 is transient content and represents the entirety of the first content rendered during the first session (absent corresponding audio content that may optionally be rendered simultaneously). Prior to the suspension of the first session, and while the first content 791 is rendered, the user provides a spoken utterance 792 of "what's today's weather for instance". Such spoken utterance 792 constitutes interruption data because it is a request for alternative content that is not related to the first session.
Responsive to the spoken utterance, and as an intermediate first client device 1061As represented, the automated assistant causes the rendering of the first content 791 to be replaced with the alternate content 793 in the second session. The alternative content 793 is responsive to the spoken utterance 792, replaces the first content 791, and is rendered exclusively by the display.
In the second sessionEnd, and as the bottommost first client device 1061It is indicated that the first session is not automatically resumed. Alternatively, the client device 1061Is transitioned into an alternative "home" state 795 in which the first session is not automatically resumed and is not suggested to be resumed via any graphical element. In some implementations, the first session can be classified as transient content without being automatically restored and without being suggested for restoration based at least in part on the first session content 791 of the first session. It should be noted that in the home state 795, a graphical element 795 is also provided1And 7952These graphical elements show the upcoming event and the local weather forecast, respectively, customized for the user.
Fig. 8 illustrates another example: rendering the first content 891 during the first session, rendering the substitute content 893 during the second session in response to receiving the interruption data during the rendering of the first content during the first session, and automatically resuming the first session after the suspension of the second session.
In FIG. 8, and as the topmost first client device 1061As represented, the first content 891 may be at the first client device 106 in response to a user request to cause the automatic assistant 120 to facilitate wiring of the intelligent thermostat1Is rendered on the display. Prior to the suspension of the first session, and while the first content 891 is being rendered, the notification 897 is temporarily rendered over the first content 891 during the first session. Notification 897 informs the user of available movement score updates. As indicated in fig. 8, the user "clicks" on the notification 897 constituting the interruption data.
Responsive to interrupt data, and as in the middle, the first client device 1061As shown, the automated assistant causes the rendering of the first content 891 to be replaced with the substitute content 893 in the second session. The alternative content 893 is responsive to the notification 897 and includes additional visual and optional content related to the update of the movement score of the notification. The substitute content 893 replaces the first content 891 and is rendered exclusively by the display.
After the termination of the second session, and as a bottom-most first client device 1061The first session is shown as being automatically resumed. For example, the suspension of the second session may occur in response to a timeout, in response to a user indicating completion via a user interface input (e.g., speaking "Done," sliding "back," etc.). In some implementations, the first session may be automatically resumed based at least in part on the first content 891 of the first session being classified as persistent content and the second content 893 of the second session being classified as transient content.
Fig. 9 is a block diagram of an example computing device 910, which example computing device 910 may optionally be used to perform one or more aspects of the techniques described herein. In some implementations, one or more of the client computing device, the user-controlled resource engine 130, and/or other components can include one or more components of the example computing device 910.
The computing device 910 typically includes at least one processor 914 that communicates with a number of peripheral devices via a bus subsystem 912. These peripheral devices may include storage subsystems 924 including, for example, memory subsystem 925 and file storage subsystem 926; a user interface output device 920; a user interface input device 922, and a network interface subsystem 916. The input and output devices allow a user to interact with the computing device 910. Network interface subsystem 916 provides an interface to external networks and couples to corresponding interface devices in other computing devices.
User interface input device 922 may include a keyboard; a pointing device such as a mouse, trackball, touchpad, or tablet; a scanner; a touch screen incorporated into the display; an audio input device such as a voice recognition system; a microphone; and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computing device 910 or a communication network.
User interface output devices 920 may include a display subsystem, a printer, a fax machine, or a non-visual display such as an audio output device. The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or other mechanism for creating a visual image. The display subsystem may also provide non-visual displays, such as via an audio output device. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computing device 910 to a user or to another machine or computing device.
These software modules are typically executed by processor 914 alone or in combination with other processors. Memory 925 used in storage subsystem 924 may include a number of memories, including a main Random Access Memory (RAM)930 for storing instructions and data during program execution and a Read Only Memory (ROM)932 for storing fixed instructions. File storage subsystem 926 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical disk drive, or removable media cartridges. Modules implementing the functionality of certain embodiments may be stored by file storage subsystem 926 within storage subsystem 924 or in other machines accessible to processor 914.
The bus subsystem 912 provides a mechanism for the various components and subsystems of the computing device 910 to communicate with one another as intended. Although the bus subsystem 912 is shown schematically as a single bus, alternative embodiments of the bus subsystem may use multiple buses.
The computing device 910 can be of various types, including a workstation, a server, a computing cluster, a blade server, a server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computing device 910 depicted in FIG. 9 is intended only as a specific example for purposes of illustrating some embodiments. Many other configurations of the computing device 910 are possible with more or fewer components than the computing device depicted in fig. 9.
Certain embodiments discussed herein may provide a user with one or more opportunities to control whether to collect information, whether to store personal information, whether to use personal information, and how to collect, store, and use information about the user in the event that personal information about the user (e.g., user data extracted from other electronic communications, information about the user's social network, the user's location, the user's time, the user's biometric information, as well as the user's activities and demographic information, relationships between users, etc.) is collected or used. That is, the systems and methods discussed herein collect, store, and/or use a user's personal information only after receiving explicit authorization to do so from the relevant user.
For example, the user is provided with control over whether the program or feature collects user information about that particular user or other users related to the program or feature. Each user for whom personal information is to be collected is presented with one or more options to allow control of information collection in relation to that user to provide permission or authorization as to whether information is collected and what portions of the information are to be collected. For example, one or more such control options may be provided to the user over a communications network. In addition, some data may be processed in one or more ways before it is stored or used, so that personally identifiable information is deleted. As one example, the identity of the user may be processed such that personally identifiable information cannot be determined. As another example, the geographic location of the user may be generalized to a larger area such that a particular location of the user cannot be determined.
Claims (19)
1. A method implemented using one or more processors, comprising:
receiving spoken utterance data indicative of a spoken utterance of a user detected via one or more microphones of a client device;
identifying, based on the spoken utterance data, first content responsive to the spoken utterance of the user;
in response to receiving the spoken utterance data, cause the client device to render at least a portion of the first content during a first session;
receiving interruption data during rendering of the first content by the client device during the first session, the interruption data received in response to another user interface input of the user detected during rendering of the first content during the first session;
in response to receiving the interruption data, cause the client device to render alternate content during a second session that at least temporarily replaces the first session, wherein the alternate content is different from the first content, and wherein causing the client device to render the alternate content during the second session comprises causing the client device to render the alternate content in place of the first content;
determining whether to perform the following after the termination of the second session:
cause the client device to automatically resume the first session, or
Transitioning the client device to an alternate state in which the client device does not automatically resume the first session,
wherein the determination is based at least on one or more characteristics of the first session; and
selectively causing the client device to automatically resume the first session or transition to the alternative state in which the first session is not automatically resumed upon suspension of the second session, wherein the selectively causing is dependent on the determination.
2. The method of claim 1, wherein the at least one characteristic of the first session on which the determination is based comprises a classification assigned to the first content.
3. The method of claim 2, wherein the classification assigned to the first content indicates whether the first content is transient or persistent.
4. The method of claim 3, wherein the determining comprises determining to transition the client device to the alternate state in which the client device does not automatically resume the first session based on the classification assigned to the content indicating that the first content is transient.
5. The method of claim 3, wherein the determining is further based on one or more characteristics of the second session.
6. The method of claim 5, wherein at least one characteristic of the second session indicates whether the alternative content is transient or persistent.
7. The method of claim 6, wherein the determining comprises determining to cause the client device to automatically resume the first session based on the classification assigned to the first content indicating that the first content is persistent and at least one characteristic of the second session indicating that the alternate content is transient.
8. The method of claim 6, wherein the determining comprises determining to transition the client device to the alternative state in which the client device does not automatically resume the first session based on the classification assigned to the first content indicating that the content is persistent and at least one characteristic of the second session indicating that the alternative content is persistent.
9. The method of any preceding claim, wherein the another user interface input is another spoken utterance of the user, and further comprising:
determining that the other spoken input is interruptive data based on the other spoken input comprising a request for the alternative content and the alternative content being different from the first content of the first session.
10. The method of claim 1 or claim 9, wherein the at least one characteristic of the first session on which the determination is based comprises an entity implemented by the first content, and the determination comprises determining to cause the client device to automatically resume the first session based on determining a relationship between the alternative content and the entity implemented by the first content.
11. The method of any of claims 1 to 8, further comprising:
receiving, during rendering of the first content by the client device during the first session, a notification to be rendered at the client device;
in response to receiving the notification, causing the client device to render the notification;
wherein the other user interface input is an affirmative touch or verbal input of the user provided in response to the client device rendering the notification,
wherein the affirmative input by the user indicates a desire of the user to interact with the notification, an
Wherein the alternative content is based on the notification.
12. The method of any preceding claim, further comprising:
storing first session state data for the first session, the first session state data indicating a state of the first session when the interruption data is received;
wherein causing the client device to automatically resume the first session comprises using the first session state data to resume the first session at the state of the first session when the interruption data is received.
13. The method of claim 1, wherein the determining comprises determining to transition the client device to the state in which the client device does not automatically resume the first session, and further comprising:
clearing session data for the first session from a memory of the client device or a remote server in network communication with the client device.
14. The method of claim 1, wherein the client device includes a display and at least one speaker, and wherein rendering the content comprises rendering the content via the display and the at least one speaker.
15. The method of any preceding claim, wherein the alternative state in which the client device does not automatically resume the first session comprises display of a home screen or an ambient screen.
16. The method of claim 15 wherein the display of the home screen or the environmental screen lacks any reference to the first session.
17. The method of claim 15 wherein the display of the home screen or the environmental screen includes a selectable graphical interface element that is selectable to resume the first session.
18. A system comprising one or more processors and memory operably coupled to the one or more processors, wherein the memory stores instructions that, in response to execution of the instructions by the one or more processors, cause the one or more processors to perform the method of any of the preceding claims.
19. At least one non-transitory computer-readable medium comprising instructions that, in response to execution of the instructions by one or more processors, cause the one or more processors to perform the method of any one of claims 1-17.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862668151P | 2018-05-07 | 2018-05-07 | |
US62/668,151 | 2018-05-07 | ||
PCT/US2019/030271 WO2019217178A1 (en) | 2018-05-07 | 2019-05-01 | Determining whether to automatically resume first automated assistant session upon cessation of interrupting second session |
Publications (1)
Publication Number | Publication Date |
---|---|
CN112867985A true CN112867985A (en) | 2021-05-28 |
Family
ID=66530517
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980037325.8A Pending CN112867985A (en) | 2018-05-07 | 2019-05-01 | Determining whether to automatically resume a first automated assistant session after interrupting suspension of a second session |
Country Status (6)
Country | Link |
---|---|
US (3) | US11217247B2 (en) |
EP (2) | EP3590036B1 (en) |
JP (3) | JP7135114B2 (en) |
KR (2) | KR102508338B1 (en) |
CN (1) | CN112867985A (en) |
WO (1) | WO2019217178A1 (en) |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102508338B1 (en) | 2018-05-07 | 2023-03-10 | 구글 엘엘씨 | Determining whether to automatically resume the first automated assistant session when the second session interrupts |
US11288347B2 (en) * | 2019-03-07 | 2022-03-29 | Paypal, Inc. | Login from an alternate electronic device |
US11748660B2 (en) * | 2020-09-17 | 2023-09-05 | Google Llc | Automated assistant training and/or execution of inter-user procedures |
US11368544B2 (en) * | 2020-10-30 | 2022-06-21 | Capital One Services, Llc | Scalable server-based web scripting with user input |
JP7420109B2 (en) * | 2021-04-08 | 2024-01-23 | トヨタ自動車株式会社 | Information output system, server device and information output method |
US11736420B2 (en) | 2021-12-16 | 2023-08-22 | International Business Machines Corporation | Management and organization of computer based chat type conversations |
WO2024058027A1 (en) * | 2022-09-13 | 2024-03-21 | 株式会社デンソー | Onboard device, center device, vehicle control program, and vehicle control method |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140244712A1 (en) * | 2013-02-25 | 2014-08-28 | Artificial Solutions Iberia SL | System and methods for virtual assistant networks |
CN105634760A (en) * | 2015-12-29 | 2016-06-01 | 腾讯科技（深圳）有限公司 | Method and apparatus for communication between official account and user |
CN107957776A (en) * | 2016-10-14 | 2018-04-24 | 谷歌公司 | active virtual assistant |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3738923B2 (en) | 1996-09-30 | 2006-01-25 | マツダ株式会社 | Navigation device |
JP4593018B2 (en) | 2001-06-22 | 2010-12-08 | 三菱電機株式会社 | Mobile communication system, handover control method, car navigation device, roadside machine, and roadside machine control server |
JP2004108908A (en) | 2002-09-18 | 2004-04-08 | Denso Corp | Navigation system operating in concert with audio system |
US20070211875A1 (en) * | 2006-03-07 | 2007-09-13 | Nokia Corporation | Method of controlling an electronic device using audio inputs |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
JP4935392B2 (en) * | 2007-02-07 | 2012-05-23 | 富士通株式会社 | Output arbitration program and device |
US10276170B2 (en) | 2010-01-18 | 2019-04-30 | Apple Inc. | Intelligent automated assistant |
WO2012137933A1 (en) | 2011-04-07 | 2012-10-11 | エイディシーテクノロジー株式会社 | Message transmission system and message transmission application |
US20140046891A1 (en) * | 2012-01-25 | 2014-02-13 | Sarah Banas | Sapient or Sentient Artificial Intelligence |
US9767799B2 (en) | 2013-05-21 | 2017-09-19 | Mitsubishi Electric Corporation | Voice recognition system and recognition result display apparatus |
US9116952B1 (en) | 2013-05-31 | 2015-08-25 | Google Inc. | Query refinements using search data |
US9547690B2 (en) | 2014-09-15 | 2017-01-17 | Google Inc. | Query rewriting using session information |
US10671954B2 (en) * | 2015-02-23 | 2020-06-02 | Google Llc | Selective reminders to complete interrupted tasks |
US9886953B2 (en) | 2015-03-08 | 2018-02-06 | Apple Inc. | Virtual assistant activation |
US10567477B2 (en) * | 2015-03-08 | 2020-02-18 | Apple Inc. | Virtual assistant continuity |
US10089262B2 (en) * | 2015-06-19 | 2018-10-02 | Sap Se | Reduced overhead safepoint mechanism using signals |
US10311875B2 (en) * | 2016-12-22 | 2019-06-04 | Soundhound, Inc. | Full-duplex utterance processing in a natural language virtual assistant |
US10930276B2 (en) * | 2017-07-12 | 2021-02-23 | Universal Electronics Inc. | Apparatus, system and method for directing voice input in a controlling device |
KR102508338B1 (en) | 2018-05-07 | 2023-03-10 | 구글 엘엘씨 | Determining whether to automatically resume the first automated assistant session when the second session interrupts |
-
2019
- 2019-05-01 KR KR1020207034930A patent/KR102508338B1/en active IP Right Grant
- 2019-05-01 EP EP19724009.6A patent/EP3590036B1/en active Active
- 2019-05-01 EP EP22196579.1A patent/EP4130975A1/en active Pending
- 2019-05-01 JP JP2020562772A patent/JP7135114B2/en active Active
- 2019-05-01 US US16/618,920 patent/US11217247B2/en active Active
- 2019-05-01 KR KR1020237007650A patent/KR20230035157A/en not_active Application Discontinuation
- 2019-05-01 CN CN201980037325.8A patent/CN112867985A/en active Pending
- 2019-05-01 WO PCT/US2019/030271 patent/WO2019217178A1/en unknown
-
2021
- 2021-12-16 US US17/552,887 patent/US11830491B2/en active Active
-
2022
- 2022-08-30 JP JP2022136801A patent/JP7384976B2/en active Active
-
2023
- 2023-08-28 US US18/238,898 patent/US20230402035A1/en active Pending
- 2023-11-09 JP JP2023191862A patent/JP2024020343A/en active Pending
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140244712A1 (en) * | 2013-02-25 | 2014-08-28 | Artificial Solutions Iberia SL | System and methods for virtual assistant networks |
CN105634760A (en) * | 2015-12-29 | 2016-06-01 | 腾讯科技（深圳）有限公司 | Method and apparatus for communication between official account and user |
CN107957776A (en) * | 2016-10-14 | 2018-04-24 | 谷歌公司 | active virtual assistant |
Also Published As
Publication number | Publication date |
---|---|
JP7135114B2 (en) | 2022-09-12 |
EP3590036B1 (en) | 2022-10-26 |
KR20230035157A (en) | 2023-03-10 |
WO2019217178A1 (en) | 2019-11-14 |
JP7384976B2 (en) | 2023-11-21 |
KR102508338B1 (en) | 2023-03-10 |
KR20210002724A (en) | 2021-01-08 |
US20230402035A1 (en) | 2023-12-14 |
US20220108696A1 (en) | 2022-04-07 |
EP3590036A1 (en) | 2020-01-08 |
US20210065701A1 (en) | 2021-03-04 |
EP4130975A1 (en) | 2023-02-08 |
JP2021522613A (en) | 2021-08-30 |
JP2024020343A (en) | 2024-02-14 |
US11830491B2 (en) | 2023-11-28 |
US11217247B2 (en) | 2022-01-04 |
JP2022191216A (en) | 2022-12-27 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7032504B2 (en) | Automatic assistant with meeting ability | |
CN110785763B (en) | Automated assistant-implemented method and related storage medium | |
JP7384976B2 (en) | determining whether to automatically resume the first automated assistant session upon termination of the interrupting second session; | |
KR102567447B1 (en) | Transitioning between prior dialog contexts with automated assistants | |
US11347801B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
US11735182B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
EP3926625B1 (en) | Voice to text conversion based on third-party agent content | |
US11200893B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
KR20210008521A (en) | Dynamic and/or context-specific hot words to invoke automated assistants | |
JP7471371B2 (en) | Selecting content to render on the assistant device's display |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
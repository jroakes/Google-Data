CN110720027A - Multi-mode guidance with ride service segments in navigation applications - Google Patents
Multi-mode guidance with ride service segments in navigation applications Download PDFInfo
- Publication number
- CN110720027A CN110720027A CN201880038194.0A CN201880038194A CN110720027A CN 110720027 A CN110720027 A CN 110720027A CN 201880038194 A CN201880038194 A CN 201880038194A CN 110720027 A CN110720027 A CN 110720027A
- Authority
- CN
- China
- Prior art keywords
- ride
- user
- ride service
- location
- map
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims description 69
- 238000012800 visualization Methods 0.000 claims description 16
- 238000005457 optimization Methods 0.000 claims description 5
- 239000008186 active pharmaceutical agent Substances 0.000 abstract 2
- 238000013507 mapping Methods 0.000 description 20
- 230000004044 response Effects 0.000 description 19
- 238000010586 diagram Methods 0.000 description 18
- 230000006870 function Effects 0.000 description 13
- 238000004891 communication Methods 0.000 description 11
- 238000012790 confirmation Methods 0.000 description 9
- 230000007704 transition Effects 0.000 description 9
- 230000002452 interceptive effect Effects 0.000 description 7
- 239000003086 colorant Substances 0.000 description 5
- 230000008569 process Effects 0.000 description 4
- 238000009877 rendering Methods 0.000 description 4
- 230000001351 cycling effect Effects 0.000 description 3
- 230000002085 persistent effect Effects 0.000 description 3
- 238000011084 recovery Methods 0.000 description 3
- 230000015572 biosynthetic process Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000005755 formation reaction Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000012545 processing Methods 0.000 description 2
- 238000012552 review Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 238000007792 addition Methods 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000011161 development Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000007613 environmental effect Effects 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000008054 signal transmission Effects 0.000 description 1
- 239000004984 smart glass Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/02—Reservations, e.g. for tickets, services or events
- G06Q10/025—Coordination of plural reservations, e.g. plural trip segments, transportation combined with accommodation
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3407—Route searching; Route guidance specially adapted for specific applications
- G01C21/3423—Multimodal routing, i.e. combining two or more modes of transportation, where the modes can be any of, e.g. driving, walking, cycling, public transport
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3407—Route searching; Route guidance specially adapted for specific applications
- G01C21/3438—Rendez-vous, i.e. searching a destination where several users can meet, and the routes to this destination for these users; Ride sharing, i.e. searching a route such that at least two users can share a vehicle for at least part of the route
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/02—Reservations, e.g. for tickets, services or events
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/04—Forecasting or optimisation specially adapted for administrative or management purposes, e.g. linear programming or "cutting stock problem"
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/04—Forecasting or optimisation specially adapted for administrative or management purposes, e.g. linear programming or "cutting stock problem"
- G06Q10/047—Optimisation of routes or paths, e.g. travelling salesman problem
-
- G06Q50/40—
Abstract
To provide ride services within a map application in a client computing device without directing a user to a separate ride service application, the map application calls one or more ride service APIs to access ride service data from various ride service providers. For example, the map application receives a request for travel guidance to a destination and generates multi-mode travel guidance that includes route segments where the mode of transportation serves a ride. The map application invokes the ride service APIs to retrieve price estimates, estimated wait times, or any other suitable information related to the ride service route segments. Accordingly, the map application provides the user with multi-way travel guidance that includes information about the ride service route segments.
Description
Technical Field
The present disclosure relates to inter-application communication, and more particularly, to inter-application communication between a mapping application and a ride service application.
Background
Today, digital maps of geographic areas are commonly displayed on computing devices (such as computers, tablets, and mobile phones) via map applications, web browsers, and the like. Many map applications provide users with the ability to select the type of features or map information to view and to adjust the display of a digital map.
In addition, map application providers provide Application Programming Interfaces (APIs) for accessing maps and navigation data to display digital maps and provide step-by-step navigation directions to destination locations. For example, the ride service application may call a map application API to provide a digital map of a geographic area that includes a pickup location, a destination location of the user, navigation directions to travel to the destination location, and the like.
Disclosure of Invention
To provide ride services within the map application without directing the user to a separate ride service application, the map application calls one or more ride service APIs to access ride service data from various ride service providers. For example, a user may request navigation directions to a destination location within a mapping application. The user may then select from several transportation modes (including a ride mode) to travel to the destination location. When the user selects the riding service mode, the map application can communicate with various riding service applications by calling the corresponding riding service API. The map application communicates with the ride service application and/or the ride service server to retrieve an indication of the type of ride service provided by each ride service provider. The types of ride services may include a ride share ride service where a ride service provider takes other passengers en route to a user destination, a taxi service where no other passengers are taken en route to a user destination, a limousine service that includes additional features within the vehicle, an ultra-large vehicle service for taking a large group of passengers, and so forth. The map application may also communicate with the ride service application to retrieve price estimates for each type of ride service, wait times for each type of ride service, ride duration for each type of ride service, ride status information regarding travel status (e.g., waiting for a driver to accept a ride, waiting for a driver to arrive at a pickup location, riding in progress, riding completed), number of vehicles within a geographic area around the user's current location, etc. In some scenarios, the ride service application map need not be downloaded to the user's client device, but rather the map application calls a corresponding ride service API to communicate with the ride service server.
The user may then select a ride service provider and type of ride service directly from the map application to order the transportation service to her destination location. In this manner, the user may select from a plurality of candidate ride service providers within the map application without having to open each corresponding ride service application for comparison and without having to leave the map application. Further, the user can identify the pickup location and the destination location in an application having a built-in map function. For example, the user may view a three-dimensional street level view of the area around the pickup location so that the user can easily find the driver at the pickup location. The map application may also provide recommendations regarding pickup locations based on the user's environment and location, as well as walking guidance from the user's current location to the pickup location.
In particular, an example embodiment of the technology of the present disclosure is a method in a computing device for providing multi-mode (multi-modal) travel guidance. The method includes receiving, via a user interface, a request to obtain travel directions to a destination, and generating a multi-way travel direction for traveling to the destination. Generating the multi-mode travel guidance includes obtaining, from a third party provider of a ride service defining a first mode of transportation, an indication of a ride across a first segment of a route between a pickup location and a drop off location, and obtaining navigation guidance that uses a second mode of transportation different from the first mode to traverse a second segment of the route. The method also includes providing, via the user interface, an indication of the generated multi-way guidance.
Another example embodiment is a computing device comprising a user interface, one or more processors, and a non-transitory computer-readable medium storing instructions thereon. When executed by one or more processors, the instructions cause a computing device to receive, via a user interface, a request to obtain travel directions to a destination and generate a multi-way travel direction for traveling to the destination. To generate a multi-mode travel guidance, the instructions cause the computing device to obtain, from a third party provider of a ride service defining a first mode of transportation, an indication of a ride across a first segment of a route between a pickup location and a drop-off location, and obtain navigation guidance across a second segment of the route using a second mode of transportation different from the first mode of transportation. The instructions also cause the computing device to provide, via the user interface, an indication of the generated multi-way directions.
Yet another example embodiment is a method in a computing device for providing multi-way travel guidance. The method comprises the following steps: providing an interactive digital map via a user interface; receiving, via a user interface, a request to obtain travel directions to a destination; and obtaining an indication of a ride from the pickup location to the drop-off location across at least a portion of the route from a third party provider of the ride service. The method further comprises the following steps: the method further includes receiving visualization information from a third party provider of the ride service for rendering a visualization of the ride on the digital map, and generating the visualization of the ride on the digital map from the received visualization information.
Another example embodiment is a computing device comprising a user interface, one or more processors, and a non-transitory computer-readable medium storing instructions thereon. When executed by one or more processors, the instructions cause a computing device to provide an interactive digital map via a user interface; receiving, via a user interface, a request to obtain travel directions to a destination; and obtaining an indication of a ride from the pickup location to the drop-off location across at least a portion of the route from a third party provider of the ride service. The instructions also cause the computing device to receive visualization information from a third party provider of the ride service for rendering a visualization of the ride on the digital map, and generate a visualization of the ride on the digital map from the received visualization information.
Another example embodiment is a method in a portable computing device for providing ride service information on a digital map. The method comprises the following steps: providing, via a user interface, an interactive digital map of a geographic area; receiving, via a user interface, a request to obtain travel directions to a destination; and requesting respective indications of candidate rides for at least a portion of the route to the destination from a plurality of third party providers of ride services, each indication comprising a pickup location, a price estimate, and a pickup time. The method further comprises the following steps: receiving a requested indication of a candidate ride; determining a ranking of the candidate ride based on at least one of price and pickup time; the method further includes providing a list of candidate rides on the digital map according to the determined ranking, and in response to selecting one of the candidate rides via the user interface, sending a request for the selected ride to a corresponding third party provider.
Yet another example embodiment is a method in a portable computing device for providing map data related to ride services on the computing device. The method comprises the following steps: providing an interactive two-dimensional digital map via a user interface; receiving, via a user interface, a request to obtain travel directions to a destination; and obtaining an indication of a ride from the pickup location to the drop-off location across at least a portion of the route from a third party provider of the ride service. The method further comprises the following steps: obtaining a street level image of a pickup location; displaying the obtained street-level image of the pickup position on a digital map; and responsive to detecting selection of the street level image via the user interface, converting the two-dimensional digital map into an interactive three-dimensional panoramic display of the street level image.
Drawings
FIG. 1 is a block diagram of an example system in which techniques for providing ride services to portable devices via a mapping application may be implemented;
FIG. 2 is a block diagram of an example portable device that may operate in the system of FIG. 1;
FIG. 3 is an exemplary sequence diagram illustrating an exemplary exchange of information between a mapping application and a ride service application in response to user input provided to the mapping application;
FIG. 4 is an exemplary flow chart for transitioning between user interfaces during a ride service request within a mapping application;
FIG. 5 is an exemplary state diagram for requesting a ride service via a map application by calling a ride service API;
FIG. 6 is an exemplary flow diagram of a multi-way route for generating a recommendation from a departure location to a destination location;
FIG. 7 is an exemplary flow diagram for providing ride services within a map application without guiding a user to a separate ride service application;
FIG. 8 is an exemplary flow chart for presenting ride status information when a user transitions to other map functions;
FIG. 9 is an exemplary display for selecting a ride service provider in a mapping application;
FIG. 10 is an exemplary display for selecting a pickup location in a mapping application;
FIG. 11A is an exemplary ride request display in a mapping application that includes a layout component customized by a ride service provider;
FIG. 11B is another exemplary ride request display in a mapping application that includes a layout component customized by a ride service provider;
FIG. 12A is an exemplary pickup request display for confirming a ride in a map application;
FIG. 12B is another exemplary pickup request display for confirming a ride in a map application;
FIG. 12C is yet another exemplary pickup request display for confirming a ride in a map application;
FIG. 13A is an exemplary waiting ride display presented in a mapping application as a user waits for pick-up by a ride service provider;
FIG. 13B is another exemplary waiting ride display presented in a mapping application.
Detailed Description
Overview
In general, techniques for providing ride services within a map application may be implemented in a map application running in a portable computing device or wearable device, one or more network servers, or a system including a combination of these devices. However, for clarity, the following examples focus primarily on embodiments in which a user requests a ride service via a map application within a portable computing device. The map application invokes one or more ride service APIs to communicate with the respective ride service application and/or ride service server. The map application may also communicate with a map data server and/or a navigation data server to retrieve map and navigation data for displaying an interactive two-dimensional digital map of a geographic area around the user's current location and navigation directions to a user-selected destination location (also referred to herein as a "drop-off location").
The map application may then display ride service data for one or more ride service providers, including the type of ride service provided by each ride service provider, a price estimate for each type of ride service, a wait time for each type of ride service, a ride duration for each type of ride service, vehicles within a geographic area around the user's current location, and so forth.
When the user selects the ride service provider and the type of ride service, the map application may prompt the user to select a pick-up location (pick-up-location). In some embodiments, the map application provides a default pickup location near the user's current location, and the user can adjust the pickup location via a user control. Also in some embodiments, the map application may provide a recommended pickup location based on the user's current location and environmental information. For example, in an area with multiple one-way lanes, the map application may recommend pickup locations at streets that allow the driver to travel in the direction of the destination location, so that the driver does not need to make unnecessary turns after picking up the user. In another example, a recommended pickup location may be determined based on traffic volume to avoid heavily trafficked streets, thereby minimizing costs.
In response to receiving the selection of the pickup location, the map application may invoke a ride service API corresponding to the selected ride service provider and provide the passenger identification information of the user, the requested pickup location, and the type of ride service to the corresponding ride service application. The ride service application may then provide the ride identifier, the updated wait time, the updated price estimate, the updated ride duration, and the driver identification information for display on the map application via the ride service API. As a result, the driver can pick up the user at the requested pickup position and get off the user at the destination position.
Example hardware and software Components
Referring to fig. 1, an example communication system 100 in which the techniques outlined above may be implemented includes a client computing device 102, such as a portable device configured to execute one or more ride service applications 126 and a map application 128. In addition to the client computing device 102, the communication system 100 also includes a server device 104, such as a navigation server device, configured to provide map display and navigation data to the client computing device 102. The communication system 100 also includes a third party provider device 106 (which operates independently and separately from the server device 104), which third party provider device 106 can be configured to communicate with the client computing device 102 and the server device 104 for the purpose of providing ride service functionality. The client computing device 102, the server device 104, and the third party provider device 106 may be communicatively connected to each other over a network 108. The network 108 may be a public network, such as the internet, or a private network, such as an intranet.
The server device 104 may be communicatively coupled to a database 110, the database 110 storing map data for various geographic regions in an example embodiment. Similarly, the server device 104 may be communicatively coupled to a database 144, which database 144 in an example embodiment stores vehicle data 144 for various vehicles associated with a user of the client computing device 102, vehicles associated with third party providers 106, other vehicles whose data is collected by the server device 104 or other servers, or a combination of all three. More generally, the server device 104 may communicate with one or more databases that store any type of suitable geospatial information or information that may be linked to a geographic environment, such as coupons or offers (offer). The server device 104 may also be communicatively coupled to a database (not shown) that, in an example embodiment, stores navigation data including step-by-step navigation directions, such as driving, walking, cycling, or public transportation directions, which may be ultimately utilized by, for example, the ride service application 126, the map application 128, or both. For example, the server device 104 may request and receive map data from the map data database 110 and related vehicle data from the vehicle data database 144. In some implementations, the server device 104 can include a plurality of communicatively connected server devices. Similarly, the map data and vehicle data stored in databases 110 and 144, respectively, may actually be multiple databases communicatively connected in a cloud database configuration.
In an example implementation, the client computing device 102 may be, for example, a smartphone or tablet computer, and includes memory 120, one or more processors 112, a network interface 116, a User Interface (UI)114, and one or more sensors 118. Memory 120 may be non-transitory memory and may include one or more suitable memory modules, such as Random Access Memory (RAM), Read Only Memory (ROM), flash memory, other types of persistent storage, and the like. The UI 114 may be, for example, a touch screen. More generally, the techniques of this disclosure may be implemented in other types of devices, such as laptop or desktop computers, devices embedded in a vehicle (such as a head unit), wearable devices (such as smart watches or smart glasses), and so forth.
Depending on the implementation, the one or more sensors 118 may include a Global Positioning System (GPS) module to detect a location of the client computing device 102, a compass to determine an orientation of the client computing device 102, a gyroscope to determine rotation and tilt, an accelerometer, and so forth.
The memory 120 stores an Operating System (OS)122, which may be any type of suitable mobile or general-purpose operating system. The OS122 may include API functionality that allows applications, such as the ride service application 126 and the map application 128, to interface with each other or retrieve sensor readings, for example. For example, a software application configured to execute on the client computing device 102 may include instructions that call the OS122API to retrieve the current location and orientation of the client computing device 102 at that time. The API may also return a quantitative indication (e.g., as a percentage) of how certain the API is estimating.
The memory 120 also stores a map application 128 configured to generate an interactive digital map. The map application 128 may receive map data in a grid (e.g., bitmap) or non-grid (e.g., vector graphics) format from the map data database 110 and/or the server device 104. In some cases, the map data may be organized into layers, such as a base layer depicting roads, streets, natural formations (formations), etc., a traffic layer depicting current traffic conditions, a weather layer depicting current weather conditions, a navigation layer depicting a path to a destination, etc. The map application 128 may also display navigation directions from a departure location to a destination location. The navigation directions may include driving, walking, or public transportation directions.
Note that although fig. 1 illustrates the map application 128 as a standalone application, the functionality of the map application 128 may also be provided in the form of an online service accessible via a web browser executing on the client computing device 102, as a plug-in or extension to another software application executing on the client computing device 102, or the like. The map application 128 may generally be provided in different versions for different respective operating systems. For example, client computingThe manufacturer of the device 102 may provide for including for Android (Android)TM) Software Development Kit (SDK) for map application 128 of platform for iOSTMAnother SDK for the platform, etc.
In some implementations, the server device 104 includes one or more processors 130, an API132, a network interface 134, and a memory 136. The API132 may provide functionality for interfacing with applications that may be stored in a memory 136 on the server device 104. The memory 136 may be tangible, non-transitory memory, and may include any type of suitable memory module, including Random Access Memory (RAM), Read Only Memory (ROM), flash memory, other types of persistent storage, and the like. The memory 136 stores instructions executable on the processor 130 that can generate a map display to be displayed by the map application 128 for a geographic area. Memory 136 or memory in another server similarly may store instructions that generate navigation guidance to geographic locations within the geographic area and that may be displayed by the map application 128 as overlaid on the map display. In some implementations, the third party provider 106 can initiate the invocation of the server device 104 for navigation guidance that can be used by the ride service application 126 on the client computing device 102.
For simplicity, FIG. 1 shows server device 104 as just one example of a server. However, server device 104 according to some embodiments includes a set of one or more server devices, each equipped with one or more processors and capable of operating independently of the other server devices. The server devices operating in such a group may process requests from the client computing device 102 individually (e.g., based on availability), in a distributed manner in which one operation associated with processing a request is performed on one server device and another operation associated with processing the same request is performed on another server device, or according to any other suitable technique. For the purposes of this discussion, the term "server device" may refer to a single server device or a group of two or more server devices.
In some implementations, the third party provider device 106 or the ride service provider device can include a processor 138, an API 140, a network interface 142, and a memory 144. The API 140 may provide functionality for interfacing with applications that may be stored in memory 144 on the third party provider 106. Memory 144 may be tangible, non-transitory memory and may include any type of suitable memory module, including Random Access Memory (RAM), Read Only Memory (ROM), flash memory, other types of persistent memory, and the like. The memory 144 stores instructions executable on the processor 138 that can generate, process, and send requests for ride service functions in ride service applications, such as the ride service application 126 stored in the memory 120 of the client computing device 102.
In some implementations, the system 100 includes a plurality of third party provider devices 106 corresponding to a plurality of different ride service providers. Also in some cases, the client computing device 102 includes a plurality of ride service applications 126 corresponding to each ride service provider. In this manner, the user may compare ride service types, price estimates, ride durations, and estimated wait times for multiple ride service providers.
Fig. 2 is a block diagram of an example software architecture 200, which example software architecture 200 may be implemented on a client computing device 102 and may include protocols for communicating between an operating system 122, a ride service application 126, a mapping application 128, a service 202 on the client computing device, and other applications 204. In some implementations, the ride service application exposes (expose) the ride service API206 that is called by the map application 128. In this manner, the map application 128 can allow a user to request a ride service without having to leave the map application 128. For example, the map application 128 can provide the pick-up and destination locations to the ride service API206, and the ride service API206 in turn can provide the type of ride service in the geographic area, the price estimate for each type of ride service, the wait time for each type of ride service, the ride duration for each type of ride service, the number of vehicles within the geographic area, and so forth.
In general, the map application 128 can make function calls to the ride service application 126 or the ride service server 106 by accessing the ride service API 206. The API206 facilitates inter-application communication and allows the map application 128 and ride service application 126 to maintain control over how processes, logic, and users are handled while still exposing functionality to other applications. Applications 126 and 128 may communicate using an interprocess communication (IPC) scheme provided by operating system 122. In some embodiments of the client computing device 102, the functionality of the ride service application 126 can be provided as a static library of functionality accessible via the ride service API 208. In other words, some or all of the functionality of the ride service application 126 may be performed as part of the map application 128. More generally, the ride service API208 provides the map application 128 with access to ride services using any suitable software architecture and communication scheme (including those currently known in the art). Generally, the ride service API208 can be provided in different versions for different respective operating systems. For example, a manufacturer of the client computing device 102 may provide for inclusion for AndroidTMSoftware Development Kit (SDK) for ride service API208 for platform, iOSTMAnother SDK for the platform, etc.
In some cases, the map application 128 may communicate with multiple ride service applications via respective APIs. If the user does not have a ride service application with which the map application 128 communicates, the user may be prompted to download the ride service application 126. In other embodiments, the user does not download the ride service application 126 and the map application 128 may communicate with a ride service server, such as the third party provider device 106 shown in fig. 1, via the ride service API 206.
Fig. 3 is an exemplary sequence diagram 300 depicting calls between a map application and a ride service application using an API. Sequence diagram 300 illustrates an example message sequence diagram for one implementation of embodiments disclosed herein. Sequence diagram 300 includes user 302, map application 128, ride service application 126, and ride service API 208.
In the example sequence diagram 300, a user 302 requests a ride service 304 via a displayed user control presented through the mapping application 128. For example, a user may request guidance to a selected destination location for a ride service mode of transportation. In response to the request, the map application 128 can generate an API call to a ride service of the ride service application API208, where the API call includes, for example, a request for a ride service along with the current location and destination location 306 of the user. The API call is then sent as a request 308 to the ride service application 126 or a ride service server, such as the third party provider device 106.
The ride service application 126 may perform its own internal functions to determine the type of ride service available to serve the user 302, price estimates for transporting the user 302 to a destination location, wait times for pickup of the user 302, the number of vehicles in a geographic area around the user's current location, and so forth. The ride service application 126 then prepares a response 310 to be sent to the map application 128, the response 310 having, for example, the types of ride services available, the estimated time of arrival of the ride through each type of ride service, the estimated price for each type of ride service, the estimation of vehicles/drivers in the area, or a combination thereof. The response 310 is received by the ride service API208, then formatted and provided to the map application 128 (reference numeral 311), where it is processed and manipulated as necessary at the map application 128, as a display 312 to the user 302.
For example, the map application 128 may display an indication of each type of ride service available (e.g., a ride share service, a taxi ride service, a limousine ride service, an extra large vehicle service), a price estimate for each type of ride service, a ride duration for each type of ride service, and an estimated wait time for each type of ride service. The map application 128 may also display an indication of vehicles on the map display in proportion to the number of vehicles within the geographic area, as indicated by the ride service API 126. Although the location of the vehicle on the map display may not be an accurate representation of the location of the vehicle used by the ride service provider, the number of vehicles on the map display may be used to display to the user an approximation of the amount of vehicles in the area. When multiple ride service providers are available, the map application 128 may display an indication of the vehicles used by each ride service provider in a different style or color.
In some embodiments, the displayed indication of the type of available ride services may include a selectable user control for selecting the type of ride service. The user 302 views the displayed indication 312 and selects the type of ride service. The map application 128 may then present a user control for selecting a pickup location. The user control may be a pin (pin) placed at or near the user's current location, and the user may be able to move the pin to another location by entering an address or point of interest (POI), dragging the pin to another location, or in any other suitable manner. The pickup location and the selected type of ride service are then provided to the ride service API208 (reference 316) and forwarded to the ride service application 126 (reference 318). Then, the ride service application 126 selects the driver and user to pick up and sends the driver identification information of the selected driver (e.g., the driver's name, vehicle make, model and color, license plate number, etc.), the updated price estimate, the updated wait time, a ride ID for retrieving status information indicating that the driver is on the way to pick up the user, etc. (reference number 320) to the ride service API208, which is then formatted and provided to the map application 128 (reference number 321). Accordingly, the map application 128 may present the user 302 with an indication of the status of the driver (e.g., on the user's road), an updated price estimate, an updated wait time, and driver identification information.
Fig. 4 illustrates an exemplary flow chart 500 for transitioning between user interfaces during a ride service request within the map application 128. The method may be implemented in a set of instructions stored on a computer-readable memory and executable on one or more processors of the client computing device 102. For example, the method may be implemented by the map application 128, the ride service application 128, or any suitable combination of these applications.
At block 502, a map display is presented that includes a geographic area around the user's current location. An indication of the user's current location may also be presented on the map display. The mapping application 128 then presents a search bar at block 504 for obtaining a geographic search query from the user and providing search results in response to the geographic search query. For example, the search results may include POIs, addresses, intersections, and the like, and the user may select one of the search results as a destination location and request guidance to the selected destination location.
The map application 128 may also include user controls for selecting between several modes of transportation, including a ride service mode of transportation. In response to receiving the selection of the ride service mode of transportation, the map application 128 may present a ride request display (block 506) that includes an indication of the ride service provider, the type of ride service from the ride service provider, a price estimate for each type of ride service, a ride duration for each type of ride service, a wait time for each type of ride service, and the like, similar to the display shown in fig. 11B. In some embodiments, the map application 128 can invoke a ride service API for each of the one or more ride service applications, and can provide the user current location and the destination location to each ride service application via the respective API.
In response to receiving a selection of the ride service provider and/or type of ride service, the map application 128 can present a pickup request display including a user control for selecting a pickup location (block 508), similar to the display shown in fig. 12A. The pickup request display may include a default pickup location within a threshold distance (e.g., 500 feet) of the user's current location, wherein the default pickup location is adjustable by the user. For example, the user may enter a pickup location or drag a pushpin presented at a default pickup location to select a pickup location. In some embodiments, the map application 128 may provide recommended pickup locations to save time and money. For example, the recommended pickup location may be 350 feet from the user's current location, and the pickup request display may indicate that the user may "save 3 minutes and $ 2" by selecting the recommended pickup location. The pick-up request display may also include a user control for confirming the pick-up location, such as a "confirm pick-up" button after selecting the pick-up location.
In response to receiving the selection of the pickup location, the map application 128 may present a waiting ride display (block 510), similar to the display shown in fig. 13A. The waiting ride display may include an indication of the driver's current location, identification information of the driver, an estimated wait time for the driver to reach the selected pickup location, and user controls for contacting the driver. Once the driver arrives, the user may be transported to the destination location.
When the user requests a ride service within the map application 128, the map application 128 provides the user login information to the ride service provider to log the user into a user profile maintained by the ride service provider. For example, the user profile may include a payment method of the user, a name of the user, an email address of the user, a phone number of the user, a picture of the user that identifies the user to the driver, a rating of the user, a ride ID of a ride currently in progress or a ride being requested by the user, or any other suitable user profile information. Once the user confirms the ride request, the map application 128 can receive a ride ID for retrieving state information of the ride, such as "waiting for the driver to accept the ride request", "waiting for the driver to arrive at the pickup location", "in progress of the ride", and "complete ride".
Fig. 5 is an exemplary state diagram 600 for requesting a ride service via the map application 128 by invoking the ride service API 208. The state diagram 600 depicts several states, such as an initial state 602, a logged in state 604, a confirmed/reserved state 606, a restored (restore) state 608, a ride in progress state 610, and a transition state 612. At any time, any of states 602-610 may return to the initial state, as shown in state diagram 600.
In one embodiment, the user opens the map application 128 and begins in the initial state 602. In an initial state 602, the map application 128 presents a map display of a geographic area and may receive a geographic search query, provide search results in response to the geographic search query, and display navigation or travel guidance from a user's current location or some other designated departure location to a selected destination location. Navigation or travel guidance may be provided for a variety of different transportation modalities (e.g., walking, cycling, driving, mass transit, riding services, recommended transportation modalities, which may include multiple modes of transportation to a destination location based on shortest duration, distance, or lowest cost, etc.). The map application 128 proceeds to the logged in state 604 when the user selects a ride service mode of transportation or selects a multi-mode travel guidance including a road segment covered by a ride service and selects a type of ride service provider/ride service.
In the logged in state 604, the map application 128 determines whether the user is logged into a client account 616 associated with the provider of the map application 128. If the user is not logged in, the map application 128 may provide user controls for entering user login information, such as a username and password, to log into the client account 616. When the user logs in, the mapping application 128 logs the user into a user profile associated with a third party provider 618 that provides the ride service. In some embodiments, the user may log into a third party provider using a client account 616 associated with the provider of the mapping application 128. When the user logs into the third party provider, the map application 128 calls the ride service API208 to retrieve the ride ID associated with the user profile to determine whether a ride is currently in progress. If a ride is currently in progress, the map application 128 transitions to the recovery state 608. On the other hand, if the ride ID does not exist, the map application 128 proceeds to a confirm/subscribe status 606.
In the confirm/subscribe state 606, and more particularly in the confirm state 620, the map application 128 presents a pickup request display that includes a user control for selecting a pickup location, similar to the display shown in FIG. 12A. The pickup request display may also include user controls for selecting or adding payment methods. For example, the map application 128 may retrieve the payment methods for the user stored with the ride service provider via the ride service API 208. The map application 128 may display masked indications (masked indications) for each of these payment methods for selection therefrom by the user, and may display additional user controls for the user to enter new payment methods. In some embodiments, when the user has selected the pickup location and payment method, the map application 128 may present a user control, such as a "confirm pickup" button, that when selected transitions the map application 128 to the subscription state 622.
In the reserved state 622, the map application 128 requests a ride service from the pickup location to the destination location from the ride service provider via the ride service API 208. The ride service API208 then communicates with the ride service provider to select a driver for the ride. For example, the ride service provider may broadcast a message to each driver within a threshold distance of the pickup location, and may select the first driver to respond to the broadcast message. In any case, the ride service API208 can then provide the ride ID to the map application 128 and the map application 128 proceeds to the ride in progress state 626. In the ride in progress state, the map application 128 calls the get ride status function 612 continuously or periodically (e.g., every 5 to 10 seconds) to receive status information regarding the status of the ride by providing a ride ID to the ride service API 208. In response, the ride service API208 provides the status information to the map application 128. The state information may include: waiting for the driver to accept the ride 628, waiting for the driver to reach the pickup location 630, in-flight 632, and complete 634.
The ride service API208 may also return the driver's current location for display via the map application 128 during the wait for the driver to arrive at the pickup location 630 and the ride in progress 632 state. In this manner, the map application 128 may present the driver's indication along with the pickup location or destination location on the map display for the user to view the driver's progress to the pickup location or on the route to the destination location. Additionally, during the wait driver acceptance ride 628, wait driver arrival at pickup location 630, and in-flight ride 632 states, the map application 128 may present a user control for cancelling the ride that, when selected, may cause the map application 128 to provide a cancellation request to the ride service provider via the ride service API208 to cancel the ride. The map application 128 can also present a user control for modifying the destination location, which when selected, can cause the map application 128 to provide a modify destination request to the ride service provider via the ride service API 208.
Once the user gets off the vehicle at the destination location, the map application 128 enters the done state 632. In the done state 632, the map application 128 may present a summary of the ride, including the final price of the ride, user controls for rating the driver, or any other suitable information related to the rating. The map application 128 may then return to the initial state 602.
As described above, the map application 128 transitions to the recovery state 608 when the user logs into the third party provider and a ride is currently in progress. For example, the user may have exited the map application 128 and then reopened when a ride is requested. In the recovery state 608, the map application 128 advances to a ride in progress state 626 and continuously or periodically (e.g., every 5 to 10 seconds) invokes the get ride status function 612 to receive status information related to the status of the ride.
In addition to providing ride services, the map application 128 also provides a multi-way mode of transportation for navigating the user to her destination location. For example, the user may select a recommended transportation means, which may include a plurality of transportation means for providing an optimal route to the destination location based on a shortest duration, distance, lowest cost, and the like. In some embodiments, the user may provide preferences (such as "avoid road," "utilize public transport," "avoid nighttime walking directions," "lowest cost," "shortest duration"), the user may indicate a preferred mode of transportation, a preferred ride service provider, and/or a preferred type of ride service (e.g., ride share ride service), or may provide any other suitable preferences. Thus, the map application 128 may present one or more optimal routes to the destination location using one or more modes of transportation and according to the user's preferences.
In some embodiments, the map application 128 provides a request to the server device 104 for navigation guidance using the recommended transportation mode, including a departure location, a destination location, and user data including user preferences. The server device 104 may retrieve map data, navigation data, traffic data, etc. to generate a route from a departure location to a destination location. Also in some embodiments, the server device 104 can call the ride service API208 to retrieve ride service data for the ride service provider, such as estimated wait times and price estimates for particular segments of the route. For example, the optimal route may include a ride service to and/or from a public transportation station. More specifically, the server device 104 may generate a recommended multi-way route that includes a first public transportation stop that is one mile from the user's departure location and a second public transportation stop that is one mile from the user's destination location. The recommended multi-way route may include a ride service from the departure location to the first public transportation station and another ride service from the second public transportation station to the destination location. In another example, the recommended multi-way route may include walking directions from the departure location to the first public transportation station or from the second public transportation station to the destination location.
By communicating with the ride service provider, the server device 104 can identify the ride service provider and/or the ride service type that minimizes cost and/or latency. When the user indicates the preferred ride service provider or preferred service type, the server device 104 can retrieve the ride service data from the preferred ride service provider and include the preferred ride service provider in the route. The server device 104 may then generate one or more recommended multi-way routes and provide the recommended routes to the map application 128 for the user to select one of the recommended routes and begin navigating to the destination location.
Fig. 6 illustrates a flow diagram of an example method 800 for generating a recommended multi-way route from a departure location to a destination location of the vehicle. The method may be implemented in a set of instructions stored on a computer-readable memory and executable by one or more processors of the server device 104. In other embodiments, the method may be implemented by an application that may execute on the client computing device 102 or a combination of the server device 104 and the client computing device 102.
At block 802, a request for travel directions including a departure location and a destination location is received. The request for travel directions may be received from a mapping application 128 executing on the user's client computing device 102. The user may provide the destination location, for example, by selecting search results responsive to the geographic search query, entering the destination location, touch-selecting the destination location on a map display, or in any other suitable manner. The departure location may be the user's current location or another location provided by the user.
At block 804, the map application 128 may also provide a request to receive travel directions for the recommended mode of transportation. The recommended mode of transportation may include a plurality of modes of transportation. Additionally, in response to a request for travel guidance using a recommended mode of transportation, server device 104 may provide a plurality of routes to the destination location, each route involving one or more modes of transportation for the user to select from. When requesting travel directions using the recommended transportation means, the map application 128 may provide user preferences for the recommended route, such as "avoid roads," "utilize public transportation," "avoid nighttime walking directions," "lowest cost," "shortest duration," a preferred ride service provider and/or a preferred ride service type (e.g., a ride share ride service), or any other suitable user preference.
In response to receiving a request for travel guidance using a recommended mode of transportation, server device 104 may identify several routes from a departure location to a destination location, each route involving one or more modes of transportation (block 806). In some embodiments, a route may include a first road segment using a ride service mode of transportation and a second road segment using another mode of transportation (such as walking, driving, cycling, public transportation, etc.). For example, the server device 104 may identify a first route that includes driving from a departure location to a destination location or ordering a ride service. The server device 104 may identify a second route that includes walking to a train station, riding the train from the first train station to the second train station, and ordering a ride service from the second station to the destination location. Further, the server device 104 may identify a third route that includes riding a bicycle from a departure location to a bus stop, riding a bus from a first bus stop to a second bus stop, walking from the second bus stop to a train stop, riding a train from a first train stop to a second train stop, and walking to a destination. In other embodiments, the map application 128 generates travel guidance using cached map data stored in the local memory of the client computing device 102, or generates travel guidance using cached map data for segments of the route that do not include the ride service.
In some embodiments, the identified route may include a particular ride service provider and/or ride service type. For example, some ride service providers may include a class car (shutdown) ride service type, and a route may include riding a train to a station near a class pickup location and then using the ride service to walk a distance from the class pickup location to the class station from a destination location. In this way, the user can save time and reduce costs when the regular bus pickup position can be synchronized with the train station.
At block 808, each identified route is ranked or scored according to an optimization technique. For example, the identified routes may be ranked or scored according to one or more factors such as distance, duration, cost, user data including user preferences, and the like. For example, the identified routes may be ranked to minimize total travel time to the destination location. In another example, the identified routes may be ranked to minimize the total price for traveling to the destination location.
In yet another example, each identified route may receive a distance score, a duration score, a cost score, a user preference score, or any other suitable score, and the scores may be weighted, aggregated, or combined in any suitable manner to generate an overall score for each route. The routes may then be ranked in order of their respective scores to minimize cost, time, and/or distance. In some embodiments, routes that do not meet the user preferences may be filtered out, or a score of zero may be received. In this way, the recommended routes and/or the type of ride service provider/ride service may be ranked/selected in view of the user data. For example, if the user indicates that he does not want to walk at night, any route that includes a walking road segment after a threshold period of time may be filtered out or ranked at the bottom. The cost may be determined based on a cost of using a particular public transportation system or a cost of using a particular ride service provider and/or ride service type. For example, the server device 104 can invoke one or more ride share APIs 208 to determine a price estimate for a segment of the route using a particular ride service provider and/or ride service type.
In addition to ranking the identified routes, the server device 104 can rank candidate rides, where each candidate ride corresponds to a particular ride service provider and ride service type. Candidate rides may be ranked or scored according to one or more factors such as distance, duration, cost, user data including user preferences, and the like. For example, candidate rides may be ranked to minimize the waiting time for the driver to arrive at the pickup location. In another example, candidate rides can be ranked to minimize the total price for traveling to the destination location. Server device 104 may rank the candidate rides individually according to wait time, price, or any other suitable category. In some embodiments, candidate rides may also be ranked according to user feedback data for the ride service provider. The user feedback data may include data indicative of past ratings or reviews of the passenger by the ride service provider.
Then, at block 810, the server device 104 provides a set of routes (e.g., the top three highest ranked routes) or a list of rides ranked above a threshold ranking to the map application 128 as recommended routes or rides for the user to select from. For example, an indication of each of the top three highest ranked routes may be provided in the area of the map display (e.g., as a series of icons representing a mode of transportation for the segments of the route), and the user may select one of the routes by touching the indication of selecting the recommended route. In other embodiments, the server device 104 selects a route (e.g., the highest ranked route) and provides the selected route to the map application 128. In an exemplary scenario, the map application 128 displays three routes, where a first route includes ordering a taxi taking service provided by Rider from a departure location (e.g., the user's current location) to a train station, taking a train from a first train station to a second train station, and walking to a destination location. The second route includes a class pick-up location walked to a class riding service provided by DriverCo, to a second class station/pick-up location using the class riding service, and to a destination location. The third route includes walking to a bus stop, riding a bus from a first bus stop to a second bus stop, walking to a train stop, riding a train from a first train stop to a second train stop, and ordering a ride share service provided by Rider from a second train stop to a destination location.
When a user selects one of the recommended multi-way routes that includes road segments covered by the ride service or selects a route that uses a ride service mode of transportation, the map application 128 may invoke one or more ride service APIs 208 to communicate with a plurality of ride service providers. For example, a route may include taking a train from a first train station to a second train station, and ordering a ride service from the second station to a destination location. In this example, the second station may be a pickup location for the ride service and the destination location may be a drop-off location. The map application 128 may identify an estimated time that the user will arrive at the second train station and thus pick-up location. Thus, the map application 128 can request that the ride begin at the pickup location at the estimated time or within a threshold period of the estimated time (e.g., within five minutes, ten minutes, etc.).
Additionally, when the user selects one of the recommended multi-way routes, the map application 128 presents a visualization of the route on the map display. For example, the visualization may include indications of the departure location and the destination location, such as pins at both locations. The visualization may also include an indication of a route from the departure location to the destination location. For example, each of the streets, roads, highways, and dispatches (maneuver) along the route may be highlighted or indicated in any suitable manner. Additionally, each segment of the route may include an indication of a respective mode of transportation for the corresponding segment. For example, a first segment of the route may be represented by a dashed line indicating walking directions for the first segment, and a second segment of the route may be represented by a solid line indicating driving directions for the second segment.
In some embodiments, when the user selects a suggested multi-way route that includes a particular ride service provider and ride service type, the map application 128 may present only ride service data for the selected ride service provider and ride service type. For example, when a user or server device 104 selects a particular ride from several candidate rides, the map application 128 may request ride service data for the selected ride. In other embodiments, the map application 128 presents ride service data for each ride service provider and ride service type to allow the user another opportunity to select a ride service provider and ride service type.
Fig. 7 illustrates a flow diagram of an example method 900 for providing ride services within a map application without directing a user to a separate ride service application. The method may be implemented in a set of instructions stored on a computer-readable memory and executable by one or more processors of the client computing device 102. For example, the method may be implemented by an application stored on the client computing device, such as by the mapping application 128. In other embodiments, the method may be implemented by the server device 104 or a combination of the client computing device 102 and the server device 104.
At block 902, a route is selected from a departure location to a destination location, the route including at least road segments covered by a ride service. For example, the map application 128 may present a plurality of recommended multi-way routes to the destination location, and the user may select one of the recommended multi-way routes by, for example, touching an indication of the selected route, as described above with reference to fig. 6. In another example, the map application 128 may include a user control for requesting travel directions to a selected destination location. When a user requests travel guidance via user controls, the map application 128 may provide user controls for selecting a mode of transportation including a ride service.
When the ride service mode is selected, the map application 128 may call one or more ride service APIs 208 to communicate with the respective ride service provider to request passenger services (block 904). For example, the map application 128 can use each ride service API208 along with the user's current location and destination location to provide ride service requests. The ride service API208 may then forward the ride service request to the corresponding ride service application 126 or ride service provider server 106, which may in turn provide ride service information to the ride service API208, which is then forwarded to the map application 128 (block 906). The ride service information may include the types of ride services available, the estimated time of arrival of the ride through each type of ride service, the estimated price for each type of ride service, the estimation of the vehicles/drivers in the area, and so forth.
In addition to providing ride service information, the ride service provider can provide style or visualization information and custom layouts via the ride service API208 for presenting ride service information on a map display, for presenting other elements on a map display, or for rendering any suitable visualization of a ride on a map display. This is described in more detail below with reference to fig. 9-13B. More specifically, the map application 128 can retain control of certain components on the map display while allowing the ride service provider to customize the layout for other components on the map display. For example, the map application 128 can retain control of the base map included within the map display, but can allow the ride service provider to customize a search bar that overlays the base map at the top of the map display or a rectangular layout that overlays the base map at the bottom of the map display. The custom layout need not be at the top or bottom of the map display and the ride service provider can also customize the location of the layout within the map display. In addition to custom layouts, the ride service provider may provide style information to adjust the style of elements on the map display controlled by the map application 128. For example, the ride service provider may provide styles or visual information for rendering elements in the base map, such as background colors of the base map, colors of roads, and streets, font sizes, colors, and types of map markers, color schemes of the base map, types of line bolds or strokes, graphics such as a vehicle icon representing the current location of the vehicle on the map, an icon representing the user's current location, a pickup location icon representing a pickup location, a drop off location icon representing a drop off location, a current orientation icon representing the current orientation of the client computing device, or any other visual attribute.
In any case, the map application 128 can then present the ride service information on a map display (block 908), similar to the display shown in fig. 9. More specifically, for each ride service provider, the map application 128 can present an indication of the ride service provider, such as the name and logo of the ride service provider. The map application 128 may also present indications of the types of ride services provided by the ride service providers (e.g., ride-share ride service, taxi ride service, limousine ride service, shift ride service, oversized vehicle service, etc.), as well as price and latency estimates for each type of ride service. When the map application 128 presents ride service information for multiple ride service providers on the map display, the user can select one of the ride service providers via a user control, such as an indication of touch selection of a ride service provider. In response to selecting a ride service provider, the map application 128 can present an indication of the ride service types provided by the selected ride service provider and the price and wait time estimates for each ride service type. The user may also select the ride service type via a user control, such as a touch-selection indication of the ride service type.
Additionally, the map application 128 can present the ride service information for each ride service provider with the respective style or visualization information from the corresponding ride service provider and the custom layout. Accordingly, the map application 128 may re-render the map display according to the received style or visualization information. In some embodiments, when the user selects one of the candidate ride service providers, the map application 128 adjusts the map display to include the style information and custom layout of the selected ride service provider. Then, when the user selects another ride service provider, the map application 128 changes the map display to include the style information and custom layout of the other ride service provider. For example, Rider may provide a pink vehicle icon, a dark blue background color of the base map, a triangular icon to represent the user's current location, and a custom layout for selecting a ride service type, where the user may provide a swipe gesture to view the new ride service type on the map display. The custom layout may also include icons to, for example, select between economic or premium rides, split fees among several passengers on a ride, or order a group's ride.
At block 910, the map application 128 receives a selection of a ride service provider and a ride service type. For example, a user may select a ride share service from Rider named RiderPool by touching a select user control (such as a RiderPool icon or a "select RiderPool" button). As a result, similar to the display shown in fig. 12A, the map application 128 presents a pickup request display that includes a user control for selecting a pickup location. The user control may be a pushpin or other icon placed at a default pickup location on the map display. For example, the default pickup location may be the current location of the user or the recommended pickup location.
The user may then adjust the pickup location by, for example, dragging a user control to another location on the map display. In some embodiments, the pickup request display includes an indication of a recommended pickup location that remains on the pickup request display when the user moves the pushpin to another location so that the user may later select the recommended pickup location. The indication of the recommended pickup location may include an indication of a distance from the user's current location to the recommended pickup location and an indication of time and cost savings associated with the recommended pickup location. For example, in an area with multiple one-way lanes, the map application 128 may recommend pickup locations at streets that allow the driver to travel in the direction of the destination location, so that the driver does not need to make unnecessary turns after picking up the user. In another example, a recommended pickup location may be determined based on traffic to avoid heavily trafficked streets, thereby minimizing costs. The map application 128 may identify recommended pickup locations that are within a walking distance or threshold distance (e.g., within 500 or 1000 feet) of the user's current location to minimize time and/or cost of the ride.
In addition, the pick-up request display may include a preview of a three-dimensional street level view of the area around the pick-up location in a portion of the pick-up request display so that the user can easily find the driver at the pick-up location. The preview may include an optional user control such that when the user control is selected, the pickup request displays a full screen view presenting a three-dimensional panoramic street level view of the area surrounding the pickup location. In some embodiments, the pickup request display may overlay the street level view at a fixed predefined location on the base map (such as a location corresponding to the pickup location). In addition, the pick-up request display includes style information and custom layout from the ride service provider. For example, the ride service provider may provide a user control, such as a confirmation button or other suitable icon, for confirming the pickup location, and may indicate the location of the user control within the pickup request display (e.g., below the pickup request display bottom base map, above the pickup request display top base map, etc.). In some embodiments, the pickup request display or any other suitable display may also include a preview of a three-dimensional street level view of the area surrounding the drop-off location. The preview may include an optional user control such that when the user control is selected, the corresponding display presents a full screen view of a three-dimensional panoramic street level view of the area surrounding the drop-off location. In some embodiments, the corresponding display may overlay a street level view at a fixed predefined location on the base map (such as a location corresponding to a drop-off location).
Thus, the map application 128 identifies the pickup location of the ride as the location of the user control used to select the pickup location when the confirm user control is selected. At block 912, the map application 128 calls the ride service API208 to provide the pick-up request to the ride service provider along with the selected ride service type and pick-up location. In some embodiments, the map application 128 also provides passenger identifiers such as user login information for logging the user into a user profile maintained by the ride service provider. For example, the user profile may include a payment method of the user, a name of the user, an email address of the user, a phone number of the user, a picture of the user that identifies the user to the driver, a rating of the user, a ride ID of a ride currently in progress or a ride being requested by the user, or any other suitable user profile information. The ride service API208 may then forward the ride service request to the corresponding ride service application 126 or ride service provider server 106, which may in turn provide ride confirmation information to the ride service API208, which is then forwarded to the map application 128 (block 914).
The ride confirmation information may include a ride ID for retrieving state information of the ride, driver identification information of the selected driver (e.g., the driver's name, vehicle make, model and color, license plate number, etc.), an updated price estimate, an updated wait time, and an updated ride duration. The ride service provider may also provide style information and custom layouts for presenting ride confirmation information on the map display or other elements on the map display via the ride service API 208.
At block 916, the map application 128 presents the ride confirmation information on the map display, similar to the display shown in fig. 13A. More specifically, the map application 128 may present an indication of the estimated wait time for the driver to reach the pickup location (e.g., "the driver arrives after 1 minute"), an indication of the user's current location, an indication of the pickup location, and an indication of the driver's location on the base map. The map application 128 may also present user controls for contacting the driver. Additionally, the map application 128 can present the ride confirmation information of the ride service provider using the received style information and custom layout.
At block 918, the map application 128 periodically sends status requests to the ride service provider by, for example, calling the ride service API208 and providing a ride ID. The status request may be sent every five seconds, every ten seconds, every thirty seconds, every minute, etc. (block 922). The ride service provider may then return to a state, such as waiting for the driver to accept the ride, waiting for the driver to arrive at a pickup location, the ride is in progress, the ride is complete, or any other suitable state. The ride service provider may also return to the driver's location when the status is waiting for the driver to arrive at the pickup location or while the ride is in progress. The map application 128 then presents the status indicator and/or the location of the driver on the map display (block 920). For example, when the status is waiting for the driver to accept the ride, the map display may include a banner (banner) indicating that the driver has not accepted the ride. When the status is waiting for the driver to reach the pickup location, the map display may include a banner indicating an estimated wait time for the driver to reach the pickup location and an indication of the driver's location on a base map, such as a vehicle icon at the driver's location. Further, when the status is in transit, the map display may include an indication of the driver's location on the base map. The map application 128 may continue to send status requests until the status is the completion of the ride (block 924).
In some scenarios, the user may transition from the ride service portion of the map application 128 to a map view of other geographic areas to search for points of interest or other locations or perform any other map functions when subscribing to a ride service or while riding in a vehicle. When the user transitions to other map functions, the map application 128 may continue to receive status information from the ride service provider regarding the status of the ride. In some embodiments, the map application 128 presents a banner that overlays the map display, wherein the banner indicates the status of the ride. For example, the banner may indicate that a ride is in progress. Distance of 10 minutes ". The banner may include user controls that, when selected, convert the map application 128 back to the ride service portion to view detailed information about the ride, change destination location, cancel the ride, and so forth.
Fig. 8 illustrates a flow diagram of an example method 1000 for presenting ride status information when a user transitions to other map functions. The method may be implemented in a set of instructions stored on a computer-readable memory and executable by one or more processors of the client computing device 102. For example, the method may be implemented by an application stored on the client computing device, such as by the mapping application 128. In other embodiments, the method may be implemented by the server device 104 or a combination of the client computing device 102 and the server device 104.
At block 1002, the map application 128 presents a status indicator of the requested ride to the destination location or the location of the driver on the map display. The state may be waiting for the driver to accept the ride, waiting for the driver to reach the pickup location, in progress, completed, or any other suitable state. Then, at block 1004, the map application 128 receives a request for additional map data that utilizes a map function other than the ride service portion. For example, the request may be a geographic search query, a request to display a geographic area, or a request for travel directions to another destination location. In any case, the map application 128 presents the requested map data in a map display along with a ride status indicator, such as a banner overlaying the map display that indicates the status of the ride (block 1006). The banner may include user controls that, when selected, convert the map application 128 back to the ride service portion to view detailed information about the ride, change destination location, cancel the ride, and so forth. In response to receiving a selection of the user control (block 1008), the map application 128 determines whether the ride has been completed (block 1010). If the ride has not been completed, the map application 128 transitions back to the ride service portion (block 1002).
9-13B illustrate example map displays 1400 and 1800B for providing ride services via the map application 128, such as ride request displays (FIGS. 9, 11A, 11B), pick-up request displays (FIGS. 10, 12A-C), and ride-by-ride display (FIGS. 13A, 13B). Each map display may be rendered by the map application 128 and may include ride service data from one or more ride service providers obtained by invoking one or more ride service APIs. Still further, each map display can include a base map, such as base map 1440 shown in fig. 9, and custom layout components, such as layout components 1602, 1608 shown in fig. 11A, that overlay the base map and are provided by the ride service provider. Additionally, the ride service provider can style the elements in the base map. For example, the ride service provider may provide style information for elements included in the base map, such as a background color of the base map, colors of road and streets, font size, color, and type of map markers, icons representing vehicles on the map, icons representing a current location of the user, pins representing a destination location, and so forth.
Fig. 9 illustrates an exemplary display 1400 for selecting a ride service provider in the map application 128. The display 1400 may appear on a portable device, such as the client computing device 102 shown in fig. 1. The display 1400 may include a user control 1402 for entering a departure location, a user control 1404 for entering a destination location, a user control 1406 for selecting a mode of transportation to travel from the departure location to the destination location, and a base map 1440 centered 1408 on the user's current location. In some embodiments, the default departure location 1402 may be the user's current location. When the user selects a ride service mode of transportation 1442 or selects a recommended mode of transportation (not shown) with multi-mode travel directions including road segments covered by the ride service, the display 1400 may include a custom layout 1410 covering a base map 1440 that presents an indication of one or more ride service providers 1420, 1422.
In the example display 1400, the ride service providers include Rider 1420 and DriverCo 1422. Each ride service provider can provide a custom layout and display 1400 can present the layout customized by the selected ride service provider. For example, the user may select Rider 1420 by touching the indication on display 1400 that selects Rider, and display 1400 may present a layout 1410 customized by Rider. The custom layout 1410 includes an indication 1430 of the type of ride service (RiderPool) and selectable options of the RiderPool service (such as economy or premium), apportioning costs among passengers, RiderPool requesting a large group, etc. In custom layout 1410, the user may perform swipe gestures to view other types of ride services provided by Rider. However, this is merely an example layout and is for illustrative purposes only. In other custom layouts, the display 1400 may simultaneously include an indication 1430 for each type of ride service, and the user may select the type of ride service, for example, by touch selecting the corresponding indication. In any case, custom layout 1410 also includes a user control 1432 to select the rierpool service provided by Rider.
FIG. 10 illustrates an exemplary display 1500 for selecting a pickup location in the map application 128. Display 1500 may appear on a portable device, such as client computing device 102 shown in FIG. 1. As shown in FIG. 9, display 1500 may include a base map 1502 centered on a user's current location 1520. The display may also include user controls 1522, such as pushpins for selecting a pickup location. In some embodiments, the default pickup location may be the user's current location 1520, and the user may be able to drag the tack to select another location for the pickup location. Display 1500 also includes indications of recommended pickup locations 1504 and 1506, shown as circles. A preview of the three-dimensional street-level view 1508 of the area around the pickup location may be provided for one of the recommended pickup locations so that the user can easily find the driver at the pickup location. The preview may include a selectable user control such that when the user control is selected, the pickup request displays a full screen view presenting a three-dimensional street level view of the area surrounding the pickup location. Additionally, the display 1500 may include an indication of the number of available vehicles 1510 used by the ride service provider. Although the location of the vehicle on the map display may not be an accurate representation of the location of the vehicle used by the ride service provider, the number of vehicles on the map display may be used to show the user an approximation of the amount of vehicles in the area.
In some embodiments, the map application 128 identifies landmarks that correspond to the pickup location or that are within a threshold distance (e.g., 100 feet) of the pickup location. The map application 128 may then include street level images of the identified landmarks in the three-dimensional street level view 1508. The map application 128 additionally or alternatively may provide an indication of a landmark via an interface, such as "pick up in front of a Disney store. For example, the map application 128 may call an API published by the ride service provider to obtain geographic coordinates or a street address (e.g., "123 Elm St.") of the pickup location and identify the appropriate landmarks corresponding to those coordinates or the address. To do so, the map application 128 may send the coordinates and/or street address to a map data server or, in some cases, rely on cached map data and street level images. The map data server, or the map application 128 when using cached data, may identify landmarks based on attributes such as prominence (e.g., relative size of the landmark relative to other objects in the vicinity of the landmark or color differences between the landmark and nearby objects), visibility (e.g., direct line-of-sight accessibility between pickup location and landmark), popularity (e.g., amount of user-generated content (such as photos, reviews, etc.) related to the landmark), or other suitable signals. Further, in some embodiments, the map data server or map application 128 may select a street level image of the landmark location to face the landmark regardless of the expected orientation of the user at the pickup location relative to the landmark to include in the view 1508. For example, the map data server or map application 128 may provide an image of a monument and generate a notification "pick up at 123Elm St. opposite the street of the monument".
11A and 11B illustrate example ride request displays 1600A, 1600B in the map application 128 that include layout components customized by a ride service provider. The displays 1600A, 1600B may appear on a portable device, such as the client computing device 102 shown in fig. 1. As described above, the ride service provider can provide custom layout and style information to present in the map application 128. The pickup request display 1600A includes a base map 1604, a custom location search component 1602 that overlays the base map 1604, and a custom third party layout component 1608 that overlays the base map. The ride service provider can customize these components 1602, 1608 in any suitable manner and can adjust the position of the components 1602, 1608 within the ride request display 1600A. For example, Rider can request that the location search component 1602 be presented at the bottom of the ride request display 1600A. In one example, the location search component 1602 includes user controls for providing a departure location, a destination location, and a mode of transportation to provide travel guidance to the destination location. The custom third party layout component 1608 includes an optional indication of each ride service type provided by the ride service provider as well as an indication of price estimates and wait times for each ride service type. The custom component may also include icons, background colors, animations, or any other suitable graphical elements. Fig. 11B illustrates example custom layout components 1602, 1608 for a ride request display 1600B. In the ride request display 1600B, the custom location search component 1602 includes user controls for providing a departure location and a destination location. The custom third party layout component 1608 includes circular, optional indications 1610a-e of ride service types available from ride service providers. The custom third party layout component 1608 also includes price estimates, estimated wait times and payment methods, and user controls 1612 for requesting a selected ride service provider and/or ride service type.
In response to receiving a selection of the ride service provider and/or ride service type of user control 1612 for requesting the selection, the map application 128 presents a pickup request display 1700A-C, as shown in FIGS. 12A-12C. The load request displays 1700A-C may appear on a portable device, such as the client computing device 102 shown in FIG. 1. The pickup request display 1700A includes a base map 1702, a pickup location layout component 1704, and a pickup confirmation layout component 1706. In some embodiments, the pickup confirmation layout component 1706 can be customized by a selected ride service provider. The pickup request display 1700A also includes an indication of the user's current location 1710, as well as a user control 1712, such as a pushpin for selecting a pickup location. In some embodiments, the default pickup location may be the user's current location 1710, and the user may be able to drag the tack to select another location for the pickup location. The pickup request display 1700A also includes a preview of a three-dimensional street level view 1708 of the area around the selected pickup location or around the recommended pickup location so that the user can easily find the driver at the pickup location. The preview may include a selectable user control such that when the user control is selected, the pickup request display 1700A presents a full screen view of a three-dimensional street level view of the area surrounding the pickup location.
Fig. 12B shows another example pickup request display 1700B when the user 1710 is located at an airport and there are multiple recommended pickup locations. The recommended pickup location is shown in location list 1714 as an available pickup area. The user may select one of these pickup locations and confirm the selection using the pickup confirmation layout component 1706. Fig. 12C illustrates yet another example pick-up request display 1700C when the user 1710 is located at an airport. In addition to the location list 1714, the load request display 1700C also includes a user control 1716 for selecting one of several layers that the user may be loaded. For example, the location list 1714 may include a first set of recommended pickup locations for a first floor of a building and a second set of recommended pickup locations for a second floor of the building.
In response to receiving a selection of the user control 1706 for confirming the pickup location, the map application 128 presents a waiting for ride display 1800A, 1800B, as shown in fig. 13A and 13B. The waiting for ride display 1800A, 1800B may appear on a portable device, such as the client computing device 102 shown in fig. 1. The waiting for ride display 1800A may include an indication of the user's current location 1802, an indication of the pick-up user's vehicle 1804, and an indication of the pick-up location. The waiting for ride display 1800A can also include an arrival layout component 1808, the arrival layout component 1808 including an indication of an estimated wait time for the driver to arrive at the selected pickup location. In addition, the waiting for ride display 1800A includes a contact driver layout component 1810 having user controls for contacting the driver. In some embodiments, the contact driver layout component 1810 can be customized by a selected ride service provider. Also in some embodiments, the driver may be contacted via an SMS application or a chat application.
FIG. 13B illustrates another waiting ride display 1800B presented when the user 1802 is at an airport. The wait for ride display 1800B includes an arrival layout component 1808 and an additional instructions layout component 1812 for providing detailed walking guidance to pickup locations. As shown in fig. 12C, the waiting for ride display 1800B includes user controls 1814 for selecting one of several layers that the user may be picked up.
Other considerations
The following additional considerations apply to the foregoing discussion. Throughout the specification, multiple instances may implement a component, an operation, or a structure described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations, one or more of the individual operations may be performed concurrently and nothing requires that the operations be performed in the order illustrated. Structures and functionality presented as separate components in the example configurations may be implemented as a combined structure or component. Similarly, structures and functionality presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the subject matter of the present disclosure.
In addition, certain embodiments are described herein as comprising logic or multiple components, modules, or mechanisms. The modules may constitute software modules (e.g., code stored on a machine-readable medium) or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in some manner. In example embodiments, one or more computer systems (e.g., a standalone, client, or server computer system) or one or more hardware modules (e.g., a processor or a set of processors) of a computer system may be configured by software (e.g., an application or application portion) as a hardware module that operates to perform certain operations described herein.
In various embodiments, the hardware modules may be implemented mechanically or electronically. For example, a hardware module may comprise special purpose circuitry or logic that is permanently configured (e.g., as a special purpose processor, such as a Field Programmable Gate Array (FPGA) or an Application Specific Integrated Circuit (ASIC)) to perform certain operations. A hardware module may also include programmable logic or circuitry (e.g., contained within a general-purpose processor or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that considerations of cost and time may drive the implementation of hardware modules mechanically, in dedicated and permanently configured circuitry, or in temporarily configured (e.g., by software configuration) circuitry.
Accordingly, the term "hardware" should be understood to encompass a tangible entity, as that entity constructed physically, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein. As used herein, "hardware-implemented module" refers to a hardware module. Considering embodiments in which the hardware modules are temporarily configured (e.g., programmed), it is not necessary that each hardware module be configured or instantiated at any instance in time. For example, where the hardware modules include a general-purpose processor configured using software, the general-purpose processor may be configured at different times as respective different hardware modules. Software may be configured accordingly on a processor, for example, to constitute a particular hardware module at one instance in time and to constitute a different hardware module at a different instance in time.
A hardware module may provide information to and receive information from other hardware. Thus, the described hardware modules may be considered to be communicatively coupled. In the case where a plurality of such hardware modules exist at the same time, communication may be realized by signal transmission (for example, by an appropriate circuit and bus) connecting the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times, communication between such hardware modules may be achieved, for example, by storing and retrieving information in memory structures accessible to the multiple hardware modules. For example, one hardware module may perform an operation and store the output of the operation in a memory device to which it is communicatively coupled. Another hardware module may then access the memory device at a later time to retrieve and process the stored output. The hardware modules may also initiate communication with input or output devices and may operate on resources (e.g., collections of information).
The methods 500, 800, 900, and 1000 may include one or more functional blocks, modules, individual functions or routines in the form of tangible computer-executable instructions that are stored in a non-transitory computer-readable storage medium and executed using a processor of a computing device (e.g., a server, personal computer, smartphone, tablet computer, smartwatch, mobile computing device, or other personal computing device as described herein). Methods 500, 800, 900, and 1000 may be included as part of, for example, any back-end server (e.g., a map data server, a navigation server, or any other type of server computing device as described herein), a portable device module of an example environment, or a module external to such an environment. Although the figures may be described with reference to other figures for ease of illustration, the methods 500, 800, 900, and 1000 may be used with other objects and user interfaces. Further, although the above description describes the steps of methods 500, 800, 900, and 1000 being performed by particular devices (such as client computing device 102 and server device 104), this is for illustration purposes only.
Various operations of the example methods described herein may be performed, at least in part, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily configured or permanently configured, such processors may constitute processor-implemented modules that operate to perform one or more operations or functions. In some example embodiments, the modules referred to herein may comprise processor-implemented modules.
Similarly, the methods or routines described herein may be at least partially processor-implemented. For example, at least some of the operations of the method may be performed by one or more processors or processor-implemented hardware modules. The execution of certain operations may be distributed among one or more processors, which may reside not only within a single machine but also deployed across multiple machines. In some example embodiments, the one or more processors may be located at a single location (e.g., within a home environment, an office environment, or as a server farm), while in other embodiments, the processors may be distributed across multiple locations.
The one or more processors may also operate to support related operations to be performed in a "cloud computing" environment or as SaaS. For example, as described above, at least some of the operations may be performed by a set of computers (as an example of machines including processors), which may be accessed via a network (e.g., the internet) and via one or more appropriate interfaces (e.g., APIs).
Still further, the figures depict some embodiments of the example environment for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.
After reading this disclosure, those skilled in the art will understand additional alternative structural and functional designs for determining user orientation within a map display through the principles disclosed herein. Thus, while particular embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. It will be apparent to those skilled in the art that various modifications, changes, and variations can be made in the arrangement, operation, and details of the methods and apparatus disclosed herein without departing from the spirit and scope as defined in the appended claims.
Claims (20)
1. A method in a computing device for providing multi-mode travel directions, the method comprising:
receiving, via a user interface, a request to obtain travel directions to a destination;
generating, by one or more processors, a multi-way travel guidance for traveling to the destination, comprising:
obtaining an indication of a ride of a first road segment spanning a route between a pickup location and a drop-off location from a third party provider of a ride service, the ride service defining a first mode of transportation,
obtaining travel directions crossing a second segment of the route using a second mode of transportation different from the first mode; and
providing, via the user interface, an indication of the generated multi-way directions.
2. The method of claim 1, wherein the end point of the second segment of the route is a pickup location of the ride; the method further comprises the following steps:
determining the estimated time of the user reaching the loading position according to the obtained travel guidance of the second road section;
wherein obtaining the indication of the ride from the third party provider comprises: requesting the ride to begin at the pickup location at the estimated time.
3. The method of claim 1, wherein generating the multi-mode travel guidance comprises:
obtaining respective indications of a plurality of candidate rides, each candidate ride having a pickup position and a drop-off position, and each candidate ride being associated with a price and time estimate; and
selecting a ride from the plurality of candidate rides.
4. The method of claim 3, wherein generating the multi-mode travel guidance comprises: an optimization technique is used to minimize the total price of traveling to the destination.
5. The method of claim 3, wherein generating the multi-mode travel guidance comprises: an optimization technique is used to minimize the total time to travel to the destination.
6. The method of claim 3, wherein obtaining respective indications of the plurality of candidate rides comprises: the respective indications are obtained from a plurality of providers of ride services.
7. The method of claim 3, further comprising: obtaining, by the one or more processors, user data relating to at least one of (i) a preferred provider of ride services or (ii) a preferred mode of transportation;
wherein selecting a ride from the plurality of candidate rides comprises selecting a ride in view of the obtained user data.
8. The method of claim 1, wherein obtaining navigation guidance that spans a second segment of the route comprises: a walking guide to the pick-up position or a walking guide from the alighting position is obtained.
9. The method of claim 1, obtaining the indication of the ride comprises:
selecting the pickup location in view of at least one of (i) traffic, (ii) one-way lanes, or (iii) cost, and
and when the indication of the ride is obtained, the selected pickup position is appointed to a third party provider of the ride service.
10. The method of claim 1, comprising retrieving navigation guidance for traversing a second leg of the route using a second mode of transportation from a navigation server operated separately and independently of a third party provider of the ride service.
11. The method of claim 1, comprising retrieving navigation guidance for traversing a second segment of the route using a second mode of transportation using cached map data stored in a local memory of the computing device.
12. The method of claim 1, wherein obtaining navigation guidance for traversing a second segment of the route using a second mode of transportation comprises: one of driving directions, walking directions, or public transportation directions is obtained.
13. The method of claim 1, wherein providing the generated indication of the multi-way guidance via the user interface comprises displaying a visualization of the route on a digital map.
14. A computing device, comprising:
a user interface;
one or more processors; and
a non-transitory computer-readable medium storing instructions thereon that, when executed by the one or more processors, cause the computing device to:
receiving, via the user interface, a request to obtain travel directions to a destination;
generating a multi-way travel guidance for traveling to the destination, comprising:
obtaining, from a third party provider of a ride service, an indication of a ride of a first road segment spanning a route between a pickup location and a drop-off location, the ride service defining a first mode of transportation; and
obtaining navigation guidance for crossing a second segment of the route using a second mode of transportation different from the first mode; and
providing, via the user interface, an indication of the generated multi-way directions.
15. The computing device of claim 14, wherein to generate the multi-mode travel guidance, the instructions cause the computing device to:
obtaining respective indications of a plurality of candidate rides, each candidate ride having a pickup position and a drop-off position, and each candidate ride being associated with a price and time estimate; and
selecting a ride from the plurality of candidate rides.
16. The computing device of claim 15, wherein the multi-way travel guidance is generated using optimization techniques to minimize a total price for traveling to the destination.
17. The computing device of claim 15, wherein the multi-mode travel directions are generated using optimization techniques to minimize a total time to travel to the destination.
18. The computing device of claim 15, wherein the respective indications of the plurality of candidate rides are obtained from a plurality of providers of ride services.
19. The computing device of claim 15, wherein the instructions further cause the computing device to obtain user data relating to at least one of (i) a preferred provider of ride services or (ii) a preferred mode of transportation;
wherein the ride is selected from the plurality of candidate rides in view of the obtained user data.
20. The computing device of claim 14, wherein the navigation guidance across the second segment of the route comprises: a walking guide to the loading position or a walking guide from the getting-off position.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762599258P | 2017-12-15 | 2017-12-15 | |
US62/599,258 | 2017-12-15 | ||
PCT/US2018/065593 WO2019118801A1 (en) | 2017-12-15 | 2018-12-14 | Multi-modal directions with a ride service segment in a navigation application |
Publications (1)
Publication Number | Publication Date |
---|---|
CN110720027A true CN110720027A (en) | 2020-01-21 |
Family
ID=65023998
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880038194.0A Pending CN110720027A (en) | 2017-12-15 | 2018-12-14 | Multi-mode guidance with ride service segments in navigation applications |
Country Status (4)
Country | Link |
---|---|
US (2) | US11734618B2 (en) |
JP (1) | JP7125433B2 (en) |
CN (1) | CN110720027A (en) |
WO (1) | WO2019118801A1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113297465A (en) * | 2020-07-01 | 2021-08-24 | 阿里巴巴集团控股有限公司 | Method and device for providing traffic scheme information and electronic equipment |
CN113938521A (en) * | 2021-06-30 | 2022-01-14 | 深圳市巴滴科技有限公司 | Travel scheme recommendation method and device based on passenger demand information |
Families Citing this family (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN110737849B (en) * | 2019-10-10 | 2022-08-30 | 北京百度网讯科技有限公司 | Travel scheme recommendation method, device, equipment and storage medium |
US20220318279A1 (en) * | 2019-12-20 | 2022-10-06 | Google Llc | Providing a resilient application programming interface for geographic services |
SE2030281A1 (en) * | 2020-09-07 | 2022-03-08 | Magnet Rides Ab | Matching service for passengers and private drivers for passenger transport |
US20220147884A1 (en) * | 2020-11-10 | 2022-05-12 | Uber Technologies, Inc. | Systems and Methods for Nonconforming Service Facilitation for Multi-Modal Services |
US20210116261A1 (en) * | 2020-12-26 | 2021-04-22 | Francesc Guim Bernat | Systems and methods for vehicle-occupancy-based and user-preference-based smart routing and autonomous volumetric-occupancy measurement |
Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090210270A1 (en) * | 2008-02-20 | 2009-08-20 | Kenneth Quan | Systems and methods for providing direct communication from personalized targeted advertisements |
CN102506861A (en) * | 2011-10-12 | 2012-06-20 | 北京世纪高通科技有限公司 | Travel information processing method and device |
US20130290040A1 (en) * | 2012-04-25 | 2013-10-31 | Alexander Perry | Method and System for Arranging Taxi and Transportation Services |
US20130325340A1 (en) * | 2012-06-05 | 2013-12-05 | Apple Inc. | Routing applications for navigation |
CN103727948A (en) * | 2012-10-16 | 2014-04-16 | 北京掌行通信息技术有限公司 | Real-time guidance method for bus taking navigation |
US20140257697A1 (en) * | 2013-03-08 | 2014-09-11 | Zzzoom, LLC | Generating transport routes using public and private modes |
CN105096637A (en) * | 2015-09-07 | 2015-11-25 | 百度在线网络技术（北京）有限公司 | Public transportation-based navigation information acquisition method and device |
CN105190244A (en) * | 2013-03-15 | 2015-12-23 | 苹果公司 | Multi-modal fare calculation method, system and apparatus |
CN105683712A (en) * | 2013-08-19 | 2016-06-15 | 通腾导航技术股份有限公司 | Methods and systems for obtaining a multi-modal route |
US20160298977A1 (en) * | 2015-04-09 | 2016-10-13 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
CN106096750A (en) * | 2015-04-29 | 2016-11-09 | 福特全球技术公司 | The path at riding family is disturbed and the programme path again of user altogether |
CN107063285A (en) * | 2017-04-25 | 2017-08-18 | 杭州纳戒科技有限公司 | With city trip service implementing method, device and system |
US20170357914A1 (en) * | 2016-06-10 | 2017-12-14 | Conduent Business Services, Llc | System and method for optimal automated booking of on-demand transportation in multi-modal journeys |
Family Cites Families (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060241859A1 (en) | 2005-04-21 | 2006-10-26 | Microsoft Corporation | Virtual earth real-time advertising |
US8428873B2 (en) | 2008-03-24 | 2013-04-23 | Google Inc. | Panoramic images within driving directions |
US20100250581A1 (en) | 2009-03-31 | 2010-09-30 | Google Inc. | System and method of displaying images based on environmental conditions |
US9766089B2 (en) | 2009-12-14 | 2017-09-19 | Nokia Technologies Oy | Method and apparatus for correlating and navigating between a live image and a prerecorded panoramic image |
US9361283B2 (en) | 2011-11-30 | 2016-06-07 | Google Inc. | Method and system for projecting text onto surfaces in geographic imagery |
US20130162665A1 (en) | 2011-12-21 | 2013-06-27 | James D. Lynch | Image view in mapping |
JP6143214B2 (en) | 2011-12-27 | 2017-06-07 | 株式会社Ｉｎｔｅｌａｄｅ | Taxi vehicle calling system using portable terminals |
US20150153933A1 (en) | 2012-03-16 | 2015-06-04 | Google Inc. | Navigating Discrete Photos and Panoramas |
US9477983B2 (en) | 2012-05-04 | 2016-10-25 | Gt Gettaxi Limited | Mechanisms for ordering transportation vehicles |
US9256983B2 (en) | 2012-06-28 | 2016-02-09 | Here Global B.V. | On demand image overlay |
GB201300006D0 (en) | 2013-01-01 | 2013-02-13 | Tomtom Dev Germany Gmbh | Vehicle management system |
AU2014223584B9 (en) | 2013-02-26 | 2017-03-02 | Polaris Industries Inc. | Recreational vehicle interactive telemetry, mapping, and trip planning system |
US9483117B2 (en) | 2013-04-08 | 2016-11-01 | Nokia Technologies Oy | Apparatus, method and computer program for controlling a near-eye display |
US20150002539A1 (en) | 2013-06-28 | 2015-01-01 | Tencent Technology (Shenzhen) Company Limited | Methods and apparatuses for displaying perspective street view map |
KR102207975B1 (en) | 2014-06-25 | 2021-01-25 | 한상우 | Reservation system of a bus on a regular route and method for providing service of changeing reservated seat number |
SG10202000037SA (en) | 2014-08-04 | 2020-03-30 | Uber Technologies Inc | Determining and providing predetermined location data points to service providers |
US10620010B2 (en) | 2015-02-05 | 2020-04-14 | Moovit App Global Ltd | Public and ordered transportation trip planning |
US20170059347A1 (en) | 2015-08-28 | 2017-03-02 | Google Inc. | Determining Improved Pick-Up Locations |
GB2558794A (en) | 2015-11-26 | 2018-07-18 | Beijing Didi Infinity Technology & Dev Co Ltd | Systems and methods for allocating sharable orders |
US10169804B2 (en) | 2016-02-09 | 2019-01-01 | Conduent Business Services, Llc | Methods and systems for transportation service recommendation |
CN107437183B (en) | 2016-05-25 | 2021-06-04 | 北京嘀嘀无限科技发展有限公司 | Method and system for confirming identity of boarding passenger |
US10024683B2 (en) | 2016-06-06 | 2018-07-17 | Uber Technologies, Inc. | User-specific landmarks for navigation systems |
US10929782B2 (en) | 2016-06-11 | 2021-02-23 | Apple Inc. | Integrating restaurant reservation services into a navigation application |
US9791291B1 (en) | 2016-09-26 | 2017-10-17 | Uber Technologies, Inc. | Modifying map configurations based on established location points |
US20180209803A1 (en) | 2017-01-25 | 2018-07-26 | Via Transportation, Inc. | Dynamic Route Planning |
US10082793B1 (en) * | 2017-03-21 | 2018-09-25 | GM Global Technology Operations LLC | Multi-mode transportation planning and scheduling |
US10268987B2 (en) * | 2017-04-19 | 2019-04-23 | GM Global Technology Operations LLC | Multi-mode transportation management |
US9965960B1 (en) | 2017-08-07 | 2018-05-08 | Lyft, Inc. | Facilitating transportation services by generating a directional indicator between a requester and a transportation vehicle |
US11189167B2 (en) | 2017-11-01 | 2021-11-30 | Avis Budget Car Rental, LLC | Connected user communication and interface system with shuttle tracking application |
-
2018
- 2018-12-14 US US16/220,808 patent/US11734618B2/en active Active
- 2018-12-14 CN CN201880038194.0A patent/CN110720027A/en active Pending
- 2018-12-14 WO PCT/US2018/065593 patent/WO2019118801A1/en active Application Filing
- 2018-12-14 JP JP2019570084A patent/JP7125433B2/en active Active
-
2023
- 2023-06-26 US US18/214,353 patent/US20230342674A1/en active Pending
Patent Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090210270A1 (en) * | 2008-02-20 | 2009-08-20 | Kenneth Quan | Systems and methods for providing direct communication from personalized targeted advertisements |
CN102506861A (en) * | 2011-10-12 | 2012-06-20 | 北京世纪高通科技有限公司 | Travel information processing method and device |
US20130290040A1 (en) * | 2012-04-25 | 2013-10-31 | Alexander Perry | Method and System for Arranging Taxi and Transportation Services |
US20130325340A1 (en) * | 2012-06-05 | 2013-12-05 | Apple Inc. | Routing applications for navigation |
CN103727948A (en) * | 2012-10-16 | 2014-04-16 | 北京掌行通信息技术有限公司 | Real-time guidance method for bus taking navigation |
US20140257697A1 (en) * | 2013-03-08 | 2014-09-11 | Zzzoom, LLC | Generating transport routes using public and private modes |
CN105190244A (en) * | 2013-03-15 | 2015-12-23 | 苹果公司 | Multi-modal fare calculation method, system and apparatus |
CN105683712A (en) * | 2013-08-19 | 2016-06-15 | 通腾导航技术股份有限公司 | Methods and systems for obtaining a multi-modal route |
US20160298977A1 (en) * | 2015-04-09 | 2016-10-13 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
US20170074669A1 (en) * | 2015-04-09 | 2017-03-16 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
CN106096750A (en) * | 2015-04-29 | 2016-11-09 | 福特全球技术公司 | The path at riding family is disturbed and the programme path again of user altogether |
CN105096637A (en) * | 2015-09-07 | 2015-11-25 | 百度在线网络技术（北京）有限公司 | Public transportation-based navigation information acquisition method and device |
US20170357914A1 (en) * | 2016-06-10 | 2017-12-14 | Conduent Business Services, Llc | System and method for optimal automated booking of on-demand transportation in multi-modal journeys |
CN107063285A (en) * | 2017-04-25 | 2017-08-18 | 杭州纳戒科技有限公司 | With city trip service implementing method, device and system |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113297465A (en) * | 2020-07-01 | 2021-08-24 | 阿里巴巴集团控股有限公司 | Method and device for providing traffic scheme information and electronic equipment |
CN113938521A (en) * | 2021-06-30 | 2022-01-14 | 深圳市巴滴科技有限公司 | Travel scheme recommendation method and device based on passenger demand information |
Also Published As
Publication number | Publication date |
---|---|
JP7125433B2 (en) | 2022-08-24 |
US20190188610A1 (en) | 2019-06-20 |
US20230342674A1 (en) | 2023-10-26 |
WO2019118801A1 (en) | 2019-06-20 |
JP2020531886A (en) | 2020-11-05 |
US11734618B2 (en) | 2023-08-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7463109B2 (en) | An interactive list of ride-hailing options in a navigation application | |
US20230342674A1 (en) | Multi-Modal Directions with a Ride Service Segment in a Navigation Application | |
CN110809706B (en) | Providing street level images related to ride service in navigation applications | |
US20230044010A1 (en) | Customizing visualization in a navigation application using third-party data | |
US11442596B1 (en) | Interactive digital map including context-based photographic imagery | |
JP6785871B2 (en) | Providing navigation instructions | |
WO2019246063A1 (en) | Pre-fetching map data | |
JP2023014743A (en) | Display device, display system and program |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
JP2024061750A - Computing platform for facilitating augmented reality experiences with third party assets - Google Patents
Computing platform for facilitating augmented reality experiences with third party assets Download PDFInfo
- Publication number
- JP2024061750A JP2024061750A JP2024031999A JP2024031999A JP2024061750A JP 2024061750 A JP2024061750 A JP 2024061750A JP 2024031999 A JP2024031999 A JP 2024031999A JP 2024031999 A JP2024031999 A JP 2024031999A JP 2024061750 A JP2024061750 A JP 2024061750A
- Authority
- JP
- Japan
- Prior art keywords
- data
- augmented reality
- rendering
- computing device
- software development
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000003190 augmentative effect Effects 0.000 title claims abstract description 163
- 238000009877 rendering Methods 0.000 claims abstract description 210
- 238000000034 method Methods 0.000 claims abstract description 110
- 230000000694 effects Effects 0.000 claims description 73
- 238000012545 processing Methods 0.000 claims description 23
- 238000012549 training Methods 0.000 claims description 23
- 238000012360 testing method Methods 0.000 claims description 11
- 230000018109 developmental process Effects 0.000 description 74
- 238000010801 machine learning Methods 0.000 description 50
- 230000008569 process Effects 0.000 description 47
- 238000010586 diagram Methods 0.000 description 22
- 230000008447 perception Effects 0.000 description 18
- 230000015654 memory Effects 0.000 description 14
- 238000013528 artificial neural network Methods 0.000 description 12
- 230000011218 segmentation Effects 0.000 description 10
- 230000006870 function Effects 0.000 description 9
- 238000012986 modification Methods 0.000 description 8
- 230000004048 modification Effects 0.000 description 8
- 239000002537 cosmetic Substances 0.000 description 7
- 230000000007 visual effect Effects 0.000 description 6
- 230000003796 beauty Effects 0.000 description 5
- 230000008901 benefit Effects 0.000 description 5
- 239000003086 colorant Substances 0.000 description 3
- 238000004891 communication Methods 0.000 description 3
- 238000005516 engineering process Methods 0.000 description 3
- 230000000306 recurrent effect Effects 0.000 description 3
- 238000013515 script Methods 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 2
- 238000006243 chemical reaction Methods 0.000 description 2
- 238000010276 construction Methods 0.000 description 2
- 238000013527 convolutional neural network Methods 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000001914 filtration Methods 0.000 description 2
- 238000003709 image segmentation Methods 0.000 description 2
- 230000008676 import Effects 0.000 description 2
- 230000002452 interceptive effect Effects 0.000 description 2
- 238000005259 measurement Methods 0.000 description 2
- 239000003973 paint Substances 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000007792 addition Methods 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000012937 correction Methods 0.000 description 1
- 238000013144 data compression Methods 0.000 description 1
- 238000007373 indentation Methods 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
- XXUZFRDUEGQHOV-UHFFFAOYSA-J strontium ranelate Chemical compound [Sr+2].[Sr+2].[O-]C(=O)CN(CC([O-])=O)C=1SC(C([O-])=O)=C(CC([O-])=O)C=1C#N XXUZFRDUEGQHOV-UHFFFAOYSA-J 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
Abstract
【課題】サードパーティ資産を用いて拡張現実体験を促進するためのコンピューティングプラットフォームを提供すること。
【解決手段】データ資産の取得および難読化のためのシステムと方法は、拡張現実レンダリングデータ資産をサードパーティから取得するために役立つ。ソフトウェア開発キットを送信し、データ資産を返送することにより、データ資産がユーザインターフェースにおいて拡張現実レンダリング体験と互換性があることを確認することができる。難読化を備えたデータ取得システムにより、サードパーティによって生成されたコードからセマンティクスが取り除かれ、可読性が低下することも保証される。
【選択図】図１Ａ
The present invention provides a computing platform for facilitating augmented reality experiences using third party assets.
A system and method for data asset acquisition and obfuscation is useful for acquiring augmented reality rendering data assets from a third party. By sending a software development kit and sending back the data assets, it can be confirmed that the data assets are compatible with an augmented reality rendering experience in a user interface. The data acquisition system with obfuscation also ensures that the code generated by the third party is stripped of semantics, reducing readability.
[Selected Figure] Figure 1A
Description
関連出願
本出願は、2021年1月7日に出願された米国非仮特許出願第17/144,002号の優先権および利益を主張する。米国非仮特許出願第17/144,002号は、その全体が参照により本明細書に組み込まれる。
RELATED APPLICATIONS This application claims priority to and the benefit of U.S. Non-provisional Patent Application No. 17/144,002, filed January 7, 2021. U.S. Non-provisional Patent Application No. 17/144,002 is incorporated herein by reference in its entirety.
本開示は、一般に、データ資産の取得に関する。より詳細には、本開示は、拡張現実体験をユーザに提供するためのサードパーティからのデータ資産の取得に関する。 The present disclosure relates generally to acquiring data assets. More particularly, the present disclosure relates to acquiring data assets from third parties to provide an augmented reality experience to a user.
拡張現実(AR)は、現実世界に存在するオブジェクトがコンピュータで生成された知覚情報によって強化される、現実世界環境のインタラクティブな体験の作成と実行を指すことができる。一例として、AR体験は、ユーザのカメラによってキャプチャされたシーンを、シーンに仮想オブジェクトを挿入すること、および/または、シーンに含まれる現実世界のオブジェクトの外観を修正することによって拡張することを含むことができる。 Augmented reality (AR) can refer to the creation and execution of interactive experiences of real-world environments in which objects present in the real world are augmented with computer-generated perceptual information. As an example, an AR experience can include augmenting a scene captured by a user's camera by inserting virtual objects into the scene and/or modifying the appearance of real-world objects included in the scene.
特定のエンティティは、そのエンティティによって製造または配布されたオブジェクトに関連するAR体験に参加する機能をユーザに提供し得る(たとえば、拡張現実の「試着(try-on)」)。しかしながら、ほとんどのエンティティは、これらのAR体験を独自のウェブサイトでのみ提供している。拡張現実製品の「試着」に対するアクセシビリティが制限されているため、消費者は、様々なオブジェクトに対して様々なAR体験に参加するために(たとえば、様々な製品を試着して製品を比較するために)、あるウェブサイトから別のウェブサイトに移動する必要がある可能性がある。この問題により、消費者は様々なARセッションへの参加を促進するために、様々なウェブサイト間を移動するために、より多くのコンピューティングリソースを費やす可能性がある。 Certain entities may offer users the ability to participate in AR experiences related to objects manufactured or distributed by that entity (e.g., an augmented reality "try-on"). However, most entities offer these AR experiences only on their own websites. Due to limited accessibility to augmented reality product "try-ons," consumers may need to navigate from one website to another to participate in different AR experiences for different objects (e.g., to try on different products and compare products). This issue may cause consumers to expend more computing resources navigating between different websites to facilitate participation in different AR sessions.
さらに、拡張現実体験をウェブベースで実装すると、ネイティブアプリケーションにおいて提供される拡張現実体験と比較して、フレームレートが低くなり、レンダリングがより現実的ではなくなる可能性がある。 Furthermore, web-based implementations of augmented reality experiences can result in lower frame rates and less realistic rendering compared to augmented reality experiences delivered in native applications.
様々な拡張現実体験に参加する場合のもう1つの問題は、様々なARアプリケーションが様々なコーディング言語でコーディングされる可能性があることである。特定のコーディング言語はセキュリティ上の問題を引き起こす可能性があり、アプリケーションがユーザの顔の画像またはビデオを処理する場合に特に懸念されることがある。 Another issue with participating in different augmented reality experiences is that different AR applications may be coded in different coding languages. Certain coding languages may pose security issues, which may be of particular concern if the application processes images or video of the user's face.
本開示の実施形態の態様および利点は、以下の説明において部分的に記載されるか、説明から知ることができるか、または実施形態の実践を通じて知ることができる。 Aspects and advantages of the embodiments of the present disclosure are set forth in part in the description that follows, or may be learned from the description, or may be learned by practice of the embodiments.
本開示の1つの例示的な態様は、サードパーティのデータ資産をクライアントに提供するためのコンピュータ実装方法を対象とする。本方法は、コンピューティングデバイスによってソフトウェア開発キットを送信するステップを含むことができる。ソフトウェア開発キットは、1つまたは複数のレンダリング効果シェーダを構築するためのテンプレートを含むことができる。本方法は、コンピューティングデバイスによってデータ資産を受信するステップを含むことができる。いくつかの実装形態では、データ資産は、ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを含むことができる。本方法は、コンピューティングデバイスによってデータ資産を記憶するステップと、コンピューティングデバイスによって拡張現実レンダリング体験を提供するステップとを含むことができる。いくつかの実装形態では、拡張現実レンダリングは少なくとも部分的にデータ資産に基づくことができる。 One exemplary aspect of the present disclosure is directed to a computer-implemented method for providing a third-party data asset to a client. The method can include transmitting a software development kit by a computing device. The software development kit can include templates for constructing one or more rendering effect shaders. The method can include receiving the data asset by the computing device. In some implementations, the data asset can include one or more rendering effect shaders constructed using the software development kit. The method can include storing the data asset by the computing device and providing an augmented reality rendering experience by the computing device. In some implementations, the augmented reality rendering can be based at least in part on the data asset.
本開示の別の例示的な態様は、コンピューティングシステムを対象とする。コンピューティングシステムは、1つまたは複数のプロセッサと、1つまたは複数のプロセッサによって実行されると、コンピューティングシステムに、動作を実行させる命令を集合的に記憶する1つまたは複数の非一時的コンピュータ可読媒体とを含むことができる。本動作は、拡張現実体験を生成するためのテンプレートを備えるソフトウェア開発キットを受信することを含むことができる。本動作は、テンプレートを修正するための1つまたは複数の入力を受信することを含むことができる。いくつかの実装形態では、テンプレートを修正すると、製品固有の拡張現実体験を生成することができる。いくつかの実装形態では、本動作は、1つまたは複数の入力に少なくとも部分的に基づいてデータ資産を生成することと、データ資産を第2のコンピューティングデバイスに送信することとを含むことができる。 Another exemplary aspect of the present disclosure is directed to a computing system. The computing system can include one or more processors and one or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the computing system to perform operations. The operations can include receiving a software development kit comprising a template for generating an augmented reality experience. The operations can include receiving one or more inputs for modifying the template. In some implementations, modifying the template can generate a product-specific augmented reality experience. In some implementations, the operations can include generating a data asset based at least in part on the one or more inputs and transmitting the data asset to a second computing device.
本開示の別の例示的な態様は、1つまたは複数のプロセッサによって実行されると、コンピューティングシステムに、動作を実行させる命令を集合的に記憶する1つまたは複数の非一時的コンピュータ可読媒体を対象とする。本動作は、コンピューティングデバイスによってソフトウェア開発キットを送信することを含むことができる。いくつかの実装形態では、ソフトウェア開発キットは、1つまたは複数のレンダリング効果シェーダを構築するためのテンプレートを含むことができる。本動作は、コンピューティングデバイスによってデータ資産を受信することを含むことができる。データ資産は、ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを含むことができる。本動作は、コンピューティングデバイスによってデータ資産を記憶することと、コンピューティングデバイスによって拡張現実レンダリング体験を提供することとを含むことができる。いくつかの実装形態では、拡張現実レンダリングは少なくとも部分的にデータ資産に基づくことができる。 Another exemplary aspect of the present disclosure is directed to one or more non-transitory computer-readable media that collectively store instructions that, when executed by one or more processors, cause a computing system to perform operations. The operations can include transmitting a software development kit by the computing device. In some implementations, the software development kit can include templates for constructing one or more rendering effect shaders. The operations can include receiving data assets by the computing device. The data assets can include one or more rendering effect shaders constructed using the software development kit. The operations can include storing the data assets by the computing device and providing an augmented reality rendering experience by the computing device. In some implementations, the augmented reality rendering can be based at least in part on the data assets.
本開示の他の態様は、様々なシステム、装置、非一時的コンピュータ可読媒体、ユーザインターフェース、および電子デバイスを対象とする。 Other aspects of the present disclosure are directed to various systems, apparatus, non-transitory computer-readable media, user interfaces, and electronic devices.
本開示の様々な実施形態のこれらおよび他の特徴、態様、および利点は、以下の説明および添付の特許請求の範囲を参照することにより、よりよく理解されるであろう。本明細書に組み込まれ、その一部を構成する添付の図面は、本開示の例示的な実施形態を示しており、説明とともに関連する原理を説明するために役立つ。 These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate exemplary embodiments of the present disclosure and, together with the description, serve to explain the relevant principles.
当業者を対象とした実施形態の詳細な説明は、添付の図面を参照して本明細書に記載される。 A detailed description of the embodiments, intended for those skilled in the art, is set forth herein with reference to the accompanying drawings.
複数の図面にわたって繰り返される参照番号は、様々な実装形態において同じ特徴を識別することが意図されている。 Reference numbers repeated across multiple drawings are intended to identify the same features in various implementations.
概観
一般に、本開示は、拡張現実レンダリング体験をユーザに提供するために、サードパーティからのデータ資産の収集を容易にするプラットフォームを対象とする。たとえば、プラットフォームは、ユーザに提供するレンダリング効果を構築および/または提出するためのインターフェースをサードパーティに提供することができる。プラットフォームは、拡張現実レンダリング体験をユーザに提供し得、ユーザは、ユーザデータを入力し、出力として拡張ユーザデータを受信することができる。さらに、別の例示的な態様によれば、プラットフォームは、サードパーティのコードを保護するために、受信したサードパーティのデータ資産に対して様々な難読化技法を実行することができる。
Overview In general, the present disclosure is directed to a platform that facilitates collection of data assets from third parties to provide an augmented reality rendering experience to a user. For example, the platform can provide an interface to a third party to build and/or submit rendering effects to be provided to the user. The platform can provide an augmented reality rendering experience to a user, where the user can input user data and receive augmented user data as output. Additionally, according to another exemplary aspect, the platform can perform various obfuscation techniques on received third-party data assets to protect the third-party code.
したがって、本開示の例示的な態様は、サードパーティの機密情報を保護するために、拡張現実レンダリングのためにサードパーティのデータ資産を取得することと、取得したコードを難読化することとを行うためのシステムを提供することができる。いくつかの実装形態では、システムおよび方法は、ソフトウェア開発キットをサードパーティに送信することを含むことができる。ソフトウェア開発キットは、レンダリング効果シェーダを構築するためのテンプレートを含み得る。一例として、AR効果は、共有テンプレートと製品ごとの複数のプリセットに編成することができる。テンプレートは、特定のファミリにおけるすべての製品(たとえば、特定のベンダからのすべての口紅)に共通のシェーダおよび他のリソースを含むことができる。プリセットは、それらのシェーダに対応するパラメータを含み、均一な値およびテクスチャを含むことができる。サードパーティは、データ資産をプラットフォームに提供することができる(たとえば、SDK内にパッケージ化されている)。例として、データ資産は、ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを含むことができる。受信したデータ資産は記憶することができる。次いで、拡張現実レンダリング体験を促進するためにデータ資産を使用することができ、データ資産は拡張現実試着体験を生成する際に役立つ。 Thus, exemplary aspects of the present disclosure may provide a system for acquiring third-party data assets for augmented reality rendering and obfuscating the acquired code to protect confidential information of the third party. In some implementations, the system and method may include sending a software development kit to the third party. The software development kit may include templates for building rendering effect shaders. As an example, the AR effects may be organized into a shared template and multiple presets per product. The templates may include shaders and other resources that are common to all products in a particular family (e.g., all lipsticks from a particular vendor). The presets may include parameters corresponding to those shaders and may include uniform values and textures. The third party may provide the data assets to the platform (e.g., packaged within an SDK). As an example, the data assets may include one or more rendering effect shaders built using the software development kit. The received data assets may be stored. The data assets may then be used to facilitate an augmented reality rendering experience, and the data assets are useful in generating an augmented reality try-on experience.
データ資産取得のためのシステムおよび方法は、1つまたは複数のシステムまたはデバイスが関与する場合がある。第1のコンピューティングデバイスは、サーバ、促進コンピューティングデバイス、または仲介コンピューティングデバイスであってもよい。第2のコンピューティングデバイスは、サードパーティのコンピューティングデバイスであってもよい。サードパーティは、ビデオゲーム会社、製品メーカ、または製品ブランドとすることができる。第1のコンピューティングデバイスと第2のコンピューティングデバイスは、ユーザのために拡張現実レンダリング体験を生成するために、データを交換することができる。拡張現実レンダリング体験は、1つまたは複数の製品または品目を含む拡張現実ビューのレンダリングを含むことができる。製品は、化粧品(たとえば、口紅、アイシャドウなど)、家具もしくは他の家庭用品(たとえば、電子機器、調理器具、ガラス製品、装飾品、植物など)、衣類、ペイントカラー、自動車、様々な電子機器、または他の品目であり得る。 The systems and methods for data asset acquisition may involve one or more systems or devices. The first computing device may be a server, a facilitating computing device, or an intermediary computing device. The second computing device may be a third-party computing device. The third party may be a video game company, a product manufacturer, or a product brand. The first computing device and the second computing device may exchange data to generate an augmented reality rendered experience for the user. The augmented reality rendered experience may include rendering an augmented reality view that includes one or more products or items. The products may be cosmetics (e.g., lipstick, eye shadow, etc.), furniture or other household items (e.g., electronics, cookware, glassware, ornaments, plants, etc.), clothing, paint colors, automobiles, various electronic devices, or other items.
データ資産の取得は、第1のコンピューティングデバイスがソフトウェア開発キットを第2のコンピューティングデバイスに送信することを含むことができる。ソフトウェア開発キットは、レンダリング効果シェーダを構築するためのテンプレートを含むことができる。ソフトウェア開発キットは、例示的な効果、レンダリング効果を構築するためのツール、および拡張現実レンダリングを構築するために役立つプレビューモードを含むことができる。第2のコンピューティングデバイスは、レンダリング効果を構築するために使用することができ、レンダリング効果が構築されると、第2のコンピューティングデバイスは、構築されたレンダリング効果データを、レンダリング効果を再作成するために必要なデータ資産を含めることができるレンダリング可能な圧縮ファイル(たとえば、.ZIPファイル)にエクスポートすることができる。次いで、データ資産を第1のコンピューティングデバイスに送信することができる。第1のコンピューティングデバイスは、データ資産を受信すると、ユーザに提供される拡張現実レンダリング体験において使用するためにデータ資産を記憶することができる。提供される拡張現実レンダリング体験は、ユーザに提供することができ、ユーザは、処理のためにユーザデータを入力することができ、出力は、第2のコンピューティングデバイス上に構築されたレンダリング効果を含む拡張ユーザデータとすることができる。ユーザデータは、ユーザデバイスによってキャプチャされた画像データまたはビデオデータであり得る。いくつかの実装形態では、ユーザデータはライブカメラフィードであり得る。 The acquisition of the data assets can include the first computing device sending a software development kit to the second computing device. The software development kit can include templates for building rendering effect shaders. The software development kit can include example effects, tools for building the rendering effect, and a preview mode useful for building the augmented reality rendering. The second computing device can be used to build the rendering effect, and once the rendering effect is built, the second computing device can export the built rendering effect data to a renderable compressed file (e.g., a .ZIP file) that can include the data assets necessary to recreate the rendering effect. The data assets can then be sent to the first computing device. Upon receiving the data assets, the first computing device can store the data assets for use in an augmented reality rendering experience provided to a user. The provided augmented reality rendering experience can be provided to a user, where the user can input user data for processing, and the output can be augmented user data including the rendering effect built on the second computing device. The user data can be image data or video data captured by the user device. In some implementations, the user data can be a live camera feed.
いくつかの実装形態では、1つまたは複数のレンダリング効果シェーダは、レンダリング機能を記述するデータを含むことができる。拡張現実体験のためのレンダリング効果をレンダリングするために、1つまたは複数のレンダリング効果シェーダが使用され得る。たとえば、拡張現実を使用して顔に口紅をレンダリングすることは、口紅シェーダ、テクスチャ、ユニフォーム、およびフィルタリングシェーダの利用を含むことができる。いくつかの実装形態では、レンダリング効果を生成する際に支援するために、テクスチャとユニフォームをシェーダに入力することができる。いくつかの実装形態では、データ資産はレンダリング効果シェーダを含むことができる。いくつかの実装形態では、レンダリング効果シェーダは、レンダリングされた画像を生成するために、ユーザデータとともにレンダリング計算機によって処理することができる。 In some implementations, one or more rendering effect shaders may include data describing rendering capabilities. One or more rendering effect shaders may be used to render rendering effects for an augmented reality experience. For example, rendering lipstick on a face using augmented reality may include utilizing a lipstick shader, textures, uniforms, and filtering shaders. In some implementations, textures and uniforms may be input to the shaders to assist in generating the rendering effect. In some implementations, the data assets may include rendering effect shaders. In some implementations, the rendering effect shaders may be processed by a rendering calculator along with user data to generate a rendered image.
いくつかの実装形態では、拡張現実レンダリングの生成を容易にするために、受信したデータ資産を使用することができる。メッシュモデルは、メッシュおよびセグメンテーションマスクを生成するために、入力データを処理できる場合がある。次いで、拡張モデルはメッシュおよびセグメンテーションマスクを受信し得、特定のレンダリングをどこでどのようにレンダリングするかを決定するためにデータ資産を使用することができる。たとえば、データ資産は、アンカーランドマークデータを含むことができる。したがって、どこでレンダリングを行う必要があるかを決定するために、データ資産を使用することができる。いくつかの実装形態では、データ資産はシェーダデータを含むことができる。シェーダデータは、ユーザに対するメイクアップ拡張現実レンダリングを生成する際に支援するために、口紅の色またはアイシャドウの色を記述してもよい。さらに、シェーダデータは、製品の色、光沢度、不透明度、および/または他の様々な特性を記述し得る。 In some implementations, the received data assets can be used to facilitate the generation of the augmented reality rendering. The mesh model may be able to process the input data to generate a mesh and a segmentation mask. The augmented model may then receive the mesh and segmentation mask and use the data assets to determine where and how to render a particular rendering. For example, the data assets can include anchor landmark data. Thus, the data assets can be used to determine where the rendering needs to occur. In some implementations, the data assets can include shader data. The shader data may describe the color of a lipstick or the color of an eye shadow to assist in generating a makeup augmented reality rendering for a user. Additionally, the shader data may describe the color, glossiness, opacity, and/or various other characteristics of the product.
拡張現実レンダリング体験は、データ資産に少なくとも部分的に基づいてレンダリングを生成するレンダリング計算機を含むことができる。いくつかの実装形態では、拡張現実レンダリング体験はレンダリングエンジンを含むことができ、レンダリングエンジンはレンダリング計算機を含むことができる。 The augmented reality rendering experience can include a rendering calculator that generates a rendering based at least in part on the data assets. In some implementations, the augmented reality rendering experience can include a rendering engine, and the rendering engine can include the rendering calculator.
拡張現実レンダリング体験は、知覚サブグラフとレンダリングサブグラフを含み得る。知覚サブグラフはシステム全体で均一にすることができる。知覚サブグラフは、様々な異なるレンダリングサブグラフとともに使用され得る。レンダリングサブグラフは、ユーザに提供するレンダリング効果を生成するために、サードパーティによって構築することができる。レンダリングサブグラフは、構築され、次いで、知覚サブグラフを記憶する拡張現実レンダリング体験プラットフォームによって使用され得る。レンダリングサブグラフは、レンダリング効果とサードパーティによって異なる場合がある。いくつかの実装形態では、拡張されたユーザ画像またはビデオにおいて複数のレンダリングをレンダリングするために単一の知覚サブグラフを複数のレンダリングサブグラフとともに使用することができる。たとえば、顔の口紅、アイシャドウ、およびマスカラの拡張現実レンダリングを生成するために、ユーザの顔の写真またはビデオを処理することができる。処理は、単一の知覚サブグラフを含み得るが、それぞれの製品(すなわち、口紅、アイシャドウ、およびマスカラ)のレンダリングサブグラフを含み得る。 The augmented reality rendering experience may include a perception subgraph and a rendering subgraph. The perception subgraph may be uniform across the system. The perception subgraph may be used with a variety of different rendering subgraphs. The rendering subgraph may be constructed by a third party to generate the rendering effect provided to the user. The rendering subgraph may be constructed and then used by the augmented reality rendering experience platform, which stores the perception subgraph. The rendering subgraph may vary depending on the rendering effect and the third party. In some implementations, a single perception subgraph may be used with multiple rendering subgraphs to render multiple renderings in an augmented user image or video. For example, a photo or video of a user's face may be processed to generate an augmented reality rendering of lipstick, eye shadow, and mascara on the face. The processing may include a single perception subgraph, but may include rendering subgraphs for each product (i.e., lipstick, eye shadow, and mascara).
いくつかの実装形態では、データ資産は、サードパーティによって販売される製品を記述する製品データを含むことができる。いくつかの実装形態では、本明細書に開示されるシステムおよび方法は、消費者が様々な異なるブランドまたはプロバイダからの異なる製品を仮想試着できるように、小売業者向けの製品拡張現実レンダリング体験をコンパイルするために使用することができる。小売業者はオンライン小売業者であり、消費者は自宅で快適に製品を仮想的に試着することができる。いくつかの実装形態では、小売業者は物理的な店舗小売業者であってもよく、その場合、拡張現実体験は、店舗内にあるモバイルアプリケーションまたはコンピューティングデバイスを通じて有効にすることができる。いくつかの実装形態では、本明細書で開示されるシステムおよび方法は、消費者が製品のブランド、製品のタイプ、製品の色などを検索し得る検索エンジンアプリケーション内での拡張現実レンダリング体験を可能にすることができ、検索エンジンは、検索クエリに基づいて結果を提供することができ、その結果は、拡張現実を使用して決定された結果を試着するオプションを含む。 In some implementations, the data assets may include product data describing products sold by a third party. In some implementations, the systems and methods disclosed herein may be used to compile product augmented reality rendering experiences for a retailer to allow consumers to virtually try on different products from a variety of different brands or providers. The retailer may be an online retailer, allowing consumers to virtually try on products from the comfort of their own home. In some implementations, the retailer may be a physical store retailer, in which case the augmented reality experience may be enabled through a mobile application or computing device located within the store. In some implementations, the systems and methods disclosed herein may enable an augmented reality rendering experience within a search engine application, in which a consumer may search for a brand of product, a type of product, a color of product, etc., and the search engine may provide results based on the search query, including an option to try on the results determined using augmented reality.
いくつかの実装形態では、受信したデータ資産により、様々な拡張現実体験を生成できるようになる。たとえば、データ資産は、家庭内で自社の製品のうちの1つまたは複数をレンダリングする際に役立つように、家具または他の家庭用品の製造業者、流通業者、販売業者などによって生成されたデータ資産を含むことができる。この実装形態では、サードパーティがソフトウェア開発キットを修正および微調整して、家具または他の家庭用品の拡張現実体験を生成できるようにし得る。サードパーティが生成された体験に満足した場合、記憶するために、データ資産を促進システム/プラットフォームにエクスポートして送信し得る。促進システムは、ユーザが拡張現実レンダリング体験にアクセスできるようにするために、データ資産を使用することができる。 In some implementations, the received data assets enable the generation of various augmented reality experiences. For example, the data assets may include data assets generated by manufacturers, distributors, sellers, etc. of furniture or other household items to aid in rendering one or more of their products in a home. In this implementation, a third party may modify and tweak the software development kit to enable the generation of augmented reality experiences of the furniture or other household items. If the third party is satisfied with the generated experience, they may export and send the data assets to a facilitation system/platform for storage. The facilitation system may use the data assets to enable users to access the augmented reality rendering experience.
拡張現実レンダリングは、ユーザデータを受信することと、ユーザメッシュを生成するためにユーザデータをエンコーダモデルで処理することと、拡張現実レンダリングを生成するためにユーザメッシュを拡張モデルで処理することとを行うことによって、生成することができる。いくつかの実装形態では、メッシュは多角形メッシュであり得る。いくつかの実装形態では、拡張モデルは、データ資産に少なくとも部分的に基づくシェーダを含むことができる。いくつかの実装形態では、拡張モデルは、カスタムシェーダを使用して多角形メッシュをレンダリングし、カメラフィード画像に重ね合わせることによって拡張現実レンダリングを生成することができる。 The augmented reality rendering can be generated by receiving user data, processing the user data with an encoder model to generate a user mesh, and processing the user mesh with the augmented model to generate the augmented reality rendering. In some implementations, the mesh can be a polygonal mesh. In some implementations, the augmented model can include a shader based at least in part on the data assets. In some implementations, the augmented model can generate the augmented reality rendering by rendering a polygonal mesh using a custom shader and overlaying it on a camera feed image.
いくつかの実装形態では、システムおよび方法は、ソフトウェア開発キットを取り込んで修正するサードパーティのコンピューティングデバイスを含むことができる。本方法は、拡張現実体験を生成するために修正されるように構成されたソフトウェア開発キットを受信するステップを含むことができる。さらに、本方法は、ソフトウェア開発キットを修正するために1つまたは複数の入力を受信するステップを含むことができ、ソフトウェア開発キットを修正するステップは、製品固有の拡張現実体験を生成する。本方法は、1つまたは複数の入力に少なくとも部分的に基づいてデータ資産を生成するステップと、データ資産を第2のコンピューティングデバイスに送信するステップを含むことができる。 In some implementations, the system and method can include a third-party computing device that captures and modifies the software development kit. The method can include receiving a software development kit configured to be modified to generate an augmented reality experience. Additionally, the method can include receiving one or more inputs to modify the software development kit, where modifying the software development kit generates a product-specific augmented reality experience. The method can include generating data assets based at least in part on the one or more inputs and transmitting the data assets to a second computing device.
いくつかの実装形態では、サードパーティのコンピューティングデバイスは、微調整のために拡張現実体験をテストし得る。拡張現実体験のテストは、レンダリングされた画像と事前レンダリングされた参照(「ゴールデン」)画像とを比較することを含むことができる。あるいは、いくつかの実装形態では、テストは、トレーニングデータを入手することと、拡張現実メディアを生成するためにトレーニングデータを拡張現実体験で処理することと、拡張現実メディアと参照データを比較することとを含むことができる。データ資産の1つまたは複数のパラメータは、比較に少なくとも部分的に基づいて(たとえば、拡張現実メディアと参照データとを比較する損失関数に基づいて)調整することができる(たとえば、機械学習アルゴリズムを使用して自動的に)。 In some implementations, the third-party computing device may test the augmented reality experience for fine-tuning. Testing the augmented reality experience may include comparing a rendered image with a pre-rendered reference ("golden") image. Alternatively, in some implementations, testing may include obtaining training data, processing the training data with the augmented reality experience to generate augmented reality media, and comparing the augmented reality media with the reference data. One or more parameters of the data assets may be adjusted (e.g., automatically using a machine learning algorithm) based at least in part on the comparison (e.g., based on a loss function that compares the augmented reality media with the reference data).
いくつかの実装形態では、システムおよび方法は、コードを難読化するために、受信したデータ資産を処理し得る。難読化は、コードから空白を削除することと、コードから1つまたは複数のコメントを削除することと、コード内の用語および記号を名前変更することとを含むことができる。1つまたは複数のコメントは、コードのセマンティクスを記述するテキストを含み得るため、削除され得る。データ資産のコード内の1つまたは複数の用語を名前変更するステップは、ファイル全体での均一な名前変更を含むことができる。均一な名前変更プロセスは、将来の均一な名前変更のための参照を提供するためのインデックス用語を含むことができる。いくつかの実装形態では、名前変更はハッシュ関数の使用を含むことができる。ハッシュは、グローバルレジストリまたはインデックステーブルにおいてインデックス付けされ得る。新しい記号は、受信時にインデックスにアクティブに追加され得る。名前変更された用語および記号は、決定的な用語である可能性がある。いくつかの実装形態では、システムは複数のファイル間で共有される関数名などの記号を名前変更することができる。 In some implementations, the system and method may process the received data asset to obfuscate the code. The obfuscation may include removing whitespace from the code, removing one or more comments from the code, and renaming terms and symbols in the code. The one or more comments may be removed as they may contain text that describes the semantics of the code. Renaming one or more terms in the code of the data asset may include uniform renaming across files. The uniform renaming process may include indexing terms to provide references for future uniform renaming. In some implementations, the renaming may include using a hash function. The hash may be indexed in a global registry or index table. New symbols may be actively added to the index as they are received. The renamed terms and symbols may be deterministic terms. In some implementations, the system may rename symbols such as function names that are shared across multiple files.
名前変更は、シェーダコードの解析と、置換する特定の宣言の分離が含まれる場合がある。空白を削除すると、特定の方法でフォーマットコードに含まれる一部のロジックを削除するために、コードの編成を削除することができる。難読化は、サードパーティが公開したくないシェーダ情報(たとえば、OpenGLコード、GLSL、または他のネイティブソースにある機密情報)を含む可能性のあるセマンティックコンテンツを削除することを含むことができる。 Renaming may involve parsing the shader code and isolating specific declarations to replace. Removing whitespace may involve removing code organization to remove some logic contained in formatted code in a certain way. Obfuscation may involve removing semantic content that may contain shader information that you do not want a third party to expose (e.g., sensitive information that may be in OpenGL code, GLSL, or other native sources).
いくつかの実装形態では、プラットフォームは、製品レンダリングのディレクトリを生成するために使用することができる。広告、ビデオウェブアプリケーション、またはモバイルアプリのレンダリングを提供するために、拡張現実レンダリングのディレクトリを実装することができる。いくつかの実装形態では、共有コードがライブラリの依存関係としてディレクトリに統合され得る。 In some implementations, the platform can be used to generate a directory of product renderings. A directory of augmented reality renderings can be implemented to provide renderings of advertisements, video web applications, or mobile apps. In some implementations, shared code can be integrated into the directory as a library dependency.
データ資産の受信または取込みは、様々な方法を通じて行うことができる。いくつかの実装形態では、プラットフォームに組み込まれたエクスポート機能を通じて取込みを行うことができる。他の実装形態では、データ資産は、単一のトップレベルファイルにおいて定義されたシェーダユニフォームによってパラメータ化された単一の効果テンプレートを電子メールで送信することを通じて配信することができる。たとえば、口紅のレンダリングの場合、サードパーティは、ユーザに提供したい口紅製品ごとにシェーダ均一値を送信することができる。このシステムおよび方法は、効果テンプレートと製品ごとのシェーダユニフォームを組み合わせて、製品ごとにAR効果(たとえば、美容効果)を生成することができる。いくつかの実装形態では、電子メールの代わりにインターネットベースのデータフィードを通じてデータ資産を取り込むことができる。データ資産は個別に取り込むことも、まとめて取り込むこともできる。 Data assets can be received or ingested through a variety of methods. In some implementations, ingest can occur through an export feature built into the platform. In other implementations, data assets can be delivered through emailing a single effect template parameterized by shader uniforms defined in a single top-level file. For example, for lipstick rendering, a third party can send shader uniform values for each lipstick product they wish to provide to the user. The system and method can combine the effect template and the shader uniforms per product to generate an AR effect (e.g., a beauty effect) per product. In some implementations, data assets can be ingested through an internet-based data feed instead of email. Data assets can be ingested individually or in bulk.
いくつかの実装形態では、ソフトウェア開発キットは、様々な製品タイプに合わせて構成することができる。たとえば、口紅をレンダリングするためのデータ資産を構築するためのソフトウェア開発キットには、ソファをレンダリングするためのデータ資産を構築するためのソフトウェア開発キットとは異なるテンプレートおよびプリセットを含むことができる。さらに、美容効果を共有の「テンプレート」および製品ごとの複数のプリセットに編成することで、サードパーティが特定の製品をレンダリングするためのデータ資産を構築する際に役立つ。テンプレートは、特定のファミリにおけるすべての製品(たとえば、ベンダAからのすべての口紅など)に共通のシェーダおよび他のリソースを含むことができる。プリセットは、それらのシェーダに対応するパラメータを含むことができ、均一な値およびテクスチャを含むことができる。 In some implementations, software development kits can be configured for different product types. For example, a software development kit for building data assets for rendering lipsticks can include different templates and presets than a software development kit for building data assets for rendering sofas. Additionally, beauty effects can be organized into shared "templates" and multiple presets per product to aid third parties in building data assets for rendering specific products. Templates can include shaders and other resources that are common to all products in a particular family (e.g., all lipsticks from vendor A). Presets can include parameters corresponding to those shaders and can include uniform values and textures.
いくつかの実装形態では、本明細書で開示されるシステムおよび方法は、ネイティブアプリケーションとして実装することができる。ネイティブアプリケーションは、クライアントによって選択されるサードパーティ製品のレンダリングを含む拡張現実レンダリング体験をクライアントに提供することができる。 In some implementations, the systems and methods disclosed herein can be implemented as a native application. The native application can provide the client with an augmented reality rendering experience that includes renderings of third-party products selected by the client.
本明細書で開示されるシステムおよび方法はまた、複合現実を含む他の技術に適用可能である。いくつかの実装形態では、インタラクティブなレンダリングを構築するために、サードパーティがソフトウェア開発キットを使用することができる。たとえば、家具ブランドは、様々なリクライニングチェアや様々な拡張可能なテーブルに対して様々なレンダリング効果を構築し得る。ユーザが自宅において家具をレンダリングできる複合現実レンダリング体験を提供するために、レンダリング効果シェーダを拡張現実レンダリング体験プラットフォームに転送することができる。次いで、ユーザは、デフォルトの位置および別の位置における家具のレンダリングを確認するために、レンダリングと対話することができる。したがって、ユーザは、リクライニングチェアが直立位置とリクライニング位置で自宅にどのように適合し得るかをテストすることができる。ユーザは、拡張されたテーブルが所与の部屋に収まるかどうかを決定するために、複合現実体験を使用することができる。 The systems and methods disclosed herein are also applicable to other technologies, including mixed reality. In some implementations, a software development kit can be used by a third party to build interactive renderings. For example, a furniture brand may build different rendering effects for different reclining chairs and different extendable tables. The rendering effect shaders can be transferred to an augmented reality rendering experience platform to provide a mixed reality rendering experience where a user can render the furniture in their home. The user can then interact with the rendering to see the rendering of the furniture in a default position and in another position. Thus, a user can test how a reclining chair might fit in their home in an upright position and a reclined position. A user can use the mixed reality experience to determine if an extended table will fit in a given room.
さらに、データ資産の取得および難読化のプラットフォームは、サポートされるユーザ体験を生成するために他の様々なプラットフォームに適用することができる。データ取得用のプラットフォームは、サポートされるアプリケーションの作成、組込み機能の作成、およびウィジェットの作成に利用することができる。 Furthermore, the data asset acquisition and obfuscation platform can be applied to various other platforms to generate supported user experiences. The data acquisition platform can be utilized to create supported applications, build embedded features, and create widgets.
さらに、いくつかの実装形態では、システムおよび方法は、視覚的な互換性計算機として使用され得る。たとえば、システムおよび方法は、特定の製品または部品が所望の空間または場所に適合することを保証するために使用することができる。システムおよび方法は、仮想現実を使用して製品の寸法/サイズを仮想的にテストするために使用することができる。サードパーティは、製品の測定値を記述するデータを含むデータ資産を提供することができる。次いで、データ資産は、サードパーティによって提供される測定値に従って製品がレンダリングされる拡張現実レンダリング体験をユーザに提供するために使用することができる。この態様により、製品が占有する空間を視覚化するために、消費者は製品を「試着」することができる。 Furthermore, in some implementations, the system and method may be used as a visual compatibility calculator. For example, the system and method may be used to ensure that a particular product or part will fit into a desired space or location. The system and method may be used to virtually test the dimensions/size of a product using virtual reality. A third party may provide a data asset that includes data describing the measurements of a product. The data asset may then be used to provide a user with an augmented reality rendering experience in which the product is rendered according to the measurements provided by the third party. This aspect allows a consumer to "try on" the product in order to visualize the space the product will occupy.
本開示のシステムおよび方法は、多くの技術的効果および利点を提供する。一例として、システムおよび方法は、クライアントがアプリケーションにおいて製品を仮想的に見ることを可能にするために、拡張現実のためのパラメータをサードパーティから受信することができる。このシステムおよび方法は、サードパーティから提供されるデータのセキュリティを確保するためにさらに使用することもできる。さらに、このシステムおよび方法により、ユーザが、ウェブサイトからウェブサイトへ、または独自のアプリケーションから独自のアプリケーションへと移動することなく、複数のベンダからの製品を試着できるようにするために、様々なベンダからの仮想試着用の拡張現実データセットの一元的な収集が可能になる。 The systems and methods of the present disclosure provide many technical effects and advantages. As an example, the systems and methods can receive parameters for augmented reality from a third party to allow a client to virtually view the product in the application. The systems and methods can also be used to ensure the security of data provided by the third party. Additionally, the systems and methods enable centralized collection of augmented reality data sets of virtual try-on clothing from various vendors to allow a user to try on products from multiple vendors without having to navigate from website to website or proprietary application to proprietary application.
さらに、いくつかの実装形態では、開示されたシステムおよび方法は、ネイティブアプリケーションに実装することができる。ネイティブアプリケーションにおけるシステムおよび方法の実装形態により、ウェブアプリケーションの代替と比較して、より高いフレームレートとより現実的なレンダリングを提供することができる。 Furthermore, in some implementations, the disclosed systems and methods can be implemented in native applications. Implementation of the systems and methods in native applications can provide higher frame rates and more realistic rendering compared to web application alternatives.
本開示のシステムおよび方法の別の技術的利点は、コード(たとえば、シェーダコード)を難読化できることである。このシステムおよび方法により、最初に提供されたソースコードに含まれる機密情報を漏らすコメントまたは記号なしでコードがクラスタ化される可能性がある。このシステムおよび方法は受信したデータ資産を難読化することもできるため、サードパーティは特定の機密情報を漏らすことなくデータを提供することができる。 Another technical advantage of the systems and methods of the present disclosure is the ability to obfuscate code (e.g., shader code). The systems and methods may cluster code without comments or symbols that would reveal sensitive information contained in the originally provided source code. The systems and methods may also obfuscate received data assets, allowing third parties to provide data without revealing certain sensitive information.
次に、図面を参照して、本開示の例示的な実施形態をさらに詳細に説明する。 Next, an exemplary embodiment of the present disclosure will be described in more detail with reference to the drawings.
例示的なデバイスおよびシステム
図1Aは、本開示の例示的な実施形態による、データ資産取得を実行する例示的なコンピューティングシステム80のブロック図を示している。システム80は、クライアントコンピューティングシステム20、拡張現実プラットフォーム30、およびサードパーティコンピューティングシステムを含む。
1A illustrates a block diagram of an exemplary computing system 80 for performing data asset acquisition according to an exemplary embodiment of the present disclosure. The system 80 includes a client computing system 20, an augmented reality platform 30, and a third-party computing system.
図1Aに示されるように、拡張現実プラットフォーム30は、サードパーティ拡張現実(AR)資産ライブラリ40を生成するために、サードパーティコンピューティングシステム60と通信することができる。クライアントインターフェース32を介してクライアントコンピューティングシステム20に拡張現実(AR)体験を提供するために、サードパーティAR資産ライブラリ40を活用することができる。 As shown in FIG. 1A, the augmented reality platform 30 can communicate with a third-party computing system 60 to generate a third-party augmented reality (AR) asset library 40. The third-party AR asset library 40 can be leveraged to provide an augmented reality (AR) experience to the client computing system 20 via the client interface 32.
たとえば、拡張現実プラットフォーム30は、テンプレートを備えたソフトウェア開発キット(SDK)をサードパーティコンピューティングシステム60に提供することができる。サードパーティコンピューティングシステム60は、サードパーティによって販売される製品を記述する拡張現実レンダリング効果を構築するために、テンプレートを備えたSDKを使用することができる。完成したレンダリング効果は、完成したデータ資産として拡張現実プラットフォーム30に戻すことができる。完成した各データ資産は、拡張現実プラットフォーム30のサードパーティAR資産ライブラリ40に記憶することができる。サードパーティAR資産ライブラリ40に記憶されている製品資産は、単一のサードパーティからのものであってもよく、多数のサードパーティからのものであってもよい。たとえば、製品1資産42、製品2資産44から、製品N資産46に至るまでは、単一のサードパーティコンピューティングシステムからのものであってよく、サードパーティによって提供される様々な製品を含むことができる。あるいは、製品1資産42および製品2資産44は、異なるサードパーティによって提供することができ、異なるブランドの異なる製品を記述するデータ資産を含むことができる。 For example, the augmented reality platform 30 can provide a software development kit (SDK) with templates to the third-party computing system 60. The third-party computing system 60 can use the SDK with templates to build an augmented reality rendering effect that describes a product sold by the third party. The completed rendering effect can be returned to the augmented reality platform 30 as a completed data asset. Each completed data asset can be stored in the third-party AR asset library 40 of the augmented reality platform 30. The product assets stored in the third-party AR asset library 40 can be from a single third party or from multiple third parties. For example, product 1 assets 42, product 2 assets 44, through product N assets 46 can be from a single third party computing system and can include various products offered by the third parties. Alternatively, product 1 assets 42 and product 2 assets 44 can be provided by different third parties and can include data assets describing different products of different brands.
拡張現実プラットフォーム30は、レンダリングエンジン34によって処理されて、AR体験をクライアントコンピューティングシステム20に提供するために、クライアントインターフェース32を介してクライアントデータを取り込むことができる。レンダリングエンジン34は、知覚モデルおよび拡張モデルを用いてクライアントデータを処理することができる。知覚モデルは、拡張モデルに入力することができる1つまたは複数のメッシュと1つまたは複数のセグメンテーションマスクを出力することができる。拡張モデルは、拡張現実クライアント画像またはビデオを出力するためにクライアントデータ、1つまたは複数のメッシュ、および1つまたは複数のセグメンテーションマスクを処理することができ、これは、クライアントインターフェース32を介してクライアントコンピューティングシステム20に送信することができる。 The augmented reality platform 30 can take in client data via the client interface 32 for processing by the rendering engine 34 to provide an AR experience to the client computing system 20. The rendering engine 34 can process the client data with a perception model and an augmented model. The perception model can output one or more meshes and one or more segmentation masks that can be input into the augmented model. The augmented model can process the client data, one or more meshes, and one or more segmentation masks to output an augmented reality client image or video, which can be sent to the client computing system 20 via the client interface 32.
いくつかの実装形態では、AR体験は、「試着」する所望の製品を示すために、クライアントコンピューティングシステム20が拡張現実プラットフォーム30に選択を送信することを含むことができる。拡張現実プラットフォームは、データ資産を使用してレンダリングエンジン34の拡張モデルをパラメータ化することによって、クライアントが提供する画像またはビデオにおいて製品をレンダリングするために、サードパーティのAR資産ライブラリ40からの記憶されたデータ資産を使用することができる。たとえば、クライアントコンピューティングシステム20は、仮想的に試着する製品1を選択するために、クライアントインターフェース32を使用し得る。製品1資産42は、クライアントデータのセットとともにレンダリングエンジン34に提供され得る。レンダリングエンジン34は、クライアントコンピューティングシステム20によって提供される画像またはビデオにおいて製品1の画像またはビデオを生成するために、クライアントデータのセットおよび製品1資産42を処理することができる。 In some implementations, the AR experience can include the client computing system 20 sending a selection to the augmented reality platform 30 to indicate a desired product to "try on." The augmented reality platform can use stored data assets from a third-party AR asset library 40 to render the product in the client-provided image or video by parameterizing an augmented model in the rendering engine 34 with the data assets. For example, the client computing system 20 can use the client interface 32 to select product 1 to virtually try on. The product 1 asset 42 can be provided to the rendering engine 34 along with a set of client data. The rendering engine 34 can process the set of client data and the product 1 asset 42 to generate an image or video of product 1 in the image or video provided by the client computing system 20.
図1Bは、本開示の例示的な実施形態による、データ資産の取得および難読化を実行する例示的なコンピューティングシステム100のブロック図を示している。システム100は、ネットワーク180を介して通信可能に結合されたユーザコンピューティングデバイス102、サーバコンピューティングシステム130、およびトレーニングコンピューティングシステム150を含む。 FIG. 1B illustrates a block diagram of an exemplary computing system 100 for performing acquisition and obfuscation of data assets in accordance with an exemplary embodiment of the present disclosure. The system 100 includes a user computing device 102, a server computing system 130, and a training computing system 150 communicatively coupled via a network 180.
ユーザコンピューティングデバイス102は、たとえば、パーソナルコンピューティングデバイス(たとえば、ラップトップもしくはデスクトップ)、モバイルコンピューティングデバイス(たとえば、スマートフォンもしくはタブレット)、ゲームコンソールもしくはコントローラ、ウェアラブルコンピューティングデバイス、組込みコンピューティングデバイス、または任意の他のタイプのコンピューティングデバイスなどの、任意のタイプのコンピューティングデバイスであり得る。 The user computing device 102 may be any type of computing device, such as, for example, a personal computing device (e.g., a laptop or desktop), a mobile computing device (e.g., a smartphone or tablet), a game console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
ユーザコンピューティングデバイス102は、1つまたは複数のプロセッサ112およびメモリ114を含む。1つまたは複数のプロセッサ112は、任意の適切な処理デバイス(たとえば、プロセッサコア、マイクロプロセッサ、ASIC、FPGA、コントローラ、マイクロコントローラなど)であり得、1つのプロセッサまたは動作可能に接続された複数のプロセッサであり得る。メモリ114は、RAM、ROM、EEPROM、EPROM、フラッシュメモリデバイス、磁気ディスクなど、およびそれらの組合せなどの、1つまたは複数の非一時的コンピュータ可読ストレージ媒体を含むことができる。メモリ114は、ユーザコンピューティングデバイス102に動作を実行させるためにプロセッサ112によって実行されるデータ116および命令118を記憶することができる。 The user computing device 102 includes one or more processors 112 and memory 114. The one or more processors 112 may be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and may be a single processor or multiple processors operably connected. The memory 114 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. The memory 114 may store data 116 and instructions 118 that are executed by the processor 112 to cause the user computing device 102 to perform operations.
いくつかの実装形態では、ユーザコンピューティングデバイス102は、1つまたは複数の拡張現実レンダリングモデル120を記憶または含むことができる。たとえば、拡張現実レンダリングモデル120は、ニューラルネットワーク(たとえば、ディープニューラルネットワーク)または非線形モデルおよび/もしくは線形モデルを含む他のタイプの機械学習モデルなどの様々な機械学習モデルであってもよく、そうでなければそれを含むことができる。ニューラルネットワークは、フィードフォワードニューラルネットワーク、リカレントニューラルネットワーク(たとえば、長期短期記憶リカレントニューラルネットワーク)、畳み込みニューラルネットワーク、または他の形式のニューラルネットワークを含むことができる。例示的な拡張現実レンダリングモデル120については、図2および図4を参照して説明する。 In some implementations, the user computing device 102 may store or include one or more augmented reality rendering models 120. For example, the augmented reality rendering models 120 may be or otherwise include various machine learning models, such as neural networks (e.g., deep neural networks) or other types of machine learning models including nonlinear and/or linear models. The neural networks may include feedforward neural networks, recurrent neural networks (e.g., long short-term memory recurrent neural networks), convolutional neural networks, or other forms of neural networks. An exemplary augmented reality rendering model 120 is described with reference to FIGS. 2 and 4.
いくつかの実装形態では、1つまたは複数の拡張現実レンダリングモデル120は、ネットワーク180を介してトレーニングコンピューティングシステム150から受信され、ユーザコンピューティングデバイスメモリ114に記憶され、次いで、1つまたは複数のプロセッサ112によって使用または実装されるデータ資産を含むことができる。いくつかの実装形態では、ユーザコンピューティングデバイス102は、単一の拡張現実レンダリングモデル120の複数の並列インスタンスを実装することができる(たとえば、効果の並列レンダリングを実行するために)。 In some implementations, one or more augmented reality rendering models 120 may include data assets received from the training computing system 150 over the network 180, stored in the user computing device memory 114, and then used or implemented by one or more processors 112. In some implementations, the user computing device 102 may implement multiple parallel instances of a single augmented reality rendering model 120 (e.g., to perform parallel rendering of effects).
より具体的には、サーバコンピューティングシステム130およびトレーニングコンピューティングシステム150は、拡張現実レンダリングモデルが画像またはビデオデータを処理し、拡張画像データまたは拡張ビデオデータを出力できるようにすることができるデータ資産を生成するために、データを交換することができる。 More specifically, the server computing system 130 and the training computing system 150 can exchange data to generate data assets that can enable the augmented reality rendering model to process image or video data and output augmented image data or augmented video data.
さらに、または代わりに、1つまたは複数の拡張現実レンダリングモデル140は、クライアント-サーバ関係に従ってユーザコンピューティングデバイス102と通信するサーバコンピューティングシステム130に含まれるか、またはそれによって記憶および実装され得る。たとえば、拡張現実レンダリングモデル140は、ウェブサービス(たとえば、メイクアップ、衣類、電子機器、自動車、または家具もしくは他の家庭用品の「ライブ試着」サービス)の一部としてサーバコンピューティングシステム130によって実装することができる。したがって、1つもしくは複数のモデル120をユーザコンピューティングデバイス102に記憶および実装することができ、ならびに/または1つもしくは複数のモデル140をサーバコンピューティングシステム130に記憶および実装することができる。 Additionally or alternatively, one or more augmented reality rendering models 140 may be included in or stored and implemented by a server computing system 130 that communicates with the user computing device 102 according to a client-server relationship. For example, the augmented reality rendering models 140 may be implemented by the server computing system 130 as part of a web service (e.g., a "live try-on" service for makeup, clothing, electronics, automobiles, or furniture or other household items). Thus, one or more models 120 may be stored and implemented on the user computing device 102 and/or one or more models 140 may be stored and implemented on the server computing system 130.
ユーザコンピューティングデバイス102はまた、ユーザ入力を受信する1つまたは複数のユーザ入力コンポーネント122を含むこともできる。たとえば、ユーザ入力コンポーネント122は、ユーザ入力オブジェクト(たとえば、指またはスタイラス)のタッチを感知するタッチ感知コンポーネント(たとえば、タッチ感知表示画面またはタッチパッド)であり得る。タッチ感知コンポーネントは、仮想キーボードを実装するために機能する。他の例示的なユーザ入力コンポーネントは、マイク、従来のキーボード、またはユーザがユーザ入力を提供することができる他の手段を含む。 The user computing device 102 may also include one or more user input components 122 that receive user input. For example, the user input component 122 may be a touch-sensitive component (e.g., a touch-sensitive display screen or touchpad) that senses the touch of a user input object (e.g., a finger or stylus). The touch-sensitive component functions to implement a virtual keyboard. Other exemplary user input components include a microphone, a traditional keyboard, or other means by which a user can provide user input.
サーバコンピューティングシステム130は、1つまたは複数のプロセッサ132およびメモリ134を含む。1つまたは複数のプロセッサ132は、任意の適切な処理デバイス(たとえば、プロセッサコア、マイクロプロセッサ、ASIC、FPGA、コントローラ、マイクロコントローラなど)であり得、1つのプロセッサまたは動作可能に接続された複数のプロセッサであり得る。メモリ134は、RAM、ROM、EEPROM、EPROM、フラッシュメモリデバイス、磁気ディスクなど、およびそれらの組合せなどの、1つまたは複数の非一時的コンピュータ可読ストレージ媒体を含むことができる。メモリ134は、サーバコンピューティングシステム130に動作を実行させるためにプロセッサ132によって実行されるデータ136および命令138を記憶することができる。 The server computing system 130 includes one or more processors 132 and memory 134. The one or more processors 132 may be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and may be a single processor or multiple processors operably connected. The memory 134 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. The memory 134 may store data 136 and instructions 138 that are executed by the processor 132 to cause the server computing system 130 to perform operations.
いくつかの実装形態では、サーバコンピューティングシステム130は、1つまたは複数のサーバコンピューティングデバイスを含むか、またはそれによって実装される。サーバコンピューティングシステム130が複数のサーバコンピューティングデバイスを含む場合、そのようなサーバコンピューティングデバイスは、逐次コンピューティングアーキテクチャ、並列コンピューティングアーキテクチャ、またはそれらの何らかの組合せに従って動作することができる。 In some implementations, server computing system 130 includes or is implemented by one or more server computing devices. When server computing system 130 includes multiple server computing devices, such server computing devices may operate according to a sequential computing architecture, a parallel computing architecture, or some combination thereof.
上述したように、サーバコンピューティングシステム130は、1つまたは複数の機械学習された拡張現実レンダリングモデル140を記憶するか、またはそれを含むことができる。たとえば、モデル140は、様々な機械学習されたモデルであってもよく、そうでなければそれを含むこともできる。例示的な機械学習モデルは、ニューラルネットワークまたは他の多層非線形モデルを含む。ニューラルネットワークの例は、フィードフォワードニューラルネットワーク、ディープニューラルネットワーク、リカレントニューラルネットワーク、畳み込みニューラルネットワークなどを含む。例示的なモデル140については、図2および図4を参照して説明する。 As described above, the server computing system 130 can store or include one or more machine-learned augmented reality rendering models 140. For example, the models 140 can be or otherwise include various machine-learned models. Exemplary machine-learned models include neural networks or other multi-layer nonlinear models. Examples of neural networks include feedforward neural networks, deep neural networks, recurrent neural networks, convolutional neural networks, etc. Exemplary models 140 are described with reference to FIGS. 2 and 4.
ユーザコンピューティングデバイス102および/またはサーバコンピューティングシステム130は、ネットワーク180を介して通信可能に結合されたトレーニングコンピューティングシステム150との対話を介して、モデル120および/または140をトレーニングすることができる。トレーニングコンピューティングシステム150は、サーバコンピューティングシステム130とは別個であってもよく、またはサーバコンピューティングシステム130の一部であってもよい。 The user computing device 102 and/or the server computing system 130 can train the models 120 and/or 140 through interaction with a training computing system 150 that is communicatively coupled via a network 180. The training computing system 150 may be separate from the server computing system 130 or may be part of the server computing system 130.
トレーニングコンピューティングシステム150は、1つまたは複数のプロセッサ152およびメモリ154を含む。1つまたは複数のプロセッサ152は、任意の適切な処理デバイス(たとえば、プロセッサコア、マイクロプロセッサ、ASIC、FPGA、コントローラ、マイクロコントローラなど)であり得、1つのプロセッサまたは動作可能に接続された複数のプロセッサであり得る。メモリ154は、RAM、ROM、EEPROM、EPROM、フラッシュメモリデバイス、磁気ディスクなど、およびそれらの組合せなどの、1つまたは複数の非一時的コンピュータ可読ストレージ媒体を含むことができる。メモリ154は、トレーニングコンピューティングデバイス150に動作を実行させるためにプロセッサ152によって実行されるデータ156および命令158を記憶することができる。いくつかの実装形態では、トレーニングコンピューティングデバイス150は、1つまたは複数のサーバコンピューティングデバイスを含むか、またはそれによって実装される。 The training computing system 150 includes one or more processors 152 and memory 154. The one or more processors 152 may be any suitable processing device (e.g., a processor core, a microprocessor, an ASIC, an FPGA, a controller, a microcontroller, etc.) and may be a single processor or multiple processors operably connected. The memory 154 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. The memory 154 may store data 156 and instructions 158 that are executed by the processor 152 to cause the training computing device 150 to perform operations. In some implementations, the training computing device 150 includes or is implemented by one or more server computing devices.
トレーニングコンピューティングシステム150は、たとえば誤差の逆方向伝播などの様々なトレーニングまたは学習技法を使用して、ユーザコンピューティングデバイス102および/またはサーバコンピューティングシステム130に記憶された機械学習モデル120および/または140をトレーニングするモデルトレーナ160を含むことができる。たとえば、損失関数は、(たとえば、損失関数の勾配に基づいて)モデルの1つまたは複数のパラメータを更新するために、モデルを通じて逆伝播され得る。平均二乗誤差、尤度損失、クロスエントロピ損失、ヒンジ損失、および/または他の様々な損失関数など、様々な損失関数を使用することができる。トレーニングを何回も繰り返してパラメータを繰り返し更新するために、勾配降下法を使用することができる。 The training computing system 150 may include a model trainer 160 that trains the machine learning models 120 and/or 140 stored on the user computing device 102 and/or the server computing system 130 using various training or learning techniques, such as, for example, backpropagation of error. For example, a loss function may be backpropagated through the model to update one or more parameters of the model (e.g., based on the gradient of the loss function). Various loss functions may be used, such as mean squared error, likelihood loss, cross entropy loss, hinge loss, and/or various other loss functions. Gradient descent may be used to iteratively update the parameters over multiple training iterations.
いくつかの実装形態では、誤差の逆伝播の実行は、時間の経過に伴う切捨て逆伝播の実行を含むことができる。モデルトレーナ160は、トレーニングされているモデルの一般化能力を向上させるために、多くの一般化技法(たとえば、重みの減衰、ドロップアウトなど)を実行することができる。 In some implementations, performing backpropagation of the error can include performing truncated backpropagation over time. The model trainer 160 can perform a number of generalization techniques (e.g., weight decay, dropout, etc.) to improve the generalization ability of the model being trained.
特に、モデルトレーナ160は、トレーニングデータ162のセットに基づいて、拡張現実レンダリングモデル120および/または140をトレーニングすることができる。トレーニングデータ162は、たとえば、ソフトウェア開発キットを使用してサードパーティによって構築されたシェーダを含むことができ、この場合、サードパーティは、促進コンピューティングデバイスまたはサーバコンピューティングシステム130からソフトウェア開発キットを受信した。サードパーティは、ソフトウェア開発キットを使用して拡張現実体験を構築およびテストすることによって、シェーダおよびデータ資産を生成した可能性がある。 In particular, the model trainer 160 can train the augmented reality rendering models 120 and/or 140 based on a set of training data 162. The training data 162 can include, for example, shaders built by a third party using a software development kit, where the third party received the software development kit from the facilitating computing device or server computing system 130. The third party may have generated the shaders and data assets by building and testing an augmented reality experience using the software development kit.
いくつかの実装形態では、ユーザが同意した場合、ユーザコンピューティングデバイス102によってトレーニング例を提供することができる。したがって、そのような実装形態では、ユーザコンピューティングデバイス102に提供されるモデル120は、ユーザコンピューティングデバイス102から受信したユーザ固有のデータに基づいてトレーニングコンピューティングシステム150によってトレーニングすることができる。場合によっては、このプロセスをモデルのパーソナライズと呼ぶことができる。 In some implementations, if the user consents, the training examples can be provided by the user computing device 102. Thus, in such implementations, the model 120 provided to the user computing device 102 can be trained by the training computing system 150 based on user-specific data received from the user computing device 102. In some cases, this process can be referred to as personalizing the model.
モデルトレーナ160は、所望の機能を提供するために利用されるコンピュータロジックを含む。モデルトレーナ160は、ハードウェア、ファームウェア、および/または汎用プロセッサを制御するソフトウェアにおいて実装することができる。たとえば、いくつかの実装形態では、モデルトレーナ160は、ストレージデバイスに記憶され、メモリにロードされ、1つまたは複数のプロセッサによって実行されるプログラムファイルを含む。他の実装形態では、モデルトレーナ160は、RAMハードディスク、または光学媒体もしくは磁気媒体などの有形のコンピュータ可読ストレージ媒体に記憶されるコンピュータ実行可能命令の1つまたは複数のセットを含む。 Model trainer 160 includes computer logic utilized to provide desired functionality. Model trainer 160 can be implemented in hardware, firmware, and/or software controlling a general-purpose processor. For example, in some implementations, model trainer 160 includes program files stored on a storage device, loaded into memory, and executed by one or more processors. In other implementations, model trainer 160 includes one or more sets of computer-executable instructions stored in RAM, a hard disk, or a tangible computer-readable storage medium, such as an optical or magnetic medium.
ネットワーク180は、ローカルエリアネットワーク(たとえば、イントラネット)、ワイドエリアネットワーク(たとえば、インターネット)、またはそれらの何らかの組合せなどの任意のタイプの通信ネットワークであり得、任意の数のワイヤードまたはワイヤレスリンクを含むことができる。一般に、ネットワーク180上の通信は、様々な通信プロトコル(たとえば、TCP/IP、HTTP、SMTP、FTP)、エンコーディングもしくはフォーマット(たとえば、HTML、XML)、および/または保護スキーム(たとえば、VPN、セキュアHTTP、SSL)を使用して、あらゆる種類のワイヤードおよび/またはワイヤレス接続を介して伝送することができる。 Network 180 may be any type of communications network, such as a local area network (e.g., an intranet), a wide area network (e.g., the Internet), or some combination thereof, and may include any number of wired or wireless links. In general, communications on network 180 may be transmitted over any type of wired and/or wireless connection using a variety of communications protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, Secure HTTP, SSL).
本明細書に置いて記述されている機械学習モデルは、様々なタスク、アプリケーション、および/またはユースケースにおいて使用され得る。 The machine learning models described herein may be used in a variety of tasks, applications, and/or use cases.
いくつかの実装形態では、本開示の機械学習モデルへの入力は画像データであり得る。機械学習モデルは、出力を生成するために画像データを処理することができる。一例として、機械学習モデルは、画像認識出力(たとえば、画像データの認識、画像データの潜在的な埋込み、画像データのエンコードされた表現、画像データのハッシュなど)を生成するために、画像データを処理することができる。別の例として、機械学習モデルは、画像セグメンテーション出力を生成するために、画像データを処理することができる。別の例として、機械学習モデルは、画像分類出力を生成するために、画像データを処理することができる。別の例として、機械学習モデルは、画像データ修正出力(たとえば、画像データの変更など)を生成するために、画像データを処理することができる。別の例として、機械学習モデルは、エンコードされた画像データ出力(たとえば、画像データのエンコードされた、および/または圧縮された表現など)を生成するために、画像データを処理することができる。別の例として、機械学習モデルは、アップスケールされた画像データ出力を生成するために画像データを処理することができる。別の例として、機械学習モデルは、予測出力を生成するために画像データを処理することができる。 In some implementations, the input to the machine learning model of the present disclosure may be image data. The machine learning model may process the image data to generate an output. As an example, the machine learning model may process the image data to generate an image recognition output (e.g., recognition of the image data, latent embedding of the image data, an encoded representation of the image data, a hash of the image data, etc.). As another example, the machine learning model may process the image data to generate an image segmentation output. As another example, the machine learning model may process the image data to generate an image classification output. As another example, the machine learning model may process the image data to generate an image data modification output (e.g., modification of the image data, etc.). As another example, the machine learning model may process the image data to generate an encoded image data output (e.g., an encoded and/or compressed representation of the image data, etc.). As another example, the machine learning model may process the image data to generate an upscaled image data output. As another example, the machine learning model may process the image data to generate a prediction output.
いくつかの実装形態では、本開示の機械学習モデルへの入力は、テキストまたは自然言語データであり得る。機械学習モデルは、出力を生成するために、テキストまたは自然言語データを処理することができる。一例として、機械学習モデルは、言語エンコード出力を生成するために自然言語データを処理することができる。別の例として、機械学習モデルは、潜在的なテキスト埋込み出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習モデルは、翻訳出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習モデルは、分類出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習モデルは、テキストのセグメンテーション出力を生成するために、テキストまたは自然言語データを処理することができる。別の例として、機械学習モデルは、セマンティック意図出力を生成するために、テキストまたは自然言語データを処理することができる。別の例として、機械学習モデルは、アップスケールされたテキストまたは自然言語出力(たとえば、入力テキストまたは自然言語よりも高品質のテキストまたは自然言語データなど)を生成するために、テキストまたは自然言語データを処理することができる。別の例として、機械学習モデルは、予測出力を生成するために、テキストまたは自然言語データを処理することができる。 In some implementations, the input to the machine learning model of the present disclosure may be text or natural language data. The machine learning model may process the text or natural language data to generate an output. As an example, the machine learning model may process the natural language data to generate a language encoding output. As another example, the machine learning model may process the text or natural language data to generate a potential text embedding output. As another example, the machine learning model may process the text or natural language data to generate a translation output. As another example, the machine learning model may process the text or natural language data to generate a classification output. As another example, the machine learning model may process the text or natural language data to generate a text segmentation output. As another example, the machine learning model may process the text or natural language data to generate a semantic intent output. As another example, the machine learning model may process the text or natural language data to generate an upscaled text or natural language output (e.g., text or natural language data of higher quality than the input text or natural language). As another example, the machine learning model may process the text or natural language data to generate a prediction output.
いくつかの実装形態では、本開示の機械学習モデルへの入力は、潜在的なエンコーディングデータ(たとえば、入力の潜在的な空間表現など)であり得る。機械学習モデルは、出力を生成するために、潜在的なエンコーディングデータを処理することができる。一例として、機械学習モデルは、認識出力を生成するために、潜在的なエンコーディングデータを処理することができる。別の例として、機械学習モデルは、再構築出力を生成するために、潜在的なエンコーディングデータを処理することができる。別の例として、機械学習モデルは、検索出力を生成するために、潜在的なエンコーディングデータを処理することができる。別の例として、機械学習モデルは、再クラスタリング出力を生成するために、潜在的なエンコーディングデータを処理することができる。別の例として、機械学習モデルは、予測出力を生成するために、潜在的なエンコーディングデータを処理することができる。 In some implementations, the input to the machine learning model of the present disclosure may be latent encoding data (e.g., a latent spatial representation of the input, etc.). The machine learning model may process the latent encoding data to generate an output. As an example, the machine learning model may process the latent encoding data to generate a recognition output. As another example, the machine learning model may process the latent encoding data to generate a reconstruction output. As another example, the machine learning model may process the latent encoding data to generate a search output. As another example, the machine learning model may process the latent encoding data to generate a reclustering output. As another example, the machine learning model may process the latent encoding data to generate a prediction output.
いくつかの実装形態では、本開示の機械学習モデルへの入力は、センサデータであり得る。機械学習モデルは、出力を生成するためにセンサデータを処理することができる。一例として、機械学習モデルは、認識出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、予測出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、分類出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、セグメンテーション出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、セグメンテーション出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、視覚化出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、診断出力を生成するためにセンサデータを処理することができる。別の例として、機械学習モデルは、検出出力を生成するためにセンサデータを処理することができる。 In some implementations, the input to the machine learning model of the present disclosure may be sensor data. The machine learning model may process the sensor data to generate an output. As an example, the machine learning model may process the sensor data to generate a recognition output. As another example, the machine learning model may process the sensor data to generate a prediction output. As another example, the machine learning model may process the sensor data to generate a classification output. As another example, the machine learning model may process the sensor data to generate a segmentation output. As another example, the machine learning model may process the sensor data to generate a segmentation output. As another example, the machine learning model may process the sensor data to generate a visualization output. As another example, the machine learning model may process the sensor data to generate a diagnostic output. As another example, the machine learning model may process the sensor data to generate a detection output.
場合によっては、機械学習モデルは、信頼性の高いおよび/または効率的な送信もしくは記憶(および/または対応するデコーディング)のために入力データをエンコードすることを含むタスクを実行するように構成することができる。別の例では、入力は視覚データ(たとえば、1つまたは複数の画像またはビデオ)を含み、出力は圧縮視覚データを備え、タスクは視覚データ圧縮タスクである。別の例では、タスクは、入力データ(たとえば、視覚データ)の埋込みを生成することを備え得る。 In some cases, the machine learning model may be configured to perform a task that includes encoding input data for reliable and/or efficient transmission or storage (and/or corresponding decoding). In another example, the input includes visual data (e.g., one or more images or videos) and the output comprises compressed visual data, and the task is a visual data compression task. In another example, the task may comprise generating an embedding of the input data (e.g., visual data).
場合によっては、入力は視覚データを含み、タスクはコンピュータビジョンタスクである。場合によっては、入力は1つまたは複数の画像のピクセルデータを含み、タスクは画像処理タスクである。たとえば、画像処理タスクは画像分類であり、出力はスコアのセットであり、各スコアは異なるオブジェクトクラスに対応し、1つまたは複数の画像がそのオブジェクトクラスに属するオブジェクトを描写する可能性を表す。画像処理タスクはオブジェクト検出であってもよく、画像処理出力は、1つまたは複数の画像内の1つまたは複数の領域、および領域ごとに、その領域が対象のオブジェクトを表す可能性を識別する。別の例として、画像処理タスクは画像セグメンテーションであってよく、画像処理出力は、1つまたは複数の画像内のピクセルごとに、あらかじめ定められたカテゴリのセット内のカテゴリごとのそれぞれの可能性を定義する。たとえば、カテゴリのセットは前景と背景にすることができる。別の例として、カテゴリのセットをオブジェクトクラスにすることができる。別の例として、画像処理タスクは深度推定であり、画像処理出力は、1つまたは複数の画像内のピクセルごとに、それぞれの深度値を定義する。別の例として、画像処理タスクは動き推定であり、ネットワーク入力は複数の画像を含み、画像処理出力は入力画像のうちの1つのピクセルごとに、ネットワーク入力における画像間のピクセルに描かれたシーンの動きを定義する。 In some cases, the input includes visual data and the task is a computer vision task. In some cases, the input includes pixel data of one or more images and the task is an image processing task. For example, the image processing task is image classification and the output is a set of scores, each score corresponding to a different object class and representing the likelihood that the one or more images depict an object belonging to that object class. The image processing task may be object detection and the image processing output identifies one or more regions in one or more images and, for each region, the likelihood that the region represents an object of interest. As another example, the image processing task may be image segmentation and the image processing output defines, for each pixel in one or more images, a respective likelihood for each category in a set of predefined categories. For example, the set of categories can be foreground and background. As another example, the set of categories can be object classes. As another example, the image processing task is depth estimation and the image processing output defines, for each pixel in one or more images, a respective depth value. As another example, the image processing task is motion estimation and the network input includes multiple images and the image processing output defines, for each pixel in one of the input images, the motion of the scene depicted in the pixel between images in the network input.
図1Bは、本開示を実装するために使用できる、1つの例示的なコンピューティングシステムを示している。他のコンピューティングシステムも同様に使用することができる。たとえば、いくつかの実装形態では、ユーザコンピューティングデバイス102は、モデルトレーナ160およびトレーニングデータセット162を含むことができる。このような実装形態では、モデル120は、ユーザコンピューティングデバイス102において、ローカルにトレーニングおよび使用の両方を行うことができる。そのような実装形態のいくつかでは、ユーザコンピューティングデバイス102は、ユーザ固有のデータに基づいてモデル120をパーソナライズするために、モデルトレーナ160を実装することができる。 FIG. 1B illustrates one exemplary computing system that can be used to implement the present disclosure. Other computing systems can be used as well. For example, in some implementations, the user computing device 102 can include a model trainer 160 and a training dataset 162. In such implementations, the model 120 can be both trained and used locally at the user computing device 102. In some such implementations, the user computing device 102 can implement the model trainer 160 to personalize the model 120 based on user-specific data.
図1Cは、本開示の例示的な実施形態に従って実行する例示的なコンピューティングデバイスのブロック図を示している。コンピューティングデバイス10は、ユーザコンピューティングデバイスであってもよく、サーバコンピューティングデバイスであってもよい。 FIG. 1C illustrates a block diagram of an exemplary computing device that performs operations according to an exemplary embodiment of the present disclosure. Computing device 10 may be a user computing device or a server computing device.
コンピューティングデバイス10は、多数のアプリケーション(たとえば、アプリケーション1からN)を含む。各アプリケーションは、独自の機械学習ライブラリと機械学習モデルとを含む。たとえば、各アプリケーションは機械学習モデルを含むことができる。例示的なアプリケーションは、テキストメッセージングアプリケーション、電子メールアプリケーション、ディクテーションアプリケーション、仮想キーボードアプリケーション、ブラウザアプリケーションなどを含む。 Computing device 10 includes multiple applications (e.g., applications 1 through N). Each application includes its own machine learning library and machine learning model. For example, each application may include a machine learning model. Exemplary applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc.
図1Cに示されるように、各アプリケーションは、たとえば、1つまたは複数のセンサ、コンテキストマネージャ、デバイス状態コンポーネント、および/または追加のコンポーネントなどの、コンピューティングデバイスの他の多くのコンポーネントと通信することができる。いくつかの実装形態では、各アプリケーションは、API(たとえば、パブリックAPI)を使用して各デバイスコンポーネントと通信することができる。いくつかの実装形態では、各アプリケーションによって使用されるAPIはそのアプリケーションに固有である。 As shown in FIG. 1C, each application can communicate with many other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, each application can communicate with each device component using an API (e.g., a public API). In some implementations, the API used by each application is specific to that application.
図1Dは、本開示の例示的な実施形態に従って実行する例示的なコンピューティングデバイス50のブロック図を示している。コンピューティングデバイス50は、ユーザコンピューティングデバイスであってもよく、サーバコンピューティングデバイスであってもよい。 FIG. 1D illustrates a block diagram of an exemplary computing device 50 for performing operations according to an exemplary embodiment of the present disclosure. The computing device 50 may be a user computing device or a server computing device.
コンピューティングデバイス50は、多数のアプリケーション(たとえば、アプリケーション1からN)を含む。各アプリケーションは中央のインテリジェンス層と通信する。例示的なアプリケーションは、テキストメッセージングアプリケーション、電子メールアプリケーション、ディクテーションアプリケーション、仮想キーボードアプリケーション、ブラウザアプリケーションなどを含む。いくつかの実装形態では、各アプリケーションは、API(たとえば、すべてのアプリケーションにわたる共通のAPI)を使用して、中央インテリジェンス層(およびそこに記憶されたモデル)と通信することができる。 The computing device 50 includes multiple applications (e.g., applications 1 through N). Each application communicates with a central intelligence layer. Exemplary applications include a text messaging application, an email application, a dictation application, a virtual keyboard application, a browser application, etc. In some implementations, each application can communicate with the central intelligence layer (and models stored therein) using an API (e.g., a common API across all applications).
中央インテリジェンス層には、多数の機械学習モデルを含む。たとえば、図1Dに示されるように、それぞれの機械学習モデル(たとえば、モデル)をアプリケーションごとに提供し、中央インテリジェンス層によって管理することができる。他の実装形態では、2つ以上のアプリケーションが単一の機械学習モデルを共有することができる。たとえば、いくつかの実装形態では、中央インテリジェンス層は、すべてのアプリケーションに対して単一のモデル(たとえば、単一のモデル)を提供することができる。いくつかの実装形態では、中央インテリジェンス層は、コンピューティングデバイス50のオペレーティングシステム内に含まれるか、またはそれによって実装される。 The central intelligence layer includes multiple machine learning models. For example, as shown in FIG. 1D, a respective machine learning model (e.g., model) may be provided for each application and managed by the central intelligence layer. In other implementations, two or more applications may share a single machine learning model. For example, in some implementations, the central intelligence layer may provide a single model (e.g., a single model) for all applications. In some implementations, the central intelligence layer is included within or implemented by an operating system of the computing device 50.
中央インテリジェンス層は、中央デバイスデータ層と通信することができる。中央デバイスデータ層は、コンピューティングデバイス50のためのデータの集中リポジトリであり得る。図1Dに示されるように、中央デバイスデータ層は、たとえば、1つまたは複数のセンサ、コンテキストマネージャ、デバイス状態コンポーネント、および/または追加のコンポーネントなどの、コンピューティングデバイスの他の多くのコンポーネントと通信することができる。いくつかの実装形態では、中央デバイスデータ層は、API(たとえば、プライベートAPI)を使用して各デバイスコンポーネントと通信することができる The central intelligence layer can communicate with a central device data layer. The central device data layer can be a central repository of data for the computing device 50. As shown in FIG. 1D, the central device data layer can communicate with many other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a private API).
例示的なモデル配置
いくつかの実装形態では、システムおよび方法は、レンダリングパイプラインとして使用することができる。パイプラインは、レンダリング可能な圧縮ファイル(たとえば、ZIPファイル)を構築するために必要なすべてのツールを含むことができるソフトウェア開発キット(SDK)を含むことができる。いくつかの実装形態では、圧縮ファイル(たとえば、ZIPファイル)を含むソフトウェア開発キットは、様々なプラットフォームのビューアを用いてテストすることができる。静止画像またはビデオを拡張するために、ソフトウェア開発キットを使用した構築中に生成されたソース資産を使用することができる。
Exemplary Model Placement In some implementations, the system and method can be used as a rendering pipeline. The pipeline can include a software development kit (SDK) that can include all the tools necessary to build a renderable compressed file (e.g., a ZIP file). In some implementations, the software development kit that includes the compressed file (e.g., a ZIP file) can be tested with viewers on various platforms. Source assets generated during construction using the software development kit can be used to enhance still images or videos.
ソフトウェア開発キットはサードパーティに送信することができる。サードパーティは、内向きのレンダリングパイプラインを構築してプレビューすることができる。パイプラインは、コンピュータやモバイルデバイスを使用した美容製品の試着など、様々な用途に使用することができるが、これに限定されない。 The software development kit can be sent to third parties who can then build and preview the inbound rendering pipeline. The pipeline can be used for a variety of purposes, including, but not limited to, trying on beauty products using a computer or mobile device.
ソフトウェア開発キットには、関連付けられるバイナリを含むスクリプト、プレビューツールのセット、ドキュメント、およびサンプル効果のセットを含むことができる。スクリプトと関連付けられるバイナリは、プロダクト効果ソースをレンダリング可能な圧縮ファイルにコンパイルするために使用することができる。プレビューツールのセットは、レンダリング結果を視覚化するために使用することができる。さらに、プレビューツールは、編集とプレビューのための統合インターフェース、または2つのインターフェース間の素早い切り替えを提供することができる。ドキュメントは、構築プロセスを支援するためのレビュー用の生のHTMLまたは他の形式のドキュメントを含むことができる。サンプル効果のセットは、ベースラインを提供しながら、サードパーティがソフトウェア開発キットを理解するために役立つ。 The software development kit may include scripts with associated binaries, a set of preview tools, documentation, and a set of sample effects. The scripts and associated binaries may be used to compile the product effect source into a renderable compressed file. The set of preview tools may be used to visualize the rendering results. Additionally, the preview tools may provide a unified interface for editing and previewing, or quick switching between the two interfaces. The documentation may include raw HTML or other formatted documentation for review to aid in the build process. The set of sample effects may help third parties understand the software development kit while providing a baseline.
ソフトウェア開発キットは、自己完結型で、移植が容易で、ストックハードウェア上で実行することができ、高速で、安全であるように設計することができる。ソフトウェア開発キットは、サードパーティまたは他の作成者が、他のアプリケーションに依存することなく、ソフトウェア開発キットを使用してレンダリングを構築できるように、依存関係なしで実行できるように設計することができる。バックエンドは、消費者とインターフェースするシステムによって使用されるバックエンドをミラーリングすることができる。さらに、移植が簡単なため、サードパーティは最小限の修正で、または修正を加えずに、既存のシェーダを使用することができる。さらに、ソフトウェア開発キットは、ソフトウェア開発キットの外部にソフトウェアをインストールする必要がなく、様々なオペレーティングシステム上で実行できるように設計することができる。いくつかの実装形態では、ソフトウェア開発キットは、カスタマイズのためにレンダグラフおよびGPUシェーダを開くことを可能にする機能を含むことができる。このインターフェースにより、消費者とインターフェースするシステムにサードパーティのGPUコードを実装する必要がなくなり、ユーザのセキュリティを維持することができる。ソフトウェア開発キットは、受信データを送信データに変換するために、レンダリング計算機を使用することができる。 The software development kit can be designed to be self-contained, easy to port, able to run on stock hardware, fast, and secure. The software development kit can be designed to run without dependencies, allowing third parties or other creators to build renderings using the software development kit without relying on other applications. The backend can mirror the backend used by the system that interfaces with the consumer. Additionally, the ease of porting allows third parties to use existing shaders with minimal or no modifications. Additionally, the software development kit can be designed to run on a variety of operating systems without the need to install software outside of the software development kit. In some implementations, the software development kit can include functionality that allows the render graph and GPU shaders to be opened for customization. This interface can eliminate the need to implement third-party GPU code in the system that interfaces with the consumer, maintaining user security. The software development kit can use a rendering calculator to convert incoming data to outgoing data.
内向きの拡張現実効果の生成は、2つのコンポーネントを含む場合がある。第1のコンポーネントは知覚を含む場合がある。知覚コンポーネントは、画像内のランドマーク(たとえば、顔の唇)のピクセル座標を計算して出力することができる。第2のコンポーネントはレンダリングコンポーネントを含む場合がある。レンダリングコンポーネントは、位置の特定を容易にする計算されたランドマークを使用して、元の受信フレームに拡張現実効果をレンダリングすることを含むことができる。次いで、結果を出力することができる。 The generation of an inward-facing augmented reality effect may include two components. The first component may include a perception component. The perception component may calculate and output pixel coordinates of landmarks in an image (e.g., lips on a face). The second component may include a rendering component. The rendering component may include rendering the augmented reality effect on the original received frame using the calculated landmarks to facilitate location identification. The results may then be output.
拡張現実レンダリングのグラフは、サードパーティのサブグラフとファシリテータのサブグラフに分割することができる。ファシリテータのサブグラフは知覚サブグラフにすることができ、サードパーティのサブグラフはサードパーティとファシリテータの両方によって編集することができるレンダリングサブグラフにすることができる。分離により、レンダリングサブグラフに影響を与えることなく、ファシリテータによる知覚サブグラフの修正が可能になる。さらに、この分離により、複数の拡張現実効果がレンダリングされている場合でも、単一の知覚サブグラフを使用できるようになる。したがって、単一の知覚モデルプロセスの計算を用いて複数のレンダリングを生成するために、複数のレンダリングサブグラフが1つの知覚サブグラフに重ねられ得る。 The augmented reality rendering graph can be split into a third party subgraph and a facilitator subgraph. The facilitator subgraph can be a perception subgraph, and the third party subgraph can be a rendering subgraph that can be edited by both the third party and the facilitator. The separation allows for modification of the perception subgraph by the facilitator without affecting the rendering subgraph. Furthermore, this separation allows for a single perception subgraph to be used even when multiple augmented reality effects are being rendered. Thus, multiple rendering subgraphs can be overlaid on one perception subgraph to generate multiple renderings using the computations of a single perception model process.
知覚サブグラフとレンダリングサブグラフを集約すると、完全なグラフまたは拡張現実メディアを生成することができる。 The perception subgraph and the rendering subgraph can be aggregated to generate a complete graph or augmented reality media.
サードパーティの効果ソースは、レンダリングサブグラフファイルと、サブグラフ内のレンダリング計算機によって使用される資産の1つまたは複数のディレクトリを含むことができる。 Third-party effect sources can include rendering sub-graph files and one or more directories of assets used by the rendering calculator within the sub-graph.
いくつかの実装形態では、ソフトウェア開発キットは知覚モデルを含み得る。ソフトウェア開発キットは、各タイプのソースファイルを処理済みの形式に変換するために、バンドルされたバイナリを呼び出すことができ、これにより、途中で発生した誤差を生成しながら、入力のディレクトリ構造を生成されたレンダリング可能な圧縮ファイルに保存することができる。グラフプロト、シェーダ、ブループリントなどの資産ファイルは、ソフトウェア開発キットに含めることができる、または効果ソースの一部である他のファイルを参照し得る。テクスチャは、変換をカスタマイズする効果ごとのimage_conversion.txtファイルに基づいてWebP形式に変換することができる。 In some implementations, the software development kit may include a perceptual model. The software development kit may call bundled binaries to convert each type of source file into a processed format, allowing a directory structure of inputs to be saved into the generated renderable compressed file while producing errors made along the way. Asset files such as graph protos, shaders, and blueprints may be included in the software development kit or may reference other files that are part of the effect source. Textures may be converted to WebP format based on a per-effect image_conversion.txt file that customizes the conversion.
いくつかの実装形態では、ソフトウェア開発キットで構築された製品効果は、ランタイムコンパイルのためにユーザのデバイスに提供できるGLSLシェーダを含むことができる。これらのシェーダは、サードパーティの技術プロバイダからの貴重な知的財産を表すことができる。本明細書に開示されるシステムおよび方法は、情報の保護を支援するためにシェーダを難読化することができる。難読化は、コメントと構文的に余分な空白を削除し、次いで、セマンティクスを不明瞭にするためにほとんどの予約されていない記号の名前を体系的に変更することを含むことができる。いくつかの実装形態では、難読化された記号をファイル間で均一に難読化することができる。難読化は、サードパーティパートナから入手した元のシェーダを検査およびテストした後に発生する可能性がある。 In some implementations, product effects built with the software development kit can include GLSL shaders that can be provided to a user's device for runtime compilation. These shaders can represent valuable intellectual property from third-party technology providers. The systems and methods disclosed herein can obfuscate the shaders to help protect the information. Obfuscation can include removing comments and syntactically redundant whitespace, and then systematically renaming most unreserved symbols to obscure semantics. In some implementations, the obfuscated symbols can be uniformly obfuscated across files. Obfuscation can occur after inspecting and testing the original shaders obtained from the third-party partner.
システムおよび方法は、メイクアップレンダリング、家具レンダリング、アパレルレンダリング、ビデオゲームレンダリング、および建築構造レンダリングを含むがこれらに限定されない、様々な拡張現実レンダリングに適用することができる。 The systems and methods can be applied to a variety of augmented reality renderings, including but not limited to makeup renderings, furniture renderings, apparel renderings, video game renderings, and architectural construction renderings.
図2は、本開示の例示的な実施形態による、例示的なデータ資産取得システム200のブロック図を示している。いくつかの実装形態では、データ資産取得システム200は、拡張現実レンダリング体験を構築するためのソフトウェア開発キット212を送信し、ソフトウェア開発キット212を送信した結果として、サードパーティからテンプレートおよびプリセット228を受信するようにトレーニングされる。したがって、いくつかの実装形態では、データ取得システム200は、ファシリテータ210、サードパーティ220、およびユーザ250を含むことができる。 FIG. 2 illustrates a block diagram of an exemplary data asset acquisition system 200 according to an exemplary embodiment of the present disclosure. In some implementations, the data asset acquisition system 200 is trained to transmit a software development kit 212 for building an augmented reality rendering experience and to receive templates and presets 228 from a third party as a result of transmitting the software development kit 212. Thus, in some implementations, the data acquisition system 200 can include a facilitator 210, a third party 220, and a user 250.
特に、図2は、拡張現実レンダリング体験を生成する際に使用するデータ資産取得のためのシステムを示している。ファシリテータ210は、サードパーティ220と通信することによって拡張現実レンダリングのためのデータ資産をコンパイルするための促進システムであり得る。ファシリテータ210は、サーバ、ウェブアプリケーション、または促進コンピューティングシステムとすることができる。ファシリテータ210がデータ資産を受信すると、促進システムは拡張現実レンダリング体験をユーザ250に提供することができる。 In particular, FIG. 2 illustrates a system for data asset acquisition for use in generating an augmented reality rendering experience. The facilitator 210 can be a facilitation system for compiling data assets for augmented reality rendering by communicating with a third party 220. The facilitator 210 can be a server, a web application, or a facilitation computing system. Once the facilitator 210 receives the data assets, the facilitation system can provide the augmented reality rendering experience to the user 250.
データ資産の取得は、サードパーティ220に送信される、ファシリテータが構築したソフトウェア開発キット(SDK)212を含むことができる。サードパーティは、レンダリング体験を構築するために、ソフトウェア開発キット222を使用することができる。ソフトウェア開発キット222は、データ資産224をコンパイルすることができ、生成されたレンダリング体験のレンダリングプレビュー226を可能にすることができる。 Acquisition of data assets can include a facilitator-built software development kit (SDK) 212 that is sent to a third party 220. The third party can use the software development kit 222 to build the rendering experience. The software development kit 222 can compile the data assets 224 and can enable a rendering preview 226 of the generated rendering experience.
サードパーティ220は、それらのデータ資産のテンプレートおよびプリセット228に対してソース修正230を行う必要がある場合には、どのような修正を行う必要があるかを決定するために、レンダリングプレビューを使用し得る。構築、テスト、および微調整が完了すると、サードパーティは、テンプレートおよびプリセット228とサードパーティメタデータ232を含むデータ資産を促進システムに送信することができる。促進システム210は、効果214を取り込み、サードパーティ220によって構築されたレンダリング効果を含むことができる拡張現実レンダリング体験を後で提供するためにそれらを記憶することができる。ファシリテータは、ユーザ250からユーザデータ252を取り込むことができ、拡張ユーザデータに含まれるレンダリング効果を含む拡張ユーザデータを出力することができる。 Third parties 220 may use the rendering preview to determine what, if any, source modifications 230 need to be made to their data asset templates and presets 228. Once built, tested, and fine-tuned, the third parties can send the data assets, including the templates and presets 228 and third-party metadata 232, to the facilitation system. The facilitation system 210 can import the effects 214 and store them for later providing an augmented reality rendering experience that can include the rendering effects built by the third parties 220. The facilitator can import user data 252 from the user 250 and output augmented user data including the rendering effects included in the augmented user data.
図3は、本開示の例示的な実施形態による、例示的な難読化300のブロック図を示している。難読化300は、データ資産を難読化するために、図2のデータ資産取得システム200に含めることができる。 FIG. 3 illustrates a block diagram of an example obfuscation 300 according to an example embodiment of the present disclosure. The obfuscation 300 can be included in the data asset acquisition system 200 of FIG. 2 to obfuscate a data asset.
より具体的には、図3は、難読化に対する3つの側面からの手法を示している。この実装形態では、難読化コード306を生成するために、難読化システム304を用いて元のコード302を難読化することができる。いくつかの実装形態では、元のコード302は、拡張現実レンダリング用のデータ資産コードであり得る。 More specifically, FIG. 3 illustrates a three-pronged approach to obfuscation. In this implementation, an original code 302 can be obfuscated using an obfuscation system 304 to generate obfuscated code 306. In some implementations, the original code 302 can be a data asset code for augmented reality rendering.
さらに、この実装形態では、難読化システム304は、記号または用語の名前変更308、空白の削除310、およびセマンティクスに関するコメントの削除312を含むことができる。 Further, in this implementation, the obfuscation system 304 can include renaming symbols or terms 308, removing whitespace 310, and removing semantic comments 312.
名前変更308は、元のコードから記号および用語のインデックスを作成することと、元の記号および用語を割り当てられた記号および用語で置き換えることとを含むことができる。いくつかの実装形態では、名前変更308は、ハッシュ関数の利用を含むことができる。名前変更は、様々なファイル全体で均一にすることができる。 Renaming 308 can include creating an index of symbols and terms from the original code and replacing the original symbols and terms with the assigned symbols and terms. In some implementations, renaming 308 can include utilizing a hash function. Renaming can be uniform across various files.
空白の削除310は、インデント、空白行、および改行の除去を含むことができる。空白を削除すると、コードの論理形式が不明瞭になり、コードが読みにくくなる可能性がある。 Whitespace removal 310 can include removing indentations, blank lines, and line breaks. Removing whitespace can obscure the logical form of the code and make the code harder to read.
コメントの削除312は、コードセマンティクスに関連する1つまたは複数のコメントを削除することを含むことができる。難読化システムはコードを処理し、コメントがセマンティックコメントであるかどうかを決定し得る。コメントがコードのセマンティクスを説明するために役立つ場合、そのコメントは削除することができる。 Removing comments 312 can include removing one or more comments related to code semantics. The obfuscation system can process the code and determine whether a comment is a semantic comment. If the comment helps explain the semantics of the code, it can be removed.
これらの3つのコンポーネントにより、コードの可読性が低下すると同時に、サードパーティの記号および用語が隠蔽される可能性がある。 These three components can reduce code readability while potentially obscuring third-party symbols and terminology.
図4は、本開示の例示的な実施形態による例示的なデータ資産取得システム400のブロック図を示している。データ資産取得システム400は、データ資産取得システム400が美容効果レンダリング用に特に構成できることを除いて、図2のデータ資産取得システム200と同様である。 FIG. 4 illustrates a block diagram of an exemplary data asset acquisition system 400 according to an exemplary embodiment of the present disclosure. The data asset acquisition system 400 is similar to the data asset acquisition system 200 of FIG. 2, except that the data asset acquisition system 400 may be specifically configured for beauty effect rendering.
この実装形態では、美容効果402はメイクアップレンダリングを含むことができる。美容効果は様々なデータセットを含むことができる。データセットは、ブループリント、GLSLシェーダ406、テクスチャ、およびジオメトリファイルを含むレンダエンティティ404のデータセットを含むことができる。美容効果402は、レンダリングサブグラフ、シェーダユニフォーム、および画像変換をさらに含むことができる。拡張現実レンダリング体験を構築するために、これらのデータセットをソフトウェア開発キット408に入力することができる。ソフトウェア開発キット408により、構築者は新しく構築された体験をプレビューし、テストすることができる。特に、美容効果のGLSLシェーダ406は、ソフトウェア開発キット内のシェーダパイプラインに変換することができる。構築された拡張現実レンダリング体験は、ソフトウェア開発キット408の外部で以前から存在していた美容効果402のレンダリング体験と並行することができる。構築が完了すると、ソフトウェア開発キットは、別のデバイス上で拡張現実レンダリング体験を再作成する際に使用するためのレンダリング可能なzipファイル410を生成することができる。 In this implementation, the cosmetic effect 402 can include makeup rendering. The cosmetic effect can include various datasets. The datasets can include a dataset of render entities 404, including blueprints, GLSL shaders 406, textures, and geometry files. The cosmetic effect 402 can further include rendering subgraphs, shader uniforms, and image transforms. These datasets can be input into a software development kit 408 to build an augmented reality rendering experience. The software development kit 408 allows the builder to preview and test the newly built experience. In particular, the GLSL shaders 406 of the cosmetic effect can be converted into a shader pipeline within the software development kit. The built augmented reality rendering experience can run parallel to a previously existing rendering experience of the cosmetic effect 402 outside of the software development kit 408. Once built, the software development kit can generate a renderable zip file 410 for use in recreating the augmented reality rendering experience on another device.
図5は、本開示の例示的な実施形態による例示的な拡張現実レンダリング体験モデル500のブロック図を示している。拡張現実レンダリング体験モデル500は、拡張現実レンダリング体験モデル500が、生成されたデータ資産を使用するメッシュモデルによるカメラフィードおよび拡張モデルによる拡張モデルの処理をさらに含むことを除いて、図2のデータ資産取得システム200と同様である。 FIG. 5 illustrates a block diagram of an exemplary augmented reality rendering experience model 500 according to an exemplary embodiment of the present disclosure. The augmented reality rendering experience model 500 is similar to the data asset acquisition system 200 of FIG. 2, except that the augmented reality rendering experience model 500 further includes processing the camera feed with a mesh model and the augmented model with an augmented model using generated data assets.
特に、図5は、レンダリング画像510を生成するためにカメラフィード502を処理するために使用される例示的な知覚サブグラフ504および例示的なレンダリングサブグラフ508を示している。知覚サブグラフ504は、メッシュおよびセグメンテーションマスクを生成するために、メッシュモデル506を用いてカメラフィード502を処理することができる。メッシュおよびセグメンテーションマスクは、レンダリング計算機512によって処理することができる。レンダリング計算機512は、レンダリングサブグラフ508に含めることができ、シェーダによって影響を受けることができる。メッシュ、セグメンテーションマスク、およびカメラフィード502は、レンダリング画像を生成するために、レンダリング計算機512によって処理され得る。レンダリングされた画像は、拡張現実レンダリングを含むことができる。レンダリングは、ソフトウェア開発キットを使用してサードパーティによって生成されたレンダリングであってもよい。さらに、いくつかの実装形態では、レンダリングはメイクアップレンダリングであってもよく、メッシュモデルはフェイストラッカであってもよく、シェーダは口紅シェーダ、テクスチャシェーダ、ユニフォームシェーダ、および/またはフィルタリングシェーダを含むことができる。 In particular, FIG. 5 illustrates an example perception subgraph 504 and an example rendering subgraph 508 used to process the camera feed 502 to generate a rendered image 510. The perception subgraph 504 can process the camera feed 502 with a mesh model 506 to generate a mesh and a segmentation mask. The mesh and segmentation mask can be processed by a rendering calculator 512. The rendering calculator 512 can be included in the rendering subgraph 508 and can be affected by shaders. The mesh, segmentation mask, and the camera feed 502 can be processed by the rendering calculator 512 to generate a rendered image. The rendered image can include an augmented reality rendering. The rendering can be a rendering generated by a third party using a software development kit. Additionally, in some implementations, the rendering can be a makeup rendering, the mesh model can be a face tracker, and the shaders can include a lipstick shader, a texture shader, a uniform shader, and/or a filtering shader.
例示的な方法
図6は、本開示の例示的な実施形態に従って実行するための例示的な方法のフローチャート図を示している。図6は、例示および議論の目的で特定の順序で実行されるステップを示しているが、本開示の方法は、特に図示された順序または配置に限定されない。方法600の様々なステップは、本開示の範囲から逸脱することなく、様々な方法で省略、再配置、組合せ、および/または適合させることができる。
Exemplary Methods Figure 6 illustrates a flow chart diagram of an exemplary method for performing in accordance with an exemplary embodiment of the present disclosure. Although Figure 6 illustrates steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the order or arrangement specifically illustrated. Various steps of method 600 may be omitted, rearranged, combined, and/or adapted in various ways without departing from the scope of the present disclosure.
602において、コンピューティングシステムはソフトウェア開発キットを送信することができる。いくつかの実装形態では、ソフトウェア開発キットは、1つまたは複数のレンダリング効果シェーダを構築するためのテンプレートを含むことができる。ソフトウェア開発キットには、ソース効果をレンダリング可能なファイルにコンパイルするためのスクリプトと関連付けられるバイナリを含み得る。ソフトウェア開発キットは、微調整およびテストのために構築中にレンダリングビルドをプレビューするための、構成サードパーティ用のプレビューツールをさらに含み得る。いくつかの実装形態では、ソフトウェア開発キットは、ソフトウェア開発キットを使用して効果を構築および微調整する方法についてサードパーティを支援するためのドキュメントとサンプル効果を含むことができる。 At 602, the computing system can transmit a software development kit. In some implementations, the software development kit can include templates for building one or more rendering effect shaders. The software development kit can include binaries associated with scripts for compiling source effects into renderable files. The software development kit can further include a preview tool for configuration third parties to preview the rendering build as it is being built for tweaking and testing. In some implementations, the software development kit can include documentation and sample effects to assist third parties on how to build and tweak effects using the software development kit.
604において、コンピューティングシステムはデータ資産を受信することができる。いくつかの実装形態では、データ資産は、ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを含むことができる。データ資産は、レンダリング可能なファイル(たとえば、.ZIPファイル)の形式で受信することができる。データ資産は、サードパーティによって販売または提供される製品または品目をレンダリングするためのシェーダデータを含むことができる。製品は、化粧品(たとえば、口紅、アイシャドウなど)、家具もしくは他の家庭用品(たとえば、電子機器、調理器具、ガラス製品、装飾品、植物など)、衣類、ペイントカラー、自動車、または他の品目であり得る。 At 604, the computing system can receive a data asset. In some implementations, the data asset can include one or more rendering effect shaders built using a software development kit. The data asset can be received in the form of a renderable file (e.g., a .ZIP file). The data asset can include shader data for rendering a product or item sold or offered by a third party. The product can be cosmetics (e.g., lipstick, eye shadow, etc.), furniture or other household items (e.g., electronics, cookware, glassware, ornaments, plants, etc.), clothing, paint colors, automobiles, or other items.
606において、コンピューティングシステムはデータ資産を記憶することができる。データ資産は、サーバ、ユーザコンピューティングデバイス、またはファシリテータコンピューティングデバイスに記憶することができる。 At 606, the computing system can store the data assets. The data assets can be stored on a server, a user computing device, or a facilitator computing device.
608において、コンピューティングシステムは拡張現実レンダリング体験を提供することができる。いくつかの実装形態では、拡張現実レンダリングは少なくとも部分的にデータ資産に基づくことができる。拡張現実レンダリングは、サードパーティによって販売される製品の製品レンダリングを含むことができる。 At 608, the computing system can provide an augmented reality rendering experience. In some implementations, the augmented reality rendering can be based at least in part on the data assets. The augmented reality rendering can include a product rendering of a product sold by a third party.
図7は、本開示の例示的な実施形態に従って実行するための例示的な方法のフローチャート図を示している。図7は、例示および議論の目的で特定の順序で実行されるステップを示しているが、本開示の方法は、特に図示された順序または配置に限定されない。方法700の様々なステップは、本開示の範囲から逸脱することなく、様々な方法で省略、再配置、組合せ、および/または適合させることができる。 FIG. 7 illustrates a flow chart diagram of an exemplary method for performing in accordance with an exemplary embodiment of the present disclosure. Although FIG. 7 illustrates steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the order or arrangement specifically illustrated. Various steps of method 700 may be omitted, rearranged, combined, and/or adapted in various ways without departing from the scope of the present disclosure.
702において、コンピューティングシステムはソフトウェア開発キットを受信することができる。ソフトウェア開発キットは、拡張現実体験を生成するためのテンプレートを含むことができる。ソフトウェア開発キットは、ユーザに提供するためのレンダリング体験をコンパイルするために、促進コンピューティングシステムまたは仲介システムによって送信され得る。 At 702, the computing system can receive a software development kit. The software development kit can include templates for generating an augmented reality experience. The software development kit can be transmitted by a facilitating computing system or an intermediary system to compile a rendering experience for provision to a user.
704において、コンピューティングシステムは、ソフトウェア開発キットを修正するための入力を受信することができる。ソフトウェア開発キットを修正すると、テンプレートを修正することができ、製品固有の拡張現実体験を生成することができる。たとえば、ソフトウェア開発キットは、メイクアップレンダリング効果を生成するように構築および構成することができる。メイクアップレンダリング効果は、ユーザがパーソナルコンピューティングデバイスを使用して提供される様々な口紅の色またはタイプを「試着」できる拡張現実レンダリング体験に実装することができる。 At 704, the computing system can receive input to modify the software development kit. Modifying the software development kit can modify the templates and generate a product-specific augmented reality experience. For example, the software development kit can be constructed and configured to generate a makeup rendering effect. The makeup rendering effect can be implemented in an augmented reality rendering experience where a user can "try on" various lipstick colors or types offered using a personal computing device.
706において、コンピューティングシステムはデータ資産を生成することができる。いくつかの実装形態では、データ資産は、受信した入力に少なくとも部分的に基づいて生成することができる。データ資産は、送信用にレンダリング可能な圧縮ファイルに変換することができる。 At 706, the computing system can generate a data asset. In some implementations, the data asset can be generated based at least in part on the received input. The data asset can be converted into a compressed file that can be rendered for transmission.
708において、コンピューティングシステムは、データ資産を第2のコンピューティングデバイスに送信することができる。第2のコンピューティングデバイスは、ソフトウェア開発キットの送信者であってもよい。いくつかの実装形態では、第2のコンピューティングデバイスは、促進コンピューティングデバイス、または拡張現実レンダリング体験をユーザに提供するためにユーザと対話する仲介コンピューティングデバイスであり得る。 At 708, the computing system can transmit the data assets to a second computing device. The second computing device may be a sender of a software development kit. In some implementations, the second computing device may be a facilitating computing device or an intermediary computing device that interacts with a user to provide the user with an augmented reality rendering experience.
図8は、本開示の例示的な実施形態に従って実行するための例示的な方法のフローチャート図を示している。図8は、例示および議論の目的で特定の順序で実行されるステップを示しているが、本開示の方法は、特に図示された順序または配置に限定されない。方法800の様々なステップは、本開示の範囲から逸脱することなく、様々な方法で省略、再配置、組合せ、および/または適合させることができる。 FIG. 8 illustrates a flow chart diagram of an exemplary method for performing in accordance with an exemplary embodiment of the present disclosure. Although FIG. 8 illustrates steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the order or arrangement specifically illustrated. Various steps of method 800 may be omitted, rearranged, combined, and/or adapted in various ways without departing from the scope of the present disclosure.
802において、コンピューティングシステムはソフトウェア開発キットを送信することができる。いくつかの実装形態では、ソフトウェア開発キットは、1つまたは複数のレンダリング効果シェーダを構築するためのテンプレートを含むことができる。基本アプリケーションは、新しいレンダリングを構築したり、以前に構築されたレンダリング効果を変換したりするための例示的な効果および指示を備えた拡張現実レンダリングアプリケーションとすることができる。 At 802, the computing system can transmit a software development kit. In some implementations, the software development kit can include templates for building one or more rendering effect shaders. The base application can be an augmented reality rendering application with example effects and instructions for building new rendering effects or transforming previously built rendering effects.
804において、コンピューティングシステムはデータ資産を受信することができる。いくつかの実装形態では、データ資産は、ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを含むことができる。データ資産はレンダリング可能なファイルとして受信することができる。 At 804, the computing system can receive a data asset. In some implementations, the data asset can include one or more rendering effect shaders built using a software development kit. The data asset can be received as a renderable file.
806において、コンピューティングシステムはデータ資産を難読化することができる。データ資産の難読化は、コードからの空白の削除、コードのセマンティクスに関するコメントの削除、ならびに記号および用語の名前変更を含むことができる。難読化により、コードの可読性が低下し、用語またはコメントに含まれる可能性のある機密情報が削除される可能性がある。難読化は、サードパーティのビルダを保護するために役立つ。 At 806, the computing system can obfuscate the data asset. Obfuscating the data asset can include removing whitespace from the code, removing comments about the semantics of the code, and renaming symbols and terms. Obfuscation can reduce the readability of the code and remove sensitive information that may be contained in terms or comments. Obfuscation can be useful to protect third-party builders.
808において、コンピューティングシステムはデータ資産を記憶することができる。データ資産はローカルに記憶することも、サーバを介して記憶することもできる。データ資産は、ウェブアプリケーションまたはモバイルアプリケーションで使用するためにすぐにアクセスできるように記憶することができる。 At 808, the computing system can store the data assets. The data assets can be stored locally or via a server. The data assets can be stored so that they are readily accessible for use in a web or mobile application.
810において、コンピューティングシステムは拡張現実レンダリング体験を提供することができる。いくつかの実装形態では、拡張現実レンダリングは少なくとも部分的にデータ資産に基づくことができる。拡張現実レンダリング体験は、サードパーティによって構築されたレンダリング効果を含めるようにユーザの画像とビデオを拡張する体験を提供することを含むことができる。レンダリング効果は、ビデオゲームまたは「ライブ試着」体験の一部とすることができる。さらに、拡張現実レンダリング体験は、ウェブアプリケーション、モバイルアプリケーション、または店舗内のキオスクを介して提供することができる。 At 810, the computing system can provide an augmented reality rendering experience. In some implementations, the augmented reality rendering can be based at least in part on the data assets. The augmented reality rendering experience can include providing an experience that augments a user's images and videos to include rendering effects built by a third party. The rendering effects can be part of a video game or a "live try-on" experience. Additionally, the augmented reality rendering experience can be provided via a web application, a mobile application, or an in-store kiosk.
追加開示
本明細書で説明する技術は、サーバ、データベース、ソフトウェアアプリケーション、および他のコンピュータベースのシステム、ならびにそのようなシステムで行われるアクション、およびそのようなシステムとの間で送受信される情報について言及する。コンピュータベースのシステムが本来持つ柔軟性により、コンポーネント間でのタスクと機能の多種多様な構成、組合せ、分割が可能になる。たとえば、本明細書で説明するプロセスは、単一のデバイスもしくはコンポーネント、または組み合わせて動作する複数のデバイスもしくはコンポーネントを使用して実装することができる。データベースとアプリケーションは、単一のシステムに実装することもでき、複数のシステムに分散して実装することもできる。分散コンポーネントは、順次または並行して動作することができる。
ADDITIONAL DISCLOSURE The technology described herein refers to servers, databases, software applications, and other computer-based systems, as well as actions taken on such systems and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a wide variety of configurations, combinations, and divisions of tasks and functionality among components. For example, the processes described herein may be implemented using a single device or component, or multiple devices or components operating in combination. Databases and applications may be implemented in a single system or distributed across multiple systems. Distributed components may operate sequentially or in parallel.
本発明の主題をその様々な特定の例示的な実施形態に関して詳細に説明してきたが、各例は説明のために提供されたものであり、本開示を限定するものではない。当業者は、前述の内容を理解すれば、そのような実施形態に対する変更、変形、および等価物を容易に生み出すことができる。したがって、本開示は、当業者には容易に明らかなような、本主題に対するそのような修正、変形、および/または追加を含むことを妨げるものではない。たとえば、さらに別の実施形態を得るために、一実施形態の一部として図示または説明した特徴を別の実施形態とともに使用することができる。したがって、本開示はそのような変更、変形、および等価物を網羅することが意図されている。 Although the subject matter of the present invention has been described in detail with respect to various specific exemplary embodiments thereof, each example is provided for purposes of illustration and not as a limitation of the present disclosure. Those skilled in the art, upon understanding the foregoing, may readily produce modifications, variations, and equivalents to such embodiments. Thus, the present disclosure is not intended to preclude inclusion of such modifications, variations, and/or additions to the subject matter as would be readily apparent to one skilled in the art. For example, features illustrated or described as part of one embodiment may be used with another embodiment to obtain yet another embodiment. Thus, the present disclosure is intended to cover such modifications, variations, and equivalents.
10 コンピューティングデバイス
20 クライアントコンピューティングシステム
30 拡張現実プラットフォーム
32 クライアントインターフェース
34 レンダリングエンジン
40 サードパーティ拡張現実(AR)資産ライブラリ
42 製品1資産
44 製品2資産
46 製品N資産
50 コンピューティングデバイス
60 サードパーティコンピューティングシステム
80 コンピューティングシステム
102 ユーザコンピューティングデバイス
112 プロセッサ
114 メモリ
116 データ
118 命令
120 拡張現実レンダリングモデル
120 機械学習モデル
122 ユーザ入力コンポーネント
130 サーバコンピューティングシステム
132 プロセッサ
134 メモリ
136 データ
138 命令
140 拡張現実レンダリングモデル
140 機械学習モデル
150 トレーニングコンピューティングシステム
152 プロセッサ
154 メモリ
156 データ
158 命令
160 モデルトレーナ
162 トレーニングデータ
162 トレーニングデータセット
180 ネットワーク
200 データ資産取得システム
210 ファシリテータ
210 促進システム
212 ソフトウェア開発キット
214 効果
220 サードパーティ
222 ソフトウェア開発キット
224 データ資産
226 レンダリングプレビュー
228 テンプレートおよびプリセット
230 ソース修正
232 サードパーティメタデータ
250 ユーザ
252 ユーザデータ
300 難読化
302 元のコード
304 難読化システム
306 難読化コード
308 名前変更
310 空白の削除
312 コメントの削除
400 データ資産取得システム
402 美容効果
404 レンダエンティティ
406 GLSLシェーダ
408 ソフトウェア開発キット
410 レンダリング可能なzipファイル
500 拡張現実レンダリング体験モデル
502 カメラフィード
504 知覚サブグラフ
506 メッシュモデル
508 レンダリングサブグラフ
510 レンダリング画像
512 レンダリング計算機
600 方法
700 方法
800 方法
10. Computing Devices
20 Client Computing Systems
30 Augmented Reality Platform
32 Client Interface
34 Rendering Engine
40 Third-Party Augmented Reality (AR) Asset Library
42 Product 1 Asset
44 Product 2 Assets
46 Product N Assets
50 Computing Devices
60 Third Party Computing Systems
80 Computing Systems
102 User Computing Devices
112 processors
114 Memory
116 Data
118 Commands
120 Augmented Reality Rendering Models
120 Machine Learning Models
122 User Input Components
130 Server Computing System
132 processors
134 Memory
136 Data
138 Commands
140 Augmented Reality Rendering Models
140 Machine Learning Models
150 Training Computing System
152 processors
154 Memory
156 Data
158 Commands
160 Model Trainer
162 training data
162 training dataset
180 Network
200 Data Asset Acquisition System
210 Facilitator
210 Facilitation System
212 Software Development Kit
214 Effects
220 Third Party
222 Software Development Kit
224 Data Assets
226 Rendering Preview
228 Templates and Presets
230 Source correction
232 Third Party Metadata
250 users
252 User Data
300 Obfuscated
302 Original Code
304 Obfuscation System
306 Obfuscated Code
308 Change name
310 Whitespace Removal
312 Delete comment
400 Data Asset Acquisition System
402 Beauty Effects
404 Render Entity
406 GLSL Shaders
408 Software Development Kit
410 renderable zip files
500 Augmented Reality Rendering Experience Models
502 Camera Feed
504 Perceptual Subgraph
506 Mesh Model
508 Rendering Subgraphs
510 Rendered Images
512 Rendering Calculator
600 Ways
700 Ways
800 Ways
Claims (20)
コンピューティングデバイスによってソフトウェア開発キットを送信するステップであって、前記ソフトウェア開発キットが、1つまたは複数のレンダリング効果シェーダを構築するためのテンプレートを備える、ステップと、
前記コンピューティングデバイスによってデータ資産を受信するステップであって、前記データ資産が、前記ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを備える、ステップと、
前記コンピューティングデバイスによって前記データ資産を記憶するステップと、
前記コンピューティングデバイスによって拡張現実レンダリング体験を提供するステップであって、拡張現実レンダリングが少なくとも部分的に前記データ資産に基づく、ステップと
を備える、方法。 1. A computer-implemented method for providing third-party data assets to a client, comprising:
transmitting, by a computing device, a software development kit, the software development kit comprising templates for building one or more rendering effect shaders;
receiving, by the computing device, a data asset, the data asset comprising one or more rendering effect shaders constructed using the software development kit;
storing, by the computing device, the data asset;
providing, by the computing device, an augmented reality rendering experience, the augmented reality rendering being based at least in part on the data asset.
前記コンピューティングデバイスによって、データ資産のコードから空白を削除するステップと、
前記コンピューティングデバイスによって、前記データ資産のコードから1つまたは複数のコメントを削除するステップと、
前記コンピューティングデバイスによって、前記データ資産のコード内の1つまたは複数の用語を名前変更するステップと
を備える、請求項1に記載の方法。 and further comprising the step of obfuscating, by the computing device, the data asset, the obfuscating step comprising:
removing, by said computing device, whitespace from a code of a data asset;
removing, by the computing device, one or more comments from code of the data asset;
and renaming, by the computing device, one or more terms in a code for the data asset.
前記コンピューティングデバイスによってユーザデータを受信するステップと、
前記コンピューティングデバイスによって、ユーザメッシュを生成するために、エンコーダモデルを使用して前記ユーザデータを処理するステップと、
前記コンピューティングデバイスによって、前記拡張現実レンダリングを生成するために、拡張モデルを用いて前記ユーザメッシュを処理するステップであって、前記拡張モデルが前記データ資産に少なくとも部分的に基づくシェーダを備える、ステップと
によって生成される、請求項1から12のいずれか一項に記載の方法。 The augmented reality rendering comprises:
receiving, by the computing device, user data;
processing, by the computing device, the user data using an encoder model to generate a user mesh;
13. The method of claim 1, further comprising: processing, by the computing device, the user mesh with an augmented model to generate the augmented reality rendering, the augmented model comprising shaders based at least in part on the data assets.
前記1つまたは複数のプロセッサによって実行されると、前記コンピューティングシステムに、動作を実行させる命令を集合的に記憶する1つまたは複数の非一時的コンピュータ可読媒体と
を備え、前記動作が、
拡張現実体験を生成するためのテンプレートを備えるソフトウェア開発キットを受信することと、
前記テンプレートを修正するための1つまたは複数の入力を受信することであって、前記ソフトウェア開発キットを修正することが、製品固有の拡張現実体験を生成する、ことと、
前記1つまたは複数の入力に少なくとも部分的に基づいてデータ資産を生成することと、
前記データ資産を第2のコンピューティングデバイスに送信することと
を備える、コンピューティングシステム。 one or more processors;
and one or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the computing system to perform operations, the operations including:
Receiving a software development kit comprising a template for generating an augmented reality experience;
receiving one or more inputs for modifying the template, where modifying the software development kit generates a product-specific augmented reality experience;
generating a data asset based at least in part on said one or more inputs;
and transmitting the data asset to a second computing device.
トレーニングデータを入手することと、
拡張現実メディアを生成するために、前記拡張現実体験を用いて前記トレーニングデータを処理することと、
前記拡張現実メディアとグラウンドトゥルースデータとの比較に少なくとも部分的に基づいて損失関数を評価することと、
前記損失関数に少なくとも部分的に基づいて1つまたは複数のパラメータを調整することと
を備える、請求項16または17に記載のコンピューティングシステム。 Testing the augmented reality experience
Obtaining training data;
processing the training data with the augmented reality experience to generate an augmented reality media; and
evaluating a loss function based at least in part on a comparison of the augmented reality media to ground truth data;
and adjusting one or more parameters based at least in part on the loss function.
コンピューティングデバイスによってソフトウェア開発キットを送信することであって、前記ソフトウェア開発キットが、1つまたは複数のレンダリング効果シェーダを構築するためのテンプレートを備える、ことと、
前記コンピューティングデバイスによってデータ資産を受信することであって、前記データ資産が、前記ソフトウェア開発キットを使用して構築された1つまたは複数のレンダリング効果シェーダを備える、ことと、
前記コンピューティングデバイスによって前記データ資産を記憶することと、
前記コンピューティングデバイスによって拡張現実レンダリング体験を提供することであって、拡張現実レンダリングが少なくとも部分的に前記データ資産に基づく、ことと
を備える、1つまたは複数の非一時的コンピュータ可読媒体。 One or more non-transitory computer-readable media that collectively store instructions that, when executed by the one or more processors, cause the computing system to perform operations, the operations including:
Transmitting, by a computing device, a software development kit, the software development kit comprising a template for constructing one or more rendering effect shaders;
receiving, by the computing device, a data asset comprising one or more rendering effect shaders constructed using the software development kit;
storing, by said computing device, said data asset;
providing an augmented reality rendering experience by the computing device, the augmented reality rendering based at least in part on the data assets;
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/144,002 | 2021-01-07 |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2023541344A Division JP7457211B2 (en) | 2021-01-07 | 2022-01-04 | Computing platform for facilitating augmented reality experiences with third party assets |
Publications (1)
Publication Number | Publication Date |
---|---|
JP2024061750A true JP2024061750A (en) | 2024-05-08 |
Family
ID=
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11670061B2 (en) | Generating augmented reality prerenderings using template images | |
Cordeil et al. | IATK: An immersive analytics toolkit | |
US10620921B2 (en) | Application system for generating 3D applications | |
Gecer et al. | Synthesizing coupled 3d face modalities by trunk-branch generative adversarial networks | |
Barnes et al. | Embedding and publishing interactive, 3-dimensional, scientific figures in Portable Document Format (PDF) files | |
US20230092068A1 (en) | Computing Platform for Facilitating Augmented Reality Experiences with Third Party Assets | |
Flotyński et al. | Ontology‐Based Representation and Modelling of Synthetic 3D Content: A State‐of‐the‐Art Review | |
Stemasov et al. | The road to ubiquitous personal fabrication: Modeling-free instead of increasingly simple | |
Zeng et al. | 3D human body reshaping with anthropometric modeling | |
Walczak et al. | Semantic query-based generation of customized 3D scenes | |
WO2023044172A1 (en) | Systems and method for calculating liability of a driver of a vehicle | |
Biella et al. | Crowdsourcing and knowledge co-creation in virtual museums | |
Jaspe-Villanueva et al. | Web-based exploration of annotated multi-layered relightable image models | |
Vilchis et al. | A survey on the pipeline evolution of facial capture and tracking for digital humans | |
US8379028B1 (en) | Rigweb | |
JP2024061750A (en) | Computing platform for facilitating augmented reality experiences with third party assets | |
CN110276818A (en) | For being automatically synthesized the interactive system of perception of content filling | |
Yang et al. | Architectural sketch to 3D model: An experiment on simple-form houses | |
US20230281952A1 (en) | Generating object images with different lighting conditions | |
US11972534B2 (en) | Modifying materials of three-dimensional digital scenes utilizing a visual neural network | |
US11869136B1 (en) | User-context aware rendering dataset selection | |
Robertson | Visualizing spatial data: The problem of paradigms | |
Gillespie | User-appropriate viewer for high resolution interactive engagement with 3D digital cultural artefacts. | |
Sorokin et al. | Deep learning in tasks of interior objects recognition and 3D reconstruction | |
Karydakis | Simplification & Visualization of BIM models through Hololens |
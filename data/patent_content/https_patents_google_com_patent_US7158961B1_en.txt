US7158961B1 - Methods and apparatus for estimating similarity - Google Patents
Methods and apparatus for estimating similarity Download PDFInfo
- Publication number
- US7158961B1 US7158961B1 US10/029,883 US2988301A US7158961B1 US 7158961 B1 US7158961 B1 US 7158961B1 US 2988301 A US2988301 A US 2988301A US 7158961 B1 US7158961 B1 US 7158961B1
- Authority
- US
- United States
- Prior art keywords
- vector
- computer
- implemented method
- generating
- hashing
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
- G06F16/3347—Query execution using vector based model
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99931—Database or file accessing
- Y10S707/99932—Access augmentation or optimizing
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
Definitions
- the present invention relates generally to similarity estimation, and more particularly, to calculating similarity metrics for objects such as web pages.
- the World Wide Web (“web”) contains a vast amount of information. Locating a desired portion of the information, however, can be challenging. Search engines catalog web pages to assist web users in locating the information they desire. Typically, in response to a user's request, the search engine returns references to documents relevant to the request.
- the identification of similar documents can be beneficial in other areas. For example, storage space may be reduced by storing only one version of a set of similar documents. Or, a collection of documents can be grouped together based on document similarities, thereby improving efficiency when compressing the collection of documents.
- a document for example, may be represented as a sub-set of words from a corpus of possible words.
- the similarity, or resemblance of two documents to one another is then defined as the intersection of the two sets divided by the union of the two sets.
- One problem with this set-based similarity measure is that there is limited flexibility in weighting the importance of the elements within a set.
- a word is either in a set or it is not in a set. In practice, however, it may be desirable to weight certain words, such as words that occur relatively infrequently in the corpus, more heavily when determining the similarity of documents.
- Systems and methods consistent with the present invention address this and other needs by providing a similarity engine that generates compact representations of objects that can be compared to determine similarity between the objects.
- the present invention is a method for generating a compact representation of an object.
- the method includes generating a vector corresponding to the object, each coordinate of the vector being associated with a corresponding weight and multiplying the weight associated with each coordinate in the vector by a corresponding hashing vector to generate a product vector.
- the method further includes summing the product vectors and generating the compact representation of the object using the summed product vectors.
- a second method consistent with the present invention includes creating a similarity sketch for each of first and second objects based on the application of a hashing function to a vector representation of the first and second objects. Additionally, the method compares, on a bit-by-bit basis, the similarity sketches for the first and second objects, and generates a value defining the similarity between the first and second objects based on a correspondence in the bit-by-bit comparison.
- Another aspect of the present invention is directed to a server that includes at least one processor, a database containing a group of objects, and a memory operatively coupled to the processor.
- the memory stores program instructions that when executed by the processor, cause the processor to remove similar objects from the database by comparing similarity sketches of pairs of objects in the database and removing one of the objects of the pair when the comparison indicates that the pair of objects are more similar than a threshold level of similarity.
- the processor generates the similarity sketches for each of the pair of objects based on an application of a hashing function to vector representations of the objects.
- Yet another aspect of the invention is directed to a method for generating a compact representation of a first object.
- the method includes identifying a set of features corresponding to the object and generating, for each feature, a hashing vector having n coordinates.
- the hashing vectors are summed to obtain a summed vector, and an n*x-bit representation of the summed vector is obtained by calculating an x-bit value for each coordinate of the summed vector.
- FIG. 1 is a diagram illustrating an exemplary system in which concepts consistent with the present invention may be implemented
- FIG. 2 is a flow chart illustrating methods consistent with principles of the present invention for generating similarity sketches
- FIGS. 3A and 3B illustrate exemplary object vectors
- FIG. 4 is a diagram conceptually illustrating the calculation of a result vector for an exemplary object vector based on two corresponding hashing vectors.
- a similarity engine generates compact representations, called similarity sketches, for object vectors.
- the object vectors can be created for objects, such as document files.
- the similarity sketch for two different object vectors can be quickly and easily compared to generate an indication of the similarity between the two objects.
- FIG. 1 is a diagram illustrating an exemplary system in which concepts consistent with the present invention may be implemented.
- the system includes multiple client devices 102 , a server device 110 , and a network 101 , which may be, for example, the Internet.
- Client devices 102 each include a computer-readable medium 109 , such as random access memory, coupled to a processor 108 .
- Processor 108 executes program instructions stored in memory 109 .
- Client devices 102 may also include a number of additional external or internal devices, such as, without limitation, a mouse, a CD-ROM, a keyboard, and a display.
- users 105 can communicate over network 101 with each other and with other systems and devices coupled to network 101 , such as server device 110 .
- server device 110 may include a processor 111 coupled to a computer readable memory 112 .
- Server device 110 may additionally include a secondary storage element, such as database 130 .
- Client processors 108 and server processor 111 can be any of a number of well known computer processors, such as processors from Intel Corporation, of Santa Clara, Calif.
- client device 102 may be any type of computing platform connected to a network and that interacts with application programs, such as a digital assistant or a “smart” cellular telephone or pager.
- Server 110 although depicted as a single computer system, may be implemented as a network of computer processors.
- Memory 112 may contain a number of programs, such as search engine program 120 , spider program 122 , and similarity engine 124 .
- Search engine program 120 locates relevant information in response to search queries from users 105 .
- users 105 send search queries to server device 110 , which responds by returning a list of relevant information to the user 105 .
- server device 110 typically, users 105 ask server device 110 to locate web pages relating to a particular topic and stored at other devices or systems connected to network 101 .
- the general implementation of search engines is well known in the art and therefore will not be described further herein.
- Search engine program 120 may access database 130 to obtain results from a document corpus 135 , stored in database 130 , by comparing the terms in the user's search query to the documents in the corpus.
- the information in document corpus 135 may be gathered by spider program 122 , which “crawls” web documents on network 101 based on their hyperlinks.
- memory 112 additionally includes similarity engine 124 .
- Similarity engine 124 generates similarity information between documents in document corpus 135 . More particularly, similarity engine 124 may generate a relatively small “sketch” (e.g., a 64 bit value) for each document in corpus 135 and may compare the sketches between pairs of documents. If two documents, based on their sketches, are more similar than a predefined similarity threshold, similarity generator 124 may, for example, remove one of the two documents from document corpus 135 . In this manner, search engine program 120 is less likely to return redundant or overly similar results in response to user queries.
- ketch e.g., a 64 bit value
- similarity generator 124 may remove duplicate documents “on the fly.”
- search engine program 120 may generate a set of documents in response to a user query and similarity generator 124 may cull the generated set of documents based on similarity sketches.
- FIG. 2 is a flow chart illustrating methods consistent with principles of the present invention for generating similarity sketches for objects by similarity engine 124 .
- similarity engine 124 processes objects, such as web documents, to generate the sketches. Sketches of different objects can be compared to generate a quantitative metric of the similarity of the objects.
- similarity engine 124 creates a vector representation of the input object.
- the input object may be a document such as a web page. More generally, the object can be any item that contains a series of discrete elements, and the representation of the input object can be a set of associated features rather than a vector per se.
- the vector coordinates are indexed by the elements of the object. In the case of documents, for example, the elements may be the words in the document.
- FIG. 3A illustrates an example of a vector 301 for the object phrase “four score and seven years ago.”
- the vector for this phrase contains six non-zero coordinates corresponding to the six words in the phrase.
- the vector can be thought of as containing as many coordinates as there are elements in the universe of elements (e.g., the number of unique words in the corpus), with each coordinate other than those in the phrase having a value of zero.
- each non-zero coordinate is given an equal vector weight (i.e., it has the value one). More generally, however, different elements can be given different weights. This is illustrated in FIG. 3B , in which words that are considered “more important” are more heavily weighted in object vector 302 . For example, “years” and “score,” because they are less common words, may be given a higher weighting value, while “and” is given a low weight. In this manner, the object vector can emphasize certain elements in the similarity calculation while de-emphasizing others. In the implementation of FIG. 3B , valid values are in the range between zero and one.
- the weights for an element can be calculated using any number of possible weighting formulas.
- the weight for a word is set as the number of occurrences of the word within the document divided by the number of documents in the corpus containing the word.
- similarity engine 124 multiplies every coordinate in the object vector by a corresponding predetermined hashing vector having a preset number of coordinates (dimensions), where each coordinate in the hashing vector corresponds to a number, such as a random number, provided that the same input object vector coordinate yields the same hashing vector coordinate.
- a different hashing vector may be used for each possible coordinate (e.g., word).
- the number of preset coordinates in the hashing vector corresponds to the size of the resulting sketch. For example, to produce a 64-bit sketch for each object, a 64-dimensional hashing vector would be chosen.
- the corresponding hashing vector could be generated from a pseudo random number generator seeded based on the input vector coordinate (ignoring the actual value of the input vector coordinate).
- the values of the coordinates of the hashing vector could be selected based on the output of the pseudo random number generator so that the values are random numbers drawn from a chosen distribution. For example, coordinates could be drawn from the normal distribution with probability density function
- a hash function could be used to map input vector coordinates to hashing vectors directly. For example, a 64-bit hash value obtained from a hash function could be mapped to a 64-dimensional hashing vector by choosing the i th coordinate of the hashing vector to be +1 or ⁇ 1 based on whether the i th bit in the hash value is 1 or 0.
- the product vectors generated in Act 202 are summed for all elements in the object to generate a result vector having the same number of coordinates as each of the predetermined hashing vectors. (Act 203 ).
- R ⁇ ⁇ i ⁇ c i ⁇ v _ i
- ⁇ right arrow over (R) ⁇ is the result vector
- c 1 is the weight value for the i th coordinate (a scalar)
- ⁇ right arrow over (v) ⁇ i is the predetermined hashing vector for the i th coordinate in the object vector, and the sum is taken over all the possible coordinates in the object vector.
- the result vector can be used as the similarity sketch for the object.
- the result vector may be further simplified to obtain the similarity sketch by generating, for each coordinate in the resultant vector, a single bit corresponding to the sign of the coordinate's value. (Act 204 ). The generated bits are then concatenated together to form the object's sketch. (Act 205 ).
- the similarity sketch would be a 64-bit value.
- similarity generator 124 may create a similarity value based on a bit-by-bit comparison of the sketches.
- a final similarity measure between two sketches can be obtained by logically exclusive-ORing (XOR) the two sketch values and summing the complements of the individual result bits to yield a value between zero (not similar) and 64 (very similar) for a 64-bit similarity sketch. If the similarity measure is above a predetermined threshold (e.g., greater than 50), the two objects may be considered to be similar to one another.
- a predetermined threshold e.g., greater than 50
- FIG. 4 is a diagram conceptually illustrating the calculation of a result vector for an exemplary object vector 401 and two corresponding hashing vectors 402 and 403 .
- object vectors are likely to be significantly more complex than object vector 401 and the hashing vectors are likely to contain more than the three coordinates illustrated in hashing vectors 402 and 403 .
- Object vector 401 contains two non-zero elements, “four” and “score,” each associated with a weight value. Hashing vectors 402 and 403 each have three coordinates, which will thus yield a three-bit similarity sketch.
- Result vector 404 is the sum of hashing vectors 402 and 403 after being multiplied by the value of the corresponding coordinate in object vector 401 .
- Similarity sketch 405 is derived from the signs of the three coordinates in result vector 404 . As shown, because each of the three coordinate values is positive, the similarity sketch is “111.”
- the values of the coordinates in hashing vectors 402 and 403 can be chosen at random. For a large corpus (e.g., a million possible words) and a larger similarity sketch (e.g., 128 bits), such a large number of hashing vectors (i.e., one million), each made up of 128 random values, can be burdensome to store and subsequently access. Accordingly, the random numbers for each hash vector could be dynamically generated using a pseudo random number generator seeded with a value based on the hash vector's coordinate. Furthermore, if it is determined that two coordinates in the object vector are “similar”, it may be desirable to make the hashing vectors similar for these two object vector coordinates. In this manner, one may incorporate information about the similarity of object vector coordinates into their associated hashing vectors.
- similarity engine 124 generally describes a similarity engine operating in the context of web documents, the concepts described could also be implemented based on any object that contains a series of discrete elements.
- similarity sketches generated by similarity engine 124 may be used to refine the entries in database 130 to reduce the occurrence of redundant or nearly redundant documents returned in response to a user's search query.
- the similarity sketches can be used in a number of other applications.
- spider program 122 when crawling web sites, may use similarity engine 124 to determine sites that are substantial duplicates of one another. Mirror sites are one example of duplicate sites that occur frequently on the web. In future crawls, spider program 122 may more efficiently crawl the web by avoiding crawling the sites that are determined to be substantial duplicates.
- similarity engine 124 may generate object vectors for a web document based on the list of hyperlinks in the document. Accordingly, similarity engine 124 may develop similarity sketches based on a document's list of links.
- the similarity engine may operate on “snippets” of text associated with documents returned from a search query.
- a snippet is an abstraction of the document that is initially returned to a user in response to a search query. Based on the snippets, users select full documents to view. Similarity engine 124 may compare snippets from a search query and exclude those snippets and/or search results that exceed a similarity threshold.
- similarity engine 124 may quantitatively determine the similarity between two words or phrases based on the context surrounding those words or phrases from the document corpus. More specifically, similarity engine 124 may create an object vector for a word, such as “shop”, based on the words within a certain distance (e.g., 10 words) of each occurrence of shop in the corpus. The coordinates of this object vector would be all the words in the corpus. The value for the coordinates may be, for example, the number of times the coordinate word occurs within the context distance. If, for example, the word “cart” occurs frequently in the document corpus within the selected context distance to the word “shop,” then the value for “cart” would be relatively high in the object vector. Two different words with close similarity sketches, as determined by similarity engine 124 , are likely to be used as synonyms in the corpus.
- Similarity engine 124 may also be used outside of the context of web search engines. For example, a collection of objects may be grouped based on their similarity. Grouping objects in this manner may be used to gain increased compression ratios for the objects or to increase access speed from a storage medium.
- the similarity sketches described above have a number of advantages. Because the similarity sketches are based on vector representations, different elements of the vectors can be given different weights, thus allowing vector elements to be more or less important than one another. In contrast, in conventional set-based similarity techniques, elements are simply either in a set or not in the set. Additionally, the sketches generated above are relatively compact compared to similarity measures generated with the conventional set-based techniques.
Abstract
Description
Another possibility is to choose coordinates to be either +1 or −1 with equal probability. A hash function could be used to map input vector coordinates to hashing vectors directly. For example, a 64-bit hash value obtained from a hash function could be mapped to a 64-dimensional hashing vector by choosing the ith coordinate of the hashing vector to be +1 or −1 based on whether the ith bit in the hash value is 1 or 0.
where {right arrow over (R)} is the result vector, c1 is the weight value for the ith coordinate (a scalar), {right arrow over (v)}i is the predetermined hashing vector for the ith coordinate in the object vector, and the sum is taken over all the possible coordinates in the object vector.
Claims (24)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/029,883 US7158961B1 (en) | 2001-12-31 | 2001-12-31 | Methods and apparatus for estimating similarity |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/029,883 US7158961B1 (en) | 2001-12-31 | 2001-12-31 | Methods and apparatus for estimating similarity |
Publications (1)
Publication Number | Publication Date |
---|---|
US7158961B1 true US7158961B1 (en) | 2007-01-02 |
Family
ID=37592388
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/029,883 Expired - Lifetime US7158961B1 (en) | 2001-12-31 | 2001-12-31 | Methods and apparatus for estimating similarity |
Country Status (1)
Country | Link |
---|---|
US (1) | US7158961B1 (en) |
Cited By (51)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040111708A1 (en) * | 2002-09-09 | 2004-06-10 | The Regents Of The University Of California | Method and apparatus for identifying similar regions of a program's execution |
US20040267596A1 (en) * | 2003-06-25 | 2004-12-30 | Lind Jesper B. | Systems and methods for improving collaborative filtering |
US20050039086A1 (en) * | 2003-08-14 | 2005-02-17 | Balachander Krishnamurthy | Method and apparatus for sketch-based detection of changes in network traffic |
US20060101060A1 (en) * | 2004-11-08 | 2006-05-11 | Kai Li | Similarity search system with compact data structures |
US20060248063A1 (en) * | 2005-04-18 | 2006-11-02 | Raz Gordon | System and method for efficiently tracking and dating content in very large dynamic document spaces |
US20070016580A1 (en) * | 2005-07-15 | 2007-01-18 | International Business Machines Corporation | Extracting information about references to entities rom a plurality of electronic documents |
US20070043757A1 (en) * | 2005-08-17 | 2007-02-22 | Microsoft Corporation | Storage reports duplicate file detection |
US20070214123A1 (en) * | 2006-03-07 | 2007-09-13 | Samsung Electronics Co., Ltd. | Method and system for providing a user interface application and presenting information thereon |
US20070211762A1 (en) * | 2006-03-07 | 2007-09-13 | Samsung Electronics Co., Ltd. | Method and system for integrating content and services among multiple networks |
US7296031B1 (en) * | 2001-05-30 | 2007-11-13 | Microsoft Corporation | Auto playlist generator |
US20080133504A1 (en) * | 2006-12-04 | 2008-06-05 | Samsung Electronics Co., Ltd. | Method and apparatus for contextual search and query refinement on consumer electronics devices |
US20080183698A1 (en) * | 2006-03-07 | 2008-07-31 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices |
US20080235393A1 (en) * | 2007-03-21 | 2008-09-25 | Samsung Electronics Co., Ltd. | Framework for corrrelating content on a local network with information on an external network |
US20080235209A1 (en) * | 2007-03-20 | 2008-09-25 | Samsung Electronics Co., Ltd. | Method and apparatus for search result snippet analysis for query expansion and result filtering |
US20080243837A1 (en) * | 2001-06-27 | 2008-10-02 | Business Objects Americas | Method and apparatus for duplicate detection |
US20080266449A1 (en) * | 2007-04-25 | 2008-10-30 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US20080288641A1 (en) * | 2007-05-15 | 2008-11-20 | Samsung Electronics Co., Ltd. | Method and system for providing relevant information to a user of a device in a local network |
US20090055393A1 (en) * | 2007-01-29 | 2009-02-26 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices based on metadata information |
US20090063470A1 (en) * | 2007-08-28 | 2009-03-05 | Nogacom Ltd. | Document management using business objects |
US20090100018A1 (en) * | 2007-10-12 | 2009-04-16 | Jonathan Roberts | System and method for capturing, integrating, discovering, and using geo-temporal data |
US20090132571A1 (en) * | 2007-11-16 | 2009-05-21 | Microsoft Corporation | Efficient use of randomness in min-hashing |
US20100070895A1 (en) * | 2008-09-10 | 2010-03-18 | Samsung Electronics Co., Ltd. | Method and system for utilizing packaged content sources to identify and provide information based on contextual information |
US20100070511A1 (en) * | 2008-09-17 | 2010-03-18 | Microsoft Corporation | Reducing use of randomness in consistent uniform hashing |
US20100070509A1 (en) * | 2008-08-15 | 2010-03-18 | Kai Li | System And Method For High-Dimensional Similarity Search |
US20100153387A1 (en) * | 2008-12-12 | 2010-06-17 | At&T Intellectual Property I, L.P. | Methods and systems for estimate derivation |
US20100250474A1 (en) * | 2009-03-27 | 2010-09-30 | Bank Of America Corporation | Predictive coding of documents in an electronic discovery system |
US20110072013A1 (en) * | 2009-09-23 | 2011-03-24 | Adobe Systems Incorporated | Algorithm and implementation for fast computation of content recommendations |
US20110087668A1 (en) * | 2009-10-09 | 2011-04-14 | Stratify, Inc. | Clustering of near-duplicate documents |
US20110087669A1 (en) * | 2009-10-09 | 2011-04-14 | Stratify, Inc. | Composite locality sensitive hash based processing of documents |
WO2011126489A1 (en) * | 2010-04-09 | 2011-10-13 | Hewlett-Packard Development Company, L.P. | Method and system for comparing and locating projects |
US8115869B2 (en) | 2007-02-28 | 2012-02-14 | Samsung Electronics Co., Ltd. | Method and system for extracting relevant information from content metadata |
US20120089397A1 (en) * | 2010-10-12 | 2012-04-12 | Nec Informatec Systems, Ltd. | Language model generating device, method thereof, and recording medium storing program thereof |
US8176068B2 (en) | 2007-10-31 | 2012-05-08 | Samsung Electronics Co., Ltd. | Method and system for suggesting search queries on electronic devices |
US20120215803A1 (en) * | 2011-02-22 | 2012-08-23 | International Business Machines Corporation | Aggregate contribution of iceberg queries |
US8423541B1 (en) | 2005-03-31 | 2013-04-16 | Google Inc. | Using saved search results for quality feedback |
US20130159275A1 (en) * | 2011-12-14 | 2013-06-20 | Hon Hai Precision Industry Co., Ltd. | Information searching system and method |
US8594239B2 (en) | 2011-02-21 | 2013-11-26 | Microsoft Corporation | Estimating document similarity using bit-strings |
US8661341B1 (en) | 2011-01-19 | 2014-02-25 | Google, Inc. | Simhash based spell correction |
US20140207782A1 (en) * | 2013-01-22 | 2014-07-24 | Equivio Ltd. | System and method for computerized semantic processing of electronic documents including themes |
US9286385B2 (en) | 2007-04-25 | 2016-03-15 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US9298757B1 (en) | 2013-03-13 | 2016-03-29 | International Business Machines Corporation | Determining similarity of linguistic objects |
US9330358B1 (en) * | 2013-01-04 | 2016-05-03 | The United States Of America As Represented By The Secretary Of The Navy | Case-based reasoning system using normalized weight vectors |
WO2018106663A1 (en) * | 2016-12-06 | 2018-06-14 | Ebay Inc. | Anchored search |
US20180268025A1 (en) * | 2017-03-20 | 2018-09-20 | International Business Machines Corporation | Numeric data type support for cognitive intelligence queries |
US11003567B2 (en) * | 2017-12-06 | 2021-05-11 | International Business Machines Corporation | Method and apparatus for test modeling |
US11080273B2 (en) * | 2017-03-20 | 2021-08-03 | International Business Machines Corporation | Image support for cognitive intelligence queries |
US11170759B2 (en) * | 2018-12-31 | 2021-11-09 | Verint Systems UK Limited | System and method for discriminating removing boilerplate text in documents comprising structured labelled text elements |
US11379506B2 (en) * | 2014-09-26 | 2022-07-05 | Oracle International Corporation | Techniques for similarity analysis and data enrichment using knowledge sources |
US11500880B2 (en) | 2017-09-29 | 2022-11-15 | Oracle International Corporation | Adaptive recommendations |
US20230185788A1 (en) * | 2021-12-09 | 2023-06-15 | International Business Machines Corporation | Semantic indices for accelerating semantic queries on databases |
US11693549B2 (en) | 2014-09-26 | 2023-07-04 | Oracle International Corporation | Declarative external data source importation, exportation, and metadata reflection utilizing HTTP and HDFS protocols |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5067152A (en) * | 1989-01-30 | 1991-11-19 | Information Technologies Research, Inc. | Method and apparatus for vector quantization |
US5101475A (en) * | 1989-04-17 | 1992-03-31 | The Research Foundation Of State University Of New York | Method and apparatus for generating arbitrary projections of three-dimensional voxel-based data |
US5469354A (en) * | 1989-06-14 | 1995-11-21 | Hitachi, Ltd. | Document data processing method and apparatus for document retrieval |
US5612865A (en) * | 1995-06-01 | 1997-03-18 | Ncr Corporation | Dynamic hashing method for optimal distribution of locks within a clustered system |
US5794178A (en) * | 1993-09-20 | 1998-08-11 | Hnc Software, Inc. | Visualization of information using graphical representations of context vector based relationships and attributes |
US5806061A (en) * | 1997-05-20 | 1998-09-08 | Hewlett-Packard Company | Method for cost-based optimization over multimeida repositories |
US6061734A (en) * | 1997-09-24 | 2000-05-09 | At&T Corp | System and method for determining if a message identifier could be equivalent to one of a set of predetermined indentifiers |
US6134532A (en) * | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6349296B1 (en) * | 1998-03-26 | 2002-02-19 | Altavista Company | Method for clustering closely resembling data objects |
US6603470B1 (en) * | 1995-08-04 | 2003-08-05 | Sun Microsystems, Inc. | Compression of surface normals in three-dimensional graphics data |
-
2001
- 2001-12-31 US US10/029,883 patent/US7158961B1/en not_active Expired - Lifetime
Patent Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5067152A (en) * | 1989-01-30 | 1991-11-19 | Information Technologies Research, Inc. | Method and apparatus for vector quantization |
US5101475A (en) * | 1989-04-17 | 1992-03-31 | The Research Foundation Of State University Of New York | Method and apparatus for generating arbitrary projections of three-dimensional voxel-based data |
US5469354A (en) * | 1989-06-14 | 1995-11-21 | Hitachi, Ltd. | Document data processing method and apparatus for document retrieval |
US5794178A (en) * | 1993-09-20 | 1998-08-11 | Hnc Software, Inc. | Visualization of information using graphical representations of context vector based relationships and attributes |
US5612865A (en) * | 1995-06-01 | 1997-03-18 | Ncr Corporation | Dynamic hashing method for optimal distribution of locks within a clustered system |
US6603470B1 (en) * | 1995-08-04 | 2003-08-05 | Sun Microsystems, Inc. | Compression of surface normals in three-dimensional graphics data |
US5806061A (en) * | 1997-05-20 | 1998-09-08 | Hewlett-Packard Company | Method for cost-based optimization over multimeida repositories |
US6061734A (en) * | 1997-09-24 | 2000-05-09 | At&T Corp | System and method for determining if a message identifier could be equivalent to one of a set of predetermined indentifiers |
US6134532A (en) * | 1997-11-14 | 2000-10-17 | Aptex Software, Inc. | System and method for optimal adaptive matching of users to most relevant entity and information in real-time |
US6349296B1 (en) * | 1998-03-26 | 2002-02-19 | Altavista Company | Method for clustering closely resembling data objects |
Non-Patent Citations (9)
Title |
---|
"Approximate Nearest Neighbors: Towards Removing the Curse of Dimensionality (preliminary version)"; Piotr Indyk et al.; Department of Computer Science; Stanford University; Jul. 21, 1999; pp. 1-13 and i-vii. |
"Approximation Algorithms for Classification Problems with Pairwise Relationships: Metric Labeling and Markov Random Fields"; Jon Kleinberg et al. |
"Chapter 26-Improved approximation algorithms for network design problems"; M.X. Goemans et al.; pp. 223-232. |
"Efficient Search for Approximate Nearest Neighbor in High Dimensional Spaces"; Eyal Kushilevitz et al.; pp. 1-17. |
"On the resemblance and containment of documents"; Andrei Z. Broder; Digital Systems Research Center; Palo Alto, CA; pp. 1-9. |
"Scalable Techniques for Clustering the Web"; Taher H. Haveliwala et al. |
"Similarity Search in High Dimensions via Hashing"; Aristides Gionis et al.; Department of Computer Science; Stanford University; pp. 518-529; 1999. |
Moses Sampspn Charikar, "Algorithms for Clustering Problems", 2001, Stanford University, vol. 62/01-B of Dissertation Abstracts International. * |
SRC Technical Note; 1997-015; Jul. 25, 1997; "Syntactic Clustering of the Web"; Andrei Z. Broder et al.; pp. 1-14; Digital Equipment Corporation http://gatekeeper.dec.com/pub/DEC/SRC/technical-notes/SRC-1997-015-html/. |
Cited By (82)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7548934B1 (en) | 2001-05-30 | 2009-06-16 | Microsoft Corporation | Auto playlist generator |
US7296031B1 (en) * | 2001-05-30 | 2007-11-13 | Microsoft Corporation | Auto playlist generator |
US20080243837A1 (en) * | 2001-06-27 | 2008-10-02 | Business Objects Americas | Method and apparatus for duplicate detection |
US7899825B2 (en) * | 2001-06-27 | 2011-03-01 | SAP America, Inc. | Method and apparatus for duplicate detection |
US7802236B2 (en) * | 2002-09-09 | 2010-09-21 | The Regents Of The University Of California | Method and apparatus for identifying similar regions of a program's execution |
US20040111708A1 (en) * | 2002-09-09 | 2004-06-10 | The Regents Of The University Of California | Method and apparatus for identifying similar regions of a program's execution |
US7630916B2 (en) * | 2003-06-25 | 2009-12-08 | Microsoft Corporation | Systems and methods for improving collaborative filtering |
US20040267596A1 (en) * | 2003-06-25 | 2004-12-30 | Lind Jesper B. | Systems and methods for improving collaborative filtering |
US7751325B2 (en) * | 2003-08-14 | 2010-07-06 | At&T Intellectual Property Ii, L.P. | Method and apparatus for sketch-based detection of changes in network traffic |
US20050039086A1 (en) * | 2003-08-14 | 2005-02-17 | Balachander Krishnamurthy | Method and apparatus for sketch-based detection of changes in network traffic |
US20060101060A1 (en) * | 2004-11-08 | 2006-05-11 | Kai Li | Similarity search system with compact data structures |
US7966327B2 (en) | 2004-11-08 | 2011-06-21 | The Trustees Of Princeton University | Similarity search system with compact data structures |
US9031945B1 (en) | 2005-03-31 | 2015-05-12 | Google Inc. | Sharing and using search results |
US8423541B1 (en) | 2005-03-31 | 2013-04-16 | Google Inc. | Using saved search results for quality feedback |
US20060248063A1 (en) * | 2005-04-18 | 2006-11-02 | Raz Gordon | System and method for efficiently tracking and dating content in very large dynamic document spaces |
US20070016580A1 (en) * | 2005-07-15 | 2007-01-18 | International Business Machines Corporation | Extracting information about references to entities rom a plurality of electronic documents |
US20070043757A1 (en) * | 2005-08-17 | 2007-02-22 | Microsoft Corporation | Storage reports duplicate file detection |
US7401080B2 (en) * | 2005-08-17 | 2008-07-15 | Microsoft Corporation | Storage reports duplicate file detection |
US8200688B2 (en) | 2006-03-07 | 2012-06-12 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices |
US20080183698A1 (en) * | 2006-03-07 | 2008-07-31 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices |
US8863221B2 (en) | 2006-03-07 | 2014-10-14 | Samsung Electronics Co., Ltd. | Method and system for integrating content and services among multiple networks |
US20070211762A1 (en) * | 2006-03-07 | 2007-09-13 | Samsung Electronics Co., Ltd. | Method and system for integrating content and services among multiple networks |
US20070214123A1 (en) * | 2006-03-07 | 2007-09-13 | Samsung Electronics Co., Ltd. | Method and system for providing a user interface application and presenting information thereon |
US20080133504A1 (en) * | 2006-12-04 | 2008-06-05 | Samsung Electronics Co., Ltd. | Method and apparatus for contextual search and query refinement on consumer electronics devices |
US8935269B2 (en) | 2006-12-04 | 2015-01-13 | Samsung Electronics Co., Ltd. | Method and apparatus for contextual search and query refinement on consumer electronics devices |
US20090055393A1 (en) * | 2007-01-29 | 2009-02-26 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices based on metadata information |
US8782056B2 (en) | 2007-01-29 | 2014-07-15 | Samsung Electronics Co., Ltd. | Method and system for facilitating information searching on electronic devices |
US8115869B2 (en) | 2007-02-28 | 2012-02-14 | Samsung Electronics Co., Ltd. | Method and system for extracting relevant information from content metadata |
US20080235209A1 (en) * | 2007-03-20 | 2008-09-25 | Samsung Electronics Co., Ltd. | Method and apparatus for search result snippet analysis for query expansion and result filtering |
US8510453B2 (en) | 2007-03-21 | 2013-08-13 | Samsung Electronics Co., Ltd. | Framework for correlating content on a local network with information on an external network |
US20080235393A1 (en) * | 2007-03-21 | 2008-09-25 | Samsung Electronics Co., Ltd. | Framework for corrrelating content on a local network with information on an external network |
US9286385B2 (en) | 2007-04-25 | 2016-03-15 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US20080266449A1 (en) * | 2007-04-25 | 2008-10-30 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US8209724B2 (en) | 2007-04-25 | 2012-06-26 | Samsung Electronics Co., Ltd. | Method and system for providing access to information of potential interest to a user |
US8843467B2 (en) | 2007-05-15 | 2014-09-23 | Samsung Electronics Co., Ltd. | Method and system for providing relevant information to a user of a device in a local network |
US20080288641A1 (en) * | 2007-05-15 | 2008-11-20 | Samsung Electronics Co., Ltd. | Method and system for providing relevant information to a user of a device in a local network |
US20090063470A1 (en) * | 2007-08-28 | 2009-03-05 | Nogacom Ltd. | Document management using business objects |
US20090100018A1 (en) * | 2007-10-12 | 2009-04-16 | Jonathan Roberts | System and method for capturing, integrating, discovering, and using geo-temporal data |
US8176068B2 (en) | 2007-10-31 | 2012-05-08 | Samsung Electronics Co., Ltd. | Method and system for suggesting search queries on electronic devices |
US20090132571A1 (en) * | 2007-11-16 | 2009-05-21 | Microsoft Corporation | Efficient use of randomness in min-hashing |
US20100070509A1 (en) * | 2008-08-15 | 2010-03-18 | Kai Li | System And Method For High-Dimensional Similarity Search |
US20100070895A1 (en) * | 2008-09-10 | 2010-03-18 | Samsung Electronics Co., Ltd. | Method and system for utilizing packaged content sources to identify and provide information based on contextual information |
US8938465B2 (en) | 2008-09-10 | 2015-01-20 | Samsung Electronics Co., Ltd. | Method and system for utilizing packaged content sources to identify and provide information based on contextual information |
US20100070511A1 (en) * | 2008-09-17 | 2010-03-18 | Microsoft Corporation | Reducing use of randomness in consistent uniform hashing |
US8738618B2 (en) | 2008-12-12 | 2014-05-27 | At&T Intellectual Property I, L.P. | Methods and systems to estimate query responses based on data set sketches |
US9779142B2 (en) | 2008-12-12 | 2017-10-03 | At&T Intellectual Property I, L.P. | Methods and systems to estimate query responses based on data set sketches |
US20100153387A1 (en) * | 2008-12-12 | 2010-06-17 | At&T Intellectual Property I, L.P. | Methods and systems for estimate derivation |
US20100250474A1 (en) * | 2009-03-27 | 2010-09-30 | Bank Of America Corporation | Predictive coding of documents in an electronic discovery system |
US8504489B2 (en) * | 2009-03-27 | 2013-08-06 | Bank Of America Corporation | Predictive coding of documents in an electronic discovery system |
US20110072013A1 (en) * | 2009-09-23 | 2011-03-24 | Adobe Systems Incorporated | Algorithm and implementation for fast computation of content recommendations |
US8554764B2 (en) | 2009-09-23 | 2013-10-08 | Adobe Systems Incorporated | Algorithm and implementation for fast computation of content recommendations |
US20110087669A1 (en) * | 2009-10-09 | 2011-04-14 | Stratify, Inc. | Composite locality sensitive hash based processing of documents |
US20110087668A1 (en) * | 2009-10-09 | 2011-04-14 | Stratify, Inc. | Clustering of near-duplicate documents |
US8244767B2 (en) | 2009-10-09 | 2012-08-14 | Stratify, Inc. | Composite locality sensitive hash based processing of documents |
US9355171B2 (en) | 2009-10-09 | 2016-05-31 | Hewlett Packard Enterprise Development Lp | Clustering of near-duplicate documents |
US8938437B2 (en) | 2010-04-09 | 2015-01-20 | Hewlett-Packard Development Company, L.P. | Method and system for comparing and locating projects |
WO2011126489A1 (en) * | 2010-04-09 | 2011-10-13 | Hewlett-Packard Development Company, L.P. | Method and system for comparing and locating projects |
US9928239B2 (en) | 2010-04-09 | 2018-03-27 | Entit Software Llc | Comparing projects |
US8831945B2 (en) * | 2010-10-12 | 2014-09-09 | Nec Informatec Systems, Ltd. | Language model generating device, method thereof, and recording medium storing program thereof |
US9128907B2 (en) * | 2010-10-12 | 2015-09-08 | Nec Informatec Systems, Ltd. | Language model generating device, method thereof, and recording medium storing program thereof |
US20120089397A1 (en) * | 2010-10-12 | 2012-04-12 | Nec Informatec Systems, Ltd. | Language model generating device, method thereof, and recording medium storing program thereof |
US20140343926A1 (en) * | 2010-10-12 | 2014-11-20 | Nec Informatec Systems, Ltd. | Language model generating device, method thereof, and recording medium storing program thereof |
US8661341B1 (en) | 2011-01-19 | 2014-02-25 | Google, Inc. | Simhash based spell correction |
US8594239B2 (en) | 2011-02-21 | 2013-11-26 | Microsoft Corporation | Estimating document similarity using bit-strings |
US8495087B2 (en) * | 2011-02-22 | 2013-07-23 | International Business Machines Corporation | Aggregate contribution of iceberg queries |
US20120215803A1 (en) * | 2011-02-22 | 2012-08-23 | International Business Machines Corporation | Aggregate contribution of iceberg queries |
US8499003B2 (en) * | 2011-02-22 | 2013-07-30 | International Business Machines Corporation | Aggregate contribution of iceberg queries |
US20130159275A1 (en) * | 2011-12-14 | 2013-06-20 | Hon Hai Precision Industry Co., Ltd. | Information searching system and method |
US9330358B1 (en) * | 2013-01-04 | 2016-05-03 | The United States Of America As Represented By The Secretary Of The Navy | Case-based reasoning system using normalized weight vectors |
US20140207782A1 (en) * | 2013-01-22 | 2014-07-24 | Equivio Ltd. | System and method for computerized semantic processing of electronic documents including themes |
US10002182B2 (en) | 2013-01-22 | 2018-06-19 | Microsoft Israel Research And Development (2002) Ltd | System and method for computerized identification and effective presentation of semantic themes occurring in a set of electronic documents |
US9298757B1 (en) | 2013-03-13 | 2016-03-29 | International Business Machines Corporation | Determining similarity of linguistic objects |
US11379506B2 (en) * | 2014-09-26 | 2022-07-05 | Oracle International Corporation | Techniques for similarity analysis and data enrichment using knowledge sources |
US11693549B2 (en) | 2014-09-26 | 2023-07-04 | Oracle International Corporation | Declarative external data source importation, exportation, and metadata reflection utilizing HTTP and HDFS protocols |
WO2018106663A1 (en) * | 2016-12-06 | 2018-06-14 | Ebay Inc. | Anchored search |
US20180268025A1 (en) * | 2017-03-20 | 2018-09-20 | International Business Machines Corporation | Numeric data type support for cognitive intelligence queries |
US11080273B2 (en) * | 2017-03-20 | 2021-08-03 | International Business Machines Corporation | Image support for cognitive intelligence queries |
US11100100B2 (en) * | 2017-03-20 | 2021-08-24 | International Business Machines Corporation | Numeric data type support for cognitive intelligence queries |
US11500880B2 (en) | 2017-09-29 | 2022-11-15 | Oracle International Corporation | Adaptive recommendations |
US11003567B2 (en) * | 2017-12-06 | 2021-05-11 | International Business Machines Corporation | Method and apparatus for test modeling |
US11170759B2 (en) * | 2018-12-31 | 2021-11-09 | Verint Systems UK Limited | System and method for discriminating removing boilerplate text in documents comprising structured labelled text elements |
US20230185788A1 (en) * | 2021-12-09 | 2023-06-15 | International Business Machines Corporation | Semantic indices for accelerating semantic queries on databases |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7158961B1 (en) | Methods and apparatus for estimating similarity | |
US7647331B2 (en) | Detecting duplicate images using hash code grouping | |
US8713034B1 (en) | Systems and methods for identifying similar documents | |
US7664735B2 (en) | Method and system for ranking documents of a search result to improve diversity and information richness | |
JP4908214B2 (en) | Systems and methods for providing search query refinement. | |
US7801897B2 (en) | Indexing documents according to geographical relevance | |
CN101454750B (en) | Disambiguation of named entities | |
US6549897B1 (en) | Method and system for calculating phrase-document importance | |
US6173275B1 (en) | Representation and retrieval of images using context vectors derived from image information elements | |
EP1225517B1 (en) | System and methods for computer based searching for relevant texts | |
US8156129B2 (en) | Substantially similar queries | |
US8516357B1 (en) | Link based clustering of hyperlinked documents | |
US7392244B1 (en) | Methods and apparatus for determining equivalent descriptions for an information need | |
JP5147162B2 (en) | Method and system for determining object similarity based on heterogeneous relationships | |
Chung | A Brief Survey of PageRank Algorithms. | |
US20150169640A1 (en) | Query By Image | |
US20110087670A1 (en) | Systems and methods for concept mapping | |
US8805755B2 (en) | Decomposable ranking for efficient precomputing | |
US6718325B1 (en) | Approximate string matcher for delimited strings | |
US20080235208A1 (en) | Method For Fast Large Scale Data Mining Using Logistic Regression | |
US9977816B1 (en) | Link-based ranking of objects that do not include explicitly defined links | |
US7774340B2 (en) | Method and system for calculating document importance using document classifications | |
Witter et al. | Downdating the latent semantic indexing model for conceptual information retrieval | |
Lee et al. | 2D Z-string: a new spatial knowledge representation for image databases | |
Lee et al. | Perturbation of the hyper-linked environment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:CHARIKA, MOSES SAMSON;REEL/FRAME:013144/0265Effective date: 20020731 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553)Year of fee payment: 12 |
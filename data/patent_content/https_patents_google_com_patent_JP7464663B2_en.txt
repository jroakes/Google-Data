JP7464663B2 - Privacy-preserving application and device error detection - Google Patents
Privacy-preserving application and device error detection Download PDFInfo
- Publication number
- JP7464663B2 JP7464663B2 JP2022136800A JP2022136800A JP7464663B2 JP 7464663 B2 JP7464663 B2 JP 7464663B2 JP 2022136800 A JP2022136800 A JP 2022136800A JP 2022136800 A JP2022136800 A JP 2022136800A JP 7464663 B2 JP7464663 B2 JP 7464663B2
- Authority
- JP
- Japan
- Prior art keywords
- application
- data
- client device
- server
- trust
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000001514 detection method Methods 0.000 title claims description 69
- 238000000034 method Methods 0.000 claims description 49
- 238000012545 processing Methods 0.000 claims description 22
- 230000004044 response Effects 0.000 claims description 16
- 230000003993 interaction Effects 0.000 description 20
- 230000008569 process Effects 0.000 description 18
- 238000004590 computer program Methods 0.000 description 13
- 238000013515 script Methods 0.000 description 13
- 238000010586 diagram Methods 0.000 description 8
- 230000000694 effects Effects 0.000 description 7
- 238000004891 communication Methods 0.000 description 6
- 238000010801 machine learning Methods 0.000 description 6
- 230000008901 benefit Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 3
- 238000010420 art technique Methods 0.000 description 2
- 230000001010 compromised effect Effects 0.000 description 2
- 238000010295 mobile communication Methods 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 230000001902 propagating effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000013179 statistical model Methods 0.000 description 2
- 238000012549 training Methods 0.000 description 2
- 241000700605 Viruses Species 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 230000007547 defect Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/64—Protecting data integrity, e.g. using checksums, certificates or signatures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3247—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/36—Preventing errors by testing or debugging software
- G06F11/3668—Software testing
- G06F11/3672—Test management
- G06F11/3688—Test management for test execution, e.g. scheduling of test suites
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/36—Preventing errors by testing or debugging software
- G06F11/3668—Software testing
- G06F11/3672—Test management
- G06F11/3692—Test management for test results analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/36—Preventing errors by testing or debugging software
- G06F11/3668—Software testing
- G06F11/3696—Methods or tools to render software testable
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
- G06F21/33—User authentication using certificates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/44—Program or device authentication
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/45—Structures or tools for the administration of authentication
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
- G06F21/57—Certifying or maintaining trusted computer platforms, e.g. secure boots or power-downs, version controls, system software checks, secure updates or assessing vulnerabilities
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/602—Providing cryptographic facilities or services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
- G06F21/6254—Protecting personal data, e.g. for financial or medical purposes by anonymising data, e.g. decorrelating personal data from the owner's identification
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
- H04L63/0823—Network architectures or network communication protocols for network security for authentication of entities using certificates
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/12—Applying verification of the received information
- H04L63/123—Applying verification of the received information received data contents, e.g. message integrity
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/12—Applying verification of the received information
- H04L63/126—Applying verification of the received information the source of the received data
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1433—Vulnerability analysis
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/321—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving a third party or a trusted authority
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3247—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures
- H04L9/3257—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures using blind signatures
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3263—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving certificates, e.g. public key certificate [PKC] or attribute certificate [AC]; Public key infrastructure [PKI] arrangements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3263—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving certificates, e.g. public key certificate [PKC] or attribute certificate [AC]; Public key infrastructure [PKI] arrangements
- H04L9/3268—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving certificates, e.g. public key certificate [PKC] or attribute certificate [AC]; Public key infrastructure [PKI] arrangements using certificate validation, registration, distribution or revocation, e.g. certificate revocation list [CRL]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/21—Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/2141—Access rights, e.g. capability lists, access control lists, access tables, access matrices
Description
関連出願の相互参照
本出願は国際出願であり、2020年4月23日に出願されたIL出願第274165号の利益を主張する。上記の出願の開示は、参照によりその全体が本明細書に組み込まれている。
CROSS-REFERENCE TO RELATED APPLICATIONS This application is an international application and claims the benefit of IL Application No. 274165, filed April 23, 2020. The disclosures of the above applications are incorporated herein by reference in their entireties.
本明細書は概して、クライアントデバイスおよびそれに関連付けられたアプリケーションにおけるエラーを検出すると同時に、クライアントデバイスのユーザのプライバシーを保持することに関する。 This specification generally relates to detecting errors in client devices and their associated applications while at the same time preserving the privacy of users of the client devices.
クライアントデバイスは、コンテンツプラットフォーム(たとえば、検索プラットフォーム、ソーシャルメディアプラットフォーム、またはコンテンツを提供する別のプラットフォーム)にアクセスするのに、アプリケーション(たとえば、ウェブブラウザ、ネイティブアプリケーション)を使うことができる。コンテンツプラットフォームは、クライアントデバイス上で起動されるアプリケーション内での表示用に、デジタルコンテンツを提供し得る。 A client device can use an application (e.g., a web browser, a native application) to access a content platform (e.g., a search platform, a social media platform, or another platform that provides content). The content platform can provide digital content for display within an application launched on the client device.
いくつかの事例では、クライアントデバイス上で実行するアプリケーションが、たとえば、コンテンツプラットフォームとの、正常な、もしくは期待される対話から逸脱する、またはコンテンツプラットフォームの動作および/もしくはセキュリティを中断する/損なう、のいずれかのように、コンテンツプラットフォームと対話する場合がある。そのような対話は、アプリケーションおよび/またはクライアントデバイスにおけるエラーの結果であり得る。いくつかの事例では、そのようなエラーは、悪意のあるエンティティによって引き起こされ、または注入される場合があり、このようなエンティティは、アプリケーション(そのソフトウェア開発キット(「SDK」)を含む)、基底クライアントデバイス、および/もしくはアプリケーションからコンテンツプラットフォームに提供されるデータを損なう、または不適切に修正している場合がある。 In some cases, an application executing on a client device may interact with the content platform in a manner that, for example, either deviates from normal or expected interactions with the content platform or disrupts/impairs the operation and/or security of the content platform. Such interactions may be the result of errors in the application and/or client device. In some cases, such errors may be caused or injected by a malicious entity that may corrupt or improperly modify the application (including its software development kit ("SDK")), the underlying client device, and/or data provided by the application to the content platform.
概して、本明細書に記載する本主題の1つの発明的態様は、クライアントデバイス上で実行するアプリケーションによって、アプリケーション内でコンテンツが提供され、対話されるコンテキストを表すコンテキストアプリケーションデータを取得する動作と、アプリケーションによって、コンテキストアプリケーションデータをブラインドして、ブラインドされたコンテキストアプリケーションデータを生成する動作と、アプリケーションのデジタル証明書に関するデータ、およびクライアントデバイスの信頼性を評価する際に使われ得るデータを含むデバイス信頼性データを取得する動作と、信頼評価サーバに、ブラインドされたコンテキストアプリケーションデータ、デジタル証明書に関するデータ、およびデバイス信頼性データを提供する動作と、信頼評価サーバから、(1)クライアントデバイスが信頼できる(trustworthy)ことを明記する第1の指示、(2)アプリケーションが真正である(authentic)ことを明記する第2の指示、および(3)第1のデータ項目に対する、信頼評価サーバのデジタル署名を含むデータのセットを受信する動作と、第1のデータ項目に対するデジタル署名を検証する動作と、第1のデータ項目に対するデジタル署名を検証したことに応答して、アプリケーションによって、第1のデータ項目をブラインド解除して、ブラインド解除された第1のデータ項目を取得する動作と、ブラインド解除された第1のデータ項目がコンテキストアプリケーションデータと一致することを確認する動作と、ブラインド解除された第1のデータ項目がコンテキストアプリケーションデータと一致することを確認したことに応答して、アプリケーションエラー検出サーバに、第1のデータ項目に対するデジタル署名、第1の指示、第2の指示、およびブラインド解除された第1のデータ項目を提供する動作と、アプリケーションエラー検出サーバから、アプリケーションがいかなるエラーも持たないことを明記する第3の指示を受信する動作とを含む方法で具現化され得る。この態様の他の実施形態は、対応する方法、装置、およびコンピュータ記憶デバイス上で符号化された、方法のアクションを実施するように構成されたコンピュータプログラムを含む。これらおよび他の実施形態は各々、任意選択で、以下の特徴のうちの1つまたは複数を含み得る。 In general, one inventive aspect of the subject matter described herein includes the steps of: obtaining, by an application executing on a client device, context application data representing a context in which content is provided and interacted with within the application; blinding, by the application, the context application data to generate blinded context application data; obtaining device trust data including data related to a digital certificate of the application and data that may be used in assessing the trustworthiness of the client device; providing the blinded context application data, the data related to the digital certificate, and the device trust data to a trust assessment server; and receiving from the trust assessment server (1) a first instruction specifying that the client device is trustworthy, (2) a second instruction specifying that the application is authentic, and (3) a third instruction specifying that the application is trustworthy. The method may be embodied in a method including receiving a set of data including the instructions, and (3) a digital signature of the trust assessment server for the first data item, verifying the digital signature for the first data item, unblinding the first data item by the application in response to verifying the digital signature for the first data item to obtain an unblinded first data item, verifying that the unblinded first data item matches the context application data, providing the application error detection server with the digital signature for the first data item, the first instructions, the second instructions, and the unblinded first data item in response to verifying that the unblinded first data item matches the context application data, and receiving from the application error detection server a third instruction specifying that the application does not have any errors. Other embodiments of this aspect include corresponding methods, apparatus, and computer programs encoded on a computer storage device and configured to perform the actions of the method. These and other embodiments may each optionally include one or more of the following features.
いくつかの実装形態では、方法は、信頼評価サーバによって、(1)デバイス信頼性データに基づいて、クライアントデバイスが信頼でき、(2)アプリケーションのデジタル証明書に関するデータを、既知の真正アプリケーションのデジタル証明書に関するデータと比較することによって、アプリケーションが真正であると判断するステップと、信頼評価サーバによって、およびクライアントデバイスに、クライアントデバイスが信頼できることを明記する第1の指示、およびアプリケーションが既知のアプリケーションであることを明記する第2の指示を提供するステップとをさらに含み得る。 In some implementations, the method may further include determining, by the trust assessment server, (1) that the client device is trustworthy based on the device trust data and (2) that the application is authentic by comparing data regarding the application's digital certificate with data regarding digital certificates of known authentic applications, and providing, by the trust assessment server and to the client device, a first indication specifying that the client device is trustworthy and a second indication specifying that the application is a known application.
いくつかの実装形態では、アプリケーションのデジタル証明書に関するデータは、アプリケーションのアプリケーションパッケージ(APK)のデジタルダイジェスト、またはアプリケーションのAPKの暗号ハッシュを含み得る。 In some implementations, data about the application's digital certificate may include a digital digest of the application's application package (APK) or a cryptographic hash of the application's APK.
いくつかの実装形態では、アプリケーションのデジタル証明書に関するデータ、およびクライアントデバイスの信頼性を評価する際に使われ得るデバイスデータを含むデバイス信頼性データを取得するステップは、クライアントデバイス上で実行する、信頼されるアプリケーションまたはオペレーティングシステムによって、アプリケーションのデジタル証明書に関するデータを取得するステップと、クライアントデバイス上で実行するデバイス信頼性クライアントアプリケーションによって、デバイス信頼性データを取得するステップとを含み得る。 In some implementations, obtaining device trust data including data regarding a digital certificate of an application and device data that can be used in assessing the trustworthiness of a client device may include obtaining data regarding a digital certificate of an application by a trusted application or operating system executing on the client device, and obtaining the device trust data by a device trust client application executing on the client device.
いくつかの実装形態では、クライアントデバイスが信頼できることを明記する第1の指示は2ビット値であってよく、ここで2ビット値の第1のビットは、クライアントデバイスが不適切に修正も改変もされていないことを示し、2ビット値の第2のビットは、クライアントデバイスのプロファイルが、以前検証されたデバイスのプロファイルと一致することを示す。 In some implementations, the first indication that the client device is trustworthy may be a two-bit value, where a first bit of the two-bit value indicates that the client device has not been improperly modified or tampered with, and a second bit of the two-bit value indicates that the profile of the client device matches the profile of a previously verified device.
いくつかの実装形態では、方法は、アプリケーションエラー検出サーバに、第1のデータ項目に対するデジタル署名、第1の指示、第2の指示、およびコンテキストアプリケーションデータを提供したことに応答して、信頼評価サーバと通信して、デジタル署名を検証する動作をさらに含んでよく、デジタル署名は、IETF VOPRFデジタル署名であり、デジタル署名を最初に生成した信頼評価サーバによって検証可能である。 In some implementations, the method may further include, in response to providing the application error detection server with the digital signature for the first data item, the first instructions, the second instructions, and the contextual application data, communicating with a trust assessment server to verify the digital signature, where the digital signature is an IETF VOPRF digital signature and is verifiable by the trust assessment server that originally generated the digital signature.
いくつかの実装形態では、方法は、アプリケーションエラー検出サーバによって、および信頼評価サーバから、デジタル署名が有効であることを明記する第4の指示を受信する動作をさらに含み得る。 In some implementations, the method may further include receiving a fourth indication by the application error detection server and from the trust assessment server specifying that the digital signature is valid.
概して、本明細書に記載する本主題の別の発明的態様は、クライアントデバイス上で実行するアプリケーションによって、データのランダムセットを生成する動作と、アプリケーションによって、データのランダムセットをブラインドして、データのブラインドされたランダムセットを生成する動作と、アプリケーションのデジタル証明書に関するデータ、およびクライアントデバイスの信頼性を評価する際に使われ得るデバイスデータを含むデバイス信頼性データを取得する動作と、信頼評価サーバに、データのブラインドされたランダムセット、デジタル証明書に関するデータ、およびデバイス信頼性データを提供する動作と、信頼評価サーバから、(1)クライアントデバイスが信頼できることを明記する第1の指示、(2)アプリケーションが真正であることを明記する第2の指示、および(3)第1のデータ項目に対する、信頼評価サーバのデジタル署名を含むデータの第1のセットを受信する動作と、第1のデータ項目に対するデジタル署名を検証する動作と、第1のデータ項目に対するデジタル署名を検証したことに応答して、アプリケーションによって、第1のデータ項目をブラインド解除して、ブラインド解除された第1のデータ項目を取得する動作と、ブラインド解除された第1のデータ項目が、データのランダムセットと一致することを確認する動作と、ブラインド解除された第1のデータ項目が、データのランダムセットと一致することを確認したことに応答して、アプリケーションによって、アプリケーション内でコンテンツが提供され、対話されるコンテキストを表すコンテキストアプリケーションデータを取得する動作と、アプリケーションエラー検出サーバに、第1のデータ項目に対するデジタル署名、第1の指示、第2の指示、およびコンテキストアプリケーションデータを提供する動作と、アプリケーションエラー検出サーバから、アプリケーションがいかなるエラーも持たないことを明記する第3の指示を受信する動作とを含む方法で具現化することができる。この態様の他の実施形態は、対応する方法、装置、およびコンピュータ記憶デバイス上で符号化された、方法のアクションを実施するように構成されたコンピュータプログラムを含む。 In general, another inventive aspect of the subject matter described herein includes the steps of generating, by an application executing on a client device, a random set of data; blinding, by the application, the random set of data to generate a blinded random set of data; obtaining device trust data including data related to a digital certificate of the application and device data that may be used in assessing the trustworthiness of the client device; providing the blinded random set of data, the data related to the digital certificate, and the device trust data to a trust assessment server; receiving from the trust assessment server a first set of data including (1) a first instruction specifying that the client device is trustworthy, (2) a second instruction specifying that the application is authentic, and (3) a digital signature of the trust assessment server for the first data item; and verifying the digital signature for the first data item. The method may be embodied in a method including: verifying the name of the application; unblinding the first data item by the application in response to verifying the digital signature for the first data item to obtain an unblinded first data item; verifying that the unblinded first data item matches the random set of data; obtaining, by the application, contextual application data representative of a context in which content is provided and interacted within the application in response to verifying that the unblinded first data item matches the random set of data; providing the digital signature for the first data item, the first instruction, the second instruction, and the contextual application data to an application error detection server; and receiving from the application error detection server a third instruction specifying that the application does not have any errors. Other embodiments of this aspect include corresponding methods, apparatus, and computer programs configured to perform the actions of the method encoded on a computer storage device.
本明細書に記載する本主題の特定の実施形態は、以下の利点のうちの1つまたは複数を実現するように実装され得る。本明細書に記載する技法は、クライアントデバイスおよび/またはクライアントデバイス上で実行するアプリケーションにおけるエラー(たとえば、ソフトウェアエラー、バグ、欠陥など)/それらの上での悪意のある活動を識別するのに使われ得る。そのようなエラー/悪意のある活動を識別するために、いくつかの従来技術は、クライアントデバイス上で実行するアプリケーションから収集されたコンテキストアプリケーションデータ(たとえば、訪問されたウェブサイト、訪問の時間、ウェブサイトを訪問するのに使われたブラウザまたはアプリケーション)を評価している。 Certain embodiments of the subject matter described herein may be implemented to achieve one or more of the following advantages: The techniques described herein may be used to identify errors (e.g., software errors, bugs, defects, etc.)/malicious activity in client devices and/or applications executing on the client devices. To identify such errors/malicious activity, some prior art techniques evaluate contextual application data collected from applications executing on the client devices (e.g., websites visited, time of visit, browser or application used to visit the website).
ただし、そのような従来のソリューションは、本明細書に記載する技法ほどには堅牢でない。これは、本明細書に記載する技法が、デバイス信頼性およびアプリケーション真正性判断を用いて、コンテキストアプリケーションデータに基づいて、エラー/悪意のある活動検出を強化するからである。たとえば、本明細書に記載するデバイス信頼性およびアプリケーション真正性分析は、ルート化した(rooted)モバイルデバイス上で稼動する、修正されたブラウザ(またはブラウザをエミュレートする他のアプリケーション)上で特定の活動が実施されている最中であると判断することができる。別の例として、本明細書に記載するデバイス信頼性およびアプリケーション真正性分析は、エミュレータにおいて実行中の修正されたブラウザ上で、特定の活動が実施されている最中であると判断することができる。これらの例では、本明細書に記載する技法は、識別されたクライアントデバイスを信頼できないものとして、およびアプリケーション(この場合、ブラウザ)を真正でないものとして見なし、このことは、アプリケーションがエラーを有する(また、おそらくは損なわれてさえいる)ことを強く示し得る。したがって、これらの技法は、デバイス信頼性もアプリケーション真正性も考慮していなかった従来のシステムに勝る改良を提供する。 However, such conventional solutions are not as robust as the techniques described herein, because the techniques described herein use device trustworthiness and application authenticity determinations to enhance error/malicious activity detection based on contextual application data. For example, the device trustworthiness and application authenticity analysis described herein may determine that a particular activity is being performed on a modified browser (or other application that emulates a browser) running on a rooted mobile device. As another example, the device trustworthiness and application authenticity analysis described herein may determine that a particular activity is being performed on a modified browser running in an emulator. In these examples, the techniques described herein may view the identified client device as untrusted and the application (in this case, the browser) as inauthentic, which may be a strong indication that the application has errors (and perhaps even is compromised). Thus, these techniques provide an improvement over conventional systems that did not consider either device trustworthiness or application authenticity.
その上、本明細書に記載する革新は、クライアントデバイスおよび/またはアプリケーションの信頼性/真正性を検証し、アプリケーションとの対話がアプリケーションにおけるエラーを示すかどうかを判断する際に、プライバシー保持技法も使用する。いくつかの従来のシステムでは、スクリプトが、コンテキストアプリケーションデータ(たとえば、訪問されたウェブサイト、訪問の時間、ウェブサイトを訪問するのに使われたブラウザまたはアプリケーション)を収集し、これらが、アプリケーションエラーを識別するのに使われ得る。他の従来のシステムでは、複数の異なるコンテンツページ、コンテンツプラットフォーム、およびアプリケーションにわたるユーザの対話履歴が、アプリケーションエラーを識別するために集約され得る。ただし、従来のシステムにおけるそのようなデータ収集は、ユーザフィンガープリンティングのために、すなわち、アプリケーション/デバイスのユーザには非公開のデータを蓄積するのに、およびユーザの活動を監視するのに使われる場合もある。 Moreover, the innovations described herein also use privacy-preserving techniques in verifying the authenticity/authenticity of a client device and/or application and determining whether interactions with an application indicate an error in the application. In some conventional systems, scripts collect contextual application data (e.g., website visited, time of visit, browser or application used to visit the website) that can be used to identify application errors. In other conventional systems, a user's interaction history across multiple different content pages, content platforms, and applications can be aggregated to identify application errors. However, such data collection in conventional systems can also be used for user fingerprinting, i.e., to accumulate data private to the user of the application/device, and to monitor user activity.
対照的に、本明細書に記載する技法は、クライアントデバイスおよび/またはアプリケーションの信頼性/真正性を検証し、アプリケーションとの対話が、アプリケーションにおけるエラーを示すかどうかを判断すると同時に、ユーザフィンガープリンティングを防止することを可能にし、そうすることによって、プライバシーを向上させる。いくつかの実装形態では、本明細書に記載する技法は、信頼評価サーバ(またはサーバインスタンス)がデバイスおよびアプリケーションの真正性/信頼性を検証すると同時に、別のアプリケーションエラー検出サーバ(またはサーバインスタンス)がコンテキストアプリケーションデータに基づいてエラーを識別する分岐アーキテクチャを使用することによって、そのような向上したプライバシーを可能にする。そのような分岐アーキテクチャは、クライアントデバイスの外側の、またはそれとは別個のエンティティと共有されるユーザ/デバイス情報の量を制限する。たとえば、デバイス信頼性およびアプリケーション真正性評価を実施するのに要求されるデータは、信頼評価サーバに提供されるだけであり、アプリケーションエラー検出サーバには提供されない。同様に、アプリケーションエラー検出を実施するのに要求されるデータは、アプリケーションエラー検出サーバに提供されるだけであり、信頼評価サーバには提供されない。本明細書においてさらに記載するように、エンティティの間の、このタイプの情報遮蔽は、ブラインド署名の使用によって可能にされる。 In contrast, the techniques described herein enable verifying the authenticity/authenticity of a client device and/or application and determining whether an interaction with the application indicates an error in the application while simultaneously preventing user fingerprinting, thereby improving privacy. In some implementations, the techniques described herein enable such improved privacy by using a branched architecture in which a trust assessment server (or server instance) verifies the authenticity/authenticity of the device and application while a separate application error detection server (or server instance) identifies errors based on contextual application data. Such a branched architecture limits the amount of user/device information shared with entities outside or separate from the client device. For example, data required to perform device authenticity and application authenticity assessment is only provided to the trust assessment server and not to the application error detection server. Similarly, data required to perform application error detection is only provided to the application error detection server and not to the trust assessment server. As described further herein, this type of information shielding between entities is enabled by the use of blind signatures.
開示する技法はしたがって、機密ユーザ情報(たとえば、コンテキストアプリケーションデータ)を保護し、ユーザプライバシーを保証する際に有利であり、というのは、この情報は、クライアントデバイスの外側のどのエンティティによっても、アプリケーションのデジタル証明書に関する、対応するデータ、およびデバイス信頼性データにリンクすることができないからである。これは、信頼評価サーバがコンテキストアプリケーションデータへのアクセスを持たず、アプリケーションエラー検出サーバが、アプリケーションのデジタル証明書に関するデータおよびデバイス信頼性データへのアクセスを持たないからである。このことはまた、ユーザについての情報を(たとえば、コンテキストアプリケーションデータをアプリケーションのデジタル証明書に関するデータおよびデバイス信頼性データと突き合わせることによって)学習しようとする、サーバの間のいかなる共謀も防止し、したがって、ユーザ情報は、クライアントデバイスおよび/またはデバイスの関連付けられたアプリケーションにおけるエラーを識別するプロセスの間、保護される。 The disclosed techniques are therefore advantageous in protecting sensitive user information (e.g., contextual application data) and ensuring user privacy, since this information cannot be linked to the corresponding data regarding the application's digital certificate and device reliability data by any entity outside the client device. This is because the trust assessment server has no access to the contextual application data, and the application error detection server has no access to the data regarding the application's digital certificate and device reliability data. This also prevents any collusion between servers to learn information about the user (e.g., by matching the contextual application data with the data regarding the application's digital certificate and device reliability data), and thus user information is protected during the process of identifying errors in the client device and/or the device's associated applications.
本明細書において説明される本主題の1つまたは複数の実施形態の詳細は、添付の図面および以下の説明に記載される。本主題の他の特徴、態様および利点は、説明、図面、および特許請求の範囲から明らかになるであろう。 The details of one or more embodiments of the subject matter described herein are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, drawings, and claims.
本明細書は概して、クライアントデバイスのユーザのプライバシーを損なうことのない、クライアントデバイスおよび/またはそれに関連付けられたアプリケーションにおける、(従来のシステムと比較して)より堅牢なエラー検出のための技法に関する。 This specification generally relates to techniques for more robust error detection (compared to conventional systems) in client devices and/or associated applications without compromising the privacy of users of the client devices.
本明細書全体を通して記載するように、向上したエラー検出技法は、あるシステム/サーバ/サーバインスタンスがデバイスおよびアプリケーション信頼性/真正性評価を実施する(たとえば、図1に示す信頼評価サーバ)と同時に、第2のシステム/サーバ/サーバインスタンスが、(本明細書においてさらに記載するように)コンテキストアプリケーションデータに基づいて、アプリケーションおよび/またはデバイスにおけるエラーを検出する(たとえば、図1に示すアプリケーションエラー検出サーバ)、分岐アーキテクチャを使う。そのようなアーキテクチャを使い、これらのシステム/サーバ/サーバインスタンスに提供される特定のデータに対してブラインド署名を適用することによって、最小限のユーザ/デバイス情報が、いずれか1つのサーバ/システム/インスタンスと共有される(たとえば、そのシステム/サーバ/サーバインスタンスの動作を実施するのに必要なだけの情報)。このことは、デバイスおよびアプリケーション信頼性/真正性評価のために要求されるデータが、外部エンティティ(クライアントデバイスの外側)によって、コンテキストアプリケーションデータと突き合わされるのを防止するという利点を提供する。このことは、したがって、突き合わせの結果として、どの外部エンティティが、ユーザについての情報を学習するのも防止し、そうすることによって、ユーザプライバシーの向上を提供する。 As described throughout this specification, the improved error detection technique uses a branched architecture where one system/server/server instance performs device and application trust/authenticity assessment (e.g., the trust assessment server shown in FIG. 1) while a second system/server/server instance detects errors in the application and/or device based on context application data (as described further herein) (e.g., the application error detection server shown in FIG. 1). Using such an architecture, by applying blind signatures to certain data provided to these system/server/server instances, minimal user/device information is shared with any one server/system/instance (e.g., only information necessary to perform the operations of that system/server/server instance). This provides the advantage of preventing data required for device and application trust/authenticity assessment from being matched against context application data by external entities (outside the client device). This therefore prevents any external entity from learning information about the user as a result of the match, thereby providing improved user privacy.
アプリケーションおよび/またはクライアントデバイスにおけるエラーを検出する際の、アプリケーションエラー検出サーバ、信頼評価サーバ、およびクライアントデバイスの動作/対話が、以下で要約され、本明細書全体を通して詳しく記載される。 The operation/interaction of the application error detection server, the trust assessment server, and the client device in detecting errors in the application and/or client device is summarized below and described in detail throughout this specification.
クライアントデバイスは最初に、(1)アプリケーション内でコンテンツが提供され、対話されるコンテキストを表すコンテキストアプリケーションデータ(たとえば、ユーザのブラウズ履歴、訪問された現在のウェブページ/ウェブサイト、マウスの動き、現在のドメインとのユーザ対話、またはスクリプトがアプリケーションから収集することができる任意の信号、アプリケーション中で表示されるコンテンツとのユーザ対話、など)、(2)アプリケーションのデジタル証明書に関するデータ(たとえば、アプリケーションのアプリケーションパッケージ(APK)のデジタルダイジェストまたは暗号ハッシュ)、および(3)クライアントデバイスの信頼性を評価する際に使われ得るデータを含むデバイス信頼性データ(たとえば、使われるデバイスのタイプ、デバイスのオペレーティングシステムなど)を含むデータのセットを取得する。アプリケーション(またはオペレーティングシステム/信頼されるアプリケーション)は、コンテキストアプリケーションデータをブラインドし、このブラインドされたデータを、デバイス信頼性データおよびデジタル証明書に関するデータとともに、信頼評価サーバへ送る。 The client device first obtains a set of data including: (1) contextual application data that represents the context in which content is provided and interacted with within the application (e.g., the user's browsing history, the current web page/website visited, mouse movements, user interaction with the current domain, or any signals that the script may collect from the application, user interaction with the content displayed in the application, etc.); (2) data about the application's digital certificate (e.g., a digital digest or cryptographic hash of the application's application package (APK)); and (3) device trust data that includes data that may be used in assessing the trustworthiness of the client device (e.g., the type of device used, the device's operating system, etc.). The application (or the operating system/trusted application) blinds the contextual application data and sends this blinded data, along with the device trust data and data about the digital certificate, to the trust assessment server.
受信されたデバイス信頼性データおよびデジタル証明書に関するデータに基づいて、信頼評価サーバは、デバイスが信頼できるかどうか、およびアプリケーションが真正である(すなわち、アプリケーションが、オフィシャルビルドであり、かつ/または、たとえば、セキュリティ問題がないかスキャン済みであり、いかなるマルウェアもウィルス(もしくは別のセキュリティ問題)もないと見なされている、既知の、信頼されるアプリケーションである)かどうかを判断する。 Based on the received device trust data and data regarding the digital certificate, the trust assessment server determines whether the device is trustworthy and whether the application is authentic (i.e., the application is an official build and/or a known, trusted application that has, for example, been scanned for security issues and is deemed to be free of any malware or viruses (or other security issues)).
コンテキストアプリケーションデータはブラインドされているので、信頼評価サーバは、このデータにアクセスすることも解読することもできない(アプリケーションから受信したとしても)。信頼評価サーバは、ブラインドされたコンテキストアプリケーションデータにデジタル署名し、アプリケーション(またはオペレーティングシステム/信頼されるアプリケーション)に、このデジタル署名を、デバイスが信頼できるかどうか、およびアプリケーションが真正であるかどうかを明記する指示とともに提供する。 Because the context application data is blinded, the trust assessment server cannot access or decrypt it (even if it receives it from the application). The trust assessment server digitally signs the blinded context application data and provides this digital signature to the application (or operating system/trusted application) along with instructions stating whether the device is trusted and whether the application is authentic.
信頼評価サーバからデータを受信すると、アプリケーション(またはオペレーティングシステム/信頼されるアプリケーション)は、信頼評価サーバによって提供されたデータ(すなわち、ブラインド署名)が、修正されていない、またはそうでなければ損なわれても偽造されてもいないことを保証するために、デジタル署名を検証する。検証されると、アプリケーション(またはオペレーティングシステム/信頼されるアプリケーション)は、コンテキストアプリケーションデータをブラインド解除し、ブラインド解除されたコンテキストアプリケーションデータを、アプリケーションが以前、信頼評価サーバへ送ったコンテキストアプリケーションデータと比較する。この比較に基づいて一致が見つかった場合、アプリケーション(またはオペレーティングシステム/信頼されるアプリケーション)は、(信頼評価サーバからの)デジタル署名と、ブラインド解除されたコンテキストアプリケーションデータと、デバイスおよびアプリケーションの信頼性/真正性に関する指示とを、アプリケーションエラー検出サーバに提供する。デバイスおよびアプリケーションの信頼性/真正性に関する指示のみ(ならびにデバイス信頼性データおよびアプリケーションのデジタル証明書に関するデータではなく)がアプリケーションエラー検出サーバに提供されるので、このサーバには、デバイス信頼性データも、アプリケーションのデジタル証明書に関するデータも決して明かされない(このことが、ユーザ/デバイスのプライバシーをさらに保護する)。採用されるブラインド署名方式のおかげで、信頼評価サーバには、コンテキストアプリケーションデータも知らされず、このことが、ユーザ/デバイスのプライバシーをさらに保護する。 Upon receiving the data from the trust assessment server, the application (or operating system/trusted application) verifies the digital signature to ensure that the data provided by the trust assessment server (i.e., the blind signature) has not been modified or otherwise compromised or forged. Once verified, the application (or operating system/trusted application) unblinds the contextual application data and compares the unblinded contextual application data with the contextual application data that the application previously sent to the trust assessment server. If a match is found based on this comparison, the application (or operating system/trusted application) provides the digital signature (from the trust assessment server), the unblinded contextual application data, and an indication of the trustworthiness/authenticity of the device and application to the application error detection server. Because only an indication of the trustworthiness/authenticity of the device and application (and not device trustworthiness data and data regarding the application's digital certificate) is provided to the application error detection server, neither the device trustworthiness data nor data regarding the application's digital certificate are ever revealed to the server (which further protects the privacy of the user/device). Thanks to the blind signature scheme employed, the trust assessment server is also blinded to contextual application data, which further protects the privacy of the user/device.
アプリケーション(またはオペレーティングシステム/信頼されるアプリケーション)からデータを受信すると、アプリケーションエラー検出サーバは、受信されたデジタル署名を検証する。検証されると、アプリケーションエラー検出システムは、デバイスおよびアプリケーションの信頼性/真正性に関する指示とともにコンテキストアプリケーションデータを使って、アプリケーションおよび/またはクライアントデバイスにおけるエラーがあるかどうかを判断する。アプリケーションエラー検出システムは、エラーの存在(または不在)に関するその判断をコンテンツプラットフォームおよび/またはクライアントデバイスに提供し、コンテンツプラットフォームおよび/またはクライアントデバイスは、アプリケーションと、クライアントデバイスおよび/またはコンテンツプラットフォームとの間の継続される対話を制限し、制約し、または許可するかどうかを判断すればよい。 Upon receiving data from the application (or operating system/trusted application), the application error detection server verifies the received digital signature. Once verified, the application error detection system uses the contextual application data along with an indication of the trustworthiness/authenticity of the device and application to determine whether there is an error in the application and/or client device. The application error detection system provides its determination regarding the presence (or absence) of an error to the content platform and/or client device, which may determine whether to limit, restrict, or allow continued interaction between the application and the client device and/or content platform.
これらの特徴および追加特徴について、図1～図4を参照して以下で説明する。 These and additional features are described below with reference to Figures 1-4.
図1は、デジタルコンテンツが、クライアントデバイスへ配布され、クライアントデバイス上で提示される一例示的環境のブロック図である。例示的環境100は、ローカルエリアネットワーク(LAN)、ワイドエリアネットワーク(WAN)、インターネット、またはそれらの組合せなどのネットワーク120を含む。ネットワーク120は、クライアントデバイス102、コンテンツプラットフォーム150、アプリケーションエラー検出サーバ140、および信頼評価サーバ130を接続する。例示的環境100は、多くの異なるクライアントデバイス102、コンテンツプラットフォーム150、アプリケーションエラー検出サーバ140、および信頼評価サーバ130を含み得る。
FIG. 1 is a block diagram of an example environment in which digital content is distributed to and presented on client devices. The
コンテンツプラットフォーム150は、コンテンツの配布を可能にするコンピューティングプラットフォームである。例示的コンテンツプラットフォーム150は、検索エンジン、ソーシャルメディアプラットフォーム、新規プラットフォーム、データアグリゲータプラットフォーム、または他のコンテンツ共有プラットフォームを含む。各コンテンツプラットフォーム150は、コンテンツプラットフォームサービスプロバイダによって運営され得る。コンテンツプラットフォーム150は、それ自体のコンテンツをプラットフォーム上で公開し、利用可能にし得る。たとえば、コンテンツプラットフォーム150は、独自のニュース記事を公開するニュースプラットフォームであってよい。コンテンツプラットフォーム150はまた、1つまたは複数のコンテンツソース/プロバイダによって提供されるコンテンツを提示し得る。上記の例では、ニュースプラットフォームはまた、異なる作者によって作成されるとともに1つまたは複数のコンテンツソースによって提供されるコンテンツを提示し得る。別の例として、コンテンツプラットフォーム150は、独自のコンテンツはどれも公開しないが、異なるニュースウェブサイト(すなわち、コンテンツソース/プロバイダ)によって提供されたニュース記事を集約し、提示するデータアグリゲータプラットフォームであってよい。 The content platform 150 is a computing platform that enables the distribution of content. Exemplary content platforms 150 include search engines, social media platforms, novelty platforms, data aggregator platforms, or other content sharing platforms. Each content platform 150 may be operated by a content platform service provider. The content platform 150 may publish and make available its own content on the platform. For example, the content platform 150 may be a news platform that publishes its own news articles. The content platform 150 may also present content provided by one or more content sources/providers. In the above example, the news platform may also present content created by different authors and provided by one or more content sources. As another example, the content platform 150 may be a data aggregator platform that does not publish any of its own content but aggregates and presents news articles provided by different news websites (i.e., content sources/providers).
クライアントデバイス102は、ネットワーク120を介してコンテンツを要求し、受信することが可能な電子デバイスである。例示的クライアントデバイス102は、パーソナルコンピュータ、モバイル通信デバイス、デジタルアシスタントデバイス、装着可能デバイス、スマートホームデバイス、およびネットワーク120を介してデータを送ること、および受信することができる他のデバイスを含む。
A
クライアントデバイス102は通常、ネットワーク120を介したコンテンツの送付および受信を容易にするために、ウェブブラウザまたはネイティブアプリケーションなど、1つまたは複数のユーザアプリケーション(たとえば、アプリケーション104)を含む。クライアントデバイス102において提示されるコンテンツの例は、ウェブページ、文書処理ドキュメント、ポータブルドキュメントフォーマット(PDF)ドキュメント、画像、ビデオ、ならびに検索結果ページおよびデジタル広告を含む。
クライアントデバイス102が、アプリケーション(たとえば、ブラウザまたはネイティブアプリケーションであってよいアプリケーション104)内でコンテンツプラットフォーム150によって提供されるコンテンツページにアクセスすると、コンテンツページ上のスクリプト、またはクライアントアプリケーション104中のネイティブコードが、1つまたは複数のコンテンツソースに対してコンテンツを要求する。コンテンツについての要求に応答して、1つまたは複数のコンテンツソースが、アプリケーション104内での表示用に提供され得るコンテンツを提供し得る。
When a
以下で要約し、図2および図3を参照してより詳細に記載するように、オペレーティングシステム106、信頼されるアプリケーション108、およびデバイス信頼性クライアント110など、クライアントデバイス102の1つまたは複数の構成要素が、アプリケーション104におけるエラーを識別するために、信頼評価サーバ130およびアプリケーションエラー検出サーバ140と連携し得る。これらの構成要素の構造および動作については、以下で要約し、図2を参照してより詳細に記載する。
As summarized below and described in more detail with reference to FIG. 2 and FIG. 3, one or more components of the
クライアントデバイス102は、デバイスハードウェアおよびソフトウェアリソースの管理を主に担当するオペレーティングシステム106を含む。クライアントデバイス102は、特定の実装形態、アプリケーション、および/または使用ケースに基づいて、データを一時的または永続的に記憶するための1つまたは複数の非一時的記憶デバイスも含む。
The
クライアントデバイス102は、信頼されるアプリケーション108を含む。本明細書において使われる限り、信頼されるアプリケーション108は、クライアントデバイス102上のセキュアな環境内で動作し、いくつかのコアデバイスサービス(オペレーティングシステム内の特権的/カーネルコードによって実施されるデバイスサービスと同様)を実施するアプリケーションである。いくつかの実装形態では、信頼されるアプリケーション108は、オペレーティングシステム106の一部もしくはウェブブラウザであってよく、またはオペレーティングシステムベンダ(もしくはウェブブラウザベンダ)によって実装および/もしくは公開されてよい。いくつかの実装形態では、オペレーティングシステム106はオープンソースオペレーティングシステムであってよく、一方では、信頼されるアプリケーション108は、専用/クローズドソースオペレーティングシステムとして動作する。いくつかの実装形態では、信頼されるアプリケーション108はクライアント102から除外されてまたは取り除かれてよく、その場合、信頼されるアプリケーション108の動作は、オペレーティングシステム106によって実施され得る。
The
信頼されるアプリケーション108(またはオペレーティングシステム106)は、アプリケーション(たとえば、ウェブブラウザ)のアプリケーションパッケージ(APK)証明書を収集し、そのデジタルダイジェスト(これは証明書の1つまたは複数のフィールドにハッシュ関数を適用することによって概して生成される証明書の一意の識別子である)を算出し得る。このデジタルダイジェストは、アプリケーションが真正である/信頼できるかどうかを評価する際に使われ得る。同様に、信頼されるアプリケーション108は、アプリケーションパッケージ(APK)の暗号ハッシュを算出し得る。APK暗号ハッシュ結果は、アプリケーションが真正である/信頼できるかどうかを評価する際に使われ得る。
The trusted application 108 (or operating system 106) may collect the application's (e.g., a web browser) application package (APK) certificate and compute its digital digest (which is a unique identifier of the certificate that is generally generated by applying a hash function to one or more fields of the certificate). This digital digest may be used in assessing whether the application is authentic/trusted. Similarly, the trusted
クライアントデバイス102は、デバイス信頼性クライアント110を含む。オペレーティングシステム106および/または信頼されるアプリケーション108によって呼び出されると、デバイス信頼性クライアント110は、単独で、またはオペレーティングシステム106と協力して、クライアントデバイス102の環境から信号を収集する。デバイス信頼性クライアント110によって収集される信号の例は、デバイスのタイプ、デバイスのモデル番号、デバイスがルート化および/または脱獄されている(jailbroken)かどうかの根拠、デバイス上で稼動するオペレーティングシステム、デバイスが最後にアップデートされたとき、などを含むが、それらに限定されない。これらの信号は、まとめてデバイス信頼性データと呼ばれ、クライアントデバイス102の信頼性を判断するのに使われ得る(図2および図3を参照してさらに記載するように)。
The
環境100は信頼評価サーバ130をさらに含み、これは、クライアントデバイス102の信頼性および/またはアプリケーション104の真正性を判断する際に、クライアントデバイス102によって提供されたデータを使う(図2および図3を参照してさらに記載するように)。
The
環境100はアプリケーションエラー検出サーバ140も含み、これは、アプリケーション104におけるエラーを検出する。いくつかの実装形態では、アプリケーションエラー検出サーバ140および信頼評価サーバ130は、別個の、無関係のサーバであってよい。他の実装形態では、これらのサーバは、単一のエンティティに関連付けられた単一のサーバまたはシステム上で稼動する別個のインスタンスであってよい。図2および図3を参照して記載するように、アプリケーションエラー検出サーバ140は、クライアントデバイス102から受信されたコンテキストアプリケーションデータおよび信頼評価サーバ130によって提供された/から受信された信頼性判断/指示に基づいて、アプリケーションにおけるエラーを検出する。本明細書において使われる限り、コンテキストアプリケーションデータは、アプリケーション内でコンテンツが提供され、対話されるコンテキストを表すデータを含む。例示的コンテキストアプリケーションデータ項目は、アプリケーションにおいてアクセスされるウェブサイトの名称、ウェブサイトがアクセスされた時間、アプリケーションの実行中の、クライアントデバイスとのユーザ対話のタイプ(たとえば、デバイススクリーン上でのタッチ、マウスクリック、スワイプ、スクロール、キーボード入力など)、ブラウズ履歴、ブラウザプラグインまたはインストールされているフォント、およびアプリケーション内で提供されるコンテンツページの部分を閲覧するのに費やされる時間を含むが、それらに限定されない。そのようなコンテキストアプリケーションデータは、アプリケーション104(またはアプリケーションにおいて実行するネイティブコード)が、コンテンツプラットフォーム150にアクセスするのに使われるときにスクリプトによって収集され得る。いくつかの実装形態では、スクリプトは、このデータを、不透明バイト配列として(または、アプリケーション104による、このデータ構造の修正を防止する別のデータ構造として)アプリケーション104に提供する。
The
アプリケーション104から受信されたデータに基づいて、アプリケーションエラー検出サーバ140は、アプリケーション104および/またはクライアントデバイス102におけるエラーを検出した場合、エラーが検出されたことをコンテンツプラットフォーム150へ通信すればよく、コンテンツプラットフォーム150は、コンテンツプラットフォーム150との、アプリケーションからの対話およびいかなるさらなるアクションも制限または防止し得る。追加または代替として、アプリケーションエラー検出サーバ140は、エラーが検出されたことをオペレーティングシステム106および/または信頼されるアプリケーション108へ通信すればよく、これらは、コンテンツプラットフォーム150との、アプリケーションからの対話を制限または防止し得る。
If, based on the data received from the application 104, the application error detection server 140 detects an error in the application 104 and/or the
アプリケーション104および/またはクライアントデバイス102におけるエラーを検出する際の、上で記載した構成要素の動作について、図2を参照して以下でさらに説明する。
The operation of the above-described components in detecting errors in the application 104 and/or the
図2は、アプリケーション104および/またはクライアントデバイス102におけるエラーを検出する際の、図1において参照された様々なエンティティ/構成要素の例示的動作、およびそれらの間の対話を示すスイムレーン図である。プロセス200の動作が、以下において、例示目的のためにのみ説明される。プロセス200の動作は、どの適切なデバイスまたはシステム、たとえば、どの適切なデータ処理装置によって実施されてもよい。プロセス200の動作は、非一時的コンピュータ可読媒体/記憶デバイス上に記憶された命令として実装されてもよい。命令の実行により、1つまたは複数のデータ処理装置が、プロセス200の動作を実施する。
FIG. 2 is a swim lane diagram illustrating exemplary operations of, and interactions between, the various entities/components referenced in FIG. 1 upon detecting an error in the application 104 and/or the
アプリケーション104内で提供されるコンテンツページ上のスクリプトが、コンテキストアプリケーションデータを(202において)収集する。いくつかの実装形態では、アプリケーション104(たとえば、ウェブブラウザ)が、(クライアントデバイス102上で実行する)アプリケーション104を介してコンテンツプラットフォーム150によって提供されるコンテンツページにアクセスするのに使われるとき、コンテンツページ上のスクリプトが、(たとえば、アプリケーション104のアプリケーションプログラミングインターフェース(API)をコールすることによって)コンテキストアプリケーションデータを実行し、収集する。コンテキストアプリケーションデータは、アプリケーション内でコンテンツがその中で提示される現在のコンテキストに限定される必要はなく、アプリケーション内でコンテンツがその中で提示される先行コンテキスト(たとえば、アプリケーション使用履歴)も含み得る。スクリプトは、収集されたコンテキストアプリケーションデータを、不透明バイト配列(またはこのデータを受信するエンティティによる、配列中のデータの修正を防止する別の適切なデータ構造)の中へパッケージ化し得る。 A script on a content page provided within the application 104 collects (at 202) the contextual application data. In some implementations, when the application 104 (e.g., a web browser) is used to access a content page provided by the content platform 150 via the application 104 (running on the client device 102), the script on the content page executes and collects the contextual application data (e.g., by calling the application programming interface (API) of the application 104). The contextual application data need not be limited to the current context in which the content is presented within the application, but may also include prior contexts in which the content is presented within the application (e.g., application usage history). The script may package the collected contextual application data into an opaque byte array (or another suitable data structure that prevents modification of the data in the array by the entity receiving this data).
アプリケーション104は、コンテキストアプリケーションデータを(204において)取得する。いくつかの実装形態では、スクリプトは、(いかなるプロンプト表示もなしで、またはアプリケーション104からの、コンテキストアプリケーションデータについての要求に応答して)アプリケーション104に提供する。このように、アプリケーション104は、スクリプトから、コンテキストアプリケーションデータを取得する。 The application 104 obtains (at 204) the context application data. In some implementations, the script provides the context application data to the application 104 (either without any prompting or in response to a request from the application 104 for the context application data). In this way, the application 104 obtains the context application data from the script.
アプリケーション104は、コンテキストアプリケーションデータをブラインドして、ブラインドされたコンテキストアプリケーションデータを(206において)生成する。いくつかの実装形態では、アプリケーション104は、パッケージ化コンテキストアプリケーションデータ(たとえば、不透明バイト配列)をブラインドして、ブラインドされたコンテキストアプリケーションデータを生成するのに、IETF VOPRF規格を使えばよい。他の実装形態では、データ構造をブラインドするための、他の知られている規格/技法が、ブラインドされたコンテキストアプリケーションデータを生成するのに使われてよい。いくつかの実装形態では、アプリケーション104は、ブラインドされたコンテキストアプリケーションデータを、信頼されるアプリケーション108またはオペレーティングシステム106に(いかなるプロンプトもなしで、または信頼されるアプリケーション108もしくはオペレーティングシステム106からの、そのようなデータについての要求に応答して、のいずれかで)提供し得る。他の実装形態では、アプリケーション104は、ブラインドされたコンテキストアプリケーションデータをデバイス信頼性クライアント110に(いかなるプロンプトもなしで、またはデバイス信頼性クライアント110からの、そのようなデータについての要求に応答して、のいずれかで)提供し得る。いくつかの実装形態では、オペレーティングシステム106または信頼されるアプリケーション108は、アプリケーションからコンテキストアプリケーションデータを受信し、次いで、このデータをブラインドし得る。
The application 104 blinds the context application data to generate blinded context application data (at 206). In some implementations, the application 104 may use the IETF VOPRF standard to blind the packaged context application data (e.g., an opaque byte array) to generate the blinded context application data. In other implementations, other known standards/techniques for blinding data structures may be used to generate the blinded context application data. In some implementations, the application 104 may provide the blinded context application data to the trusted
信頼されるアプリケーション108は、アプリケーションのデジタル証明書に関するデータを(208において)取得する。いくつかの実装形態では、信頼されるアプリケーション108は、アプリケーション104のデジタル証明書(たとえば、アプリケーションパッケージ(APK)証明書)を収集し、証明書のデジタルダイジェストを計算し、またはAPK暗号ハッシュ(もしくは証明書の別の適切な一意の識別子)を生成し得る。証明書の、計算されたデジタルダイジェスト、APK暗号ハッシュ、または別の適切な一意の識別子が、アプリケーション104のデジタル証明書に関するデータを構成する。信頼されるアプリケーション108は、デジタル証明書用にインストーラパッケージの名称を取得することもでき、デジタル証明書は、アプリケーション104がデバイス上でどのようにインストールされたか(たとえば、サイドロードされたかどうか)を知らせる。いくつかの実装形態では、信頼されるアプリケーション108ではなく、オペレーティングシステム106が、アプリケーションのデジタル証明書に関するデータを取得し得る。いくつかの実装形態では、信頼されるアプリケーション108(またはオペレーティングシステム106)は、ブラインドされたコンテキストデータおよびデジタル証明書に関するデータをデバイス信頼性クライアントに(いかなるプロンプトもなしで、またはアプリケーション104からの、そのようなデータについての要求に応答して、のいずれかで)提供する。
The trusted
デバイス信頼性クライアント110は、図1を参照して記載したように、デバイス信頼性データを(210において)取得する。代替として、デバイス信頼性クライアント110ではなく、オペレーティングシステム106がデバイス信頼性データを取得し得る。いくつかの実装形態では、デバイス信頼性クライアント110は、デバイス信頼性データを、信頼されるアプリケーション108またはオペレーティングシステム106に(いかなるプロンプトもなしで、または信頼されるアプリケーション108もしくはオペレーティングシステム106からの、そのようなデータについての要求に応答して、のいずれかで)提供する。
The
動作206～210は、順番通りに実施されるものとして図2に示されている。これらの動作は、いくつかの実装形態ではそのような順で実施され得るが、他の実装形態では異なる順で実施されてもよい。代替として、これらの動作は、並行して実施されてもよい。 Operations 206-210 are illustrated in FIG. 2 as being performed in sequence. While these operations may be performed in such order in some implementations, they may be performed in a different order in other implementations. Alternatively, these operations may be performed in parallel.
いくつかの実装形態では、オペレーティングシステム106、信頼されるアプリケーション108、またはデバイス信頼性クライアント110は、ブラインドされたコンテキストアプリケーションデータ、デジタル証明書に関するデータ、およびデバイス信頼性データをパッケージ化し、このパッケージ化されたデータを信頼評価サーバ130に提供する。代替として、アプリケーション104、信頼されるアプリケーション108/オペレーティングシステム106、およびデバイス信頼性クライアント110の各々が、それぞれ、ブラインドされたコンテキストアプリケーションデータ、デジタル証明書に関するデータ、およびデバイス信頼性データを、信頼評価サーバ130に別々に提供し得る。
In some implementations, the operating system 106, the trusted
受信されたデータ(すなわち、ブラインドされたコンテキストアプリケーションデータ、デジタル証明書に関するデータ、およびデバイス信頼性データ)に基づいて、信頼評価サーバ130は、以下でさらに説明するように、動作212～218を実施する。信頼評価サーバ130は、これらの動作を連続して実施してよく(ただし、これらの動作は以下で説明する順序で実施される必要はない)、またはこれらの動作は並行して実施されてよい。特に、コンテキストアプリケーションデータはブラインドされているので、信頼評価サーバ130は、データを解読することも、アプリケーション104内のどの特定のユーザおよびその活動にもリンクし戻すこともできない。したがって、そのようなブラインド化は、信頼評価サーバ130との対話に関してユーザプライバシーを保持する。
Based on the received data (i.e., the blinded contextual application data, the data regarding the digital certificate, and the device trustworthiness data), the
信頼評価サーバ130は、アプリケーション104のデジタル証明書に関するデータ(たとえば、APKハッシュまたはデジタルダイジェスト)を(212において)検証する。信頼評価サーバ130は、真正性または正式にリリースされたアプリケーションについてのデータを記憶する、信頼される証明書データベース(または、ルックアップテーブルなど、別の適切なデータ構造)を含む。いくつかの実装形態では、信頼される証明書データベースは、アプリケーションデジタル証明書(たとえば、APK証明書)と、対応するAPKデジタルダイジェストまたはAPK暗号ハッシュ(もしくは、デジタル証明書についての適切な一意の識別子)との間のマッピングを含む。
The
信頼評価サーバ130は、アプリケーションのデジタル証明書に関するデータ(たとえば、APKハッシュまたはデジタルダイジェスト)を、記憶されている既知の、真正アプリケーションのデジタル証明書に関するデータと比較することによって、アプリケーション104が真正であるかどうかを判断する。いくつかの実装形態では、信頼評価サーバ130は、(アプリケーション104から受信した)アプリケーション104のデジタル証明書のデジタルダイジェストまたはAPK暗号ハッシュ(もしくはデジタル証明書についての別の適切な一意の識別子)を、信頼される証明書データベース中に記憶されたデジタルダイジェスト/APK暗号ハッシュ(またはデジタル証明書についての別の適切な一意の識別子)と比較/ルックアップする。この比較に基づいて一致が見つかった場合、信頼評価サーバ130は、アプリケーション104が真正である(すなわち、アプリケーションのオフィシャルビルドである、かつ/または既知の、信頼されるアプリケーションである)と判断する。ただし、比較に基づいて一致が見つからない場合、信頼評価サーバ130は、アプリケーション104が真正でない(すなわち、アプリケーションのオフィシャルビルドでない、かつ/または既知の、信頼されるアプリケーションでない)と判断する。いくつかの実装形態では、信頼評価サーバ130は、アプリケーション104が真正であるかどうかを示すのに、1ビット値を使い得る(たとえば、アプリケーション104が真正である場合は1、アプリケーション104が真正でない場合は0)。
The
信頼評価サーバ130は、デバイス信頼性データに基づいて、デバイス信頼性裁定を(214および216において)判断する。いくつかの実装形態では、信頼評価サーバ130は、クライアントデバイス102が信頼できるかどうかを判断するために規則のセットを使ってデバイス信頼性データを分析する、規則ベースのエンジンを含み得る。代替として、信頼評価サーバ130は、クライアントデバイス102についてのデバイス信頼性データを受理するとともにクライアントデバイス102の信頼性を出力する機械学習モデル(教師ありもしくは教師なし機械学習モデル、または別の適切な統計モデル)を含み得る。いくつかの実装形態では、機械学習モデルは、複数のデバイスについてのデバイス信頼性データと、複数のデバイスの各々についての既知の、対応するデバイス信頼性とを含むトレーニングデータを使ってトレーニングされる教師ありモデルであってよい。
The
いくつかの実装形態では、デバイス信頼性裁定(規則ベースのエンジン、モデル、または他の適切な装置によって出力される)は、2ビット値であってよい。2ビット値の第1のビットは、クライアントデバイスが不適切に修正または改変されているかどうかを示す(たとえば、1は、クライアントデバイスが修正/改変されていないことを意味し、一方では、0は、クライアントデバイスが修正/改変されていることを意味する)。2ビット値の第2のビットは、クライアントデバイスのプロファイルが、以前検証されたデバイスのプロファイルと一致することを示す(たとえば、1は、クライアントデバイスが既知であることを意味し、一方では、2は、クライアントデバイスが未知であることを意味する)。代替として、デバイス信頼性裁定は、単に、クライアントデバイスが信頼できるかどうかについての指示を提供する1ビット値であってよい。デバイスの判断された信頼性についての追加情報が、追加ビットを使って符号化されてよいことが、当業者には理解されよう。 In some implementations, the device trustworthiness ruling (output by the rule-based engine, model, or other suitable device) may be a two-bit value. The first bit of the two-bit value indicates whether the client device has been improperly modified or altered (e.g., 1 means the client device has not been modified/altered, while 0 means the client device has been modified/altered). The second bit of the two-bit value indicates that the profile of the client device matches the profile of a previously verified device (e.g., 1 means the client device is known, while 2 means the client device is unknown). Alternatively, the device trustworthiness ruling may simply be a one-bit value that provides an indication as to whether the client device is trustworthy. Those skilled in the art will appreciate that additional information about the determined trustworthiness of the device may be encoded using additional bits.
信頼評価サーバ130は、アプリケーション104によって提供されるコンテキストアプリケーションデータに(218において)ブラインド署名する。いくつかの実装形態では、信頼評価サーバ130は、IETF VOPRF規格(または別の適切なブラインド署名規格もしくは技法)を使って、アプリケーション104によって提供されるコンテキストアプリケーションデータにブラインド署名する。
The
いくつかの実装形態では、信頼評価サーバ130は、ブラインドされたコンテキストアプリケーションデータに署名することによって、クライアントデバイスが信頼できる、かつ/またはアプリケーションが真正であることを示すことができる。逆に、信頼評価サーバは、ブラインドされたコンテキストアプリケーションデータに単に署名しないことによって、デバイスが信頼できない、またはアプリケーションが真正でないことを示すことができる。そのような実装形態により、信頼評価サーバ130によって判断されるような、デバイスの信頼性および/またはアプリケーション104の真正性の情報を符号化する追加データビットを提供する必要がなくなる。これは、ブラインドされたコンテキストデータに対するデジタル署名の存在が単独で、デバイスの信頼性およびアプリケーション104の真正性を示すからである。代替として、追加ビットは、依然として、デバイスの信頼性およびアプリケーション104の真正性についての追加の詳細を提供するのに使われてよい。
In some implementations, the
例示目的のために、図2の以下の説明では、信頼評価サーバ130が、デバイス信頼性裁定にかかわらず、コンテキストアプリケーションデータにブラインド署名し、クライアントデバイス102の信頼性および/またはアプリケーション104の真正性を示す1つまたは複数のビットを別々に提供すると仮定する。
For illustrative purposes, the following description of FIG. 2 assumes that the
ブラインド署名されたコンテキストアプリケーションデータを、クライアントデバイスが信頼できるかどうかを明記する指示(第1の指示)、およびアプリケーションが既知の、信頼されるアプリケーションであること(または言い換えると、アプリケーションが真正であるかどうか)を明記する別の指示(第2の指示)とともに、信頼評価サーバ130はアプリケーション104に提供し、アプリケーション104は信頼評価サーバ130から受信する。いくつかの実装形態では、信頼評価サーバ130は、このデータを、配列(または別の適切なデータ構造)中で、ブラインド署名されたコンテキストアプリケーションデータを記憶する、配列の、ある位置、クライアントデバイスが信頼できるかどうかを明記する指示を記憶する、配列の別の位置、およびアプリケーションが既知の、信頼されるアプリケーションであるかどうかを明記する指示を記憶する、配列の別の位置と一緒に提供する。いくつかの実装形態では、信頼評価サーバ130は、デバイスの異なるレベルの信頼性および/またはアプリケーションの真正性に基づいて、異なる署名鍵を使って、コンテキストアプリケーションデータにブラインド署名する。そのような実装形態では、信頼評価サーバ130は、いくつかの可能な鍵のうちの1つによって署名が検証されるようにデジタル署名を作成することによって、第1および第2の指示を配る。たとえば、第1および第2の指示の両方が、各々2つの可能性を有する場合、第1および第2の指示についての4つの可能な組合せがある。そのようなケースでは、信頼評価サーバ130は、4つの可能な鍵のうちの1つを使って検証されるべき署名を生成することができる。
The
信頼評価サーバ130からデータを受信すると、アプリケーション104はブラインド署名を(220において)検証する。ブラインド署名が、信頼評価サーバ130によって署名された有効な署名ではないとアプリケーション104が判断した場合、アプリケーション104は、信頼評価サーバから受信されたデータは損なわれており、したがって信用できないと判断する。この場合、エラー検出処理は終わる。この場合、アプリケーションエラー検出サーバ140は、アプリケーション104および/またはクライアントデバイス102がエラーを有すると判断する。一方、ブラインド署名が、信頼評価サーバ130によって署名された有効な署名であるとアプリケーション104が判断した場合、アプリケーション104はデータを(222において)ブラインド解除する。
Upon receiving the data from the
ブラインド解除されたコンテキストアプリケーションデータ(これは第1のデータ項目とも呼ばれる)が、信頼評価サーバ130に以前提供されたコンテキストアプリケーションデータと一致しないとアプリケーション104が判断した場合、アプリケーション104は、信頼評価サーバ130から受信されたデータはエラーを有する、またはそうでなければ損なわれていると判断する。この場合、プロセス200のエラー検出処理は終わる。一方、ブラインド解除されたコンテキストアプリケーションデータが、信頼評価サーバ130に以前提供されたコンテキストアプリケーションデータと一致するとアプリケーション104が判断した場合、処理は動作224に進む(これについては、以下で説明する)。
If the application 104 determines that the unblinded context application data (also referred to as the first data item) does not match the context application data previously provided to the
アプリケーション104は、アプリケーションエラー検出サーバ140に、第1のデータ項目に対するデジタル署名、第1の指示、第2の指示、および動作222においてブラインド解除された第1のデータ項目を(224において)提供する。このデータを提供する際、アプリケーション104は、アプリケーションエラー検出サーバ140がアプリケーション104および/またはクライアントデバイス102内におけるエラーを検出することを要求する。特に、第1および第2の指示を提供することだけでは、アプリケーションエラー検出サーバ140は、信頼評価サーバ130に以前提供された、いかなるデバイス信頼性データも受信せず、したがって、アプリケーションエラー検出サーバ130との対話において、デバイス信頼性データに対するプライバシーを保持する。そうではなく、アプリケーションエラー検出サーバ130は、最小限のデバイスおよびアプリケーション信頼性/真正性情報を、第1および第2の指示の形で提供されるだけである。第1および第2の指示は、デバイスまたはアプリケーションにとって一意のいかなる情報も提供しないので、アプリケーションエラー検出サーバは、これらの指示を超えて、アプリケーションまたはクライアントデバイスに関する、いかなる具体的詳細も学習することができない。このことは、アプリケーションエラー検出サーバおよび信頼評価サーバが、ユーザについて情報を学習しようとして共謀したとしても、可能ではないことを意味し、というのは、サーバは、コンテキストアプリケーションデータ(エラー検出サーバに知られている)を、どの所与のユーザについても、アプリケーションのデジタル証明書に関するデータおよびデバイス信頼性データ(信頼評価サーバに知られている)と突き合わせることができないからである。
The application 104 provides (at 224) to the application error detection server 140 the digital signature for the first data item, the first instruction, the second instruction, and the first data item unblinded in
信頼されるアプリケーション108またはオペレーティングシステム106がコンテキストアプリケーションデータをブラインドする実装形態では、信頼評価サーバ130は、信頼されるアプリケーション108/オペレーティングシステム106に、ブラインド署名されたコンテキストアプリケーションデータを、クライアントデバイスが信頼できるかどうかを明記する指示(第1の指示)、およびアプリケーションが既知の、信頼されるアプリケーションであること(または言い換えると、アプリケーションが真正であるかどうか)を明記する別の指示(第2の指示)とともに提供する。そのような実装形態では、信頼されるアプリケーション108/オペレーティングシステム106は、ブラインド署名を検証し、ブラインドされたデータをブラインド解除し、ブラインド解除されたデータをコンテキストアプリケーションデータと比較する。そのような実装形態では、信頼されるアプリケーション108/オペレーティングシステム106は、アプリケーションエラー検出サーバ140に、第1のデータ項目に対するデジタル署名、第1の指示、第2の指示、およびブラインド解除された第1のデータ項目を、動作222において提供する。
In an implementation in which the trusted
アプリケーション104(または信頼されるアプリケーション108/オペレーティングシステム106)からデータを受信すると、アプリケーションエラー検出サーバ140は、ブラインド署名を(226において)検証する。IETF VOPRFブラインド署名規格が使われる実装形態では、アプリケーションエラー検出サーバ140は、署名を検証するために、信頼評価サーバ130と対話する。これは、VOPRFブラインド署名は公に検証可能でないからである。そのような実装形態では、アプリケーションエラー検出サーバ140は、ブラインド署名を検証するために、信頼評価サーバ130と通信する。信頼評価サーバ130は、署名が有効であると判断した場合、デジタル署名が有効であることを明記する指示を提供する。一方、信頼評価サーバ130は、署名が有効でないと判断した場合、デジタル署名が無効であると明記する指示を提供する。いくつかの実装形態では、VOPRF規格ではなく、公に検証可能なデジタル署名アルゴリズムが使われてよく、その場合、アプリケーションエラー検出サーバ140自体が、(信頼評価サーバ130、すなわち、デジタル署名を生成したエンティティと接触する必要なく)デジタル署名が有効であるかどうかを検証することができる。
Upon receiving data from the application 104 (or trusted
アプリケーションエラー検出サーバ140が、ブラインド署名は、信頼評価サーバ130によって署名された有効な署名でないと判断した場合、アプリケーションエラー検出サーバ140は、アプリケーション104から受信されたデータは損なわれており、したがって信用できないと判断する。この場合、アプリケーションエラー検出サーバ140は、アプリケーション104および/またはクライアントデバイス102がエラーを有すると判断する。一方、アプリケーションエラー検出サーバ140が、ブラインド署名は、信頼評価サーバ130によって署名された有効な署名であると判断した場合、処理は動作228に続く(以下で説明するように)。
If the application error detection server 140 determines that the blind signature is not a valid signature signed by the
アプリケーションエラー検出サーバ140は、第1の指示、第2の指示、およびコンテキストアプリケーションデータに基づいて、アプリケーション104が何らかのエラーを有するかどうかを(228において)判断する。いくつかの実装形態では、アプリケーションエラー検出サーバ140は、アプリケーション104に何らかのエラーが存在するかどうかを判断するために規則のセットを使って、アプリケーション104から受信されたデータを処理する、規則ベースのエンジンを含み得る。代替として、アプリケーションエラー検出サーバ140は、動作224においてアプリケーション104から受信されたデータを受理するとともに、アプリケーションが何らかのエラーを有するかどうかを明記する指示(すなわち、第3の指示)を出力する機械学習モデル(たとえば、教師ありもしくは教師なし機械学習モデル、または別の適切な統計モデル)を含み得る。いくつかの実装形態では、機械学習モデルは、第1の指示と、第2の指示と、複数のデバイスの各々、およびアプリケーションにエラーが存在するかどうかを明記する既知の、対応する指示についてのコンテキストアプリケーションデータとを含むトレーニングデータを使ってトレーニングされる教師ありモデルであってよい。
The application error detection server 140 determines (at 228) whether the application 104 has any errors based on the first instruction, the second instruction, and the contextual application data. In some implementations, the application error detection server 140 may include a rule-based engine that processes the data received from the application 104 using a set of rules to determine whether any errors exist in the application 104. Alternatively, the application error detection server 140 may include a machine learning model (e.g., a supervised or unsupervised machine learning model, or another suitable statistical model) that accepts the data received from the application 104 in
先行する段落において記載した実装形態のうちのいずれかにおいて、クライアントデバイス102の信頼性およびアプリケーション104の真正性に関するデータは、アプリケーション104および/またはクライアントデバイス102におけるエラーの存在の最終判断の考慮に入れられ得る。たとえば、第1および第2の指示が、それぞれ、クライアントデバイス102が信頼でき、アプリケーション104が真正であると明記する場合、アプリケーションエラー検出サーバ140は、アプリケーション104にエラーが存在する見込みを低減してよい。別の例として、第1および第2の指示が、それぞれ、クライアントデバイス102が信頼できず、アプリケーション104が真正でないと明記する場合、アプリケーションエラー検出サーバ140は、アプリケーション104にエラーが存在する見込みを増大してよい。その結果、アプリケーションエラー検出サーバ140のエラー検出は、アプリケーションエラー判断においてデバイス信頼性およびアプリケーション真正性を考慮に入れない従来技術よりも堅牢である。
In any of the implementations described in the preceding paragraphs, data regarding the reliability of the
要するに、従来のシステムと比較して、図1の様々な構成要素の上述した動作およびそれらの間の対話は、アプリケーションにおけるエラーの存在の、より堅牢な指示を提供するとともに、ユーザのプライバシーを(アプリケーションエラー検出サーバ140および信頼評価サーバ130に最小限の情報を露出し、したがって、いかなるユーザフィンガープリンティングも最小限にし、または可能性としてはさらになくすことによって)保持する。
In summary, compared to conventional systems, the above-described operation of and interactions between the various components of FIG. 1 provide a more robust indication of the presence of an error in an application while preserving user privacy (by exposing minimal information to the application error detection server 140 and the
図3は、クライアントデバイス102上で実行するアプリケーション104中のエラーを検出するための一例示的プロセス300の流れ図である。プロセス300の動作は、図1において記載し、示したシステムの構成要素によって実施されるものとして、以下で説明される。プロセス300の動作が、以下において、例示目的のためにのみ説明される。プロセス300の動作は、どの適切なデバイスまたはシステム、たとえば、どの適切なデータ処理装置によって実施されてもよい。プロセス300の動作は、非一時的コンピュータ可読媒体上に記憶された命令として実装されてもよい。命令の実行により、1つまたは複数のデータ処理装置が、プロセス300の動作を実施する。
FIG. 3 is a flow diagram of an
アプリケーション104(クライアントデバイス102上で実行する)は、コンテキストアプリケーションデータを(302において)取得する。図1および図2を参照して記載したように、アプリケーション104が、コンテンツプラットフォーム150によって提供されるコンテンツページにアクセスするのに使われるとき、スクリプトがコンテキストアプリケーションデータを実行および収集し、このデータは、アプリケーション内でコンテンツが提供され、対話されるコンテキストを表す。 The application 104 (executing on the client device 102) obtains (at 302) contextual application data. As described with reference to Figures 1 and 2, when the application 104 is used to access content pages provided by the content platform 150, scripts execute and collect contextual application data, which represents the context in which content is provided and interacted with within the application.
アプリケーション104は、コンテキストアプリケーションデータをブラインドして、ブラインドされたコンテキストアプリケーションデータを(304において)生成する。図1および図2を参照して記載したように、アプリケーション104は、ブラインドされたコンテキストアプリケーションデータを生成するために、IETF VOPRF規格(または別の適切な規格もしくはブラインド署名技法)に従って、コンテキストアプリケーションデータ(これは不透明バイト配列としてパッケージ化されてよい)をブラインドする。 The application 104 blinds the context application data to generate (at 304) blinded context application data. As described with reference to Figures 1 and 2, the application 104 blinds the context application data (which may be packaged as an opaque byte array) in accordance with the IETF VOPRF standard (or another suitable standard or blind signature technique) to generate the blinded context application data.
クライアントデバイス102上のオペレーティングシステム106または信頼されるアプリケーション108は、アプリケーションのデジタル証明書に関するデータおよびデバイス信頼性データを(306において)取得する。図1および図2を参照して記載したように、クライアントデバイス102の信頼されるアプリケーション108(またはオペレーティングシステム106)は、アプリケーション104のデジタル証明書に関するデータを取得し、データは、アプリケーションのAPK証明書、デジタルダイジェスト、APK証明書またはAPKバイナリ自体に対応するAPK暗号ハッシュ(または別の適切な一意の識別子)、および証明書のインストーラパッケージ名を含み得る。やはり図1および図2を参照して記載したように、クライアントデバイス102のデバイス信頼性クライアント110(またはオペレーティングシステム106)は、デバイス信頼性データを取得し、このデータは、クライアントデバイスの信頼性を評価する際に使われ得るデータ(たとえば、デバイスのタイプ、デバイス上にインストールされているオペレーティングシステムなど)を含む。
The operating system 106 or trusted
信頼評価サーバ130は、ブラインドされたコンテキストアプリケーションデータ、デジタル証明書に関するデータ(たとえば、APKハッシュ)、およびデバイス信頼性データを(308において)提供される。図1および図2を参照して記載したように、信頼されるアプリケーション108、デバイス信頼性クライアント110、またはオペレーティングシステム106は、デジタル証明書に関するデータ(またはAPKハッシュ)を、デバイス信頼性データおよびブラインドされたコンテキストアプリケーションデータ(それは動作304において生成される)とともにパッケージ化し、このデータを信頼評価サーバ130に提供する。
The
アプリケーション104は、信頼評価サーバ130から、データのセットを(310において)受信する。図1および図2を参照して記載したように、信頼評価サーバ130は、デジタル証明書に関するデータ(たとえば、APKダイジェストまたはAPKハッシュ)、およびデバイス信頼性データ(これを動作308において受信した)を、クライアントデバイス102が信頼できるかどうか、およびアプリケーションが既知の、信頼されるアプリケーションであるかどうかを判断するのに使う。さらに、信頼評価サーバ130はまた、第1のデータ項目にデジタル署名し、この項目は、ブラインドされたコンテキストアプリケーションデータであってよい(やはり図1および図2を参照して記載したように)。(1)クライアントデバイスが信頼できることを明記する第1の指示、(2)アプリケーションが既知の、信頼されるアプリケーションであることを明記する第2の指示、および(3)第1のデータ項目に対する、信頼評価サーバのデジタル署名を含むデータのセットを、信頼評価サーバ130はアプリケーション104に提供し、アプリケーション104は信頼評価サーバ130から受信する(図1および図2を参照してさらに記載したように)。
The application 104 receives (at 310) a set of data from the
アプリケーション104は、データのセット中の第1のデータ項目に対するデジタル署名を(312において)検証する。図1および図2を参照して記載したように、アプリケーション104は、第1のデータ項目に対するデジタル署名が信頼評価サーバ130の有効な署名であることを検証する。
The application 104 verifies (at 312) the digital signature for the first data item in the set of data. As described with reference to Figures 1 and 2, the application 104 verifies that the digital signature for the first data item is a valid signature of the
第1のデータ項目に対するデジタル署名を検証したことに応答して、アプリケーションは、第1のデータ項目をブラインド解除して、ブラインド解除された第1のデータ項目を(314において)取得する。いくつかの実装形態では、アプリケーション104は、(動作310において信頼評価サーバ130から受信された)データのセットに含まれる第1のデータ項目をブラインド解除する。
In response to verifying the digital signature for the first data item, the application unblinds the first data item to obtain (at 314) an unblinded first data item. In some implementations, the application 104 unblinds the first data item included in the set of data (received from the
アプリケーション104は、ブラインド解除された第1のデータ項目が、動作302においてアプリケーションによって取得されたコンテキストアプリケーションデータと一致することを(316において)確認する。図2を参照して上述したように、アプリケーション104は、ブラインド解除された第1のデータ項目を、動作302において取得されたコンテキストアプリケーションデータと比較する。一致を見つけると、アプリケーション104は、ブラインド解除された第1のデータ項目が、実際には、信頼評価サーバ130へ以前送ったコンテキストアプリケーションデータであることを確認する。
The application 104 verifies (at 316) that the unblinded first data item matches the context application data obtained by the application in
ブラインド解除された第1のデータ項目がコンテキストアプリケーションデータと一致することを確認したことに応答して、アプリケーションは、アプリケーションエラー検出サーバ140に、第1のデータ項目に対するデジタル署名、第1の指示、第2の指示、およびブラインド解除された第1のデータ項目を(318において)提供する。 In response to verifying that the unblinded first data item matches the context application data, the application provides (at 318) to the application error detection server 140 the digital signature for the first data item, the first instructions, the second instructions, and the unblinded first data item.
アプリケーション104は、アプリケーションエラー検出サーバ140から、アプリケーションがいかなるエラーも持たないことを明記する第3の指示を(320において)受信する。図1および図2を参照して記載したように、アプリケーションエラー検出サーバ140は、動作318においてアプリケーション104から受信したデータを、アプリケーション104および/またはクライアントデバイス102が何らかのエラーを有するかどうかを判断するのに使う。アプリケーションエラー検出サーバ140は、アプリケーション104および/またはクライアントデバイス102がエラーを有すると判断した場合、アプリケーション(および/またはクライアントデバイス)がエラーを有することを明記する指示を、アプリケーション104に提供する(ならびにアプリケーション104は受信する)。一方、アプリケーションエラー検出サーバ140は、アプリケーションがエラーを持たないと判断した場合、アプリケーション(および/またはクライアントデバイス102)がエラーを持たないことを明記する指示をアプリケーション104に提供する(ならびにアプリケーション104は受信する)。
The application 104 receives (at 320) a third indication from the application error detection server 140 specifying that the application does not have any errors. As described with reference to Figures 1 and 2, the application error detection server 140 uses the data received from the application 104 in
いくつかの代替実装形態では、図3の動作は、ブラインドされたコンテキストアプリケーションデータを信頼評価サーバへ送らないことによって、ある程度の起こり得る待ち時間を削減するように修正されてよい。そのような実装形態は、以下で説明する、いくつかの動作上の違いは例外として、図3を参照して記載したのと同じ動作を有する。簡潔のために、動作上の違いのみを、これらの代替実装形態の記述において以下で説明するが、図3の残りの動作およびそれらのそれぞれの記述が、これらの実装形態において使われることに留意されたい(また、いかなる疑義の回避のためにも、それらの動作は、参照によって本明細書に組み込まれている)。 In some alternative implementations, the operations of FIG. 3 may be modified to reduce some potential latency by not sending blinded context application data to the trust assessment server. Such implementations have the same operations as described with reference to FIG. 3, with the exception of some operational differences, which are described below. For brevity, only the operational differences are described below in the description of these alternative implementations, but it should be noted that the remaining operations of FIG. 3 and their respective descriptions are used in these implementations (and for the avoidance of any doubt, those operations are incorporated herein by reference).
そのような代替実装形態では、アプリケーション104は依然として、コンテキストアプリケーションデータを取得するが、このデータをブラインドしない。そうではなく、アプリケーション104は、データのランダムセット(たとえば、ノンス)を生成し、データのこのランダムセットをブラインドして、データのブラインドされたランダムセットを生成する(これは上の図3の記述における動作304と置き換わる)。データのこのブラインドされたランダムセットは、(動作306において記載したように、ブラインドされたコンテキストアプリケーションデータを提供するのではなく)信頼評価サーバ130に提供される。その上、信頼評価サーバ130は、(上の図3の記述における動作310を参照して記載したように、ブラインドされたコンテキストアプリケーションデータに対するデジタル署名を生成するのではなく)データのブラインドされたランダムセットに対するデジタル署名を生成する。アプリケーション104は、このブラインドされたデータをブラインド解除して、以前生成したデータのランダムセットと同じであることを確認する。このことを確認すると、アプリケーションは、(図3の動作318でのように)コンテキストアプリケーションデータを、デジタル署名、第1の指示、および第2の指示とともに提供し、これらはすべて、(図3の動作320でのように)アプリケーションエラー検出サーバ140によって、アプリケーション104(および/またはクライアントデバイス102)が何らかのエラーを有するかどうかを判断するのに使われる。
In such an alternative implementation, application 104 still obtains the context application data, but does not blind this data. Instead, application 104 generates a random set of data (e.g., a nonce) and blinds this random set of data to generate a blinded random set of data (this replaces
図4は、上述した動作を実施するのに使われ得る一例示的コンピュータシステム400のブロック図である。システム400は、プロセッサ410、メモリ420、記憶デバイス430、および入力/出力デバイス440を含む。構成要素410、420、430、および440の各々は、たとえば、システムバス450を使って相互接続され得る。プロセッサ410は、システム400内での実行のための命令を処理することが可能である。いくつかの実装形態では、プロセッサ410は、シングルスレッドのプロセッサである。別の実装形態では、プロセッサ410は、マルチスレッドのプロセッサである。プロセッサ410は、メモリ420中または記憶デバイス430上に記憶された命令を処理することが可能である。
4 is a block diagram of an
メモリ420は、システム400内に情報を記憶する。一実装形態では、メモリ420は、コンピュータ可読媒体である。いくつかの実装形態では、メモリ420は、揮発性メモリユニットである。別の実装形態では、メモリ420は、不揮発性メモリユニットである。
The
記憶デバイス430は、システム400に大容量記憶を提供することが可能である。いくつかの実装形態では、記憶デバイス430は、コンピュータ可読媒体である。異なる様々な実装形態では、記憶デバイス430は、たとえば、ハードディスクデバイス、光ディスクデバイス、ネットワークを介して複数のコンピューティングデバイスによって共有される記憶デバイス(たとえば、クラウド記憶デバイス)、または何らかの他の大容量記憶デバイスを含み得る。
The
入力/出力デバイス440は、システム400のための入力/出力動作を提供する。いくつかの実装形態では、入力/出力デバイス440は、ネットワークインターフェースデバイス、たとえば、イーサネットカード、シリアル通信デバイス、たとえば、RS-232ポート、および/またはワイヤレスインターフェースデバイス、たとえば、802.11カードのうちの1つまたは複数を含み得る。別の実装形態では、入力/出力デバイス440は、入力データを受信し、周辺デバイス460へ出力データを送るように構成されたドライバデバイス、たとえば、キーボード、プリンタ、およびディスプレイデバイスを含み得る。ただし、モバイルコンピューティングデバイス、モバイル通信デバイス、セットトップボックステレビジョンクライアントデバイスなどのような、他の実装形態が使われてもよい。
The input/
図4では、一例示的処理システムが記述されているが、本明細書に記載する本主題および機能的動作の実装形態は、他のタイプのデジタル電子回路構成で、またはコンピュータソフトウェア、ファームウェア、もしくは本明細書において開示した構造およびそれらの構造的等価物を含むハードウェアで、またはそれらのうちの1つもしくは複数からなる組合せで実装することができる。 Although FIG. 4 illustrates an example processing system, implementations of the subject matter and functional operations described herein can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware including the structures disclosed herein and their structural equivalents, or in a combination of one or more of these.
本明細書に記載する本主題および動作の実施形態は、デジタル電子回路構成で、またはコンピュータソフトウェア、ファームウェア、もしくは本明細書において開示した構造およびそれらの構造的等価物を含むハードウェアで、またはそれらのうちの1つもしくは複数からなる組合せで実装することができる。本明細書において説明される本主題の実施形態は、1つまたは複数のコンピュータプログラムとして、すなわち、データ処理装置によって実行する、またはデータ処理装置の動作を制御するための、複数のコンピュータ記憶媒体(もしくは1つのコンピュータ記憶媒体)上に符号化されたコンピュータプログラム命令の1つまたは複数のモジュールとして、実装することができる。代替または追加として、プログラム命令は、データ処理装置による実行のために、適切な受信機装置への送信用の情報を符号化するように生成される、人工的に生成された伝搬信号、たとえば、機械生成された電気、光学、または電磁信号上で符号化されてよい。コンピュータ記憶媒体は、コンピュータ可読記憶デバイス、コンピュータ可読記憶基板、ランダムもしくはシリアルアクセスメモリアレイもしくはデバイス、またはそれらのうちの1つもしくは複数からなる組合せであってよい、またはそこに含まれてよい。その上、コンピュータ記憶媒体は伝搬信号ではないが、コンピュータ記憶媒体は、人為的に生成された伝搬信号中で符号化されたコンピュータプログラム命令のソースまたは宛先であってよい。コンピュータ記憶媒体はまた、1つもしくは複数の別個の物理構成要素または媒体(たとえば、複数のCD、ディスク、または他の記憶デバイス)であってよい、またはそれらに含まれてよい。 Embodiments of the subject matter and operations described herein may be implemented in digital electronic circuitry, or in computer software, firmware, or hardware including the structures disclosed herein and their structural equivalents, or in a combination of one or more of them. Embodiments of the subject matter described herein may be implemented as one or more computer programs, i.e., as one or more modules of computer program instructions encoded on a number of computer storage media (or a computer storage medium) for execution by or for controlling the operation of a data processing device. Alternatively or additionally, the program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to an appropriate receiver device for execution by the data processing device. The computer storage medium may be or may be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Moreover, although a computer storage medium is not a propagating signal, a computer storage medium may be a source or destination of computer program instructions encoded in an artificially generated propagating signal. A computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
本明細書に記載した動作は、1つもしくは複数のコンピュータ可読記憶デバイス上に記憶された、または他のソースから受信されたデータに対して、データ処理装置によって実施される動作として実装されてよい。 The operations described herein may be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
「データ処理装置」という用語は、例として、プログラム可能プロセッサ、コンピュータ、システムオンチップ、または上記の複数のもの、もしくは組合せを含む、データを処理するための、あらゆる種類の装置、デバイス、および機械を包含する。装置は、特殊目的論理回路機構、たとえば、FPGA(フィールドプログラム可能ゲートアレイ)またはASIC(特定用途向け集積回路)を含み得る。装置はまた、ハードウェアに加え、当該のコンピュータプログラムのための実行環境を作成するコード、たとえば、プロセッサファームウェア、プロトコルスタック、データベース管理システム、オペレーティングシステム、クロスプラットフォームランタイム環境、仮想マシン、またはそれらのうちの1つもしくは複数からなる組合せを構成するコードを含むことができる。装置および実行環境は、ウェブサービス、分散型コンピューティングおよびグリッドコンピューティングインフラストラクチャなど、異なる様々なコンピューティングモデルインフラストラクチャを実現することができる。 The term "data processing apparatus" encompasses any type of apparatus, device, and machine for processing data, including, by way of example, a programmable processor, a computer, a system on a chip, or a combination or plurality of the above. An apparatus may include special purpose logic circuitry, such as a field programmable gate array (FPGA) or an application specific integrated circuit (ASIC). In addition to hardware, an apparatus may also include code that creates an execution environment for the computer program in question, such as code constituting a processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of these. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures.
コンピュータプログラム(プログラム、ソフトウェア、ソフトウェアアプリケーション、スクリプト、またはコードとしても知られている)は、コンパイル型またはインタープリタ型言語、宣言型または手続き型言語を含む、どの形のプログラミング言語でも書かれてよく、スタンドアロンプログラムとして、またはモジュール、構成要素、サブルーチン、オブジェクト、もしくはコンピューティング環境における使用に適した他のユニットとして、を含む、どの形でも展開することができる。コンピュータプログラムが、ファイルシステム内のファイルに対応してよいが、そうである必要はない。プログラムは、他のプログラムもしくはデータ(たとえば、マークアップ言語ドキュメントに記憶された1つもしくは複数のスクリプト)を保持するファイル部分に、問題になっているプログラムに専用の単一のファイルに、または複数の協調ファイル(たとえば、1つもしくは複数のモジュール、サブプログラム、もしくはコードの部分を記憶するファイル)に記憶することができる。コンピュータプログラムは、1つの場所に位置する1つのコンピュータ上もしくは複数のコンピュータ上で実行されるように展開されても、複数の場所に分散され、通信ネットワークによって相互接続されてもよい。 A computer program (also known as a program, software, software application, script, or code) may be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and may be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program may be stored in file portions that hold other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple cooperating files (e.g., files that store one or more modules, subprograms, or portions of code). A computer program may be deployed to run on one computer or on multiple computers located at one location, or distributed across multiple locations and interconnected by a communications network.
本明細書に記載したプロセスおよび論理フローは、入力データに対して動作し、出力を生成することによってアクションを実施するための1つまたは複数のコンピュータプログラムを実行する1つまたは複数のプログラム可能プロセッサによって実施され得る。プロセスおよび論理フローは、特殊目的論理回路構成、たとえば、FPGA(フィールドプログラム可能ゲートアレイ)やASIC(特定用途向け集積回路)によって実施することもでき、装置が、そのような回路構成として実装されてもよい。 The processes and logic flows described herein may be implemented by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows may also be implemented by, and devices may be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
コンピュータプログラムの実行に適したプロセッサは、例として、汎用および特殊目的マイクロプロセッサの両方を含む。概して、プロセッサは、命令およびデータを、読取り専用メモリもしくはランダムアクセスメモリまたは両方から受信する。コンピュータの本質的要素は、命令に従ってアクションを実施するためのプロセッサ、ならびに命令およびデータを記憶するための1つまたは複数のメモリデバイスである。概して、コンピュータは、データを記憶するための1つまたは複数の大容量記憶デバイス、たとえば、磁気、光磁気ディスク、または光ディスクも含み、あるいは大容量記憶デバイスからデータを受信し、もしくは大容量記憶デバイスにデータを転送し、または両方を行うように動作可能に結合される。ただし、コンピュータは、そのようなデバイスを有する必要はない。その上、コンピュータは、別のデバイス、たとえば、ほんのいくつかの例を挙げれば、モバイル電話、携帯情報端末(PDA)、モバイルオーディオもしくはビデオプレーヤ、ゲームコンソール、全地球測位システム(GPS)受信機、またはポータブル記憶デバイス(たとえば、ユニバーサルシリアルバス(USB)フラッシュドライブ)に組み込むことができる。コンピュータプログラム命令およびデータを記憶するのに適したデバイスは、例として、半導体メモリデバイス、たとえば、EPROM、EEPROM、およびフラッシュメモリデバイスと、磁気ディスク、たとえば、内部ハードディスクまたは取外し可能ディスクと、光磁気ディスクと、CD-ROMおよびDVD-ROMディスクとを含む、あらゆる形の不揮発性メモリ、媒体、およびメモリデバイスを含む。プロセッサおよびメモリは、特殊目的論理回路構成によって補完されても、特殊目的論理回路構成に組み込まれてもよい。 Processors suitable for executing computer programs include, by way of example, both general-purpose and special-purpose microprocessors. In general, a processor receives instructions and data from a read-only memory or a random access memory, or both. The essential elements of a computer are a processor for performing actions according to instructions, and one or more memory devices for storing instructions and data. In general, a computer also includes one or more mass storage devices, e.g., magnetic, magneto-optical, or optical disks, for storing data, or is operatively coupled to receive data from or transfer data to a mass storage device, or both. However, a computer need not have such devices. Moreover, a computer can be incorporated in another device, e.g., a mobile phone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a global positioning system (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few examples. Suitable devices for storing computer program instructions and data include all forms of non-volatile memory, media, and memory devices, including, by way of example, semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices, magnetic disks, e.g., internal hard disks or removable disks, magneto-optical disks, and CD-ROM and DVD-ROM disks. The processor and memory may be supplemented by, or incorporated in, special purpose logic circuitry.
ユーザとの対話を可能にするために、本明細書に記載する本主題の実施形態は、ユーザに情報を表示するための表示デバイス、たとえば、CRT(陰極線管)やLCD(液晶ディスプレイ)モニタと、ユーザがコンピュータに入力を与え得るためのキーボードおよびポインティングデバイス、たとえば、マウスやトラックボールとを有するコンピュータ上で実装することができる。他の種類のデバイスも、ユーザとの対話を可能にするのに使われることが可能であり、たとえば、ユーザに与えられるフィードバックは、どの形の感覚フィードバックでも、たとえば、視覚フィードバック、聴覚フィードバック、または触覚フィードバックであることができ、ユーザからの入力は、音響、発話、または触覚入力を含む、どの形でも受信されることが可能である。さらに、コンピュータは、ユーザによって使われるデバイスへドキュメントを送り、デバイスからドキュメントを受信することによって、たとえば、ウェブブラウザから受信された要求に応答して、ユーザのクライアントデバイス上のウェブブラウザへウェブページを送ることによってユーザと対話することができる。 To enable interaction with a user, embodiments of the subject matter described herein can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user, and a keyboard and pointing device, e.g., a mouse or trackball, for allowing the user to provide input to the computer. Other types of devices can also be used to enable interaction with the user, e.g., feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback, and input from the user can be received in any form, including acoustic, speech, or tactile input. Additionally, the computer can interact with the user by sending documents to and receiving documents from devices used by the user, e.g., by sending web pages to a web browser on the user's client device in response to a request received from the web browser.
本明細書に記載する本主題の実施形態は、バックエンド構成要素を、たとえば、データサーバとして含む、もしくはミドルウェア構成要素、たとえば、アプリケーションサーバを含む、もしくはフロントエンド構成要素、たとえば、本明細書に記載する本主題の実装形態とユーザが対話し得るためのグラフィカルユーザインターフェースもしくはウェブブラウザを有するクライアントコンピュータ、または1つもしくは複数のそのようなバックエンド、ミドルウェア、もしくはフロントエンド構成要素のどの組合せも含むコンピューティングシステムで実装することができる。システムの構成要素は、どの形または媒体のデジタルデータ通信(たとえば、通信ネットワーク)によっても相互接続されることが可能である。通信ネットワークの例は、ローカルエリアネットワーク(「LAN」)およびワイドエリアネットワーク(「WAN」)、インターネットワーク(たとえば、インターネット)、ならびにピアツーピアネットワーク(たとえば、アドホックピアツーピアネットワーク)を含む。 Embodiments of the subject matter described herein can be implemented in a computing system that includes back-end components, e.g., as data servers, or includes middleware components, e.g., application servers, or includes front-end components, e.g., a client computer having a graphical user interface or web browser through which a user may interact with an implementation of the subject matter described herein, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communications network). Examples of communications networks include local area networks ("LANs") and wide area networks ("WANs"), internetworks (e.g., the Internet), and peer-to-peer networks (e.g., ad-hoc peer-to-peer networks).
コンピューティングシステムは、クライアントおよびサーバを含み得る。クライアントとサーバは概して、互いから離れており、通常、通信ネットワークを通して対話する。クライアントとサーバの関係は、それぞれのコンピュータ上で稼動するとともに互いとのクライアント-サーバ関係を有するコンピュータプログラムにより発生する。いくつかの実施形態では、サーバが、データ(たとえば、HTMLページ)を、クライアントデバイスへ(たとえば、クライアントデバイスと対話するユーザにデータを表示し、ユーザからユーザ入力を受信する目的のために)送信する。クライアントデバイスにおいて生成されたデータ(たとえば、ユーザ対話の結果)が、クライアントデバイスからサーバにおいて受信され得る。 A computing system may include clients and servers. Clients and servers are generally remote from each other and typically interact through a communications network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, a server sends data (e.g., HTML pages) to a client device (e.g., for purposes of displaying the data to a user interacting with the client device and receiving user input from the user). Data generated at the client device (e.g., results of user interaction) may be received at the server from the client device.
本明細書は、多くの具体的な実装形態詳細を含むが、これらは、任意の発明の、または特許請求され得るものの範囲において、限定と解釈されるべきではなく、むしろ特定の発明の特定の実施形態に特有な特徴の記述として解釈されるべきである。また、別個の実施形態の文脈において本明細書で説明したいくつかの特徴は、単一の実施形態において組み合わせて実装することができる。逆に、単一の実施形態の文脈において記載される様々な特徴はまた、複数の実施形態において別々に、またはどの適切な部分組合せでも実装することができる。さらに、特徴は、いくつかの組合せで働くものとして上で説明され、初めにそのように請求される場合さえあり得るが、請求される組合せからの1つまたは複数の特徴は、場合によってはその組合せから削除することができ、請求される組合せは、部分組合せ、または部分組合せの変形形態を対象とすることができる。 Although the specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or what may be claimed, but rather as descriptions of features specific to certain embodiments of a particular invention. Also, some features described in the context of separate embodiments can be implemented in combination in a single embodiment. Conversely, various features described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as working in some combinations and may even be initially claimed as such, one or more features from a claimed combination may in some cases be deleted from the combination, and the claimed combination may be directed to a subcombination, or a variation of a subcombination.
同様に、動作は、特定の順序において図面に示されているが、これは、そのような動作が図示された特定の順序において、もしくは順次に実施されることを必要とする、または、所望の結果を達成するためにすべての示された動作が実施されることを必要とするものと理解されるべきではない。いくつかの状況では、マルチタスキングおよび並列処理が有利であり得る。その上、上述した実施形態における様々なシステム構成要素の分離は、すべての実施形態においてそのような分離を必要とするものとして理解されるべきではなく、記載したプログラム構成要素およびシステムは概して、単一のソフトウェア製品に一緒に統合される、または複数のソフトウェア製品にパッケージ化されることが可能であることを理解されたい。 Similarly, although operations are shown in the figures in a particular order, this should not be understood as requiring such operations to be performed in the particular order or sequence shown, or that all of the illustrated operations be performed to achieve a desired result. In some situations, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the above-described embodiments should not be understood as requiring such separation in all embodiments, and it should be understood that the program components and systems described may generally be integrated together in a single software product or packaged in multiple software products.
このように、本主題の特定の実施形態について記載した。他の実施形態は、以下の特許請求の範囲内である。いくつかのケースでは、請求項において具陳されるアクションは、異なる順序で実施され、望ましい結果を依然として達成することができる。さらに、添付の図面に示されるプロセスは、望ましい結果を達成するのに、図示される特定の順序、または順番を必ずしも要求しない。いくつかの実装形態では、マルチタスキングおよび並列処理が有利であり得る。 Thus, specific embodiments of the present subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Additionally, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequence, to achieve desirable results. In some implementations, multitasking and parallel processing may be advantageous.
102 クライアントデバイス
104 アプリケーション
106 オペレーティングシステム
108 信頼されるアプリケーション
110 デバイス信頼性クライアント
120 ネットワーク
130 信頼評価サーバ
140 アプリケーションエラー検出サーバ
150 コンテンツプラットフォーム
400 コンピュータシステム、システム
410 プロセッサ、構成要素
420 メモリ、構成要素
430 記憶デバイス、構成要素
440 入力/出力デバイス、構成要素
450 システムバス
460 周辺デバイス
102 client devices
104 Applications
106 Operating Systems
108 Trusted Applications
110 Device Trust Client
120 Network
130 Trust rating server
140 Application Error Detection Server
150 Content Platform
400 Computer system, system
410 Processor, component
420 Memory, components
430 Storage devices, components
440 Input/Output Devices, Components
450 System Bus
460 Peripheral Devices
Claims (7)
クライアントデバイス(102)上で実行するアプリケーション(104)によって、前記アプリケーション内でコンテンツが提供され、対話されるコンテキストを表すコンテキストアプリケーションデータを取得するステップ(302)と、
前記アプリケーションによって、データのランダムセットを生成し、前記データのランダムセットをブラインドして、ブラインドされたデータのランダムセットを生成するステップと、
信頼評価サーバに、前記ブラインドされたデータのランダムセットを提供するステップと、
前記信頼評価サーバによって、前記ブラインドされたデータのランダムセットに対するデジタル署名を生成するステップと、
前記アプリケーションによって、前記ブラインドされたデータのランダムセットをブラインド解除して、前記ブラインド解除されたデータのランダムセットが前記データのランダムセットと同じであることを確認するステップと、
前記信頼評価サーバに、前記クライアントデバイス上で実行する前記アプリケーションのデジタル証明書に関するデータ、前記コンテキストアプリケーションデータ、および前記クライアントデバイスの信頼性を評価するためのデータを表すデバイス信頼性データを提供するステップ(308)と、
前記信頼評価サーバから、(1)前記クライアントデバイスが信頼できることを明記する第1の指示と、(2)前記アプリケーションが真正であることを明記する第2の指示と、(3)第1のデータ項目に対する前記デジタル署名とを含むデータのセットを受信するステップ(310)と、
前記第1のデータ項目に対する前記デジタル署名を検証するステップ(312)と、
前記第1のデータ項目に対する前記デジタル署名を検証したことに応答して、前記第1のデータ項目が前記コンテキストアプリケーションデータと一致することを確認するステップ(316)と、
アプリケーションエラー検出サーバに、前記第1のデータ項目に対する前記デジタル署名、前記第1の指示、前記第2の指示、および前記第1のデータ項目を提供するステップ(318)と、
前記アプリケーションエラー検出サーバから、前記アプリケーションがいかなるエラーも持たないことを明記する第3の指示を受信するステップ(320)と
を含む、方法。 A method performed by one or more data processing apparatus , comprising:
obtaining (302) context application data representing a context in which content is provided and interacted with within an application by an application (104) executing on a client device (102);
generating, by the application, a random set of data and blinding the random set of data to generate a blinded random set of data;
providing a random set of the blinded data to a trust rating server;
generating, by the trust assessment server, a digital signature over the random set of blinded data;
unblinding, by the application, the blinded random set of data to verify that the unblinded random set of data is the same as the random set of data;
providing (308) to the trust assessment server data relating to digital certificates of the applications executing on the client device, the context application data, and device trust data representing data for assessing the trustworthiness of the client device;
receiving (310) a set of data from the trust assessment server, the set including: (1) a first indication that the client device is trustworthy; (2) a second indication that the application is authentic; and (3) the digital signature for a first data item;
verifying (312) the digital signature for the first data item;
in response to verifying the digital signature on the first data item, verifying (316) that the first data item matches the context application data;
providing (318) the digital signature for the first data item, the first instructions, the second instructions, and the first data item to an application error detection server;
and receiving (320) a third indication from the application error detection server specifying that the application does not have any errors.
前記信頼評価サーバによって、および前記クライアントデバイスに、前記クライアントデバイスが信頼できることを明記する前記第1の指示、および前記アプリケーションが既知のアプリケーションであることを明記する前記第2の指示を提供するステップと
をさらに含む、請求項1に記載の方法。 determining, by the trust assessment server, (1) that the client device is trustworthy based on the device trust data, and (2) that the application is authentic by comparing the data relating to the digital certificate of the application with data relating to digital certificates of known authentic applications;
2. The method of claim 1, further comprising: providing, by the trust assessment server and to the client device, the first indication specifying that the client device is trusted and the second indication specifying that the application is a known application.
前記アプリケーションのアプリケーションパッケージ(APK)のデジタルダイジェスト、または
前記アプリケーションの前記APKの暗号ハッシュ
を含む、請求項1または2に記載の方法。 The data relating to a digital certificate of the application,
The method of claim 1 or 2 , comprising: a digital digest of an application package (APK) of the application; or a cryptographic hash of the APK of the application.
前記2ビット値の第1のビットは、前記クライアントデバイスが修正も改変もされていないことを示し、
前記2ビット値の第2のビットは、前記クライアントデバイスのプロファイルが、以前検証されたデバイスのプロファイルと一致することを示す、請求項1から3のいずれか1項に記載の方法。 the first indication specifying that the client device (102) is trustworthy is a two-bit value;
a first bit of the two-bit value indicating that the client device has not been modified or tampered with;
The method of claim 1 , wherein a second bit of the two-bit value indicates that the profile of the client device matches a profile of a previously verified device.
前記アプリケーションエラー検出サーバによって、および前記信頼評価サーバから、前記デジタル署名が有効であることを明記する第4の指示を受信するステップと
をさらに含む、請求項1から4のいずれか1項に記載の方法。 in response to providing the application error detection server with the digital signature for the first data item, the first instruction, the second instruction, and the context application data, communicating with the trust assessment server to verify the digital signature, the digital signature being an IETF VOPRF digital signature and verifiable by the trust assessment server that originally generated the digital signature;
The method of claim 1 , further comprising: receiving a fourth indication by the application error detection server and from the trust assessment server, the fourth indication specifying that the digital signature is valid.
前記1つまたは複数のメモリデバイスと対話し、前記命令が実行されると、請求項1から5のいずれか1項に記載の方法を実施するように構成されている前記1つまたは複数のデータ処理装置と
を備えるシステム。 one or more memory devices storing instructions;
6. A system comprising: one or more data processing devices interacting with the one or more memory devices and configured, when the instructions are executed, to perform the method of any one of claims 1 to 5 .
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
IL274165A IL274165B2 (en) | 2020-04-23 | 2020-04-23 | Privacy preserving application and device error detection |
IL274165 | 2020-04-23 | ||
JP2021521052A JP7135210B2 (en) | 2020-04-23 | 2020-05-12 | Privacy preserving applications and device error detection |
PCT/US2020/032502 WO2021216098A1 (en) | 2020-04-23 | 2020-05-12 | Privacy preserving application and device error detection |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2021521052A Division JP7135210B2 (en) | 2020-04-23 | 2020-05-12 | Privacy preserving applications and device error detection |
Publications (2)
Publication Number | Publication Date |
---|---|
JP2022172237A JP2022172237A (en) | 2022-11-15 |
JP7464663B2 true JP7464663B2 (en) | 2024-04-09 |
Family
ID=78269877
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2021521052A Active JP7135210B2 (en) | 2020-04-23 | 2020-05-12 | Privacy preserving applications and device error detection |
JP2022136800A Active JP7464663B2 (en) | 2020-04-23 | 2022-08-30 | Privacy-preserving application and device error detection |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2021521052A Active JP7135210B2 (en) | 2020-04-23 | 2020-05-12 | Privacy preserving applications and device error detection |
Country Status (7)
Country | Link |
---|---|
US (1) | US11928237B2 (en) |
EP (2) | EP4109317B1 (en) |
JP (2) | JP7135210B2 (en) |
KR (2) | KR102498265B1 (en) |
CN (1) | CN113853603A (en) |
IL (1) | IL274165B2 (en) |
WO (1) | WO2021216098A1 (en) |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2015519652A (en) | 2012-05-01 | 2015-07-09 | ターセーラ， インコーポレイテッド | System and method for providing mobile security based on dynamic proof |
JP2016129037A (en) | 2011-02-17 | 2016-07-14 | ターセーラ， インコーポレイテッド | System and method for application attestation |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP1205889A1 (en) * | 2000-11-10 | 2002-05-15 | TELEFONAKTIEBOLAGET LM ERICSSON (publ) | Returning of change in an electronic payment system |
JP4550865B2 (en) * | 2007-06-18 | 2010-09-22 | 株式会社東芝 | Information processing system, information processing apparatus, and program |
WO2011160683A1 (en) * | 2010-06-22 | 2011-12-29 | Telefonaktiebolaget Lm Ericsson (Publ) | Privacy preserving authorisation in pervasive environments |
JP5458309B2 (en) * | 2010-08-04 | 2014-04-02 | 株式会社日立製作所 | User terminal management system, user terminal management method, and program |
EP2609538B1 (en) * | 2010-08-25 | 2016-10-19 | Lookout Inc. | System and method for server-coupled malware prevention |
WO2014036021A1 (en) * | 2012-08-28 | 2014-03-06 | Visa International Service Association | Secure device service enrollment |
GB2524578A (en) * | 2014-03-28 | 2015-09-30 | Ibm | Production of cryptographic signatures |
KR20160017551A (en) * | 2014-08-06 | 2016-02-16 | 주식회사 안랩 | An interworking apparatus between applications and method thereon |
EP3026557A1 (en) * | 2014-11-28 | 2016-06-01 | Thomson Licensing | Method and device for providing verifying application integrity |
WO2019111056A1 (en) * | 2017-12-06 | 2019-06-13 | Vchain Technology Limited | Method and system for data security, validation, verification and provenance within independent computer systems and digital networks |
US11025429B2 (en) * | 2018-05-14 | 2021-06-01 | Skydio, Inc. | Trusted contextual content |
US11368445B2 (en) * | 2018-05-21 | 2022-06-21 | Amazon Technologies, Inc. | Local encryption for single sign-on |
CN108768664B (en) * | 2018-06-06 | 2020-11-03 | 腾讯科技（深圳）有限公司 | Key management method, device, system, storage medium and computer equipment |
-
2020
- 2020-04-23 IL IL274165A patent/IL274165B2/en unknown
- 2020-05-12 EP EP22183531.7A patent/EP4109317B1/en active Active
- 2020-05-12 US US17/285,547 patent/US11928237B2/en active Active
- 2020-05-12 WO PCT/US2020/032502 patent/WO2021216098A1/en unknown
- 2020-05-12 KR KR1020217008982A patent/KR102498265B1/en active IP Right Grant
- 2020-05-12 EP EP20728874.7A patent/EP3924856B1/en active Active
- 2020-05-12 KR KR1020237004161A patent/KR20230023826A/en active IP Right Grant
- 2020-05-12 CN CN202080005624.6A patent/CN113853603A/en active Pending
- 2020-05-12 JP JP2021521052A patent/JP7135210B2/en active Active
-
2022
- 2022-08-30 JP JP2022136800A patent/JP7464663B2/en active Active
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2016129037A (en) | 2011-02-17 | 2016-07-14 | ターセーラ， インコーポレイテッド | System and method for application attestation |
JP2015519652A (en) | 2012-05-01 | 2015-07-09 | ターセーラ， インコーポレイテッド | System and method for providing mobile security based on dynamic proof |
Also Published As
Publication number | Publication date |
---|---|
EP3924856A1 (en) | 2021-12-22 |
KR20210131989A (en) | 2021-11-03 |
KR102498265B1 (en) | 2023-02-09 |
US11928237B2 (en) | 2024-03-12 |
JP2022533871A (en) | 2022-07-27 |
US20210334404A1 (en) | 2021-10-28 |
IL274165B2 (en) | 2023-08-01 |
EP4109317B1 (en) | 2023-09-27 |
KR20230023826A (en) | 2023-02-17 |
IL274165B1 (en) | 2023-04-01 |
WO2021216098A1 (en) | 2021-10-28 |
EP3924856B1 (en) | 2022-08-10 |
IL274165A (en) | 2021-10-31 |
CN113853603A (en) | 2021-12-28 |
JP2022172237A (en) | 2022-11-15 |
EP4109317A1 (en) | 2022-12-28 |
JP7135210B2 (en) | 2022-09-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20200074087A1 (en) | Detection of second order vulnerabilities in web services | |
KR102429406B1 (en) | Check user interactions on the content platform | |
US11288376B2 (en) | Identifying hard-coded secret vulnerability inside application source code | |
US11882327B2 (en) | Verifying display of third party content at a client device | |
US20170147387A1 (en) | Identifying kernel data structures | |
Continella et al. | Prometheus: Analyzing WebInject-based information stealers | |
KR20220090537A (en) | Validate Virtual Environment Type for Policy Enforcement | |
JP7189372B2 (en) | Device and application integrity verification | |
EP3631669A1 (en) | Expression evaluation of database statements for restricted data | |
JP2022544461A (en) | Protecting the integrity of communications from client devices | |
JP7464663B2 (en) | Privacy-preserving application and device error detection | |
US20240160779A1 (en) | Privacy preserving application and device error detection | |
CN114127715A (en) | Verifying content and interactions within a web page view |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20220913 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20220913 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20231127 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20240215 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20240304 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20240328 |
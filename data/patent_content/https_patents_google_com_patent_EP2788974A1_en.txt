EP2788974A1 - Texture fading for smooth level of detail transitions in a graphics application - Google Patents
Texture fading for smooth level of detail transitions in a graphics applicationInfo
- Publication number
- EP2788974A1 EP2788974A1 EP13740559.3A EP13740559A EP2788974A1 EP 2788974 A1 EP2788974 A1 EP 2788974A1 EP 13740559 A EP13740559 A EP 13740559A EP 2788974 A1 EP2788974 A1 EP 2788974A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- detail
- level
- texture
- lod
- fade
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 230000007704 transition Effects 0.000 title claims abstract description 40
- 238000005562 fading Methods 0.000 title description 5
- 238000000034 method Methods 0.000 claims abstract description 62
- 239000000203 mixture Substances 0.000 claims abstract description 29
- 238000009877 rendering Methods 0.000 claims description 18
- 230000002123 temporal effect Effects 0.000 claims description 14
- 230000000977 initiatory effect Effects 0.000 claims description 8
- 238000012545 processing Methods 0.000 claims description 8
- 239000003086 colorant Substances 0.000 claims description 2
- 238000013507 mapping Methods 0.000 description 12
- 230000000007 visual effect Effects 0.000 description 8
- 238000003384 imaging method Methods 0.000 description 5
- 230000002452 interceptive effect Effects 0.000 description 5
- 238000004891 communication Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 230000006870 function Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 238000011161 development Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 241000168096 Glareolidae Species 0.000 description 1
- 230000004913 activation Effects 0.000 description 1
- 238000007792 addition Methods 0.000 description 1
- 230000004075 alteration Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000007654 immersion Methods 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 238000002156 mixing Methods 0.000 description 1
- 230000008569 process Effects 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/14—Digital output to display device ; Cooperation and interconnection of the display device with other functional units
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
- G06T11/001—Texturing; Colouring; Generation of texture or colour
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T15/00—3D [Three Dimensional] image rendering
- G06T15/04—Texture mapping
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20016—Hierarchical, coarse-to-fine, multiscale or multiresolution image processing; Pyramid transform
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2210/00—Indexing scheme for image generation or computer graphics
- G06T2210/36—Level of detail
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G2340/00—Aspects of display data processing
- G09G2340/04—Changes in size, position or resolution of an image
- G09G2340/0407—Resolution change, inclusive of the use of different resolutions for different screen areas
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G2340/00—Aspects of display data processing
- G09G2340/10—Mixing of images, i.e. displayed pixel being the result of an operation, e.g. adding, on the corresponding input pixels
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G2340/00—Aspects of display data processing
- G09G2340/14—Solving problems related to the presentation of information to be displayed
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09G—ARRANGEMENTS OR CIRCUITS FOR CONTROL OF INDICATING DEVICES USING STATIC MEANS TO PRESENT VARIABLE INFORMATION
- G09G2350/00—Solving problems of bandwidth in display systems
Definitions
- the present disclosure relates generally to computer graphics and more particularly to rendering textures in imaging systems, such as geographic imaging systems.
- Some interactive map navigation systems provide a user interface with navigation controls for navigating cities, neighborhoods, and other terrain in two or three dimensions.
- the navigation controls enable users to tilt, pan, rotate, zoom, and activate terrain and buildings for different perspectives at an area of interest.
- Exemplary map imaging systems include the Google Earth and Google Maps systems by Google Inc.
- the imagery used by these interactive systems can be derived by rending geometric objects and texture objects to generate a two-dimensional or three-dimensional graphical representation of an area of interest.
- the geometric objects can define three- dimensional surfaces of objects and terrain depicted in the imagery.
- the texture objects can be mapped to the three-dimensional surfaces to add detail, surface texture, color and other features to the depicted objects and terrain.
- Interactive systems for displaying imagery such as geographic imagery, often render geometric and texture objects with low level of detail ("LOD") (e.g. low resolution) at camera views far from an area of interest to improve performance.
- LOD level of detail
- Switching between two levels of detail can cause a distracting pop if the levels of detail are sufficiently different and/or the transition happens too close to the camera view.
- the pop can be a visual anomaly which disrupts the user's sense of immersion in the imagery.
- the latency between the request for higher resolution objects and the receipt of the data by the client can be long.
- a user can zoom in past the natural resolution of a rendered scene, resulting in a blurry image.
- the higher resolution imagery will "pop" into view because its resolution is markedly different from the imagery in the previously displayed blurry image.
- One exemplary aspect of the present disclosure is directed to a computer- implemented method for rendering texture in a graphics application.
- the method includes displaying, in a user interface of a display device, a representation of a geographic area having texture rendered at a first level of detail.
- the texture can be based at least in part on map, satellite, or geographic imagery.
- the method further includes transitioning to a display of a representation of at least a portion of the geographic area having texture rendered at a second level of detail using a level of detail fade for the texture.
- Another exemplary aspect of the present disclosure is directed a computer- implemented method for rendering texture in a graphics application.
- the method includes identifying a first level of detail for texture rendered in a first frame of a graphics application; identifying a second level of detail for texture in a second frame of the graphics application; and initiating a level of detail fade for portions of the frame where the second level of detail exceeds the first level of detail.
- the level of detail fade can include generating a blended texture from the texture at the first level of detail and the texture the second level of detail; and adjusting the blended texture over time pursuant to a fade rate to provide the transition between the first level of detail and the second level of detail.
- FIG. 1 depicts a computer-based system according to an exemplary embodiment of the present disclosure
- FIG. 2 depicts a graphical user interface for an interactive imaging system according to an exemplary embodiment of the present disclosure
- FIG. 3 depicts a conceptual diagram of the use of level of detail in various regions.
- region 10 has a higher LOD than region 20.
- Region 20 has a higher LOD than region 30.
- FIG. 4 depicts a hierarchy of object tiles of increasingly finer resolution according to an exemplary embodiment of the present disclosure.
- FIGS. 5A and 5B depict a flow diagram of an exemplary method according to an exemplary embodiment of the present disclosure.
- the present disclosure is directed to providing a transition from texture rendered at a first LOD to texture rendered at a second LOD.
- the first LOD can be the LOD of the texture rendered in a previous frame of imagery.
- the second or new LOD can be the available LOD for rendering in a current frame of imagery.
- the available LOD refers to the LOD that is available to be rendered in a current frame.
- the available LOD is the target LOD for a particular frame of imagery.
- the target LOD refers to the target or desired LOD for a current frame. In some cases, however, the available LOD and the target LOD may differ, for instance, if the target LOD has not yet been downloaded, received, or otherwise become available for rendering in the current frame.
- the texture LOD rendered in a previous frame of imagery can be compared to the texture LOD which is available or desired to be rendered in a current frame.
- a temporal fade from the previous LOD to the new LOD can be performed to provide a smooth LOD transition to reduce the distracting visual "popping" of the higher resolution imagery into view.
- the LOD fade can be performed for textures rendered in the imagery independent of the LOD rendered for geometric objects in the imagery.
- the LOD fade can be implemented by generating a blend of the previous LOD with the available LOD.
- blend and "blended texture” can be used interchangeably and will refer to a texture with attributes of the texture at the previous LOD and attributes of the texture at the available LOD.
- the blend can primarily include attributes of textures at the previous LOD.
- the texture can be rendered such that a given region is rendered with 95% percent of the texture at the previous LOD and 5% of the texture at the available LOD.
- the color at each pixel can be a blend of 95% at the previous LOD and 5% of the available LOD.
- the blend can be adjusted to advance the transition between the previous LOD and the new LOD.
- the blended texture can be adjusted such that a greater percentage of the texture at the available LOD forms a part of the blend until the entire blend is rendered at the available LOD.
- This adjusting of the blend provides the temporal level of detail fade from the previous LOD to the available LOD.
- Using a blend between textures at the previous LOD and the second LOD allows for implementing the temporal fade without having to fetch textures at intermediate levels of detail, leading to faster processing times and reduced network traffic.
- the blend is generated based on an interpolant value.
- the interpolant value can be calculated based on the difference between the previous LOD and the available LOD.
- the interpolant value can have a value between 0 and 1 and can specify the percentage of the blended texture attributable to the available LOD relative to the previous LOD. For instance, an interpolant value of .5 can be indicative of a 50% - 50% blend of the available LOD versus the previous LOD.
- An interpolant value of 0.9 can be indicative of a 90% - 10% blend of the available LOD versus the previous LOD.
- the interpolant value can be adjusted over time to achieve a desired fade rate for the transition.
- the fade rate specifies the rate of transition between the first LOD and the second LOD across rendering frames of the graphical application.
- the fade rate is dependent on the difference between the first LOD and the second LOD, such that the transition time (i.e. time it takes for the transition between the first LOD and the second LOD) remains constant, regardless of the difference or number of levels between the first LOD and the second LOD.
- the scene resolution time i.e. time it takes to fully resolve a scene
- FIG. 1 illustrates an exemplary computer-based system configured in accordance with an embodiment of the present invention.
- the system combines satellite imagery, photographs, maps and other geographic data, and Internet search capability so as to enable a user to view imagery of the planet (e.g. as a portion of a globe) and related geographic information (e.g., locales such as islands and cities; and points of interest such as local restaurants, hospitals, parks, hotels, and schools).
- the system further allows the user to conduct local searches, get travel directions to a location or between two locations.
- the user can virtually fly from space (e.g., some vantage point above the Earth) to and around an entered target address or location, such as his neighborhood or other area of interest. Results are displayed in a 3D view.
- the user can tilt and rotate the view to see 3D terrain and buildings.
- the user can also annotate maps, and/or enable data layers to show, for example, parks, schools, hospitals, airports, shopping, and other points of interest or locales.
- the user can also layer multiple searches, save results to folders, and share search results and maps with others.
- KML Keyhole Markup Language
- KML Keyhole Markup Language
- An exemplary graphical user interface allowing the user to interact with the system will be discussed with reference to FIG. 2.
- the system includes a client-server architecture, where the server-side communicates with one or more clients 125 via a network 120.
- the server-side includes a server system 105, an image database 1 10, and a map information provider 1 15.
- each client 125 includes a mapping module 130 that operates as a geospatial browser 130a (or other suitable viewer), so as to provide the user with an interface to the system.
- the mapping modules 130 of the clients 125 further include development modules that end-users can use to generate data files describing particular presentations of data.
- the system may further include one or more third-party content servers.
- the server system 105 can be any computing device and can include a processor and a memory.
- the memory can store instructions which cause the processer to perform operations, such as the operations for providing smooth LOD transitions discussed herein.
- the server system 105 is in communication with the image database 1 10, which includes image data (e.g., digital maps, satellite images, aerial photographs, street-level photographs).
- image data e.g., digital maps, satellite images, aerial photographs, street-level photographs.
- Non-image data such as tabular data (e.g., digital yellow and white pages), and map layer data (e.g., database of diners, restaurants, museums, and/or schools;
- databases of seismic activity; database of national monuments; etc. can also be stored in database 1 10 or in some other storage facility accessible to server system 105.
- the database 1 10 (and others, if applicable) is populated (e.g., offline or in real-time) by the server system 105.
- the map information provider 115 provides server system 105 with map information (e.g., satellite data, street-level photographs, aerial photographs, digital maps, elevation data, longitude/latitude data, GPS coordinates).
- map information e.g., satellite data, street-level photographs, aerial photographs, digital maps, elevation data, longitude/latitude data, GPS coordinates.
- the provided map information can be collected, for example, as a function of the server system 105 (e.g., map information provider 1 15 is a database of map information collected by the server system 105).
- map information provider 1 maps map information to server system 105.
- map information provider 1 maps map information to server system 105. All such map internal/external information sources. All such map internal/external information sources are generally represented by map information provider 1 15.
- the server system 105 receives requests for map information, and responds to those requests, via the network 120.
- the map information provider 1 15 can also be further configured to respond directly to user requests for geographic data.
- the server system 105 encodes the map information in one or more data files and provides the files to the requestor.
- modules may be included in the system, and that illustrated modules may be rearranged.
- the database 1 10 can be integrated into the server system 105.
- the map information provider 1 15 can be integrated into the server system 105.
- Other configurations will be apparent in light of this disclosure, and the present invention is not intended to be limited to any particular one. Any number of modules can be programmed or otherwise configured to carry out the server-side functionality described herein.
- a client 125 on which the mapping module 130 runs can be, for example, a computing device having a processor and a memory, such as a desktop or laptop computer.
- a client 125 can be a wireless device, such as a personal digital assistant (PDA), smart phone, tablet, a navigation system located in a vehicle, a handheld GPS system, or other such devices/systems.
- PDA personal digital assistant
- the client 125 can be any computer, device, or system that can execute the mapping module 130, and allows the user to interact with the server system 105 (e.g., requesting maps, driving directions, and/or data searches, and then receiving data files in response).
- the mapping module 130 executes or otherwise runs as geospatial browser 130a.
- the server system 105 can be implemented with conventional or custom technology. Numerous known server architectures and functionalities can be used to implement a GIS server. Further note that the server system 105 may include one or more servers operating under a load balancing scheme, with each server (or a combination of servers) configured to respond to and interact with clients via the network 120. [0034] In general, when the user enters a search query (e.g., via the geospatial browser 130a presented by the client-side mapping module 130), it is put into a request and sent to the server system 105 via the network 120.
- a search query e.g., via the geospatial browser 130a presented by the client-side mapping module 130
- the server system 105 determines what the search query is for, and responds with the appropriate data from various sub-systems, such as geo-coders, routing engines, and local search indexes, in a format that the requesting client 125 can use to present the data to the user (e.g., via the geospatial browser 130a).
- various sub-systems such as geo-coders, routing engines, and local search indexes
- the server system 105 is further configured to interact with the mapping module 130, as will be apparent in light of this disclosure.
- the server system 105 responds to the requesting client 125 by encoding data responsive to the request into one or more data files and providing the files to the client.
- the network 120 may be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof.
- the network 120 may be a direct connection between a client 125 and the server system 105.
- communication between the server system 105 and a client 125 can be carried via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- the geospatial browser 130a interface provided by the mapping module 130 provides a mapping system that serves maps and data over the network 120.
- the system allows users to visualize, select, annotate, and explore geographic information all over the world or in a particular region, city, town, or other locale.
- FIG. 2 illustrates one particular embodiment of a graphical user interface ("GUI") 200, which operates as a geospatial browser 130a for mapping module 130.
- GUI graphical user interface
- the GUI includes a display window 321 for displaying 3D imagery, such as a portion of a globe, and a text input field 303 for entering location information such as latitude and longitude, an address and/or zip code, or the name of a well-known site (e.g., "Lincoln Memorial" or "Area 51").
- the GUI 200 has a number of modes in which it can operate, including Fly To mode, Local Search mode, and Directions mode, as shown by mode select buttons 301.
- the GUI 200 also includes navigation controls 321 for adjusting the viewing altitude, adjusting the viewing angle, adjusting the view left and right, and adjusting the view to areas of the 3D imagery to the left, right, top or bottom of the display window.
- the GUI 200 also includes places control 305, which allows the user to organize saved data in a Places panel in a way similar to how a user would organize files and folders on a computer's hard drive.
- the GUI 200 also includes layer control 307, which provides a variety of data points of geographic interest (e.g., points of interest, as well as map, road, terrain, and building data) that a user can select to display over the viewing area. In the embodiment shown in FIG. 2, example commonly used layers are available on the Layers panel.
- the GUI 200 of this example embodiment also displays image data 323 in the lower portion of the display window 321.
- the displayed 3D maps can be manipulated using the GUI 201a.
- the GUI 200 can be used to reposition the current map view, for example, by clicking and dragging in the display window 321. A user may also select a geographical location by double-clicking on it within the display window 321.
- the mapping module 130 associated the client device can include software that operates (in conjunction with server-side software) to provide geographic/geospatial images to a user's computer (or generally, client device) so they can be seen by the user or otherwise processed.
- the mapping module 130 includes a user interface module, in which a motion model in the user's client is used to adjust the client's virtual viewing position and orientation relative to the visual environment of the system.
- the motion model also determines a view specification which defines the client's viewable volume within a three- dimensional space (this viewable volume is known as a frustum and herein referred to as the user's visual environment), and the position and orientation of the frustum, herein referred to as the virtual camera viewpoint, with respect to a three-dimensional map.
- a view specification which defines the client's viewable volume within a three- dimensional space (this viewable volume is known as a frustum and herein referred to as the user's visual environment), and the position and orientation of the frustum, herein referred to as the virtual camera viewpoint, with respect to a three-dimensional map.
- the view specification is read from the memory by a renderer, which is a software tool that draws or "renders" drawable data.
- the renderer can be configured to repeat a processing cycle, which includes: (1) reading the view specification in memory, (2) traversing a data structure in memory, (e.g. a quad node tree data structure, in which each quad node of the tree contains drawable data), and (3) drawing the drawable data contained in the data structure.
- a data structure includes a quad node tree data structure in which each quad node has a payload of data and references to other files (e.g. four), each of which may be other quad nodes.
- the renderer When the renderer traverses the quad node tree, it first reads the payload of data in a parent quad node. If the payload is drawable data, the renderer will compare a bounding box (a volume that contains the data) of the payload, if present, to the view specification. If the bounding box is completely disjoint from the view specification, the data will not be drawn, despite the fact that the quad node has already been downloaded from a remote server.
- a bounding box a volume that contains the data
- the renderer will attempt to access each of the references of the quad node. If the reference contains an address to a file in local memory, the renderer will go to that child quad node and read the payload, repeating the process for each subsequent child quad node until it encounters a quad node with a payload that has a bounding box completely disjoint from the view specification. If the reference does not contain an address in the local memory (i.e., the referenced file does not exist in the local memory), the renderer cannot access the file, and will continue to move down the quad node tree without trying to obtain the file. In this embodiment, the renderer only reads from the quad node tree, and does not provide coordinate and resolution information to any other object.
- the quad node itself can have a built-in accessor function.
- the renderer attempts to access a reference that has a filename, but no corresponding local address, this triggers the accessor function of the quad node to independently place its own address and the child reference number onto a cache node retrieval list, which comprises a list of information identifying files to be downloaded from remotes servers.
- a network loader in an independent network loader thread reviews the cache node retrieval list and requests only the files referenced on the list.
- the data structure can specify imagery data to be rendered in the form of both geometric objects and texture objects.
- Geometric objects can include information used to render three-dimensional objects and terrain in the geospatial view provided at the client device.
- Texture data can be used to render details, colors, textures, labels, and other features on the surfaces of the three-dimensional objects.
- the texture objects can be based on digital maps, satellite images, aerial photographs, street-level photographs and other imagery stored at the server. For instance, the geographic terrain of an area of interest can provide the basis for geometric objects for the area of interest while satellite imagery can be used to render texture objects on the surface of the geographic terrain.
- the geometric objects and the texture objects can have varying levels of detail (LOD) based on the user's viewpoint relative to the area of interest.
- FIG. 3 provides a conceptual illustration of the use of (LOD) in differing regions.
- the LOD can be associated with the geometric objects and texture objects to control the activation of the objects based on LOD of the visual environment.
- the regions 10, 20, and 30 in FIG. 3 can be used to specify LOD specifications associated with data objects, such as texture objects, of increasingly finer levels of detail.
- the regions can have similar amounts of geometry and texture, but higher LOD regions can cover a smaller area.
- Each region 10, 20, and 30 corresponds to a range of LOD values that specifying increasingly smaller projected pixel sizes for the drawn objects.
- the higher LOD regions are smaller and consequently project to smaller pixel areas on the display for the given viewpoint.
- the pixel size of the projected LOD increases, causing regions with large LOD values denoting higher resolution objects to become active because the data objects take up more screen space.
- the regions with finer LOD replace the previously loaded regions with courser resolution and are rendered in the visual environment relative to the virtual camera viewpoint. Accordingly, the geometric objects and the texture objects can be separated into distinct LOD levels so that different objects are displayed as the user explores a given area from different virtual camera viewpoints.
- the LOD level associated with the geometric objects and texture objects for a rendered scene can be specified as an LOD value, for instance, in the range of 1-20.
- the higher the LOD value the higher the LOD associated with the object. For instance, an object with an LOD value of 15 has greater LOD than an object with an LOD of 10. While LOD values in the range between 1-20 are used for discussion purposes, those of ordinary skill in the art, using the disclosures provided herein, should understand that any metric or range of for comparing LOD between objects can be used without deviating from the scope of the present disclosure.
- geometric objects and texture objects can be provided as object tiles to provide a hierarchy of image data with increasing levels of detail.
- FIG. 4 illustrates a use of regions to create a three-level hierarchy of data object tiles for faster loading of data.
- images of different levels of resolution are subdivided into a series of sub-images or "tile" data objects.
- three different copies of an image with a high level of detail (1024 pixels) are divided into a different number of tiles (1, 4 and 16) representing different levels of detail.
- the resolution of each set of tiles is re-sampled such that each tile has the same number of pixels, in this example 256 x 256 pixels.
- the sets of tiles derived from the three different images are used to define regions at different levels of detail.
- each level of imagery is 2x the resolution of the previous level.
- Each set of images can contain a set of links to child data objects of finer resolution.
- the single thumbnail image can contain links to each of the four mid-range images prompting the files for the mid-range images to be retrieved when the thumbnail becomes active.
- the mid-range images can then be evaluated and activated based on their LOD specifications.
- each mid-range image can contain links to four files of the full-resolution images.
- FIGS. 5A and 5B depict an exemplary method 400 for managing the LOD transition for texture objects according to an exemplary aspect of the present disclosure.
- the method can be executed on a suitable computing device having a processor and a memory, such as any of the computing devices depicted in FIG. 1.
- FIGS. 5 A and 5B depict steps performed in a particular order for purposes of illustration and discussion, the methods discussed herein are not limited to any particular order or arrangement.
- One skilled in the art, using the disclosures provided herein, will appreciate that various steps of the methods can be omitted, rearranged, combined and/or adapted in various ways.
- the method begins texture rendering for a frame.
- a frame refers to an individual rendered output image displayed in the graphics application.
- the output images can be rendered at a specified frame rate (e.g. output images per second) to attain a desired processing rate as is useful in a computer graphics applications.
- the steps of the method can be performed during the rendering of each new frame to ensure a smooth LOD transition between frames.
- the method determines whether a texture LOD fade for portions of the imagery depicted in the frame has already been initiated. If so, the method proceeds to (422) of FIG. 5B to continue the texture LOD fade across frames as will be discussed in detail below. Otherwise, the method continues to (406) where the method determines the level of detail for textures in a previous frame.
- the LOD information for the previous frame can be retrieved from a memory and can include an LOD value, such as an LOD value in the range of 1-20. For instance, the method can determine, based on historical data stored in memory associated with the graphics application, that the previous frame included textures having an LOD value of 10.
- the method determines the available LOD for textures in the current frame.
- the available LOD refers to the LOD that is available to be rendered in a current frame.
- the available LOD is the target LOD for a particular frame of imagery.
- the available LOD and the target LOD may differ, for instance, if the target LOD has not yet been downloaded, received, or otherwise become available. In these cases, the available LOD may change during the LOD fade as new textures become available.
- the available LOD information can be determined from a data structure associated with the memory for a particular desired view of the imagery in the graphics application. For instance, the method can determine that at the particular camera view for the current frame, texture objects having an LOD value of 15 are available.
- the method determines the difference between the available LOD in the current frame and the LOD in the previous frame.
- the difference in texture LOD level of 10 for the previous frame and the available texture LOD of 15 for the current frame is 5.
- the method can determine whether this difference exceeds a predefined threshold.
- the threshold can be set such that a texture LOD fade will be initiated only if a noticeable jump in LOD is required between frames. For instance, the threshold can be set such that an LOD fade will be initiated if the difference in the available texture LOD for the current frame and the LOD for the previous frame is two or more.
- the method can continue texture rendering for the current frame without initiating an LOD fade (420). The method then begins rendering texture in subsequent frames (402) where the method 400 is repeated to ensure smooth LOD transitions between frames.
- LOD fade can be initiated for identified areas in the imagery where the available LOD exceeds the previous LOD by the threshold (414).
- the texture LOD fade provides for a smooth transition between the frames to prevent the "popping" of higher resolution imagery into view.
- the texture LOD fade can be performed independent of the LOD for geometric objects rendered in the scene.
- the LOD fade provides for the gradual blending between textures at the previous LOD and at the available LOD across subsequent frames pursuant to an LOD fade rate to achieve a desired transition effect for the fade.
- the LOD fade rate is variable based on the difference between the previous LOD and the second LOD such that the transition time between for a complete LOD fade from the previous LOD to the second LOD is constant.
- processing time for the fade is improved relative to certain known LOD fade techniques because the LOD fade does not require the fetching of texture objects at LOD levels intermediate the previous LOD and the available LOD.
- the LOD fade can include determining an interpolant value for the LOD fade.
- the interpolant value for the LOD will control the ratio of the blend of textures between the previous LOD and the available LOD.
- the interpolant value can have a value between 0 and 1.
- the interpolant value can be calculated for the frame based on the difference between the available LOD when the LOD fade was initiated and the previous LOD.
- the interpolant value t can be calculated pursuant to the following:
- StartLOD is representative of the texture LOD of the frame prior to the initiation of the LOD fade
- AvailLOD is representative of the available texture LOD for the frame in which the LOD fade was initiated
- TextureFadeLOD is calculated based on the following:
- TextureFadeLOD Previous TextureFadeLOD + fade rate*(AvailLOD-StartLOD) where Previous TextureFadeLOD is the TextureFadeLOD for the previous frame.
- PreviousTextureFade LOD is initialized as the StartLOD value.
- the fade rate is a predefined rate that can be based on the frame rate or other rate associated with the graphics application. For instance, the fade rate can be based on a rate independent of the frame rate to improve transition between frames.
- the interpolant value can be calculated as follows.
- the TextureFadeLOD is initially determined to be (10 + fade rate*(15-10)) or 10 + 5*fade rate. Assuming a fade rate of 0.1 LOD levels per frame, the initial
- TextureFadeLOD value is 10.5.
- the interpolant value t can be calculated for the frame as follows:
- StartLOD is representative of the texture LOD of the frame prior to the initiation of the LOD fade
- AvailLOD is representative of the available texture LOD for the frame
- TextureFadeLOD is calculated based on the following:
- TextureFadeLOD Previous TextureFadeLOD + fade rate*(TargetLOD-StartLOD) where Previous TextureFadeLOD is the TextureFadeLOD for the previous frame.
- PreviousTextureFade LOD is initialized as the StartLOD value.
- TargetLOD is the target LOD for the view associated with fame.
- the fade rate is a predefined rate that can be based on the frame rate or other rate associated with the graphics application. For instance, the fade rate can be based on a rate independent of the frame rate to improve transition between frames.
- the interpolant value can be calculated as follows.
- the TextureFadeLOD is initially determined to be (10 + fade rate*(15-10)) or 10 + 5*fade rate. Assuming a fade rate of 0.1 LOD levels per frame, the initial TextureFadeLOD value is 10.5.
- the blend for this interpolant value would include attributes attributable to 25% at the available LOD and 75% at the previous LOD.
- the method includes generating a blend of textures based on the interpolant value.
- the blend of textures can be a blended texture where attributes, such as color, of the blended texture include a blend of the available LOD texture and the previous LOD texture.
- attributes such as color
- pixel values associated with the blended texture can be determined by interpolating pixel values associated with available LOD texture and pixel values associated with the previous LOD texture.
- the interpolant value specifies the blend ratio between the texture objects at the previous LOD and the current LOD. For instance, an interpolant value of 0.1 can specify that the texture objects include a blend of about 10% available LOD texture and 90% previous LOD texture. Similarly, an interpolant value of .95 can specify that the texture objects include a blend of about 95% available LOD texture and 5% previous LOD texture.
- the method includes adjusting the interpolant value over time to implement the LOD fade.
- the interpolant value can be incremented based on the fade rate in subsequent frames.
- the blend of textures will continuously be adjusted based on the incrementing interpolant value such that a greater portion of the blend is attributable to higher available LOD during the LOD fade. This causes a smooth transition between different LOD levels across multiple frames.
- the method includes completing the texture rendering for the current frame, after which the method returns to (402) for the subsequent frame.
- the method determines that a LOD fade has previously been initiated.
- the method increments the interpolant value for the LOD fade. The interpolant value can be incremented based on the fade rate for LOD fade.
- the interpolant value is incremented as demonstrated in the following example.
- the method determines a new TextureFadeLOD value based on the following:
- TextureFadeLOD Previous TextureFadeLOD + fade rate*(AvailLOD-StartLOD).
- the TextureFadeLOD is determined to be (10.5+fade rate*(15-10).
- the interpolant value can then be calculated as (11-10)/(15-10) or 0.2.
- the fade rate for the LOD fade can be set such that the total transition time for the fade remains constant regardless of the number of levels between the previous LOD and the second LOD. For example, if a large number of levels exist between the previous LOD and the second LOD, the frame rate will be dynamically increased such that the transition from the previous LOD to the available LOD occurs at a rate substantially equal to the fade rate for a transition between closer LOD values. In this manner, the scene resolution time to achieve a fully resolved scene remains constant.
- the method determines if the incremented interpolant value is equal to 1. If not, the method generates a texture blend based on the incremented interpolant value as shown at (418) of FIG. 5A. For example, the percentage of available LOD texture in the blend can be increased from about 10% to about 20%.
- the method completes the texturing rendering (420) and begins texture rendering for the next frame (402) where the method can repeat itself until the incremented interpolant value is equal to or greater than 1. Once the interpolant value is equal to 1, the LOD fade should be complete. At this point, the method terminates the LOD fade (426) and completes the texture rendering for the current frame (420). The texture will be rendered at the available LOD determined when the LOD fade was initiated.
- the method can detect regions associated with edge of the particular view.
- the method can be configured such that an LOD fade is not initiated at the edge of the particular view as the user pans the view to avoid fading each tile as it comes into view.
Abstract
Description
Claims
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261590546P | 2012-01-25 | 2012-01-25 | |
US13/412,796 US8654124B2 (en) | 2012-01-25 | 2012-03-06 | Texture fading for smooth level of detail transitions in a graphics application |
PCT/US2013/022922 WO2013112707A1 (en) | 2012-01-25 | 2013-01-24 | Texture fading for smooth level of detail transitions in a graphics application |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2788974A1 true EP2788974A1 (en) | 2014-10-15 |
EP2788974A4 EP2788974A4 (en) | 2015-03-18 |
EP2788974B1 EP2788974B1 (en) | 2020-06-03 |
Family
ID=48796860
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP13740559.3A Active EP2788974B1 (en) | 2012-01-25 | 2013-01-24 | Texture fading for smooth level of detail transitions in a graphics application |
Country Status (5)
Country | Link |
---|---|
US (2) | US8654124B2 (en) |
EP (1) | EP2788974B1 (en) |
AU (1) | AU2013212084B2 (en) |
DE (1) | DE202013012446U1 (en) |
WO (1) | WO2013112707A1 (en) |
Families Citing this family (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140218400A1 (en) * | 2013-02-05 | 2014-08-07 | PropertyRadar, Inc. | Method for Providing Real Estate Data on an Interactive Map |
US10055876B2 (en) * | 2014-06-06 | 2018-08-21 | Matterport, Inc. | Optimal texture memory allocation |
KR102197064B1 (en) * | 2014-10-10 | 2020-12-30 | 삼성전자 주식회사 | Graphics processing unit for adjusting level-of-detail, method thereof, and devices having the same |
KR102313020B1 (en) | 2014-11-27 | 2021-10-15 | 삼성전자주식회사 | Graphics processing unit and device having the same |
US10489954B1 (en) | 2018-05-23 | 2019-11-26 | Mapbox, Inc. | Efficient duplicate label handling |
US10460495B1 (en) | 2018-05-23 | 2019-10-29 | Mapbox, Inc. | Efficient label insertion and collision handling |
CN111111176B (en) * | 2019-12-18 | 2023-11-14 | 北京像素软件科技股份有限公司 | Method and device for managing object LOD in game and electronic equipment |
CN114494666A (en) * | 2022-01-29 | 2022-05-13 | 网易（杭州）网络有限公司 | Data processing method and device, electronic equipment and readable medium |
Family Cites Families (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5949426A (en) | 1997-01-28 | 1999-09-07 | Integrated Device Technology, Inc. | Non-linear texture map blending |
US6222555B1 (en) * | 1997-06-18 | 2001-04-24 | Christofferson Enterprises, Llc | Method for automatically smoothing object level of detail transitions for regular objects in a computer graphics display system |
US6373482B1 (en) * | 1998-12-23 | 2002-04-16 | Microsoft Corporation | Method, system, and computer program product for modified blending between clip-map tiles |
US6184894B1 (en) * | 1999-01-29 | 2001-02-06 | Neomagic Corp. | Adaptive tri-linear interpolation for use when switching to a new level-of-detail map |
US7057612B2 (en) | 2000-01-12 | 2006-06-06 | Balfour Technologies Llc | Method and system for a four-dimensional temporal visualization data browser |
US6650326B1 (en) * | 2001-01-22 | 2003-11-18 | Navigation Technologies Corp. | Method of handling context during scaling with a map display |
US7027972B1 (en) | 2001-01-24 | 2006-04-11 | Ati Technologies, Inc. | System for collecting and analyzing graphics data and method thereof |
JP2004213641A (en) * | 2002-12-20 | 2004-07-29 | Sony Computer Entertainment Inc | Image processor, image processing method, information processor, information processing system, semiconductor device and computer program |
US7305396B2 (en) * | 2002-12-31 | 2007-12-04 | Robert Bosch Gmbh | Hierarchical system and method for on-demand loading of data in a navigation system |
US7075535B2 (en) * | 2003-03-05 | 2006-07-11 | Sand Codex | System and method for exact rendering in a zooming user interface |
US6995767B1 (en) * | 2003-07-31 | 2006-02-07 | Nvidia Corporation | Trilinear optimization for texture filtering |
EP1681656A1 (en) | 2005-01-18 | 2006-07-19 | Oculus Info Inc. | System and method for processing map data |
US7933929B1 (en) | 2005-06-27 | 2011-04-26 | Google Inc. | Network link for providing dynamic data layer in a geographic information system |
WO2007146967A2 (en) | 2006-06-12 | 2007-12-21 | Google Inc. | Markup language for interactive geographic information system |
US8106918B2 (en) | 2007-05-01 | 2012-01-31 | Vivante Corporation | Apparatus and method for texture level of detail computation |
US7948500B2 (en) * | 2007-06-07 | 2011-05-24 | Nvidia Corporation | Extrapolation of nonresident mipmap data using resident mipmap data |
US8872847B2 (en) | 2008-08-28 | 2014-10-28 | Google Inc. | Architectures and methods for creating and representing time-dependent imagery |
US9098926B2 (en) * | 2009-02-06 | 2015-08-04 | The Hong Kong University Of Science And Technology | Generating three-dimensional façade models from images |
US20110205229A1 (en) | 2010-02-23 | 2011-08-25 | Google Inc. | Portable Globe Creation for a Geographical Information System |
US20110210960A1 (en) | 2010-02-26 | 2011-09-01 | Google Inc. | Hierarchical blurring of texture maps |
US8587602B2 (en) * | 2010-08-16 | 2013-11-19 | Microsoft Corporation | GPU texture tile detail control |
-
2012
- 2012-03-06 US US13/412,796 patent/US8654124B2/en not_active Expired - Fee Related
-
2013
- 2013-01-24 WO PCT/US2013/022922 patent/WO2013112707A1/en active Application Filing
- 2013-01-24 AU AU2013212084A patent/AU2013212084B2/en active Active
- 2013-01-24 EP EP13740559.3A patent/EP2788974B1/en active Active
- 2013-01-24 DE DE202013012446.6U patent/DE202013012446U1/en not_active Expired - Lifetime
-
2014
- 2014-01-13 US US14/153,266 patent/US9547921B1/en active Active
Also Published As
Publication number | Publication date |
---|---|
AU2013212084B2 (en) | 2014-08-14 |
EP2788974A4 (en) | 2015-03-18 |
US9547921B1 (en) | 2017-01-17 |
DE202013012446U1 (en) | 2016-11-10 |
EP2788974B1 (en) | 2020-06-03 |
WO2013112707A1 (en) | 2013-08-01 |
AU2013212084A1 (en) | 2014-07-24 |
US20130187939A1 (en) | 2013-07-25 |
US8654124B2 (en) | 2014-02-18 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9105129B2 (en) | Level of detail transitions for geometric objects in a graphics application | |
US9153011B2 (en) | Movement based level of detail adjustments | |
AU2013212084B2 (en) | Texture fading for smooth level of detail transitions in a graphics application | |
US9218362B2 (en) | Markup language for interactive geographic information system | |
US9024947B2 (en) | Rendering and navigating photographic panoramas with depth information in a geographic information system | |
US9626790B1 (en) | View-dependent textures for interactive geographic information system | |
US9990750B1 (en) | Interactive geo-referenced source imagery viewing system and method | |
KR101667345B1 (en) | System and method of indicating transition between street level images | |
US10878599B2 (en) | Soft-occlusion for computer graphics rendering | |
US20130321461A1 (en) | Method and System for Navigation to Interior View Imagery from Street Level Imagery | |
US9704282B1 (en) | Texture blending between view-dependent texture and base texture in a geographic information system | |
US20180005425A1 (en) | System and Method for Displaying Geographic Imagery | |
US20110242271A1 (en) | Synthesizing Panoramic Three-Dimensional Images | |
US9792021B1 (en) | Transitioning an interface to a neighboring image |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20140702 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
A4 | Supplementary search report drawn up and despatched |
Effective date: 20150213 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G09G 5/00 20060101ALI20150209BHEPIpc: G06T 15/04 20110101AFI20150209BHEP |
|
DAX | Request for extension of the european patent (deleted) | ||
17Q | First examination report despatched |
Effective date: 20160115 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
INTG | Intention to grant announced |
Effective date: 20191219 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 1277811Country of ref document: ATKind code of ref document: TEffective date: 20200615Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602013069614Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602013069614Country of ref document: DERepresentative=s name: VENNER SHIPLEY GERMANY LLP, DERef country code: DERef legal event code: R082Ref document number: 602013069614Country of ref document: DERepresentative=s name: VENNER SHIPLEY LLP, DE |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200904Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200903 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20200603 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200903Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1277811Country of ref document: ATKind code of ref document: TEffective date: 20200603 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20201006Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20201003Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602013069614Country of ref document: DE |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
26N | No opposition filed |
Effective date: 20210304 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210124 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20210131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210131Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210131 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210124 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20210131 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230125Year of fee payment: 11 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20130124 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230127Year of fee payment: 11Ref country code: DEPayment date: 20230127Year of fee payment: 11 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230510 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200603 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20240129Year of fee payment: 12Ref country code: GBPayment date: 20240129Year of fee payment: 12 |
EP2864905B1 - Providing information about relevant elements from maps history based on location - Google Patents
Providing information about relevant elements from maps history based on location Download PDFInfo
- Publication number
- EP2864905B1 EP2864905B1 EP13734599.7A EP13734599A EP2864905B1 EP 2864905 B1 EP2864905 B1 EP 2864905B1 EP 13734599 A EP13734599 A EP 13734599A EP 2864905 B1 EP2864905 B1 EP 2864905B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- elements
- location
- user
- query
- mobile device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
- H04W4/029—Location-based management or tracking services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
- G06F16/44—Browsing; Visualisation therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/52—Network services specially adapted for the location of the user terminal
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W64/00—Locating users or terminals or network equipment for network management purposes, e.g. mobility management
Definitions
- Many software applications are capable of displaying interactive geographical maps to a user. These applications can be executed using a computer system such as a laptop computer, mobile phone, desktop computer, or tablet computer, and can include provisions for a user to search a map for geographical locations or points of interest, get directions from one geographical location to another, or view one or more information layers on the map (e.g., satellite images, traffic conditions, topography, political boundaries, and so forth).
- a computer system such as a laptop computer, mobile phone, desktop computer, or tablet computer
- information layers on the map e.g., satellite images, traffic conditions, topography, political boundaries, and so forth.
- a user who is planning a trip may perform one or more maps searches in advance of the trip to obtain information about their destination (e.g., to get directions from the user's destination airport to the user's hotel, or to find restaurants near the user's hotel). To retrieve this information later during the actual trip, the user must manually return to their maps application and repeat their search, which can be cumbersome and time-consuming for the user.
- US patent application publication no. US2002/0052674 describes a system and method which combine mobile information device, server computer, and a task manager to provide the mobile information device user to retrieve the information corresponding to the user's current location from a server computer over Internet.
- the task manager schedules search events and chooses geographic search area to retrieve user's nearby information along the travel path.
- the task manager is accessible to an automatic positioning system to track user's mobile position and to predict the future travel path.
- the task manager uses the query turn-around time to plan and schedule before reaching the next desired area and further uses historical search criteria to reduce the search results of current search criteria before transmitting the final results through the wireless communication bottleneck.
- Techniques of this disclosure generally involve storing a historical record of a user's maps searches (a maps history), and providing a user with relevant information about elements in their maps history based on the user's current location (based on, e.g., a current location of a computing device associated with the user).
- elements can include generic queries, specific queries, direction queries, click entries, places, and so forth.
- the location of a mobile device associated with the user is provided to a server, which in turn processes the user's maps history to determine which elements from the maps history may be relevant to the mobile device's current location. Elements that are determined to be of possible relevance, and/or information relating thereto, can then be presented to the user, in many instances decreasing the time and effort required for the user to access relevant location-based information.
- a method for generating a list of contextually-relevant elements using a computer processor can include receiving information indicative of a current location of a user and storing the information in a memory.
- the method can also include fetching a maps search history associated with the user, the maps search history comprising a plurality of elements corresponding to map-based queries executed by the user during a historical time period.
- the method can also include, using a processor coupled to the memory, determining whether each of the plurality of elements is relevant to the user's 6375802-1 current location and adding elements determined to be relevant to a list of relevant elements.
- the method can also include storing the list of relevant elements in the memory.
- the method can include associating a geographical location with each of the plurality of elements and adding an element to the list of relevant elements if the geographical location associated therewith is within a predetermined threshold distance of the user's current location.
- the plurality of elements can include a directions query, and the method can include associating the directions query with a source geographical location and a destination geographical location.
- the plurality of elements can include a query that returns a plurality of places and the query can include one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query.
- the method can also include associating with the query the geographical locations of only those places that are indicated by the one or more click entries.
- the method can also include de-duplicating the list of relevant elements by sending each element in the list of relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map, and replacing the list of relevant elements with the extracted set of elements.
- the method can also include sorting the list of relevant elements based on at least one of a proximity of a geographical location associated with each element to the user's current location, a frequency with which a query corresponding to each element was executed by the user, and a recency with which a query corresponding to each element was executed by the user.
- the method can also include outputting the list of relevant elements to a mobile device associated with the user and/or sending a notification to a mobile device associated with the user including information relating to an element in the list of relevant elements.
- a system for providing a list of contextually-relevant elements can include a processor and a memory having instructions stored thereon for execution by the processor.
- the instructions can include a location receiving module that receives information indicative of a current location of a user and a database interface module that fetches a maps search history associated with the user, the maps search history comprising a plurality of elements corresponding to map-based queries executed by the user during a historical time period.
- the instructions can also include a maps history processing module that processes the maps search history to determine whether each of the plurality of elements is relevant to the user's current location and adds elements determined to be relevant to a list of relevant elements.
- the processor can be disposed within at least one of a mobile device and a server.
- the maps history processing module can associate a geographical location with each of the plurality of elements and add an element to the list of relevant elements if the geographical location associated therewith is within a predetermined threshold distance of the user's current location.
- the plurality of elements can include a directions query, and the maps history processing module can associate the directions query with a source geographical location and a destination geographical location.
- the plurality of elements can include a query that returns a plurality of places and that includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query.
- the maps history processing module can associate the query with the geographical locations of only those places that are indicated by the one or more click entries.
- the maps history processing module can de-duplicate the list of relevant elements by sending each element in the list of relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map, and replacing the list of relevant elements with the extracted set of elements.
- the maps processing module can sort the list of relevant elements based on at least one of a proximity of a geographical location associated with each element to the user's current location, a frequency with which a query corresponding to each element was executed by the user, and how recently a query corresponding to each element was executed by the user.
- the instructions can also include an output module that outputs the list of relevant elements to a mobile device associated with the user or sends a notification to the mobile device including information relating to an element in the list of relevant elements.
- a mobile device in another aspect, includes a processor and a memory having instructions stored thereon for execution by the processor.
- the instructions can include a location determining module that estimates a current location of the mobile device and a database interface module that fetches a maps search history associated with a user of the mobile device, the maps search history comprising a plurality of elements corresponding to map-based queries executed by the user during a historical time period.
- the instructions can also include a maps history processing module that processes the maps search history to determine whether each of the plurality of elements is relevant to the mobile device's current location and adds elements determined to be relevant to a list of relevant elements.
- the instructions can also include a display module that displays information relating to at least one element in the list of relevant elements.
- examples described herein provide systems and methods for determining attractions based on location history data collected from one or more users traveling away from a home location within a geographic area.
- location history data can be captured, for example, automatically using a mobile device associated with each user.
- Location history data can be analyzed on a per user basis to determine locations visited by the user within the geographic area. Data representing these locations can then be combined with data collected from one or more other users to develop a "heat map" of locations visited by a plurality of users that are traveling away from home within the geographic area.
- Local search technology can be utilized to associate popular locations visited by a large number of users with attractions that are located nearby. This association allows a list of attractions within a geographic area to be developed, and individual attractions within the area can be ranked according to the frequency of visits by traveling users.
- a method for generating a list of attractions in a geographic area using a computer processor including collecting location history data for a plurality of users within the geographic area and storing the location history data in a datastore.
- the method further includes determining by a processor in communication with the datastore one or more locations visited by each of the plurality of users, where the one or more locations visited by each user is at least a distance away from a home location of the user.
- the method also includes determining by the processor one or more popular locations within the geographic area based on the one or more locations visited by the plurality of users, and associating by the processor the one or more popular locations with one or more attractions located near the one or more popular locations.
- a system for generating a list of attractions in a geographic area including a location data receiving module that receives location history data from a mobile device, and a location data processing module.
- the location data processing module includes a processor and a memory having instructions stored thereon. The instructions stored on the memory can cause the processor to determine one or more locations visited by the mobile device based on received location history data from the mobile device. The instructions can also cause the processor to determine if the one or more locations visited by the mobile device are at least a distance away from a home location associated with the mobile device.
- the instructions can cause the processor to aggregate the one or more locations visited by the mobile device that are at least the distance away from the home location with one or more additional locations visited by one or more additional mobile devices that are also at least the distance away from an associated home location.
- the instructions can cause the processor to determine one or more popular locations based on the one or more locations visited by the mobile device and the one or more additional mobile devices, and to associate one or more attractions within the geographic area with the one or more popular locations.
- a method for providing suggestions of attractions within a geographic area to a user including aggregating locations visited by a plurality of users and storing the locations visited in a datastore, where each of the locations visited is determined to be at least a distance away from a home location associated with the user visiting the location.
- the method can also include determining by a processor in communication with the datastore one or more popular locations within the geographic area based on the locations visited by the plurality of users, and associating by the processor one or more attractions within the geographic area with the one or more popular locations.
- the method can include presenting the one or more attractions within the geographic area to the user.
- a method includes aggregating, by a computing system, location history data for a plurality of mobile devices for locations within a geographic area, and determining, by the computing system, based on the location history data, one or more locations at which at least a threshold number of the plurality of mobile computing devices were present, where each of the one or more locations is at least a predetermined distance away from a home location of associated with each respective mobile device.
- the method also includes determining, by the computing system, based on the determined one or more locations at which each of the plurality of mobile computing devices was present, one or more popular locations within the geographic area, and associating, by the computing system, the one or more popular locations with one or more attractions located near the one or more popular locations.
- a computing system includes at least one processor, and at least one module operable by the at least one processor to aggregate location history data for a plurality of mobile devices for locations within a geographic area, and determine, based on the location history data, one or more locations at which at least a threshold number of the plurality of mobile computing devices were present, where each of the one or more locations is at least a predetermined distance away from a home location of associated with each respective mobile device.
- the at least one module is also operable to determine, based on the determined one or more locations at which each of the plurality of mobile computing devices was present, one or more popular locations within the geographic area, and associate the one or more popular locations with one or more attractions located near the one or more popular locations.
- a computer-readable storage medium stores instructions that, when executed, cause at least one processor of a computing device to aggregate location history data for a plurality of mobile devices for locations within a geographic area, and determine, based on the location history data, one or more locations at which at least a threshold number of the plurality of mobile computing devices were present, where each of the one or more locations is at least a predetermined distance away from a home location of associated with each respective mobile device, determine, based on the determined one or more locations at which each of the plurality of mobile computing devices was present, one or more popular locations within the geographic area, and associate the one or more popular locations with one or more attractions located near the one or more popular locations.
- the location history data can include information representing a date, time, and geographic position.
- the geographic position can include, for example, a latitude and longitude coordinate position, as well as an accuracy radius.
- the location history data can be collected in a variety of manners.
- collecting location history data for a plurality of users can include receiving location history data from a plurality of mobile devices being operated by the plurality of users (e.g., a smart phone being carried by each user).
- any suitable distance can be utilized.
- the distance can be about 200 miles. In other examples, however, the distance can be greater or less than about 200 miles.
- the distance can be selected to achieve a high probability that locations greater than the distance from a home location are likely to be visited during travel away from home (e.g., vacation, business travel, etc.).
- location history data can include a large number of data points representing a series of geographic positions of a device and/or user at particular dates and times.
- a number of different algorithms can be applied by the systems and methods described herein to reduce location history data to one or more locations visited by the device and/or user.
- a clustering algorithm can be utilized to determine which data points are proximate in both space and time. Proximate location history data points can be reduced to a single location visited by, for example, determining a centroid of the proximate data points along with a period of time spent at the location.
- determining one or more locations visited by each of a plurality of users can include utilizing such a clustering algorithm on the location history data collected from each user.
- a clustering algorithm can be applied one or more times to filter results and reduce signal noise when determining attractions in a geographic area. For example, a clustering algorithm can be applied to determine one or more locations visited by a user from a plurality of data points representing location history data. In addition, a clustering algorithm can also be used to determine one or more popular locations visited by a plurality of users after data representing locations visited by the plurality of users is aggregated together.
- systems and methods of this disclosure can also utilize local search technology to associate an attraction with each popular location.
- a local search based on the position of a popular location can be limited to one or more categories of results (e.g., attractions, parks, etc.).
- the systems and methods described herein can be executed and evaluated continually or periodically.
- techniques of the disclosure can be configured to analyze collected location history data every evening, every week, every month, etc.
- locations and other information determined from processing location history data can be added incrementally to results previously developed using older location history data. By adding incrementally to previous results, computational resources can be conserved and results spanning various time frames can be presented.
- data representing locations visited by a plurality of users can be filtered based on the date and/or time of the visits. For example, data representing locations visited by a plurality of users can be filtered to include only visits during the summer months, or during a specific month or year. This time-period filtering can aid in producing, for example, a season-specific listing of attractions for a given area (e.g., a historic baseball stadium is likely not a popular attraction during winter in the northern United States).
- filtering can be done based on characteristics of a user. For example, a user having one or more characteristics (e.g., age, marital status, sex, interests, etc.) can be shown attractions popular with other users sharing similar characteristics (e.g., others of similar age, marital status, sex, interests, etc.). This can be done by aggregating only data from a plurality of other users that each shares the one or more characteristics in common with the user.
- characteristics e.g., age, marital status, sex, interests, etc.
- This can be done by aggregating only data from a plurality of other users that each shares the one or more characteristics in common with the user.
- Systems and methods are disclosed herein that generally involve storing a historical record of a user's maps searches (a maps history), and providing a user with relevant information about elements in their maps history based on the location of a mobile device associated with the user.
- Such elements can include generic queries, specific queries, direction queries, click entries, places, and so forth.
- the mobile device's location is provided to a server, which in turn processes the user's maps history to determine which elements from the maps history may be relevant to the user's current location. Elements that are determined to be of possible relevance, and/or information relating thereto, can then be presented to the user, in many instances decreasing the time and effort required for the user to locate map-based information for which they are searching.
- the user may be provided with an opportunity to control whether programs or features of the systems and devices can collect user information (e.g., information about a user's e-mail, a user's social network, social actions or activities, profession, a user's preferences, user's Internet search history, a user's current location, etc.), or to control whether and/or how to the systems and devices may receive content that may be relevant to the user.
- user information e.g., information about a user's e-mail, a user's social network, social actions or activities, profession, a user's preferences, user's Internet search history, a user's current location, etc.
- certain data may be treated in one or more ways before it is stored or used by the systems and devices, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined about the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by the systems and devices described herein.
- FIG. 1 illustrates an example of a mobile network 100 in which one or more of the techniques disclosed herein can be implemented.
- the mobile network 100 includes a communications network 110 and a mobile device 120.
- the mobile device 120 can connect to the communications network 110 via various access points 130. Although one mobile device 120 and one access point 130 are illustrated for brevity, the mobile network 100 can include any number of mobile devices and access points.
- the mobile device 120 can be or can include any device that is configured to exchange data over the communications network 110, such as a mobile phone, tablet computer, laptop computer, and so forth.
- the mobile device 120 can also be or can include devices that are not necessarily "mobile," such as desktop computers.
- the communications network 110 can include any of a variety of networks or combinations of networks, such as GSM, TDMA, CDMA, IEEE 802.11, Bluetooth, Wi-Fi, or any other wired or wireless networks.
- the access points 130 can be transceivers that provide a gateway between the mobile device 120 and the communications network 110.
- the access points 130 can be wireless routers or cellular network towers.
- the mobile device 120 can also receive Global Positioning System (GPS) signals transmitted from GPS satellites 140.
- GPS Global Positioning System
- the mobile network 100 also includes a maps server 150 that can exchange data with the mobile device 120 via the communications network 110.
- the maps server 150 can be implemented on one or more computer systems (e.g., server computers, personal computers, workstations, mini-computers, clustered computer systems, or embedded computer systems). Some or all of the maps server 150 functionality can also be implemented on the mobile device 120 itself.
- the phrase "current location” refers to a location at a particular time.
- mobile device 120 may have physically moved to a different geographic location between the time at which the current location was first determined and the present moment. Even so, the "current location” of mobile device 120 is determined to be the location at which the device was physically located at the moment that the location was last determined. The same “current location” may be used throughout the prediction process even though updated current locations may be determined during the prediction process.
- a "current location” of mobile device 120 may be any location within a threshold distance surrounding the determined current location.
- current time refers to a particular time at which mobile device 120 determined the “current time” and may be the same time used throughout the prediction process even though the literal current time may change by fractions of a second, a second, or some other amount during the prediction process.
- FIG. 2 illustrates an example architecture of a computer system 200 which can be used to implement the mobile device 120 or the maps server 150 of FIG. 1 .
- a computer system 200 is depicted and described herein, it will be appreciated that this is for sake of generality and convenience. In other examples, the computer system may differ in architecture and operation from that shown and described here.
- the illustrated computer system 200 includes a processor 202 which controls the operation of the computer system 200, for example by executing an operating system (OS), device drivers, application programs, and so forth.
- the processor 202 can include any type of microprocessor or central processing unit (CPU), including programmable general-purpose or special-purpose microprocessors and/or any of a variety of proprietary or commercially-available single or multi-processor systems.
- the computer system 200 also includes a memory 204, which provides temporary or permanent storage for code to be executed by the processor 202 or for data that is processed by the processor 202.
- the memory 204 can include read-only memory (ROM), flash memory, one or more varieties of random access memory (RAM), and/or a combination of memory technologies.
- the various elements of the computer system 200 are coupled to a bus system 206.
- the illustrated bus system 206 is an abstraction that represents any one or more separate physical busses, communication lines/interfaces, and/or multi-drop or point-to-point connections, connected by appropriate bridges, adapters, and/or controllers.
- the computer system 200 also includes a network interface 208, an input/output (I/O) interface 210, a storage device 212, and a display controller 214.
- the network interface 208 enables the computer system 200 to communicate with remote devices (e.g., other computer systems) over a network.
- the I/O interface 210 facilitates communication between one or more input devices, one or more output devices, and the various other components of the computer system 200.
- the storage device 212 can include any conventional medium for storing data in a non-volatile and/or non-transient manner. The storage device 212 can thus hold data and/or instructions in a persistent state (i.e., the value is retained despite interruption of power to the computer system 200).
- the storage device 212 can include one or more hard disk drives, flash drives, USB drives, optical drives, various media disks or cards, and/or any combination thereof and can be directly connected to the other components of the computer system 200 or remotely connected thereto, such as over a network.
- the display controller 214 includes a video processor and a video memory, and generates images to be displayed on one or more displays in accordance with instructions received from the processor 202.
- the various functions performed by the maps server 150 or the mobile device 120 can be logically described as being performed by one or more modules. It will be appreciated that such modules can be implemented in hardware, software, or a combination thereof. It will further be appreciated that, when implemented in software, modules can be part of a single program or one or more separate programs, and can be implemented in a variety of contexts (e.g., as part of an operating system, a device driver, a standalone application, and/or combinations thereof). In addition, software embodying one or more modules can be stored as an executable program on one or more non-transitory computer-readable storage mediums. Functions disclosed herein as being performed by a particular module can also be performed by any other module or combination of modules, and the maps server 150 or the mobile device 120 can include fewer or more modules than what is shown and described herein.
- FIG. 3 is a schematic diagram of the modules of one example of the maps server 150.
- the maps server 150 can include a location receiving module 300 configured to receive location data.
- the location data can be indicative of the current location of the user.
- the current location of a user can be inferred from the current location of a mobile device or other object in the user's possession.
- the mobile device 120 can be configured to periodically communicate its current location to the location receiving module 300 using the mobile network 100. This can occur several times per minute, once per minute, once per hour, or at any other regular or sporadic time interval.
- the mobile device 120 can determine or estimate its current location using any of a variety of known techniques, such as by processing GPS signals, by detecting proximity to cell towers, Wi-Fi hot spots, or other mobile access points 130 of known location, or by triangulating between the mobile device 120 and a plurality of such access points 130.
- One example of a computer program for obtaining a user's current location is a geolocation API. This program provides the best estimate of a mobile device's location using a number of onboard or server-based sources (called location providers).
- the location receiving module 300 can also receive the mobile device's current location and/or the location of the user from other sources, such as when a user "checks in" at a location using any of a number of social applications that provide for such check-ins, when the user indicates their current position by dropping a pin at a particular location or making an equivalent selection using mapping software, or when the user responds to a prompt for their current position.
- the location data received by the location receiving module 300 need not necessarily be indicative of the mobile device's current location. Rather, the user can also provide some other location, such as a location that the user has visited in the past or plans to visit in the future, in order to obtain maps history information relevant to that location.
- the location data received by the location receiving module 300 can be arranged in a format that includes a longitude, a latitude, and an accuracy radius.
- the accuracy radius can represent an estimate of the accuracy of the current location data.
- the accuracy radius can range from meters to kilometers depending on the source of the location data. For example, location data derived from GPS signals can have an accuracy radius of several meters while location data derived from triangulation of cell towers can have an accuracy radius of several kilometers.
- the location receiving module 300 can also receive raw proximity or other data from the mobile device 120 and can perform any necessary triangulation or location calculations on the server side.
- the maps server 150 can also include a database interface module 302 which can be configured to communicate with a database in which the user's maps history is stored.
- the database can be stored on the mobile device 120, on the maps server 150, and/or in other locations, such as a cloud-based repository.
- the database can be updated each time the user initiates a maps search to store the search query entered by the user as an element in the user's maps history.
- the database can store the user's maps searches, only maps searches that occurred during a predetermined time period (e.g., the last 24 hours, the last 7 days, the last 30 days, the last year, or since the user last cleared their maps history), or any other subset of the user's maps searches.
- a maps search can be associated with a particular user, and thereby added to the user's maps history, if it is executed on a device associated with the user, or if the user identifies themselves at the time of initiating the maps search (e.g., by supplying a username and password or other login credentials).
- a user's maps history can include elements from a plurality of devices (e.g., searches conducted by the user on their desktop computer as well as searches conducted by the user on their phone).
- the database interface module 302 can execute various operations with respect to the maps history database, such as reading information from the database, writing information to the database, or querying the database.
- the maps server 150 can also include a maps history processing module 304.
- the maps history processing module 304 can instruct the database interface module 302 to retrieve the user's maps history from the maps history database.
- the maps history processing module 304 can then process the elements of the user's maps history to determine which elements are relevant to the location data received by the location receiving module 300 and to generate a list of said elements, as described below.
- the maps server 150 can also include an output module 306 configured to output a list of relevant elements from the maps history, or to output information about one or more of the relevant elements.
- the list or other information can be sent as a data transmission via the mobile network 100 to the mobile device 120, which can in turn be configured to display or otherwise present the list or other information to the user.
- the presentation to the user can be in a standalone application, or in the mobile device's native mapping software, e.g., upon actuating a button or other user interface element.
- location receiving module 300 collects or makes use of personal information about the user (e.g., search histories, location, etc.)
- the user may be provided with an opportunity to control whether location receiving module 300 can collect user information or to control whether and/or how location receiving module 300 may receive content that may be relevant to the user.
- location receiving module 300 may treat certain data in one or more ways before it is stored or used by location receiving module 300 so that personally identifiable information is removed.
- the user may have control over how information (e.g., data) is collected about the user and used by location receiving module 300 as described herein.
- FIG. 4 is an flowchart illustrating an example process for providing information about relevant elements from a user's maps history based on the mobile device's location. While various aspects disclosed herein may be shown in relation to a flowchart or flowcharts, it should be noted that any ordering of method steps implied by such flowcharts or the description thereof is not to be construed as limiting the method to performing the steps in that order. Rather, the various steps of each of the methods disclosed herein can be performed in any of a variety of sequences. In addition, as the illustrated flowchart(s) are merely examples, various other methods that include additional steps or include fewer steps than illustrated are also within the scope of the present disclosure.
- the illustrated method begins at step S400 where a user's current location, or another location specified by the user, is received.
- decision block D402 it is determined whether the user's current location has changed since the last time the method was executed. If no change is detected ("NO" in decision block D402), execution returns to step S400 and the process repeats.
- the decision as to whether a change in location has occurred can be made based on the degree to a which a mobile device's location has changed, such that movement of the user a short distance is not flagged as a location change, and only changes in location that exceed a predetermined distance threshold (e.g., 1 mile, 10 miles, 100 miles, etc.) are flagged.
- a predetermined distance threshold e.g., 1 mile, 10 miles, 100 miles, etc.
- step S404 the database interface module 302 of the maps server 150 can fetch the user's maps history from a database.
- queries as entered by the user in a mapping application can be stored as elements in the maps history.
- queries can include generic queries (e.g., "pizza Mountain View, CA"), specific queries (e.g., "1234 pleasant Parkway, Mountain View, CA”), directions queries (e.g., "SFO airport to 1234 pleasant Parkway, Mountain View, CA”), and so forth.
- One or more click entries can also be stored in the maps history in association with a query, indicating places returned by the query that the user clicked on or otherwise selected.
- Click entries can be stored in the maps history by their cluster identifier ("CID").
- a CID is unique identifier assigned by a mapping application to each place in the universe of places that can possibly be returned by querying the mapping application. For example, each place listed in a local index used by a maps software can be assigned a unique CID.
- the maps history processing module 304 of the maps server 150 can associate each query from the user's maps history with a geographical location.
- processes known as geocoding and reverse geocoding can be used to convert queries in the maps history into geographic coordinates and vice versa.
- Geocoding refers to a process in which a query (e.g., a human-readable address such as "1234 pleasant Parkway, Mountain View, CA") can be converted to location data in geographic coordinates (e.g., latitude 37.423021 and longitude - 122.083739).
- Reverse geocoding refers to the reverse process, i.e., converting geographic coordinates into an address, place, etc.
- a computer program for geocoding and reverse geocoding is a geocoding API.
- This program can accept geographic coordinates and return a corresponding place or address, and vice versa.
- Generic queries e.g., "pizza Mountain View, CA”
- Specific queries e.g., "1234 pleasant Parkway, Mountain View, CA”
- latitude 37.423021 and longitude -122.083739 in this example can be associated with their corresponding geographic location (latitude 37.423021 and longitude -122.083739 in this example).
- the geographical location data associated with each query from the user's maps history can be specified as a latitude-longitude pair, as a latitude-longitude pair with an accuracy radius, or in some other format. Geographical location data generated for each query from the user's maps history can be stored by the maps server 150.
- step S408 the maps history processing module 304 can filter out queries that are far from the user's current location.
- the geographical location data generated for each query in step S406 can be compared to a geographical location corresponding to the user's current location, or some other location specified by the user, to assess their proximity. Queries that are associated only with places that are more than a predetermined threshold distance from the user's current location (e.g., 10 meters, 100 meters, 1 kilometer, 1 mile, 10 miles, 100 miles, etc.), after taking into account any associated accuracy radii, can be discarded and the remaining queries can be added to a list of relevant elements for subsequent processing.
- a predetermined threshold distance from the user's current location e.g. 10 meters, 100 meters, 1 kilometer, 1 mile, 10 miles, 100 miles, etc.
- the predetermined threshold distance can be fixed or can vary depending on any of a number of factors, such as the quantity of queries in the user's maps history. In some examples, the predetermined threshold distance can be selected so as to obtain at least a minimum number of elements and less than a maximum number of elements in the list.
- the maps history processing module 304 can determine whether each query includes one or more click entries.
- a click entry can be stored in the user's maps history in association with a query when the query is executed and the user clicks on or otherwise selects one or more of the query results.
- a user might execute a maps query for restaurants near a particular hotel that returns several places. If the user clicks on two of the places, click entries corresponding to the places the user clicked on can be stored in the user's maps history in association with the initial query. If it is detected in step S410 that a query includes one or more associated click entries, the query can be replaced in the list of elements with the click entries.
- the query "restaurants near hotel A" can be replaced with click entries "restaurant B" and "restaurant C" (corresponding to the two restaurants that the user had previously clicked on).
- any click entries added to the list of elements can be geocoded to produce corresponding location data (e.g., a latitude-longitude pair or a latitude-longitude pair with an associated accuracy radius).
- location data e.g., a latitude-longitude pair or a latitude-longitude pair with an associated accuracy radius.
- the CID associated with each click entry can be geocoded. It can be more computationally efficient to geocode the click entries in a separate step, after discarding queries that are distant from the users current location, as is done in the illustrated example. This way, queries that are distant from the user's current location only trigger one geocode operation. If the click entries were geocoded before discarding queries (e.g., in step S406), queries that are distant from the user's current location would instead trigger N geocode operations (N being equal to the number of click entries associated with the query).
- the maps history processing module 304 can be further configured to de-duplicate the query list. De-duplication can be performed to handle instances in which more than one element in the list corresponds to the same place. This can occur when a user searches for the same place in different ways, for example by searching for their hotel by address and then searching for their hotel by name.
- a user's maps history might include queries such as "pizza mountain view, CA", “pizza, mountain view”, “pizza mtn view”, and "pizzza mountain view” which all correspond to the same place.
- the maps history processing module 304 can remove any duplicate queries from the element list. For each query in the list, the maps history processing module 304 can determine if the query is a "directions query" (e.g., a query that indicates the user sought directions from a source location to a destination location). If the query is a directions query, it can be replaced with a unique key that combines the latitude-longitude coordinates of the source with the latitude-longitude coordinates of the destination. The key can also include one or more accuracy radii associated with the source and/or the destination. If the query is not a directions query, it can be seen as only having a destination, and therefore can be replaced with a unique key that includes the latitude-longitude coordinates of the destination and any associated accuracy radius.
- a directions query e.g., a query that indicates the user sought directions from a source location to a destination location. If the query is a directions query, it can be replaced with a unique key that combines the latitude-longitude coordinates of the source with
- the generated keys can then be de-duplicated using any of a variety of techniques.
- a mapping application can be used to perform the de-duplicating.
- the mapping application can be configured to receive one or more keys and to plot the keys in a map. When the mapping application receives a new key, it can check to see if an identical key has already been mapped. If so, the new key can be discarded.
- the mapping application can also be configured to respond to an "extract" command by sending a list of keys that were previously added to the map to the issuer of the command.
- the maps history processing module 304 can de-duplicate the list of elements by sending each key in the list to the mapping application, which can in turn discard any duplicate keys.
- the maps history processing module 304 can then issue an extract command to the mapping application and receive an extracted set of keys from the mapping application that does not include any duplicates.
- the list of elements can then be replaced with the extracted set of keys.
- Using the mapping application to de-duplicate the keys can be more computationally-efficient than other techniques, as it can require only a single linear pass through the list of elements.
- the list can be de-duplicated using more computationally-intensive techniques, such as sorting the list and iteratively comparing adjacent keys to identify duplicates.
- the maps history processing module 304 can remove any duplicate click entries from the list of elements.
- the maps history processing module 304 can replace each click entry in the list with a unique key that includes the latitude-longitude coordinates of the click entry or the click entry's CID.
- the generated keys can then be de-duplicated, for example using any of the techniques described above.
- the remaining keys in the list of elements can be sorted in step S418. Any of a variety of methods can be used to sort the list.
- the user's maps history can include timestamps for each element (e.g., the time the user initiated a query or the time that a user clicked on a click entry). Accordingly, the list can be sorted in descending timestamp order, such that more-recent elements are listed first. The list can also be sorted based on how frequently the elements appear in the user's maps history. This way, queries or click entries which were executed or clicked more often by the user are listed ahead of queries or click entries which were executed or clicked less often. The list can also be sorted based on the proximity of each element to the user's current location.
- the sorted list can be output by the output module 306 for presentation to a user.
- the outputted list can be transmitted to the user's mobile device 120 for presentation to the user.
- the user can then select a query from the list to re-run the query, or can select a click entry from the list to obtain information regarding the place to which the click entry corresponds.
- the output module can also output information about one or more elements in the list of elements, e.g., as a text message, email, or other notification sent to the user's mobile device.
- Such information can include directions from the user's current location to a location associated with an element in the list, traffic status on the route from the user's current location to a location associated with an element in the list, and so forth.
- An example notification might say “welcome to [user's current location], would you like directions to [one of the list elements]?" Another example notification can be "traffic from here to [one of the list elements] appears to be heavier than normal.” Execution can then return to step S400 and the process repeats.
- a list of relevant elements from a user's maps history can be presented to the user based on the user's current location, such that the user can quickly and easily retrieve map-based information for which they are searching.
- the list of relevant elements can also be used to generate contextually-relevant user notifications or alerts.
- FIG. 5 is a schematic diagram of the modules of a mobile device in one example.
- the structure and function of the mobile device illustrated in FIG. 5 is substantially similar to that of the maps server of FIG. 3 , except as noted herein and as will be readily apparent to those having ordinary skill in the art. Accordingly, a detailed description thereof is omitted here for the sake of brevity.
- the mobile device can include a location determining module 500 configured to estimate the current location of the mobile device, for example using GPS or access point triangulation.
- the mobile device can also include a display module 506 configured to display a generated list of relevant elements from the user's maps history, or information relating thereto, for example on a display screen of the mobile device.
- the other illustrated modules can function in the same manner as those disclosed above with respect to the maps server 150, except that data stored or produced by a remote server (e.g., maps history databases) can be accessed by those modules using one or more calls to the remote server, for example using the mobile network 100.
- the techniques of this disclosure can also provide the ability to determine one or more attractions within a geographic area using location history data for one or more users traveling within the area.
- location history data can be collected for a plurality of users where each user is traveling at least a distance away from a home location associated with the user.
- the location history data for the plurality of users can be analyzed and aggregated to determine the most popular locations within the geographic area that are visited frequently by the plurality of users.
- Local search technology can be used to associate the popular locations with attractions at or near the locations, and the resulting listing of attractions can be utilized in suggesting attractions to other users travelling within, or planning to travel to, the geographic area.
- a user's location can be inferred based on the location of the user's mobile device.
- Location information can be stored at various time intervals to provide a location history of the device and the user.
- An application for determining and recording location information using a user's mobile device can be used. For users who opt in, and in accordance with published privacy policies, such an application can determine and store the location of a user's mobile device to create a location history. This location history can be stored in a cache or other memory on the mobile device, or it can be transmitted to a server over a mobile network and stored in a datastore.
- FIG. 6 illustrates an example of a mobile network 1100 for providing location-based services.
- the mobile network 1100 includes a communications network 1110 and a mobile device 1120.
- the mobile device 1120 can connect to the communications network 1110 via various access points 1130.
- one mobile device 1120 and one access point 1130 is illustrated for purposes of example, the mobile network can include any number of mobile devices and access points.
- the mobile device 1120 can be any device that is configured to exchange data over a mobile network.
- the mobile network 1100 can be a GSM, TDMA, or CDMA technology enabled network, or any other form of wireless network, e.g., IEEE 802.11, Bluetooth, or other Wi-Fi network, or a combination of wired and wireless networks.
- the access points 1130 can be a form of radio receiver or transmitter that provides a gateway between the mobile device 1120 and the communications network 1110.
- the access points can be wireless routers or cellular network towers.
- the mobile device 1120 can also receive GPS signals transmitted from GPS satellites 1140.
- the mobile network 1100 also includes a location server 1150 that can exchange data with the mobile device 1120 via the communications network 1110.
- the location server 1150 can include, for example, a digital data processor 1160 in communications coupling with a digital datastore 1170.
- the location server 1150 can be implemented on one or more computing devices. Such computing devices may include, but are not limited to, one or more personal computers, workstations, mini-computers, clustered computer systems, and/or embedded systems. Some or all of the location server 1150 functionality could also be implemented on the mobile device 1120 itself. Such computing devices may also include, but are not limited to, a device having one or more processors and memory for executing and storing instructions. Such a computing device may include software, firmware, and hardware. Software may include one or more applications and an operating system. Hardware can include, but is not limited to, a processor, memory and graphical user interface display. The location server 1150 may be implemented using hardware, software or a combination thereof and may be implemented in a computer system or other processing system.
- FIG. 7 is a flowchart illustrating an example process 1200 for collecting location information and determining locations visited by a user.
- the method may include obtaining location history data, or it might include operating on pre-existing location history data.
- the process 1200 begins at step 1210 where location history data is collected.
- the location history data can be generated by a mobile device, such as the mobile device 1120 of FIG. 6 , and communicated to the location server 1150 over the mobile network 1100 via access points 1130 and communications network 1110.
- Location history data can also be collected by location server 1150, such as when a user "checks in" at a location using any number of social applications that provide for such check-ins.
- the location history data can be acquired by the mobile device using any of several technologies for determining position.
- the location data can be acquired by the mobile device using a GPS receiver.
- the Global Positioning System is a space-based satellite navigation system that provides location and time information anywhere on or near the Earth where there is an unobstructed line of sight to four or more GPS satellites. The system is freely accessible by anyone with a GPS receiver, and many smart phones and other mobile devices include GPS receivers.
- the location data can also be determined using other techniques, such as proximity to cell towers (or other mobile network access points) of known location, or triangulating between the mobile device and a plurality of such towers.
- location history data can be acquired by the mobile device and stored locally in a memory on the device.
- the location history data can, in some examples, be processed on the mobile device using a processor on the device.
- the location history data can be communicated to the location server for processing.
- location history data can be acquired and transmitted directly to the location server.
- location history data can be stored on the mobile device and transmitted to the location server at predetermined intervals. For example, location history data acquired during a time period, e.g., a day, week, month, etc., can be stored on the mobile device, and transmitted to the location server at the end of that time period.
- the location history data can be acquired and stored on the mobile device until certain conditions are met, e.g., access to a wireless network, and then communicated to the location server.
- the location history data can be stored on the location server, e.g., in digital datastore 1170 of FIG. 6 , until data covering a plurality of days has been received.
- the location history data can include both historical location data as well as current location data.
- Location history data can be acquired by the mobile device at various intervals. In one example, location history data can be acquired by the mobile device at regular intervals during each day. For example, location history data can be acquired several times per minute, once per minute, once per hour, once every two hours, or at any other time interval. For building a location history that is more useful with the methods described herein, more frequent location sampling can be better than employing long intervals between location data acquisitions.
- Location history data can be expressed in a variety of manners. As shown in FIG. 8 , location history data can take the form of information representing a geographic position and point in time, e.g., a latitude 1310, longitude 1312, date 1314, and time 1316. Location history data can also include an accuracy radius 1318 that represents an estimate of the accuracy of that location data point. The accuracy radius can range from meters to kilometers, depending on the type of location data. For example, GPS location data can have an accuracy radius of several meters while cellular network tower location data can have an accuracy radius of several kilometers.
- the location history data can be processed to reduce the plurality of data points to a listing of locations visited by a user, as shown by step 1212 in FIG. 7 .
- the location history data can be processed by the location server 1150.
- the location server 1150 can process and analyze the location history data in FIG. 8 can be processed to generate "visited place" geographic data.
- location history data can be processed to relate the raw location history data to a visited location by calculating a centroid for a cluster of nearby location history data points.
- a cluster of location history data points can be defined as a set of location history data points that are physically close to one another and a centroid can be defined as the geographic center of a cluster of such data points. This can be referred to as distance-based clustering.
- dates and times can be used to further filter the location history data and produce clusters of data points that are proximate in both space and time.
- a plurality of data points gathered during a period when a user is expected to be at home e.g., during the night
- there may be data points that correspond to different locations within the user's house e.g., the kitchen, bedroom, living room, etc.
- the location history data for this period may show small variations in latitude and longitude, but would relate to a single place-the home. Accordingly, such points that are close in geography over time can be treated as a cluster that represents a single place. This type of small variation in position over time can be observed when a user visits a variety of locations, including museums, parks, restaurants, theaters, resorts, etc.
- Clustering by determining a centroid among slightly varying positions can provide a single geographic position to represent the location visited, and can be associated with a time span spent there (e.g., the time spanned from the first to the last location history data point in the cluster).
- clustering can aid in reducing variability in the location history data caused by inaccuracies in the location data collection (e.g., errors in position acquisition from GPS or other sources).
- processing might include reverse geocode lookups to obtain information about the location, such as an address or a business name. Such information can be stored with the location history data.
- these processes can be used to reverse geocode the raw location history data data points and thereby form clusters-for example, by clustering location history data points that relate to a single address. This can be referred to as address-based clustering.
- the data represented by the clustering processes discussed above can take the form of a longitude, latitude, start time, and end time, where the longitude and the latitude are for the centroid and the start and end times represent the time span over which the user was present in a particular place.
- the clustered location history data may also include a radius that can reflect inaccuracies in the location measurement, movement of the person within the cluster, or both.
- the data can reflect multiple visits to the same place within a user's location history data.
- the data can include a vector of visit times, with each visit time including a start time and end time pair.
- the method step 1212 of determining locations visited by a user can also include conducting a local search using a geographic location from a user's location history data, such as a centroid calculated from the raw location history data points.
- a geographic location can include at least a position and a time.
- the geographic location can also include a radius, or distance from the position. This radius can be derived from accuracy information relating to the method of acquiring the geographic location, or it could be based upon variation in position within a cluster. Alternatively, a preselected value for the radius can be used.
- the purpose of conducting a local search is to return destinations or attractions that are proximate to the geographic location. In general, destinations and attractions are businesses, addresses, or other mappable features that can represent places that might have been visited by the user.
- the local search can be conducted on a local search engine.
- Local search engines are search engines that attempt to return business listings and/or relevant web pages within a specific geographical area.
- a user may enter a search query and specify a geographical area near which the search query is to be performed.
- the local search engine can return to the user relevant results, such as listings of businesses in the geographical area and/or relevant web pages pertaining to the geographical area.
- the local search can be conducted by making a call to a local search engine with the geographic location from the user's location history data and a radius in which the search is to be performed.
- the local search might be conducted for a latitude and longitude, along with a radius, such as, for example, 200 meters.
- the latitude and longitude are generally a point or the centroid of a cluster from the user's location history data.
- the radius may be calculated as described above, or it might be preselected, such as 200 meters.
- the 200 meter radius can be helpful if the expected accuracy in the location history data is on the order of 100 meters. In this way, one can be confident that the user's actual destination is within the area searched as part of the local search.
- the local search can return the names of destinations within the radius.
- the local search might also return the distance between the destination or attraction and the geographic location (or otherwise specify its relative position with respect to the geographic location).
- the local search might also return a category for each destination located. For example, a restaurant might return a category of "food,” while a theater might return a category of "theater” or "arts.”
- users can be presented with results from the local search and given the opportunity to select the correct attraction visited. For example, a user can be asked to select one of a plurality of possible attractions returned from a local search. Alternatively, the user can be prompted to enter the name of the attraction visited using a free-form text box. User entry is not required but can increase the accuracy of the local search results. This information can be included in visited location information stored for the user.
- the methods and systems of the present disclosure provide the ability to determine one or more attractions in a geographic area.
- it can be helpful to exclude users living within the geographic area. Excluding these users can be helpful because their daily activities (e.g., going to work, home, grocery stores, etc.) can introduce unwanted noise into the data.
- a geographic area as a city
- including visited location information for residents of the city in determining popular visited locations may introduce large office buildings, apartment complexes, or housing developments into a result set because a large number of residents of the city spend a great deal of time in these locations.
- these are not commonly considered attractions or destinations in a city. Rather, it would be better to produce a listing of destinations or attractions such as parks, museums, theaters, restaurants, etc. in a given city that are frequently visited by users traveling to the city from out of town.
- the process 1200 can include the step 1214 of determining if the locations visited by a user are at least a distance away from a home location associated with the user. This determination can be made by calculating a distance between a geographic position of a location visited (e.g., a position of a centroid, an address reverse geocoded from such a position, etc.) and a geographic position of an associated home location.
- the home location associated with a user can be preset by the user, or can be determined based on analysis of location history data associated with the user. Any desired distance value can be used in this determination, but the value should preferably be large enough to exclude the daily travels of most users living within a geographic area.
- setting the distance value below about 10 miles would likely continue to include the daily commuting activities of residents living within a geographic area.
- the distance value high enough to exclude such residents, information on locations visited can be limited to locations visited by users traveling to the geographic area from another area.
- the distance can be about 200 miles.
- FIG. 9 is a flowchart of an example method for aggregating and analyzing locations visited by a plurality of users and associating popular locations with attractions within the geographic area. If the distance between a location visited by a user and an associated home location of the user is greater than the predetermined distance (e.g., 200 miles), the data associated with the visited location can be utilized in the process 1400 shown in FIG. 9 to determine attractions within a geographic area.
- the process 1400 includes a step 1410 of aggregating information representing locations visited by a user with information representing locations visited by one or more other users, where the locations visited by each user are at least a distance away from a home location associated with the user.
- the data can be aggregated into a form similar to that shown in FIG.
- a table can be constructed in which each row represents a location visited by a particular user.
- the table can include information such as the longitude, latitude, time span, date of the user's visit, and accuracy radius.
- the data can also include information entered by users regarding the particular attraction visited (e.g., if the user selected among a plurality of possible attractions returned during a local search or entered an attraction name manually).
- the aggregated information on locations visited by a plurality of users within a geographic area can provide a heat map that highlights locations visited with great frequency.
- the process 1400 can include a step 1412 for determining these popular or frequently visited locations within the geographic area. This can be accomplished by utilizing a clustering algorithm similar to the process discussed above when determining locations visited by a single user from a plurality of raw location history data points. In this case, however, the raw location history data points are replaced by visited location data points from a plurality of users traveling within the geographic area.
- centroid can be calculated from a group of proximately-spaced visited location data points.
- positions of each visited location can be reverse geocoded and clustered based on the resulting addresses for each location.
- the end result can be a listing of locations that are frequently visited by a plurality of users traveling away from home within a geographic area.
- the clustering process can utilize information from the aggregated visited location data to determine and rank the frequency with which each popular location was visited by the plurality of users.
- the clustering process can report the number of visited location data points used in calculating a centroid (i.e., the number of points in a cluster). Because each visited location data point can represent a visit by a particular user, the number of points utilized in calculating a centroid represents the number of users that visited the location. This number can be used in subsequent analysis to, for example, rank attractions by popularity, etc.
- Clustering can produce a listing of one or more popular locations and each location can have associated therewith a geographic position (e.g., a latitude and longitude), an accuracy radius, an array of visit times (e.g., a listing of start and end time pairs for each user's visit), and a number of visitors.
- each location can also have associated therewith an array containing attractions names selected or inputted by each user as described above.
- the process 1400 can also include a step 1414 for associating the one or more popular locations with attractions located at or near to each popular location.
- the step 1414 can include the use of a local search engine to determine one or more possible attractions based on the geographic position of the popular location.
- the search can be limited to one or more categories of results representative of attractions and/or destinations in a geographic area. These can include, for example, "attractions,” “theaters,” “restaurants,” “parks,” etc.
- Results listings returned from a local search engine can also be augmented by data collected from individual users via check-ins, status updates, user attraction labeling, or other sources of information (e.g., pictures featuring the attraction, emails mentioning the attraction, etc.). For example, if a local search based on the position of a popular location returns two or more possible attractions for the location, but a large number of users who visited the popular location provided check-in information or otherwise identified one of the possible attractions, this information can be used to select the correct attraction. By way of further example, if data representing a popular location includes an array of user-inputted or selected attraction names, the array can be cross-referenced with the local search results to select the correct attraction.
- a system can determine if a user is traveling within, or planning to travel to, a geographic area. For example, if a user activates his or her mobile device after getting off an airplane, the mobile device may report that the location of the user is far away from an associated home location for the user (e.g., the user may be in a different city, state, or country).
- the method can include step 1512 for collecting attraction data for the geographic area in which the user is traveling.
- the method can include, for example, accessing location history data collected as discussed above and analyzing the data to determine a listing of popular attractions within the geographic area. This listing can be presented to the user via the mobile device, as shown by step 1514.
- method step 1510 can include determining in advance if a user is planning to travel to a particular geographic area. This determination can be made in a number of ways, including, for example, by analyzing emails (e.g., emails including travel itineraries, tickets purchases, etc.), calendar information, social media interactions (e.g., discussions of an upcoming trip, etc.), search engine queries (e.g., "hotels in Paris, France,” etc.), and other sources of information. If planned travel to a geographic area is indicated by any of these sources, the method can include collecting and analyzing data from other users traveling within the area as discussed above, and presenting popular attraction data to the user via, for example, recommended activities, advertisements, search engine results, etc.
- emails e.g., emails including travel itineraries, tickets purchases, etc.
- calendar information e.g., social media interactions (e.g., discussions of an upcoming trip, etc.), search engine queries (e.g., "hotels in Paris, France,” etc.), and other sources of information. If planned travel
- each component of the methods and systems described herein can be configured to execute continually or periodically on either a fixed schedule or upon demand.
- Location history data for a particular user for example, can be collected continually or periodically by a mobile device and communicated to a location server 1150 or other system component immediately upon acquisition or periodically.
- the reduction processes of clustering location history data points to determine locations visited by a user, the aggregation of visited locations from a plurality of users traveling away from their home locations, the clustering of visited locations to determine popular locations, and the association of popular locations with attractions can be conducted continually or periodically.
- results from the methods described herein can be added incrementally to previously compiled results, such that a history of popular attractions over time can be developed and computing resources can be conserved.
- the processes for collecting location history data described herein can run continually, and the process of determining locations visited from the raw location history data can be run on a nightly basis.
- the processes described herein for aggregating collected information from a plurality of users and determining popular attractions can be run on a weekly basis and the results can be combined with previously-compiled attraction data.
- the data utilized in determining popular attractions in a geographic area can be filtered using a variety of criteria to produce results for a particular time period or for a particular user. For example, in some examples, data can be filtered by date to determine popular attractions for a given time period, such as a season (e.g., summer), a month, etc. By filtering the data in this manner, seasonal or other time-dependent attractions can be highlighted or excluded (e.g., baseball stadiums are less likely to be popular attractions during winter months, etc.). Alternatively, data from all available time periods can be utilized to provide a comprehensive listing of popular attractions in a geographic area over time.
- data can be filtered based on one or more characteristics of a user to provide results more likely to be accurate for the user. For example, if a user having one or more characteristics associated therewith (e.g., age, sex, interests, occupation, etc.) conducts a search for attractions in a given city, the methods disclosed herein can aggregate information representing locations visited by a plurality of users where each user included in the data set has associated therewith one or more similar characteristics. Accordingly, a listing of popular attractions presented to the user can represent attractions frequently visited by other similar users (e.g., other males of similar age, other users with children, etc.). The one or more characteristics can be collected or inferred from information entered by the user in a personal profile, status updates, emails, calendaring information, etc., subject to user opt-in and in accordance with any existing privacy policies.
- characteristics associated therewith e.g., age, sex, interests, occupation, etc.
- the one or more characteristics can be collected or inferred from information entered by the user in a
- a technique includes receiving, by a computing system, e.g., maps server 150, an indication of a current location of a mobile device, and retrieving, by the computing system, a maps search history associated with a user of the mobile device, the maps search history including a plurality of elements associated with map-based queries previously submitted by the use.
- the technique also includes determining, by the computing system, that one or more elements of the plurality of elements are relevant to the current location of the mobile device, and sending, by the computing system, to the mobile device, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
- determining that the one or more elements of the plurality of elements are relevant to the current location of the mobile device may include, for each respective element of the plurality of elements, associating a respective geographical location with the respective element and adding the respective element to a set of relevant elements if the respective geographical location is within a predetermined threshold distance of the current location of the mobile device.
- the plurality of elements includes a directions query, and associating includes associating the directions query with a source geographical location and a destination geographical location. In some examples, the plurality of elements includes a query that returns a plurality of places. In some examples, the query includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query. In some examples, associating includes associating with the query the geographical locations of only those places that are indicated by the one or more click entries.
- the technique also includes de-duplicating the relevant elements by at least sending the relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map, and replacing the relevant elements with the extracted set of elements.
- the technique also includes sorting the relevant elements based on at least one of: a proximity of a geographical location associated with each element to the current location of the mobile device; a frequency with which a query corresponding to each element was executed by the user; and how recently a query corresponding to each element was executed by the user.
- the technique also includes sending the information includes sending a notification including information relating to an element of the relevant elements.
- a computing system e.g., maps server 150
- the at least one processor is disposed within at least one of the mobile device and a server. In some examples, the at least one module is further operable by the at least one processor to send, to the mobile device, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
- the at least one module is further operable by the at least one processor to provide, to a display module that displays information, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
- the at least one module is further operable by the at least one processor to, for each respective element of the plurality of elements, associate a respective geographical location with the respective element and adding the respective element to a set of relevant elements if the respective geographical location is within a predetermined threshold distance of the current location of the mobile device.
- the plurality of elements includes a directions query, wherein the at least one module is further operable by the at least one processor to associate the directions query with a source geographical location and a destination geographical location.
- the plurality of elements includes a query that returns a plurality of places and that includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query.
- the maps history processing module associates the query with the geographical locations of only those places that are indicated by the one or more click entries.
- the maps history processing module de-duplicates the relevant elements by at least sending the relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map; and replacing the relevant elements with the extracted set of elements.
- the maps processing module sorts the relevant elements based on at least one of: a proximity of a geographical location associated with each element to the current location of the mobile device; a frequency with which a query corresponding to each element was executed by the user; and how recently a query corresponding to each element was executed by the user.
- a computer-readable storage medium (e.g., on maps server 150) stores instructions that, when executed, cause at least one processor of a computing device to receive an indication of a current location of a mobile device, retrieve a maps search history associated with a user of the mobile device, the maps search history including a plurality of elements associated with map-based queries previously submitted by the user, determine that one or more elements of the plurality of elements are relevant to the current location of the mobile device, and send, to the mobile device, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
Description
- Many software applications are capable of displaying interactive geographical maps to a user. These applications can be executed using a computer system such as a laptop computer, mobile phone, desktop computer, or tablet computer, and can include provisions for a user to search a map for geographical locations or points of interest, get directions from one geographical location to another, or view one or more information layers on the map (e.g., satellite images, traffic conditions, topography, political boundaries, and so forth).
- Users may conduct maps searches using these applications for any number of reasons. For example, a user who is planning a trip may perform one or more maps searches in advance of the trip to obtain information about their destination (e.g., to get directions from the user's destination airport to the user's hotel, or to find restaurants near the user's hotel). To retrieve this information later during the actual trip, the user must manually return to their maps application and repeat their search, which can be cumbersome and time-consuming for the user.
- In addition, tourists and other travelers are often challenged by the task of deciding what to do when visiting a city, state, country, or other area. Because number of different attractions, (including resorts, museums, parks, theaters, etc.) may be available it can be difficult to survey and select attractions during a particular visit. An entire industry has developed in response to this challenge, with a variety of sites and services soliciting lists of attractions visited and reviews thereof, and subsequently offering these lists and/or reviews to other travelers as a resource.
- Many existing solutions have a number of drawbacks, however. Some solutions, for example, require that a user manually records and enters information about any attraction visited when traveling. The comprehensiveness of such information is often incomplete, however, as many users (e.g., those on vacation) may not be interested in manually recording information about their visits.
- US patent application publication no.
US2002/0052674 describes a system and method which combine mobile information device, server computer, and a task manager to provide the mobile information device user to retrieve the information corresponding to the user's current location from a server computer over Internet. The task manager schedules search events and chooses geographic search area to retrieve user's nearby information along the travel path. The task manager is accessible to an automatic positioning system to track user's mobile position and to predict the future travel path. The task manager uses the query turn-around time to plan and schedule before reaching the next desired area and further uses historical search criteria to reduce the search results of current search criteria before transmitting the final results through the wireless communication bottleneck. - In accordance with aspects of the invention, there are provided a method, a computing device and a computer-readable storage medium, as recited in the accompanying claims.
- Techniques of this disclosure generally involve storing a historical record of a user's maps searches (a maps history), and providing a user with relevant information about elements in their maps history based on the user's current location (based on, e.g., a current location of a computing device associated with the user). Such elements can include generic queries, specific queries, direction queries, click entries, places, and so forth. In some examples, the location of a mobile device associated with the user is provided to a server, which in turn processes the user's maps history to determine which elements from the maps history may be relevant to the mobile device's current location. Elements that are determined to be of possible relevance, and/or information relating thereto, can then be presented to the user, in many instances decreasing the time and effort required for the user to access relevant location-based information.
- In one aspect, a method for generating a list of contextually-relevant elements using a computer processor is provided. The method can include receiving information indicative of a current location of a user and storing the information in a memory. The method can also include fetching a maps search history associated with the user, the maps search history comprising a plurality of elements corresponding to map-based queries executed by the user during a historical time period. The method can also include, using a processor coupled to the memory, determining whether each of the plurality of elements is relevant to the user's 6375802-1 current location and adding elements determined to be relevant to a list of relevant elements. The method can also include storing the list of relevant elements in the memory.
- The method can include associating a geographical location with each of the plurality of elements and adding an element to the list of relevant elements if the geographical location associated therewith is within a predetermined threshold distance of the user's current location.
- The plurality of elements can include a directions query, and the method can include associating the directions query with a source geographical location and a destination geographical location. The plurality of elements can include a query that returns a plurality of places and the query can include one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query. The method can also include associating with the query the geographical locations of only those places that are indicated by the one or more click entries.
- The method can also include de-duplicating the list of relevant elements by sending each element in the list of relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map, and replacing the list of relevant elements with the extracted set of elements.
- The method can also include sorting the list of relevant elements based on at least one of a proximity of a geographical location associated with each element to the user's current location, a frequency with which a query corresponding to each element was executed by the user, and a recency with which a query corresponding to each element was executed by the user. The method can also include outputting the list of relevant elements to a mobile device associated with the user and/or sending a notification to a mobile device associated with the user including information relating to an element in the list of relevant elements.
- In another aspect, a system for providing a list of contextually-relevant elements is provided. The system can include a processor and a memory having instructions stored thereon for execution by the processor. The instructions can include a location receiving module that receives information indicative of a current location of a user and a database interface module that fetches a maps search history associated with the user, the maps search history comprising a plurality of elements corresponding to map-based queries executed by the user during a historical time period. The instructions can also include a maps history processing module that processes the maps search history to determine whether each of the plurality of elements is relevant to the user's current location and adds elements determined to be relevant to a list of relevant elements.
- The processor can be disposed within at least one of a mobile device and a server. The maps history processing module can associate a geographical location with each of the plurality of elements and add an element to the list of relevant elements if the geographical location associated therewith is within a predetermined threshold distance of the user's current location.
- The plurality of elements can include a directions query, and the maps history processing module can associate the directions query with a source geographical location and a destination geographical location. The plurality of elements can include a query that returns a plurality of places and that includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query. In some examples, the maps history processing module can associate the query with the geographical locations of only those places that are indicated by the one or more click entries.
- The maps history processing module can de-duplicate the list of relevant elements by sending each element in the list of relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map, and replacing the list of relevant elements with the extracted set of elements.
- The maps processing module can sort the list of relevant elements based on at least one of a proximity of a geographical location associated with each element to the user's current location, a frequency with which a query corresponding to each element was executed by the user, and how recently a query corresponding to each element was executed by the user.
- The instructions can also include an output module that outputs the list of relevant elements to a mobile device associated with the user or sends a notification to the mobile device including information relating to an element in the list of relevant elements.
- In another aspect, a mobile device is provided that includes a processor and a memory having instructions stored thereon for execution by the processor. The instructions can include a location determining module that estimates a current location of the mobile device and a database interface module that fetches a maps search history associated with a user of the mobile device, the maps search history comprising a plurality of elements corresponding to map-based queries executed by the user during a historical time period. The instructions can also include a maps history processing module that processes the maps search history to determine whether each of the plurality of elements is relevant to the mobile device's current location and adds elements determined to be relevant to a list of relevant elements. The instructions can also include a display module that displays information relating to at least one element in the list of relevant elements.
- In view of the above, examples described herein provide systems and methods for determining attractions based on location history data collected from one or more users traveling away from a home location within a geographic area. In general, location history data can be captured, for example, automatically using a mobile device associated with each user. Location history data can be analyzed on a per user basis to determine locations visited by the user within the geographic area. Data representing these locations can then be combined with data collected from one or more other users to develop a "heat map" of locations visited by a plurality of users that are traveling away from home within the geographic area. Local search technology can be utilized to associate popular locations visited by a large number of users with attractions that are located nearby. This association allows a list of attractions within a geographic area to be developed, and individual attractions within the area can be ranked according to the frequency of visits by traveling users.
- More specifically, in a first aspect, a method for generating a list of attractions in a geographic area using a computer processor is provided, the method including collecting location history data for a plurality of users within the geographic area and storing the location history data in a datastore. The method further includes determining by a processor in communication with the datastore one or more locations visited by each of the plurality of users, where the one or more locations visited by each user is at least a distance away from a home location of the user. The method also includes determining by the processor one or more popular locations within the geographic area based on the one or more locations visited by the plurality of users, and associating by the processor the one or more popular locations with one or more attractions located near the one or more popular locations.
- In another aspect, a system for generating a list of attractions in a geographic area is provided, the system including a location data receiving module that receives location history data from a mobile device, and a location data processing module. The location data processing module includes a processor and a memory having instructions stored thereon. The instructions stored on the memory can cause the processor to determine one or more locations visited by the mobile device based on received location history data from the mobile device. The instructions can also cause the processor to determine if the one or more locations visited by the mobile device are at least a distance away from a home location associated with the mobile device. Furthermore, the instructions can cause the processor to aggregate the one or more locations visited by the mobile device that are at least the distance away from the home location with one or more additional locations visited by one or more additional mobile devices that are also at least the distance away from an associated home location. With this data, the instructions can cause the processor to determine one or more popular locations based on the one or more locations visited by the mobile device and the one or more additional mobile devices, and to associate one or more attractions within the geographic area with the one or more popular locations.
- In still another aspect, a method for providing suggestions of attractions within a geographic area to a user is provided, the method including aggregating locations visited by a plurality of users and storing the locations visited in a datastore, where each of the locations visited is determined to be at least a distance away from a home location associated with the user visiting the location. The method can also include determining by a processor in communication with the datastore one or more popular locations within the geographic area based on the locations visited by the plurality of users, and associating by the processor one or more attractions within the geographic area with the one or more popular locations. Finally, the method can include presenting the one or more attractions within the geographic area to the user.
- In a further example aspect, a method includes aggregating, by a computing system, location history data for a plurality of mobile devices for locations within a geographic area, and determining, by the computing system, based on the location history data, one or more locations at which at least a threshold number of the plurality of mobile computing devices were present, where each of the one or more locations is at least a predetermined distance away from a home location of associated with each respective mobile device. The method also includes determining, by the computing system, based on the determined one or more locations at which each of the plurality of mobile computing devices was present, one or more popular locations within the geographic area, and associating, by the computing system, the one or more popular locations with one or more attractions located near the one or more popular locations.
- In a further example aspect, a computing system includes at least one processor, and at least one module operable by the at least one processor to aggregate location history data for a plurality of mobile devices for locations within a geographic area, and determine, based on the location history data, one or more locations at which at least a threshold number of the plurality of mobile computing devices were present, where each of the one or more locations is at least a predetermined distance away from a home location of associated with each respective mobile device. The at least one module is also operable to determine, based on the determined one or more locations at which each of the plurality of mobile computing devices was present, one or more popular locations within the geographic area, and associate the one or more popular locations with one or more attractions located near the one or more popular locations.
- In another example, a computer-readable storage medium stores instructions that, when executed, cause at least one processor of a computing device to aggregate location history data for a plurality of mobile devices for locations within a geographic area, and determine, based on the location history data, one or more locations at which at least a threshold number of the plurality of mobile computing devices were present, where each of the one or more locations is at least a predetermined distance away from a home location of associated with each respective mobile device, determine, based on the determined one or more locations at which each of the plurality of mobile computing devices was present, one or more popular locations within the geographic area, and associate the one or more popular locations with one or more attractions located near the one or more popular locations.
- The systems and methods described above can have a number of variations and additional features. For example, in some examples, the location history data can include information representing a date, time, and geographic position. The geographic position can include, for example, a latitude and longitude coordinate position, as well as an accuracy radius. The location history data can be collected in a variety of manners. In some examples, collecting location history data for a plurality of users can include receiving location history data from a plurality of mobile devices being operated by the plurality of users (e.g., a smart phone being carried by each user).
- When determining whether one or more locations visited by a user are at least a distance away from a home location associated with the user, any suitable distance can be utilized. In some examples, the distance can be about 200 miles. In other examples, however, the distance can be greater or less than about 200 miles. The distance can be selected to achieve a high probability that locations greater than the distance from a home location are likely to be visited during travel away from home (e.g., vacation, business travel, etc.).
- As described in more detail below, location history data can include a large number of data points representing a series of geographic positions of a device and/or user at particular dates and times. A number of different algorithms can be applied by the systems and methods described herein to reduce location history data to one or more locations visited by the device and/or user. For example, in some examples, a clustering algorithm can be utilized to determine which data points are proximate in both space and time. Proximate location history data points can be reduced to a single location visited by, for example, determining a centroid of the proximate data points along with a period of time spent at the location. In some examples, determining one or more locations visited by each of a plurality of users can include utilizing such a clustering algorithm on the location history data collected from each user.
- In some examples, a clustering algorithm can be applied one or more times to filter results and reduce signal noise when determining attractions in a geographic area. For example, a clustering algorithm can be applied to determine one or more locations visited by a user from a plurality of data points representing location history data. In addition, a clustering algorithm can also be used to determine one or more popular locations visited by a plurality of users after data representing locations visited by the plurality of users is aggregated together.
- In addition to determining geographic positions of popular locations in an area, systems and methods of this disclosure can also utilize local search technology to associate an attraction with each popular location. In some examples, a local search based on the position of a popular location can be limited to one or more categories of results (e.g., attractions, parks, etc.).
- The systems and methods described herein can be executed and evaluated continually or periodically. For example, in some examples, techniques of the disclosure can be configured to analyze collected location history data every evening, every week, every month, etc. Furthermore, locations and other information determined from processing location history data can be added incrementally to results previously developed using older location history data. By adding incrementally to previous results, computational resources can be conserved and results spanning various time frames can be presented.
- To this end, in some examples, data representing locations visited by a plurality of users can be filtered based on the date and/or time of the visits. For example, data representing locations visited by a plurality of users can be filtered to include only visits during the summer months, or during a specific month or year. This time-period filtering can aid in producing, for example, a season-specific listing of attractions for a given area (e.g., a historic baseball stadium is likely not a popular attraction during winter in the northern United States).
- In other examples, filtering can be done based on characteristics of a user. For example, a user having one or more characteristics (e.g., age, marital status, sex, interests, etc.) can be shown attractions popular with other users sharing similar characteristics (e.g., others of similar age, marital status, sex, interests, etc.). This can be done by aggregating only data from a plurality of other users that each shares the one or more characteristics in common with the user.
- The details of one or more examples are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the disclosure will be apparent from the description and drawings, and from the claims.
-
-
FIG. 1 is a schematic diagram of one example of a mobile network; -
FIG. 2 is a schematic diagram of one example of a computer system; -
FIG. 3 is a schematic diagram of one example of a maps server; -
FIG. 4 is a flowchart that schematically depicts an example process for providing information about relevant elements from a user's maps history to the user based on a mobile device's location; -
FIG. 5 is a schematic diagram of one example of a mobile device; -
FIG. 6 schematically illustrates an example mobile network according to aspects of the invention; -
FIG. 7 is a flowchart of an example method for collecting and analyzing location history data for a user within a geographic area; -
FIG. 8 is a table illustrating example location history data; -
FIG. 9 is a flowchart of an example method for aggregating and analyzing locations visited by a plurality of users and associating popular locations with attractions within the geographic area; and -
FIG. 10 is a flowchart of an example method for presenting popular attractions within a geographic area to a user. - Systems and methods are disclosed herein that generally involve storing a historical record of a user's maps searches (a maps history), and providing a user with relevant information about elements in their maps history based on the location of a mobile device associated with the user. Such elements can include generic queries, specific queries, direction queries, click entries, places, and so forth. In some examples, the mobile device's location is provided to a server, which in turn processes the user's maps history to determine which elements from the maps history may be relevant to the user's current location. Elements that are determined to be of possible relevance, and/or information relating thereto, can then be presented to the user, in many instances decreasing the time and effort required for the user to locate map-based information for which they are searching.
- Certain examples will now be described to provide an overall understanding of the principles of the structure, function, manufacture, and use of the systems and methods disclosed herein. One or more examples of these examples are illustrated in the accompanying drawings. Those skilled in the art will understand that the systems and methods specifically described herein and illustrated in the accompanying drawings are non-limiting examples. The features illustrated or described in connection with one example may be combined with the features of other examples. Such modifications and variations are intended to be included within the scope of the present disclosure.
- In situations discussed below in which systems and devices collect or make use of personal information about the user (e.g., search histories, location, etc.) the user may be provided with an opportunity to control whether programs or features of the systems and devices can collect user information (e.g., information about a user's e-mail, a user's social network, social actions or activities, profession, a user's preferences, user's Internet search history, a user's current location, etc.), or to control whether and/or how to the systems and devices may receive content that may be relevant to the user. In addition, certain data may be treated in one or more ways before it is stored or used by the systems and devices, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined about the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about the user and used by the systems and devices described herein.
-
FIG. 1 illustrates an example of amobile network 100 in which one or more of the techniques disclosed herein can be implemented. Themobile network 100 includes acommunications network 110 and amobile device 120. Themobile device 120 can connect to thecommunications network 110 via various access points 130. Although onemobile device 120 and oneaccess point 130 are illustrated for brevity, themobile network 100 can include any number of mobile devices and access points. - The
mobile device 120 can be or can include any device that is configured to exchange data over thecommunications network 110, such as a mobile phone, tablet computer, laptop computer, and so forth. Themobile device 120 can also be or can include devices that are not necessarily "mobile," such as desktop computers. Thecommunications network 110 can include any of a variety of networks or combinations of networks, such as GSM, TDMA, CDMA, IEEE 802.11, Bluetooth, Wi-Fi, or any other wired or wireless networks. The access points 130 can be transceivers that provide a gateway between themobile device 120 and thecommunications network 110. For example, theaccess points 130 can be wireless routers or cellular network towers. In some examples, themobile device 120 can also receive Global Positioning System (GPS) signals transmitted fromGPS satellites 140. - In the illustrated example, the
mobile network 100 also includes amaps server 150 that can exchange data with themobile device 120 via thecommunications network 110. Themaps server 150 can be implemented on one or more computer systems (e.g., server computers, personal computers, workstations, mini-computers, clustered computer systems, or embedded computer systems). Some or all of themaps server 150 functionality can also be implemented on themobile device 120 itself. - As used throughout this disclosure, the phrase "current location" refers to a location at a particular time. In various instances,
mobile device 120 may have physically moved to a different geographic location between the time at which the current location was first determined and the present moment. Even so, the "current location" ofmobile device 120 is determined to be the location at which the device was physically located at the moment that the location was last determined. The same "current location" may be used throughout the prediction process even though updated current locations may be determined during the prediction process. In general, a "current location" ofmobile device 120 may be any location within a threshold distance surrounding the determined current location. Similarly, the phrase "current time" refers to a particular time at whichmobile device 120 determined the "current time" and may be the same time used throughout the prediction process even though the literal current time may change by fractions of a second, a second, or some other amount during the prediction process. -
FIG. 2 illustrates an example architecture of acomputer system 200 which can be used to implement themobile device 120 or themaps server 150 ofFIG. 1 . Although anexample computer system 200 is depicted and described herein, it will be appreciated that this is for sake of generality and convenience. In other examples, the computer system may differ in architecture and operation from that shown and described here. - The illustrated
computer system 200 includes aprocessor 202 which controls the operation of thecomputer system 200, for example by executing an operating system (OS), device drivers, application programs, and so forth. Theprocessor 202 can include any type of microprocessor or central processing unit (CPU), including programmable general-purpose or special-purpose microprocessors and/or any of a variety of proprietary or commercially-available single or multi-processor systems. Thecomputer system 200 also includes amemory 204, which provides temporary or permanent storage for code to be executed by theprocessor 202 or for data that is processed by theprocessor 202. Thememory 204 can include read-only memory (ROM), flash memory, one or more varieties of random access memory (RAM), and/or a combination of memory technologies. The various elements of thecomputer system 200 are coupled to abus system 206. The illustratedbus system 206 is an abstraction that represents any one or more separate physical busses, communication lines/interfaces, and/or multi-drop or point-to-point connections, connected by appropriate bridges, adapters, and/or controllers. - The
computer system 200 also includes anetwork interface 208, an input/output (I/O)interface 210, astorage device 212, and adisplay controller 214. Thenetwork interface 208 enables thecomputer system 200 to communicate with remote devices (e.g., other computer systems) over a network. The I/O interface 210 facilitates communication between one or more input devices, one or more output devices, and the various other components of thecomputer system 200. Thestorage device 212 can include any conventional medium for storing data in a non-volatile and/or non-transient manner. Thestorage device 212 can thus hold data and/or instructions in a persistent state (i.e., the value is retained despite interruption of power to the computer system 200). Thestorage device 212 can include one or more hard disk drives, flash drives, USB drives, optical drives, various media disks or cards, and/or any combination thereof and can be directly connected to the other components of thecomputer system 200 or remotely connected thereto, such as over a network. Thedisplay controller 214 includes a video processor and a video memory, and generates images to be displayed on one or more displays in accordance with instructions received from theprocessor 202. - The various functions performed by the
maps server 150 or themobile device 120 can be logically described as being performed by one or more modules. It will be appreciated that such modules can be implemented in hardware, software, or a combination thereof. It will further be appreciated that, when implemented in software, modules can be part of a single program or one or more separate programs, and can be implemented in a variety of contexts (e.g., as part of an operating system, a device driver, a standalone application, and/or combinations thereof). In addition, software embodying one or more modules can be stored as an executable program on one or more non-transitory computer-readable storage mediums. Functions disclosed herein as being performed by a particular module can also be performed by any other module or combination of modules, and themaps server 150 or themobile device 120 can include fewer or more modules than what is shown and described herein. -
FIG. 3 is a schematic diagram of the modules of one example of themaps server 150. As shown inFIG. 3 , themaps server 150 can include alocation receiving module 300 configured to receive location data. For users who opt in, and in accordance with published privacy policies, the location data can be indicative of the current location of the user. - In some instances, the current location of a user can be inferred from the current location of a mobile device or other object in the user's possession. In the example of
FIG. 1 , themobile device 120 can be configured to periodically communicate its current location to thelocation receiving module 300 using themobile network 100. This can occur several times per minute, once per minute, once per hour, or at any other regular or sporadic time interval. Themobile device 120 can determine or estimate its current location using any of a variety of known techniques, such as by processing GPS signals, by detecting proximity to cell towers, Wi-Fi hot spots, or othermobile access points 130 of known location, or by triangulating between themobile device 120 and a plurality of such access points 130. One example of a computer program for obtaining a user's current location is a geolocation API. This program provides the best estimate of a mobile device's location using a number of onboard or server-based sources (called location providers). - The
location receiving module 300 can also receive the mobile device's current location and/or the location of the user from other sources, such as when a user "checks in" at a location using any of a number of social applications that provide for such check-ins, when the user indicates their current position by dropping a pin at a particular location or making an equivalent selection using mapping software, or when the user responds to a prompt for their current position. It will be appreciated that the location data received by thelocation receiving module 300 need not necessarily be indicative of the mobile device's current location. Rather, the user can also provide some other location, such as a location that the user has visited in the past or plans to visit in the future, in order to obtain maps history information relevant to that location. - The location data received by the
location receiving module 300 can be arranged in a format that includes a longitude, a latitude, and an accuracy radius. The accuracy radius can represent an estimate of the accuracy of the current location data. The accuracy radius can range from meters to kilometers depending on the source of the location data. For example, location data derived from GPS signals can have an accuracy radius of several meters while location data derived from triangulation of cell towers can have an accuracy radius of several kilometers. Thelocation receiving module 300 can also receive raw proximity or other data from themobile device 120 and can perform any necessary triangulation or location calculations on the server side. - The
maps server 150 can also include adatabase interface module 302 which can be configured to communicate with a database in which the user's maps history is stored. The database can be stored on themobile device 120, on themaps server 150, and/or in other locations, such as a cloud-based repository. For users who opt in, and in accordance with published privacy policies, the database can be updated each time the user initiates a maps search to store the search query entered by the user as an element in the user's maps history. The database can store the user's maps searches, only maps searches that occurred during a predetermined time period (e.g., the last 24 hours, the last 7 days, the last 30 days, the last year, or since the user last cleared their maps history), or any other subset of the user's maps searches. A maps search can be associated with a particular user, and thereby added to the user's maps history, if it is executed on a device associated with the user, or if the user identifies themselves at the time of initiating the maps search (e.g., by supplying a username and password or other login credentials). Accordingly, a user's maps history can include elements from a plurality of devices (e.g., searches conducted by the user on their desktop computer as well as searches conducted by the user on their phone). Thedatabase interface module 302 can execute various operations with respect to the maps history database, such as reading information from the database, writing information to the database, or querying the database. - The
maps server 150 can also include a mapshistory processing module 304. The mapshistory processing module 304 can instruct thedatabase interface module 302 to retrieve the user's maps history from the maps history database. The mapshistory processing module 304 can then process the elements of the user's maps history to determine which elements are relevant to the location data received by thelocation receiving module 300 and to generate a list of said elements, as described below. - The
maps server 150 can also include anoutput module 306 configured to output a list of relevant elements from the maps history, or to output information about one or more of the relevant elements. The list or other information can be sent as a data transmission via themobile network 100 to themobile device 120, which can in turn be configured to display or otherwise present the list or other information to the user. The presentation to the user can be in a standalone application, or in the mobile device's native mapping software, e.g., upon actuating a button or other user interface element. - In situations herein in which the
location receiving module 300 collects or makes use of personal information about the user (e.g., search histories, location, etc.), the user may be provided with an opportunity to control whetherlocation receiving module 300 can collect user information or to control whether and/or howlocation receiving module 300 may receive content that may be relevant to the user. In addition,location receiving module 300 may treat certain data in one or more ways before it is stored or used bylocation receiving module 300 so that personally identifiable information is removed. Thus, the user may have control over how information (e.g., data) is collected about the user and used bylocation receiving module 300 as described herein. -
FIG. 4 is an flowchart illustrating an example process for providing information about relevant elements from a user's maps history based on the mobile device's location. While various aspects disclosed herein may be shown in relation to a flowchart or flowcharts, it should be noted that any ordering of method steps implied by such flowcharts or the description thereof is not to be construed as limiting the method to performing the steps in that order. Rather, the various steps of each of the methods disclosed herein can be performed in any of a variety of sequences. In addition, as the illustrated flowchart(s) are merely examples, various other methods that include additional steps or include fewer steps than illustrated are also within the scope of the present disclosure. - The illustrated method, which in some examples can be executed by the
maps server 150, begins at step S400 where a user's current location, or another location specified by the user, is received. - The method continues at decision block D402, where it is determined whether the user's current location has changed since the last time the method was executed. If no change is detected ("NO" in decision block D402), execution returns to step S400 and the process repeats. The decision as to whether a change in location has occurred can be made based on the degree to a which a mobile device's location has changed, such that movement of the user a short distance is not flagged as a location change, and only changes in location that exceed a predetermined distance threshold (e.g., 1 mile, 10 miles, 100 miles, etc.) are flagged.
- When a change in location is detected, e.g., when the user arrives at an out of town airport ("YES" in decision block D402), execution proceeds to step S404. In step S404, the
database interface module 302 of themaps server 150 can fetch the user's maps history from a database. In some examples, queries as entered by the user in a mapping application can be stored as elements in the maps history. Such queries can include generic queries (e.g., "pizza Mountain View, CA"), specific queries (e.g., "1234 Pleasant Parkway, Mountain View, CA"), directions queries (e.g., "SFO airport to 1234 Pleasant Parkway, Mountain View, CA"), and so forth. One or more click entries can also be stored in the maps history in association with a query, indicating places returned by the query that the user clicked on or otherwise selected. Click entries can be stored in the maps history by their cluster identifier ("CID"). A CID is unique identifier assigned by a mapping application to each place in the universe of places that can possibly be returned by querying the mapping application. For example, each place listed in a local index used by a maps software can be assigned a unique CID. - In step S406, the maps
history processing module 304 of themaps server 150 can associate each query from the user's maps history with a geographical location. For example, processes known as geocoding and reverse geocoding can be used to convert queries in the maps history into geographic coordinates and vice versa. Geocoding refers to a process in which a query (e.g., a human-readable address such as "1234 Pleasant Parkway, Mountain View, CA") can be converted to location data in geographic coordinates (e.g., latitude 37.423021 and longitude - 122.083739). Reverse geocoding refers to the reverse process, i.e., converting geographic coordinates into an address, place, etc. One example of a computer program for geocoding and reverse geocoding is a geocoding API. This program can accept geographic coordinates and return a corresponding place or address, and vice versa. Generic queries (e.g., "pizza Mountain View, CA") can be associated with the geographical location of the first search result returned by the query, or with the geographical center of a city or town specified in the query (Mountain View, CA in this example). Specific queries (e.g., "1234 Pleasant Parkway, Mountain View, CA") can be associated with their corresponding geographic location (latitude 37.423021 and longitude -122.083739 in this example). - The geographical location data associated with each query from the user's maps history can be specified as a latitude-longitude pair, as a latitude-longitude pair with an accuracy radius, or in some other format. Geographical location data generated for each query from the user's maps history can be stored by the
maps server 150. - Execution then proceeds to step S408, in which the maps
history processing module 304 can filter out queries that are far from the user's current location. For example, the geographical location data generated for each query in step S406 can be compared to a geographical location corresponding to the user's current location, or some other location specified by the user, to assess their proximity. Queries that are associated only with places that are more than a predetermined threshold distance from the user's current location (e.g., 10 meters, 100 meters, 1 kilometer, 1 mile, 10 miles, 100 miles, etc.), after taking into account any associated accuracy radii, can be discarded and the remaining queries can be added to a list of relevant elements for subsequent processing. The predetermined threshold distance can be fixed or can vary depending on any of a number of factors, such as the quantity of queries in the user's maps history. In some examples, the predetermined threshold distance can be selected so as to obtain at least a minimum number of elements and less than a maximum number of elements in the list. - In step S410, the maps
history processing module 304 can determine whether each query includes one or more click entries. As noted above, a click entry can be stored in the user's maps history in association with a query when the query is executed and the user clicks on or otherwise selects one or more of the query results. For example, a user might execute a maps query for restaurants near a particular hotel that returns several places. If the user clicks on two of the places, click entries corresponding to the places the user clicked on can be stored in the user's maps history in association with the initial query. If it is detected in step S410 that a query includes one or more associated click entries, the query can be replaced in the list of elements with the click entries. Thus, in the example above, the query "restaurants near hotel A" can be replaced with click entries "restaurant B" and "restaurant C" (corresponding to the two restaurants that the user had previously clicked on). - In step S412, any click entries added to the list of elements can be geocoded to produce corresponding location data (e.g., a latitude-longitude pair or a latitude-longitude pair with an associated accuracy radius). For example, the CID associated with each click entry can be geocoded. It can be more computationally efficient to geocode the click entries in a separate step, after discarding queries that are distant from the users current location, as is done in the illustrated example. This way, queries that are distant from the user's current location only trigger one geocode operation. If the click entries were geocoded before discarding queries (e.g., in step S406), queries that are distant from the user's current location would instead trigger N geocode operations (N being equal to the number of click entries associated with the query).
- The maps
history processing module 304 can be further configured to de-duplicate the query list. De-duplication can be performed to handle instances in which more than one element in the list corresponds to the same place. This can occur when a user searches for the same place in different ways, for example by searching for their hotel by address and then searching for their hotel by name. By way of further example, a user's maps history might include queries such as "pizza mountain view, CA", "pizza, mountain view", "pizza mtn view", and "pizzza mountain view" which all correspond to the same place. - In step S414, the maps
history processing module 304 can remove any duplicate queries from the element list. For each query in the list, the mapshistory processing module 304 can determine if the query is a "directions query" (e.g., a query that indicates the user sought directions from a source location to a destination location). If the query is a directions query, it can be replaced with a unique key that combines the latitude-longitude coordinates of the source with the latitude-longitude coordinates of the destination. The key can also include one or more accuracy radii associated with the source and/or the destination. If the query is not a directions query, it can be seen as only having a destination, and therefore can be replaced with a unique key that includes the latitude-longitude coordinates of the destination and any associated accuracy radius. - The generated keys can then be de-duplicated using any of a variety of techniques. In some examples, a mapping application can be used to perform the de-duplicating. The mapping application can be configured to receive one or more keys and to plot the keys in a map. When the mapping application receives a new key, it can check to see if an identical key has already been mapped. If so, the new key can be discarded. The mapping application can also be configured to respond to an "extract" command by sending a list of keys that were previously added to the map to the issuer of the command. Thus, the maps
history processing module 304 can de-duplicate the list of elements by sending each key in the list to the mapping application, which can in turn discard any duplicate keys. The mapshistory processing module 304 can then issue an extract command to the mapping application and receive an extracted set of keys from the mapping application that does not include any duplicates. The list of elements can then be replaced with the extracted set of keys. Using the mapping application to de-duplicate the keys can be more computationally-efficient than other techniques, as it can require only a single linear pass through the list of elements. In other examples, the list can be de-duplicated using more computationally-intensive techniques, such as sorting the list and iteratively comparing adjacent keys to identify duplicates. - In step S416, the maps
history processing module 304 can remove any duplicate click entries from the list of elements. The mapshistory processing module 304 can replace each click entry in the list with a unique key that includes the latitude-longitude coordinates of the click entry or the click entry's CID. The generated keys can then be de-duplicated, for example using any of the techniques described above. - After removing duplicate queries in step S414 and removing duplicate click entries in step S416, the remaining keys in the list of elements can be sorted in step S418. Any of a variety of methods can be used to sort the list. In some examples, the user's maps history can include timestamps for each element (e.g., the time the user initiated a query or the time that a user clicked on a click entry). Accordingly, the list can be sorted in descending timestamp order, such that more-recent elements are listed first. The list can also be sorted based on how frequently the elements appear in the user's maps history. This way, queries or click entries which were executed or clicked more often by the user are listed ahead of queries or click entries which were executed or clicked less often. The list can also be sorted based on the proximity of each element to the user's current location.
- In step S420, the sorted list can be output by the
output module 306 for presentation to a user. In particular, the outputted list can be transmitted to the user'smobile device 120 for presentation to the user. The user can then select a query from the list to re-run the query, or can select a click entry from the list to obtain information regarding the place to which the click entry corresponds. The output module can also output information about one or more elements in the list of elements, e.g., as a text message, email, or other notification sent to the user's mobile device. Such information can include directions from the user's current location to a location associated with an element in the list, traffic status on the route from the user's current location to a location associated with an element in the list, and so forth. An example notification might say "welcome to [user's current location], would you like directions to [one of the list elements]?" Another example notification can be "traffic from here to [one of the list elements] appears to be heavier than normal." Execution can then return to step S400 and the process repeats. - Accordingly, using the illustrated method, a list of relevant elements from a user's maps history can be presented to the user based on the user's current location, such that the user can quickly and easily retrieve map-based information for which they are searching. The list of relevant elements can also be used to generate contextually-relevant user notifications or alerts.
- In some examples, some or all of the functionality disclosed above as being performed by the
maps server 150 can instead be performed by themobile device 120.FIG. 5 is a schematic diagram of the modules of a mobile device in one example. The structure and function of the mobile device illustrated inFIG. 5 is substantially similar to that of the maps server ofFIG. 3 , except as noted herein and as will be readily apparent to those having ordinary skill in the art. Accordingly, a detailed description thereof is omitted here for the sake of brevity. - As shown in
FIG. 5 , the mobile device can include alocation determining module 500 configured to estimate the current location of the mobile device, for example using GPS or access point triangulation. The mobile device can also include adisplay module 506 configured to display a generated list of relevant elements from the user's maps history, or information relating thereto, for example on a display screen of the mobile device. The other illustrated modules can function in the same manner as those disclosed above with respect to themaps server 150, except that data stored or produced by a remote server (e.g., maps history databases) can be accessed by those modules using one or more calls to the remote server, for example using themobile network 100. - The techniques of this disclosure can also provide the ability to determine one or more attractions within a geographic area using location history data for one or more users traveling within the area. In examples, location history data can be collected for a plurality of users where each user is traveling at least a distance away from a home location associated with the user. The location history data for the plurality of users can be analyzed and aggregated to determine the most popular locations within the geographic area that are visited frequently by the plurality of users. Local search technology can be used to associate the popular locations with attractions at or near the locations, and the resulting listing of attractions can be utilized in suggesting attractions to other users travelling within, or planning to travel to, the geographic area.
- Certain examples will now be described to provide an overall understanding of the principles of the structure, function, manufacture, and use of the systems and methods disclosed herein.
- A user's location can be inferred based on the location of the user's mobile device. Location information can be stored at various time intervals to provide a location history of the device and the user. An application for determining and recording location information using a user's mobile device can be used. For users who opt in, and in accordance with published privacy policies, such an application can determine and store the location of a user's mobile device to create a location history. This location history can be stored in a cache or other memory on the mobile device, or it can be transmitted to a server over a mobile network and stored in a datastore.
-
FIG. 6 illustrates an example of amobile network 1100 for providing location-based services. In the illustrated example, themobile network 1100 includes acommunications network 1110 and amobile device 1120. Themobile device 1120 can connect to thecommunications network 1110 viavarious access points 1130. Although onemobile device 1120 and oneaccess point 1130 is illustrated for purposes of example, the mobile network can include any number of mobile devices and access points. - The
mobile device 1120 can be any device that is configured to exchange data over a mobile network. For example, themobile network 1100 can be a GSM, TDMA, or CDMA technology enabled network, or any other form of wireless network, e.g., IEEE 802.11, Bluetooth, or other Wi-Fi network, or a combination of wired and wireless networks. Theaccess points 1130 can be a form of radio receiver or transmitter that provides a gateway between themobile device 1120 and thecommunications network 1110. For example, the access points can be wireless routers or cellular network towers. In some examples, themobile device 1120 can also receive GPS signals transmitted fromGPS satellites 1140. - In the illustrated example, the
mobile network 1100 also includes alocation server 1150 that can exchange data with themobile device 1120 via thecommunications network 1110. Thelocation server 1150 can include, for example, adigital data processor 1160 in communications coupling with adigital datastore 1170. - The
location server 1150 can be implemented on one or more computing devices. Such computing devices may include, but are not limited to, one or more personal computers, workstations, mini-computers, clustered computer systems, and/or embedded systems. Some or all of thelocation server 1150 functionality could also be implemented on themobile device 1120 itself. Such computing devices may also include, but are not limited to, a device having one or more processors and memory for executing and storing instructions. Such a computing device may include software, firmware, and hardware. Software may include one or more applications and an operating system. Hardware can include, but is not limited to, a processor, memory and graphical user interface display. Thelocation server 1150 may be implemented using hardware, software or a combination thereof and may be implemented in a computer system or other processing system. -
FIG. 7 is a flowchart illustrating anexample process 1200 for collecting location information and determining locations visited by a user. The method may include obtaining location history data, or it might include operating on pre-existing location history data. As shown inFIG. 7 , theprocess 1200 begins atstep 1210 where location history data is collected. For example, the location history data can be generated by a mobile device, such as themobile device 1120 ofFIG. 6 , and communicated to thelocation server 1150 over themobile network 1100 viaaccess points 1130 andcommunications network 1110. Location history data can also be collected bylocation server 1150, such as when a user "checks in" at a location using any number of social applications that provide for such check-ins. - The location history data can be acquired by the mobile device using any of several technologies for determining position. For example, the location data can be acquired by the mobile device using a GPS receiver. The Global Positioning System (GPS) is a space-based satellite navigation system that provides location and time information anywhere on or near the Earth where there is an unobstructed line of sight to four or more GPS satellites. The system is freely accessible by anyone with a GPS receiver, and many smart phones and other mobile devices include GPS receivers. The location data can also be determined using other techniques, such as proximity to cell towers (or other mobile network access points) of known location, or triangulating between the mobile device and a plurality of such towers.
- In some examples, location history data can be acquired by the mobile device and stored locally in a memory on the device. The location history data can, in some examples, be processed on the mobile device using a processor on the device. In other examples, the location history data can be communicated to the location server for processing. For example, location history data can be acquired and transmitted directly to the location server. In some examples, location history data can be stored on the mobile device and transmitted to the location server at predetermined intervals. For example, location history data acquired during a time period, e.g., a day, week, month, etc., can be stored on the mobile device, and transmitted to the location server at the end of that time period. In some examples, the location history data can be acquired and stored on the mobile device until certain conditions are met, e.g., access to a wireless network, and then communicated to the location server. In some examples, the location history data can be stored on the location server, e.g., in
digital datastore 1170 ofFIG. 6 , until data covering a plurality of days has been received. The location history data can include both historical location data as well as current location data. - Location history data can be acquired by the mobile device at various intervals. In one example, location history data can be acquired by the mobile device at regular intervals during each day. For example, location history data can be acquired several times per minute, once per minute, once per hour, once every two hours, or at any other time interval. For building a location history that is more useful with the methods described herein, more frequent location sampling can be better than employing long intervals between location data acquisitions.
- Location history data can be expressed in a variety of manners. As shown in
FIG. 8 , location history data can take the form of information representing a geographic position and point in time, e.g., alatitude 1310,longitude 1312,date 1314, andtime 1316. Location history data can also include anaccuracy radius 1318 that represents an estimate of the accuracy of that location data point. The accuracy radius can range from meters to kilometers, depending on the type of location data. For example, GPS location data can have an accuracy radius of several meters while cellular network tower location data can have an accuracy radius of several kilometers. - The location history data can be processed to reduce the plurality of data points to a listing of locations visited by a user, as shown by
step 1212 inFIG. 7 . In some examples, the location history data can be processed by thelocation server 1150. Thelocation server 1150 can process and analyze the location history data inFIG. 8 can be processed to generate "visited place" geographic data. For example, location history data can be processed to relate the raw location history data to a visited location by calculating a centroid for a cluster of nearby location history data points. A cluster of location history data points can be defined as a set of location history data points that are physically close to one another and a centroid can be defined as the geographic center of a cluster of such data points. This can be referred to as distance-based clustering. In addition, dates and times can be used to further filter the location history data and produce clusters of data points that are proximate in both space and time. - For example, for a plurality of data points gathered during a period when a user is expected to be at home, e.g., during the night, there may be data points that correspond to different locations within the user's house, e.g., the kitchen, bedroom, living room, etc. The location history data for this period may show small variations in latitude and longitude, but would relate to a single place-the home. Accordingly, such points that are close in geography over time can be treated as a cluster that represents a single place. This type of small variation in position over time can be observed when a user visits a variety of locations, including museums, parks, restaurants, theaters, resorts, etc. Clustering by determining a centroid among slightly varying positions can provide a single geographic position to represent the location visited, and can be associated with a time span spent there (e.g., the time spanned from the first to the last location history data point in the cluster). In addition, clustering can aid in reducing variability in the location history data caused by inaccuracies in the location data collection (e.g., errors in position acquisition from GPS or other sources).
- In addition to determining a centroid as a single geographic position representing a location visited, other processing might include reverse geocode lookups to obtain information about the location, such as an address or a business name. Such information can be stored with the location history data. Alternatively, these processes can be used to reverse geocode the raw location history data data points and thereby form clusters-for example, by clustering location history data points that relate to a single address. This can be referred to as address-based clustering.
- The data represented by the clustering processes discussed above can take the form of a longitude, latitude, start time, and end time, where the longitude and the latitude are for the centroid and the start and end times represent the time span over which the user was present in a particular place. The clustered location history data may also include a radius that can reflect inaccuracies in the location measurement, movement of the person within the cluster, or both. In addition, the data can reflect multiple visits to the same place within a user's location history data. In such an example, the data can include a vector of visit times, with each visit time including a start time and end time pair.
- The
method step 1212 of determining locations visited by a user can also include conducting a local search using a geographic location from a user's location history data, such as a centroid calculated from the raw location history data points. In one example, a geographic location can include at least a position and a time. In some examples, the geographic location can also include a radius, or distance from the position. This radius can be derived from accuracy information relating to the method of acquiring the geographic location, or it could be based upon variation in position within a cluster. Alternatively, a preselected value for the radius can be used. The purpose of conducting a local search is to return destinations or attractions that are proximate to the geographic location. In general, destinations and attractions are businesses, addresses, or other mappable features that can represent places that might have been visited by the user. - The local search can be conducted on a local search engine. Local search engines are search engines that attempt to return business listings and/or relevant web pages within a specific geographical area. For a local search, a user may enter a search query and specify a geographical area near which the search query is to be performed. The local search engine can return to the user relevant results, such as listings of businesses in the geographical area and/or relevant web pages pertaining to the geographical area.
- In one example, the local search can be conducted by making a call to a local search engine with the geographic location from the user's location history data and a radius in which the search is to be performed. For example, the local search might be conducted for a latitude and longitude, along with a radius, such as, for example, 200 meters. The latitude and longitude are generally a point or the centroid of a cluster from the user's location history data. The radius may be calculated as described above, or it might be preselected, such as 200 meters. The 200 meter radius can be helpful if the expected accuracy in the location history data is on the order of 100 meters. In this way, one can be confident that the user's actual destination is within the area searched as part of the local search. In addition, the local search might include a limit N on the number of destinations from the area that are returned. For example, specifying N=10 might limit the number of results from within the 200 meter radius to 10.
- In general, the local search can return the names of destinations within the radius. The local search might also return the distance between the destination or attraction and the geographic location (or otherwise specify its relative position with respect to the geographic location). The local search might also return a category for each destination located. For example, a restaurant might return a category of "food," while a theater might return a category of "theater" or "arts."
- In some examples, users can be presented with results from the local search and given the opportunity to select the correct attraction visited. For example, a user can be asked to select one of a plurality of possible attractions returned from a local search. Alternatively, the user can be prompted to enter the name of the attraction visited using a free-form text box. User entry is not required but can increase the accuracy of the local search results. This information can be included in visited location information stored for the user.
- The methods and systems of the present disclosure provide the ability to determine one or more attractions in a geographic area. As a result, when analyzing location history data for one or more users to determine popular locations within a geographic area, it can be helpful to exclude users living within the geographic area. Excluding these users can be helpful because their daily activities (e.g., going to work, home, grocery stores, etc.) can introduce unwanted noise into the data. For example, in an example defining a geographic area as a city, including visited location information for residents of the city in determining popular visited locations may introduce large office buildings, apartment complexes, or housing developments into a result set because a large number of residents of the city spend a great deal of time in these locations. However, these are not commonly considered attractions or destinations in a city. Rather, it would be better to produce a listing of destinations or attractions such as parks, museums, theaters, restaurants, etc. in a given city that are frequently visited by users traveling to the city from out of town.
- Accordingly, the
process 1200 can include thestep 1214 of determining if the locations visited by a user are at least a distance away from a home location associated with the user. This determination can be made by calculating a distance between a geographic position of a location visited (e.g., a position of a centroid, an address reverse geocoded from such a position, etc.) and a geographic position of an associated home location. The home location associated with a user can be preset by the user, or can be determined based on analysis of location history data associated with the user. Any desired distance value can be used in this determination, but the value should preferably be large enough to exclude the daily travels of most users living within a geographic area. For example, setting the distance value below about 10 miles would likely continue to include the daily commuting activities of residents living within a geographic area. By setting the distance value high enough to exclude such residents, information on locations visited can be limited to locations visited by users traveling to the geographic area from another area. In an example, the distance can be about 200 miles. -
FIG. 9 is a flowchart of an example method for aggregating and analyzing locations visited by a plurality of users and associating popular locations with attractions within the geographic area. If the distance between a location visited by a user and an associated home location of the user is greater than the predetermined distance (e.g., 200 miles), the data associated with the visited location can be utilized in theprocess 1400 shown inFIG. 9 to determine attractions within a geographic area. Theprocess 1400 includes astep 1410 of aggregating information representing locations visited by a user with information representing locations visited by one or more other users, where the locations visited by each user are at least a distance away from a home location associated with the user. The data can be aggregated into a form similar to that shown inFIG. 8 for the location history data of a single user. For example, a table can be constructed in which each row represents a location visited by a particular user. The table can include information such as the longitude, latitude, time span, date of the user's visit, and accuracy radius. In some examples, the data can also include information entered by users regarding the particular attraction visited (e.g., if the user selected among a plurality of possible attractions returned during a local search or entered an attraction name manually). - The aggregated information on locations visited by a plurality of users within a geographic area can provide a heat map that highlights locations visited with great frequency. The
process 1400 can include astep 1412 for determining these popular or frequently visited locations within the geographic area. This can be accomplished by utilizing a clustering algorithm similar to the process discussed above when determining locations visited by a single user from a plurality of raw location history data points. In this case, however, the raw location history data points are replaced by visited location data points from a plurality of users traveling within the geographic area. By utilizing a clustering process twice (first on raw position data points from a single user, and second on locations visited by a plurality of users), variations and errors in position acquisition can be further reduced and/or filtered out to determine a more accurate position of a popular location. - As discussed above, clustering can be accomplished in a variety of manners. In some examples, a centroid can be calculated from a group of proximately-spaced visited location data points. In other examples, the positions of each visited location can be reverse geocoded and clustered based on the resulting addresses for each location. Regardless of the particular clustering process employed, the end result can be a listing of locations that are frequently visited by a plurality of users traveling away from home within a geographic area. Furthermore, the clustering process can utilize information from the aggregated visited location data to determine and rank the frequency with which each popular location was visited by the plurality of users. For example, the clustering process can report the number of visited location data points used in calculating a centroid (i.e., the number of points in a cluster). Because each visited location data point can represent a visit by a particular user, the number of points utilized in calculating a centroid represents the number of users that visited the location. This number can be used in subsequent analysis to, for example, rank attractions by popularity, etc. Clustering can produce a listing of one or more popular locations and each location can have associated therewith a geographic position (e.g., a latitude and longitude), an accuracy radius, an array of visit times (e.g., a listing of start and end time pairs for each user's visit), and a number of visitors. In some examples, each location can also have associated therewith an array containing attractions names selected or inputted by each user as described above.
- The
process 1400 can also include astep 1414 for associating the one or more popular locations with attractions located at or near to each popular location. Thestep 1414 can include the use of a local search engine to determine one or more possible attractions based on the geographic position of the popular location. In addition, when executing a local search based on the geographic position of the popular location, the search can be limited to one or more categories of results representative of attractions and/or destinations in a geographic area. These can include, for example, "attractions," "theaters," "restaurants," "parks," etc. - Results listings returned from a local search engine can also be augmented by data collected from individual users via check-ins, status updates, user attraction labeling, or other sources of information (e.g., pictures featuring the attraction, emails mentioning the attraction, etc.). For example, if a local search based on the position of a popular location returns two or more possible attractions for the location, but a large number of users who visited the popular location provided check-in information or otherwise identified one of the possible attractions, this information can be used to select the correct attraction. By way of further example, if data representing a popular location includes an array of user-inputted or selected attraction names, the array can be cross-referenced with the local search results to select the correct attraction.
- The determination of popular attractions and/or destinations within a geographic area can be useful for a variety of purposes. For example, a listing of popular attractions for an area can be presented to a user that is found to be traveling-or planning to travel-within the area.
FIG. 10 illustrates an example method for providing data on popular attractions within an area to a user. Instep 1510, a system can determine if a user is traveling within, or planning to travel to, a geographic area. For example, if a user activates his or her mobile device after getting off an airplane, the mobile device may report that the location of the user is far away from an associated home location for the user (e.g., the user may be in a different city, state, or country). In such a scenario, the method can includestep 1512 for collecting attraction data for the geographic area in which the user is traveling. The method can include, for example, accessing location history data collected as discussed above and analyzing the data to determine a listing of popular attractions within the geographic area. This listing can be presented to the user via the mobile device, as shown bystep 1514. - Providing popular attraction data upon arrival in a geographic area is not the only example of
process 1500, however. In some examples,method step 1510 can include determining in advance if a user is planning to travel to a particular geographic area. This determination can be made in a number of ways, including, for example, by analyzing emails (e.g., emails including travel itineraries, tickets purchases, etc.), calendar information, social media interactions (e.g., discussions of an upcoming trip, etc.), search engine queries (e.g., "hotels in Paris, France," etc.), and other sources of information. If planned travel to a geographic area is indicated by any of these sources, the method can include collecting and analyzing data from other users traveling within the area as discussed above, and presenting popular attraction data to the user via, for example, recommended activities, advertisements, search engine results, etc. - The methods and systems described herein can have a number of modifications, all of which are considered within the scope of the disclosure. For example, each component of the methods and systems described herein can be configured to execute continually or periodically on either a fixed schedule or upon demand. Location history data for a particular user, for example, can be collected continually or periodically by a mobile device and communicated to a
location server 1150 or other system component immediately upon acquisition or periodically. Similarly, the reduction processes of clustering location history data points to determine locations visited by a user, the aggregation of visited locations from a plurality of users traveling away from their home locations, the clustering of visited locations to determine popular locations, and the association of popular locations with attractions can be conducted continually or periodically. Still further, results from the methods described herein can be added incrementally to previously compiled results, such that a history of popular attractions over time can be developed and computing resources can be conserved. By way of example, in one example the processes for collecting location history data described herein can run continually, and the process of determining locations visited from the raw location history data can be run on a nightly basis. Furthermore, in certain examples, the processes described herein for aggregating collected information from a plurality of users and determining popular attractions can be run on a weekly basis and the results can be combined with previously-compiled attraction data. - In some examples, the data utilized in determining popular attractions in a geographic area can be filtered using a variety of criteria to produce results for a particular time period or for a particular user. For example, in some examples, data can be filtered by date to determine popular attractions for a given time period, such as a season (e.g., summer), a month, etc. By filtering the data in this manner, seasonal or other time-dependent attractions can be highlighted or excluded (e.g., baseball stadiums are less likely to be popular attractions during winter months, etc.). Alternatively, data from all available time periods can be utilized to provide a comprehensive listing of popular attractions in a geographic area over time.
- In other examples, data can be filtered based on one or more characteristics of a user to provide results more likely to be accurate for the user. For example, if a user having one or more characteristics associated therewith (e.g., age, sex, interests, occupation, etc.) conducts a search for attractions in a given city, the methods disclosed herein can aggregate information representing locations visited by a plurality of users where each user included in the data set has associated therewith one or more similar characteristics. Accordingly, a listing of popular attractions presented to the user can represent attractions frequently visited by other similar users (e.g., other males of similar age, other users with children, etc.). The one or more characteristics can be collected or inferred from information entered by the user in a personal profile, status updates, emails, calendaring information, etc., subject to user opt-in and in accordance with any existing privacy policies.
- In some examples, a technique includes receiving, by a computing system, e.g., maps
server 150, an indication of a current location of a mobile device, and retrieving, by the computing system, a maps search history associated with a user of the mobile device, the maps search history including a plurality of elements associated with map-based queries previously submitted by the use. The technique also includes determining, by the computing system, that one or more elements of the plurality of elements are relevant to the current location of the mobile device, and sending, by the computing system, to the mobile device, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device. - For example, determining that the one or more elements of the plurality of elements are relevant to the current location of the mobile device may include, for each respective element of the plurality of elements, associating a respective geographical location with the respective element and adding the respective element to a set of relevant elements if the respective geographical location is within a predetermined threshold distance of the current location of the mobile device.
- In some examples, the plurality of elements includes a directions query, and associating includes associating the directions query with a source geographical location and a destination geographical location. In some examples, the plurality of elements includes a query that returns a plurality of places. In some examples, the query includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query. In some examples, associating includes associating with the query the geographical locations of only those places that are indicated by the one or more click entries.
- In some examples, the technique also includes de-duplicating the relevant elements by at least sending the relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map, and replacing the relevant elements with the extracted set of elements.
- In some examples, the technique also includes sorting the relevant elements based on at least one of: a proximity of a geographical location associated with each element to the current location of the mobile device; a frequency with which a query corresponding to each element was executed by the user; and how recently a query corresponding to each element was executed by the user.
- In some examples, the technique also includes sending the information includes sending a notification including information relating to an element of the relevant elements.
- In some examples, a computing system (e.g., maps server 150) includes at least one processor; and at least one module operable by the at least one processor to: receive an indication of a current location of a mobile device, retrieve a maps search history associated with a user of the mobile device, the maps search history including a plurality of elements associated with map-based queries previously submitted by the user; and determine that one or more elements of the plurality of elements are relevant to the current location of the mobile device.
- In some examples, the at least one processor is disposed within at least one of the mobile device and a server. In some examples, the at least one module is further operable by the at least one processor to send, to the mobile device, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
- In some examples, the at least one module is further operable by the at least one processor to provide, to a display module that displays information, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
- In some examples, the at least one module is further operable by the at least one processor to, for each respective element of the plurality of elements, associate a respective geographical location with the respective element and adding the respective element to a set of relevant elements if the respective geographical location is within a predetermined threshold distance of the current location of the mobile device.
- In some examples, the plurality of elements includes a directions query, wherein the at least one module is further operable by the at least one processor to associate the directions query with a source geographical location and a destination geographical location. In some examples, the plurality of elements includes a query that returns a plurality of places and that includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after executing the query. In some examples, the maps history processing module associates the query with the geographical locations of only those places that are indicated by the one or more click entries. In some examples, the maps history processing module de-duplicates the relevant elements by at least sending the relevant elements to a mapping application configured to add the element to a map and discard received elements that have already been added to the map, receiving from the mapping application an extracted set of elements previously added to the map; and replacing the relevant elements with the extracted set of elements.
- In some examples, the maps processing module sorts the relevant elements based on at least one of: a proximity of a geographical location associated with each element to the current location of the mobile device; a frequency with which a query corresponding to each element was executed by the user; and how recently a query corresponding to each element was executed by the user.
- In some examples, a computer-readable storage medium (e.g., on maps server 150) stores instructions that, when executed, cause at least one processor of a computing device to receive an indication of a current location of a mobile device, retrieve a maps search history associated with a user of the mobile device, the maps search history including a plurality of elements associated with map-based queries previously submitted by the user, determine that one or more elements of the plurality of elements are relevant to the current location of the mobile device, and send, to the mobile device, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device.
- Although a few examples have been described in detail above, other modifications are possible. Moreover, other mechanisms for performing the systems and methods described herein may be used. In addition, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. Other steps may be provided, or steps may be eliminated, from the described flows, and other components may be added to, or removed from, the described systems.
Claims (11)
- A method comprising:receiving (S400), by a computing device, an indication of a current location of a mobile device (120);retrieving (S404), by the computing device, a maps search history associated with a user of the mobile device (120), the maps search history including a plurality of elements associated with map-based queries previously submitted by the user, wherein at least one of the plurality of elements is associated with a query that results in a plurality of places being returned responsive to the query, wherein the query includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after submitting the query;generating geographic coordinates for each map-based query in the maps search history;for each respective element from the plurality of elements, adding (S408) the respective element to a set of elements that are determined to be relevant to the current location if a respective geographic location of a map-based query associated with the respective element is within a predetermined threshold distance of the current location of the mobile device (120) as determined by comparing the geographic coordinates for each map-based query to a geographic location corresponding to the current location of the mobile device;determining whether each query in the set of elements includes one or more click entries;in response to determining that a query includes one or more click entries, replacing (S410) the query in the set of elements with the one or more click entries;generating geographic coordinates for each of the one or more click entries in the set of elements;de-duplicating (S414) the one or more elements in the set of elements determined to be relevant to the current location by at least:sending the relevant elements to a mapping application configured to add the elements to a map whilst discarding those received elements that have already been added to the map;receiving from the mapping application an extracted set of elements previously added to the map; andreplacing the one or more elements determined to be relevant to the current location with the extracted set of elements; andsending (S420), by the computing device, to the mobile device (120), information relating to at least one element from the extracted set of elements determined to be relevant to the current location of the mobile device; anddisplaying, at the mobile device (120), the information.
- The method of claim 1, wherein at least one of the plurality of elements is associated with a directions query, the method further comprising associating the directions query with a source geographical location and a destination geographical location.
- The method of claim 1, wherein the geographic coordinates include a latitude-longitude pair or a latitude-longitude pair with an accuracy radius.
- The method of claim 1, further comprising sorting (S418) the one or more elements determined to be relevant to the current location based on at least one of:a proximity of a geographic location associated with each element to the current location of the mobile device (120);a frequency with which a query corresponding to each element was submitted by the user; andhow recently a query corresponding to each element was submitted by the user.
- The method of claim 1, wherein sending the information comprises sending a notification including information relating to an element of the one or more elements determined to be relevant to the current location.
- A computing device comprising:at least one processor (202); andat least one module (300-306, 500-506) operable by the at least one processor (202) to:receive an indication of a current location of a mobile device (120);retrieve a maps search history associated with a user of the mobile device (120), the maps search history including a plurality of elements associated with map-based queries previously submitted by the user, wherein at least one of the plurality of elements is associated with a query that results in a plurality of places being returned responsive to the query, wherein the query includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after submitting the query;generate geographic coordinates for each map-based query in the maps search history;for each respective element from the plurality of elements, add the respective element to a set of elements that are determined to be relevant to the current location if a respective geographic location of a map-based query associated with the respective element is within a predetermined threshold distance of the current location of the mobile device (120) as determined by comparing the geographic coordinates for each map-based query to a geographic location corresponding to the current location of the mobile device;determine whether each query of the set of elements includes one or more click entries;in response to determining that a query includes one or more click entries, replace the query in the set of elements with the one or more click entries;generate geographic coordinates for each of the one or more click entries in the set of elements;de-duplicate the one or more elements in the set of elements determined to be relevant to the current location by at least:sending the relevant elements to a mapping application configured to add the elements to a map whilst discarding those received elements that have already been added to the map;receiving from the mapping application an extracted set of elements previously added to the map; andreplacing the one or more elements determined to be relevant to the current location with the extracted set of elements; andsend, to the mobile device (120), information relating to at least one element from the extracted set of elements determined to be relevant to the current location of the mobile device (120).
- The computing device of claim 6, wherein the at least one processor (202) is disposed within at least one of the mobile device (120) and a server (150).
- The computing device of claim 6, wherein the at least one module (300-306, 500-506) is further operable by the at least one processor (202) to:provide, to a display module (506) that displays information, information relating to at least one of the one or more elements determined to be relevant to the current location of the mobile device (120).
- The computing device of claim 6, wherein the geographic coordinates include a latitude-longitude pair or a latitude-longitude pair with an accuracy radius.
- The computing device of claim 6, wherein the at least one module (300-306, 500-506) is further operable by the at least one processor (202) to sort the one or more elements determined to be relevant to the current location based on at least one of:a proximity of a geographical location associated with each element to the current location of the mobile device (120);a frequency with which a query corresponding to each element was submitted by the user; andhow recently a query corresponding to each element was submitted by the user.
- A computer-readable storage medium storing instructions that, when executed, cause at least one processor (202) of a computing device to:receive an indication of a current location of a mobile device (120);retrieve a maps search history associated with a user of the mobile device (120), the maps search history including a plurality of elements associated with map-based queries previously submitted by the user, wherein at least one of the plurality of elements is associated with a query that results in a plurality of places being returned responsive to the query, wherein the query includes one or more click entries indicating which of the plurality of places the user clicked on or otherwise selected after submitting the query;generate geographic coordinates for each map-based query in the maps search history;for each respective element from the plurality of elements, add the respective element to a set of elements that are determined to be relevant to the current location if a respective geographic location of a map-based query associated with the respective element is within a predetermined threshold distance of the current location of the mobile device (120) as determined by comparing the geographic coordinates for each map-based query to a geographic location corresponding to the current location of the mobile device;determine whether each query of the set of elements includes one or more click entries;in response to determining that a query includes one or more click entries, replace the query in the set of elements with the one or more click entries;generate geographic coordinates for each of the one or more click entries in the set of elements;de-duplicate the one or more elements in the set of elements determined to be relevant to the current location by at least:sending the relevant elements to a mapping application configured to add the elements to a map whilst discarding those received elements that have already been added to the map;receiving from the mapping application an extracted set of elements previously added to the map; andreplacing the one or more elements determined to be relevant to the current location with the extracted set of elements; andsend, to the mobile device (120), information relating to at least one element from the extracted set of elements determined to be relevant to the current location of the mobile device (120).
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261662952P | 2012-06-22 | 2012-06-22 | |
US201261663052P | 2012-06-22 | 2012-06-22 | |
US201261663769P | 2012-06-25 | 2012-06-25 | |
US201261663780P | 2012-06-25 | 2012-06-25 | |
PCT/US2013/047175 WO2013192583A1 (en) | 2012-06-22 | 2013-06-21 | Providing information about relevant elements from maps history based on location |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2864905A1 EP2864905A1 (en) | 2015-04-29 |
EP2864905B1 true EP2864905B1 (en) | 2017-09-27 |
Family
ID=48747773
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP13734599.7A Active EP2864905B1 (en) | 2012-06-22 | 2013-06-21 | Providing information about relevant elements from maps history based on location |
Country Status (4)
Country | Link |
---|---|
US (2) | US8855684B2 (en) |
EP (1) | EP2864905B1 (en) |
CN (2) | CN104380293B (en) |
WO (1) | WO2013192583A1 (en) |
Families Citing this family (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8843853B1 (en) | 2006-12-05 | 2014-09-23 | At&T Mobility Ii Llc | Home screen user interface for electronic device display |
US9727669B1 (en) * | 2012-07-09 | 2017-08-08 | Google Inc. | Analyzing and interpreting user positioning data |
KR20150071807A (en) * | 2013-12-18 | 2015-06-29 | 현대자동차주식회사 | Cloud System For A Vehicle |
KR101561628B1 (en) * | 2013-12-30 | 2015-10-20 | 주식회사 케이티 | Search apparatus for providing realtime display information of smart glass and method thereof |
US9820103B2 (en) * | 2014-01-22 | 2017-11-14 | Lenovo (Singapore) Pte. Ltd. | Direction assistance based on personal experience |
US20150213496A1 (en) * | 2014-01-24 | 2015-07-30 | Aol Inc. | Methods and systems for displaying electronic content to individuals in geographic zone having inner boundary |
US9338761B2 (en) * | 2014-02-26 | 2016-05-10 | Empire Technology Development Llc | Presence-based device mode modification |
US20170017999A1 (en) * | 2014-02-28 | 2017-01-19 | Rakuten, Inc. | Information processing device, information processing method, and information processing program |
US9325654B2 (en) | 2014-02-28 | 2016-04-26 | Aol Inc. | Systems and methods for optimizing message notification timing based on electronic content consumption associated with a geographic location |
US9467815B2 (en) | 2014-03-20 | 2016-10-11 | Google Inc. | Systems and methods for generating a user location history |
US9319844B2 (en) * | 2014-04-25 | 2016-04-19 | Aruba Networks, Inc. | Determining location based on both a detected location and a predicted location |
US10474671B2 (en) * | 2014-05-12 | 2019-11-12 | Google Llc | Interpreting user queries based on nearby locations |
US9584968B2 (en) | 2014-05-21 | 2017-02-28 | Aol Inc. | Systems and methods for deploying dynamic geo-fences based on content consumption levels in a geographic location |
US9857195B2 (en) | 2014-05-30 | 2018-01-02 | Google Inc. | Selection and presentation of geographic content in an automotive environment |
US11477602B2 (en) | 2014-06-10 | 2022-10-18 | Verizon Patent And Licensing Inc. | Systems and methods for optimizing and refining message notification timing |
US20150370903A1 (en) * | 2014-06-23 | 2015-12-24 | Google Inc. | Delivering Personalized Information |
WO2016028695A1 (en) | 2014-08-20 | 2016-02-25 | Google Inc. | Interpreting user queries based on device orientation |
US9563689B1 (en) | 2014-08-27 | 2017-02-07 | Google Inc. | Generating and applying data extraction templates |
US9652530B1 (en) | 2014-08-27 | 2017-05-16 | Google Inc. | Generating and applying event data extraction templates |
US9785705B1 (en) | 2014-10-16 | 2017-10-10 | Google Inc. | Generating and applying data extraction templates |
IL236234A0 (en) | 2014-12-14 | 2015-03-31 | Google Llc | Systems and methods of generating itineraries using location data |
US9904932B2 (en) * | 2014-12-29 | 2018-02-27 | Google Llc | Analyzing semantic places and related data from a plurality of location data reports |
US10216837B1 (en) | 2014-12-29 | 2019-02-26 | Google Llc | Selecting pattern matching segments for electronic communication clustering |
US10012508B2 (en) | 2015-03-04 | 2018-07-03 | Lenovo (Singapore) Pte. Ltd. | Providing directions to a location in a facility |
US10200808B2 (en) * | 2015-04-14 | 2019-02-05 | At&T Mobility Ii Llc | Anonymization of location datasets for travel studies |
US9787557B2 (en) | 2015-04-28 | 2017-10-10 | Google Inc. | Determining semantic place names from location reports |
US20160366546A1 (en) * | 2015-06-09 | 2016-12-15 | Google Inc. | Systems and Methods for Disambiguation of Location Entities Associated with the Current Geographic Location of a Mobile Device |
US20160379117A1 (en) * | 2015-06-29 | 2016-12-29 | Google Inc. | Location-based delivery of structured content |
US10045159B2 (en) | 2015-07-02 | 2018-08-07 | Qualcomm Incorporated | Providing, organizing, and managing location history records of a mobile device |
US10382568B2 (en) | 2015-12-18 | 2019-08-13 | Hipmunk, Inc. | Display of calendar-based single user, single event travel options |
US20170286534A1 (en) * | 2016-03-29 | 2017-10-05 | Microsoft Technology Licensing, Llc | User location profile for personalized search experience |
EP3449386A1 (en) | 2016-04-25 | 2019-03-06 | Google LLC | Allocating communication resources via information technology infrastructure |
US10299074B2 (en) * | 2016-05-09 | 2019-05-21 | Microsoft Technology Licensing, Llc | Offline map download |
CN107070961B (en) | 2016-09-30 | 2020-06-23 | 阿里巴巴集团控股有限公司 | Hot spot area determination method and device based on geographic position data |
CN106503197B (en) * | 2016-11-02 | 2019-08-06 | 四川秘无痕科技有限责任公司 | A method of extracting android system Baidu map base station data |
US20190098442A1 (en) * | 2016-12-01 | 2019-03-28 | Geospock Limited | Method of operating a device, the device shown carrying out the method, and a system including the deice and a server in a system providing location-based social networking services to users of mobile devices |
WO2018235075A1 (en) * | 2017-06-18 | 2018-12-27 | Moovit App Global Ltd. | System and method for determining transit stop location |
US10803125B2 (en) * | 2017-06-30 | 2020-10-13 | Microsoft Technology Licensing, Llc | Rendering locations on map based on location data |
CN107491489A (en) * | 2017-07-18 | 2017-12-19 | 深圳天珑无线科技有限公司 | A kind of map search method, apparatus and computer-readable recording medium |
CN109584705B (en) * | 2017-09-29 | 2021-09-17 | 北京搜狗科技发展有限公司 | Map display method and device |
US11120349B1 (en) * | 2018-03-06 | 2021-09-14 | Intuit, Inc. | Method and system for smart detection of business hot spots |
CN110379154A (en) * | 2018-04-12 | 2019-10-25 | 阿里巴巴集团控股有限公司 | Traffic induction method and device |
CN109800360B (en) * | 2018-12-24 | 2020-12-08 | 北京城市网邻信息技术有限公司 | Cell query method, cell query device, electronic equipment and storage medium |
CN110646005A (en) * | 2018-12-29 | 2020-01-03 | 北京奇虎科技有限公司 | Method and device for displaying map area features based on map interface |
CN110659320B (en) * | 2019-09-02 | 2022-08-09 | 恩亿科(北京)数据科技有限公司 | Analysis method and analysis device for occupational distribution and readable storage medium |
US11593411B2 (en) | 2019-09-13 | 2023-02-28 | International Business Machines Corporation | Historical augmentation of electronic maps |
CN110930176B (en) * | 2019-09-23 | 2023-06-02 | 平安科技（深圳）有限公司 | Prediction method, prediction device, electronic equipment and storage medium |
US11568640B2 (en) | 2019-09-30 | 2023-01-31 | Lenovo (Singapore) Pte. Ltd. | Techniques for providing vibrations at headset |
WO2021096514A1 (en) * | 2019-11-14 | 2021-05-20 | Google Llc | Prioritized provision and retrieval of offline map data |
EP4058905A1 (en) * | 2019-12-05 | 2022-09-21 | Google LLC | Systems and methods for low-latency provision of content |
US11144759B1 (en) | 2020-05-12 | 2021-10-12 | Lenovo (Singapore) Pte. Ltd. | Presentation of graphical objects on display based on input from rear-facing camera |
US11816603B2 (en) | 2020-09-22 | 2023-11-14 | Uber Technolgies, Inc. | Active notification using transportation service prediction |
CN112541123A (en) * | 2020-12-24 | 2021-03-23 | 北京百度网讯科技有限公司 | Map region recommendation method, device, equipment and storage medium |
CN112905728A (en) * | 2021-02-26 | 2021-06-04 | 中国科学院电子学研究所苏州研究院 | Efficient fusion and retrieval system and method for multi-source place name data |
CN113709124A (en) * | 2021-08-17 | 2021-11-26 | 深圳供电局有限公司 | Historical information management system |
CN116561153A (en) * | 2022-01-27 | 2023-08-08 | 华为技术有限公司 | Map query method and electronic equipment |
Family Cites Families (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6571279B1 (en) * | 1997-12-05 | 2003-05-27 | Pinpoint Incorporated | Location enhanced information delivery system |
CA2420215A1 (en) * | 2000-08-23 | 2002-06-27 | Neurogen Corporation | High affinity small molecule c5a receptor modulators |
US20080222119A1 (en) * | 2007-03-08 | 2008-09-11 | Microsoft Corporation | Detecting a user's location, local intent and travel intent from search queries |
US7720844B2 (en) * | 2007-07-03 | 2010-05-18 | Vulcan, Inc. | Method and system for continuous, dynamic, adaptive searching based on a continuously evolving personal region of interest |
US20100145987A1 (en) * | 2008-12-04 | 2010-06-10 | Apisphere, Inc. | System for and method of location-based process execution |
US20100318535A1 (en) * | 2009-06-11 | 2010-12-16 | Microsoft Corporation | Providing search results to a computing device |
US20110054776A1 (en) * | 2009-09-03 | 2011-03-03 | 21St Century Systems, Inc. | Location-based weather update system, method, and device |
US8504512B2 (en) * | 2009-12-02 | 2013-08-06 | Microsoft Corporation | Identifying geospatial patterns from device data |
US8612134B2 (en) * | 2010-02-23 | 2013-12-17 | Microsoft Corporation | Mining correlation between locations using location history |
JP5712526B2 (en) * | 2010-08-12 | 2015-05-07 | ソニー株式会社 | Electronic device, information determination server, information determination method, program, and information determination system |
US8204966B1 (en) * | 2011-09-26 | 2012-06-19 | Google Inc. | Map tile data pre-fetching based on user activity analysis |
US8983973B2 (en) * | 2011-10-12 | 2015-03-17 | Mapquest, Inc. | Systems and methods for ranking points of interest |
-
2013
- 2013-06-21 WO PCT/US2013/047175 patent/WO2013192583A1/en active Application Filing
- 2013-06-21 EP EP13734599.7A patent/EP2864905B1/en active Active
- 2013-06-21 CN CN201380033052.2A patent/CN104380293B/en active Active
- 2013-06-21 CN CN201710092449.9A patent/CN107092638B/en active Active
- 2013-11-21 US US14/086,710 patent/US8855684B2/en active Active
-
2014
- 2014-10-06 US US14/506,715 patent/US9204254B2/en active Active
Non-Patent Citations (1)
Title |
---|
None * |
Also Published As
Publication number | Publication date |
---|---|
EP2864905A1 (en) | 2015-04-29 |
CN104380293B (en) | 2017-03-22 |
US9204254B2 (en) | 2015-12-01 |
CN107092638A (en) | 2017-08-25 |
CN104380293A (en) | 2015-02-25 |
US20150024784A1 (en) | 2015-01-22 |
US20140082062A1 (en) | 2014-03-20 |
WO2013192583A1 (en) | 2013-12-27 |
CN107092638B (en) | 2021-06-15 |
US8855684B2 (en) | 2014-10-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP2864905B1 (en) | Providing information about relevant elements from maps history based on location | |
EP2875655B1 (en) | Inferring user interests | |
US10332019B2 (en) | Ranking nearby destinations based on visit likelihoods and predicting future visits to places from location history | |
US9986386B2 (en) | Labeling visited locations based on contact information |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20141219 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
17Q | First examination report despatched |
Effective date: 20150723 |
|
RIN1 | Information on inventor provided before grant (corrected) |
Inventor name: BELLVER, PABLOInventor name: UDESHI, TUSHARInventor name: GUGGEMOS, JAMES A.Inventor name: MIERLE, KEIR BANKS |
|
DAX | Request for extension of the european patent (deleted) | ||
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
INTG | Intention to grant announced |
Effective date: 20170327 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 932600Country of ref document: ATKind code of ref document: TEffective date: 20171015 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
RAP2 | Party data changed (patent owner data changed or rights of a patent transferred) |
Owner name: GOOGLE LLC |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602013027132Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602013027132Country of ref document: DERepresentative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DERef country code: DERef legal event code: R081Ref document number: 602013027132Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171227 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20170927 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 932600Country of ref document: ATKind code of ref document: TEffective date: 20170927 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171228Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20171227Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20180127Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602013027132Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 6 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
26N | No opposition filed |
Effective date: 20180628 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602013027132Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0017300000Ipc: G06F0016000000 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20180630 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180621 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180630Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180621Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180630 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180630 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20180621 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170927Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20130621 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170927 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230626Year of fee payment: 11Ref country code: DEPayment date: 20230626Year of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FIPayment date: 20230626Year of fee payment: 11 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20230627Year of fee payment: 11 |
CN117571009A - Providing street level images related to ride service in navigation applications - Google Patents
Providing street level images related to ride service in navigation applications Download PDFInfo
- Publication number
- CN117571009A CN117571009A CN202311544062.4A CN202311544062A CN117571009A CN 117571009 A CN117571009 A CN 117571009A CN 202311544062 A CN202311544062 A CN 202311544062A CN 117571009 A CN117571009 A CN 117571009A
- Authority
- CN
- China
- Prior art keywords
- location
- ride
- ride service
- user
- map
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000004044 response Effects 0.000 claims abstract description 26
- 230000002452 interceptive effect Effects 0.000 claims abstract description 19
- 238000000034 method Methods 0.000 claims description 62
- 238000004891 communication Methods 0.000 claims description 16
- 238000012800 visualization Methods 0.000 claims description 16
- 238000003306 harvesting Methods 0.000 claims description 4
- 230000006870 function Effects 0.000 description 21
- 238000010586 diagram Methods 0.000 description 13
- 239000008186 active pharmaceutical agent Substances 0.000 description 10
- 230000007704 transition Effects 0.000 description 9
- 238000012790 confirmation Methods 0.000 description 8
- 238000013507 mapping Methods 0.000 description 8
- 239000003086 colorant Substances 0.000 description 5
- 238000012545 processing Methods 0.000 description 4
- 230000002085 persistent effect Effects 0.000 description 3
- 230000008569 process Effects 0.000 description 3
- 238000009877 rendering Methods 0.000 description 3
- 230000000007 visual effect Effects 0.000 description 3
- 230000008859 change Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000011084 recovery Methods 0.000 description 2
- 238000007792 addition Methods 0.000 description 1
- 230000015572 biosynthetic process Effects 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000005755 formation reaction Methods 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 238000005457 optimization Methods 0.000 description 1
- 230000008054 signal transmission Effects 0.000 description 1
- 239000004984 smart glass Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3407—Route searching; Route guidance specially adapted for specific applications
- G01C21/3415—Dynamic re-routing, e.g. recalculating the route when the user deviates from calculated route or after detecting real-time traffic data or accidents
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3626—Details of the output of route guidance instructions
- G01C21/3635—Guidance using 3D or perspective road maps
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3407—Route searching; Route guidance specially adapted for specific applications
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3407—Route searching; Route guidance specially adapted for specific applications
- G01C21/3423—Multimodal routing, i.e. combining two or more modes of transportation, where the modes can be any of, e.g. driving, walking, cycling, public transport
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3407—Route searching; Route guidance specially adapted for specific applications
- G01C21/3438—Rendez-vous, i.e. searching a destination where several users can meet, and the routes to this destination for these users; Ride sharing, i.e. searching a route such that at least two users can share a vehicle for at least part of the route
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3667—Display of a road map
- G01C21/3676—Overview of the route on the road map
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/02—Reservations, e.g. for tickets, services or events
-
- G06Q50/40—
Abstract
An interactive two-dimensional digital map is provided via a user interface. A request is received to retrieve a direction of travel to a destination. An indication of a ride from a pickup location to a drop-in location to traverse at least a portion of a route is obtained from a third party provider of a ride service. Street level images of the pick-up locations are acquired and displayed on a digital map. In response to detecting selection of the street level image via the user interface, the two-dimensional digital map is converted to an interactive three-dimensional panoramic display of the street level image.
Description
The present application is a divisional application of the invention patent application having a filing date of 2018, 12, 14, 201880039074.2 and an invention name of "providing street level images related to riding services in a navigation application".
Technical Field
The present disclosure relates to inter-application communication, and more particularly, to inter-application communication between a map application and a ride service application.
Background
Today, digital maps of geographic areas are typically displayed on computing devices, such as computers, tablet computers, and mobile phones, via map applications, web browsers, and the like. Many map applications provide users with the ability to select the type of map information or features to view and adjust the display of digital maps.
In addition, the map application provider provides an Application Programming Interface (API) for accessing map and navigation data to display digital maps and provide a gradual navigation direction to a destination location. For example, the ride service application may call a map application API to provide a digital map of the geographic area that includes the user's pickup location, destination location, navigation directions to the destination location, and so forth.
Disclosure of Invention
To provide ride service within the map application without directing the user to a separate ride service application, the map application invokes one or more ride service APIs to access ride service data from various ride service providers. For example, a user may request a navigation direction within a map application to a destination location. The user may then select from several modes of transportation, including ride service, to travel to the destination location. When the user selects the ride service mode, the map application may communicate with various ride service applications by calling a corresponding ride service API. The map application communicates with the ride service application and/or the ride service server to retrieve an indication of the type of ride service provided by each ride service provider. Types of ride services may include: a ride share service, wherein the ride service provider takes other passengers en route to the user's destination; taxi service, in the way to the user's destination, not taking other passengers; luxury car services, including additional features within the vehicle; oversized vehicle services for receiving a large number of passengers, and so on. The map application may also communicate with the ride service application to retrieve price estimates for each type of ride service, waiting times for each type of ride service, ride status information about travel status (e.g., waiting for a driver to accept a ride, waiting for the driver to arrive at a pickup location, in progress, completed, number of vehicles in a geographic area surrounding the user's current location, etc.). In some scenarios, the ride service application need not be downloaded to the user's client device, but rather the map application invokes a corresponding ride service API to communicate with the ride service server.
The user may then select a ride service provider and ride service type directly from the mapping application to subscribe to the transportation service to its destination location. In this way, the user may select from among several candidate ride service providers within the map application without having to open each corresponding ride service application for comparison, nor having to leave the map application. In addition, the user can identify the pickup position and the destination position in the application program having the built-in map function. For example, a user may view a three-dimensional street level view of the area surrounding the pickup location so that the user may easily find the driver at the pickup location. The map application may also provide suggestions about the pickup location based on the user's context (context) and location and the direction of walking from the user's current location to the pickup location.
In particular, an example embodiment of the technology of the present disclosure is a method for providing multiple ways of travel directions (multi-modal travel direction) in a computing device. The method comprises the following steps: the method includes receiving, via a user interface, a request to access a travel direction to a destination, and generating a travel direction for a plurality of ways to travel to the destination. Generating the direction of travel of the plurality of modes includes obtaining an indication of the ride from a third party provider of a ride service to traverse a first segment of the route between the pickup location and the drop location, the ride service defining a first transportation mode, and obtaining a navigation direction to traverse a second segment of the route using a second transportation mode different from the first mode. The method also includes providing, via the user interface, an indication of the directions of the plurality of ways generated.
Another example embodiment is a computing device that includes a user interface, one or more processors, and a non-transitory computer-readable medium having instructions stored thereon. The instructions, when executed by the one or more processors, cause the computing device to receive, via the user interface, a request to obtain a direction of travel to the destination, and generate a direction of travel for a plurality of ways of traveling to the destination. To generate directions of travel for the plurality of modes, the instructions cause the computing device to obtain an indication of the ride from a third party facilitator of the ride to traverse a first segment of the route between the pickup location and the drop location, the ride defining a first transportation mode, and obtain a navigation direction to traverse a second segment of the route using a second transportation mode different from the first mode. The instructions also cause the computing device to provide, via the user interface, an indication of the directions of the plurality of ways generated.
Yet another example embodiment is a method in a computing device for providing directions of travel in multiple ways. The method includes providing an interactive digital map via a user interface, receiving a request via the user interface to obtain a direction of travel to a destination, and obtaining an indication of a ride from a pickup location to a drop-in location from a third party provider of the ride service to traverse at least a portion of the route. The method also includes receiving, from a third party facilitator of the ride service, visualization information for rendering a visualization of the ride on the digital map, and generating a visualization of the ride on the digital map based on the received visualization information.
Another example embodiment is a computing device that includes a user interface, one or more processors, and a non-transitory computer-readable medium having instructions stored thereon. The instructions, when executed by the one or more processors, cause the computing device to provide an interactive digital map via a user interface, receive a request to obtain a direction of travel to a destination via the user interface, and obtain an indication of a ride from a pickup location to a drop-in location from a third party provider of the ride service to traverse at least a portion of the route. The instructions further cause the computing device to receive, from a third party facilitator of the ride service, visualization information for rendering a visualization of the ride on the digital map, and generate a visualization of the ride on the digital map based on the received visualization information.
Another example embodiment is a method in a portable computing device for providing ride service information on a digital map. The method includes providing an interactive digital map of a geographic area via a user interface, receiving a request via the user interface to obtain a direction of travel to a destination, and requesting respective indications of candidate rides from a plurality of third party service providers of ride services for at least a portion of a route to the destination, each indication including a pickup location, a price estimate, and a pickup time. The method further includes receiving an indication of the requested of the candidate rides, determining a ranking of the candidate rides according to at least one of the price and the pickup time, providing a list of the candidate rides according to the determined ranking on the digital map, and in response to a selected one of the candidate rides via the user interface, transmitting the request for the selected ride to a corresponding third party provider.
Yet another example embodiment is a method in a portable computing device for providing map data related to a ride service on the computing device. The method includes providing an interactive two-dimensional digital map via a user interface, receiving a request via the user interface to obtain a direction of travel to a destination, and obtaining an indication of a ride from a pickup location to a drop-in location from a third party provider of the ride service to traverse at least a portion of the route. The method further includes obtaining a street-level image of the pickup location, displaying the street-level image obtained for the pickup location on a digital map, and converting the two-dimensional digital map to an interactive three-dimensional panoramic display of the street-level image in response to detecting a selection of the street-level image via the user interface.
Another example embodiment is a method performed by a portable computing device for providing map data related to a ride service, the method comprising: providing, by the one or more processors, an interactive two-dimensional digital map via the user interface; receiving a request to harvest a travel direction to a destination via the user interface; obtaining, by the one or more processors, an indication of a ride from a third party provider of a ride service from a pickup location to a drop-in location to traverse at least a portion of the route; acquiring, by the one or more processors, street level images of the pick-up location or the pick-up location; displaying a preview of street level images acquired for the pick-up location or the drop-in location overlaid on the digital map; and in response to detecting selection of the preview of the street level image via the user interface, converting the two-dimensional digital map to an interactive three-dimensional panoramic display of street level images.
Another example embodiment is a computing device for providing map data related to a ride service, comprising: one or more processors; a user interface; a non-transitory computer-readable medium having instructions stored thereon that, when executed by the one or more processors, cause the computing device to: providing an interactive two-dimensional digital map via the user interface, receiving a request to harvest a travel direction to a destination via the user interface; obtaining an indication of a ride from a pickup location to a pick-up location from a third party provider of the ride service to traverse at least a portion of the route; acquiring street-level images of the pick-up location or the pick-up location; displaying a preview of street level images acquired for the pick-up location or the drop-in location overlaid on the digital map; and in response to detecting selection of the preview of the street level image via the user interface, converting a two-dimensional digital map to an interactive three-dimensional panoramic display of the street level image.
Drawings
FIG. 1 is a block diagram of an example system in which techniques for providing ride services to portable devices via a map application may be implemented;
FIG. 2 is a block diagram of an example portable device that may operate in the system of FIG. 1;
FIG. 3 is an example timing diagram illustrating an example exchange of information between a map application and a ride service application in response to user input provided to the map application;
FIG. 4 is an exemplary flow chart for transitioning between user interfaces during a ride service request within a mapping application;
FIG. 5 is an exemplary state diagram of requesting ride service via a map application by calling a ride service API;
FIG. 6 is an exemplary flow chart of various ways of generating a recommendation from a starting location to a destination location;
FIG. 7 is an exemplary flow chart for providing ride service within a map application without requiring a user to be directed to a separate ride service application;
FIG. 8 is an exemplary flow chart for presenting ride status information when a user transitions to other map functions;
FIG. 9 is an exemplary display of selecting a ride service in a map application;
FIG. 10 is an exemplary display of selecting a pickup location in a map application;
FIG. 11A is an exemplary ride request display in a map application that includes layout components customized by a ride service provider;
FIG. 11B is another exemplary ride request display in a map application that includes layout components customized by a ride service provider;
FIG. 12A is an exemplary pickup request display for determining a ride in a map application;
FIG. 12B is another exemplary pickup request display for determining a ride in a map application;
FIG. 12C is yet another exemplary pickup request display for determining a ride in a map application;
FIG. 13A is an exemplary waiting ride display presented when a user waits to be loaded by a ride service provider in a mapping application;
FIG. 13B is another exemplary waiting for ride display presented in a map application.
Detailed Description
SUMMARY
In general, techniques for providing ride services within a map application may be implemented in a map application operating in: a portable computing device or a wearable device, one or more web servers, or a system comprising a combination of these devices. However, for clarity, the examples below focus primarily on embodiments in which a user requests a ride service via a map application within a portable computing device. The map application invokes one or more ride service APIs to communicate with the respective ride service application and/or ride service server. The map application may also communicate with a map data server and/or navigation data server to retrieve map and navigation data to display an interactive two-dimensional digital map of a geographic area surrounding the user's current location and a navigation direction to a destination location (also referred to herein as a "pick-up location") selected by the user.
The map application may then display ride service data for one or more ride service providers, including the type of ride service provided by each ride service provider, price estimates for each type of ride service, waiting times for each type of ride service, ride durations for each type of ride service, vehicles within a geographic area surrounding the user's current location, and so forth.
When the user selects the ride service provider and the type of ride service, the map application may prompt the user to select the pickup location. In some embodiments, the map application provides a default pickup location near the user's current location, and the user can adjust the pickup location via the user control. Also in some embodiments, the map application may provide a recommended pickup location based on the user's current location and context information. For example, in an area with multiple unidirectional streets, the map application may suggest a pickup location at the street that allows the driver to travel in the direction of the destination location so that the driver does not need to make unnecessary turns after pickup the user. In another example, recommended pickup locations may be determined based on traffic to avoid streets of traffic jams to minimize costs.
In response to receiving the selection of the pickup location, the map application may invoke a ride service API corresponding to the selected ride service provider and provide ride identification information of the user, the requested pickup location, and the type of ride service to the corresponding ride service application. The ride service application may then provide the ride identifier, the updated wait time, the updated price estimate, the updated ride duration, and the driver identification information for display on the map application via the ride service API. As a result, the driver can pick up the user at the requested pick-up location and get the user off the vehicle at the destination location.
Example hardware and software Components
Referring to fig. 1, an example communication system 100 in which the techniques outlined above may be implemented includes a client computing device 102, such as a portable device, configured to execute one or more ride service applications 126 and a map application 128. In addition to the client computing device 102, the communication system 100 also includes a server device 104, such as a navigation server device, configured to provide map display and navigation data to the client computing device 102. The communication system 100 also includes a third party provider device 106 (which operates independently and separately from the server device 104) that may be configured to communicate with the client computing device 102 and the server device 104 to provide ride service functionality. The client computing device 102, the server device 104, and the third party provider device 106 may be communicatively connected to one another via a network 108. The network 108 may be a public network such as the internet, or a private network such as an intranet.
The server device 104 may be communicatively coupled to a database 110 that, in an example embodiment, stores map data for various geographic areas. Similarly, the server device 104 may be communicatively coupled to a database 144 that, in an example embodiment, stores vehicle data 144 for the following vehicles: various vehicles associated with the user of the client computing device 102, vehicles associated with the third party provider 106, and other vehicles (data of which is collected by the server device 104 or other servers), or a combination of all three. More generally, the server device 104 may be in communication with one or more databases that store any type of suitable geospatial information or information that may be linked to a geographic context, such as coupons or offers. The server device 104 may also be communicatively coupled to a database (not shown) that, in an example embodiment, stores navigation data including stepwise navigation directions, such as driving, walking, riding, or public transportation directions, for example, which may ultimately be used by the ride service application 126, the map application 128, or both. For example, the server device 104 may request and receive map data from the map data database 110 and relevant vehicle data from the vehicle data database 144. In some implementations, the server device 104 may include several communicatively connected server devices. Similarly, the map data and vehicle data stored in databases 110 and 144, respectively, may actually be several databases communicatively connected in a cloud database configuration.
In an example implementation, the client computing device 102 may be, for example, a smart phone or tablet computer, and includes memory 120, one or more processors 112, a network interface 116, a User Interface (UI) 114, and one or more sensors 118. Memory 120 may be non-transitory memory and may include one or more suitable memory modules, such as Random Access Memory (RAM), read Only Memory (ROM), flash memory, other types of persistent memory, and the like. The UI 114 may be, for example, a touch screen. More generally, the techniques of this disclosure may be implemented in other types of devices, such as laptop or desktop computers, devices embedded in vehicles (e.g., head units), wearable devices (e.g., smart watches or smart glasses), and so forth.
Depending on the implementation, the one or more sensors 118 may include: a Global Positioning System (GPS) module to detect a location of the client computing device 102; a compass to determine the orientation of the client computing device 102; a gyroscope to determine rotation and tilt; accelerometers, and the like.
Memory 120 stores an Operating System (OS) 122, which may be any type of suitable mobile or general purpose operating system. The OS122 may include API functions that allow applications (e.g., the ride service application 126 and the map application 128) to interact with each other or retrieve, for example, sensor readings. For example, a software application configured to execute on the client computing device 102 may include instructions that call the OS122API to retrieve the current location and orientation of the client computing device 102 at that time. The API may also return a quantitative indication that indicates how well the API is determining the estimate (e.g., in percent).
The memory 120 also stores a map application 128 configured to generate an interactive digital map. The map application 128 may receive map data in a raster (e.g., bitmap) or non-raster (e.g., vector graphics) format from the map data database 110 and/or the server device 104. In some cases, map data may be organized into multiple layers, such as a base layer depicting roads, streets, natural formations, and so forth; a traffic layer describing current traffic conditions; describing a weather layer of the current weather condition; navigation layers describing the path to the destination, and so on. The map application 128 may also display a navigation direction from the starting location to the destination location. The navigation directions may include driving, walking, or public transportation directions.
It should be noted that although fig. 1 illustrates the map application 128 as a stand-alone application, the functionality of the map application 128 may also be provided in the form of an online service (which may be accessed via a web browser executing on the client computing device 102), as a plug-in or extension to another software application executing on the client computing device 102, and so on. The map application 128 may typically be provided in different versions for different respective operating systems. For example, a manufacturer of the client computing device 102 may provide a Software Development Kit (SDK) that includes software for Android TM Map application 128 of platform for iOS TM Another SDK of the platform, etc。
In some implementations, the server device 104 includes one or more processors 130, an API 132, a network interface 134, and a memory 136. The API 132 may provide functionality for interacting with applications that may be stored in the memory 136 on the server device 104. Memory 136 may be a tangible, non-transitory memory and may include any type of suitable memory module including Random Access Memory (RAM), read Only Memory (ROM), flash memory, other types of persistent memory, and the like. The memory 136 stores instructions executable on the processor 130 that can generate a map display to be displayed by the map application 128 for the geographic area. The memory 136 or a memory in another server similarly may store instructions that generate navigation directions to geographic locations within a geographic area and may be displayed as an overlay map display by the map application 128. In some implementations, the third party provider 106 can initiate a call to the server device 104 to obtain the navigation directions that can be used by the ride service application 126 on the client computing device 102.
For simplicity, fig. 1 illustrates only server device 104 as one example of a server. However, the server device 104 according to some embodiments includes a group of one or more server devices, each equipped with one or more processors and capable of operating independently of the other server devices. The server devices operating in such a group may: individually processing requests from client computing devices 102 in a distributed manner (e.g., based on availability), wherein one operation associated with processing a request is performed on one server device and another operation associated with processing the same request is performed on another server device; or individually process requests from the client computing devices 102 (e.g., based on availability) according to any other suitable technique. For the purposes of this discussion, the term "server device" may refer to a single server device or a group of two or more server devices.
In some implementations, the third party provider device 106 or the ride service provider device may include a processor 138, an API 140, a network interface 142, and a memory 144. The API 140 may provide functionality for interacting with applications that may be stored in the memory 144 on the third party provider 106. Memory 144 may be a tangible, non-transitory memory and may include any type of suitable memory module including Random Access Memory (RAM), read Only Memory (ROM), flash memory, other types of persistent memory, and the like. The memory 144 stores instructions executable on the processor 138 that may generate, process, and transmit requests for ride service functions in ride service applications, such as the ride service application 126 stored in the memory 120 of the client computing device 102.
In some implementations, the system 100 includes a number of third party provider devices 106 corresponding to a number of different ride service providers. Also in some examples, the client computing device 102 includes a number of ride service applications 126 corresponding to each ride service provider. In this way, the user may compare the ride service type, price estimates, ride time, and estimated wait time for several ride service providers.
FIG. 2 is a block diagram of an example software architecture 200 that may be implemented on the client computing device 102 and that may include protocols for communication between the operating system 122, ride service applications 126, map applications 128, services 202, and other applications 204 on the client computing device. In some implementations, the ride service application exposes the ride service API 206 invoked by the map application 128. In this way, the map application 128 may allow a user to request a ride service without having to leave the map application 128. For example, the map application 128 may provide the pickup and destination locations to the ride service API 206, which may in turn provide the type of ride service in the geographic area, price estimates for each type of ride service, waiting times for each type of ride service, ride durations for each type of ride service, number of vehicles within the geographic area, and so forth.
In general, the map application 128 may make function calls to the ride service application 126 or the ride service server 106 by accessing the ride service API 206. The APIs 206 facilitate inter-application communication and allow the mapping application 128 and ride service application 126 to maintain control over the flow, logic, and manner of handling by the user while still disclosing functions to other applications. Applications 126 and 128 may communicate using an inter-process communication (IPC) scheme provided by operating system 122. In some embodiments of the client computing device 102, the functions of the ride service application 126 may be provided as a static function library (library of function) accessible via the ride service API 208. In other words, some or all of the functions of the ride service application 126 may be performed as part of the map application 128. More generally, the ride service API 208 provides access to ride services to the map application 128 using any suitable software architecture and communication scheme, including those currently known in the art. The ride service API 208 may typically be provided in different versions for different respective operating systems. For example, a manufacturer of the client computing device 102 may provide a Software Development Kit (SDK) that includes software for Android TM Platform ride service API 208 for iOS TM Another SDK of the platform, and so on.
In some instances, the map application 128 may communicate with several ride service applications via respective APIs. If the user does not have a ride service application in communication with the map application 128, the user may be prompted to download the ride service application 126. In other embodiments, the user does not download the ride service application 126, but the map application 128 may communicate with a ride service server (e.g., the third party provider device 106 as shown in fig. 1) via the ride service API 206.
FIG. 3 is an exemplary timing diagram 300 depicting a call between a mapping application and a ride service application that utilize an API. Timing diagram 300 illustrates an example message timing diagram for one implementation of the embodiments disclosed herein. The timing diagram 300 includes a user 302, a map application 128, a ride service application 126, and a ride service API 208.
In the example timing diagram 300, a user 302 requests a ride service 304 via a user control presented on a display by the map application 128. For example, the user may request directions to the selected destination location to obtain a ride service transportation mode. In response to the request, the map application 128 may generate an API call for the ride service to the ride service application API 208, where, for example, the API call includes a request for the ride service and the user's current location and destination location 306. The API call is then sent as a request 308 to the ride service application 126 or ride service server (e.g., third party provider device 106).
The ride service application 126 may perform its own internal functions to determine the type of ride service available to service the user 302, price estimates to transport the user 302 to the destination location, waiting time to pick up the user 302, number of vehicles within the geographic area around the user's current location, and so forth. The ride service application 126 then prepares a response 310 to be sent to the map application 128, for example, with the type of ride service available, the estimated time of arrival through each type of ride service, the estimated price of each type of ride service, an estimate of the vehicles/drivers in the area, or a combination thereof. The ride service API 208 receives the response 310, then formats and provides it to the map application 128 (reference No. 311) for processing and manipulation as necessary for display 312 to the user 302.
For example, the map application 128 may display an indication of: each type of ride service available (e.g., a carpool ride service, a taxi ride service, a luxury car ride service, an oversized vehicle service), a price estimate for each type of ride service, a ride duration for each type of ride service, and an estimated wait time for each type of ride service. The map application 128 may also display an indication of vehicles on the map display that are proportional to the number of vehicles within the geographic area, as indicated by the ride service API 126. While the location of the vehicle on the map display may not accurately represent the location of the vehicle used by the ride service provider, the number of vehicles on the map display may be used to display an approximation of the number of vehicles in the area to the user. When multiple ride service providers are available, the map application 128 may display an indication of the vehicles used by each ride service provider in a different pattern or color.
In some embodiments, the displayed indication of the available types of ride service may include a selectable user control for selecting a type of ride service. The user 302 views the displayed indication 312 and selects the type of ride service. The map application 128 may then present a user control for selecting the pickup location. The user control may be a tack placed at or near the user's current location, which the user may drag to another location or move a tack to another location by entering an address or point of interest (POI) or in any other suitable manner. The pickup location and the selected type of ride service are then provided to the ride service API 208 (reference No. 316) and forwarded to the ride service application 126 (reference No. 318). The ride service application 126 then selects the driver to pick up the user and sends driver identification information (e.g., driver name, vehicle factory name, model number, and color, license plate number, etc.), updated price estimates, updated wait times, ride IDs for retrieving status information indicating that the driver is on the way to pick up the user, etc. for the selected driver to the ride service API 208 (reference No. 320), which is then formatted and provided to the map application 128 (reference No. 321). Accordingly, the map application 128 may present the user 302 with an indication of the status of the driver (e.g., on the way to pick up the user), an updated price estimate, an updated wait time, and driver identification information.
FIG. 4 is an exemplary flow chart 500 for transitioning between user interfaces during a ride service request within the map application 128. The method may be implemented in a set of instructions stored in a computer-readable memory and executable on one or more processors of the client computing device 102. For example, the method may be implemented by the mapping application 128, the ride service application 128, or any suitable combination thereof.
At block 502, a map display is presented that includes a geographic area around a current location of a user. An indication of the user's current location may also be presented on the map display. The map application 128 then presents a search bar for obtaining a geographic search query from the user and providing search results in response to the geographic search query at block 504. For example, the search results may include POIs, addresses, intersections, etc., and the user may select one of the search results as a destination location and request directions to the selected destination location.
The map application 128 may also include user controls for selecting between several modes of transportation, including a ride service mode of transportation. In response to receiving the ride service transportation mode, the map application 128 may present a ride request display (block 506) that includes an indication of: a ride service provider, a type of ride service from the ride service provider, a price estimate for each type of ride service, a ride duration for each type of ride service, a wait time for each type of ride service, and the like, similar to the display shown in fig. 11B. In some embodiments, the map application 128 may call a ride service API for each of the one or more ride service applications, and may provide the current location and destination location of the user to each of the ride service applications via the respective APIs.
In response to receiving the selection of the ride service provider and/or the type of ride service, the map application 128 may present a load request display (block 508) that includes user controls for selecting a load location, similar to the display shown in fig. 12A. The load request display may include a default load position that is within a threshold distance (e.g., 500 feet) of the user's current position, where the default load position is adjustable by the user. For example, the user may enter a load position or drag a tack presented at a default load position to select the load position. In some embodiments, the map application 128 may provide recommended pickup locations to save time and money. For example, the recommended pickup location may be 350 feet from the user's current location, and the pickup request display may indicate that the user may "save 3 minutes and $2" by selecting the recommended pickup location. The load request display may also include user controls for confirming the load location, such as a "confirm load" button after the load location is selected.
In response to receiving the selection of the pickup location, the map application 128 may present a waiting for ride display (block 510), similar to the display shown in FIG. 13A. The waiting for ride display may include an indication of: the current location of the driver, the driver's identification information, the estimated wait time for the driver to reach the selected pickup location, and user controls for contacting the driver. Once the driver arrives, the user may be transported to the destination location.
When a user requests a ride service within the map application 128, the map application 128 provides user login information to the ride service provider to log the user into a user profile maintained by the ride service provider. For example, the user profile may include a payment method of the user, a name of the user, an email address of the user, a phone number of the user, a photograph of the user (for the driver to identify the user), a user rating, a ride ID (for a ride currently in progress or a ride the user is requesting), or any other suitable user profile information. Once the user confirms the ride request, the map application 128 may receive a ride ID for retrieving status information of the ride, such as "wait for the driver to accept the ride request", "wait for the driver to arrive at the pickup location", "ride on", and "ride complete".
Fig. 5 is an exemplary state diagram 600 for requesting ride service via the map application 128 by calling the ride service API 208. The state diagram depicts several states, such as an initial state 602, a login state 604, a confirmation/reservation state 606, a recovery state 608, an in-flight state 610, and a transition state 612. At any time, any of states 602-610 may return to an initial state, as shown in state diagram 600.
In one embodiment, the user opens the map application 128 and begins at an initial state 602. In the initial state 602, the map application 128 presents a map display of the geographic area and may receive a geographic search query, provide search results in response to the geographic search query, and display a navigation or travel direction from the user's current location or some other specified starting location to the selected destination location. Navigation or direction of travel may be provided for several different forms of transportation (e.g., walking, riding, driving, public transportation, riding services, recommended transportation, which may include multiple transportation modes to a destination location based on minimum duration, distance, or minimum cost, etc.). When the user selects a ride transport mode or a direction of travel of multiple modes including a road segment covered by the ride and selects a type of ride provider/ride, the map application 128 proceeds to the login state 604.
In the login state 604, the map application 128 determines whether the user is logged into a client account 616 associated with the provider of the map application 128. If the user is not logged in, the map application 128 may provide user controls for entering user login information (e.g., a user name and password for logging into the client account 616). When the user logs in, the map application 128 logs the user into a user profile associated with a third party provider 618 that provides ride service. In some embodiments, the user may log into a third party provider using a customer account 616 associated with the provider of the map application 128. When the user logs into the third party provider, the map application 128 invokes the ride service API 208 to retrieve the ride ID associated with the user profile to determine whether there is a ride currently in progress. If there is a ride currently in progress, the map application 128 transitions to the resume state 608. On the other hand, if there is no ride ID, the map application 128 proceeds to the confirm/subscribe state 606.
In the confirm/subscribe state 606, and more particularly in the confirm state 620, the map application 128 presents a load request display that includes user controls for selecting a load location, similar to the display shown in FIG. 12A. The load request display may also include user controls for selecting or adding payment means. For example, the map application 128 may retrieve payment patterns for users stored with the ride service provider via the ride service API 208. The map application 128 may display masked (masked) indications of each of these payment methods for selection by the user and may display additional user controls for the user to enter new payment methods. In some implementations, when the user has selected the load location and payment method, the map application 128 can present a user control, such as a "confirm load" button, which when selected, transitions the map application 128 to the predetermined state 622.
In the predetermined state 622, the map application 128 requests ride service from the ride service provider to the destination location via the ride service API 208. The ride service API 208 then communicates with the ride service provider to select the driver for that ride. For example, the ride service provider may broadcast a message to each driver within a threshold distance of the pickup location and may select the first driver to respond to the broadcast message. In any event, the ride service API 208 may then provide the ride ID to the map application 128, and the map application 128 proceeds to the ride on state 626. In the ride on state, the map application 128 continuously or periodically (e.g., every 5-10 seconds) invokes the get ride state function 612 to receive state information about the ride state by providing the ride ID to the ride service API 208. Accordingly, the ride service API 208 provides status information to the map application 128. The status information may include: waiting for the driver to accept the ride 628, waiting for the driver to reach the pickup location 630, ride in progress 632, and ride complete 634.
The ride service API 208 may also return to the driver's current location for display via the map application 128 during the wait for the driver to reach the pickup location 630 and ride in progress 632 state. In this way, the map application 128 may present an indication of the driver and the pickup or destination location on the map display for the user to view the progress of the driver to the pickup location or the route to the destination location. Further, during the following states: waiting for the driver to accept the ride 628, waiting for the driver to reach the pickup location 630, and the ride in progress 632 state, the map application 128 may present a user control for canceling the ride that, when selected, may cause the map application 128 to provide a cancel request to the ride service provider via the ride service API 208 to cancel the ride. The map application 128 may also present a user control for modifying the destination location that, when selected, may cause the map application 128 to provide a request to modify the destination to the ride service provider via the ride service API 208.
Once the user gets off the vehicle at the destination location, the map application 128 may proceed to a completion state 632. At completion state 632, the map application 128 may present a summary of the ride, including the final price of the ride, user controls for scoring the driver, or any other suitable information regarding the score. The map application 128 may then return to the initial state 602.
As described above, when the user logs into the third party provider and there is a passenger currently in progress, the map application 128 transitions to the recovery state 608. For example, the user may have exited the map application 128 and then re-opened it when riding in a vehicle is requested. At the resume state 608, the map application 128 proceeds to a ride in progress state 626 and continuously or periodically (e.g., every 5-10 seconds) invokes the get ride status function 612 to receive status information regarding the ride status.
In addition to providing ride service, the map application 128 provides a variety of means of transportation for navigating the user to their destination location. For example, the user may select a recommended transportation means, which may include multiple transportation means based on a minimum duration, distance, or minimum cost, etc., to provide an optimal route to the destination location. In some embodiments, the user may provide preferences, such as "avoid highway," "utilize public transportation," "avoid night walk direction," "lowest cost," "shortest duration," may indicate a preferred mode of transportation, a preferred ride service provider, and/or a preferred type of ride service (e.g., a ride share service), or may provide any other suitable preference. Accordingly, the map application 128 may present one or more optimal routes to the destination location using one or more transportation means and according to the user's preferences.
In some embodiments, the map application 128 provides a request for navigation directions to the server device 104 using the recommended transportation means, the request including a starting location, a destination location, and user data containing the user's preferences. The server device 104 may retrieve map data, navigation data, traffic data, etc. to generate a route from a starting location to a destination location. In addition, in some embodiments, the server device 104 may wake the ride service API 208 to retrieve ride service data for the ride service provider, such as estimated wait time and price estimates for particular segments of the route. For example, the optimal route may include ride services to and/or from public transportation sites. More specifically, the server device 104 may generate recommended routes in a variety of ways including a first public transportation site one mile from the user's starting location and a second public transportation site one mile from the user's destination location. The recommended routes in various ways may include a ride service from a starting location to a first public transportation site and another ride service from a second public transportation site to a destination location. In another example, the recommended routes in multiple ways may include walking directions from a starting location to a first public transportation site or from a second public transportation site to a destination location.
By communicating with the ride service provider, the server device 104 may identify the ride service provider and/or the ride service type that minimizes cost and/or latency. When the user indicates a preferred ride service provider or ride service type, the server apparatus 104 may retrieve ride service data from the preferred ride service provider and include the preferred ride service provider in the route. The server device 104 may then generate one or more recommended routes in a variety of ways and provide the recommended routes to the map application 128 for the user to select one of the recommended routes and begin navigating to the destination location.
FIG. 6 illustrates a flow chart of an example method 800 of generating a recommended route from a starting location to a destination location in a plurality of ways. The method may be implemented in a set of instructions stored in a computer-readable memory and executable on one or more processors of the server device 104. In other embodiments, the method may be implemented by an application executable on the client computing device 102 or a combination of the server device 104 and the client computing device 102.
At block 802, a request for a direction of travel is received, the request including a starting location and a destination location. The request for the direction of travel may be received from a map application 128 executing on the user's client computing device 102. The user may provide the destination location, for example, by selecting a search result in response to a geographic search query, entering the destination location, touching the map display to select the destination location, or in any other suitable manner. The starting location may be the current location of the user or may be other locations provided by the user.
At block 804, the map application 128 may also provide a travel direction requesting to receive the recommended transportation style. The recommended transportation means may include a variety of transportation means. Further, in response to a request for a direction of travel using the recommended transportation means, the server device 104 may provide a plurality of routes to the destination location, each involving one or more transportation means for selection by the user. When a travel direction using the recommended transportation means is requested, the map application 128 may provide user preferences for the recommended route, such as "avoid highway," "utilize public transportation," "avoid night walk direction," "lowest cost," "shortest duration," preferred ride service provider and/or preferred ride service type (e.g., ride share service), or any other suitable user preference.
In response to receiving the request for a direction of travel using the recommended transportation means, the server device 104 may identify several routes from the starting location to the destination location, each involving one or more transportation means (block 806). In some embodiments, the route may include a first road segment using a ride service transportation mode and a second road segment using another transportation mode (e.g., walking, driving, riding, public transportation, etc.). For example, the server device 104 may identify a first route that includes driving from a starting location to a destination location or subscribing to a ride service. The server device 104 may identify a second route that includes walking to a train station, boarding a train from a first train station to a second train station, and subscribing to a ride service from the second train station to a destination location. Further, the server device 104 may identify a third route that includes riding from a starting location to a bus stop, riding from a first bus stop to a second bus stop, walking from the second bus stop to a train stop, riding from the first train stop to the second train stop, and walking to a destination location. In other embodiments, the map application 128 uses the cached map data stored in the local memory of the client computing device 102 to generate the direction of travel, or uses the cached map data to generate the direction of travel for road segments of the route that do not include the ride service.
In some embodiments, the identified route may include a particular ride service provider and/or ride service type. For example, some ride service providers may include a class (share) ride service type, and routes may include taking a train to a station near a class loading location, and then employing the ride service to walk a distance from the class loading location to a class station from a destination location. In this way, the user can save time and reduce costs when the on-board location can be synchronized with the train station.
At block 808, each of the identified routes is ranked or scored according to an optimization technique. For example, the identified routes may be ranked or scored according to one or more factors of distance, duration, cost, user data (including user preferences), and the like. For example, the identified routes may be ranked to minimize the total travel time to the destination location. In another example, the identified routes may be ranked to minimize the total travel price to the destination location.
In yet another example, each identified route may receive a distance score, a duration score, a cost score, a user preference score, or any other suitable score, and the scores may be weighted, aggregated, or combined in any suitable manner to generate a total score for each route. The routes may then be ordered in the order of their respective scores to minimize cost, time, and/or distance. In some embodiments, routes that do not meet the user's preferences may be filtered out or a null score may be received. In this way, recommended routes and/or ride service providers/ride service types may be ranked/selected according to user data. For example, if the user indicates that he does not want to walk at night, any route including the walking road segment after a threshold period of time may be filtered out or ranked at the bottom. The fee may be determined based on the fee for use of a particular public transportation system or the fee for use of a particular ride service provider and/or ride service type. For example, the server device 104 may call one or more ride share APIs 208 to determine price estimates for using a particular ride service provider and/or ride service type for the road segments of the route.
In addition to ranking the identified routes, the server device 104 may rank candidate rides, where each candidate ride corresponds to a particular ride service provider and ride service type. Candidate rides may be ranked or scored according to one or several factors such as distance, duration, cost, user data (including user preferences), and the like. For example, candidate rides may be ranked to minimize the waiting time for the driver to reach the pickup location. In another example, candidate rides may be ranked to minimize the total price of travel to the destination location. The server device 104 may rank the candidate rides individually according to waiting time, price, or any other suitable category. In some embodiments, candidate rides may also be ranked according to user feedback data of the ride service provider. The user feedback data may include data indicating past scoring or commentary on the ride service provider by the passenger.
Then, at block 810, the server device 104 provides a list of route sets or rides (e.g., the three highest ranked routes) ranked above a threshold as recommended routes or rides to the map application 128 for the user to select from. For example, an indication of each of the top three routes that are highest ranked (e.g., a series of icons that are transportation means representing segments of the routes) may be provided in an area of the map display, and the user may select one of the routes by touching the indication of the selection of the recommended route. In other embodiments, the server device 104 selects one route (e.g., the highest ranked route) and provides the selected route to the map application 128. In an exemplary scenario, the map application 128 displays three routes, where a first route includes booking a taxi cab ride service provided by Rider from a starting location (e.g., a user's current location) to a train station, riding a train from a first train station to a second train station, and then walking to a destination location. The second route includes walking to a class pick-up location to take a class ride provided by DriverCo, riding the class ride to a second class station/pick-up location, and then walking to a destination location. The third route includes walking to a bus stop, boarding a bus from the first bus stop to a second bus stop, walking to a train stop, boarding a train from the first train stop to the second train stop, and then ordering a ride share service provided by Rider from the second train stop to a destination location.
When a user selects one of a plurality of ways of route that includes a recommendation of a road segment covered by the ride service or selects a route that uses a ride transport way, the map application 128 may call one or more ride service APIs 208 to communicate with several ride service providers. For example, the route may include boarding a train from a first train station to a second train station, and then ordering a boarding service from the second train station to a destination location. In this example, the second station may be a pickup location of the ride service and the destination location may be a passenger location. The map application 128 may identify an estimated time at which the user will reach the second train station to determine the pickup location. Accordingly, the map application 128 may request that the ride begin within an estimated time or a threshold period of estimated time (e.g., five minutes, ten minutes, etc.) at the pickup location.
Likewise, when the user selects one of the recommended routes, the map application 128 displays a visualization of the route on the map display. For example, the visualization may include an indication of a start location and a destination location, such as a tack at both locations. The visualization may also include an indication of a route from the starting location to the destination location. For example, each of the streets, roads, highways, and motorized routes along the route may be highlighted or indicated in any suitable manner. Also, each segment of the route may include an indication of the respective transportation means of the corresponding segment. For example, a first section of the route may be represented by a broken line indicating a walking direction of the first section, and a second section of the route may be represented by a solid line indicating a traveling direction of the second section.
In some embodiments, when a user selects a route that includes multiple ways of recommendations for a particular ride service provider and ride service type, the map application 128 may present only ride service data for the selected ride service provider and ride service type. For example, when a user or server device 104 selects a particular ride from among a number of candidate rides, the map application 128 may request ride service data for the selected ride. In other embodiments, the map application 128 presents ride service data for each ride service provider and ride service type to allow the user additional opportunities to select the ride service provider and ride service type.
FIG. 7 illustrates a flow chart of an example method 900 of providing ride service within a map application without directing a user to a separate ride service application; the method may be implemented in a set of instructions stored in a computer-readable memory and executable on one or more processors of the client computing device 102. For example, the method may be implemented by an application program (e.g., map application 128) stored on the client computing device. In other embodiments, the method may be implemented by the server device 104 or a combination of the server device 104 and the client computing device 102.
At block 902, a route is selected from a starting location to a destination location, the route including at least a road segment covered by a ride service. For example, the map application 128 may present several recommended routes to the destination location in a variety of ways, and the user may select one of the recommended routes in a variety of ways by, for example, touching an indication of the selected route, as described above with reference to FIG. 6. In another example, the map application 128 may include a user control for requesting a direction of travel to a selected destination location. When the user requests a direction of travel via the user control, the map application 128 may provide a user control for selecting a mode of transportation that includes a ride service mode.
When the ride service mode is selected, the map application 128 may call one or several ride service APIs 208 to communicate with the corresponding ride service provider to request a ride service (block 904). For example, the map application 128 may use each ride service API 208 to provide a ride service request, as well as the user's current location and destination location. The ride service API 208 may then forward the ride service request to the corresponding ride service application 126 or ride service provider server 106, which may in turn provide ride service information to the ride service API 208, which then forwards the ride service API 208 to the map application 128 (block 906). The ride service information may include the type of ride service available, the expected arrival time through each type of ride service, the estimated price of each type of ride service, an estimate of the vehicles/drivers in the area, and so forth.
In addition to providing ride service information, the ride service provider may also provide style or visualization information and customized layouts via the ride service API 208 to present the ride service information in a map display, other elements on the map display, or any suitable visualization of the ride on the map display. This is described in more detail below with reference to fig. 9-13B. More specifically, the map application 128 may retain control of certain components on the map display while allowing ride service providers to customize the layout for other components on the map display. For example, the map application 128 may retain control of the base map contained within the map display, but may allow the ride service provider to customize a search bar to overlay the base map at the top of the map display, or to customize a rectangular layout to overlay the base map at the bottom of the map display. The customized layout need not be at the top or bottom of the map display, and the ride service provider may also be in the location of the customized layout within the map display. In addition to the customized layout, the ride service provider may also provide style information to adjust the style of elements on the map display controlled by the map application 128. For example, the ride service provider may provide style or visual information for rendering elements in the base map, such as background colors of the base map, colors of roads and streets, font size, colors and types of map labels, color schemes, boluses or stroke types of the base map, graphics (e.g., a vehicle icon representing a current location of a vehicle on a map, an icon representing a current location of a user, a pickup location icon representing a pickup location, a drop location icon representing a drop location, a current orientation icon representing a current orientation of a client computing device), or any other visual attribute.
In any event, the map application 128 may then present the ride service information on a map display (block 908), similar to the display shown in FIG. 9. More specifically, for each ride service provider, the map application 128 may present an indication of the ride service provider, such as a name and logo (logo) of the ride service provider. The map application 128 may also present an indication of the type of ride service provided by the ride service provider (e.g., a car pool ride service, a taxi ride service, a limousine ride service, a class ride service, an oversized vehicle service, etc.), as well as price and wait time estimates for each type of ride service. When the map application 128 displays ride service information for a plurality of ride service providers on the map display, the user may select one of the ride service providers via a user control, such as touching an indication of the selected ride service provider. In response to selecting the ride service provider, the map application 128 may present an indication of the type of ride service provided by the selected ride service provider and price and wait time estimates for each ride service type. The user may also select a ride-through service type via a user control, such as touching an indication of the selected ride-through service type.
Further, the map application 128 may present the ride service information for each ride service provider with the corresponding style or visual information and the customized layout from the corresponding ride service provider. Thus, the map application 128 may re-render the map display according to the received style or visualization information. In some embodiments, when the user selects one of the candidate ride service providers, the map application 128 adjusts the map display to include style information and a customized layout for the selected ride service provider. Then, when the user selects another ride service provider, the map application 128 alters the map display to include style information and customized layouts for the other ride service provider. For example, rider may provide a pink vehicle icon, a dark blue background color of the base map, a triangle icon representing the current location of the user, and a customized layout for selecting a ride type of service, wherein the user may provide a swipe gesture to view the new ride type of service on the map display. The customized layout may also include icons, for example, to select between economy or premium rides, to share the fare among several passengers on the ride, or to order the ride for a community.
At block 910, the map application 128 receives a selection of a ride service provider and a ride service type. For example, the user may select a ride share service named ridecrpool from Rider by touching a select user control (e.g., a ridecrpool icon or a "select ridecrpool" button). As a result, the map application 128 presents a load request display that includes user controls for selecting a load location, similar to the display shown in fig. 12A. The user control may be a thumbtack or other icon that is placed at a default load location on the map display. For example, the default loading location may be the current location of the user or may be a recommended loading location.
The user may then adjust the pickup location by, for example, dragging the user control to another location on the map display. In some embodiments, the load request display includes an indication of recommended load locations that remain on the load request display when the user moves the tack to another location so that the user may later select the recommended load locations. The indication of the recommended pickup location may include an indication of a distance from the user's current location to the recommended pickup location, as well as an indication of an amount of time and cost savings associated with the recommended pickup location. For example, in an area with multiple unidirectional streets, the map application 128 may recommend a pickup location at the street that allows the driver to travel in the direction of the destination location so that the driver does not need to make unnecessary turns after pickup the user. In another example, recommended pickup locations may be determined based on traffic to avoid traffic-congested streets to minimize costs. The map application 128 may identify recommended pickup locations within a walking distance or threshold distance (e.g., within 500 or 1000 feet) of the user's current location to minimize the time and/or cost of riding.
In addition, the load request display may include a preview of the three-dimensional street level view of the area surrounding the load location in a portion of the load request display so that the user may easily find the driver at the load location. The preview may include selectable user controls such that when selected, the load request display presents a full screen view of the three-dimensional panoramic street level view of the area surrounding the load location. In some embodiments, the load request display may overlay the street level view at a fixed predefined location on the base map (e.g., a location corresponding to the load location). In addition, the load request display includes style information and a customized layout from the ride service provider. For example, the ride service provider may provide user controls, such as a confirmation button or other suitable icon, for confirming the load location, and may indicate the location of the user control within the load request display (e.g., below the bottom map at the bottom of the load request display, above the bottom map at the top of the load request display, etc.). In some embodiments, the load request display or any other suitable display may also include a preview of a three-dimensional street level view of the area surrounding the passenger location. The preview may include selectable user controls such that when selected, the corresponding display presents a full screen view of the three-dimensional panoramic street level view of the area surrounding the poddown location. In some embodiments, the corresponding display may overlay the street level view at a fixed predefined location (e.g., a location corresponding to a podcast location) on the base map.
Thus, the map application 128 identifies the pickup location of the ride as the location of the user control for selecting the pickup location when the confirm user control is selected. At block 912, the map application 128 invokes the ride service API 208 to provide the ride service provider with the load request and the selected ride service type and load location. In some embodiments, the map application 128 also provides a ride identifier, such as user login information, for logging the user into a user profile maintained by the ride service provider. For example, the user profile may include a payment method of the user, a name of the user, an email address of the user, a phone number of the user, a photograph of the user (for the driver to identify the user), a user rating, a ride ID of a ride currently being made or requested by the user, or any other suitable user profile information. The ride service API 208 may then forward the ride service request to the corresponding ride service application 126 or ride service provider server 106, which may in turn provide ride confirmation information to the ride service API 208, which then forwards the ride service API 208 to the map application 128 (block 914).
The ride confirmation information may include a ride ID for retrieving status information of the ride, driver identification information of the selected driver (e.g., name of the driver, vehicle manufacturer name, model number, and color, license plate number, etc.), updated price estimates, updated waiting time, and updated ride duration. The ride service provider may also provide style information and customized layouts via the ride service API 208 to present ride confirmation information on the map display or other elements on the map display.
At block 916, the map application 128 presents the ride confirmation information on a map display, similar to the display shown in FIG. 13A. More specifically, the map application 128 may present an indication of the estimated wait time for the driver to reach the pickup location (e.g., "the driver arrives within 1 minute"), an indication of the current location of the user, an indication of the pickup location, and an indication of the driver's location on the floor map. The map application 128 may also present user controls for contacting the driver. In addition, the map application 128 may present the ride confirmation information of the ride service provider with the received style information and the customized layout.
At block 918, the map application 128 periodically sends a status request to the ride service provider, such as by calling the ride service API 208 and providing a ride ID. The status request may be sent every five seconds, every ten seconds, every 30 seconds, every minute, etc. (block 922). The ride service provider may then return to a state, such as waiting for the driver to accept the ride, waiting for the driver to reach a pickup location, while the ride is in progress, completion of the ride, or any other suitable state. The ride service provider may also return to the driver's location when the status is waiting for the driver to reach the pickup location or while the ride is in progress. The map application 128 then presents the status indicators and/or the driver's location on the map display (block 920). For example, when the state is waiting for the driver to accept the ride, the map display may include a banner (banner) indicating that the driver has not accepted the ride. When the status is waiting for the driver to reach the pickup location, the map display may include a banner indicating the estimated waiting time for the driver to reach the pickup location and an indication of the driver's location on the floor map, such as a vehicle icon at the driver's location. In addition, when the state is in progress, the map display may include an indication of the driver's position on the floor map. The map application 128 may continue sending status requests until the status is ride complete (block 924).
In some scenarios, a user may transition from the ride service portion of the mapping application 128 to a map view of other geographic areas to search for points of interest or other locations, or perform other mapping functions while ordering ride services or while in a ride. The map application 128 may continue to receive status information regarding the ride status from the ride service provider as the user transitions to other map functions. In some embodiments, the map application 128 presents a banner overlaying the map display, where the banner indicates the state of the ride. For example, a banner may claim "riding in progress. 10 minute distance). The slogan may include user controls that, when selected, convert the map application 128 back to the ride service section to view details about the ride, change destination locations, cancel the ride, and so forth.
FIG. 8 illustrates a flow chart of an example method 1000 of presenting ride status information when a user transitions to other map functions. The method may be implemented in a set of instructions stored in a computer-readable memory and executable on one or more processors of the client computing device 102. For example, the method may be implemented by an application program (e.g., map application 128) stored on the client computing device. In other embodiments, the method may be implemented by the server device 104, or a combination of the server device 104 and the client computing device 102.
At block 1002, the map application 128 presents a status indicator or a location of the driver requesting the passenger to travel to the destination location on the map display. The status may be waiting for the driver to accept the ride, waiting for the driver to reach the pickup location, while the ride is in progress, completion of the ride, or any other suitable status. Then, at block 1004, the map application 128 receives a request for additional map data using a different map function than the ride service section. For example, the request may be a geographic search query, a request to display a geographic area, or a request for a direction of travel to another destination location. In any event, the map application 128 may present the requested map data in the map display using the ride status indicator, such as a banner overlaying the map display, the banner indicating the ride status (block 1006). The slogan may include user controls that, when selected, convert the map application 128 back to the ride service section to view details about the ride, change destination locations, cancel the ride, and so forth. In response to receiving the selection of the user control (block 1008), the map application 128 determines whether the ride has been completed (block 1010). If the ride has not been completed, the map application 128 transitions back to the ride service section (block 1002).
Fig. 9-13B illustrate example map displays 1400-1800B for providing ride services via the map application 128, such as a ride request display (fig. 9, 11A, 11B), a pickup request display (fig. 10, 12A-C), and a wait for ride display (fig. 13A, 13B). Each of the map displays may be presented by the map application 128 and may include ride service data obtained from one or several ride service providers by invoking one or several ride service APIs. In addition, each of the map displays may include a base map, such as base map 1440 shown in FIG. 9, and customized layout components that overlay the base map and are provided by the ride service provider, such as layout components 1602, 1608 shown in FIG. 11A. Further, the elements in the base graph may be stylized by the ride service provider. For example, the ride service provider may provide style information for elements contained in the base map, such as the background color of the base map, the colors of highways and streets, the font size, color, and type of map labels, icons representing vehicles on the map, icons representing the current location of the user, thumbtacks representing the location of the destination, and so forth.
FIG. 9 illustrates an exemplary display 1400 of selecting ride services in the map application 128. Display 1400 may be presented on a portable device, such as client computing device 102 shown in fig. 1. Display 1400 may include user controls 1402 for entering a starting location, user controls 1404 for entering a destination location, user controls 1406 for selecting a mode of transportation to travel from the starting location to the destination location, and a floor 1440 centered on a current location 1408 of the user. In some embodiments, the default initial position 1402 may be the current position of the user. When a user selects ride service conveyance way 1442 or selects a recommended conveyance way (not shown) having directions of travel including multiple ways of road segments covered by ride service, display 1400 may include a customized layout 1410 of overlay base 1440 that presents an indication of one or several ride service providers 1420, 1422.
In the example display 1400, the ride service provider includes a Rider 1420 and a DriverCo 1422. Each ride service provider may provide a customized layout, and display 1400 may present a layout customized by the selected ride service provider. For example, the user may select the Rider 1420 by touching an indication of the Rider on the selection display 1400, and the display 1400 may present the layout 1410 customized by the Rider. The customized layout 1410 includes an indication of the type of ride service 1430 (ridecpool) and selectable options for the ridecpool service, such as economy or premium, apportioning the fare among the passengers, requesting ridecpool for a large group, and so forth. The user may perform a swipe gesture in the customized layout 1410 to view other types of ride services provided by Rider. However, this is merely an example layout, for illustrative purposes only. In other customized layouts, for example, display 1400 may include indications of each type of ride service 1430 at the same time, and the user may select the type of ride service by touching the corresponding indication. In any case, the customized layout 1410 also includes a user control 1432 to select the rideprool service provided by Rider.
FIG. 10 illustrates an exemplary display 1500 for selecting a pickup location in the map application 128. Display 1500 may be presented on a portable device, such as client computing device 102 shown in fig. 1. As in fig. 9, display 1500 may include a base view 1502 centered around a user's current location 1520. The display may also include a user control 1522, such as a thumbtack, for the user to select the load location. In some embodiments, the default pickup location may be the user's current location 1520 and the user may drag the thumbtack to select another location for the pickup location. Display 1500 also includes indications of recommended load locations 1504 and 1506 that are shown as circles. A preview of the three-dimensional street level view 1508 of the area surrounding the pick-up location may be provided for one of the recommended pick-up locations so that the user can easily find the driver at the pick-up location. The preview may include selectable user controls such that when selected, the load request display presents a full screen view of the three-dimensional street level view of the area surrounding the load location. Further, the display 1500 may include an indication of the number of available vehicles 1510 employed by the ride service provider. While the location of the vehicle on the map display may not accurately represent the location of the vehicle used by the ride service provider, the number of vehicles on the map display may be used to display an approximation of the number of vehicles in the area to the user.
In some embodiments, the map application 128 identifies landmarks corresponding to the pickup location or within a threshold distance (e.g., 100 feet) of the pickup location. The map application 128 may then include street level images of the identified landmarks in the three-dimensional street level view 1508. Additionally or alternatively, the map application 128 may provide an indication of a landmark via an interface, such as "connect in front of Disney store". For example, the map application 128 may call an API disclosed by the ride service provider to obtain geographic coordinates or street addresses (e.g., "123Elm St.") of the pickup locations and identify the appropriate landmarks corresponding to those coordinates or addresses. To this end, the map application 128 may send coordinates and/or street addresses to a map data server, or in some cases rely on cached map data and street level images. The map data server or map application 128 (when using cached data) may identify the landmark based on attributes such as saliency (e.g., relative size of the landmark with respect to other objects in the vicinity of the landmark, or color differences between the landmark and nearby objects), visibility (e.g., direct line of sight between the location of the load and the landmark), popularity (e.g., number of user-generated content, e.g., photos, comments, etc., related to the landmark), or other suitable signals. Further, in some embodiments, the map data server or map application 128 may select a street-level image of the landmark locations to face the landmarks contained in the view 1508, regardless of the intended orientation of the user at the pick-up location with respect to the landmarks. For example, the map data server or map application 128 may provide an image of a monument and generate a notification "load at Elm st.123, across from the monument street".
Fig. 11A and 11B illustrate example ride request displays 1600A, 1600B in the map application 128 that include layout components tailored by the ride service provider. The displays 1600A, 1600B may be presented on a portable device, such as the client computing device 102 illustrated in fig. 1. As described above, the ride service provider may provide customized layout and style information for presentation in the map application 128. The ride request display 1600A includes a base 1604, a custom location search component 1602 overlaying the base 1604, and a custom third party layout component overlaying the base 1608. The ride service provider may customize these components 1602, 1608 in any suitable manner and may adjust the location of the components 1602, 1608 within the ride request display 1600A. For example, rider may request that location search component 1602 be presented at the bottom of ride request display 1600A. In one example, the location search component 1602 includes user controls to provide a starting location, a destination location, and a transportation style that provides a travel direction to the destination location. The custom third party layout component 1608 includes selectable indications of each ride service type provided by the ride service provider and indications of price estimates and wait times for each ride service type. The customization component may also include icons, background colors, animations, or any other suitable graphical element. FIG. 11B illustrates example customized layout components 1602, 1608 of the ride request display 1600B. In the ride request display 1600B, the custom location search component 1602 includes user controls for providing a starting location and a destination location. The custom third party layout component 1608 includes selectable circular indications 1610a-e of ride service types available from ride service providers. The custom third party layout component 1608 also includes price estimates, estimated wait times and payment methods, and user controls 1612 for requesting the selected ride service provider and/or ride service type.
In response to receiving a selection of the user control 1612 for requesting the selected ride service provider and/or ride service type, the map application 128 presents a load request display 1700A-C, as shown in FIGS. 12A-12C. The load request displays 1700A-C may be presented on a portable device, such as the client computing device 102 shown in fig. 1. The load request display 1700A includes a base map 1702, a load position layout component 1704, and a load confirm layout component 1706. In some embodiments, the load confirmation layout component 1706 may be customized by the selected ride service provider. The load request display 1700A also includes an indication of the user's current location 1710 and a user control 1712 (e.g., a thumbtack) for selecting a load location. In some embodiments, the default pickup location may be the user's current location 1710, and the user may drag a thumbtack to select another location for the pickup location. The load request display 1700A also includes a preview of the three-dimensional street level view 1708 of the area around the selected load location or around the recommended load location so that the user can easily find the driver at the load location. The preview may include selectable user controls such that when selected, the load request display 1700A presents a full screen view of the three-dimensional street level view of the area surrounding the load location.
Fig. 12B illustrates another example of a load request display 1700B when a user 1710 is located at an airport and has multiple recommended load locations. The recommended pickup locations are displayed as available pickup areas in location list 1714. The user can select one of these load locations and confirm the selection using the load confirm layout component 1706. Fig. 12C shows yet another example load request display 1700C when a user 1710 is located at an airport. In addition to location list 1714, load request display 1700C also includes user control 1716 for selecting one of several floors to which the user may be loaded. For example, location list 1714 may include a first set of recommended pickup locations for a first floor of a building and a second set of recommended pickup locations for a second floor of the building.
In response to receiving a selection of the user control 1706 for confirming the pickup location, the map application 128 presents a waiting ride display 1800A, 1800B, as shown in FIGS. 13A and 13B. The waiting for ride display 1800A, 1800B may appear on a portable device, such as the client computing device 102 shown in fig. 1. The waiting for ride display 1800A may include an indication of the user's current location 1802, an indication of the user's pickup by the vehicle 1804, and an indication of the pickup location. The wait for ride display 1800A may also include an arrival layout component 1808 that includes an indication of estimated wait time for the driver to arrive at the selected pickup location. In addition, the waiting for ride display 1800A includes a contact driver layout component 1810 with user controls to contact the driver. In some embodiments, the contact driver layout component 1810 may be customized by the selected ride service provider. Also in some embodiments, the driver may be contacted via an SMS application or chat application.
FIG. 13B illustrates another waiting for ride display 1800B presented when the user 1802 is located at an airport. The waiting for ride display 1800B includes an arrival layout component 1808 and an additional instruction layout component 1812 for providing detailed walk directions to the pickup location. As shown in fig. 12C, the waiting for ride display 1800B includes a user control 1814 for selecting one of several floors on which the user may be loaded.
Additional precautions
The following additional considerations apply to the previous discussion. Throughout this specification, multiple instances may implement a component, operation, or structure described as a single instance. Although individual operations of one or more methods are illustrated and described as separate operations, one or more of the individual operations may be performed concurrently and nothing requires that the operations be performed in the order illustrated. Structures and functions presented as separate components in the example configuration may be implemented as a combined structure or component. Similarly, structures and functions presented as a single component may be implemented as separate components. These and other variations, modifications, additions, and improvements fall within the scope of the presently disclosed subject matter.
In addition, certain embodiments are described herein as comprising logic or multiple components, modules, or mechanisms. The modules may constitute software modules (e.g., code stored in a machine-readable medium) or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in some manner. In example embodiments, one or more computer systems (e.g., stand-alone, client, or server computer systems) or one or more hardware modules of a computer system (e.g., a processor or a group of processors) may be configured by software (e.g., an application or application portion) to operate as a hardware module that performs certain operations described herein.
In various embodiments, the hardware modules may be implemented mechanically or electronically. For example, a hardware module may include permanently configured special purpose circuits or logic (e.g., as a special purpose processor such as a Field Programmable Gate Array (FPGA) or an application-specific integrated circuit (ASIC)) to perform certain operations. A hardware module may also include programmable logic or circuitry (e.g., embodied in a general-purpose processor or other programmable processor) that is temporarily configured by software to perform certain operations. It should be appreciated that cost and time considerations may dictate that the decision of a hardware module be implemented mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software).
Thus, the term "hardware" should be understood to include tangible entities, be it entities that are physically constructed, permanently configured (e.g., hardwired) or temporarily configured (e.g., programmed) to operate in some way or to perform certain operations described herein. As used herein, "hardware-implemented module" refers to a hardware module. In view of embodiments in which hardware modules are temporarily configured (e.g., programmed), each hardware module need not be configured or instantiated on any one instance in time. For example, where the hardware modules include a general-purpose processor configured using software, the general-purpose processor may be configured at different times as corresponding different hardware modules. For example, software may be correspondingly configured on a processor to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.
A hardware module may provide information to, or receive information from, other hardware. Thus, the described hardware modules may be considered to be communicatively coupled. If there are a plurality of such hardware modules at the same time, communication may be achieved by signal transmission (e.g., through appropriate circuitry and buses) connecting the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times, communication between the hardware modules may be achieved, for example, by storing and retrieving information in memory structures accessible to the multiple hardware modules. For example, one hardware module may perform an operation and store an output of the operation in a memory device communicatively coupled thereto. Another hardware module may then access the memory device at a later time to retrieve and process the stored output. The hardware module may also initiate communication with an input or output device and may operate on a resource (e.g., a collection of information).
Methods 500, 800, 900, and 1000 may comprise one or more functional blocks, modules, individual functions, or routines that are stored in a non-transitory computer-readable storage medium in the form of tangible computer-executable instructions and executed using a processor of a computing device (e.g., a server, personal computer, smart phone, tablet computer, smart watch, mobile computing device, or other personal computing device as described herein). For example, the methods 500, 800, 900, and 1000 may be included as part of any back-end server (e.g., a map data server, navigation server, or any other type of server computing device as described herein), or as part of a module external to such an environment. Although the figures may be described with reference to other figures for ease of explanation, the methods 500, 800, 900, and 1000 may be used with other objects and user interfaces. Furthermore, while the above explanation describes steps of methods 500, 800, 900, and 1000 performed by particular devices (e.g., client computing device 102 and server device 104), this is for illustration purposes only.
Various operations of the example methods described herein may be performed, at least in part, by one or more processors that are temporarily configured (e.g., via software) or permanently configured to perform the relevant operations. Such processors, whether temporarily configured or permanently configured, may constitute processor-implemented modules that operate to perform one or more operations or functions. In some example embodiments, the modules referred to herein may comprise processor-implemented modules.
Similarly, the methods or routines described herein may be implemented, at least in part, by a processor. For example, at least some operations of the method may be performed by one or more processors or processor-implemented hardware modules. The performance of certain operations may be distributed among one or more processors, residing not only in a single computer, but also across multiple computers. In some example embodiments, one or more processors may be located in a single location (e.g., in a home environment, an office environment, or as a server farm), while in other embodiments, the processors may be distributed across multiple locations.
One or more processors may also support performance of related operations in a "cloud computing" environment or as SaaS operations. For example, as described above, at least some of the operations may be performed by a set of computers (e.g., examples of machines including processors), which may be accessed via a network (e.g., the internet) and via one or more suitable interfaces (e.g., APIs).
Still further, these figures depict some embodiments of the example environment for purposes of illustration only. Those skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein.
Those skilled in the art will appreciate additional alternative structural and functional designs for orienting a user within a map display by the principles disclosed herein after reading this disclosure. Thus, although specific embodiments and applications have been illustrated and described, it is to be understood that the disclosed embodiments are not limited to the precise construction and components disclosed herein. Various modifications, changes, and variations apparent to those skilled in the art may be made in the arrangement, operation, and details of the methods and apparatus disclosed herein without departing from the spirit and scope as defined in the appended claims.
Claims (16)
1. A method performed by a portable computing device for providing map data related to a ride service, the method comprising:
providing, by the one or more processors, an interactive two-dimensional digital map via the user interface;
Receiving a request to harvest a travel direction to a destination via the user interface;
obtaining, by the one or more processors, an indication of a ride from a third party provider of a ride service from a pickup location to a drop-in location to traverse at least a portion of the route;
acquiring, by the one or more processors, street level images of the pick-up location or the pick-up location;
displaying a preview of street level images acquired for the pick-up location or the drop-in location overlaid on the digital map; and
in response to detecting selection of a preview of the street level image via the user interface, the two-dimensional digital map is converted to an interactive three-dimensional panoramic display of the street level image.
2. The method of claim 1, further comprising:
automatically identifying landmarks proximate to the pick-up location or the pick-up location indicated by the provider;
wherein displaying the street level image acquired for the pick-up location or the drop-off location includes displaying the automatically identified landmark.
3. The method of claim 2, further comprising:
generating, by the one or more processors, a description of the pickup location or the drop-in location, the description including a reference to the identified landmark; and
Displaying a description of the pick-up location or the drop-off location and a street-level image of the pick-up location or the drop-off location.
4. The method of claim 2, further comprising:
transmitting the pickup location or the passenger location indicated by the provider of the ride service to a map data server via a communication network; and
a street level image of the landmark is received from the map data server.
5. The method of claim 4, wherein sending the pickup location or the drop-in location to the map data server includes specifying a radius within which the map data server will search for landmarks proximate to the pickup location or the drop-in location.
6. The method of claim 1, further comprising:
providing, by the one or more processors via the user interface, an interactive control for modifying the pickup location, and
in response to receiving a selection of a new pickup location, an indication of a modified ride is automatically obtained from a provider of the ride service.
7. The method of claim 1, further comprising providing, by the one or more processors, a visualization of at least a portion of the route corresponding to a ride on the digital map.
8. The method of claim 1, wherein displaying the street level image acquired for the pickup location or the drop-in location comprises: the street level image of the pick-up location or the drop-in location is overlaid at a fixed, predefined location on the digital map.
9. A computing device for providing map data related to a ride service, comprising:
one or more processors;
a user interface;
a non-transitory computer-readable medium having instructions stored thereon that, when executed by the one or more processors, cause the computing device to:
providing an interactive two-dimensional digital map via the user interface,
receiving a request to harvest a travel direction to a destination via the user interface;
obtaining an indication of a ride from a pickup location to a pick-up location from a third party provider of the ride service to traverse at least a portion of the route;
acquiring street-level images of the pick-up location or the pick-up location;
displaying a preview of street level images acquired for the pick-up location or the drop-in location overlaid on the digital map; and
in response to detecting selection of a preview of the street level image via the user interface, converting a two-dimensional digital map to an interactive three-dimensional panoramic display of the street level image.
10. The computing device of claim 9, wherein the instructions cause the computing device to:
automatically identifying landmarks proximate to the pick-up location or the pick-up location indicated by the provider;
wherein displaying the street level image acquired for the pick-up location or the drop-off location includes displaying automatically identified landmarks.
11. The computing device of claim 10, wherein the instructions cause the computing device to:
generating a description of the pickup location or the drop-in location, the description including a reference to the identified landmark, and
displaying a description of the pick-up location or the drop-off location and a street-level image of the pick-up location or the drop-off location.
12. The computing device of claim 10, wherein the instructions cause the computing device to:
transmitting the pickup location or the passenger location indicated by the provider of the ride service to a map data server via a communication network; and
a street level image of the landmark is received from the map data server.
13. The computing device of claim 12, wherein to send the pickup location or the drop location to the map data server, the instructions cause the computing device to specify a radius within which the map data server will search for landmarks proximate to the pickup location or the drop location.
14. The computing device of claim 9, wherein the instructions cause the computing device to:
providing an interactive control for modifying the pickup location via the user interface, and
in response to receiving a selection of a new pickup location, an indication of a modified ride is automatically obtained from a provider of the ride service.
15. The computing device of claim 9, wherein the instructions cause the computing device to provide a visualization of at least a portion of the route corresponding to a ride on the digital map.
16. The computing device of claim 9, wherein to display the street level image acquired for the pickup location or the drop-in location, the instructions cause the computing device to overlay the street level image of the pickup location or the drop-in location at a fixed, predefined location on the digital map.
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762599262P | 2017-12-15 | 2017-12-15 | |
US62/599,262 | 2017-12-15 | ||
CN201880039074.2A CN110809706B (en) | 2017-12-15 | 2018-12-14 | Providing street level images related to ride service in navigation applications |
PCT/US2018/065647 WO2019118828A1 (en) | 2017-12-15 | 2018-12-14 | Providing street-level imagery related to a ride service in a navigation application |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880039074.2A Division CN110809706B (en) | 2017-12-15 | 2018-12-14 | Providing street level images related to ride service in navigation applications |
Publications (1)
Publication Number | Publication Date |
---|---|
CN117571009A true CN117571009A (en) | 2024-02-20 |
Family
ID=65019570
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880039074.2A Active CN110809706B (en) | 2017-12-15 | 2018-12-14 | Providing street level images related to ride service in navigation applications |
CN202311544062.4A Pending CN117571009A (en) | 2017-12-15 | 2018-12-14 | Providing street level images related to ride service in navigation applications |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880039074.2A Active CN110809706B (en) | 2017-12-15 | 2018-12-14 | Providing street level images related to ride service in navigation applications |
Country Status (5)
Country | Link |
---|---|
US (2) | US11099025B2 (en) |
EP (2) | EP4220090A1 (en) |
JP (2) | JP7187494B2 (en) |
CN (2) | CN110809706B (en) |
WO (1) | WO2019118828A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10255794B1 (en) * | 2017-11-28 | 2019-04-09 | Titan Health & Security Technologies, Inc. | Systems and methods for providing augmented reality emergency response solutions |
KR102040566B1 (en) * | 2018-01-04 | 2019-11-06 | 라인플러스 주식회사 | Method, system, and non-transitory computer readable medium for providing pick up place |
US11526822B2 (en) * | 2020-02-10 | 2022-12-13 | Bank Of America Corporation | Dynamic resource allocation engine |
JP7276229B2 (en) * | 2020-04-02 | 2023-05-18 | トヨタ自動車株式会社 | Information providing device, information providing system, information providing program, and information providing method |
CN113945220A (en) * | 2020-07-15 | 2022-01-18 | 奥迪股份公司 | Navigation method and device |
US20210116261A1 (en) * | 2020-12-26 | 2021-04-22 | Francesc Guim Bernat | Systems and methods for vehicle-occupancy-based and user-preference-based smart routing and autonomous volumetric-occupancy measurement |
Family Cites Families (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6892135B1 (en) * | 2001-12-21 | 2005-05-10 | Garmin Ltd. | Navigation system, method and device with automatic next turn page |
US20060241859A1 (en) * | 2005-04-21 | 2006-10-26 | Microsoft Corporation | Virtual earth real-time advertising |
US8428873B2 (en) * | 2008-03-24 | 2013-04-23 | Google Inc. | Panoramic images within driving directions |
US20100250581A1 (en) * | 2009-03-31 | 2010-09-30 | Google Inc. | System and method of displaying images based on environmental conditions |
US9766089B2 (en) * | 2009-12-14 | 2017-09-19 | Nokia Technologies Oy | Method and apparatus for correlating and navigating between a live image and a prerecorded panoramic image |
US9582166B2 (en) | 2010-05-16 | 2017-02-28 | Nokia Technologies Oy | Method and apparatus for rendering user interface for location-based service having main view portion and preview portion |
US20120078667A1 (en) * | 2010-06-15 | 2012-03-29 | Ticketmaster, Llc | Methods and systems for computer aided event and venue setup and modeling and interactive maps |
US9361283B2 (en) * | 2011-11-30 | 2016-06-07 | Google Inc. | Method and system for projecting text onto surfaces in geographic imagery |
US20130162665A1 (en) * | 2011-12-21 | 2013-06-27 | James D. Lynch | Image view in mapping |
JP6143214B2 (en) | 2011-12-27 | 2017-06-07 | 株式会社Ｉｎｔｅｌａｄｅ | Taxi vehicle calling system using portable terminals |
US20150153933A1 (en) * | 2012-03-16 | 2015-06-04 | Google Inc. | Navigating Discrete Photos and Panoramas |
US20130290040A1 (en) | 2012-04-25 | 2013-10-31 | Alexander Perry | Method and System for Arranging Taxi and Transportation Services |
US9477983B2 (en) | 2012-05-04 | 2016-10-25 | Gt Gettaxi Limited | Mechanisms for ordering transportation vehicles |
US9094807B2 (en) * | 2012-05-23 | 2015-07-28 | Qualcomm Incorporated | Methods and apparatus for providing an incentivized cooperative system for accessing radio access networks |
US9047691B2 (en) * | 2012-06-05 | 2015-06-02 | Apple Inc. | Route display and review |
US10176633B2 (en) * | 2012-06-05 | 2019-01-08 | Apple Inc. | Integrated mapping and navigation application |
US9043150B2 (en) | 2012-06-05 | 2015-05-26 | Apple Inc. | Routing applications for navigation |
KR102021050B1 (en) * | 2012-06-06 | 2019-09-11 | 삼성전자주식회사 | Method for providing navigation information, machine-readable storage medium, mobile terminal and server |
US9256983B2 (en) * | 2012-06-28 | 2016-02-09 | Here Global B.V. | On demand image overlay |
GB201300006D0 (en) | 2013-01-01 | 2013-02-13 | Tomtom Dev Germany Gmbh | Vehicle management system |
AU2014223584B9 (en) | 2013-02-26 | 2017-03-02 | Polaris Industries Inc. | Recreational vehicle interactive telemetry, mapping, and trip planning system |
US8909475B2 (en) | 2013-03-08 | 2014-12-09 | Zzzoom, LLC | Generating transport routes using public and private modes |
US9483117B2 (en) * | 2013-04-08 | 2016-11-01 | Nokia Technologies Oy | Apparatus, method and computer program for controlling a near-eye display |
US20150002539A1 (en) * | 2013-06-28 | 2015-01-01 | Tencent Technology (Shenzhen) Company Limited | Methods and apparatuses for displaying perspective street view map |
KR102207975B1 (en) * | 2014-06-25 | 2021-01-25 | 한상우 | Reservation system of a bus on a regular route and method for providing service of changeing reservated seat number |
SG10202000037SA (en) | 2014-08-04 | 2020-03-30 | Uber Technologies Inc | Determining and providing predetermined location data points to service providers |
US10620010B2 (en) | 2015-02-05 | 2020-04-14 | Moovit App Global Ltd | Public and ordered transportation trip planning |
US9417087B1 (en) * | 2015-02-06 | 2016-08-16 | Volkswagen Ag | Interactive 3D navigation system |
US9534913B2 (en) | 2015-04-09 | 2017-01-03 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
US20170059347A1 (en) | 2015-08-28 | 2017-03-02 | Google Inc. | Determining Improved Pick-Up Locations |
US9702722B2 (en) * | 2015-09-26 | 2017-07-11 | Volkswagen Ag | Interactive 3D navigation system with 3D helicopter view at destination |
GB2558794A (en) | 2015-11-26 | 2018-07-18 | Beijing Didi Infinity Technology & Dev Co Ltd | Systems and methods for allocating sharable orders |
US10169804B2 (en) | 2016-02-09 | 2019-01-01 | Conduent Business Services, Llc | Methods and systems for transportation service recommendation |
CN107437183B (en) | 2016-05-25 | 2021-06-04 | 北京嘀嘀无限科技发展有限公司 | Method and system for confirming identity of boarding passenger |
US10024683B2 (en) | 2016-06-06 | 2018-07-17 | Uber Technologies, Inc. | User-specific landmarks for navigation systems |
US11562300B2 (en) | 2016-06-10 | 2023-01-24 | Conduent Business Services, Llc | System and method for optimal automated booking of on-demand transportation in multi-modal journeys |
US10929782B2 (en) * | 2016-06-11 | 2021-02-23 | Apple Inc. | Integrating restaurant reservation services into a navigation application |
US9791291B1 (en) | 2016-09-26 | 2017-10-17 | Uber Technologies, Inc. | Modifying map configurations based on established location points |
US20180209803A1 (en) | 2017-01-25 | 2018-07-26 | Via Transportation, Inc. | Dynamic Route Planning |
US10082793B1 (en) | 2017-03-21 | 2018-09-25 | GM Global Technology Operations LLC | Multi-mode transportation planning and scheduling |
US10268987B2 (en) | 2017-04-19 | 2019-04-23 | GM Global Technology Operations LLC | Multi-mode transportation management |
US9965960B1 (en) | 2017-08-07 | 2018-05-08 | Lyft, Inc. | Facilitating transportation services by generating a directional indicator between a requester and a transportation vehicle |
US11189167B2 (en) | 2017-11-01 | 2021-11-30 | Avis Budget Car Rental, LLC | Connected user communication and interface system with shuttle tracking application |
-
2018
- 2018-12-14 US US16/221,008 patent/US11099025B2/en active Active
- 2018-12-14 WO PCT/US2018/065647 patent/WO2019118828A1/en unknown
- 2018-12-14 CN CN201880039074.2A patent/CN110809706B/en active Active
- 2018-12-14 JP JP2019570079A patent/JP7187494B2/en active Active
- 2018-12-14 EP EP23154264.8A patent/EP4220090A1/en active Pending
- 2018-12-14 EP EP18833749.7A patent/EP3601952B1/en active Active
- 2018-12-14 CN CN202311544062.4A patent/CN117571009A/en active Pending
-
2021
- 2021-07-21 US US17/382,105 patent/US11802778B2/en active Active
-
2022
- 2022-11-29 JP JP2022190292A patent/JP7389211B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
US11099025B2 (en) | 2021-08-24 |
JP2020531937A (en) | 2020-11-05 |
EP3601952B1 (en) | 2023-03-15 |
CN110809706B (en) | 2023-11-14 |
US20190186943A1 (en) | 2019-06-20 |
EP3601952A1 (en) | 2020-02-05 |
JP7389211B2 (en) | 2023-11-29 |
WO2019118828A1 (en) | 2019-06-20 |
JP2023026433A (en) | 2023-02-24 |
US11802778B2 (en) | 2023-10-31 |
US20210348939A1 (en) | 2021-11-11 |
EP4220090A1 (en) | 2023-08-02 |
JP7187494B2 (en) | 2022-12-12 |
CN110809706A (en) | 2020-02-18 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7463109B2 (en) | An interactive list of ride-hailing options in a navigation application | |
CN110809706B (en) | Providing street level images related to ride service in navigation applications | |
US20230342674A1 (en) | Multi-Modal Directions with a Ride Service Segment in a Navigation Application | |
CA3070906C (en) | Pickup location selection and augmented reality navigation | |
US20230044010A1 (en) | Customizing visualization in a navigation application using third-party data | |
CA2925292C (en) | Systems and methods for providing navigation data to a vehicle | |
WO2019246063A1 (en) | Pre-fetching map data | |
JP6785871B2 (en) | Providing navigation instructions | |
KR20200107763A (en) | Chauffeur service method and system based on travel scheduling | |
KR102069304B1 (en) | Chauffeur service method and system based on travel scheduling |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US6647393B1 - Dynamic directory service - Google Patents
Dynamic directory service Download PDFInfo
- Publication number
- US6647393B1 US6647393B1 US08/850,137 US85013797A US6647393B1 US 6647393 B1 US6647393 B1 US 6647393B1 US 85013797 A US85013797 A US 85013797A US 6647393 B1 US6647393 B1 US 6647393B1
- Authority
- US
- United States
- Prior art keywords
- directory
- nodes
- information
- directory service
- network
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/50—Allocation of resources, e.g. of the central processing unit [CPU]
- G06F9/5005—Allocation of resources, e.g. of the central processing unit [CPU] to service a request
- G06F9/5011—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resources being hardware resources other than CPUs, Servers and Terminals
- G06F9/5016—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resources being hardware resources other than CPUs, Servers and Terminals the resource being the memory
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/0703—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation
- G06F11/0706—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment
- G06F11/0721—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment within a central processing unit [CPU]
- G06F11/0724—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment within a central processing unit [CPU] in a multiprocessor or a multi-core unit
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/0703—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation
- G06F11/0751—Error or fault detection not based on redundancy
- G06F11/0754—Error or fault detection not based on redundancy by exceeding limits
- G06F11/0757—Error or fault detection not based on redundancy by exceeding limits by exceeding a time limit, i.e. time-out, e.g. watchdogs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1415—Saving, restoring, recovering or retrying at system level
- G06F11/142—Reconfiguring to eliminate the error
- G06F11/1425—Reconfiguring to eliminate the error by reconfiguration of node membership
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1415—Saving, restoring, recovering or retrying at system level
- G06F11/1435—Saving, restoring, recovering or retrying at system level using file system or storage system metadata
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/16—Error detection or correction of the data by redundancy in hardware
- G06F11/18—Error detection or correction of the data by redundancy in hardware using passive fault-masking of the redundant circuits
- G06F11/182—Error detection or correction of the data by redundancy in hardware using passive fault-masking of the redundant circuits based on mutual exchange of the output between redundant processing components
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/16—Error detection or correction of the data by redundancy in hardware
- G06F11/20—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements
- G06F11/2053—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant
- G06F11/2094—Redundant storage or storage space
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/0802—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches
- G06F12/0806—Multiuser, multiprocessor or multiprocessing cache systems
- G06F12/0813—Multiuser, multiprocessor or multiprocessing cache systems with a network or matrix configuration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/10—Address translation
- G06F12/1072—Decentralised address translation, e.g. in distributed shared memory systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F15/00—Digital computers in general; Data processing equipment in general
- G06F15/16—Combinations of two or more digital computers each having at least an arithmetic unit, a program unit and a register, e.g. for a simultaneous processing of several programs
- G06F15/163—Interprocessor communication
- G06F15/167—Interprocessor communication using a common memory, e.g. mailbox
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1095—Replication or mirroring of data, e.g. scheduling or transport for data synchronisation between network nodes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/75—Indicating network or usage conditions on the user display
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/322—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions
- H04L69/329—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions in the application layer [OSI layer 7]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/40—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass for recovering from a failure of a protocol instance or entity, e.g. service redundancy protocols, protocol state redundancy or protocol service redirection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/40—Network security protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/24—Negotiation of communication capabilities
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/964—Database arrangement
- Y10S707/966—Distributed
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the present invention relates in general to directory services and, more specifically, to a dynamic directory service that maintains a directory in which is stored both (1) directory information and (2) information identifying the physical layout or structure of the directory.
- Computer-based structured storage systems such as computer file systems and database systems, have been remarkably successful at providing users with quick and facile access to enormous amounts of data.
- Structured storage systems have allowed businesses to generate and maintain enormous stores of persistent data that the company can modify and update over the course of years. For many companies, this persistent data is a valuable capital asset that is employed each day to perform the company's core operations.
- the data can be, for example, computer files (e.g., source code, wordprocessing documents, etc.), database records and information (e.g., information on employees, customers, and/or products), and/or Web pages.
- a typical computer based structured storage system includes a central server that provides centralized control over the structured store of data.
- the structured store of data is the information that is being maintained by the system, such as information in the files and directories of a file system or within the records of a database system.
- the central server provides system services to a plurality of interconnected network client nodes, and each of the client nodes employs the central server to access and manipulate the structured store of data.
- a directory service i.e., a specialized hierarchical database of network, user, and other computer system configuration information.
- This information typically includes operating system configuration information, application program configuration information, network configuration information, network-accessible resources, exported devices and services, network printers, and user account records.
- Network user account records are what allow network-wide, unified “log on,” and they allow sophisticated application programs to obtain broader, coherent name spaces (e.g., electronic mail system application programs).
- Novell's Directory Server available from Novell, Inc. of Provo, Utah, is one example of software that implements a directory service and that runs on a central server to allow maintenance of and access to directory information.
- central server directory services such as NDS generally work, problems arise from relying on centralized control. For example, the operation of the network is dependent upon the proper functioning of the central server. Any failure of the server to maintain proper operation, such as a power failure, hardware failure, or other such system failure, will disable the entire network and generally prevent users from obtaining access to the network and its resources. Additionally, a flood of client requests (e.g., access of user account records) can overload the central server and slow down or crash the network. Accordingly, reliance on a centralized, server-based directory service can result in slow operation or total network failure during periods of heavy use.
- An additional problem with a client-server network system is that it provides a static operating environment that is set for optimal performance at a certain level of network activity. Consequently, the network fails to exploit available resources to improve system performance. In particular, as the system activity rises above or drops below the expected level of network activity, the static operating environment lacks any ability to reconfigure dynamically the allocation of network resources to one providing better performance for the present level of activity.
- This technology has been developed to improve the reliability and operation of a centralized server directory service. This technology involves employing a plurality of central servers. Each of the servers provides a directory service. Whenever the directory information changes, all of the redundant servers are updated so that requests can be made to any of the centralized servers without impacting the correctness of the response.
- Examples of this centralized, statically replicated, hierarchical directory service technology include Microsoft's Active Directory (NT 5.0), NDS, Banyan's Streetalk, and X.500 directory services.
- Lightweight Directory Access Protocol (LDAP) is a “common” protocol that can be used to access data from any compatible directory server such as NDS.
- directory information e.g., network configuration information, organizational information, user configuration information, and network-accessible resources such as exported devices and services, network printers, and user account records
- the directory service of the invention maintains both the physical location information and the directory information itself in the same data structure. That data structure is distributed around the network, and all of the directory information is homeless (except, usually, a root record).
- the distributed directory service of the invention allows network nodes to locate copies of records to which the nodes want access.
- a globally unique identifier (GUID) is associated with each record as a unique index key that can be used to identify the record on the network. It contains no location information, and a given record can be physically located anywhere on the network.
- Each of the records also can migrate from physical location (node) to physical location (node) around the network.
- the invention provides automatic migration and/or replication of directory information among the network nodes without reconfiguring the network nodes and in a manner transparent to users at the nodes.
- An example of a mechanism that can be used to keep replicated records consistent is a single-writer, multiple-reader, write-invalidate protocol.
- the directory service of the invention can, in some specific embodiments, employ a globally-addressable unstructured memory system to maintain simultaneously both the directory information and layout information in accordance with the invention.
- the directory service can employ the distributed shared memory (DSM) system described in the above-identified, incorporated-by-reference patent applications, which DSM system distributes the storage of data across some or all of the storage devices connected to a network.
- Storage devices that may be connected to the network and accessible to the network nodes by address via the DSM system include, for example, RAM, hard disk drives, tape drives, floppy disk drives, and CD-ROM drives.
- the dynamic directory service is a computer program that interfaces to a DSM system to operate the DSM system as a memory device that provides storage of and access to the directory information.
- the directory service program can direct the DSM system to map directory information into the shared memory space.
- the DSM system can include functionality to share, migrate, and replicate data coherently.
- the DSM system provides memory device services to the directory service program. These services can include read, write, allocate, flush, or any other similar or additional service suitable for providing low level control of a storage device.
- the directory service program employs these DSM system services to allocate and access portions of the shared memory space for creating and manipulating the directory information.
- a system and related method for accessing directory information includes a computer network, a globally addressable data storage system, and a plurality of computers coupled to the network and the data storage system.
- the globally addressable data storage system provides persistent storage of data and contains directory information.
- the plurality of computers access the data storage system to obtain directory information. Based on the access patterns by the computers and/or the available network resources, the data storage system replicates and migrates directory information among two or more of the computers.
- the invention relates to a method comprising the steps of providing a plurality of nodes interconnected by a network and storing on one or more of the nodes a directory containing both the directory information and information about the layout of the directory (i.e., where to find the directory information).
- the invention in another aspect, relates to a method comprising the steps of providing a plurality of nodes interconnected by a network, providing a directory service on the network by installing on each of the nodes a directory service program that allows directory information to be accessed by each of the nodes and that stores on one or more of the nodes a directory including both the directory information and information about the location of the directory information on the network, and obtaining both the physical location of directory information of interest and the directory information of interest itself by accessing the directory service.
- FIG. 1 is a conceptual block diagram of a dynamic directory service according to the invention.
- FIG. 2 is a diagram of the types of directory information that can be maintained by a dynamic directory service of the invention.
- FIG. 3 is a diagram of a directory record used by a dynamic directory service according to the invention.
- FIG. 4A is a flowchart of the steps a directory service of the invention takes to service a request from a network node for directory information.
- FIG. 4B is a flowchart disclosing additional detail of the steps taken by the directory service to service the network node's request for directory information.
- FIG. 5 is a diagram showing an example of directory records of a distributed dynamic directory service according to the invention.
- a computer network system 10 includes a plurality of network nodes that access a common directory service.
- the directory service is a specialized hierarchical structured database. Examples of the types of information that can be stored and maintained by the directory service include operating system configuration information, application program configuration information, network configuration information, network-accessible resources, exported devices and services, network printers, and network user account records.
- Each of the nodes on the network includes at least a directory service program that accesses and manages the directory service.
- the directory service may be stored in an addressable shared memory or it may be stored in a more traditional fashion. For example, each node may be responsible for storing a particular element or elements of the directory service.
- the directory service program can access a desired portion of the structured store using a globally-unique tag or identifier.
- the underlying system would translate the tag or identifier into one or more commands for accessing the desired data, including network transfer commands.
- the directory service is stored in an addressable shared memory space, which allows the network nodes transparently to access portions of the structured store using standard memory access commands.
- the tag or identifier is an address into an addressable memory space such as a 128-bit address space.
- the system 10 can be a file system, a database system, a Web server, an object repository system, or any other structured storage system that maintains an organized set of data.
- the system 10 is a directory service that maintains various directory information.
- the network system 10 includes a plurality of network nodes 12 a - 12 d and a common directory service subsystem 20 that provides a dynamic directory service 22 according to the invention.
- the dynamic directory service 22 maintains and provides access to data including both the directory information itself and the physical layout of the directory on the network.
- Each of the nodes 12 a - 12 d can include several sub-elements.
- node 12 a includes a processor 30 a and a directory service program 32 a for accessing the directory service 22 .
- One or more of the nodes can include a monitor for displaying graphically ( 40 , 42 ) the directory service 22 .
- a system 10 according to the invention can provide, among other things, each network node 12 a - 12 d with shared control over the directory service 22 and, therefore, the system 10 can distribute control of the directory information across the nodes of the network.
- each node of the system 10 such as node 12 a , includes a directory service program 32 a that operates as a structured directory service adapted to maintain directory information and to employ all of the network nodes for storing and allowing access to the directory information.
- These cooperating elements provide a structured storage system that has a distributed architecture and thereby achieves greater fault tolerance, reliability, and flexibility than known directory services that rely on centralized control and one or more centralized servers. Accordingly, the invention provides computer networks with distributively controlled and readily scaled directory services.
- the system 10 maintains a directory service 22 within a globally addressable unstructured storage system.
- Each of the nodes 12 a - 12 d can access that storage system and the directory service 22 through the directory service programs 32 a - 32 d .
- At least a portion of the globally addressable unstructured storage system is supported by a physical memory system that provides persistent storage of data.
- a portion of the storage system can be assigned or mapped to one or more hard disk drives that are on the network or associated with one or more of the network nodes 12 a - 12 d as local hard disk storage for those particular nodes. Accordingly, FIG.
- FIG. 1 illustrates one possible system that provides the network nodes with access to a globally addressable unstructured storage system, wherein at least a portion of the storage space of that system is assigned to at least a portion of one or more of the persistent storage devices (e.g., hard disks) to allow the nodes addressably to store and retrieve data to and from the one or more persistent storage devices.
- the globally addressable storage system is described in the above-identified, incorporated-by-reference applications.
- Each of the directory service programs 32 a - 32 d is a software module that couples to the directory service.
- the directory service program 32 a can stream data to, and collect data from, the directory service subsystem.
- Each of the directory service programs 32 a - 32 d can be a peer incarnation (i.e., an instance) residing on a different one of the network nodes 12 a - 12 d.
- One or more of the directory service programs 32 a - 32 d can provide a graphical user interface 42 that graphically depicts the directory service 22 .
- the graphical user interface 42 could allow a user at a node, for example at node 12 a , to insert directory information graphically within the directory service 22 .
- the directory service program 32 a can generate a set of commands that will present a stream of data that will result in directory information being stored within the directory service 22 .
- that node (which includes a graphical user interface 40 ) reflects the change to the directory service 22 affected by the directory service program 32 a of the node 12 a .
- the graphical user interface 40 of the node 12 c can depict to a user that certain directory information is being placed within the directory service 22 .
- a system user at node 12 a can direct item 50 a to be inserted at a set location within the directory service 22 .
- the directory service program 32 a then places the item 50 a within the directory service 22 at the proper location.
- node 12 c detects the change within the directory service 22 and reflects that change within its graphical user interface 40 .
- a structured dynamic directory service looks to all network nodes like a coherent, single directory service system when in fact it spans all participating nodes coupled to the network.
- the directory service of the invention differs from known directory services in a variety of ways.
- the directory service of the invention maintains data coherence among network nodes; automatically replicates directory information for redundancy and fault tolerance; automatically and dynamically migrates directory information to account for varying network usage and traffic patterns; and provides a variety of other advantages and advances, some of which are disclosed in the above-identified, incorporated-by-reference applications.
- the replication and migration can be done on the basis of node accesses and/or on the basis of the availability of network resources.
- a directory service includes a structured store of data organized as a directory information set 66 .
- the set 66 is a tree structure starting at a root 80 and ending at a leaf (for example, leaf 82 ). Each leaf represents a particular piece of directory information (e.g., user name or password).
- the set 66 thus is a collection of directory information organized hierarchically, for example as a tree structure or as a graph, rooted in the root 80 .
- the non-leaf nodes in the tree are the entries 90 , 92 , 94 , 100 , 102 , 200 , 202 , and 204 , and the leaves in the tree are particular pieces of directory information 91 , 82 , 84 , 86 , 201 , and 205 - 212 (e.g., a password or a network printer identifier) or empty entries.
- Sub-trees within a set can overlap by linking a leaf or a non-leaf to multiple entries.
- the directory service of the invention can, as an option, employ more than one set.
- a benefit of breaking up the directory service 60 into a plurality of sets is that it may provide more flexible management for users of the directory service.
- the directory service grows into very large sizes (e.g., hundreds of nodes with thousands of gigabits of storage), it may be desirable to have the directory information organized into groups of management entities such that management actions can be independently applied to individual groups without affecting the operation of the others.
- the root (e.g., the root 80 ) provides the starting point to locate the directory information maintained by the directory service of the invention.
- the root can be, and preferably is, stored in a static and well-known location on the network (e.g., at a particular address or on one or more network nodes).
- a node When a node is accessing a set for the first time, it first looks up the root to determine the key associated with the set. Once it has determined the key, the node can access the root of the set. From the root, it then can traverse the set's entire tree to locate the desired piece of directory information.
- a network node requesting the password of a user named Jones might pass the following string to the directory service: /USERS/JONES/PASSWORD.
- the directory service would then reference the set 66 and might find that the root 80 contains a list of all users, the non-leaf node 90 contains information about the user Jones, and the leaf 82 contains user Jones' password.
- all of this information can reside physically on different network nodes and in fact can migrate from node to node and can be replicated on a plurality of network nodes.
- FIGS. 3, 4 A, 4 B, and 5 further and more particularly illustrate the structure of a hierarchical distributed dynamic directory service according to the invention.
- a directory record 320 includes a record header 322 and one or more directory entries (two are shown, 324 and 326 ). Each directory entry includes a key field 330 and one or more data fields 332 .
- the key field 330 could be, for example, “company name,” and the associated data field 332 could be “Acme Corporation.” Note that for GUID tree records (described below), there preferably are two data fields, namely “GUID of next record” identifying the identifier of the next record to be referenced by the directory service and “GUID responsible node” identifying the node responsible for the “GUID of next record.”
- the key field 330 could also be a globally unique identifier (GUID).
- the data field 332 can include actual directory information (for example, “Acme Corporation”), information about where to go to locate the directory information of interest or additional information about where to go to locate it (for example, a globally unique identifier or GUID), or information about what nodes have copies of the directory information of interest.
- actual directory information for example, “Acme Corporation”
- additional information about where to go to locate it for example, a globally unique identifier or GUID
- GUID globally unique identifier
- directory record 320 can be a page of a global address space that spans both persistent (e.g., hard disks) and volatile (e.g., RAM) storage devices.
- the page can be a 4 kilobyte portion of the shared address space described in the above-identified, incorporated-by-reference applications.
- the GUIDs are unique addresses of the global address space such as 128-bit addresses in a huge 2 128 address space.
- each directory record 320 includes a record header 322 that includes attribute information for that record, and that attribute information typically is metadata for the directory record.
- the record 320 further includes one or more directory entries, such as the depicted directory entries 324 and 326 , that provide an index into a portion of the directory service (non-leaf entries) or actual directory information (leaf entries).
- the non-leaf directory entries subdivide the directory information maintained by the directory service of the invention. For example, if the directory entries 324 and 326 are entries of a GUID tree record, they can subdivide the directory into two sub-portions, with the first portion referencing one-half of the directory and the second portion referencing the other half of the directory.
- the directory entry 324 provides an index for half of the directory
- the directory entry 326 provides an index for the other half
- each of these directory entries 324 , 326 can, via the data fields, point to other records and responsible nodes in which directory entries have data fields that point to still other records and responsible nodes and so on until the actual directory information of interest is located in some data field of some entry of some record by the directory service (a so-called leaf entry).
- the directory service then provides that directory information to the requesting node.
- the directory service of the invention provides both (1) location information for directory information maintained by the directory service and (2) the actual directory information itself, all in the same directory structure.
- GUIDs globally unique identifiers
- a GUID subtree within the directory provides a map or assignment of GUIDs to network nodes that have a copy of certain directory information. It is the leaf nodes of the GUID subtree that identify the one or more nodes that have a copy of desired directory information. Once these nodes are identified by the directory service, the directory service accesses one or more of them (typically just one of the identified nodes) to obtain the directory information and then pass it to the requesting node.
- the directory system can choose which node to contact to obtain the directory information based on the state of the global system such as the current load on the various nodes or the quality of the network service between the local node and the node(s) that have copies of the desired directory record.
- a network node passes an appropriate key to the directory service (step 500 ).
- the node might pass the following key to the directory service: /USERS/JONES/PASSWORD.
- the directory service receives the key and either locates the desired directory information and passes it to the requesting node or returns an error if the desired directory information cannot be found (step 600 ). More specifically, in attempting to satisfy the request from the node, the directory service of the invention first determines if the key corresponds to directory information that is stored on the node itself in, for example, the node's RAM or on the node's hard disk (step 602 ).
- the directory service performs step 602 by accessing a lookup table (such as a hash table) maintained by each of the network nodes. This table identifies the directory records that are locally cached on the node. If the requested directory information is stored locally on the requesting node, the directory service retrieves the requested directory information from the node's local cache and then provides that directory information to the node (step 604 ). If the requested directory information is not stored locally on the requesting node, the directory service recursively invokes itself to access the directory record(s) that have the GUID tree structure, and the directory service descends or walks the GUID tree by accessing the various records until the desired directory entry is located.
- a lookup table such as a hash table
- the leaf node in the GUID tree contains the mapping from GUID to the set of nodes caching the record associated with that GUID.
- the directory service uses this information to select a node from which it acquires a copy of the desired record (step 606 ).
- the directory service then obtains the requested directory information and provides it to the node (step 608 ).
- the directory service first always checks to see if entries indexed by a GUID are cached locally before the directory service invokes recursively the GUID tree to locate a copy of the record remotely.
- the directory service can store a copy of (replicate) this directory information (e.g., user Jones' password) on the requesting node.
- this directory information e.g., user Jones' password
- all or a portion of the record that contains this directory information is replicated on the requesting node.
- the directory service decides to replicate this record on the requesting node, the directory service adds the requesting node's identifier (e.g., a number) to the leaf node in the GUID tree that stores the list of nodes caching the record associated with the GUID, and the directory service then updates or invalidates the local caches of all of the other network nodes that also have that directory record cached locally.
- the directory service makes the decision on whether or not to replicate based on node access patterns and/or on the availability of certain network resources. For example, if a node has requested a certain record a certain number of times, the directory service will replicate that record on that node.
- the directory service monitors and records a variety of network information, including node access patterns and network resource availability, and some or all of this network information is used to determine what records should be replicated on what nodes.
- this replication feature of the directory service results in certain records being replicated on the nodes that most often access those records and not being replicated on (and/or removed from) nodes that access those records less often or not at all.
- the directory service of the invention provides this replication feature dynamically during normal operation, and thus, as access patterns change, the records and the copies of the records move or migrate among the various network nodes to accommodate the changing patterns.
- This replication/migration feature of the invention points up an important aspect of the invention, and that is that all of the directory records are homeless (except possibly the root directory record which, while it typically will be replicated, typically is placed at fixed locations on the network).
- the directory records contain, according to the invention, both the GUID tree structure (i.e., the information about where directory information is located) and the actual directory information, the directory structure (i.e., the GUID tree) is dynamically moved and replicated among the network nodes just as is the directory information itself.
- networks utilizing the directory service of the invention can be expanded (i.e., additional nodes can be added to the network and/or other networks can be interconnected to the network) without substantially impacting the performance and speed realized by the nodes as they access directory information via the directory service. That is, the directory service scales very well. This is because, once the network is up and running, all nodes generally will have cached locally the records they most often access, and access times for these nodes for the directory information that is cached locally will be the same (very fast) regardless of the size of or the traffic on the network.
- Step 606 includes the following substeps that are performed by the directory service.
- the directory service first locates the root directory record (step 610 ), and it indexes into that record using the key (e.g., /USERS/JONES/PASSWORD) passed to it by the requesting node.
- the directory service then checks to see if a portion of the key (e.g., /USERS) matches a directory entry in the root directory (step 612 ). If it does not match, the directory service returns an error message to the requesting node (step 614 ).
- the key e.g., /USERS/JONES/PASSWORD
- the directory service next determines if that directory entry contains the requested directory information in its data field (step 616 ). If so, the directory service retrieves the requested directory information from that data field and provides it to the requesting node ( 618 ).
- a root directory record 400 could be the root record referred to in step 612 . If directory 402 contains the requested directory information in its data field (step 616 ), the directory service need only to index into that entry 402 using the key and retrieve the requested directory information from the data field. Note that, as indicated in FIG. 5, the root directory record 400 could be replicated ( 401 , 403 , 405 ) on three other network nodes in accordance with the replication feature of the directory service of the invention. In fact, it may be that the root directory record 400 is replicated on all network nodes. This could be reasonable in light of the fact that every network node will likely refer to the root directory record when the node first invokes the directory service of the invention, and frequently thereafter.
- the directory service determines whether the entry's data field contains a GUID (step 620 ). If it does contain a GUID, this means that the GUID tree must be navigated by the directory service to located the requested directory information.
- the directory service thus follows the GUID in the root directory record's entry's data field to a new directory record (step 628 ), possibly the GUID tree root directory record ( 404 in FIG. 5 ).
- the GUID thus is a logical link to a record that will provide more information about the GUID tree structure and ultimately allow the directory service to locate the requested directory information.
- the GUID in the root directory record's entry's data field can be a logical link or pointer to a record that is the GUID tree root directory record 404 .
- the GUID tree root directory record 404 is likely to be replicated on many or all of the network nodes.
- two replicas ( 405 , 407 ) of the record 404 are depicted.
- the loop defined by steps 628 , 630 , and 634 in FIG. 4B illustrates the recursive nature of the directory service. That is, once the GUID tree records are entered via the GUID tree root directory record 404 (FIG. 5 ), and if the data fields of the appropriate directory entries in the GUID tree records contain GUIDs, the directory service will enter a recursive loop whereby it accesses a plurality of records (identified by the ellipsis 410 in FIG. 5) until it reaches a record that has a directory entry with one or more nodes listed its data field (step 622 ). Such a record is a leaf of the GUID tree structure, and is indicated as record 412 in FIG. 5 .
- this record 412 can be replicated ( 413 ) on at least one other network node. Also, while not presently preferred, in general it is possible at any point during this recursive GUID tree walk to encounter a directory entry having the requested directory information in its data field (step 630 of FIG. 4 B), and in such a case the directory service would retrieve from the data field the requested directory information and provide it to the requesting node ( 632 ).
- the cache of locally stored directory entries can be indexed so that at any stage of the GUID tree walk operation it is possible to obtain the desired record from the local cache instead of the tree structure. For example, if record 398 is cached on the node attempting to lookup “/USERS/JONES/PASSWORD,” the directory service will be able to find the locally cached record via a hash lookup for either /USERS/JONES/PASSWORD or the corresponding GUID. Similarly, while traversing the GUID subtree, the directory service first always checks to see if entries indexed by a GUID are cached locally before the directory service invokes recursively the GUID tree to locate a copy of the record remotely.
- the various records that the directory service accesses lead the directory service to the leaf record 412 .
- the directory service first always checks to see if entries indexed by a GUID are cached locally before the directory service invokes recursively the GUID tree to locate a copy of the record remotely.
- the directory service uses the responsible node information in the data fields of the GUID tree records in the location process.
- the data field in the entry 411 of the GUID leaf record 412 contains a list of nodes. This is a list of nodes that have a copy of the record that contains the requested directory information.
- the directory service can now access any one of those listed nodes to obtain the requested directory information (step 624 ).
- the directory service of the invention will find an entry in the root directory record 400 that provides a logical link (e.g., GUID “12540”) in its data field directly to an entry 399 in a record 398 that has the requested directory information in its data field. It also is possible, as mentioned hereinabove, that an entry 402 in the root directory record 400 itself will have the requested directory information in its data field.
- GUID logical link
- a typical situation is when the GUID tree is walked by the directory service via the GUID tree records in order to locate and return the requested directory information to the requesting network node.
- the directory service tracks ownership and responsibility for directory information thereby providing a level of indirection between the actual directory information itself and the physical location of that directory information on the network.
- the directory service of the invention comprises a hierarchical structured storage mechanism for directory information.
- the directory service of the invention provides a structure that continually subdivides itself into smaller and smaller sections. Further, each section is represented by directory records of the same structure, but each section indexes different amounts (sizes) of directory information.
- directory records will migrate to those nodes that access them most, providing a degree of self-organization that reduces network traffic.
- all of the functionality of the directory service of the invention can be implemented in software.
- an instance of a directory service program resides and executes on each of the network nodes and provides all of the directory service features and functionality described herein. It is possible to perform one or more of the various functions of the directory service with dedicated electronics or a combination of hardware and software, and this hardware might be added to a general purpose computer to implement the directory service of the invention.
Abstract
Description
Claims (14)
Priority Applications (8)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/850,137 US6647393B1 (en) | 1996-11-22 | 1997-05-02 | Dynamic directory service |
PCT/US1997/021733 WO1998022893A1 (en) | 1996-11-22 | 1997-11-21 | Dynamic directory service |
EP97954518A EP0976065B1 (en) | 1996-11-22 | 1997-11-21 | Dynamic directory service |
DE69719564T DE69719564T2 (en) | 1996-11-22 | 1997-11-21 | DYNAMIC FILE DIRECTORY SERVICE |
AU58948/98A AU5894898A (en) | 1996-11-22 | 1997-11-21 | Dynamic directory service |
AT97954518T ATE233923T1 (en) | 1996-11-22 | 1997-11-21 | DYNAMIC FILE DIRECTORY SERVICE |
US10/704,327 US20040117410A1 (en) | 1996-11-22 | 2003-11-07 | Dynamic directory service |
US12/144,508 US20080256090A1 (en) | 1996-11-22 | 2008-06-23 | Dynamic directory service |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/754,481 US6148377A (en) | 1996-11-22 | 1996-11-22 | Shared memory computer networks |
US08/827,534 US5918229A (en) | 1996-11-22 | 1997-03-28 | Structured data storage using globally addressable memory |
US08/850,137 US6647393B1 (en) | 1996-11-22 | 1997-05-02 | Dynamic directory service |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/754,481 Continuation-In-Part US6148377A (en) | 1996-11-22 | 1996-11-22 | Shared memory computer networks |
US08/827,534 Continuation-In-Part US5918229A (en) | 1996-11-22 | 1997-03-28 | Structured data storage using globally addressable memory |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/704,327 Continuation US20040117410A1 (en) | 1996-11-22 | 2003-11-07 | Dynamic directory service |
Publications (1)
Publication Number | Publication Date |
---|---|
US6647393B1 true US6647393B1 (en) | 2003-11-11 |
Family
ID=27419465
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/850,137 Expired - Lifetime US6647393B1 (en) | 1996-11-22 | 1997-05-02 | Dynamic directory service |
US10/704,327 Abandoned US20040117410A1 (en) | 1996-11-22 | 2003-11-07 | Dynamic directory service |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/704,327 Abandoned US20040117410A1 (en) | 1996-11-22 | 2003-11-07 | Dynamic directory service |
Country Status (6)
Country | Link |
---|---|
US (2) | US6647393B1 (en) |
EP (1) | EP0976065B1 (en) |
AT (1) | ATE233923T1 (en) |
AU (1) | AU5894898A (en) |
DE (1) | DE69719564T2 (en) |
WO (1) | WO1998022893A1 (en) |
Cited By (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020144252A1 (en) * | 1996-07-01 | 2002-10-03 | Microsoft Corporation | Urgent replication facility |
US20030070090A1 (en) * | 2001-10-09 | 2003-04-10 | Hillhouse Robert D. | Method of providing an access request to a same server based on a unique identifier |
US20030088587A1 (en) * | 2001-11-06 | 2003-05-08 | John Merrells | Replication architecture for a directory server |
US6714948B1 (en) * | 1999-04-29 | 2004-03-30 | Charles Schwab & Co., Inc. | Method and system for rapidly generating identifiers for records of a database |
US20040088365A1 (en) * | 2002-10-30 | 2004-05-06 | Sun Microsystems, Inc. | Service information model mapping with shared directory tree representations |
US6751719B1 (en) * | 2000-10-26 | 2004-06-15 | International Business Machines Corporation | Method and an apparatus to dynamically order features and to resolve conflicts in a multiple-layer logical volume management environment |
US6754798B1 (en) * | 2000-10-26 | 2004-06-22 | International Business Machines Corporation | Method and an apparatus for volume creation in the presence of multiple aggregators |
US20040148361A1 (en) * | 2003-01-27 | 2004-07-29 | Ridgley Jay W. | System and method for migrating directories over a wide-area network |
US20050044301A1 (en) * | 2003-08-20 | 2005-02-24 | Vasilevsky Alexander David | Method and apparatus for providing virtual computing services |
US20050080982A1 (en) * | 2003-08-20 | 2005-04-14 | Vasilevsky Alexander D. | Virtual host bus adapter and method |
US20050102297A1 (en) * | 2003-11-12 | 2005-05-12 | Lloyd Alan C. | Directory system |
US6947942B1 (en) * | 2002-05-30 | 2005-09-20 | Taiwan Semiconductor Manufacturing Company, Ltd. | Methods of managing user and computer objects in directory service |
US20050240716A1 (en) * | 1998-12-17 | 2005-10-27 | Day Mark S | System and method for interfacing index based and interator based application programming interfaces |
US20050246412A1 (en) * | 1998-10-27 | 2005-11-03 | Murrell Stephen J | Uniform network access |
US20050256879A1 (en) * | 2001-02-28 | 2005-11-17 | Microsoft Corporation | Method for designating communication paths in a network |
US20050278552A1 (en) * | 2004-06-14 | 2005-12-15 | Vincent Delisle | Secure virtual account |
US6986038B1 (en) | 2000-07-11 | 2006-01-10 | International Business Machines Corporation | Technique for synchronizing security credentials from a master directory, platform, or registry |
US6986039B1 (en) * | 2000-07-11 | 2006-01-10 | International Business Machines Corporation | Technique for synchronizing security credentials using a trusted authenticating domain |
US20060010150A1 (en) * | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US20060011720A1 (en) * | 1998-03-27 | 2006-01-19 | Call Charles G | Methods and apparatus for transferring product information from manufacturers to retailers and distributors via the Internet |
US20060075059A1 (en) * | 2004-08-31 | 2006-04-06 | Red Hat, Inc. | Method and system for caching directory services |
US20060089925A1 (en) * | 2004-10-25 | 2006-04-27 | International Business Machines Corporation | Distributed directory replication |
US20060168120A1 (en) * | 2001-11-27 | 2006-07-27 | Microsoft Corporation | Non-invasive latency monitoring in a store-and-forward replication system |
US20060184646A1 (en) * | 2001-12-21 | 2006-08-17 | Microsoft Corporation | Authentication and Authorization Across Autonomous Network Systems |
US20060184589A1 (en) * | 2000-06-21 | 2006-08-17 | Microsoft Corporation | Linked Value Replication |
US7124203B2 (en) * | 2000-07-10 | 2006-10-17 | Oracle International Corporation | Selective cache flushing in identity and access management systems |
US20060235847A1 (en) * | 2005-04-14 | 2006-10-19 | Emc Corporation | Traversing data in a repeatable manner |
US20060248117A1 (en) * | 2005-04-14 | 2006-11-02 | International Business Machines Corporation | Distributed directory deployment |
US20070299804A1 (en) * | 2006-06-21 | 2007-12-27 | Zhen Liu | Method and system for federated resource discovery service in distributed systems |
US20080043973A1 (en) * | 2006-08-07 | 2008-02-21 | Yonghong Lai | Method and apparatus for using a directory service to facilitate centralized device naming |
US20080065663A1 (en) * | 2005-04-14 | 2008-03-13 | Emc Corporation | Reestablishing process context |
US20080065637A1 (en) * | 2005-04-14 | 2008-03-13 | Emc Corporation | Locating last processed data |
US20080104132A1 (en) * | 2003-04-14 | 2008-05-01 | Novell, Inc. | Method and apparatus for splitting a replicated volume |
US20080177767A1 (en) * | 2007-01-22 | 2008-07-24 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
US7693840B1 (en) * | 2004-07-30 | 2010-04-06 | Sprint Communications Company L.P. | Method and system for distribution of common elements |
US20100100523A1 (en) * | 2005-03-31 | 2010-04-22 | Barclays Capital Inc. | System and Method for Grouping a Collection of Documents Using Document Series |
US7765298B2 (en) | 2001-11-30 | 2010-07-27 | Oracle International Corporation | Impersonation in an access system |
US7797368B1 (en) * | 2000-11-17 | 2010-09-14 | Intel Corporation | Managing a network of consumer-use computing devices |
US20100246578A1 (en) * | 2009-03-31 | 2010-09-30 | Data Domain, Inc. | Data redistribution in data replication systems |
US7814536B2 (en) | 2000-07-10 | 2010-10-12 | Oracle International Corporation | User authentication |
US7873614B2 (en) | 2001-05-29 | 2011-01-18 | Oracle America, Inc. | Method and system for creating and utilizing managed roles in a directory system |
US7882132B2 (en) | 2003-10-09 | 2011-02-01 | Oracle International Corporation | Support for RDBMS in LDAP system |
US7904487B2 (en) | 2003-10-09 | 2011-03-08 | Oracle International Corporation | Translating data access requests |
US20110161585A1 (en) * | 2009-12-26 | 2011-06-30 | Sailesh Kottapalli | Processing non-ownership load requests hitting modified line in cache of a different processor |
US20120260036A1 (en) * | 2011-04-08 | 2012-10-11 | Symantec Corporation | Storage management systems and methods |
US8688813B2 (en) | 2006-01-11 | 2014-04-01 | Oracle International Corporation | Using identity/resource profile and directory enablers to support identity management |
US8776050B2 (en) | 2003-08-20 | 2014-07-08 | Oracle International Corporation | Distributed virtual machine monitor for managing multiple virtual resources across multiple physical nodes |
US8935418B2 (en) | 2001-02-26 | 2015-01-13 | Oracle International Corporation | Access system interface |
US9361243B2 (en) | 1998-07-31 | 2016-06-07 | Kom Networks Inc. | Method and system for providing restricted access to a storage medium |
CN111949619A (en) * | 2020-07-21 | 2020-11-17 | 苏州元核云技术有限公司 | Dynamic directory generation method, system, electronic device and storage medium |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3481485B2 (en) * | 1999-01-28 | 2003-12-22 | エヌイーシーコンピュータテクノ株式会社 | Multiprocessor system |
US7076476B2 (en) | 1999-03-02 | 2006-07-11 | Microsoft Corporation | Method and system for integrated service administration via a directory service |
US7613784B2 (en) * | 2003-05-22 | 2009-11-03 | Overland Storage, Inc. | System and method for selectively transferring block data over a network |
US7730114B2 (en) * | 2004-11-12 | 2010-06-01 | Microsoft Corporation | Computer file system |
US20070079004A1 (en) * | 2005-09-30 | 2007-04-05 | Junichi Tatemura | Method and apparatus for distributed indexing |
US8072903B2 (en) * | 2006-05-30 | 2011-12-06 | Genband Us Llc | Methods, systems, and computer program products for performing range-based directory number (DN) screening |
WO2008016515A2 (en) * | 2006-08-01 | 2008-02-07 | Massachusetts Institute Of Technology | Extreme virtual memory |
US7739236B2 (en) * | 2007-12-14 | 2010-06-15 | International Business Machines Corporation | System and method for preserving filehandles across file system migrations on a best effort basis |
US20160156631A1 (en) * | 2013-01-29 | 2016-06-02 | Kapaleeswaran VISWANATHAN | Methods and systems for shared file storage |
US10671370B2 (en) * | 2018-05-30 | 2020-06-02 | Red Hat, Inc. | Distributing file system states |
Citations (55)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4096567A (en) | 1976-08-13 | 1978-06-20 | Millard William H | Information storage facility with multiple level processors |
US4426688A (en) | 1981-08-03 | 1984-01-17 | Ncr Corporation | Memory system having an alternate memory |
US4868738A (en) * | 1985-08-15 | 1989-09-19 | Lanier Business Products, Inc. | Operating system independent virtual memory computer system |
US4914571A (en) * | 1987-06-15 | 1990-04-03 | International Business Machines Corporation | Locating resources in computer networks |
US4934764A (en) | 1989-03-31 | 1990-06-19 | Kendall Square Research Corporation | Computer system module assembly |
US5055999A (en) | 1987-12-22 | 1991-10-08 | Kendall Square Research Corporation | Multiprocessor digital data processing system |
US5117350A (en) * | 1988-12-15 | 1992-05-26 | Flashpoint Computer Corporation | Memory address mechanism in a distributed memory architecture |
US5119481A (en) | 1987-12-22 | 1992-06-02 | Kendall Square Research Corporation | Register bus multiprocessor system with shift |
US5226039A (en) | 1987-12-22 | 1993-07-06 | Kendall Square Research Corporation | Packet routing switch |
US5245563A (en) | 1991-09-20 | 1993-09-14 | Kendall Square Research Corporation | Fast control for round unit |
US5247673A (en) * | 1989-12-04 | 1993-09-21 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic global data replication |
US5251308A (en) | 1987-12-22 | 1993-10-05 | Kendall Square Research Corporation | Shared memory multiprocessor with data hiding and post-store |
US5274789A (en) | 1990-03-19 | 1993-12-28 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic and selective global data replication |
US5282201A (en) | 1987-12-22 | 1994-01-25 | Kendall Square Research Corporation | Dynamic packet routing network |
US5313647A (en) | 1991-09-20 | 1994-05-17 | Kendall Square Research Corporation | Digital data processor with improved checkpointing and forking |
US5335325A (en) | 1987-12-22 | 1994-08-02 | Kendall Square Research Corporation | High-speed packet switching apparatus and method |
US5341483A (en) | 1987-12-22 | 1994-08-23 | Kendall Square Research Corporation | Dynamic hierarchial associative memory |
US5390316A (en) | 1990-08-31 | 1995-02-14 | International Business Machines Corporation | Multicomputer complex having a distributed shared memory system for providing a single system view from multiple consoles |
US5394555A (en) | 1992-12-23 | 1995-02-28 | Bull Hn Information Systems Inc. | Multi-node cluster computer system incorporating an external coherency unit at each node to insure integrity of information stored in a shared, distributed memory |
US5408649A (en) | 1993-04-30 | 1995-04-18 | Quotron Systems, Inc. | Distributed data access system including a plurality of database access processors with one-for-N redundancy |
US5452447A (en) | 1992-12-21 | 1995-09-19 | Sun Microsystems, Inc. | Method and apparatus for a caching file server |
US5483652A (en) * | 1994-01-24 | 1996-01-09 | Digital Equipment Corporation | Mechanism for locating without search discrete application resources known by common name only in a distributed network computing environment |
US5485455A (en) * | 1994-01-28 | 1996-01-16 | Cabletron Systems, Inc. | Network having secure fast packet switching and guaranteed quality of service |
US5490272A (en) | 1994-01-28 | 1996-02-06 | International Business Machines Corporation | Method and apparatus for creating multithreaded time slices in a multitasking operating system |
US5493728A (en) | 1993-02-19 | 1996-02-20 | Borland International, Inc. | System and methods for optimized access in a multi-user environment |
US5513314A (en) | 1995-01-27 | 1996-04-30 | Auspex Systems, Inc. | Fault tolerant NFS server system and mirroring protocol |
US5519855A (en) | 1994-01-14 | 1996-05-21 | Microsoft Corporation | Summary catalogs |
US5522045A (en) | 1992-03-27 | 1996-05-28 | Panasonic Technologies, Inc. | Method for updating value in distributed shared virtual memory among interconnected computer nodes having page table with minimal processor involvement |
US5551035A (en) | 1989-06-30 | 1996-08-27 | Lucent Technologies Inc. | Method and apparatus for inter-object communication in an object-oriented program controlled system |
US5560029A (en) | 1991-07-22 | 1996-09-24 | Massachusetts Institute Of Technology | Data processing system with synchronization coprocessor for multiple threads |
US5588147A (en) | 1994-01-14 | 1996-12-24 | Microsoft Corporation | Replication facility |
US5608903A (en) * | 1994-12-15 | 1997-03-04 | Novell, Inc. | Method and apparatus for moving subtrees in a distributed network directory |
US5613079A (en) | 1994-04-20 | 1997-03-18 | Microsoft Corporation | System for verifying the proper operation of a replication facility |
US5617537A (en) | 1993-10-05 | 1997-04-01 | Nippon Telegraph And Telephone Corporation | Message passing system for distributed shared memory multiprocessor system and message passing method using the same |
US5634004A (en) | 1994-05-16 | 1997-05-27 | Network Programs, Inc. | Directly programmable distribution element |
US5649194A (en) * | 1993-12-29 | 1997-07-15 | Microsoft Corporation | Unification of directory service with file system services |
US5687308A (en) | 1995-06-07 | 1997-11-11 | Tandem Computers Incorporated | Method to improve tolerance of non-homogeneous power outages |
US5692183A (en) | 1995-03-31 | 1997-11-25 | Sun Microsystems, Inc. | Methods and apparatus for providing transparent persistence in a distributed object operating environment |
US5692193A (en) | 1994-03-31 | 1997-11-25 | Nec Research Institute, Inc. | Software architecture for control of highly parallel computer systems |
US5696900A (en) * | 1994-06-07 | 1997-12-09 | Fujitsu Limited | Personal communication service distributed control system for a network communication system including a plurality of hardware resources |
US5701462A (en) | 1993-12-29 | 1997-12-23 | Microsoft Corporation | Distributed file system providing a unified name space with efficient name resolution |
US5727150A (en) | 1995-05-05 | 1998-03-10 | Silicon Graphics, Inc. | Apparatus and method for page migration in a non-uniform memory access (NUMA) system |
US5727203A (en) | 1995-03-31 | 1998-03-10 | Sun Microsystems, Inc. | Methods and apparatus for managing a database in a distributed object operating environment using persistent and transient cache |
US5758343A (en) * | 1995-12-08 | 1998-05-26 | Ncr Corporation | Apparatus and method for integrating multiple delegate directory service agents |
US5768510A (en) | 1996-07-01 | 1998-06-16 | Sun Microsystems, Inc. | Object-oriented system, method and article of manufacture for a client-server application enabler system |
US5781537A (en) | 1995-07-07 | 1998-07-14 | International Business Machines Corporation | Setting up, taking down and maintaining connections in a communications network |
US5805786A (en) | 1996-07-23 | 1998-09-08 | International Business Machines Corporation | Recovery of a name server managing membership of a domain of processors in a distributed computing environment |
US5805785A (en) | 1996-02-27 | 1998-09-08 | International Business Machines Corporation | Method for monitoring and recovery of subsystems in a distributed/clustered system |
US5812751A (en) | 1995-05-19 | 1998-09-22 | Compaq Computer Corporation | Multi-server fault tolerance using in-band signalling |
US5812533A (en) | 1994-02-28 | 1998-09-22 | British Telecommunications Public Limited Company | Service provision in communications networks |
US5815710A (en) | 1995-03-22 | 1998-09-29 | Sun Microsystems, Inc. | Method and apparatus for managing relationships among objects in a distributed object environment |
US5832514A (en) | 1996-06-26 | 1998-11-03 | Microsoft Corporation | System and method for discovery based data recovery in a store and forward replication process |
US5933826A (en) * | 1997-03-21 | 1999-08-03 | Novell, Inc. | Method and apparatus for securing and storing executable content |
US6115549A (en) * | 1997-02-12 | 2000-09-05 | Novell, Inc. | Directory-services-based software distribution apparatus and method |
US6148377A (en) * | 1996-11-22 | 2000-11-14 | Mangosoft Corporation | Shared memory computer networks |
Family Cites Families (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5067071A (en) * | 1985-02-27 | 1991-11-19 | Encore Computer Corporation | Multiprocessor computer system employing a plurality of tightly coupled processors with interrupt vector bus |
US5307506A (en) * | 1987-04-20 | 1994-04-26 | Digital Equipment Corporation | High bandwidth multiple computer bus apparatus |
DE3889904T2 (en) * | 1987-09-08 | 1995-01-12 | Digital Equipment Corp | NAME MANAGEMENT FOR A DIGITAL DATA PROCESSING SYSTEM NETWORK. |
AU631276B2 (en) * | 1989-12-22 | 1992-11-19 | Bull Hn Information Systems Inc. | Name resolution in a directory database |
US5297269A (en) * | 1990-04-26 | 1994-03-22 | Digital Equipment Company | Cache coherency protocol for multi processor computer system |
US5276852A (en) * | 1990-10-01 | 1994-01-04 | Digital Equipment Corporation | Method and apparatus for controlling a processor bus used by multiple processor components during writeback cache transactions |
US5237673A (en) * | 1991-03-20 | 1993-08-17 | Digital Equipment Corporation | Memory management method for coupled memory multiprocessor systems |
US5303362A (en) * | 1991-03-20 | 1994-04-12 | Digital Equipment Corporation | Coupled memory multiprocessor computer system including cache coherency management protocols |
US5269013A (en) * | 1991-03-20 | 1993-12-07 | Digital Equipment Corporation | Adaptive memory management method for coupled memory multiprocessor systems |
US5426747A (en) * | 1991-03-22 | 1995-06-20 | Object Design, Inc. | Method and apparatus for virtual memory mapping and transaction management in an object-oriented database system |
US5333315A (en) * | 1991-06-27 | 1994-07-26 | Digital Equipment Corporation | System of device independent file directories using a tag between the directories and file descriptors that migrate with the files |
US5423037A (en) * | 1992-03-17 | 1995-06-06 | Teleserve Transaction Technology As | Continuously available database server having multiple groups of nodes, each group maintaining a database copy with fragments stored on multiple nodes |
US5495607A (en) * | 1993-11-15 | 1996-02-27 | Conner Peripherals, Inc. | Network management system having virtual catalog overview of files distributively stored across network domain |
SE515344C2 (en) * | 1994-02-08 | 2001-07-16 | Ericsson Telefon Ab L M | Distributed database system |
US5524141A (en) * | 1994-09-22 | 1996-06-04 | Bell Communications Research, Inc. | System and method for providing directory information over a telephony network using ADSI |
US5978577A (en) * | 1995-03-17 | 1999-11-02 | Csg Systems, Inc. | Method and apparatus for transaction processing in a distributed database system |
US6256031B1 (en) * | 1998-06-26 | 2001-07-03 | Microsoft Corporation | Integration of physical and virtual namespace |
-
1997
- 1997-05-02 US US08/850,137 patent/US6647393B1/en not_active Expired - Lifetime
- 1997-11-21 AU AU58948/98A patent/AU5894898A/en not_active Abandoned
- 1997-11-21 WO PCT/US1997/021733 patent/WO1998022893A1/en active IP Right Grant
- 1997-11-21 EP EP97954518A patent/EP0976065B1/en not_active Expired - Lifetime
- 1997-11-21 DE DE69719564T patent/DE69719564T2/en not_active Expired - Fee Related
- 1997-11-21 AT AT97954518T patent/ATE233923T1/en not_active IP Right Cessation
-
2003
- 2003-11-07 US US10/704,327 patent/US20040117410A1/en not_active Abandoned
Patent Citations (60)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4096567A (en) | 1976-08-13 | 1978-06-20 | Millard William H | Information storage facility with multiple level processors |
US4426688A (en) | 1981-08-03 | 1984-01-17 | Ncr Corporation | Memory system having an alternate memory |
US4868738A (en) * | 1985-08-15 | 1989-09-19 | Lanier Business Products, Inc. | Operating system independent virtual memory computer system |
US4914571A (en) * | 1987-06-15 | 1990-04-03 | International Business Machines Corporation | Locating resources in computer networks |
US5341483A (en) | 1987-12-22 | 1994-08-23 | Kendall Square Research Corporation | Dynamic hierarchial associative memory |
US5055999A (en) | 1987-12-22 | 1991-10-08 | Kendall Square Research Corporation | Multiprocessor digital data processing system |
US5119481A (en) | 1987-12-22 | 1992-06-02 | Kendall Square Research Corporation | Register bus multiprocessor system with shift |
US5226039A (en) | 1987-12-22 | 1993-07-06 | Kendall Square Research Corporation | Packet routing switch |
US5282201A (en) | 1987-12-22 | 1994-01-25 | Kendall Square Research Corporation | Dynamic packet routing network |
US5335325A (en) | 1987-12-22 | 1994-08-02 | Kendall Square Research Corporation | High-speed packet switching apparatus and method |
US5251308A (en) | 1987-12-22 | 1993-10-05 | Kendall Square Research Corporation | Shared memory multiprocessor with data hiding and post-store |
US5297265A (en) | 1987-12-22 | 1994-03-22 | Kendall Square Research Corporation | Shared memory multiprocessor system and method of operation thereof |
US5117350A (en) * | 1988-12-15 | 1992-05-26 | Flashpoint Computer Corporation | Memory address mechanism in a distributed memory architecture |
US4934764A (en) | 1989-03-31 | 1990-06-19 | Kendall Square Research Corporation | Computer system module assembly |
US5551035A (en) | 1989-06-30 | 1996-08-27 | Lucent Technologies Inc. | Method and apparatus for inter-object communication in an object-oriented program controlled system |
US5247673A (en) * | 1989-12-04 | 1993-09-21 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic global data replication |
US5274789A (en) | 1990-03-19 | 1993-12-28 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic and selective global data replication |
US5390316A (en) | 1990-08-31 | 1995-02-14 | International Business Machines Corporation | Multicomputer complex having a distributed shared memory system for providing a single system view from multiple consoles |
US5560029A (en) | 1991-07-22 | 1996-09-24 | Massachusetts Institute Of Technology | Data processing system with synchronization coprocessor for multiple threads |
US5245563A (en) | 1991-09-20 | 1993-09-14 | Kendall Square Research Corporation | Fast control for round unit |
US5313647A (en) | 1991-09-20 | 1994-05-17 | Kendall Square Research Corporation | Digital data processor with improved checkpointing and forking |
US5592625A (en) | 1992-03-27 | 1997-01-07 | Panasonic Technologies, Inc. | Apparatus for providing shared virtual memory among interconnected computer nodes with minimal processor involvement |
US5522045A (en) | 1992-03-27 | 1996-05-28 | Panasonic Technologies, Inc. | Method for updating value in distributed shared virtual memory among interconnected computer nodes having page table with minimal processor involvement |
US5452447A (en) | 1992-12-21 | 1995-09-19 | Sun Microsystems, Inc. | Method and apparatus for a caching file server |
US5394555A (en) | 1992-12-23 | 1995-02-28 | Bull Hn Information Systems Inc. | Multi-node cluster computer system incorporating an external coherency unit at each node to insure integrity of information stored in a shared, distributed memory |
US5493728A (en) | 1993-02-19 | 1996-02-20 | Borland International, Inc. | System and methods for optimized access in a multi-user environment |
US5408649A (en) | 1993-04-30 | 1995-04-18 | Quotron Systems, Inc. | Distributed data access system including a plurality of database access processors with one-for-N redundancy |
US5617537A (en) | 1993-10-05 | 1997-04-01 | Nippon Telegraph And Telephone Corporation | Message passing system for distributed shared memory multiprocessor system and message passing method using the same |
US5675787A (en) * | 1993-12-29 | 1997-10-07 | Microsoft Corporation | Unification of directory service with file system services |
US5689700A (en) * | 1993-12-29 | 1997-11-18 | Microsoft Corporation | Unification of directory service with file system services |
US5649194A (en) * | 1993-12-29 | 1997-07-15 | Microsoft Corporation | Unification of directory service with file system services |
US5701462A (en) | 1993-12-29 | 1997-12-23 | Microsoft Corporation | Distributed file system providing a unified name space with efficient name resolution |
US5519855A (en) | 1994-01-14 | 1996-05-21 | Microsoft Corporation | Summary catalogs |
US5588147A (en) | 1994-01-14 | 1996-12-24 | Microsoft Corporation | Replication facility |
US5483652A (en) * | 1994-01-24 | 1996-01-09 | Digital Equipment Corporation | Mechanism for locating without search discrete application resources known by common name only in a distributed network computing environment |
US5490272A (en) | 1994-01-28 | 1996-02-06 | International Business Machines Corporation | Method and apparatus for creating multithreaded time slices in a multitasking operating system |
US5485455A (en) * | 1994-01-28 | 1996-01-16 | Cabletron Systems, Inc. | Network having secure fast packet switching and guaranteed quality of service |
US5812533A (en) | 1994-02-28 | 1998-09-22 | British Telecommunications Public Limited Company | Service provision in communications networks |
US5692193A (en) | 1994-03-31 | 1997-11-25 | Nec Research Institute, Inc. | Software architecture for control of highly parallel computer systems |
US5613079A (en) | 1994-04-20 | 1997-03-18 | Microsoft Corporation | System for verifying the proper operation of a replication facility |
US5634004A (en) | 1994-05-16 | 1997-05-27 | Network Programs, Inc. | Directly programmable distribution element |
US5696900A (en) * | 1994-06-07 | 1997-12-09 | Fujitsu Limited | Personal communication service distributed control system for a network communication system including a plurality of hardware resources |
US5608903A (en) * | 1994-12-15 | 1997-03-04 | Novell, Inc. | Method and apparatus for moving subtrees in a distributed network directory |
US5513314A (en) | 1995-01-27 | 1996-04-30 | Auspex Systems, Inc. | Fault tolerant NFS server system and mirroring protocol |
US5815710A (en) | 1995-03-22 | 1998-09-29 | Sun Microsystems, Inc. | Method and apparatus for managing relationships among objects in a distributed object environment |
US5692183A (en) | 1995-03-31 | 1997-11-25 | Sun Microsystems, Inc. | Methods and apparatus for providing transparent persistence in a distributed object operating environment |
US5727203A (en) | 1995-03-31 | 1998-03-10 | Sun Microsystems, Inc. | Methods and apparatus for managing a database in a distributed object operating environment using persistent and transient cache |
US5848419A (en) | 1995-03-31 | 1998-12-08 | Sun Microsystems, Inc. | Methods and apparatus for providing transparent persistence in a distributed object operating environment |
US5727150A (en) | 1995-05-05 | 1998-03-10 | Silicon Graphics, Inc. | Apparatus and method for page migration in a non-uniform memory access (NUMA) system |
US5812751A (en) | 1995-05-19 | 1998-09-22 | Compaq Computer Corporation | Multi-server fault tolerance using in-band signalling |
US5687308A (en) | 1995-06-07 | 1997-11-11 | Tandem Computers Incorporated | Method to improve tolerance of non-homogeneous power outages |
US5781537A (en) | 1995-07-07 | 1998-07-14 | International Business Machines Corporation | Setting up, taking down and maintaining connections in a communications network |
US5758343A (en) * | 1995-12-08 | 1998-05-26 | Ncr Corporation | Apparatus and method for integrating multiple delegate directory service agents |
US5805785A (en) | 1996-02-27 | 1998-09-08 | International Business Machines Corporation | Method for monitoring and recovery of subsystems in a distributed/clustered system |
US5832514A (en) | 1996-06-26 | 1998-11-03 | Microsoft Corporation | System and method for discovery based data recovery in a store and forward replication process |
US5768510A (en) | 1996-07-01 | 1998-06-16 | Sun Microsystems, Inc. | Object-oriented system, method and article of manufacture for a client-server application enabler system |
US5805786A (en) | 1996-07-23 | 1998-09-08 | International Business Machines Corporation | Recovery of a name server managing membership of a domain of processors in a distributed computing environment |
US6148377A (en) * | 1996-11-22 | 2000-11-14 | Mangosoft Corporation | Shared memory computer networks |
US6115549A (en) * | 1997-02-12 | 2000-09-05 | Novell, Inc. | Directory-services-based software distribution apparatus and method |
US5933826A (en) * | 1997-03-21 | 1999-08-03 | Novell, Inc. | Method and apparatus for securing and storing executable content |
Non-Patent Citations (35)
Title |
---|
"Software Agents," Genesereth et al., Communications of the ACM, Jul. 1994, vol. 37, No. 7, pp. 48-53. |
"Support for Collaborative Design: Agents and Emergence, Edmonds et al.," Communications of the ACM, Jul. 1994, vol. 37, No. 7, pp. 41-47. |
Amaral et al., "A Model for Persistent Shared Memory Addressing in Distributed Systems," Object Orientation in Operating Systems, 1992, IEEE, pp. 2-11. |
Anderson et al. "Scheduler Activations: Effective Kernel Support for the User-Level Management of Parallelism," Operating Systems Review (SIGOPS), vol. 25, No. 1, Jan. 1, 1991, pp. 95-109. |
Barton-Davis et al. "Adding Scheduler Activations to Mach 3.0," Proceedings of the USENIX Mach III Symposium, Santa Fe, NM, USA, APr. 19-21, 1993, pp. 119-136. |
Carter, J.B. et al., "Optimistic Implementation of Bulk Data Transfer Protocols," In Proceedings of the 1989 Signetrics Conference, pp. 61-69 (May, 1989). |
Carter, J.B. et als., "Distributed Operating Systems Based on a Protected Global Virtual Address Space,"In the Proceedings of the Third Workshop on Workstation Operating Systems (WWOS) (May, 1992). |
Carter, J.B. et als., "FLEX: A Tool for Building Efficient and Flexible Systems," In the Proceedings of the Fourth Workshop on Workstation Operating Systems (WWOS) (Oct., 1993). |
Carter, J.B. et als., "Reducing Consistency Traffic and Cache Misses in the Avalanche Multiprocessor," University of Utah technical report. |
Carter, J.B. et als., "Techniques for Reducing Consistency-Related Communications in Distributed Shared Memory Systems," ACM Transactions on Computer Systems, pp. 205-243, vol. 13, No. 3 (Aug., 1995). |
Carter, John B., "Design of the Munin Distributed Shared memory System," To appear in the special issue of the Journal of Parallel and Distributed Computing on distributed shared memory (1995). |
Dryden, P. "Users throwing cache at networks delays" Computerworld, Oct. 7, 1996, http://ww.computerworld.com/search/AT-html/9610/961007SL41cacheb.html, originally printed on May 22, 1997, reprinted on Nov. 18, 1998. |
Enterprise Networking Web Page, http://www.lancache.com/enad1.html, printed on May 20, 1997. |
Henskens et al. "Course and Fine Grain Objects in a Distributed Persistent Store," Object Orientation in Operating Systems, 1993, IEEE, pp. 116-123. |
Irelenbusch et al. "Towards a Resilient Shared Memory Concept for Distributed Persistent Object Systems," Proceedings of the 28th Annual Hawaii Intl. Conference on System Sciences, 1995, IEEE, pp. 675-684. |
Koppe C. "Sleeping Threads: A Kernel Mechanism for Support of Efficient User Level Threads," Proceedings of Seventh IASTED-ISMM International Conference on Parallel and Distributed Computing and Systems, Washington, DC, USA, oct. 19-21, 1995, pp. 11-15. |
Lea et al. "COOL: System Support for Distributed Programming," Communications of the ACM, vol. 36, No. 9, pp. 37-46. |
Li, Kai, "Shared Virtual Memory on Loosely Coupled Multiprocessors," Yale University, Department of Computer Science, (Sep., 1986). |
Measurement Techniques Inc. Web Page, http://www.lancache.com/prl_4.html, printed on May 20, 1997. |
Measurement Techniques Inc. Web Page, http://www.lancache.com/slc.html, printed on May 20, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/news/level3b/news_rel_970421.html, printed on May 22, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/netcache/datasheet.html, printed on May 22, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/nfs.html, printed on May 22, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/ontap.html, printed on May 22, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/webfiler.html, printed on May 22, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/windows.html, printed on May 22, 1997. |
Peak Technologies, Inc. Web Page, http://www.peakJet/PeakJet.html, printed on May 20, 1997. |
Peak Technologies, Inc. Web Page, http://www.peak-media.com/PeakJet/quick.html, printed on May 20, 1997. |
Relay Web Page, http://www.relay.com/product/gold.html, printed on May 22, 1997. |
Relay Web Page, http://www.relay.com/product/otg.html, printed on May 22, 1997. |
Sequel Technology Web Page, http://www.sequeltech.com/product/netPIM/prodinfo.html, printed on May 22, 1997. |
Stac Inc. Web Page, http://www.stac.com/replica/pr-legatoagreement.html, printed on May 22, 1997. |
Tricord Systems, Inc. Web Page, http://www.tricord.com/2/10/10-3-96.html, printed on May 22, 1997. |
Wilson, Andrew W., "Hierachical Cache/Bus Architecture for Shared Memory Multiprocessors," ACM, pp. 244-252 (1987). |
Wilson, Andrew W., "Organization and Statistical Simulation of Hierarchical Multiprocessores," UMI Dissertation Information Service (1985). |
Cited By (95)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7814499B2 (en) | 1996-07-01 | 2010-10-12 | Microsoft Corporation | Urgent replication facility |
US7200847B2 (en) | 1996-07-01 | 2007-04-03 | Microsoft Corporation | Urgent replication facility |
US20020144252A1 (en) * | 1996-07-01 | 2002-10-03 | Microsoft Corporation | Urgent replication facility |
US20060011720A1 (en) * | 1998-03-27 | 2006-01-19 | Call Charles G | Methods and apparatus for transferring product information from manufacturers to retailers and distributors via the Internet |
US9361243B2 (en) | 1998-07-31 | 2016-06-07 | Kom Networks Inc. | Method and system for providing restricted access to a storage medium |
US8612603B2 (en) | 1998-10-27 | 2013-12-17 | Peer Communications Corporation | Method for uniform network access |
US7941536B2 (en) | 1998-10-27 | 2011-05-10 | Peer Communications Corporation | Apparatus and method for uniform network access |
US9026660B2 (en) | 1998-10-27 | 2015-05-05 | Peer Communications Corporation | Method for uniform network access |
US7860921B2 (en) | 1998-10-27 | 2010-12-28 | Peer Communications Corporation | Uniform network access |
US20100211683A1 (en) * | 1998-10-27 | 2010-08-19 | Murrell Stephen J | Method for uniform network access |
US20100180030A1 (en) * | 1998-10-27 | 2010-07-15 | Sociocybernetics, Inc. | Apparatus and method for uniform network access |
US8260920B2 (en) | 1998-10-27 | 2012-09-04 | Peer Communications Corporation | Method for uniform network access |
US7941540B2 (en) | 1998-10-27 | 2011-05-10 | Peer Communications Corporation | Method for uniform network access |
US20050246412A1 (en) * | 1998-10-27 | 2005-11-03 | Murrell Stephen J | Uniform network access |
US20110208798A1 (en) * | 1998-10-27 | 2011-08-25 | Murrell Stephen J | Method for uniform network access |
US8037125B2 (en) | 1998-10-27 | 2011-10-11 | Peer Communications Corporation | Method for uniform network access |
US7769785B2 (en) * | 1998-12-17 | 2010-08-03 | Apple Inc. | System and method for interfacing index based and iterator based application programming interfaces |
US20050240716A1 (en) * | 1998-12-17 | 2005-10-27 | Day Mark S | System and method for interfacing index based and interator based application programming interfaces |
US7359921B1 (en) | 1999-04-29 | 2008-04-15 | Charles Schwab & Co., Inc. | System and method for rapidly generating identifiers for records of a database |
US6714948B1 (en) * | 1999-04-29 | 2004-03-30 | Charles Schwab & Co., Inc. | Method and system for rapidly generating identifiers for records of a database |
US20060010150A1 (en) * | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US8782009B2 (en) | 1999-05-18 | 2014-07-15 | Kom Networks Inc. | Method and system for electronic file lifecycle management |
US20060184589A1 (en) * | 2000-06-21 | 2006-08-17 | Microsoft Corporation | Linked Value Replication |
US7162499B2 (en) | 2000-06-21 | 2007-01-09 | Microsoft Corporation | Linked value replication |
US7526513B2 (en) | 2000-06-21 | 2009-04-28 | Microsoft Corporation | Multi-level replication and conflict resolution |
US7124203B2 (en) * | 2000-07-10 | 2006-10-17 | Oracle International Corporation | Selective cache flushing in identity and access management systems |
US7814536B2 (en) | 2000-07-10 | 2010-10-12 | Oracle International Corporation | User authentication |
US6986039B1 (en) * | 2000-07-11 | 2006-01-10 | International Business Machines Corporation | Technique for synchronizing security credentials using a trusted authenticating domain |
US6986038B1 (en) | 2000-07-11 | 2006-01-10 | International Business Machines Corporation | Technique for synchronizing security credentials from a master directory, platform, or registry |
US6751719B1 (en) * | 2000-10-26 | 2004-06-15 | International Business Machines Corporation | Method and an apparatus to dynamically order features and to resolve conflicts in a multiple-layer logical volume management environment |
US6754798B1 (en) * | 2000-10-26 | 2004-06-22 | International Business Machines Corporation | Method and an apparatus for volume creation in the presence of multiple aggregators |
US7797368B1 (en) * | 2000-11-17 | 2010-09-14 | Intel Corporation | Managing a network of consumer-use computing devices |
US8935418B2 (en) | 2001-02-26 | 2015-01-13 | Oracle International Corporation | Access system interface |
US7499413B2 (en) | 2001-02-28 | 2009-03-03 | Microsoft Corporation | Method for designating communication paths in a network |
US20050256879A1 (en) * | 2001-02-28 | 2005-11-17 | Microsoft Corporation | Method for designating communication paths in a network |
US7873614B2 (en) | 2001-05-29 | 2011-01-18 | Oracle America, Inc. | Method and system for creating and utilizing managed roles in a directory system |
US20030070090A1 (en) * | 2001-10-09 | 2003-04-10 | Hillhouse Robert D. | Method of providing an access request to a same server based on a unique identifier |
US7240211B2 (en) * | 2001-10-09 | 2007-07-03 | Activcard Ireland Limited | Method of providing an access request to a same server based on a unique identifier |
US20030088587A1 (en) * | 2001-11-06 | 2003-05-08 | John Merrells | Replication architecture for a directory server |
US6973463B2 (en) * | 2001-11-06 | 2005-12-06 | Sun Microsystems, Inc. | Replication architecture for a directory server |
US20060168120A1 (en) * | 2001-11-27 | 2006-07-27 | Microsoft Corporation | Non-invasive latency monitoring in a store-and-forward replication system |
US7519736B2 (en) | 2001-11-27 | 2009-04-14 | Microsoft Corporation | Non-invasive latency monitoring in a store-and-forward replication system |
US7765298B2 (en) | 2001-11-30 | 2010-07-27 | Oracle International Corporation | Impersonation in an access system |
US20060184646A1 (en) * | 2001-12-21 | 2006-08-17 | Microsoft Corporation | Authentication and Authorization Across Autonomous Network Systems |
US7617522B2 (en) | 2001-12-21 | 2009-11-10 | Microsoft Corporation | Authentication and authorization across autonomous network systems |
US7185359B2 (en) | 2001-12-21 | 2007-02-27 | Microsoft Corporation | Authentication and authorization across autonomous network systems |
US6947942B1 (en) * | 2002-05-30 | 2005-09-20 | Taiwan Semiconductor Manufacturing Company, Ltd. | Methods of managing user and computer objects in directory service |
US20040088365A1 (en) * | 2002-10-30 | 2004-05-06 | Sun Microsystems, Inc. | Service information model mapping with shared directory tree representations |
US20040148361A1 (en) * | 2003-01-27 | 2004-07-29 | Ridgley Jay W. | System and method for migrating directories over a wide-area network |
US20090119344A9 (en) * | 2003-04-14 | 2009-05-07 | Novell, Inc. | Method and apparatus for splitting a replicated volume |
US20080104132A1 (en) * | 2003-04-14 | 2008-05-01 | Novell, Inc. | Method and apparatus for splitting a replicated volume |
US7805401B2 (en) * | 2003-04-14 | 2010-09-28 | Novell, Inc. | Method and apparatus for splitting a replicated volume |
US8776050B2 (en) | 2003-08-20 | 2014-07-08 | Oracle International Corporation | Distributed virtual machine monitor for managing multiple virtual resources across multiple physical nodes |
US20050044301A1 (en) * | 2003-08-20 | 2005-02-24 | Vasilevsky Alexander David | Method and apparatus for providing virtual computing services |
US20050080982A1 (en) * | 2003-08-20 | 2005-04-14 | Vasilevsky Alexander D. | Virtual host bus adapter and method |
US7904487B2 (en) | 2003-10-09 | 2011-03-08 | Oracle International Corporation | Translating data access requests |
US7882132B2 (en) | 2003-10-09 | 2011-02-01 | Oracle International Corporation | Support for RDBMS in LDAP system |
US20050102297A1 (en) * | 2003-11-12 | 2005-05-12 | Lloyd Alan C. | Directory system |
US7620630B2 (en) * | 2003-11-12 | 2009-11-17 | Oliver Lloyd Pty Ltd | Directory system |
US20050278552A1 (en) * | 2004-06-14 | 2005-12-15 | Vincent Delisle | Secure virtual account |
US7693840B1 (en) * | 2004-07-30 | 2010-04-06 | Sprint Communications Company L.P. | Method and system for distribution of common elements |
US20060075059A1 (en) * | 2004-08-31 | 2006-04-06 | Red Hat, Inc. | Method and system for caching directory services |
US7698278B2 (en) * | 2004-08-31 | 2010-04-13 | Red Hat, Inc. | Method and system for caching directory services |
US20060089925A1 (en) * | 2004-10-25 | 2006-04-27 | International Business Machines Corporation | Distributed directory replication |
US7315854B2 (en) * | 2004-10-25 | 2008-01-01 | International Business Machines Corporation | Distributed directory replication |
US20100100523A1 (en) * | 2005-03-31 | 2010-04-22 | Barclays Capital Inc. | System and Method for Grouping a Collection of Documents Using Document Series |
US7860864B2 (en) | 2005-04-14 | 2010-12-28 | International Business Machines Corporation | Distributed directory deployment |
US7373348B2 (en) | 2005-04-14 | 2008-05-13 | International Business Machines Corporation | Distributed directory deployment |
US20060248117A1 (en) * | 2005-04-14 | 2006-11-02 | International Business Machines Corporation | Distributed directory deployment |
US20080065637A1 (en) * | 2005-04-14 | 2008-03-13 | Emc Corporation | Locating last processed data |
US20080065663A1 (en) * | 2005-04-14 | 2008-03-13 | Emc Corporation | Reestablishing process context |
US20060235847A1 (en) * | 2005-04-14 | 2006-10-19 | Emc Corporation | Traversing data in a repeatable manner |
US20080222161A1 (en) * | 2005-04-14 | 2008-09-11 | International Business Machines Corporation | Distributed Directory Deployment |
US7657579B2 (en) * | 2005-04-14 | 2010-02-02 | Emc Corporation | Traversing data in a repeatable manner |
US8688813B2 (en) | 2006-01-11 | 2014-04-01 | Oracle International Corporation | Using identity/resource profile and directory enablers to support identity management |
US9674180B2 (en) | 2006-01-11 | 2017-06-06 | Oracle International Corporation | Using identity/resource profile and directory enablers to support identity management |
US20070299804A1 (en) * | 2006-06-21 | 2007-12-27 | Zhen Liu | Method and system for federated resource discovery service in distributed systems |
US7849069B2 (en) | 2006-06-21 | 2010-12-07 | International Business Machines Corporation | Method and system for federated resource discovery service in distributed systems |
US20080043973A1 (en) * | 2006-08-07 | 2008-02-21 | Yonghong Lai | Method and apparatus for using a directory service to facilitate centralized device naming |
US7925872B2 (en) * | 2006-08-07 | 2011-04-12 | Oracle America, Inc. | Method and apparatus for using a directory service to facilitate centralized device naming |
US9026628B2 (en) * | 2007-01-22 | 2015-05-05 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
US20080177767A1 (en) * | 2007-01-22 | 2008-07-24 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
US20080183891A1 (en) * | 2007-01-22 | 2008-07-31 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
US8756253B2 (en) | 2007-01-22 | 2014-06-17 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
US20080177873A1 (en) * | 2007-01-22 | 2008-07-24 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
US9015342B2 (en) * | 2007-01-22 | 2015-04-21 | Xerox Corporation | Two-level structured overlay design for cluster management in a peer-to-peer network |
CN102439560A (en) * | 2009-03-31 | 2012-05-02 | Emc公司 | Data redistribution in data replication systems |
US20100246578A1 (en) * | 2009-03-31 | 2010-09-30 | Data Domain, Inc. | Data redistribution in data replication systems |
US8325724B2 (en) | 2009-03-31 | 2012-12-04 | Emc Corporation | Data redistribution in data replication systems |
CN102439560B (en) * | 2009-03-31 | 2016-02-10 | Emc公司 | Data in data copy system are distributed again |
WO2010114598A1 (en) * | 2009-03-31 | 2010-10-07 | Emc Corporation | Data redistribution in data replication systems |
US20110161585A1 (en) * | 2009-12-26 | 2011-06-30 | Sailesh Kottapalli | Processing non-ownership load requests hitting modified line in cache of a different processor |
US20120260036A1 (en) * | 2011-04-08 | 2012-10-11 | Symantec Corporation | Storage management systems and methods |
CN111949619A (en) * | 2020-07-21 | 2020-11-17 | 苏州元核云技术有限公司 | Dynamic directory generation method, system, electronic device and storage medium |
CN111949619B (en) * | 2020-07-21 | 2024-04-26 | 苏州元核云技术有限公司 | Dynamic catalog generation method, system, electronic equipment and storage medium |
Also Published As
Publication number | Publication date |
---|---|
DE69719564T2 (en) | 2004-02-19 |
US20040117410A1 (en) | 2004-06-17 |
DE69719564D1 (en) | 2003-04-10 |
EP0976065A1 (en) | 2000-02-02 |
AU5894898A (en) | 1998-06-10 |
WO1998022893A1 (en) | 1998-05-28 |
ATE233923T1 (en) | 2003-03-15 |
EP0976065B1 (en) | 2003-03-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6647393B1 (en) | Dynamic directory service | |
US20080256090A1 (en) | Dynamic directory service | |
US6029168A (en) | Decentralized file mapping in a striped network file system in a distributed computing environment | |
US7146377B2 (en) | Storage system having partitioned migratable metadata | |
US7243089B2 (en) | System, method, and service for federating and optionally migrating a local file system into a distributed file system while preserving local access to existing data | |
US6026474A (en) | Shared client-side web caching using globally addressable memory | |
US7743038B1 (en) | Inode based policy identifiers in a filing system | |
US8131782B1 (en) | Shadow directory structure in a distributed segmented file system | |
US7587426B2 (en) | System and method for virtualizing a distributed network storage as a single-view file system | |
US7007024B2 (en) | Hashing objects into multiple directories for better concurrency and manageability | |
US6339793B1 (en) | Read/write data sharing of DASD data, including byte file system data, in a cluster of multiple data processing systems | |
US9996572B2 (en) | Partition management in a partitioned, scalable, and available structured storage | |
US6449731B1 (en) | Self-healing computer system storage | |
TWI232382B (en) | A distributed storage system for data-sharing among client computers running different operating system types | |
US6983322B1 (en) | System for discrete parallel processing of queries and updates | |
US6530036B1 (en) | Self-healing computer system storage | |
US7552223B1 (en) | Apparatus and method for data consistency in a proxy cache | |
US8255364B2 (en) | System for emulating a virtual boundary of a file system for data management at a fileset granularity | |
US6829610B1 (en) | Scalable storage system supporting multi-level query resolution | |
US20100161657A1 (en) | Metadata server and metadata management method | |
CA2734675A1 (en) | Shared namespace for storage clusters | |
WO2003071429A1 (en) | Flexible and adaptive read and write storage system architecture | |
US20230266919A1 (en) | Hint-based fast data operations with replication in object-based storage | |
US20230376451A1 (en) | Client support of multiple fingerprint formats for data file segments | |
Hua et al. | Hashing Computation for Scalable Metadata |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MANGOSOFT CORPORATION, MASSACHUSETTSFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:DIETTERICH, DANIEL J.;PHILLIPS, ROBERT S.;CARTER, JOHN B.;AND OTHERS;REEL/FRAME:008810/0798;SIGNING DATES FROM 19970711 TO 19971030 |
|
AS | Assignment |
Owner name: IMPERIAL BANK, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT CORPORATION;REEL/FRAME:009277/0209Effective date: 19980528 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MANGOSOFT INTELLECTUAL PROPERTY, INC., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT CORPORATION;REEL/FRAME:018247/0438Effective date: 20060911 |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER NO LONGER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: STOL); ENTITY STATUS OF PATENT OWNER: SMALL ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO SMALL (ORIGINAL EVENT CODE: LTOS); ENTITY STATUS OF PATENT OWNER: SMALL ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: MANGOSOFT CORPORATION, NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:COMERCIA BANK, A TEXAS BANKING ASSOCIATION, SUCCESSOR IN INTEREST TO IMPERIAL BANK;REEL/FRAME:028083/0471Effective date: 20120416 |
|
AS | Assignment |
Owner name: MANGOSOFT INTELLECTUAL PROPERTY, INC., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT CORPORATION;REEL/FRAME:028089/0846Effective date: 20120423 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT INTELLECTUAL PROPERTY INC.;REEL/FRAME:028687/0383Effective date: 20120501 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
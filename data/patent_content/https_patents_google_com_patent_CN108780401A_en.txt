CN108780401A - The layout system based on constraint of efficient layout and control for user interface element - Google Patents
The layout system based on constraint of efficient layout and control for user interface element Download PDFInfo
- Publication number
- CN108780401A CN108780401A CN201780016736.XA CN201780016736A CN108780401A CN 108780401 A CN108780401 A CN 108780401A CN 201780016736 A CN201780016736 A CN 201780016736A CN 108780401 A CN108780401 A CN 108780401A
- Authority
- CN
- China
- Prior art keywords
- elements
- layout
- constraint
- instruction
- page
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
- G06F40/106—Display of layout of documents; Previewing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/30—Creation or generation of source code
- G06F8/34—Graphical or visual programming
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F30/00—Computer-aided design [CAD]
- G06F30/30—Circuit design
- G06F30/39—Circuit design at the physical level
- G06F30/392—Floor-planning or layout, e.g. partitioning or placement
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F30/00—Computer-aided design [CAD]
- G06F30/30—Circuit design
- G06F30/39—Circuit design at the physical level
- G06F30/398—Design verification or optimisation, e.g. using design rule check [DRC], layout versus schematics [LVS] or finite element methods [FEM]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/30—Creation or generation of source code
- G06F8/38—Creation or generation of source code for implementing user interfaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2111/00—Details relating to CAD techniques
- G06F2111/04—Constraint-based CAD
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/103—Formatting, i.e. changing of presentation of documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T11/00—2D [Two Dimensional] image generation
- G06T11/60—Editing figures and text; Combining figures or text
Abstract
The system and method that the various aspects of this subject technology are related to the layout and control based on constraint for user interface (UI) element.The system receives the first user input of instruction instruction of the first UI elements of positioning on the page of layout application.The system receives the second user input that instruction positions the instruction of the 2nd UI elements on the page.The system receives the third user that instruction is created from the 2nd UI elements to the instruction of the connection of the first UI elements and inputs.The system is based on the connection, generates the layout constraint of the spatial relationship between the first UI elements of instruction and the 2nd UI elements.The system provides layout constraint in layout data file associated with UI.
Description
Cross reference to related applications
The application is according to 35U.S.C. § 119, it is desirable that the entitled " CONSTRAINTS-BASED that on May 17th, 2016 submits
LAYOUT SYSTEM FOR EFFICIENT LAYOUT AND CONTROL OF USER INTERFACE ELEMENTS's "
Entitled " the SYSTEMS AND that U.S. Provisional Patent Application Serial No. No.62/337,850 and on May 17th, 2016 submit
The U.S. Provisional Patent Application of METHODS FOR AUTOMATIC DETERMINATION OF LAYOUT CONSTRAINTS "
Sequence number No.62/337,852 priority, entire contents are incorporated herein by reference.
Technical field
The present disclosure relates generally to the computer based layout systems for user interface development and deployment, more specifically
It says, is related to the layout system based on constraint of the efficient layout and control for user interface element.
Background technology
User interface is configured to adapt to various screen conditions, such as screen size, screen density and used
Human language.Traditional layout system allows developer to specify how layout widget and their placement position
How to change to adapt to continually changing screen condition.However, traditional layout system is very complicated, and limits with performance,
This may make establishment user interface become the undesirable time-consuming process of developer.
The description provided in background technology part should not only because it is mentioned in the background section or with the back of the body
Scape technology segment is associated and is considered as the prior art.Background technology part may include describe one of this subject technology or
The information of many aspects.
Invention content
Disclosed theme is related to the layout system based on constraint of the efficient layout and control for user interface element.
More specifically, providing the layout system and method based on constraint, developer is allowed to be easier and effectively specify how
Layout widget and their position how to change with adapt to those change and/or variable display condition (for example,
Various screen sizes, screen density and language).It is easy to additional user interface complexity and design option.
According to the aspect of the disclosure, a method of computer implementation is provided.This method includes carrying on the computing device
For being used for the layout application of developing user interface (UI), wherein the layout is using the expression for including the page.This method include via
Layout is applied, and receives the first user input, wherein first user inputs instruction and positions the first UI elements on the page
Instruction.This method includes receiving second user input via layout application, wherein second user input instruction is in the page
The instruction of the 2nd UI elements of upper positioning.This method includes receiving third user input via layout application, wherein third user
Input instruction creates the instruction of the connection from the 2nd UI elements to the first UI elements.This method includes being based on the company
It connects, generates the layout constraint for indicating the spatial relationship between the first UI elements and the 2nd UI elements.This method is also wrapped
It includes and provides the layout constraint in layout data file associated with the UI.
According to the aspect of the disclosure, a kind of system, including one or more processors are provided, and is coupled to described one
The computer readable storage medium of a or multiple processors, the computer readable storage medium include instruction.The instruction makes institute
It states one or more processors and layout application for developing UI is provided on the computing device, wherein the layout is using including page
The expression in face.The instruction also makes one or more processors be applied via layout, receives the first user input, wherein this
One user inputs the instruction that instruction positions the first UI elements on the page.The instruction also makes one or more processors pass through
Second user input is received by layout application, wherein second user input instruction positions the 2nd UI elements on the page
Instruction.The instruction also makes one or more processors receive third user input via layout application, wherein the third is used
Family input instruction creates the instruction of the connection from the 2nd UI elements to the first UI elements.The instruction also make one or
Multiple processors are based on the connection, generate the cloth for indicating the spatial relationship between the first UI elements and the 2nd UI elements
Office's constraint.The instruction also makes one or more processors provide the cloth in layout data file associated with the UI
Office's constraint.
According to the aspect of the disclosure, it includes the non-transitory computer-readable storage media instructed to provide a kind of, this refers to
It enables when executed by the processor so that processor executes method.This method includes the cloth provided on the computing device for developing UI
Office's application, wherein the layout is using the expression for including the page.This method includes being applied via layout, receives the first user input,
Wherein, which inputs the instruction that instruction positions the first UI elements on the page.This method includes being answered via layout
It is inputted with second user is received, wherein second user input instruction positions the instruction of the 2nd UI elements on the page.It should
Method includes receiving third user input via layout application, wherein third user inputs instruction and creates from the 2nd UI
Instruction of the element to the connection of the first UI elements.This method includes being based on the connection, generates and indicates the first UI elements
The layout constraint of spatial relationship between the 2nd UI elements.This method further includes in cloth inning associated with the UI
According to providing the layout constraint in file.
Description of the drawings
Attached drawing is included to provide further understanding and be incorporated in this specification and constituting this explanation for this specification
A part for book, it is illustrated that the disclosed embodiments and the principle for being used for explaining the disclosed embodiments together with the description.?
In attached drawing：
Fig. 1 shows the exemplary architecture of the layout tool of some embodiments suitable for implementing the disclosure.
Fig. 2 is to show according to the disclosure exemplary client and server in some terms, the framework from Fig. 1
Block diagram.
Fig. 3 shows the exemplary client using Fig. 2, builds the example process of the layout system based on constraint.
Fig. 4 shows the exemplary mistake using the exemplary client of Fig. 2 and the user interface development of server and deployment
Journey.
Fig. 5 to Fig. 9 shows the schematic diagram of exemplary layout constraint.
Figure 10 shows the exemplary schematic diagram of the relevant layout constraint of dimension.
Figure 11 A and 11B show the example of chain related layouts constraint.
Figure 12 shows the example of the virtual objects for layout constraint to be arranged.
Figure 13 A and 13B show the example of the layout constraint for the object that instruction disappears at runtime.
Figure 14 shows the example of the editor interface of the application for developing and disposing user interface.
Figure 15 shows the block diagram of the exemplary computer system for the client and server that Fig. 2 may be implemented.
In one or more embodiments, all components drawn in not each figure may be needed, and
And one or more embodiments may include other component not shown in the figure.This theme scope of disclosure is not being departed from
In the case of, variation can be made to the arrangement and type of component.In this theme scope of disclosure, other group can be utilized
Part, different components or less component.
Specific implementation mode
The detailed description being set forth below is intended to describe each embodiment, can implement this subject technology without being intended to indicate that
Unique embodiment.As it will be appreciated by persons skilled in the art that the embodiment can in a variety of ways into
Row modification, all without departing from the scope of the present disclosure.Therefore, attached drawing and description should be counted as being exemplary rather than in itself
It is restrictive.
As it is used herein, term " widget (widget) " can refer to the component of application or application, execute
The function of application or the access of offer pair and the associated service of application are provided.As it is used herein, term " anchor
(anchor) " it can refer to and be used to another pair on the page as such as another widget establishes the small portion of window of connection
The element of part.
Overview
It has been based on and discloses the Cassowary algorithm developments that restraint system is used for user interface conventional in layout system
System.Specifically, it is based on the algorithm, restraint system is solved using linear system solution device, to allow the real-time of user interface
The iterative solution used.But there are problems for traditional UI layout systems.UI by commonly referred to as " widget " multiple displays
Object forms.It determines how and positions these widgets on a display screen, while considering complicated consideration factor, it is such as various
Device screen size, display screen density and/or be a complicated task including various human languages in the display.Expression
The existing layout system of these layout Considerations will not minimize this complexity of developer.In some cases, this
Linear system is completely exposed to developer by a little conventional in layout systems, and the complicated and cumbersome development time is caused to predict UI cloth
The behavior of office.This exposure can also cause to reduce the performance issue of layout system, and since the difficult input of layout system is wanted
It asks, can also adversely affect the user experience of developer.For example, such layout system requires developer by mainly compiling
It writes linear equation and carrys out specified layout, this is a heavy task for developer.Other conventional in layout systems will be each
Kind function is divided into a series of specific use-case (for example, contents and distribution being embodied as widgets, by grid organization layout etc.),
Thus before obtaining final layout, unnecessary burden is caused to the developer using multiple components.
Disclosed technology provide using allow developer indicate widget between arbitrary relationship (for example,
One-to-one, catena) small general rule collection indicate the Complex Constraints to widget.The system is based on General Linear side
Journey solver, contributes to built-in flexibility and adaptability.Defined ad hoc rules collection provides better performance and can be predicted
Property, and allow by than directly create linear equation it is simpler in a manner of express widget position.In addition, by list
Entire layout process is moved in a position, may be implemented preferably to be laid out performance and (no longer needs usually to look on Mobile operating system
To complicated view hierarchical structure), and preferably flexibility and new animation capabilities.
Disclosed technology also derives from the solution of computer technology by providing, i.e., be used to express layout by definition closes
The more advanced constraint set of system solves the problems, such as to occur especially in the conventional in layout system in field of computer technology.The disclosure
The effective embodiment that especially creates of the layout system based on Cassowary algorithms.The layout system of the disclosure and traditional cloth
The Cassowary methods that one of distinguishing characteristics between office system is used in conventional in layout system require developer to pass through master
It writes linear equation and carrys out specified layout, and the disclosure provides graphical method for layout exploitation and deployment.About this point, originally
Disclosed layout system eliminates the burden that developer writes linear equation.
Other than the basic layout of the layout system of the disclosure, disclosed technology allows widget level
Being kept completely separate between structure and the mode of anchor window widget.In terms of performance and flexibility, there is wide influence.Example
Such as, conventional in layout system, which is provided, tends to deep and complicated view hierarchical structure due to layout, and the layout system of the disclosure
Eliminate the demand.In addition, the layout system of the disclosure provides concept virtual container/assisting device and animated element, in cloth
Greater flexibility is generated in office system, because they share identical " scene (scene) ".
Disclosed technology further provides for the improvement to the function of computer itself, because：(1) minimum difference is needed
Thus constraint set requires less computer operation and memory resource；(2) it is easier to the solution being communicated to user, rather than wants
User is asked to provide the input for identifying write linear equation；(3) predictable-angle from user and the angle from performance are come
See-key point；And (4) allow the bigger flexibility of supported layout types.
Exemplary system architecture
Fig. 1 is shown during the exploitation and deployment of user interface, on the basis of the layout system based on constraint, user
The efficient layout of interface element and the exemplary architecture 100 of control.Framework 100 includes the server 130 connected by network 150
With client 110.
One in many servers 130 is configured as hosts application server and/or web server.Server 130 can
To be with for any of the processor appropriate of hosts application server and/or web server, memory and communication capacity
Equipment.The layout system based on constraint can be accessed in various clients 110.In certain aspects, the layout system based on constraint
System can be downloaded by network 150 from server 130, and be installed on client 110.Client 110 can be for example, platform
Formula computer, mobile computer, tablet computer (e.g., including E-book reader), mobile device are (for example, smart phone
Or PDA), or with the appropriate processor for accessing the image search engine on one in server 130, memory and logical
Any other equipment of letter ability.Network 150 may include such as LAN (LAN), wide area network (WAN), internet in
Any one or more.In addition, network 150 can include but is not limited to any one or more of following network topologies, packet
Include bus network, star network, loop network, mesh network, star bus network, tree or hierarchical network etc..
The exemplary layout system based on constraint
Fig. 2 is according to the disclosure in some terms, showing exemplary servers 130 and the client in the framework 100 of Fig. 1
110 block diagram 200.Server 130 includes processor 236, communication module 238 and memory 232.Memory 232 includes resource
234.Client 110 includes processor 212, communication module 218 and memory 220.Client 110 and server 130 pass through respectively
By communication module 218 and 238, connected by network 150.Communication module 218 and 238 is configured as connection network 150, with to net
Other equipment on network sends and receives such as data, request, response and the information of order.Communication module 218 and 238 can be
Such as modem or Ethernet card.
The memory 220 of client 110 includes using 221, UI structures engine 222, UI inference engines 223 and linear equation
Engine 224.Memory 220 further includes bound data 225 and library 226.(for example, using bound data 225 and/or library 226) can
With operation using one or more of 221, UI structures engine 222, UI inference engines 223 and linear equation engine 224 come for
Developer provides the layout tool of the visual layout of the display object for user interface.
The processor 212 of client 110 is configured as executing instruction, the finger being such as physically encoded in processor 212
Enable, from memory 220 software receive instruction, or both combination.For example, the execution of processor 212 of client 110 refers to
Enable the layout tool to provide the user interface (UI) for development and application on output equipment 214 for display.In some sides
In face, layout tool includes the expression of the page.In some embodiments, page representation webpage or login page.
In certain aspects, the processor 212 of client 110 is configured as the editor interface (example via application 221
Such as, layout tool), receive user's input from user.User inputs the instruction that instruction positions the first UI elements on the page.Example
Such as, the application 221 in memory 220 can be accessed in the client 110 of user by user, and user uses client
110 input equipment 216 submits user's input to receive user input.In another aspect, the processor of client 110
212 are configured as via layout tool, and second user input is received from user.Second user input can indicate fixed on the page
The instruction of the 2nd UI elements of position.
The user of client 110 can submit third user to input using input equipment 216, and third user input refers to
Show via layout tool, creates the instruction from the 2nd UI elements to the connection of the first UI elements.Layout tool may include input
Portion, wherein the positioning of shown widget can be manipulated by user.Input unit may include layout areas and one or
Multiple controls, to allow, user links together widget and Alignment window is small relative to each other in layout areas
Component.For example, the first UI elements can be first window widget and the 2nd UI elements can be the second widget,
Wherein, the second widget is positioned relative to first window widget.In this example, first window widget can be connected
Be connected to the side (or via an anchor) of the second widget, thus first window widget and the second widget it
Between create spatial relationship.In this respect, spatial relationship can be need not be to first window widget and the second widget
Each specify specific position (or coordinate) in the case of instruction on the page (or application interface layout), relative to second
How widget positions first window widget, and vice versa.
In certain aspects, processor 212 generates instruction using 221 and UI of application structure engines 222 based on the connection
The layout constraint of spatial relationship between first UI elements and the 2nd UI elements.Layout constraint indicates in some embodiments, the
One UI elements and the 2nd UI elements are co-located at same position on the page or the first UI elements and the 2nd UI elements in space
On be separated from each other the spacing of restriction.Depending on embodiment, spacing can be according to density irrelevant (dp or dip), scaling nothing
Close pixel (sp), pixel (px) or point (pt).In certain aspects, processor 212 uses UI structure engines 222 and linear equation
Engine 224 provides layout constraint in layout data file associated with UI.For example, layout constraint may include linear side
Connection between first UI elements and the 2nd UI elements is expressed as mathematic(al) representation by journey.In certain aspects, layout constraint
It is stored as bound data 225.In some embodiments, processor 212 is drawn using 221 and library 226 is applied to linear equation
224 offer layout constraints are held up to be solved from the layout constraint in bound data 225 to linear equation.For example, linear equation engine
224 can be configured as one or more of the connection between determining first UI elements and the 2nd UI elements mistake, and lead to
Cross the quantity that the mistake in connection is minimized to linear equation solution.In certain aspects, linear equation solution can be wrapped
The spatial relationship between the first UI elements of modification and the 2nd UI elements is included, the quantity of the mistake in connection is minimized, and is carried
For indicating the new linear equation of changed spatial relationship.Library 226 can be the number for identifying how to define each layout constraint
According to structure.
As described above, this subject technology will such as widget in the case of being manually entered do not require end user
Display object two dimension place be mapped to linear equation, thereby enhance exploitation for application UI end user experience.
This subject technology is also sent out based on the constraint for being positioned relative to each other widget to reduce in conventional in layout tool by defining
The complexity of existing level arrangement, wherein relatively define level with father's container.
In some embodiments, constraint by the interconnection between the widget at the anchor station of widget Lai
It defines (referring to Fig. 5).Layout constraint may include the anchor spacing of the distance between definition space correlation window widget (referring to figure
6).Layout constraint may include the interconnection between at least two widgets, wherein this theme by the anchor of opposite connection
Technology attempts to indicating that the linear equation of the anchor of opposite connection solves (referring to Fig. 7 A and 7B).In this respect, it may be necessary to about
Beam is adjusted the amount of error to be detected in the connection that is diffused between the anchor point of widget.In some embodiments
In, layout constraint includes the relevant constraint of dimension, wherein changes one or more dimensions of widget in order to be diffused in
The mistake found in connection between widget (referring to Fig. 9 and 10).This subject technology can be used by ad hoc rules collection
Determining constraint placed in the middle, make widget relative to other adjacent window apertures widgets (or the relevant widget of level) from
Dynamic ground is (referring to Fig. 9) placed in the middle.In some embodiments, layout constraint includes chain related constraint, wherein widget is connected
It is connected in chain, indicates the relationship based on sequence between the widget in chain (referring to Figure 11 A and 11B).In some embodiment party
In formula, this subject technology includes virtual container and/or template, to help during UI development processes, grouping show object and
Guidance shows the layout of object (referring to Figure 12).In this respect, it in the operation of final layout before process, is removed from display
Virtual guide and/or template.In one or more embodiments, virtual guide and/or template are not included in layout constraint
An and not part for UI layout hierarchy structures.
Fig. 3 shows the exemplary client 110 using Fig. 2, the example process of the constraint of structure identification layout relationship
300.Although describing Fig. 3 with reference to figure 2, it may be noted that the process steps of Fig. 3 can be executed by other systems.
Since process 300 starting step 301.In step 301, the layout work for display is provided on the computing device
Tool may include the expression of the page, wherein the page can also include the first UI elements positioned on the page.First UI elements can
To be first window widget.Layout tool can be referred to as graphical development environment or layout application sometimes.
Then, in step 302, processor 236 receives instruction using UI structure engines 222 and positions the first UI members on the page
The first user input of the instruction of element.In step 303, processor 236 receives instruction on the page using UI structure engines 222
Position the second user input of the instruction of the 2nd UI elements.2nd UI elements can be the second widget.Next, in step
In rapid 304, processor 236 receives third user using UI structure engines 222 and inputs, and third user inputs instruction and creates from the
Instruction of the two UI elements to the connection of the first UI elements.On the one hand, which can be from the anchor of the first UI elements to the 2nd UI
The connection of the anchor of element.It on the other hand, can be by the way that window fraction be combined with other widgets in virtual container
Together (referring to Figure 12) is connected to create.
In turn, in step 305, processor 236 builds engine 222 using UI, is based on the connection, generates instruction first
The layout constraint of spatial relationship between UI elements and the 2nd UI elements.In this respect, layout constraint indicates instruction on the page,
Relative to the first UI elements, the ad hoc rules of the 2nd UI elements how is positioned.In one or more embodiments, ad hoc rules
Linear equation is generated as by UI structure engines 222, the spatial relationship between UI elements is designated as mathematic(al) representation.UI elements
Two dimension be placed on do not require index line equation it is input by user in the case of be automatically mapped to linear equation.Then
Afterwards, within step 306, processor 236 builds engine 222 using UI, and cloth is provided in layout data file associated with UI
Office's constraint.In some embodiments, layout data file is with extensible markup language (XML) file format.
Processor 236 is mapped to space orientation using UI structure engines 222 and linear equation engine 224 by that will connect
Data and relation data generate layout constraint, and space orientation data indicate on the page relative to the first UI elements and the 2nd UI members
The position of element, is based on space orientation data and relation data, and respectively the first UI elements and the 2nd UI elements determines on the page
Coordinate, and the first UI elements and the 2nd UI elements are provided for display at identified coordinate.Relation data instruction is opposite
One in the first UI elements or the 2nd UI elements, the direction relations between the first UI elements and the 2nd UI elements.
Processor 236 builds engine 222, processing space location data and relation data using UI, and is based on the processing,
Determine whether relation data and space orientation data obscure.It is calculated when at least one of the first UI elements or the 2nd UI elements
When more than one potential coordinate set, relation data and space orientation data may be fuzzy.For example, if space orientation number
According to and/or at least one known dimension of relation data indication window widget be known, then may not require linear equation
Thus relation data and space orientation data render are fuzzy by solver.In this respect, processor 236 is drawn using UI structures
222 are held up independently of linear equation solver (for example, linear equation engine 224), parses relation data and space orientation data, with
Coordinate is determined when determining that relation data and space orientation data are not fuzzy.
However, if meeting layout constraint without known variables, relation data and space orientation data can be transformed into
Linear equation.In this respect, when determining that relation data and space orientation data are fuzzy, processor 236 builds engine using UI
222 and linear equation engine 224, relation data and space orientation data are transformed to one or more linear equations, and lead to
Linear equation solver is crossed, one or more linear equations are solved, to determine when relation data and space orientation data are become
Change coordinate when one or more linear equations into.In certain aspects, processor 236 uses UI structure engines 222 and linear
Equation engine 224 to solve the linear equation in layout constraint.In one or more embodiments, processor 236 uses
UI builds engine 222, and the linear equation based on solution, respectively the first UI elements and the 2nd UI elements determine the seat on the page
Mark.In one or more embodiments, processor 236 builds engine 222 using UI, and first is provided at identified coordinate
UI elements and the 2nd UI elements are for display.
In one or more embodiments, processor 236 builds engine 222 using UI, and relation data and space are determined
Position data are classified as certain kinds constraint, and determine that certain kinds constraint is with first class constraint or different from first class constraint
Second class constraint it is associated.For example, first class constraint includes the constraint for not requiring linear equation solver to carry out Analytic constraint, and
Second class constraint requires linear equation solver.In this respect, processor 236 builds engine 222 independently of linear side using UI
Journey solver parses relation data and space orientation data, to determine when determining certain kinds constraint is associated with first class constraint
When coordinate.On the other hand, when determining that particular constraints collection is associated with second class constraint, processor 236 is drawn using UI structures
222 are held up, relation data and space orientation data are transformed to one or more linear equations, and solve by linear equation
Device solves one or more linear equations, to determine when relation data and space orientation data are converted into one or more
Coordinate when linear equation.
First UI elements include the first anchor and the 2nd UI elements include the second anchor, wherein first from the 2nd UI based on creating
Second anchor of the 2nd UI elements is connected to the first anchor of the first UI elements by element to the instruction of the connection of the first UI elements.It creates
It can indicate that the first anchor and the second anchor occupy the identical mesh on the page from the instruction of the connection of the 2nd UI elements to the first UI elements
Cursor position.The limit the first anchor and the second anchor can be indicated by creating from the instruction of the connection of the 2nd UI elements to the first UI elements
Set a distance.
Processor 236 builds engine 222 using UI, receives the instruction positions the instruction of the 3rd UI elements on the page the 4th
User inputs, and then, is applied via layout, receive instruction create from the first of the 3rd UI elements to the first UI elements the connection and from
The 5th user input of the instruction of second connection of the 3rd UI elements to the 2nd UI elements.Processor 236 builds engine using UI
222, determine that the 3rd UI elements relative to the position of the first UI elements and the 2nd UI elements include mistake, wherein the first UI of limitation
The anchor (for example, right side anchor) on anchor (for example, left side anchor) and the 2nd UI elements on element is positioned in page due to the mistake
On same target position on face.In one or more embodiments, in layout constraint (for example, defining the first and second UI
Connection between element) in find two UI elements of error indication cannot be located at relative positioning same target position on (example
Such as, the first UI elements are located at the left side of the 2nd UI elements).It is connected when being established between two opposite anchors connected in UI elements
When (for example, the left side anchor of the first UI elements is connected to the right side anchor of the 2nd UI elements), it can be found that mistake.
Processor 236 builds engine 222 using UI, by error diffusion to the between the 3rd UI elements and the first UI elements
One connection and the second connection between the 3rd UI elements and the 2nd UI elements.In this respect, two connected mistakes are diffused into
Mistake can be represented as being diffused into the amount of error of the first connection and the ratio for being diffused into the amount of error that second connect.Processor 236 makes
The ratio of the first connected amount of error and the second connected amount of error is changed with UI structure engines 222, and is repaiied based on this
The ratio changed adjusts the first connected amount of error and amount of error.Processor 236 builds engine 222 using UI, can be based on depositing
The input of the user in memory 220 and/or user preference are stored up to change the ratio.In certain aspects, the ratio is by from pre-
Fixed-ratio value is revised as customization rate value, wherein can be minimized each connected amount of error.In one or more embodiment party
In formula, mistake is reduced to predetermined value by processor 236 using UI structure engines 222 based on the ratio changed.Layout constraint
Indicate the amount of error of each for being diffused into each connection.Then, processor 236 builds engine 222 using UI, based on being adjusted
The first connected amount of error and the second connected amount of error for being adjusted, determine the coordinate of the 3rd UI elements.
In one or more embodiments, layout constraint includes connecting with first from the 3rd UI elements to the first UI elements
Connect associated first spacing and with from associated second spacing of the second connection of the 3rd UI elements to the 2nd UI elements,
In, the first spacing indicate the distance between the first UI elements and the 3rd UI elements and the second spacing indicate the 2nd UI elements and
The distance between 3rd UI elements.
Processor 236 builds engine 222 using UI, and virtual objects are provided on the page for display.In one or more
In embodiment, virtual objects are the visual guides on the page.Visual guide may be used as vertical and/or horizontal gridlines,
Help user's anchor window widget on the page.It selects to show control by user to trigger visual guide for display, or
Person automatically renders visual guide when starting layout tool.Processor 236 is defeated to receive user using UI structure engines 222
Enter, which inputs instruction relative to virtual objects, positions the instruction of the first UI elements or the 2nd UI elements.Processor 236 makes
Engine 222 is built with UI to render the final layout of the page based on layout data file.In the operation of final layout, from display
Device removes virtual objects.Help developer during the layout that virtual objects are intended to the page, and not final layout renders
A part of (that is, being not included in DOM Document Object Model (DOM) hierarchical structure).
Fig. 4 shows the exemplary mistake using the exemplary client of Fig. 2 and the user interface development of server and deployment
Journey 400.When user is for example loaded using 221 on client 110 to carry out user interface development and deployment, process 400 is opened
Start from step 401.
Then, in step 402, the application 221 in client 110 provides the page via the editor interface of application 221
Expression for display.The expression of the page may include showing object, guide or container characteristics relative to other, can be default at its
Position, mobile, arrangement and constraint such as show the layout of which UI element of object.In step 403,110 use of client is answered
Engine 222 is built with 221 and UI, constraint set is generated based on the connection between the UI elements on the page.For example, the constraint set can
Including the rule for defining certain connections between UI elements, such as to indicate certain connections between UI elements and/or UI elements
Between certain spatial relationships (for example, making on the first element to the page, the position on the right side of second element).In this respect, UI
Structure engine 222 is convenient for indicate or providing the input by user by these connection mappings of these linear equations
To the linear equation for indicating each layout constraint.Then, in step 404, client 110 by the constraint set and with using 221
Associated library is supplied to the linear equation solver (for example, 224) in client 110.Linear equation solver can be handled
Constraint is to be diffused in any amount of error found in constraint and generate the constraint with the modification for minimizing mistake.
In step 405, client 110 is based on library, is asked from the constraint set linear equation via linear equation solver
Solution.Then, in a step 406, client 110 generates the final layout of UI based on the linear equation solved.In turn, exist
In step 407, client 110 identifies the request pair resource associated with UI.In a step 408, client 110 sends out request
It is sent to server 130.
Server 130 is gone to, in step 409, server 130 receives the request to resource from client 110.Then, exist
Step 410, server 130 obtains requested resource from 130 addressable data source of server.In step 411, server
Requested resource is supplied to client 110 by 130.
Client 110 is gone to, in step 412, client 110 receives requested resource from server 130.Then, exist
In step 413, client 110 provides requested resource for display via the UI with final layout.It in this respect, can be with
UI is rendered using the content (for example, text, image, video) from the resource received, provides and is arranged in final layout
Widget and associated content for display.
Restraint system is semantic
Fig. 5 shows the schematic diagram 500 of exemplary layout constraint semanteme.Specifically, Fig. 5 is provided in user interface member
The concept of " anchor " that is presented on plain (for example, widget)." widget " there are one anchors for tool per side (left, up, right, down)
With center (horizontal and vertical) anchor (for example, 502) and baseline anchor (for example, 506).
The common notion of anchor connection is that connection defines the first constrained type, wherein between the anchor from each widget
Establish connection." source anchor (source anchor) " can be referred to as by starting the anchor of the widget of connection, and the connection is connect
Receiving the anchor for the widget for being destination can be referred to as " target anchor (target anchor) ".In some embodiments, source
Anchor can be located at position identical with target anchor, or in other embodiments, source anchor and target anchor can be located to be limited by spacing
In fixed different location.Then, the layout system of the disclosure collects be defined connection, and attempts to minimize as much as possible
Mistake is to generate final layout.Then can fully define widget relative to each other, rather than relative to they
Father's container defines (in conventional in layout system be typically such case).
Anchor spacing
Fig. 6 A and 6B show the schematic diagram 600 and 650 of the exemplary layout constraint of identification anchor spacing.In fig. 6, anchor
(for example, 502) can link together.For example, can be by the way that the left anchor (for example, 502) of TextView2 be connected to
The right anchor (for example, 502) of TextView1 (for example, 602) creates widget " TextView2 " (for example, 604) and is located at window
The layout on the right side of mouth widget " TextView1 " (for example, 602).In fig. 6b, when anchor is connected to another anchor (for example, target
Anchor) when, it means that two anchors can take up same position.
In certain aspects, the spacing between connected two anchor points can also be defined.Fig. 6 A show TextView2
Left anchor (for example, 604) and the right anchor (for example, 602) of TextView1 between 56 pixels spacing (for example, 606), and
Fig. 6 B show the identical relationship (for example, 652) of undefined spacing.Depending on embodiment, spacing can be arbitrary value.
Constraint shown in Fig. 6 A and 6B can be referred to as Unilateral constraints sometimes herein.
The anchor of opposite connection
Fig. 7 A and 7B show the schematic diagram 700 and 750 of the exemplary layout constraint of the anchor of the opposite connection of identification.Work as connection
When two opposite anchor (for example, 708,710), any anchor cannot be all located in their target.In essence, layout system
It must receive to exist inevitable " mistake " (system attempts the mistake minimized).
Under the specific condition of opposite connection anchor (for example, 708,710) in fig. 7, the layout system of the disclosure determines
Mistake equably " is spread (spread) " in two connections, to generate widget placed in the middle (for example, 706).In Fig. 7 B
In, can define spacing and spacing be layout constraint shown in Fig. 7 A a part (for example, 752,754).
Fig. 8 A-8C show the schematic diagram of the exemplary layout constraint of the diffusion ratio of identification mistake.This public affairs can also be established
The layout system opened is to determine that upper spreading errors will be being connected how according to ratio.Mistake can be redefined in dual link
Diffusion ratio.In this respect, spacing still can be movable, as shown in figure .8A-8C.For example, instead of each chain road
50%, layout system can determine positioning 100% (for example, 802,804) or such as 80%/20% different ratios (for example,
806,808).The ratio can change depending on embodiment.It is constrained shown in Fig. 7 A-8C sometimes referred to as placed in the middle herein
Constraint.
Dimension constrains
Fig. 9 shows the schematic diagram 900 of the exemplary layout constraint of identification confinement dimension.It, can be with other than positioning
Constrain widget dimension.Simplest method is that widget is allowed to stretch to reduce mistake by the constraint defined.?
In Fig. 9, signal show widget stretch (for example, 906) width how to adapt to left and right constraint (for example, 902,
904)。
In a similar way, the layout system of the disclosure can define a dimension of widget according to another dimension
(width or height), therefore (can must be square for example, pressure gives widget, or with 16 with application rate：9
Ratio shows the fact that image).
Figure 10 shows the exemplary schematic diagram 1000 of the relevant layout constraint of dimension.In Fig. 10, widget is tieed up
Degree is constrained by inhomogeneity.In first kind dimension related constraint, widget may be constrained by by diffusion constraints 1002,
Wherein, the length of widget is spread between fixed virtual guide.In the second class dimension related constraint, widget
It may be by 1004 constraint of package constraint, wherein the length of widget is wrapped in has each customized distance therebetween
Between fixed virtual guide.In third class dimension related constraint, widget may be constrained by package constraint 1006,
In, wrap up the dimension restrict by widget.In the 4th class dimension related constraint, widget may be wrapped
Wrap up in 1008 constraint of constraint, wherein package for the minimum widith of set widget by constituting.In the 5th class dimension phase
It closes in constraint, widget may be by 1010 constraint of package constraint, wherein package is by for set widget
Maximum width is constituted.
Figure 11 A and 11B show the example of chain related layouts constraint.In Figure 11 A, layout constraint 1100 includes that window is small
The relationship based on chain between component 1102 and 1104.Widget 1102 and 1104 respectively includes being respectively relative to lateral edges
Restriction distance 1108 and 1110.Spatial relationship between widget 1102 and 1104 is two-way due to connection 1106.
In this respect, layout constraint can be applied to other widgets for being tied to the chain.
In Figure 11 B, the positioning of widget can be constrained by the inhomogeneous constraint based on chain.In first kind base
In the constraint of chain, widget may by diffusion chain 1152 constrain, wherein along chain each widget including
It is equally spaced in the fixed limit of the fixed range of lateral edges.In the second class based in the constraint of chain, widget can
Can by diffusion chain 1154 constrain, wherein along chain each of be located at end widget abut lateral edges and with centre
Widget is equally spaced.In third class based in the constraint of chain, widget may be constrained by weighting chain 1156,
Wherein, certain widgets occupy entire long between lateral edges than more heavily being weighted along other widgets of chain
Degree.In the 4th class based in the constraint of chain, widget may be constrained by bale sling 1158, wherein widget is in phase
For being packaged with equal distance series connection in the either end of lateral edges.In the 5th class based in the constraint of chain, window is small
Component can be biased bale sling 1160 constrain, wherein widget relative to lateral edges at either end on, respectively with become
The distance series connection of change is packaged with, this depends on the amount of bias applied to either end.
Find constraint placed in the middle
In certain aspects, it is based on restraint system, widget placed in the middle passes through two equal intensities of setting in layout
Relative restraint carry out work.For example, if restraint system has three widgets A, B and C of horizontal alignment, and purpose
It is that B is made to be located among A and C, then B can be arranged two constraints in restraint system：(1) the left constraint on the right side of A, and (2) C
The right constraint in left side.Due to constraining intensity having the same, widget B will be finally placed in the middle.As rapid prototyping UI, by
A these constraints of setting undesirable may take.Even more noteworthy, it is desirable that user provides linear equation to express this
The constraint of sample unnecessarily aggravates the experience of User Exploitation UI, and inputs the line received minimizing possibly to be present at from user
Property equation in amount of error in terms of propose the challenge of bigger.
The layout system of the disclosure makes the automation placed in the middle of widget.Layout system (can such as be made by finding
With conventional in layout system) appropriate constraint described in problem and they realize this point for user setting.In layout system
The algorithm work of middle application is following (to as described in horizontal center, vertical center will work in a similar way)：
A. layout system can keep optimal candidate placed in the middle to every side (left and right side).
B. optimal candidate can be initialized as parent window widget side by layout system：The left side of father is left candidate, father's
Right side is right candidate.
C. then, layout system can collect the widget r lists as brother in view hierarchical structure.These are
Widget that can be placed in the middle.
D. layout system can brother list on iteration, check spy according only to orientation placed in the middle and the direction of search
Fixed side.For example, if layout system is intended to horizontal center widget B, layout system searches for execution twice：One
It is a in left side, one on right side.When being searched in left side, layout system will see only the widget of layout system inspection
Right side, and similarly, when being searched on right side, layout system will see only the left side of widget.
E. for the side of each widget of layout system assessment, layout system can execute two steps：1.
If side is actually intersected with the other side.For example, for horizontal center, layout system can check both sides phase on the vertical axis
It hands over.2. layout system can keep the optimal candidate of connection.Better candidate is to be less than current candidate at a distance from the other side
It is candidate.
F. the process is repeated on the other side of widget.This method allows layout system to easily generate constraint, from
And allow layout system widget placed in the middle, to avoid the overlapping (undesirable result) of widget.
Virtual container
Figure 12 shows the schematic diagram 1200 of the exemplary layout constraint of mark virtual container.Present disclose provides it is a kind of about
The layout system of beam, it is intended to be easy to indicate any one one-one relationship between widget.One common issue is that, sometimes
Given layout is simpler with group expression, rather than considers single window widget.For example, user (for example, developer) can
It can wish one group window widget of vertical center.
Most of conventional in layout systems (and/or engine) are laid out the small portion of window that they include by introducing with given way
The special container of part meets the demand.In fig. 12, the layout system of the disclosure, which is changed to introduce, indicates a group window widget
Virtual container (for example, 1202).It is then possible to which constraint is arranged in group itself rather than on its widget.Importantly,
Such virtual container will not arrange their child node, but keep layout calculation in father's restraint system.Virtual container is
Developer and UI designers provide a kind of more flexible mode of their UI designs of expression, to allow them to provide
The hierarchical structure of widget, and container is subdivided into individual component.Since virtual container itself does not need any calculating,
Therefore layout system maintains the performance advantage that layout system can carry out the center of complete layout calculating.This also causes more
Shallow layout hierarchy structure, further enhances the performance of layout system.In traditional layout system, layout container is view
A part for hierarchical structure needs to traverse when drawing, to negatively affect performance.
The layout system of the disclosure allows virtual container (for example, 1202) to express specific placement strategy.This to be laid out
System has reached more advanced, because hierarchical structure allows the more powerful mode that expression is laid out.With conventional in layout system on the contrary, void
Quasi- container only just there must be when establishing constraint；They are needed not be in final view hierarchical structure, this is with performance
Advantage.For example, less traversal hierarchical structure is needed when drawing screen, and in some aspects, institute's Constrained is collected in one
Place.This allows the concept of the completely separable view hierarchical structure of layout system of the disclosure (which widget determination will show)
And how the concept of anchor window widget.This provides for layout system transported about how layout system changes in turn
When row, layout system energy anchor window widget, made for them animations etc. mode greater flexibility.In this respect,
Virtual container will not become a part for final layout and/or the DOM of the page.
In fig. 12, additional help is provided when virtual container (for example, 1202) can also visually create layout, it is all
As (1) provide can be used to assist in create layout virtual vision guide (for example, 1204) for display, (2) table, template or its
He uses higher level structure for user, and (3) virtual assistant's tool may be limited in design tool.
Virtual template
It may need to position a group window widget in a manner of clearly defined, such as alignment one by one institute is fenestrate
One group window widget is either organized as table or offer follows the specific full frame layout of given specification by mouth widget.
In traditional layout system, individual layout component is responsible for this point.
In certain aspects, virtual template is defined to determine how to position its child window widget.The layout system of the disclosure
A difference between system and conventional in layout system is virtual template without layout calculation itself；On the contrary, they only use
The common system of concept constraint defined in layout system expresses how their child constrains one another.It is arranged on child
Constraint will be passed to root restraint system container, which executes practical calculate.This provides several for the layout system of the disclosure
Advantage：(1) all calculating are maintained at single location, this benefit with performance and flexibility；(2) due to such virtual mould
Plate directly uses the constraint vocabulary defined in layout system, they usually are easier to create than the template of manual programming；(3) outside
Portion developer and platform development personnel access rights having the same, can develop these self-defined templates, to be them
The identical benefit for quickly creating the self-defined template of oneself is provided.It is easy to create virtual template via the layout system of the disclosure
Developer can be helped more easily to create self-defined layout.Finally, this also significantly reduces UI mid-deep strata time level knots
The demand of structure, because it conceptually detaches layout itself with view system, this results in one group of independent performance and flexibly
Sexual clorminance.In this respect, virtual template will not become a part for final layout and/or the DOM of the page.
Virtual Assistant object
User interface sometimes can be by developer (for example, user of layout system) using not deposited in actual view system
Member usually describe.For example, guide is usually used to expression dimension/position.
The layout system of the disclosure defines virtual Assistant object, can be used to that widget is arranged when creating
Constraint, but can be discarded safely during drafting/layout time.These objects only need to exist in concept, once
(using them) creates restraint system, so that it may to delete them.One canonical example is virtual guide (for example, Figure 12
1204), allow user relative to horizontal and vertical guide anchor window widget.These virtual guides have relative to his father
The position of the their own of grade (relative to given side of its parent or relative to the position based on percentage) setting.When user loads
Using guide given restraint system when, guide allow user correct linear equation is properly generated in layout system.But
It is in layout/drafting, such virtual assistant need not become a part for view hierarchical structure.In other words, it virtually helps
Hand object will not become a part for final layout and/or the DOM of the page.Can create need not become final view level knot
Other such Assistant objects of a part for structure, to allow user more simply to express layout.
Render the background of virtual component
In the exemplary view level for indicating user interface, there are various elements：(1) the required widget of interaction
(display information allows to act), (2) intermediate layout component are responsible for the positioning of widget, and (3) are only used for drawing decoration
Various dicoration additional window widgets, background content etc..This causes view hierarchical structure in the quantity of hierarchy levels
Upper more more complicated and deeper than purely from the point of view of functional perspective, thus performance is poor.Specifically, due to these " dicoration " windows
Widget is merely used as decorating and not working, therefore only task thus, resonable using widget (complicated object)
By upper inefficient.
As described above, the layout system of the disclosure is based on the constraint for being represented as system of linear equations.In the layout of the disclosure
In system, virtual container (for example, 1202 of Figure 12) is provided, eliminates the intermediate layout in addition to top layout component significantly
The needs (wherein, the systems with holonomic constraints of all widgets of parsing positioning) of component.Solve the decorated dormer in hierarchical structure
The key of the problem of demand of mouth widget is using concept existing for the virtual container, to allow the user of layout system to refer to
The background (color or image) that usual practice can such as be drawn on virtual container.Although these virtual containers are not view hierarchical structures
A part, but for the drafting of view hierarchical structure, they are still available for user's access.On the other hand, including all windows
The top layer layout component of widget and virtual container has the chance drawn first.By tracking specified in virtual container paint
System, the top layer layout component can be executed before traversing its widget for including and drawing them and individually be drawn
Journey.The single drawing course will be responsible for drawing all drawing defined in virtual container.This method allows user to create vision
Upper identical UI, but with the more efficient way for the list for drawing these contents, and help to reduce view hierarchical structure
Complexity.
Self-defined widget and template
For the user of conventional in layout system, the task that self-defined widget is typically complicated is created.In general,
They are only interested in establishment " compound " widget, are such as purely defined using other existing widgets self-defined
Widget.In custom window widget, it is in these conventional in layout systems common problem encountered is that the performance of system and flexibly
Property.In the layout system of the disclosure, such composite object can be defined in the case where not having performance loss almost.
The collapse of embedded constrainer system
For some conventional in layout systems by the hierarchical structure with layout manager come work, layout manager includes to wait for cloth
Office is the widget of child node.Layout manager can also be the child of another layout manager.This method would generally be led
Deep layer view hierarchical structure is caused, especially complicated UI must be laid out and/or use nested simpler layout manager
When.The problem of profound structure, is that hierarchical structure in aspect of performance is not optimal.For example, when needing layout every time, all need
Traverse hierarchical structure.
In certain aspects, all constraints are concentrated on single location with by linear equation engine by the layout system of the disclosure
Solver (for example, 224) parses.Conventional in layout system supports virtual layout manager, is constrained and is added to top layer father constraint
System.In a similar way, the layout system of the disclosure be automatically embedded in the offspring as father's layout manager other are complete
Constrained layout manager instance, to which resolution ratio to be moved in root Constraints Management device.The advantage of doing so is that reducing is made
Resource and solution procedure is concentrated, to allow layout system to obtain better performance.In this respect, new layout is played
Manager may be cheap, especially if they are direct offsprings.This also causes the middle-level structure of view system flat
The practice of change, this also contributes to improve performance in the case where not sacrificing the expressiveness that layout hierarchy structure is brought.
It is inserted into and/or deletes controlled UI elements
The layout of widget in the application of operation usually requires the ability that the dynamic in hierarchical structure changes, such as
Addition, removal or hide window widget.In the general layout based on constraint, need properly and efficiently to handle these more
Change.In the general layout engine based on constraint, deletes and hide window widget is most important.
In certain aspects, it works along both lines with the relevant removal process of the layout system of the disclosure：(1) layout system
The constraint on widget will be needed to consider differently to remove, and (2) remove widget itself.The layout of the disclosure
System specifies its fixed position using two inherent constraints on widget.Constraint on decomposing widget
When, layout system can calculate current (before the decomposition) position of the widget, and store it in inherent constraint, so
Safely deletion constraint, widget are maintained at position as before afterwards, to be provided for the user of layout system
Simple workflow.The second part of the problem is related to deleting widget itself.At this time the problem of is not in the window
The constraint (being deleted by widget) being arranged on widget, but the pact being arranged on other widgets in layout
Widget to be removed is directed toward in beam, these constraints.The layout system of the disclosure will be needed in those widget iteration,
And the rule similar with the constraint step #1 removed is followed to remove associated constraint.
Figure 13 A and 13B show the example of the layout constraint for the object that instruction disappears at runtime.One or more real
Apply in mode, need by the last behavior that layout system is specified be had occurred when widget is marked as having disappeared it is assorted
- that is, it still has but may not influence to be laid out (for example, invisible).In this respect, the layout system of the disclosure makes window
Mouth widget passes through in solver, but will be sized to zero.Another method is to optimize pass, wherein cloth
Office system will comply with labeled as the constraint being arranged on the widget to disappear, and replace this using the constraint being arranged thereon
On the widget of disappearance, constraint that another widget has.For example, in fig. 13, providing and being directed toward the small portion of window
On the right side of widget A (for example, 1304) on the left of part B (for example, 1302), wherein widget B's (for example, 1302)
Position is constrained by some other present confinements.If widget B (for example, 1302) is marked as disappearing, it is laid out and is
System can set the dimension of widget B to zero (for example, 1306 in Figure 13 B), and all will normal work；Or
Person, layout system can assess the constraint of the position in the left side of setting widget B, and replace window using the constraint of assessment
The constraint of mouth widget A.
Figure 14 shows the example of the editor interface 1400 of the application 221 for developing and disposing user interface.Editor
Device interface 1400 includes widget palette 1402, layout editor window 1404, layout detector window 1406 and uses
Family interface 1408.Widget palette 1402 may include that the window for being positioned in layout editor window 1404 is small
The list of component options.Layout editor window 1404 provides painting canvas, wherein user can manipulate one of widget or
Multiple positions, including add and/or remove the connection between the widget of positioning.These connection in some may include
Via the anchor of each widget, connection is established between the widget of placement.Detector window 1406 is laid out to provide
Interface for obtaining additional information related with the widget of the selection in layout editor window 1404.Additional information
May include the description of widget, the text header of widget, widget identifier or widget
Specific dimensions.User interface 1408 provides user interface based on the layout constraint defined in layout editor window 1404
It is indicated for display when the operation of layout.
In the example in figure 14, can (for example, via UI inference engines 223) analysis have such as image 1410 and text
The user interface 1408 of the various display objects of view 1412 come determine it is therein it is each display object between constraint.Such as by arrow
Shown in first 1416, then, layout editor window 1404 is supplied to developer by (for example, building engine 222 using UI),
Include the various constraints 1418 determined to existing user interface (for example, 1408).It can also generate for including that institute is true now
The user interface code of the user interface 1408 of fixed constraint.In this way it is possible to utilize (for example, due to shallower level
Structure) improved function and the alternatively improved new or newer code generated for user interface 1408, and by adding
Add, reduce or otherwise change identified constraint, complexity is added to user interface 1408.
Ardware overview
Figure 15 is the frame for showing may be implemented the client 110 of Fig. 1 and the exemplary computer system 1500 of server 130
Figure.In some aspects, computer system 1500 can be with or in dedicated server, using the combination of hardware or software and hardware
It realizes, or is integrated in another entity, or be distributed in multiple entities.
Computer system 1500 (for example, client 110 and server 130) include bus 1508 for transmitting information or
Other communication mechanisms, and coupled with bus 1508 for handle information processor 1502 (such as processor 212 and
236).For example, computer system 1500 can be realized using one or more processors 1502.Processor 1502 can be with
It is general purpose microprocessor, microcontroller, digital signal processor (DSP), application-specific integrated circuit (ASIC), field-programmable gate array
Row (FPGA), programmable logic device (PLD), controller, state machine, gate logic, discrete hardware component can execute letter
The calculating of breath or other any other suitable entities manipulated.
In addition to hardware, computer system 1500 may include being created as the computer program to create performing environment
Code, for example, be stored in the composition processor firmware in included memory 1504 (for example, memory 220 and 232),
Protocol stack, data base management system, operating system or one or more of which combination code, the memory such as with
Machine accesses memory (RAM), flash memory, read-only memory (ROM), programmable read only memory (PROM), erasable PROM
(EPROM), register, hard disk, removable disk, CD-ROM, DVD or any other suitable storage device, the memory is by coupling
The instruction that bus 1508 is closed to store information and will be executed by processor 1502.Processor 1502 and memory 1504 can lead to
It crosses supplemented or is incorporated in dedicated logic circuit.
Instruction can be stored in memory 1504 and be implemented in one or more computer program products,
That is, one or more modules of the computer program instructions encoded on a computer-readable medium, for by computer system
1500 execution or the operation of control computer system 1500, and according to any method well-known to those having ordinary skill in the art, packet
Include but be not limited to computer language, for example, the language (for example, SQL, dBase) of data-oriented, system language (for example, C,
Objective-C, C++, Assembly), framework language (for example, Java .NET) and applicational language (for example, PHP, Ruby,
Perl,Python).Instruction can also be realized that computer language is such as by computer language：Array language, aspect-oriented language,
Assembler language, author language, command line interface language, compiler language, concurrent type frog language, curly brackets language, data-flow language,
Data structure language, declarative language, abstruse language, diffusion language, fourth generation language, functional language, interactive mode language, solution
Release language, iteration language, the language based on list, minority's language, the language of logic-based, machine language, macrolanguage, metaprogramming
Language, multiple pattern programming language, numerical analysis, based on non-english language, the class-based language of object-oriented, towards right
The language based on prototype of elephant, offside rule language, procedural language, reflection language, rule-based language, script,
Language, synchronous language, grammer processing language, visual language, wirth language based on stack and the language based on xml.Memory
1504 may be utilized for during executing the instruction that will be executed by processor 1502, store temporary variable or other intermediate letters
Breath.
Computer program as discussed in this article not necessarily corresponds to the file in file system.Program can be stored in appearance
Receive other programs or data (for example, being stored in one or more of marking language document script) file a part in,
Be exclusively used in the single file of described program, or multiple coordination files (for example, the one or more modules of storage, subprogram or
The file of the part of code) in.Computer program can be deployed as on a computer or at a website or
It is distributed on multiple websites and by being executed on multiple computers of interconnection of telecommunication network.Described in the present specification process and
Logic flow can be executed by the one or more programmable processors for executing one or more computer programs with by defeated
Enter data manipulation and generates output to execute function.
Computer system 1500 further comprises being coupled to bus 1508, be set for storing the data storage of information and instruction
Standby 1506, such as disk or CD.Computer system 1500 can be coupled to various equipment via input/output module 1510.
Input/output module 1510 can be any input/output module.Exemplary input/output module 1510 includes such as ends USB
The data port of mouth.Input/output module 1510 is configured to connect to communication module 1512.Exemplary communication modules 1512
(for example, communication module 218 and 238) includes network interface card, such as Ethernet card and modem.In some aspects, defeated
Enter/output module 1510 is configured to connect to multiple equipment, such as input equipment 1514 (for example, input equipment 216) and/or
Output equipment 1516 (for example, output equipment 214).Exemplary input devices 1514 include keyboard and indicating equipment, such as mouse
Or trace ball, user can provide input by the input equipment to computer system 1500.Other kinds of input equipment
1514 can be used to the interaction with user, for example, tactile input device, visual input device, audio input device or
Big torsion free modules equipment.For example, it can be any type of sensory feedback to be supplied to the feedback of user, such as vision is anti-
Feedback, audio feedback or touch feedback；And input from the user can be received in any form, including acoustics, voice, touch
Feel or brain wave inputs.Exemplary output device 1516 includes the display equipment for showing information to user, such as LCD (liquid
Crystalline substance display) monitor.
According to one aspect of the disclosure, client 110 and server 130 can execute receiving in response to processor 1502
It is realized using computer system 1500 in one or more sequences of one or more of memory 1504 instruction.In this way
Instruction can be read in memory 1504 from another machine readable media of such as data storage device 1506.It is contained in
The execution of instruction sequence in main memory 1504 makes processor 1502 execute process steps as described herein.It is arranged in multiprocessing
One or more of processor can also be employed to perform the instruction sequence being contained in memory 1504.In alternative side
Face can be replaced using the circuit of hard wire or be combined with software instruction to realize various aspects of the disclosure.Therefore, this public affairs
The aspect opened is not limited to any specific combination of hardware circuit and software.
The various aspects of the theme may be implemented in computing systems in the present specification, after which includes
Component is held, such as data server；Or including middleware component, such as application server；Or including front end assemblies, example
With user by its can in the present specification as described in theme the embodiment graphic user interface or web that interact
The client computer of browser；Or any combinations of rear end as one or more, middleware or front end assemblies.System
Component can be interconnected by any form or the digital data communications (such as communication network) of medium.Communication network is (for example, network
150) may include any one or more of such as LAN, WAN, internet.In addition, communication network may include but not
It is limited to any one or more of for example following network topologies, including bus network, star network, loop network, mesh network
Network, star bus network, tree-like or hierarchical network etc..Communication module can be such as modem or Ethernet card.
Computer system 1500 may include client and server.Client and server is generally remote from each other and allusion quotation
Pass through communication network interaction to type.The relationship of client and server on respective computer by means of running and having each other
There is the computer program of client-server relation to generate.Computer system 1500 can be such as but not limited to desk-top calculating
Machine, laptop computer or tablet computer.Computer system 1500 can also be embedded in another equipment, such as but unlimited
In mobile phone, PDA, Mobile audio player, global positioning system (GPS) receiver, video game console, and/or electricity
Depending on set-top box.
Term " machine readable storage medium " or " computer-readable medium " as used herein refer to participating in carrying instruction
Processor 1502 is supplied with any medium or medium of execution.Such medium can take many forms, including but not limited to
Non-volatile media, Volatile media and transmission medium.Non-volatile media includes such as CD or disk, and such as data store
Equipment 1506.Volatile media includes dynamic memory, such as memory 1504.Transmission medium include coaxial cable, copper wire and
Optical fiber includes the conducting wire for including bus 1508.The common version of machine readable media includes such as floppy disk, flexible disk, hard disk, magnetic
Band, any other magnetic medium, CD-ROM, DVD, any other optical medium, card punch, paper tape, with any of sectional hole patterns
Other physical mediums, RAM, PROM, EPROM, flash EPROM, any other memory chip or cartridge or computer can be from
Its any other medium read.Machine readable storage medium can be machine readable storage device, machine readable storage substrate,
Memory devices realize the material composition of machine readable transmitting signal or the combination of one or more of which.
In the following, it is described that each example of the aspect of the disclosure.These are provided as example, without limiting this theme skill
Art.
According to the aspect of the disclosure, a method of computer implementation is provided.This method includes providing on the computing device
Layout application for developing user interface (UI), wherein the layout application includes the expression of the page.This method include via
Layout application receives the first user input, wherein the first user inputs the finger that instruction positions the first UI elements on the page
It enables.This method includes being applied via layout, receives second user input, wherein second user input instruction is on the page
Position the instruction of the 2nd UI elements.This method includes receiving third user input via layout application, wherein third user inputs
Indicate the instruction of connection of the establishment from the 2nd UI elements to the first UI elements.This method includes being based on the connection,
Generate the layout constraint for indicating the spatial relationship between the first UI elements and the 2nd UI elements.This method further include
The layout constraint is provided in layout data file associated with the UI.
In generating the layout constraint, this method further includes that the connection is mapped to space orientation data and relationship number
According to.In one or more aspects, the space orientation data indicate on the page relative to the first UI elements and institute
State the position of the 2nd UI elements.In one or more aspects, relation data instruction relative to the first UI elements or
One in the 2nd UI elements, the direction relations between the first UI elements and the 2nd UI elements.This method is also
Including being based on the space orientation data and the relation data, the respectively described first UI elements and the 2nd UI elements determine
Coordinate on the page.This method further includes that the first UI elements and the 2nd UI members are provided at identified coordinate
Element is for display.
In determining the coordinate, this method further includes handling the space orientation data and the relation data.The party
Method further includes being based on the processing, determines whether the relation data and the space orientation data obscure.In one or more
In aspect, when to the more than one potential coordinate set of at least one of the first UI elements or described 2nd UI elements calculating
When, the relation data and the space orientation data are fuzzy.This method further includes when the determining relation data and institute
State space orientation data it is not fuzzy when, the relation data and the space orientation are parsed independent of linear equation solver
Data are with the determination coordinate.This method further includes being incited somebody to action when determining that the relation data and the space orientation data are fuzzy
The relation data and the space orientation data are transformed to one or more linear equations.This method further includes working as the relationship
When data and the space orientation data are transformed to one or more linear equations, by the linear equation solver to described
One or more linear equations are solved with the determination coordinate.
In determining the coordinate, this method further includes handling the space orientation data and the relation data.The party
Method further includes that the relation data and the space orientation data are classified as certain kinds constraint.This method further includes described in determination
Certain kinds constraint is associated with first class constraint or different from the second class constraint of the first class constraint.This method is also wrapped
It includes when determining that the certain kinds constraint is associated with the first class constraint, independent of linear equation solver to parse
Relation data and the space orientation data are stated with the determination coordinate.This method further include when determine certain kinds constraint with
When the second class constraint is associated, the relation data and the space orientation data are transformed to one or more linear sides
Journey.This method further includes leading to when the relation data and the space orientation data are transformed to one or more linear equations
The linear equation solver is crossed to solve with the determination coordinate one or more of linear equations.
In one or more aspects, the first UI elements include the first anchor, and the 2nd UI elements include the
Two anchors.Based on the instruction for creating connection from the 2nd UI elements to the first UI elements, the of the 2nd UI elements
Two anchors are connected to the first anchor of the first UI elements.
In one or more aspects, the instruction for creating the connection from the 2nd UI elements to the first UI elements refers to
Show that first anchor and second anchor occupy the same target position on the page.
In one or more aspects, the instruction for creating the connection from the 2nd UI elements to the first UI elements refers to
Show the restriction distance between first anchor and second anchor.
In generating the layout constraint, this method further includes that the determining connection includes mistake.In one or more side
In face, the error indication limits first anchor and second anchor is positioned in the target location on the page.The party
Method further includes changing one or more dimensions of at least one of the first UI elements or described 2nd UI elements.This method
Further include so that amount of error is reduced to predetermined value based on the one or more dimensions changed.
This method further includes receiving the fourth user input for the instruction that instruction positions the 3rd UI elements on the page.It should
Method further includes receiving instruction to create the first connection from the 3rd UI elements to the first UI elements and from described the
Fiveth user input of the three UI elements to the instruction of the second connection of the 2nd UI elements.This method further includes determining described
Three UI elements include mistake relative to the position of the first UI elements and the 2nd UI elements.This method further includes modification institute
State the ratio of the amount of error of the first connection and the amount of error of second connection.This method further include based on the ratio changed,
Adjust the amount of error of the amount of error and second connection of first connection.This method further includes being connected based on first adjusted
The amount of error of the amount of error connect and the second connection adjusted, determines the coordinate of the 3rd UI elements.
In one or more aspects, the layout constraint include with from the 3rd UI elements to the first UI elements
First associated first spacing of connection and with described the from the 3rd UI elements to the 2nd UI elements
Two associated second spacing of connection.In one or more aspects, first spacing indicates the first UI elements and institute
It states the distance between the 3rd UI elements and second spacing indicates between the 2nd UI elements and the 3rd UI elements
Distance.
This method further includes providing virtual objects on the page for display, and the virtual objects are on the page
Visual guide.This method further includes receiving instruction to position the first UI elements or described second relative to the virtual objects
The user of the instruction of one or more of UI elements inputs, the space between the first UI elements and the 2nd UI elements
Relationship is based on the virtual objects.This method further includes that the final layout of the page is rendered based on the layout data file.
In one or more aspects, in the operation of the final layout, it is described virtual right to be removed from the display on the page
As.
According to aspects of the present invention, a kind of system, including one or more processors are provided；And it is coupled to one
Or the computer readable storage medium of multiple processors, the computer readable storage medium include instruction.Described instruction makes
One or more of processors provide the layout application for developing UI on the computing device, wherein the layout application packet
Include the expression of the page.Described instruction also makes one or more of processors be applied via layout, receives the first user input,
Wherein, the first user inputs the instruction that instruction positions the first UI elements on the page.Described instruction also makes one
Or multiple processors are applied via layout, receive second user input, wherein second user input instruction is fixed on the page
The instruction of the 2nd UI elements of position.Described instruction also makes one or more of processors receive third user via layout application
Input, wherein third user inputs the instruction for the connection that instruction is created from the 2nd UI elements to the first UI elements.Institute
Instruction is stated also so that one or more of processors are based on the connection, and generation indicates the first UI elements and described second
The layout constraint of spatial relationship between UI elements.Described instruction also make one or more of processors with the UI phases
The layout constraint is provided in associated layout data file.
In one or more aspects, the user inputs at least two indicated in the two or more UI elements
Between restriction distance.
Described instruction is further such that one or more connection is mapped to space orientation data by one or more processors
And relation data.In one or more aspects, the space orientation data indicate on the page relative to the first UI
The position of element and the 2nd UI elements.In one or more aspects, the relation data instruction is relative to described first
One in UI elements or the 2nd UI elements, the direction relations between the first UI elements and the 2nd UI elements.
Described instruction is further such that one or more of processors are based on the space orientation data and the relation data, respectively
Coordinate on the page is determined for the first UI elements and the 2nd UI elements.Described instruction is further such that one
Or multiple processors provide the first UI elements and the 2nd UI elements for display at identified coordinate.
Described instruction is further such that one or more processors handle the space orientation data and the relation data.
Described instruction is further such that one or more processors determine the relation data and the space orientation based on the processing
Whether data obscure.In one or more aspects, when at least one in the first UI elements or the 2nd UI elements
When the more than one potential coordinate set of a calculating, the relation data and the space orientation data are fuzzy.Described instruction into
One step makes one or more processors when determining that the relation data and the space orientation data are not fuzzy, independent of
Linear equation solver parses the relation data and the space orientation data with the determination coordinate.Described instruction is into one
Step makes one or more processors when determining that the relation data and the space orientation data are fuzzy, by the relationship number
It is transformed to one or more linear equations according to the space orientation data.Described instruction is further such that one or more processing
Device passes through the linear equation when the relation data and the space orientation data are transformed to one or more linear equations
Solver solves with the determination coordinate one or more of linear equations.
Described instruction is further such that one or more processors handle the space orientation data and the relation data.
Described instruction further such that one or more processors the relation data and the space orientation data are classified as it is specific
Class constrains.Described instruction further such that one or more processors determine certain kinds constraint be with first class constraint or
It is associated different from the second class constraint of the first class constraint.Described instruction is further such that one or more processors are worked as really
When the fixed certain kinds constrain associated with the first class constraint, the relationship is parsed independent of linear equation solver
Data and the space orientation data are with the determination coordinate.Described instruction is further such that one or more processors work as determination
When the certain kinds constrain associated with the second class constraint, the relation data and the space orientation data are converted to
One or more linear equations.Described instruction is further such that one or more processors work as the relation data and the space
When location data is converted to one or more linear equations, by the linear equation solver come to one or more of lines
Property equation solution is with the determination coordinate.
Described instruction is further such that one or more of processors provide virtual objects for aobvious on the page
Show.In one or more aspects, the virtual objects are the visual guides on the page.Described instruction is further such that institute
One or more processors reception instruction is stated to position in the two or more UI elements extremely relative to the virtual objects
User's input of few one instruction.In one or more aspects, the space between the two or more UI elements is closed
System is based on the virtual objects.Described instruction is further such that one or more of processors are based on the layout data file
Render the final layout of the page.In one or more aspects, in the operation of the final layout, from the page
Display in remove the virtual objects.
According to the aspect of the disclosure, a kind of non-transitory computer-readable storage media, including instruction are provided, when the finger
When order is executed by processor, the processor is made to execute method.This method includes being provided on the computing device for developing UI's
Layout application, wherein the layout application includes the expression of the page.This method includes being applied via layout, receives the first user
Input, wherein the first user inputs the instruction that instruction positions the first UI elements on the page.This method includes via layout
Using reception second user input, wherein second user input instruction positions the instruction of the 2nd UI elements on the page.
This method includes receiving third user input via layout application, wherein third user inputs instruction and creates from the 2nd UI
Instruction of the element to the connection of the first UI elements.This method includes being based on the connection, generates and indicates the first UI members
The layout constraint of spatial relationship between the plain and described 2nd UI elements.This method further includes in layout associated with the UI
The layout constraint is provided in data file.
Described instruction further such that one or more of processors by each in one or more of connections
It is mapped to the linear equation for indicating the spatial relationship between the first UI elements and the 2nd UI elements.Described instruction is into one
Step is so that one or more of processors have linear equation solution to generate in one or more of connections
The solution of minimal error amount.Described instruction is further such that one or more of processors are divided based on the linear equation solved
It Wei not the coordinate of the first UI elements and the 2nd UI elements determination on the page.Described instruction is further such that institute
It states one or more processors and identified coordinate is supplied to the layout data file.
Described instruction is further such that one or more of processors provide virtual objects for aobvious on the page
Show, the virtual objects are the visual guides on the page.Described instruction is further such that one or more of processors
It receives instruction and positions one or more of described first UI elements or the 2nd UI elements relative to the virtual objects
The user of instruction inputs.In one or more aspects, the space between the first UI elements and the 2nd UI elements is closed
System is based on the virtual objects.Described instruction is further such that one or more of processors are based on the layout data file
Render the final layout of the page.In one or more aspects, described instruction is further such that one or more of places
Device is managed in the operation of the final layout, the virtual objects are removed from the display on the page.
According to the aspect of the disclosure, a kind of system, including device for storing instruction are provided, and deposited for executing
The device of the instruction of storage, described instruction by described device when being executed so that described device executes a kind of method.This method includes
The layout application for developing UI is provided on the computing device, wherein the layout application includes the expression of the page.This method packet
It includes and is applied via layout, receive the first user input, wherein the first user inputs instruction the first UI of positioning members on the page
The instruction of element.This method includes being applied via layout, receives second user input, wherein second user input instruction is described
The instruction of the 2nd UI elements is positioned on the page.This method includes receiving third user input via layout application, wherein third is used
Family input instruction creates the instruction of the connection from the 2nd UI elements to the first UI elements.This method includes based on described
Connection generates the layout constraint for indicating the spatial relationship between the first UI elements and the 2nd UI elements.This method is also
It is included in layout data file associated with the UI and the layout constraint is provided.
In generating the layout constraint, this method further includes that the connection is mapped to space orientation data and relationship number
According to.In one or more aspects, the space orientation data indicate on the page relative to the first UI elements and institute
State the position of the 2nd UI elements.In one or more aspects, relation data instruction relative to the first UI elements or
One in the 2nd UI elements, the direction relations between the first UI elements and the 2nd UI elements.This method is also
Including being based on the space orientation data and the relation data, the respectively described first UI elements and the 2nd UI elements determine
Coordinate on the page.This method further includes that the first UI elements and the 2nd UI members are provided at identified coordinate
Element is for display.
In determining the coordinate, this method further includes handling the space orientation data and the relation data.The party
Method further includes being based on the processing, determines whether the relation data and the space orientation data obscure.In one or more
In aspect, when to the more than one potential coordinate set of at least one of the first UI elements or described 2nd UI elements calculating
When, the relation data and the space orientation data are fuzzy.This method further includes when the determining relation data and institute
State space orientation data it is not fuzzy when, the relation data and the space orientation are parsed independent of linear equation solver
Data are with the determination coordinate.This method further includes being incited somebody to action when determining that the relation data and the space orientation data are fuzzy
The relation data and the space orientation data are transformed to one or more linear equations.This method further includes working as the relationship
When data and the space orientation data are transformed to one or more linear equations, by the linear equation solver to described
One or more linear equations are solved with the determination coordinate.
In determining the coordinate, this method further includes handling the space orientation data and the relation data.The party
Method further includes that the relation data and the space orientation data are classified as certain kinds constraint.This method further includes described in determination
Certain kinds constraint is associated with first class constraint or different from the second class constraint of the first class constraint.This method is also wrapped
It includes when determining that the certain kinds constraint is associated with the first class constraint, independent of linear equation solver to parse
Relation data and the space orientation data are stated with the determination coordinate.This method further include when determine certain kinds constraint with
When the second class constraint is associated, the relation data and the space orientation data are converted into one or more linear sides
Journey.This method further includes leading to when the relation data and the space orientation data are converted to one or more linear equations
The linear equation solver is crossed to solve with the determination coordinate one or more of linear equations.
In one or more aspects, the first UI elements include the first anchor, and the 2nd UI elements include the
Two anchors.Based on the instruction for creating connection from the 2nd UI elements to the first UI elements, the of the 2nd UI elements
Two anchors are connected to the first anchor of the first UI elements.
In one or more aspects, the instruction for creating the connection from the 2nd UI elements to the first UI elements refers to
Show that first anchor and second anchor occupy the same target position on the page.
In one or more aspects, the instruction for creating the connection from the 2nd UI elements to the first UI elements refers to
Show the restriction distance between first anchor and second anchor.
In generating the layout constraint, this method further includes that the determining connection includes mistake.In one or more side
In face, the error indication limits first anchor and second anchor is positioned in the target location on the page.The party
Method further includes changing one or more dimensions of at least one of the first UI elements or described 2nd UI elements.This method
Further include so that amount of error is reduced to predetermined value based on the one or more dimensions changed.
This method further includes receiving the fourth user input for the instruction that instruction positions the 3rd UI elements on the page.It should
Method further includes receiving instruction to create the first connection from the 3rd UI elements to the first UI elements and from described the
Fiveth user input of the three UI elements to the instruction of the second connection of the 2nd UI elements.This method further includes determining described
Three UI elements include mistake relative to the position of the first UI elements and the 2nd UI elements.This method further includes modification institute
State the ratio of the amount of error of the first connection and the amount of error of second connection.This method further include based on the ratio changed,
Adjust the amount of error of the amount of error and second connection of first connection.This method further includes being connected based on first adjusted
The amount of error of the amount of error connect and the second connection adjusted, determines the coordinate of the 3rd UI elements.
In one or more aspects, the layout constraint include with from the 3rd UI elements to the first UI elements
First associated first spacing of connection and with described the from the 3rd UI elements to the 2nd UI elements
Two associated second spacing of connection.In one or more aspects, first spacing indicates the first UI elements and institute
It states the distance between the 3rd UI elements and second spacing indicates between the 2nd UI elements and the 3rd UI elements
Distance.
This method further includes providing virtual objects on the page for display, and the virtual objects are on the page
Visual guide.This method further includes receiving instruction to position the first UI elements or described second relative to the virtual objects
The user of the instruction of one or more of UI elements inputs, the space between the first UI elements and the 2nd UI elements
Relationship is based on the virtual objects.This method further includes that the final layout of the page is rendered based on the layout data file.
In one or more aspects, in the operation of the final layout, it is described virtual right to be removed from the display on the page
As.
According to the aspect of the disclosure, a method of computer implementation is provided.This method includes providing on the computing device
Layout application for developing UI, wherein the layout application includes the expression of the page.This method includes being connect via layout application
Receive user's input, wherein the user inputs instruction on the page to the placement of two or more user interface elements.It should
Method includes one or more connections between the two or more user interface elements of detection.This method includes being based on institute
One or more connections are stated to determine layout constraint, wherein the layout constraint indicate the two or more UI elements it
Between spatial relationship.This method further includes update layout data file associated with the UI to include the layout constraint.
According to the aspect of the disclosure, a method of computer implementation is provided.This method includes providing on the computing device
Layout application for developing UI, wherein the layout application includes the expression of the page.This method includes that detection is located at the page
The first UI elements on face and one or more connections between the 2nd UI elements, wherein in one or more of connections
Each indicates the layout constraint of the first UI elements and the 2nd UI elements, and wherein, the layout constraint instruction
Spatial relationship between two or more UI elements.This method include determine detected one or more connections whether include
Mistake.This method includes adjusting the layout constraint so that the mistake when the one or more connections detected include mistake
It is accidentally distributed in one or more of connections.This method includes that the layout constraint is supplied to the layout with constraint list
Data file.This method further includes that the final layout of the UI is generated using the layout data file.
In one or more aspects, the example of clause is described below.
A kind of method, including one or more methods, operation or part of it as described herein.
A kind of device, including one or more memories and one or more processors (for example, 110), it is one or
Multiple processors, which are configured such that, executes one or more methods, operation or part of it as described herein.
A kind of device, including one or more memories (for example, 220, one or more internal, external or long-range storages
Device, or one or more register) and be coupled to one or more of memories one or more processors (for example,
212), one or more of processors are configured such that described device execution one or more methods as described herein, behaviour
Work or part of it.
A kind of device, including it is adapted for carrying out one or more methods, operation or part thereof of device (example as described herein
Such as, 110).
A kind of processor (for example, 212), including it is used to execute one or more methods, operation or one as described herein
Partial module.
A kind of hardware device, including be configured as executing one or more methods, operation or part of it as described herein
Circuit (for example, 110).
A kind of device, including it is adapted for carrying out one or more methods, operation or part thereof of device (example as described herein
Such as, 110).
A kind of device, including can be used to execute one or more methods, operation or part thereof of component as described herein
(for example, 110).
It is a kind of including the instruction that wherein stores computer readable storage medium (for example, 220, it is one or more internal, outer
Portion or remote memory or one or more registers), described instruction includes for executing one or more side as described herein
Method or the code of operation.
A kind of computer readable storage medium of store instruction (for example, 220, it is one or more internal, external or remotely deposit
Reservoir or one or more registers), described instruction is when executed by one or more processors so that one or more
A processor executes one or more methods, operation or part of it as described herein.
In one aspect, method can be operation, instruction or function, and vice versa.In one aspect, clause can be changed
Or claim is short to be included in other one or more clauses, one or more words, one or more sentences, one or more
The some or all of words quoted in language, one or more paragraphs and/or one or more claims are (for example, instruction, behaviour
Work, function or component).
It is usually such as various exemplary with regard to its functional descriptions in order to show the interchangeability of hardware and software
Block, module, component, method, the entry of operation, instruction and algorithm.Such functionality is implemented as hardware or software or hard
The combination of part and software depends on applying specific application over the whole system and design constraint.Those skilled in the art can be right
The functionality is realized in each specific application in different ways.
Unless expressly stated, one and only one otherwise are not meant to be to the reference of element in the singular, but
Refer to one or more.For example, " one " module can refer to one or more modules.With " one ", "one", before "the" or " described " are
The element sewed does not exclude the presence of other similar elements without further limiting.
Title and subtitle are intended merely to convenient and use (if any), are not intended to limit the present invention.Word " example
Property " be used to represent as example or diagram.With regard to using for term "comprising", " having " etc., this kind of term is intended to similar
In term " comprising " mode but inclusive because explain " comprising " when being used as transitional word in the claims.It is all
Such as relational terms of " first " and " second " can be used to distinguish an entity or action with another entity or action
It opens, and not necessarily requires or imply any actual this kind of relationship or sequence between these entities or action.
Such as " on the one hand ", " this aspect ", " on the other hand ", " some aspects ", " one or more aspects ", " an implementation
Mode ", " embodiment ", " another embodiment ", " some embodiments ", " one or more embodiments ", " one implements
Example ", " embodiment ", " another embodiment ", " some embodiments ", " one or more embodiments ", " configuration ", " this is matched
Set ", " another configuration ", " some configuration ", " one or more configuration ", " this subject technology ", " the disclosure ", " disclosure " it is short
For the sake of language, its other modification etc. are provided to conveniently, it is not meant to disclosure related with these phrases for this subject technology
It is all configurations that essential or this disclosure is suitable for this subject technology.Disclosure related with these phrases can fit
For all configurations or one or more configurations.Disclosure related with these phrases can provide one or more examples.Such as
The phrase of " aspect " or " some aspects " can refer to one or more aspects, and vice versa, and this be similarly applicable for it is other
Aforementioned phrase.
Before a series of entries phrase at least one of " ... " (wherein term " and " or "or" be used for separating entry
Any one of) modification list rather than each member of list on the whole.At least one of phrase " ... " need not select
Select at least one entry；On the contrary, the phrase allow include at least one of any one entry and/or entry arbitrary combination
At least one of and/or at least one of each entry meaning.As an example, phrase " at least one of A, B and C "
Or each in " at least one of A, B or C " refers to only A, only B or only C；A, the arbitrary combination of B and C；And/or in A, B and C
Each at least one of.
It will be appreciated that disclosed step, operation or the particular order of processing or level are the diagrams of illustrative methods.It removes
It is non-expressly stated otherwise, otherwise it will be appreciated that, step, operation or the particular order of processing or layer can be executed in different order
It is secondary.It may be performed simultaneously some in step, operation or processing.Appended claim to a method (if any) is with exemplary sequence
Each step, operation or the element of processing is presented, is not meant to presented particular order or level.These can be with
Serially, sequence execution linearly, parallel or different.It will be appreciated that the instruction, operation and system can usually integrate together
In single software/hardware product or it is packaged into multiple software/hardware products.
The disclosure is provided so that any person skilled in the art can implement various aspects described herein.In some feelings
Under condition, well-known structure and component are shown in block diagram form, to avoid the concept of this subject technology is obscured.The disclosure provides
The various examples of this subject technology, and this subject technology is not limited to these examples.To the various modifications in terms of these for
It will be apparent for those skilled in the art, and the principles described herein can be applied to other aspects.
Those of ordinary skill in the art are known or elements will be appreciated by later, through the various aspects described in the disclosure
All structure and function equivalents are hereby expressly incorporated into this detailed description herein by reference, and are intended to be covered by the claims.Moreover, this
Any content, which is all not intended to, disclosed in text is dedicated to the public, no matter whether these disclosures are expressly recited in the claims.No
Claim element will be in 35U.S.C. § 112, and the 6th section limits lower explanation, unless the element clearly " is used for ... using phrase
Device " illustrate that element is illustrated using phrase " the step of being used for ... " alternatively, in the case of claim to a method.
Title, background, the brief description of attached drawing, abstract and attached drawing are incorporated at this in the disclosure, and are provided as
The illustrated examples of the disclosure, not as restricted description.Understanding when submission is that they will not be used to limit power
The range or meaning that profit requires.In addition, in detailed description, it can be seen that in order to simplify the purpose of the disclosure, description provides
Illustrated examples, and various features are grouped together in various embodiments.Disclosed method is not construed as
Reflect that theme claimed needs the intention of features more more than the feature being expressly recited in each claim.On the contrary,
As claim is reflected, subject matter is all features less than single disclosed configuration or operation.Claim by
This is incorporated into detailed description, wherein each claim is inherently as individually claimed theme.
Claim is not limited to herein described aspects, but should be endowed consistent with language claims complete
Portion's range, and cover all legal equivalents.It is unsatisfactory for being applicable in specially nevertheless, these claims are all not intended to cover
The theme of the requirement of sharp method should not also explain in this way.
Claims (20)
1. a method of computer implementation, including：
The layout application for developing user interface UI is provided on the computing device, and the layout application includes the expression of the page；
Receive the first user input that instruction positions the instruction of the first UI elements on the page；
Receive the second user input that instruction positions the instruction of the 2nd UI elements on the page；
Receive the third user input of the instruction of connection of the instruction establishment from the 2nd UI elements to the first UI elements；
Based on the connection, the layout of the spatial relationship between instruction the first UI elements and the 2nd UI elements is generated about
Beam；And
The layout constraint is provided in layout data file associated with the UI.
2. computer implemented method as described in claim 1, wherein generating the layout constraint includes：
The connection is mapped to space orientation data and relation data, the space orientation data indicate opposite on the page
In the position of the first UI elements and the 2nd UI elements, the relation data instruction relative to the first UI elements or
One in the 2nd UI elements, the direction relations between the first UI elements and the 2nd UI elements；
Based on the space orientation data and the relation data, the respectively described first UI elements and the 2nd UI elements are true
Fixed coordinate on the page；And
The first UI elements and the 2nd UI elements are provided at identified coordinate for display.
3. computer implemented method as claimed in claim 2, wherein determine that the coordinate includes：
Handle the space orientation data and the relation data；
Based on the processing, determine whether the relation data and the space orientation data obscure, when to the first UI members
When at least one of plain or described 2nd UI elements can calculate more than one potential coordinate set, the relation data and described
Space orientation data are fuzzy；
When determining that the relation data and the space orientation data are not fuzzy, parsed independent of linear equation solver
The relation data and the space orientation data are with the determination coordinate；
When determining that the relation data and the space orientation data are fuzzy, by the relation data and the space orientation number
According to being transformed to one or more linear equations, and by the linear equation solver to one or more of linear equations
It solves with the determination coordinate.
4. computer implemented method as claimed in claim 2, wherein determine that the coordinate includes：
Handle the space orientation data and the relation data；
The relation data and the space orientation data are classified as certain kinds constraint；
Determine certain kinds constraint be it is associated with first class constraint or with the second class different from the first class constraint
Constraint is associated；
When determining that the certain kinds constraint is associated with the first class constraint, parsed independent of linear equation solver
The relation data and the space orientation data are with the determination coordinate；
When determining that the certain kinds constraint is associated with the second class constraint, by the relation data and the space orientation
Data are transformed to one or more linear equations, and by the linear equation solver come to one or more of linear
Equation solution is with the determination coordinate.
5. the computer implemented method as described in aforementioned any claim, wherein the first UI elements include the first anchor,
And the 2nd UI elements include the second anchor, wherein based on establishment from the 2nd UI elements to the first UI elements
Second anchor of the instruction of the connection, the 2nd UI elements is connected to first anchor of the first UI elements.
6. computer implemented method as claimed in claim 5, wherein create from the 2nd UI elements to the first UI
The instruction of the connection of element indicates that first anchor and second anchor occupy the same target position on the page.
7. computer implemented method as claimed in claim 5, wherein create from the 2nd UI elements to the first UI
The instruction of the connection of element indicates the restriction distance between first anchor and second anchor.
8. the computer implemented method as described in any one of claim 5-7, wherein generate the layout constraint packet
It includes：
Determine that the connection includes mistake, the error indication limits first anchor and second anchor is positioned in the page
Target location on face；And
Change one or more dimensions of at least one of the first UI elements or described 2nd UI elements；And
Based on the one or more dimensions changed, amount of error is made to be reduced to predetermined value.
9. it is any in previous claims as described in computer implemented method, further comprise：
Receive the fourth user input that instruction positions the instruction of the 3rd UI elements on the page；
Receive instruction create from the 3rd UI elements to the first UI elements first connection and from the 3rd UI member
Fiveth user input of the element to the instruction of the second connection of the 2nd UI elements；
Determine that the 3rd UI elements relative to the position of the first UI elements and the 2nd UI elements include mistake；
Change the ratio of the amount of error of first connection and the amount of error of second connection；
Based on the ratio changed, the amount of error of the amount of error and second connection of adjustment first connection；
And
The amount of error of amount of error and second connection adjusted based on first connection adjusted, determines described the
The coordinate of three UI elements.
10. computer implemented method as claimed in claim 9, wherein the layout constraint include with from the 3rd UI
Element to the first UI elements first associated first spacing of connection and with from the 3rd UI elements to institute
Associated second spacing of second connection of the 2nd UI elements is stated, first spacing indicates the first UI elements and institute
It states the distance between the 3rd UI elements and second spacing indicates between the 2nd UI elements and the 3rd UI elements
Distance.
11. the computer implemented method as described in aforementioned any claim, further comprises：
Virtual objects are provided on the page for display, and the virtual objects are the visual guides on the page；
It receives and indicates to position one or more in the first UI elements or the 2nd UI elements relative to the virtual objects
The user of a instruction inputs, and the spatial relationship between the first UI elements and the 2nd UI elements is based on the void
Quasi- object；And
The final layout of the page is rendered based on the layout data file,
Wherein, in the operation of the final layout, the virtual objects are removed from the display on the page.
12. a kind of system, including：
One or more processors；
It is coupled to the computer readable storage medium of one or more of processors, the computer readable storage medium includes
Instruction, described instruction make one or more of processors when being executed by one or more of processors：
The layout application for developing user interface UI is provided on the computing device, and the layout application includes the expression of the page；
Instruction is received on the page to input the user of the placement of two or more UI elements；
Determine one or more connections between the two or more UI elements；
Determine that layout constraint, the layout constraint indicate the two or more UI members based on one or more of connections
Spatial relationship between element；And
Update layout data file associated with the UI is to include the layout constraint.
13. system as claimed in claim 12, wherein the user, which inputs, to be indicated in the two or more UI elements
Restriction distance between at least two.
14. system as described in claim 12 or 13, wherein described instruction further makes one or more of processors：
One or more of connect is mapped to space orientation data and relation data, described in the space orientation data instruction
Position on the page relative to the first UI elements and the 2nd UI elements, the relation data instruction is relative to the first UI elements
Or one in the 2nd UI elements, the direction relations between the first UI elements and the 2nd UI elements；
Based on the space orientation data and the relation data, the respectively described first UI elements and the 2nd UI elements are true
Fixed coordinate on the page；And
The first UI elements and the 2nd UI elements are provided at identified coordinate for display.
15. system as claimed in claim 14, wherein described instruction further makes one or more of processors：
Handle the space orientation data and the relation data；
Based on the processing, determine whether the relation data and the space orientation data obscure, when to the first UI members
When at least one of plain or described 2nd UI elements can calculate more than one potential coordinate set, the relation data and described
Space orientation data are fuzzy；
When determining that the relation data and the space orientation data are not fuzzy, parsed independent of linear equation solver
The relation data and the space orientation data are with the determination coordinate；
When determining that the relation data and the space orientation data are fuzzy, by the relation data and the space orientation number
According to being transformed to one or more linear equations, and by the linear equation solver to one or more of linear equations
It solves with the determination coordinate.
16. system as claimed in claim 14, wherein described instruction further makes one or more of processors：
Handle the space orientation data and the relation data；
The relation data and the space orientation data are classified as certain kinds constraint；
Determine certain kinds constraint be it is associated with first class constraint or with the second class different from the first class constraint
Constraint is associated；
When determining that the certain kinds constraint is associated with the first class constraint, parsed independent of linear equation solver
The relation data and the space orientation data are with the determination coordinate；
When determining that the certain kinds constraint is associated with the second class constraint, by the relation data and the space orientation
Data are transformed to one or more linear equations, and by the linear equation solver come to one or more of linear
Equation solution is with the determination coordinate.
17. the system as described in any one of claim 12-17, wherein described instruction further makes one or more
A processor：
Virtual objects are provided on the page for display, and the virtual objects are the visual guides on the page；
Reception instruction positions the instruction of at least one of the two or more UI elements relative to the virtual objects
User inputs, and the spatial relationship between the two or more UI elements is based on the virtual objects；And
The final layout of the page is rendered based on the layout data file,
Wherein, in the operation of the final layout, the virtual objects are removed from the display on the page.
18. a kind of non-transitory computer-readable storage media, including instruction, described instruction make described when executed by the processor
Processor：
The layout application for developing user interface UI is provided on the computing device, and the layout application includes the expression of the page；
Determine one or more connections between the first UI elements and the 2nd UI elements being located on the page, it is one or
Each in multiple connections indicates that the layout constraint of the first UI elements and the 2nd UI elements, the layout constraint refer to
Show the spatial relationship between the first UI elements and the 2nd UI elements；
Determine whether one or more of connections include mistake；
When one or more of connections include mistake, the layout constraint is adjusted so that the error diffusion is one
Or between multiple connections；
The layout constraint is supplied to the layout data file with constraint list；And
The final layout of the UI is generated using the layout data file.
19. non-transitory computer-readable storage media as claimed in claim 18, wherein described instruction further makes described
Processor：
Each in one or more of connections is mapped to indicate the first UI elements and the 2nd UI elements it
Between spatial relationship linear equation；
The linear equation is solved to generate the solution with minimal error amount in one or more of connections；
Based on the linear equation solved, the respectively described first UI elements and the 2nd UI elements determine on the page
Coordinate；And
Identified coordinate is supplied to the layout data file.
20. the non-transitory computer-readable storage media as described in claim 18 or 19, wherein described instruction further makes
The processor：
Virtual objects are provided on the page for display, and the virtual objects are the visual guides on the page；
It receives and indicates to position one or more in the first UI elements or the 2nd UI elements relative to the virtual objects
The user of a instruction inputs, and the spatial relationship between the first UI elements and the 2nd UI elements is based on the void
Quasi- object；And
The final layout of the page is rendered based on the layout data file,
Wherein, in the operation of the final layout, the virtual objects are removed from the display on the page.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202111325406.3A CN114217888A (en) | 2016-05-17 | 2017-04-21 | Constraint-based layout system for efficient layout and control of user interface elements |
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201662337850P | 2016-05-17 | 2016-05-17 | |
US201662337852P | 2016-05-17 | 2016-05-17 | |
US62/337,852 | 2016-05-17 | ||
US62/337,850 | 2016-05-17 | ||
PCT/US2017/028961 WO2017200707A1 (en) | 2016-05-17 | 2017-04-21 | Constraints-based layout system for efficient layout and control of user interface elements |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202111325406.3A Division CN114217888A (en) | 2016-05-17 | 2017-04-21 | Constraint-based layout system for efficient layout and control of user interface elements |
Publications (2)
Publication Number | Publication Date |
---|---|
CN108780401A true CN108780401A (en) | 2018-11-09 |
CN108780401B CN108780401B (en) | 2021-11-16 |
Family
ID=58671931
Family Applications (4)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780016736.XA Active CN108780401B (en) | 2016-05-17 | 2017-04-21 | Constraint-based layout system for efficient layout and control of user interface elements |
CN202111325406.3A Pending CN114217888A (en) | 2016-05-17 | 2017-04-21 | Constraint-based layout system for efficient layout and control of user interface elements |
CN202210514329.4A Pending CN115048088A (en) | 2016-05-17 | 2017-04-21 | System and method for automatically determining layout constraints |
CN201780028151.XA Active CN109074246B (en) | 2016-05-17 | 2017-04-21 | System and method for automatically determining layout constraints |
Family Applications After (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202111325406.3A Pending CN114217888A (en) | 2016-05-17 | 2017-04-21 | Constraint-based layout system for efficient layout and control of user interface elements |
CN202210514329.4A Pending CN115048088A (en) | 2016-05-17 | 2017-04-21 | System and method for automatically determining layout constraints |
CN201780028151.XA Active CN109074246B (en) | 2016-05-17 | 2017-04-21 | System and method for automatically determining layout constraints |
Country Status (4)
Country | Link |
---|---|
US (3) | US10339206B2 (en) |
EP (2) | EP3436933B1 (en) |
CN (4) | CN108780401B (en) |
WO (2) | WO2017200706A1 (en) |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109739501A (en) * | 2018-12-18 | 2019-05-10 | 北京字节跳动网络技术有限公司 | The method, apparatus and electronic equipment of streaming effect are realized in absolute fix layout |
CN110519339A (en) * | 2019-08-08 | 2019-11-29 | 浙江大华技术股份有限公司 | Equipment connection method, device, equipment, system and storage medium |
CN110706314A (en) * | 2019-09-30 | 2020-01-17 | 广东博智林机器人有限公司 | Element layout method and device, electronic equipment and readable storage medium |
CN111258575A (en) * | 2018-11-30 | 2020-06-09 | 阿里健康信息技术有限公司 | Page layout processing method and device |
CN111880889A (en) * | 2020-08-11 | 2020-11-03 | 成都极米科技股份有限公司 | Interface display method and device, electronic equipment and storage medium |
WO2022152159A1 (en) * | 2021-01-14 | 2022-07-21 | 华为技术有限公司 | Adaptive ui constraint solving method and related device |
CN116051627A (en) * | 2023-02-02 | 2023-05-02 | 杭州比智科技有限公司 | Method and system for realizing graphic self-adaption based on svg and Lottie |
Families Citing this family (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10339206B2 (en) * | 2016-05-17 | 2019-07-02 | Wing Aviation Llc | Systems and methods for automatic determination of layout constraints |
CA3024078C (en) | 2016-05-29 | 2024-04-09 | Wix.Com Ltd. | Creation and update of hierarchical websites based on collected business knowledge |
US11042600B1 (en) | 2017-05-30 | 2021-06-22 | Amazon Technologies, Inc. | System for customizing presentation of a webpage |
US10788972B2 (en) | 2017-10-02 | 2020-09-29 | Fisher-Rosemount Systems, Inc. | Systems and methods for automatically populating a display area with historized process parameters |
US10613725B2 (en) * | 2017-10-13 | 2020-04-07 | Adobe Inc. | Fixing spaced relationships between graphic objects |
CN108363572B (en) * | 2018-01-03 | 2021-06-04 | 网易（杭州）网络有限公司 | Method for automatically arranging UI (user interface) |
CN108415703B (en) * | 2018-02-08 | 2022-01-04 | 武汉斗鱼网络科技有限公司 | Interface layout method and device, electronic equipment and storage medium |
CN108509526A (en) * | 2018-03-13 | 2018-09-07 | 百度在线网络技术（北京）有限公司 | The method and apparatus of interface element for Dynamic Distribution's mobile application |
US11320975B2 (en) * | 2018-09-16 | 2022-05-03 | Adobe Inc. | Automatically generating and applying graphical user interface resize-constraints based on design semantics |
CN111176640B (en) * | 2018-11-13 | 2022-05-13 | 武汉斗鱼网络科技有限公司 | Layout level display method, storage medium, device and system in Android engineering |
US11243867B1 (en) * | 2018-12-07 | 2022-02-08 | Amazon Technologies, Inc. | System for federated generation of user interfaces from a set of rules |
US20220107883A1 (en) * | 2018-12-28 | 2022-04-07 | Micro Focus Llc | Automated identification of input elements in a graphical user interface |
CN109783181B (en) * | 2019-01-31 | 2019-12-20 | 掌阅科技股份有限公司 | Screen adaptive display method, electronic device and computer storage medium |
US10949225B2 (en) * | 2019-02-06 | 2021-03-16 | Sap Se | Automatic detection of user interface elements |
CN110188253B (en) * | 2019-05-30 | 2021-09-14 | 北京字节跳动网络技术有限公司 | Information display method and device and storage medium |
US10970904B1 (en) * | 2019-06-21 | 2021-04-06 | Twitch Interactive, Inc. | Interface layout using relative positioning |
CN112230908B (en) * | 2019-07-15 | 2023-05-23 | 腾讯科技（深圳）有限公司 | Method and device for aligning components, electronic equipment and storage medium |
CN112230828B (en) * | 2019-07-15 | 2023-07-25 | 腾讯科技（深圳）有限公司 | Component layout method and device and storage medium |
JP7451106B2 (en) * | 2019-08-08 | 2024-03-18 | キヤノン株式会社 | Information processing device, control method, program and storage medium |
US11269501B2 (en) * | 2019-11-13 | 2022-03-08 | Figma, Inc. | System and method for implementing design system to provide preview of constraint conflicts |
WO2022061027A1 (en) | 2020-09-16 | 2022-03-24 | Figma, Inc. | Interactive graphic design system to enable creation and use of variant component sets for interactive objects |
CN112181412A (en) * | 2020-09-27 | 2021-01-05 | 的卢技术有限公司 | Ui element positioning method, system, electronic equipment and storage medium |
CN112434489B (en) * | 2020-11-24 | 2024-03-12 | 深圳市明源云科技有限公司 | Graph file processing method and device |
CN114327188B (en) * | 2021-12-30 | 2023-10-24 | 北京字跳网络技术有限公司 | Form layout method, form layout device, electronic equipment and computer readable medium |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050094206A1 (en) * | 2003-10-15 | 2005-05-05 | Canon Kabushiki Kaisha | Document layout method |
US20060174194A1 (en) * | 2005-01-31 | 2006-08-03 | Hiroyasu Miyazawa | Layout decision method, apparatus, and program |
US20080120316A1 (en) * | 2006-11-16 | 2008-05-22 | Xerox Corporation | Method for generating presentation oriented XML schemas through a graphical user interface |
US20120124492A1 (en) * | 2010-11-12 | 2012-05-17 | Microsoft Corporation | Display and Resolution of Incompatible Layout Constraints |
US20130194297A1 (en) * | 2012-01-27 | 2013-08-01 | Think-Cell Software Gmbh | Method of solving page layout constraints |
Family Cites Families (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7124359B2 (en) * | 1996-01-11 | 2006-10-17 | Canon Kabushiki Kaisha | Image edit device adapted to rapidly lay-out photographs into templates with means for preview and correction by user |
US6189132B1 (en) * | 1998-04-09 | 2001-02-13 | International Business Machines Corporation | Design rule correction system and method |
US6785866B1 (en) * | 1998-05-01 | 2004-08-31 | Adobe Systems Incorporated | Dialogs for multiple operating systems and multiple languages |
US20070028165A1 (en) * | 2001-04-10 | 2007-02-01 | Lee Cole | Dynamic layout system and processes |
US7010746B2 (en) * | 2002-07-23 | 2006-03-07 | Xerox Corporation | System and method for constraint-based document generation |
US8700988B2 (en) * | 2002-12-20 | 2014-04-15 | Sap Portals Israel Ltd. | Selectively interpreted portal page layout template |
WO2004068320A2 (en) * | 2003-01-27 | 2004-08-12 | Vincent Wen-Jeng Lue | Method and apparatus for adapting web contents to different display area dimensions |
US7522174B2 (en) * | 2003-06-30 | 2009-04-21 | Canon Kabushiki Kaisha | Image processing apparatus, image processing method, program for implementing image processing method, and recording medium recording program |
US7237227B2 (en) * | 2003-06-30 | 2007-06-26 | Siebel Systems, Inc. | Application user interface template with free-form layout |
US7260562B2 (en) * | 2003-06-30 | 2007-08-21 | Intel Corporation | Solutions for constraint satisfaction problems requiring multiple constraints |
US7640516B2 (en) * | 2003-09-30 | 2009-12-29 | Hewlett-Packard Development Company, L.P. | Arranging graphic objects on pages |
ES2328924T3 (en) * | 2003-10-15 | 2009-11-19 | Canon Kabushiki Kaisha | PREVISUALIZATION AND SELECTIVE REVIEW OF DOCUMENTS OR SCHEMES CONTAINING VARIABLE DATA. |
EP1710736A4 (en) * | 2004-01-21 | 2011-11-16 | Metalogic Inc | Constraint condition solving method, constraint condition solving device, and constraint condition solving system |
JP4250540B2 (en) * | 2004-01-30 | 2009-04-08 | キヤノン株式会社 | Layout adjustment method and apparatus, and layout adjustment program |
US20050237321A1 (en) * | 2004-03-31 | 2005-10-27 | Young Kenneth L | Grid canvas |
US7707537B2 (en) * | 2004-06-04 | 2010-04-27 | Cadence Design Systems, Inc. | Method and apparatus for generating layout regions with local preferred directions |
US7565619B2 (en) * | 2004-08-26 | 2009-07-21 | Microsoft Corporation | System and method for automatic item relocating in a user interface layout |
US7348982B2 (en) * | 2004-09-30 | 2008-03-25 | Microsoft Corporation | Method, system, and computer-readable medium for creating and laying out a graphic within an application program |
US7197732B2 (en) * | 2004-12-14 | 2007-03-27 | Fujitsu Limited | Layout-driven, area-constrained design optimization |
JP4298642B2 (en) * | 2004-12-14 | 2009-07-22 | キヤノン株式会社 | Layout processing method, layout processing apparatus, and layout processing program |
US7581169B2 (en) * | 2005-01-14 | 2009-08-25 | Nicholas James Thomson | Method and apparatus for form automatic layout |
JP4522280B2 (en) * | 2005-02-04 | 2010-08-11 | キヤノン株式会社 | Information processing apparatus, control method therefor, and program |
US20060200759A1 (en) * | 2005-03-04 | 2006-09-07 | Microsoft Corporation | Techniques for generating the layout of visual content |
US20060225037A1 (en) * | 2005-03-30 | 2006-10-05 | Microsoft Corporation | Enabling UI template customization and reuse through parameterization |
US7496888B2 (en) * | 2005-04-07 | 2009-02-24 | International Business Machines Corporation | Solution builder wizard |
US8560952B2 (en) * | 2005-06-13 | 2013-10-15 | Microsoft Corporation | Adding an arbitrary number of placeholders to a custom layout |
JP4732029B2 (en) * | 2005-06-29 | 2011-07-27 | キヤノン株式会社 | Layout determining method, information processing apparatus, and layout determining program |
US7836397B2 (en) * | 2006-02-01 | 2010-11-16 | Xerox Corporation | Automatic layout criterion selection |
US7971154B2 (en) * | 2006-02-16 | 2011-06-28 | Microsoft Corporation | Text box numbering and linking visual aids |
US7788579B2 (en) | 2006-03-06 | 2010-08-31 | Ricoh Co., Ltd. | Automated document layout design |
JP4530419B2 (en) * | 2006-03-09 | 2010-08-25 | 任天堂株式会社 | Coordinate calculation apparatus and coordinate calculation program |
US20070266307A1 (en) * | 2006-05-15 | 2007-11-15 | Microsoft Corporation Microsoft Patent Group | Auto-layout of shapes |
US8131576B2 (en) * | 2006-06-02 | 2012-03-06 | International Business Machines Corporation | Method and system for identifying conflicting constraints in mixed integer programs |
US7823116B2 (en) * | 2006-07-17 | 2010-10-26 | Syncira Corporation | Hierarchical analog layout synthesis and optimization for integrated circuits |
US7668400B2 (en) * | 2006-07-31 | 2010-02-23 | Hewlett-Packard Development Company, L.P. | Image layout constraint generation |
AU2007201652B2 (en) * | 2007-04-13 | 2010-09-02 | Canon Kabushiki Kaisha | Laying out graphical elements on a page |
US20090254814A1 (en) * | 2008-04-08 | 2009-10-08 | Microsoft Corporation | Per-edge rules and constraints-based layout mechanism |
US20090265611A1 (en) * | 2008-04-18 | 2009-10-22 | Yahoo ! Inc. | Web page layout optimization using section importance |
US8161384B2 (en) * | 2009-04-23 | 2012-04-17 | Hewlett-Packard Development Company, L.P. | Arranging graphic objects on a page with text |
US8866818B2 (en) * | 2009-06-19 | 2014-10-21 | Microsoft Corporation | Composing shapes and data series in geometries |
CN102081681A (en) * | 2009-11-26 | 2011-06-01 | 英业达股份有限公司 | Circuit layout system and method with layout confining region planning function |
US9405449B2 (en) * | 2010-01-14 | 2016-08-02 | Microsoft Technology Licensing, Llc | Layout constraint manipulation via user gesture recognition |
US20110197124A1 (en) * | 2010-02-05 | 2011-08-11 | Bryan Eli Garaventa | Automatic Creation And Management Of Dynamic Content |
JP5533119B2 (en) | 2010-03-25 | 2014-06-25 | 富士通株式会社 | Layout design apparatus, layout design method, and layout design program |
US9183185B2 (en) * | 2010-07-29 | 2015-11-10 | Hewlett-Packard Development Company, L.P. | Inserting content and exclusion zone(s) into a page |
US9679404B2 (en) * | 2010-12-23 | 2017-06-13 | Microsoft Technology Licensing, Llc | Techniques for dynamic layout of presentation tiles on a grid |
US9141346B2 (en) * | 2011-05-12 | 2015-09-22 | Google Inc. | Layout management in a rapid application development tool |
US8599217B1 (en) * | 2011-09-30 | 2013-12-03 | Google Inc. | Methods and apparatus for reordering of rows and columns in layout grids |
CN102436381B (en) * | 2011-11-15 | 2018-09-28 | 南京中兴软件有限责任公司 | A kind of generation method and device of interface layout |
US9418068B2 (en) * | 2012-01-27 | 2016-08-16 | Microsoft Technology Licensing, Llc | Dimensional conversion in presentations |
US8839174B2 (en) * | 2012-01-31 | 2014-09-16 | Mentor Graphics Corporation | Placement and area adjustment for hierarchical groups in printed circuit board design |
US8650529B2 (en) | 2012-02-07 | 2014-02-11 | Texas Instruments Incorporated | System and method for integrated circuit layout editing with asymmetric zoom views |
US10789412B2 (en) * | 2012-02-20 | 2020-09-29 | Wix.Com Ltd. | System and method for extended dynamic layout |
US20150012818A1 (en) * | 2013-07-07 | 2015-01-08 | Ana Rink | System and method for semantics-concise interactive visual website design |
US20150242374A1 (en) * | 2014-02-27 | 2015-08-27 | Styla GmbH | Automatic layout technology |
US9436445B2 (en) * | 2014-06-23 | 2016-09-06 | Vmware, Inc. | Drag-and-drop functionality for scalable vector graphics |
WO2016043729A1 (en) * | 2014-09-17 | 2016-03-24 | Hewlett Packard Enterprise Development Lp | User interface layout comparison |
US9880634B2 (en) * | 2015-03-20 | 2018-01-30 | Optim Corporation | Gesture input apparatus, gesture input method, and program for wearable terminal |
US10241975B2 (en) * | 2015-04-02 | 2019-03-26 | Apple Inc. | Dynamically determining arrangement of a layout |
US11048484B2 (en) * | 2015-10-09 | 2021-06-29 | Oracle International Corporation | Automated responsive grid-based layout design system |
CN105468382B (en) * | 2016-02-01 | 2019-08-06 | 浙江慧脑信息科技有限公司 | A kind of programmed method of self-adaptive layout |
US10339206B2 (en) * | 2016-05-17 | 2019-07-02 | Wing Aviation Llc | Systems and methods for automatic determination of layout constraints |
-
2017
- 2017-04-21 US US15/494,357 patent/US10339206B2/en active Active
- 2017-04-21 EP EP17721928.4A patent/EP3436933B1/en active Active
- 2017-04-21 CN CN201780016736.XA patent/CN108780401B/en active Active
- 2017-04-21 CN CN202111325406.3A patent/CN114217888A/en active Pending
- 2017-04-21 WO PCT/US2017/028960 patent/WO2017200706A1/en active Application Filing
- 2017-04-21 US US15/494,349 patent/US11030386B2/en active Active
- 2017-04-21 WO PCT/US2017/028961 patent/WO2017200707A1/en active Application Filing
- 2017-04-21 CN CN202210514329.4A patent/CN115048088A/en active Pending
- 2017-04-21 CN CN201780028151.XA patent/CN109074246B/en active Active
- 2017-04-21 EP EP17721929.2A patent/EP3400526A1/en not_active Withdrawn
-
2020
- 2020-12-21 US US17/129,207 patent/US20210150119A1/en active Pending
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050094206A1 (en) * | 2003-10-15 | 2005-05-05 | Canon Kabushiki Kaisha | Document layout method |
US20060174194A1 (en) * | 2005-01-31 | 2006-08-03 | Hiroyasu Miyazawa | Layout decision method, apparatus, and program |
US20080120316A1 (en) * | 2006-11-16 | 2008-05-22 | Xerox Corporation | Method for generating presentation oriented XML schemas through a graphical user interface |
US20120124492A1 (en) * | 2010-11-12 | 2012-05-17 | Microsoft Corporation | Display and Resolution of Incompatible Layout Constraints |
US20130194297A1 (en) * | 2012-01-27 | 2013-08-01 | Think-Cell Software Gmbh | Method of solving page layout constraints |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN111258575A (en) * | 2018-11-30 | 2020-06-09 | 阿里健康信息技术有限公司 | Page layout processing method and device |
CN111258575B (en) * | 2018-11-30 | 2023-09-15 | 阿里健康信息技术有限公司 | Page layout processing method and device |
CN109739501A (en) * | 2018-12-18 | 2019-05-10 | 北京字节跳动网络技术有限公司 | The method, apparatus and electronic equipment of streaming effect are realized in absolute fix layout |
CN110519339A (en) * | 2019-08-08 | 2019-11-29 | 浙江大华技术股份有限公司 | Equipment connection method, device, equipment, system and storage medium |
CN110519339B (en) * | 2019-08-08 | 2022-04-08 | 浙江大华技术股份有限公司 | Device connection method, device, system and storage medium |
CN110706314A (en) * | 2019-09-30 | 2020-01-17 | 广东博智林机器人有限公司 | Element layout method and device, electronic equipment and readable storage medium |
CN110706314B (en) * | 2019-09-30 | 2023-04-07 | 广东博智林机器人有限公司 | Element layout method and device, electronic equipment and readable storage medium |
CN111880889A (en) * | 2020-08-11 | 2020-11-03 | 成都极米科技股份有限公司 | Interface display method and device, electronic equipment and storage medium |
CN111880889B (en) * | 2020-08-11 | 2023-08-08 | 成都极米科技股份有限公司 | Interface display method and device, electronic equipment and storage medium |
WO2022152159A1 (en) * | 2021-01-14 | 2022-07-21 | 华为技术有限公司 | Adaptive ui constraint solving method and related device |
CN116051627A (en) * | 2023-02-02 | 2023-05-02 | 杭州比智科技有限公司 | Method and system for realizing graphic self-adaption based on svg and Lottie |
CN116051627B (en) * | 2023-02-02 | 2023-06-13 | 杭州比智科技有限公司 | Method and system for realizing graphic self-adaption based on svg and Lottie |
Also Published As
Publication number | Publication date |
---|---|
US20210150119A1 (en) | 2021-05-20 |
US20170337321A1 (en) | 2017-11-23 |
US20170337161A1 (en) | 2017-11-23 |
CN109074246A (en) | 2018-12-21 |
CN114217888A (en) | 2022-03-22 |
US10339206B2 (en) | 2019-07-02 |
CN108780401B (en) | 2021-11-16 |
CN115048088A (en) | 2022-09-13 |
EP3436933A1 (en) | 2019-02-06 |
WO2017200706A1 (en) | 2017-11-23 |
WO2017200707A1 (en) | 2017-11-23 |
EP3436933B1 (en) | 2019-08-07 |
CN109074246B (en) | 2022-05-24 |
US11030386B2 (en) | 2021-06-08 |
EP3400526A1 (en) | 2018-11-14 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108780401A (en) | The layout system based on constraint of efficient layout and control for user interface element | |
Forward et al. | Model‐driven rapid prototyping with Umple | |
CN105144672A (en) | Dynamic presentation prototyping and generation | |
Dörner et al. | Content creation and authoring challenges for virtual environments: from user interfaces to autonomous virtual characters | |
Pacheco et al. | Improving collaboration efficiency between UX/UI designers and developers in a low-code platform | |
Weaver et al. | Pro JavaFX 2: A Definitive Guide to Rich Clients with Java Technology | |
AU2014100798A4 (en) | A visual role and transition based method and system for developing complex web applications | |
Heydt | D3. js by example | |
Wolff et al. | Deriving user interfaces from task models | |
Escott et al. | Design patterns for angular hotdraw | |
Grinev | Mastering JavaFX 10: Build advanced and visually stunning Java applications | |
Zou | A customization framework for the SVG Graph Visualization Engine | |
Nelli | Beginning JavaScript Charts: With jqPlot, d3, and Highcharts | |
Zhang | Visualization framework for verification tools with graph output | |
Gjesdal | A Modular Integrated Development Environment for Coloured Petri Net Models | |
Usmani | GUIDELINES FOR SELECTION OF WEB DESIGNING TOOL & FRAMEWORK FOR WEB FRONT-END APPLICATION | |
Čepa | Vizualizace informace na webu | |
Čepa | Visualizing Information on the Web | |
Andrunyk et al. | Information System for Finding Inclusive Places for People with Disabilities. | |
Larchevêque et al. | Telescope: A high-level model to build dynamic visualizations | |
Sekulovski | Cross-platform mobile application generation with a model-driven approach based on IFML and cross-compilation | |
Lucansky | Portlet for the Visualization of Network Topology | |
Freeman et al. | Using Animation | |
Brüggemann-Klein et al. | Graphical User Interface Tool forDesigningModel-BasedUserInterfaces with UIML | |
Aufreiter | Web-based information visualization |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |